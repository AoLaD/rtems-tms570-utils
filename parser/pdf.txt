

TMS570LS31x/21x16/32-BitRISCFlash

Microcontroller

TechnicalReferenceManual

LiteratureNumber:SPNU499B

November2012–RevisedAugust2013






Contents

Preface......................................................................................................................................90

1Introduction......................................................................................................................91

1.1DesignedforSafetyApplications........................................................................................92

1.2FamilyDescription.........................................................................................................92

1.3EndianismConsiderations................................................................................................95

1.3.1TMS570:BigEndian(BE32)....................................................................................95

2Architecture......................................................................................................................96

2.1Introduction.................................................................................................................97

2.1.1ArchitectureBlockDiagram.....................................................................................97

2.1.2DefinitionsofTerms..............................................................................................98

2.1.3BusMaster/SlaveAccessPrivileges........................................................................100

2.2MemoryOrganization....................................................................................................101

2.2.1MemoryMapOverview.........................................................................................101

2.2.2MemoryMapTable.............................................................................................102

2.2.3FlashMemory...................................................................................................106

2.2.4On-ChipSRAM..................................................................................................108

2.3Exceptions................................................................................................................113

2.3.1Resets............................................................................................................113

2.3.2Aborts.............................................................................................................113

2.3.3SystemSoftwareInterrupts....................................................................................115

2.4Clocks.....................................................................................................................116

2.4.1ClockSources...................................................................................................116

2.4.2ClockDomains..................................................................................................117

2.4.3LowPowerModes..............................................................................................119

2.4.4ClockTestMode................................................................................................121

2.4.5SafetyConsiderationsforClocks.............................................................................122

2.5SystemandPeripheralControlRegisters............................................................................124

2.5.1PrimarySystemControlRegisters(SYS)....................................................................124

2.5.2SecondarySystemControlRegisters(SYS2)...............................................................175

2.5.3PeripheralCentralResource(PCR)ControlRegisters....................................................182

3PowerManagementModule(PMM)....................................................................................197

3.1Overview..................................................................................................................198

3.1.1MainFeaturesofthePowerManagementModule(PMM)................................................198

3.1.2BlockDiagram...................................................................................................198

3.2PowerDomains..........................................................................................................200

3.3PMMOperation...........................................................................................................202

3.3.1PowerSwitch....................................................................................................202

3.3.2PowerDomainState............................................................................................202

3.3.3DefaultPowerDomainState..................................................................................202

3.3.4DisablingaPowerDomainPermanently.....................................................................202

3.3.5ChangingPowerDomainState...............................................................................202

3.3.6ResetManagement.............................................................................................203

3.3.7DiagnosticPowerStateController(PSCON)................................................................203

3.3.8PSCONCompareBlock........................................................................................203

3.4PMMRegisters...........................................................................................................205

2

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

3.4.1LogicPowerDomainControlRegister(LOGICPDPWRCTRL0)..........................................206

3.4.2MemoryPowerDomainControlRegister0(MEMPDPWRCTRL0)......................................207

3.4.3PowerDomainClockDisableRegister(PDCLKDISREG).................................................208

3.4.4PowerDomainClockDisableSetRegister(PDCLKDISSETREG)......................................209

3.4.5PowerDomainClockDisableClearRegister(PDCLKDISCLRREG)....................................210

3.4.6LogicPowerDomainPD2PowerStatusRegister(LOGICPDPWRSTAT0)............................211

3.4.7LogicPowerDomainPD3PowerStatusRegister(LOGICPDPWRSTAT1)............................212

3.4.8LogicPowerDomainPD4PowerStatusRegister(LOGICPDPWRSTAT2)............................213

3.4.9LogicPowerDomainPD5PowerStatusRegister(LOGICPDPWRSTAT3)............................214

3.4.10MemoryPowerDomainRAM_PD1PowerStatusRegister(MEMPDPWRSTAT0)..................215

3.4.11MemoryPowerDomainRAM_PD2PowerStatusRegister(MEMPDPWRSTAT1)..................216

3.4.12MemoryPowerDomainRAM_PD3PowerStatusRegister(MEMPDPWRSTAT2)..................217

3.4.13GlobalControlRegister1(GLOBALCTRL1)...............................................................218

3.4.14GlobalStatusRegister(GLOBALSTAT)....................................................................219

3.4.15PSCONDiagnosticCompareKeyRegister(PRCKEYREG).............................................219

3.4.16LogicPDPSCONDiagnosticCompareStatusRegister1(LPDDCSTAT1)............................220

3.4.17LogicPDPSCONDiagnosticCompareStatusRegister2(LPDDCSTAT2)............................221

3.4.18MemoryPDPSCONDiagnosticCompareStatusRegister1(MPDDCSTAT1).......................222

3.4.19MemoryPDPSCONDiagnosticCompareStatusRegister2(MPDDCSTAT2).......................223

3.4.20IsolationDiagnosticStatusRegister(ISODIAGSTAT)....................................................224

4I/OMultiplexingandControlModule(IOMM).......................................................................225

4.1Overview..................................................................................................................226

4.2MainFeaturesofI/OMultiplexingModule(IOMM)..................................................................226

4.3ControlofMultiplexedFunctions.......................................................................................226

4.3.1ControlofMultiplexedOutputs................................................................................226

4.3.2ControlofMultiplexedInputs..................................................................................227

4.3.3ControlofSpecialMultiplexedOptions......................................................................229

4.4SafetyFeatures..........................................................................................................230

4.4.1LockingMechanismforMemory-MappedRegisters.......................................................230

4.4.2MasterIDCheck................................................................................................230

4.4.3ErrorConditions.................................................................................................230

4.5IOMMRegisters..........................................................................................................231

4.5.1REVISION_REG:RevisionRegister.........................................................................231

4.5.2ENDIAN_REG:DeviceEndiannessRegister...............................................................232

4.5.3KICK_REG0:KickerRegister0...............................................................................233

4.5.4KICK_REG1:KickerRegister1...............................................................................233

4.5.5ERR_RAW_STATUS_REG:ErrorRawStatus/SetRegister............................................234

4.5.6ERR_ENABLED_STATUS_REG:ErrorEnabledStatus/ClearRegister...............................235

4.5.7ERR_ENABLE_REG:ErrorSignalingEnableRegister....................................................236

4.5.8ERR_ENABLE_CLR_REG:ErrorSignalingEnableClearRegister......................................237

4.5.9FAULT_ADDRESS_REG:FaultAddressRegister.........................................................237

4.5.10FAULT_STATUS_REG:FaultStatusRegister............................................................238

4.5.11FAULT_CLEAR_REG:FaultClearRegister...............................................................239

4.5.12PINMMRnn:PinMultiplexingControlRegisters...........................................................239

4.6SignalMultiplexingandControl........................................................................................240

5F021FlashModuleController............................................................................................245

5.1Overview..................................................................................................................246

5.1.1Features..........................................................................................................246

5.1.2DefinitionofTerms..............................................................................................246

5.1.3F021FlashTools................................................................................................247

5.2DefaultFlashConfiguration.............................................................................................247

5.3SECDED..................................................................................................................248

5.3.1SECDEDInitialization..........................................................................................248

3

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

5.3.2ECCEncoding...................................................................................................249

5.3.3SyndromeTable:DecodetoBitinError.....................................................................250

5.3.4SyndromeTable:AnAlternateMethod......................................................................251

5.4MemoryMap..............................................................................................................252

5.4.1LocationofFlashECCbits....................................................................................252

5.4.2OTPMemory....................................................................................................253

5.5PowerOn,PowerOff,andResetConsiderations...................................................................256

5.5.1ErrorCheckingatPowerOn..................................................................................256

5.5.2FlashIntegritywhenResetwhileProgrammingorErasing...............................................256

5.5.3FlashIntegrityatPowerOff....................................................................................256

5.6EmulationandSIL3DiagnosticModes...............................................................................256

5.6.1SystemEmulation...............................................................................................256

5.6.2DiagnosticMode................................................................................................256

5.6.3DiagnosticModeSummary....................................................................................260

5.6.4ReadMargin.....................................................................................................261

5.7ControlRegisters.........................................................................................................261

5.7.1FlashOptionControlRegister(FRDCNTL)..................................................................263

5.7.2FlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1).............................264

5.7.3FlashErrorCorrectionandCorrectionControlRegister2(FEDACCTRL2)............................266

5.7.4FlashCorrectableErrorCountRegister(FCOR_ERR_CNT).............................................266

5.7.5FlashCorrectableErrorAddressRegister(FCOR_ERR_ADD)..........................................267

5.7.6FlashCorrectableErrorPositionRegister(FCOR_ERR_POS)..........................................268

5.7.7FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)...............................269

5.7.8FlashUn-CorrectableErrorAddressRegister(FUNC_ERR_ADD)......................................271

5.7.9FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS).........................272

5.7.10PrimaryAddressTagRegister(FPRIM_ADD_TAG)......................................................273

5.7.11DuplicateAddressTagRegister(FDUP_ADD_TAG).....................................................273

5.7.12FlashBankProtectionRegister(FBPROT)................................................................274

5.7.13FlashBankSectorEnableRegister(FBSE)................................................................274

5.7.14FlashBankBusyRegister(FBBUSY).......................................................................275

5.7.15FlashBankAccessControlRegister(FBAC)..............................................................276

5.7.16FlashBankFallbackPowerRegister(FBFALLBACK)....................................................277

5.7.17FlashBank/PumpReadyRegister(FBPRDY).............................................................278

5.7.18FlashPumpAccessControlRegister1(FPAC1).........................................................279

5.7.19FlashPumpAccessControlRegister2(FPAC2).........................................................280

5.7.20FlashModuleAccessControlRegister(FMAC)...........................................................280

5.7.21FlashModuleStatusRegister(FMSTAT)..................................................................281

5.7.22EEPROMEmulationDataMSWRegister(FEMU_DMSW)..............................................283

5.7.23EEPROMEmulationDataLSWRegister(FEMU_DLSW)...............................................283

5.7.24EEPROMEmulationECCRegister(FEMU_ECC)........................................................284

5.7.25EEPROMEmulationAddressRegister(FEMU_ADDR)..................................................285

5.7.26DiagnosticControlRegister(FDIAGCTRL).................................................................286

5.7.27UncorrectedRawDataHighRegister(FRAW_DATAH)..................................................288

5.7.28UncorrectedRawDataLowRegister(FRAW_DATAL)...................................................289

5.7.29UncorrectedRawECCRegister(FRAW_ECC)...........................................................290

5.7.30ParityOverrideRegister(FPAR_OVR).....................................................................291

5.7.31FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS2)......................292

5.7.32FSMRegisterWriteEnable(FSM_WR_ENA).............................................................293

5.7.33FSMSectorRegister(FSM_SECTOR).....................................................................293

5.7.34EEPROMEmulationConfigurationRegister(EEPROM_CONFIG).....................................294

5.7.35EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)..............295

5.7.36EEPROMEmulationErrorCorrectionandCorrectionControlRegister2(EE_CTRL2).............297

5.7.37EEPROMEmulationCorrectableErrorCountRegister(EE_COR_ERR_CNT).......................297

4

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

5.7.38EEPROMEmulationCorrectableErrorAddressRegister(EE_COR_ERR_ADD)....................298

5.7.39EEPROMEmulationCorrectableErrorPositionRegister(EE_COR_ERR_POS)....................299

5.7.40EEPROMEmulationErrorStatusRegister(EE_STATUS)..............................................300

5.7.41EEPROMEmulationUn-CorrectableErrorAddressRegister(EE_UNC_ERR_ADD)...............301

5.7.42FlashBankConfigurationRegister(FCFG_BANK).......................................................302

6Tightly-CoupledRAM(TCRAM)Module..............................................................................303

6.1Overview..................................................................................................................304

6.1.1B0TCMandB1TCMConnectionDiagram...................................................................304

6.1.2MainFeatures...................................................................................................304

6.2RAMMemoryMap.......................................................................................................305

6.3SafetyFeatures..........................................................................................................306

6.3.1SupportforCortex-R4FCPU'sSingle-Error-CorrectionDouble-Error-Detection(SECDED).........306

6.3.2SupportforCortex-R4FCPU'sAddressandControlBusParityChecking.............................307

6.3.3RedundantAddressDecode..................................................................................307

6.4TCRAMAuto-Initialization...............................................................................................307

6.5TraceModuleSupport...................................................................................................308

6.6Emulation/DebugModeBehavior....................................................................................308

6.7ControlandStatusRegisters...........................................................................................308

6.7.1TCRAMModuleControlRegister(RAMCTRL).............................................................309

6.7.2TCRAMModuleSingle-BitErrorCorrectionThresholdRegister(RAMTHRESHOLD)................310

6.7.3TCRAMModuleSingle-BitErrorOccurrencesCounterRegister(RAMOCCUR)......................311

6.7.4TCRAMModuleInterruptControlRegister(RAMINTCTRL)..............................................311

6.7.5TCRAMModuleErrorStatusRegister(RAMERRSTATUS)..............................................312

6.7.6TCRAMModuleSingle-BitErrorAddressRegister(RAMSERRADDR).................................313

6.7.7TCRAMModuleUncorrectableErrorAddressRegister(RAMUERRADDR)...........................314

6.7.8TCRAMModuleTestModeControlRegister(RAMTEST)................................................315

6.7.9TCRAMModuleTestModeVectorRegister(RAMADDRDECVECT)...................................316

6.7.10TCRAMModuleParityErrorAddressRegister(RAMPERRADDR)....................................316

7ProgrammableBuilt-InSelf-Test(PBIST)Module.................................................................317

7.1Overview..................................................................................................................318

7.1.1FeaturesofPBIST..............................................................................................318

7.1.2PBISTvs.ApplicationSoftware-BasedTesting.............................................................318

7.1.3PBISTBlockDiagram..........................................................................................318

7.2RAMGroupingandAlgorithm..........................................................................................319

7.3PBISTFlow...............................................................................................................320

7.3.1PBISTSequence................................................................................................321

7.4MemoryTestAlgorithmsontheOn-chipROM......................................................................322

7.5PBISTControlRegisters................................................................................................324

7.5.1RAMConfigurationRegister(RAMT).........................................................................325

7.5.2DataloggerRegister(DLR)....................................................................................326

7.5.3PBISTActivate/ROMClockEnableRegister(PACT)......................................................327

7.5.4PBISTIDRegister..............................................................................................328

7.5.5OverrideRegister(OVER).....................................................................................328

7.5.6FailStatusFailRegister(FSRF0)............................................................................329

7.5.7FailStatusCountRegisters(FSRC0andFSRC1).........................................................330

7.5.8FailStatusAddressRegisters(FSRA0andFSRA1).......................................................331

7.5.9FailStatusDataRegisters(FSRDL0andFSRDL1)........................................................332

7.5.10ROMMaskRegister(ROM)..................................................................................333

7.5.11ROMAlgorithmMaskRegister(ALGO).....................................................................333

7.5.12RAMInfoMaskLowerRegister(RINFOL).................................................................334

7.5.13RAMInfoMaskUpperRegister(RINFOU).................................................................335

7.6PBISTConfigurationExample..........................................................................................336

7.6.1Example1:ConfigurationofPBISTControllertoRunSelf-TestonRAMGroup3...................336

5

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

7.6.2Example2:ConfigurationofPBISTControllertoRunSelf-TestonALLRAMGroups...............337

8CPUSelf-TestController(STC)Module..............................................................................338

8.1GeneralDescription......................................................................................................339

8.1.1CPUSelf-TestControllerFeatures...........................................................................339

8.1.2STCBlockDiagram.............................................................................................339

8.2ApplicationSelf-TestFlow..............................................................................................341

8.2.1STCModuleConfiguration.....................................................................................341

8.2.2ContextSaving..................................................................................................341

8.2.3EnteringCPUIdleMode.......................................................................................341

8.2.4Self-TestCompletionandErrorGeneration.................................................................341

8.3STCTestCoverageandDuration.....................................................................................343

8.4STCControlRegisters..................................................................................................344

8.4.1STCGlobalControlRegister0(STCGCR0)................................................................345

8.4.2STCGlobalControlRegister1(STCGCR1)................................................................345

8.4.3Self-TestRunTimeoutCounterPreloadRegister(STCTPR).............................................346

8.4.4STCCurrentROMAddressRegister(STC_CADDR)......................................................346

8.4.5STCCurrentIntervalCountRegister(STCCICR)..........................................................347

8.4.6Self-TestGlobalStatusRegister(STCGSTAT).............................................................347

8.4.7Self-TestFailStatusRegister(STCFSTAT).................................................................348

8.4.8CPU1CurrentMISRRegister(CPU1_CURMISR[3:0])....................................................349

8.4.9CPU2_CURMISR[3:0](CPU2CurrentMISRRegister)....................................................350

8.4.10STCSCSCR(SignatureCompareSelf-CheckRegister)..................................................351

8.5STCConfigurationExample............................................................................................352

8.5.1Example1:Self-TestRunfor24Interval....................................................................352

9CPUCompareModuleforCortexTM-R4F(CCM-R4F).............................................................353

9.1MainFeatures............................................................................................................354

9.2BlockDiagram............................................................................................................354

9.3ModuleOperation........................................................................................................355

9.3.11oo1DLockStepMode........................................................................................355

9.3.2Self-TestMode..................................................................................................355

9.3.3ErrorForcingMode.............................................................................................357

9.3.4Self-TestErrorForcingMode..................................................................................357

9.3.5OperationDuringCPUDebugMode.........................................................................358

9.4ControlRegisters.........................................................................................................358

9.4.1CCM-R4FStatusRegister(CCMSR).........................................................................359

9.4.2CCM-R4FKeyRegister(CCMKEYR)........................................................................360

10OscillatorandPLL...........................................................................................................361

10.1Introduction...............................................................................................................362

10.1.1Features.........................................................................................................362

10.2QuickStart................................................................................................................363

10.3Oscillator..................................................................................................................364

10.3.1OscillatorImplementation.....................................................................................365

10.3.2OscillatorEnable...............................................................................................365

10.3.3OscillatorDisable..............................................................................................365

10.4LowPowerOscillatorandClockDetect(LPOCLKDET)............................................................366

10.4.1ClockDetect....................................................................................................366

10.4.2BehavioronOscillatorFailure................................................................................366

10.4.3RecoveryfromOscillatorFailure.............................................................................367

10.4.4LPOCLKDETEnable..........................................................................................367

10.4.5LPOCLKDETDisable..........................................................................................368

10.4.6TrimmingtheHFLPOOscillator.............................................................................368

10.5PLL.........................................................................................................................369

10.5.1Modulation......................................................................................................370

6

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

10.5.2PLLOutputControl............................................................................................371

10.5.3BehavioronPLLFail..........................................................................................374

10.5.4RecoveryfromaPLLFailure.................................................................................375

10.5.5PLLModulationDepthMeasurement.......................................................................375

10.5.6PLLFrequencyMeasurementCircuit.......................................................................376

10.5.7PLL2.............................................................................................................376

10.6ControlRegisters.........................................................................................................377

10.6.1PLLModulationDepthMeasurementControlRegister(SSWPLL1)....................................378

10.6.2SSWPLLBISTControlRegister2(SSWPLL2)...........................................................379

10.6.3SSWPLLBISTControlRegister3(SSWPLL3)...........................................................380

10.7Phase-LockedLoopTheoryofOperation............................................................................381

10.7.1Phase-FrequencyDetector...................................................................................381

10.7.2ChargePumpandLoopFilter................................................................................382

10.7.3Voltage-ControlledOscillator.................................................................................382

10.7.4FrequencyModulation.........................................................................................383

10.8ProgrammingExample..................................................................................................384

11Dual-ClockComparator(DCC)Module................................................................................386

11.1Introduction...............................................................................................................387

11.1.1MainFeatures..................................................................................................387

11.1.2BlockDiagram..................................................................................................387

11.2ModuleOperation........................................................................................................388

11.2.1ContinuousMonitoringMode.................................................................................388

11.2.2Single-ShotMeasurementMode.............................................................................391

11.3ClockSourceSelectionforCounter0andCounter1................................................................392

11.4DCCControlRegisters..................................................................................................393

11.4.1DCCGlobalControlRegister(DCCGCTRL)...............................................................394

11.4.2DCCRevisionIdRegister(DCCREV)......................................................................395

11.4.3DCCCounter0SeedRegister(DCCCNT0SEED).........................................................395

11.4.4DCCValid0SeedRegister(DCCVALID0SEED)..........................................................396

11.4.5DCCCounter1SeedRegister(DCCCNT1SEED).........................................................396

11.4.6DCCStatusRegister(DCCSTAT)...........................................................................397

11.4.7DCCCounter0ValueRegister(DCCCNT0)................................................................397

11.4.8DCCValid0ValueRegister(DCCVALID0).................................................................398

11.4.9DCCCounter1ValueRegister(DCCCNT1)................................................................398

11.4.10DCCCounter1ClockSourceSelectionRegister(DCCCNT1CLKSRC)..............................399

11.4.11DCCCounter0ClockSourceSelectionRegister(DCCCNT0CLKSRC)..............................399

12ErrorSignalingModule(ESM)...........................................................................................400

12.1Overview..................................................................................................................401

12.1.1FeatureList.....................................................................................................401

12.1.2BlockDiagram..................................................................................................401

12.2ModuleOperation........................................................................................................403

12.2.1ResetBehavior.................................................................................................403

12.2.2ERRORPinTiming............................................................................................403

12.2.3ForcinganErrorCondition....................................................................................405

12.3RecommendedProgrammingProcedure.............................................................................406

12.4ControlRegisters.........................................................................................................407

12.4.1ESMEnableERRORPinAction/ResponseRegister1(ESMEEPAPR1)..............................408

12.4.2ESMDisableERRORPinAction/ResponseRegister1(ESMDEPAPR1).............................408

12.4.3ESMInterruptEnableSet/StatusRegister1(ESMIESR1)...............................................409

12.4.4ESMInterruptEnableClear/StatusRegister1(ESMIECR1)............................................409

12.4.5ESMInterruptLevelSet/StatusRegister1(ESMILSR1).................................................410

12.4.6ESMInterruptLevelClear/StatusRegister1(ESMILCR1)...............................................410

12.4.7ESMStatusRegister1(ESMSR1)..........................................................................411

7

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

12.4.8ESMStatusRegister2(ESMSR2)..........................................................................411

12.4.9ESMStatusRegister3(ESMSR3)..........................................................................412

12.4.10ESMERRORPinStatusRegister(ESMEPSR)..........................................................412

12.4.11ESMInterruptOffsetHighRegister(ESMIOFFHR).....................................................413

12.4.12ESMInterruptOffsetLowRegister(ESMIOFFLR).......................................................414

12.4.13ESMLow-TimeCounterRegister(ESMLTCR)...........................................................415

12.4.14ESMLow-TimeCounterPreloadRegister(ESMLTCPR)...............................................415

12.4.15ESMErrorKeyRegister(ESMEKR).......................................................................416

12.4.16ESMStatusShadowRegister2(ESMSSR2)............................................................416

12.4.17ESMInfluenceERRORPinSet/StatusRegister4(ESMIEPSR4).....................................417

12.4.18ESMInfluenceERRORPinClear/StatusRegister4(ESMIEPCR4)..................................417

12.4.19ESMInterruptEnableSet/StatusRegister4(ESMIESR4).............................................418

12.4.20ESMInterruptEnableClear/StatusRegister4(ESMIECR4)...........................................418

12.4.21ESMInterruptLevelSet/StatusRegister4(ESMILSR4)................................................419

12.4.22ESMInterruptLevelClear/StatusRegister4(ESMILCR4).............................................419

12.4.23ESMStatusRegister4(ESMSR4).........................................................................420

13Real-TimeInterrupt(RTI)Module.......................................................................................421

13.1Overview..................................................................................................................422

13.1.1Features.........................................................................................................422

13.1.2IndustryStandardComplianceStatement..................................................................422

13.2ModuleOperation........................................................................................................423

13.2.1CounterOperation.............................................................................................423

13.2.2Interrupt/DMARequests......................................................................................425

13.2.3RTIClocking....................................................................................................426

13.2.4SynchronizingTimerEventstoNetworkTime(NTU).....................................................426

13.2.5DigitalWatchdog(DWD)......................................................................................429

13.2.6LowPowerModes.............................................................................................432

13.2.7HaltingDebugModeBehaviour..............................................................................432

13.3ControlRegisters.........................................................................................................433

13.3.1RTIGlobalControlRegister(RTIGCTRL)..................................................................434

13.3.2RTITimebaseControlRegister(RTITBCTRL).............................................................435

13.3.3RTICaptureControlRegister(RTICAPCTRL).............................................................436

13.3.4RTICompareControlRegister(RTICOMPCTRL).........................................................437

13.3.5RTIFreeRunningCounter0Register(RTIFRC0)........................................................438

13.3.6RTIUpCounter0Register(RTIUC0).......................................................................438

13.3.7RTICompareUpCounter0Register(RTICPUC0).......................................................439

13.3.8RTICaptureFreeRunningCounter0Register(RTICAFRC0)..........................................439

13.3.9RTICaptureUpCounter0Register(RTICAUC0).........................................................440

13.3.10RTIFreeRunningCounter1Register(RTIFRC1).......................................................440

13.3.11RTIUpCounter1Register(RTIUC1).....................................................................441

13.3.12RTICompareUpCounter1Register(RTICPUC1)......................................................441

13.3.13RTICaptureFreeRunningCounter1Register(RTICAFRC1).........................................443

13.3.14RTICaptureUpCounter1Register(RTICAUC1).......................................................443

13.3.15RTICompare0Register(RTICOMP0)....................................................................444

13.3.16RTIUpdateCompare0Register(RTIUDCP0)...........................................................444

13.3.17RTICompare1Register(RTICOMP1)....................................................................445

13.3.18RTIUpdateCompare1Register(RTIUDCP1)...........................................................445

13.3.19RTICompare2Register(RTICOMP2)....................................................................446

13.3.20RTIUpdateCompare2Register(RTIUDCP2)...........................................................446

13.3.21RTICompare3Register(RTICOMP3)....................................................................447

13.3.22RTIUpdateCompare3Register(RTIUDCP3)...........................................................447

13.3.23RTITimebaseLowCompareRegister(RTITBLCOMP)................................................448

13.3.24RTITimebaseHighCompareRegister(RTITBHCOMP)...............................................448

8

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

13.3.25RTISetInterruptEnableRegister(RTISETINTENA)....................................................449

13.3.26RTIClearInterruptEnableRegister(RTICLEARINTENA)..............................................451

13.3.27RTIInterruptFlagRegister(RTIINTFLAG)...............................................................453

13.3.28DigitalWatchdogControlRegister(RTIDWDCTRL).....................................................454

13.3.29DigitalWatchdogPreloadRegister(RTIDWDPRLD)....................................................455

13.3.30WatchdogStatusRegister(RTIWDSTATUS)............................................................456

13.3.31RTIWatchdogKeyRegister(RTIWDKEY)...............................................................457

13.3.32RTIDigitalWatchdogDownCounter(RTIDWDCNTR).................................................458

13.3.33DigitalWindowedWatchdogReactionControl(RTIWWDRXNCTRL)................................458

13.3.34DigitalWindowedWatchdogWindowSizeControl(RTIWWDSIZECTRL)...........................459

13.3.35RTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)................................460

13.3.36RTICompare0ClearRegister(RTICMP0CLR).........................................................461

13.3.37RTICompare1ClearRegister(RTICMP1CLR).........................................................461

13.3.38RTICompare2ClearRegister(RTICMP2CLR).........................................................462

13.3.39RTICompare3ClearRegister(RTICMP3CLR).........................................................462

14CyclicRedundancyCheck(CRC)ControllerModule............................................................463

14.1Overview..................................................................................................................464

14.1.1Features.........................................................................................................464

14.1.2BlockDiagram..................................................................................................464

14.2ModuleOperation........................................................................................................466

14.2.1GeneralOperation.............................................................................................466

14.2.2CRCModesofOperation.....................................................................................466

14.2.3PSASignatureRegister.......................................................................................467

14.2.4PSASectorSignatureRegister..............................................................................468

14.2.5CRCValueRegister...........................................................................................469

14.2.6RawDataRegister.............................................................................................469

14.2.7ExampleDMAControllerSetup..............................................................................469

14.2.8PatternCountRegister........................................................................................471

14.2.9SectorCountRegister/CurrentSectorRegister............................................................471

14.2.10Interrupt........................................................................................................472

14.2.11CPUDataTrace..............................................................................................475

14.2.12PowerDownMode...........................................................................................476

14.2.13Emulation......................................................................................................476

14.2.14PeripheralBusInterface.....................................................................................476

14.3Example...................................................................................................................476

14.3.1Example:AutoModeUsingTimeBasedEventTriggering...............................................476

14.3.2Example:AutoModeWithoutUsingTimeBasedTriggering............................................477

14.3.3Example:Semi-CPUMode...................................................................................478

14.3.4Example:Full-CPUMode.....................................................................................478

14.4CRCControlRegisters..................................................................................................479

14.4.1CRCGlobalControlRegister0(CRC_CTRL0)............................................................480

14.4.2CRCGlobalControlRegister(CRC_CTRL1)..............................................................480

14.4.3CRCGlobalControlRegister2(CRC_CTRL2)............................................................481

14.4.4CRCInterruptEnableSetRegister(CRC_INTS)..........................................................482

14.4.5CRCInterruptEnableResetRegister(CRC_INTR).......................................................485

14.4.6CRCInterruptStatusRegister(CRC_STATUS)...........................................................488

14.4.7CRCInterruptOffset(CRC_INT_OFFSET_REG).........................................................489

14.4.8CRCBusyRegister(CRC_BUSY)...........................................................................490

14.4.9CRCPatternCounterPreloadRegister1(CRC_PCOUNT_REG1)....................................490

14.4.10CRCSectorCounterPreloadRegister1(CRC_SCOUNT_REG1)....................................491

14.4.11CRCCurrentSectorRegister1(CRC_CURSEC_REG1)..............................................491

14.4.12CRCChannel1WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD1).......................492

14.4.13CRCChannel1BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD1).................492

9

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

14.4.14Channel1PSASignatureLowRegister(PSA_SIGREGL1)...........................................493

14.4.15Channel1PSASignatureHighRegister(PSA_SIGREGH1)..........................................493

14.4.16Channel1CRCValueLowRegister(CRC_REGL1)....................................................493

14.4.17Channel1CRCValueHighRegister(CRC_REGH1)...................................................494

14.4.18Channel1PSASectorSignatureLowRegister(PSA_SECSIGREGL1).............................494

14.4.19Channel1PSASectorSignatureHighRegister(PSA_SECSIGREGH1)............................494

14.4.20Channel1RawDataLowRegister(RAW_DATAREGL1)..............................................495

14.4.21Channel1RawDataHighRegister(RAW_DATAREGH1).............................................495

14.4.22CRCPatternCounterPreloadRegister2(CRC_PCOUNT_REG2)...................................495

14.4.23CRCSectorCounterPreloadRegister2(CRC_SCOUNT_REG2)....................................496

14.4.24CRCCurrentSectorRegister2(CRC_CURSEC_REG2)..............................................496

14.4.25CRCChannel2WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD2).......................497

14.4.26CRCChannel2BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD2).................497

14.4.27Channel2PSASignatureLowRegister(PSA_SIGREGL2)...........................................498

14.4.28Channel2PSASignatureHighRegister(PSA_SIGREGH2)..........................................498

14.4.29Channel2CRCValueLowRegister(CRC_REGL2)....................................................498

14.4.30Channel2CRCValueHighRegister(CRC_REGH2)...................................................499

14.4.31Channel2PSASectorSignatureLowRegister(PSA_SECSIGREGL2).............................499

14.4.32Channel2PSASectorSignatureHighRegister(PSA_SECSIGREGH2)............................499

14.4.33Channel2RawDataLowRegister(RAW_DATAREGL2)..............................................500

14.4.34Channel2RawDataHighRegister(RAW_DATAREGH2).............................................500

14.4.35DataBusSelectionRegister(CRC_TRACE_BUS_SEL)...............................................501

15VectoredInterruptManager(VIM)Module...........................................................................502

15.1Overview..................................................................................................................503

15.2DeviceLevelInterruptManagement...................................................................................503

15.2.1InterruptGenerationatthePeripheral......................................................................504

15.2.2InterruptHandlingattheCPU................................................................................504

15.2.3SoftwareInterruptHandlingOptions........................................................................505

15.3InterruptHandlingInsideVIM..........................................................................................506

15.3.1VIMInterruptChannelMapping..............................................................................507

15.3.2VIMInputChannelManagement............................................................................509

15.4InterruptVectorTable(VIMRAM).....................................................................................510

15.4.1InterruptVectorTableOperation.............................................................................510

15.4.2EnablingandControllingtheVIMParity....................................................................511

15.4.3InterruptVectorTableInitialization..........................................................................511

15.4.4InterruptVectorTableParityTesting........................................................................511

15.5VIMWakeupInterrupt...................................................................................................513

15.6CaptureEventSources.................................................................................................514

15.7Examples..................................................................................................................514

15.7.1Examples-ConfigureCPUToReceiveInterrupts........................................................514

15.7.2Examples-RegisterVectorInterruptandIndexInterruptHandling....................................515

15.8Registers..................................................................................................................517

15.8.1InterruptVectorTableParityFlagRegister(PARFLG)..................................................518

15.8.2InterruptVectorTableParityControlRegister(PARCTL)................................................518

15.8.3AddressParityErrorRegister(ADDERR)..................................................................519

15.8.4Fall-BackAddressParityErrorRegister(FBPARERR)...................................................519

15.8.5VIMOffsetVectorRegisters..................................................................................520

15.8.6IRQIndexOffsetVectorRegister(IRQINDEX)............................................................521

15.8.7FIQIndexOffsetVectorRegisters(FIQINDEX)...........................................................521

15.8.8FIQ/IRQProgramControlRegisters[0](FIRQPR[0])......................................................522

15.8.9PendingInterruptReadLocationRegisters[0](INTREQ[0]).............................................523

15.8.10InterruptEnableSetRegisters[0](REQENASET[0])....................................................524

15.8.11InterruptEnableClearRegisters[0](REQENACLR[0])..................................................525

10

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

15.8.12Wake-UpEnableSetRegisters[0](WAKEENASET[0]).................................................526

15.8.13Wake-UpEnableClearRegisters[0](WAKEENACLR[0])..............................................527

15.8.14IRQInterruptVectorRegister(IRQVECREG)............................................................528

15.8.15FIQInterruptVectorRegister(FIQVECREG).............................................................528

15.8.16CaptureEventRegister(CAPEVT)........................................................................529

15.8.17VIMInterruptControlRegister[0:31](CHANCTRL[0:23])...............................................530

16DirectMemoryAccessController(DMA)Module.................................................................532

16.1Overview..................................................................................................................533

16.1.1MainFeatures..................................................................................................533

16.2ModuleOperation........................................................................................................534

16.2.1MemorySpace.................................................................................................534

16.2.2DMADataAccess.............................................................................................534

16.2.3AddressingModes.............................................................................................534

16.2.4DMAChannelControlPackets...............................................................................535

16.2.5PriorityQueue..................................................................................................539

16.2.6DataPackingandUnpacking................................................................................541

16.2.7DMARequest...................................................................................................543

16.2.8Auto-Initiation...................................................................................................544

16.2.9Interrupts........................................................................................................544

16.2.10Debugging.....................................................................................................546

16.2.11PowerManagement..........................................................................................546

16.2.12FIFOBuffer....................................................................................................547

16.2.13ChannelChaining............................................................................................547

16.2.14MemoryProtection...........................................................................................548

16.2.15ParityChecking...............................................................................................549

16.2.16ParityTesting.................................................................................................550

16.2.17InitializingRAMwithParity..................................................................................550

16.3ControlRegistersandControlPackets...............................................................................551

16.3.1GlobalConfigurationRegisters...............................................................................554

16.3.2ChannelConfiguration........................................................................................597

17ExternalMemoryInterface(EMIF)......................................................................................603

17.1Introduction...............................................................................................................604

17.1.1PurposeofthePeripheral.....................................................................................604

17.1.2Features.........................................................................................................604

17.1.3FunctionalBlockDiagram.....................................................................................605

17.2EMIFModuleArchitecture..............................................................................................606

17.2.1EMIFClockControl............................................................................................606

17.2.2EMIFRequests.................................................................................................606

17.2.3EMIFSignalDescriptions.....................................................................................606

17.2.4EMIFSignalMultiplexingControl............................................................................607

17.2.5SDRAMControllerandInterface.............................................................................608

17.2.6AsynchronousControllerandInterface.....................................................................620

17.2.7DataBusParking..............................................................................................632

17.2.8ResetandInitializationConsiderations.....................................................................633

17.2.9InterruptSupport...............................................................................................633

17.2.10DMAEventSupport..........................................................................................634

17.2.11EMIFSignalMultiplexing....................................................................................634

17.2.12MemoryMap..................................................................................................634

17.2.13PriorityandArbitration.......................................................................................635

17.2.14SystemConsiderations......................................................................................636

17.2.15PowerManagement..........................................................................................637

17.2.16EmulationConsiderations...................................................................................637

17.3Registers..................................................................................................................638

11

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

17.3.1ModuleIDRegister(MIDR)...................................................................................638

17.3.2AsynchronousWaitCycleConfigurationRegister(AWCC)..............................................639

17.3.3SDRAMConfigurationRegister(SDCR)....................................................................640

17.3.4SDRAMRefreshControlRegister(SDRCR)...............................................................641

17.3.5AsynchronousnConfigurationRegisters(CE2CFG-CE5CFG)..........................................642

17.3.6SDRAMTimingRegister(SDTIMR).........................................................................643

17.3.7SDRAMSelfRefreshExitTimingRegister(SDSRETR).................................................644

17.3.8EMIFInterruptRawRegister(INTRAW)....................................................................645

17.3.9EMIFInterruptMaskedRegister(INTMSK)................................................................646

17.3.10EMIFInterruptMaskSetRegister(INTMSKSET)........................................................647

17.3.11EMIFInterruptMaskClearRegister(INTMSKCLR).....................................................648

17.3.12PageModeControlRegister(PMCR).....................................................................649

17.4ExampleConfiguration..................................................................................................650

17.4.1HardwareInterface............................................................................................650

17.4.2SoftwareConfiguration........................................................................................650

18ParameterOverlayModule(POM)......................................................................................658

18.1Introduction...............................................................................................................659

18.1.1MainFeatures..................................................................................................659

18.1.2BlockDiagram..................................................................................................659

18.2ModuleOperation........................................................................................................660

18.2.1DecodeRegions...............................................................................................660

18.2.2BusErrorsonAccessesviaPOM...........................................................................660

18.3ControlRegisters.........................................................................................................661

18.3.1POMGlobalControlRegister(POMGLBCTRL)...........................................................662

18.3.2POMRevisionID(POMREV)................................................................................663

18.3.3POMClockGateControlRegister(POMCLKCTRL)......................................................663

18.3.4POMStatusRegister(POMFLG)............................................................................664

18.3.5POMProgramRegionStartAddressRegisterx(POMPROGSTARTx)................................665

18.3.6POMOverlayRegionStartAddressRegisterx(POMOVLSTARTx)...................................665

18.3.7POMRegionSizeRegisterx(POMREGSIZEx)...........................................................666

18.3.8POMIntegrationControlRegister(POMITCTRL).........................................................666

18.3.9POMClaimSetRegister(POMCLAIMSET)................................................................667

18.3.10POMClaimClearRegister(POMCLAIMCLR)............................................................668

18.3.11POMLockAccessRegister(POMLOCKACCESS)......................................................669

18.3.12POMLockStatusRegister(POMLOCKSTATUS).......................................................669

18.3.13POMAuthenticationStatusRegister(POMAUTHSTATUS)............................................669

18.3.14POMDeviceIDRegister(POMDEVID)...................................................................670

18.3.15POMDeviceTypeRegister(POMDEVTYPE)............................................................670

18.3.16POMPeripheralID4Register(POMPERIPHERALID4)................................................671

18.3.17POMPeripheralID5Register(POMPERIPHERALID5)................................................671

18.3.18POMPeripheralID6Register(POMPERIPHERALID6)................................................672

18.3.19POMPeripheralID7Register(POMPERIPHERALID7)................................................672

18.3.20POMPeripheralID0Register(POMPERIPHERALID0)................................................673

18.3.21POMPeripheralID1Register(POMPERIPHERALID1)................................................673

18.3.22POMPeripheralID2Register(POMPERIPHERALID2)................................................674

18.3.23POMPeripheralID3Register(POMPERIPHERALID3)................................................674

18.3.24POMComponentID0Register(POMCOMPONENTID0)..............................................675

18.3.25POMComponentID1Register(POMCOMPONENTID1)..............................................675

18.3.26POMComponentID2Register(POMCOMPONENTID2)..............................................676

18.3.27POMComponentID3Register(POMCOMPONENTID3)..............................................676

19AnalogToDigitalConverter(ADC)Module.........................................................................677

19.1Overview..................................................................................................................678

19.2Introduction...............................................................................................................679

12

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

19.2.1InputMultiplexor................................................................................................680

19.2.2Self-TestandCalibrationCell................................................................................680

19.2.3Analog-to-DigitalConverterCore............................................................................680

19.2.4Sequencer......................................................................................................681

19.2.5ConversionGroups............................................................................................681

19.3BasicFeaturesandUsageoftheADC...............................................................................682

19.3.1HowtoSelectBetween12-bitand10-bitResolutions....................................................682

19.3.2HowtoSetUptheADCLKSpeed...........................................................................682

19.3.3HowtoSetUptheInputChannelAcquisitionTime.......................................................682

19.3.4HowtoSelectanInputChannelforConversion...........................................................682

19.3.5HowtoSelectBetweenSingleConversionSequenceorContinuousConversions..................682

19.3.6HowtoStartaConversion....................................................................................683

19.3.7HowtoKnowWhentheGroupConversionisCompleted................................................683

19.3.8HowResultsareStoredintheResults’Memory..........................................................683

19.3.9HowtoReadtheResultsfromtheResults’Memory......................................................684

19.3.10HowtoStopaConversion..................................................................................687

19.3.11ExampleSequenceforBasicConfigurationofADCModule...........................................687

19.4AdvancedConversionGroupConfigurationOptions................................................................688

19.4.1GroupTriggerOptions........................................................................................688

19.4.2SingleorContinuousConversionModes...................................................................688

19.4.3ConversionGroupFreezeCapability........................................................................689

19.4.4ConversionGroupMemoryOverrunOption................................................................690

19.4.5ResponseonWritingNon-ZeroValuetoConversionGroup’sChannelSelectRegister.............690

19.4.6ConversionResultSizeonReading:8-bit,10-bitor12-bit...............................................691

19.4.7OptiontoReadGroupChannelIdAlongwithConversionResult.......................................691

19.5ADCModuleBasicInterrupts..........................................................................................692

19.5.1GroupConversionEndInterrupt.............................................................................692

19.5.2GroupMemoryThresholdInterrupt..........................................................................692

19.5.3GroupMemoryOverrunInterrupt............................................................................692

19.6ADCModuleDMARequests...........................................................................................693

19.6.1DMARequestforEachConversionResultWrittentotheResults’Memory...........................693

19.6.2DMARequestforaFixedNumberofConversionResults...............................................693

19.7ADCMagnitudeThresholdInterrupts.................................................................................694

19.7.1MagnitudeThresholdInterruptConfiguration..............................................................694

19.7.2MagnitudeThresholdInterruptComparisonMaskConfiguration........................................694

19.7.3MagnitudeThresholdInterruptEnable/DisableControl.................................................694

19.7.4MagnitudeThresholdInterruptFlags........................................................................694

19.7.5MagnitudeThresholdInterruptOffsetRegister............................................................694

19.8ADCSpecialModes.....................................................................................................695

19.8.1ADCErrorCalibrationMode..................................................................................695

19.8.2ADCSelf-TestMode...........................................................................................698

19.8.3ADCPower-DownMode......................................................................................700

19.8.4ADCSampleCapacitorDischargeMode...................................................................701

19.9ADCResults’RAMSpecialFeatures.................................................................................702

19.9.1ADCResults’RAMAuto-Initialization.......................................................................702

19.9.2ADCResults’RAMTestMode...............................................................................702

19.9.3ADCResults’RAMParity.....................................................................................702

19.10ADEVTPinGeneralPurposeI/OFunctionality......................................................................704

19.10.1GPIOFunctionality...........................................................................................704

19.10.2Summary......................................................................................................705

19.11ADCControlRegisters..................................................................................................706

19.11.1ADCResetControlRegister(ADRSTCR)................................................................708

19.11.2ADCOperatingModeControlRegister(ADOPMODECR).............................................708

13

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

19.11.3ADCClockControlRegister(ADCLOCKCR).............................................................710

19.11.4ADCCalibrationModeControlRegister(ADCALCR)...................................................710

19.11.5ADCEventGroupOperatingModeControlRegister(ADEVMODECR)..............................712

19.11.6ADCGroup1OperatingModeControlRegister(ADG1MODECR)....................................714

19.11.7ADCGroup2OperatingModeControlRegister(ADG2MODECR)....................................716

19.11.8ADCEventGroupTriggerSourceSelectRegister(ADEVSRC).......................................718

19.11.9ADCGroup1TriggerSourceSelectRegister(ADG1SRC).............................................719

19.11.10ADCGroup2TriggerSourceSelectRegister(ADG2SRC)...........................................720

19.11.11ADCEventInterruptEnableControlRegister(ADEVINTENA).......................................721

19.11.12ADCGroup1InterruptEnableControlRegister(ADG1INTENA).....................................722

19.11.13ADCGroup2InterruptEnableControlRegister(ADG2INTENA).....................................723

19.11.14ADCEventGroupInterruptFlagRegister(ADEVINTFLG)...........................................724

19.11.15ADCGroup1InterruptFlagRegister(ADG1INTFLG)..................................................725

19.11.16ADCGroup2InterruptFlagRegister(ADG2INTFLG)..................................................726

19.11.17ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR).......................727

19.11.18ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR).............................727

19.11.19ADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR).............................728

19.11.20ADCEventGroupDMAControlRegister(ADEVDMACR)............................................729

19.11.21ADCGroup1DMAControlRegister(ADG1DMACR)..................................................730

19.11.22ADCGroup2DMAControlRegister(ADG2DMACR)..................................................731

19.11.23ADCResultsMemoryConfigurationRegister(ADBNDCR)...........................................732

19.11.24ADCResultsMemorySizeConfigurationRegister(ADBNDEND)...................................733

19.11.25ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)...........................734

19.11.26ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP).................................734

19.11.27ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP).................................735

19.11.28ADCEventGroupStatusRegister(ADEVSR)..........................................................736

19.11.29ADCGroup1StatusRegister(ADG1SR)................................................................737

19.11.30ADCGroup2StatusRegister(ADG2SR)................................................................738

19.11.31ADCEventGroupChannelSelectRegister(ADEVSEL)..............................................739

19.11.32ADCGroup1ChannelSelectRegister(ADG1SEL)....................................................740

19.11.33ADCGroup2ChannelSelectRegister(ADG2SEL)....................................................741

19.11.34ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)...................................742

19.11.35ADCStateMachineStatusRegister(ADSMSTATE)..................................................742

19.11.36ADCChannelLastConversionValueRegister(ADLASTCONV)....................................743

19.11.37ADCEventGroupResults'FIFORegister(ADEVBUFFER)..........................................744

19.11.38ADCGroup1ResultsFIFORegister(ADG1BUFFER).................................................745

19.11.39ADCGroup2ResultsFIFORegister(ADG2BUFFER).................................................746

19.11.40ADCEventGroupResultsEmulationFIFORegister(ADEVEMUBUFFER)........................747

19.11.41ADCGroup1ResultsEmulationFIFORegister(ADG1EMUBUFFER)..............................747

19.11.42ADCGroup2ResultsEmulationFIFORegister(ADG2EMUBUFFER)..............................747

19.11.43ADCADEVTPinDirectionControlRegister(ADEVTDIR)............................................747

19.11.44ADCADEVTPinOutputValueControlRegister(ADEVTOUT)......................................748

19.11.45ADCADEVTPinInputValueRegister(ADEVTIN).....................................................748

19.11.46ADCADEVTPinSetRegister(ADEVTSET)............................................................749

19.11.47ADCADEVTPinClearRegister(ADEVTCLR).........................................................749

19.11.48ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)........................................750

19.11.49ADCADEVTPinPullControlDisableRegister(ADEVTPDIS).......................................750

19.11.50ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)........................................751

19.11.51ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)................751

19.11.52ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)......................752

19.11.53ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)......................753

19.11.54ADCMagnitudeCompareInterruptControlRegisters(ADMAGINTxCR)...........................754

19.11.55ADCMagnitudeCompareInterruptxMaskRegister(ADMAGINTxMASK).........................755

14

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

19.11.56ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)..................755

19.11.57ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)...............756

19.11.58ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)................................756

19.11.59ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF).............................757

19.11.60ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)...........................757

19.11.61ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR).................................758

19.11.62ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR).................................758

19.11.63ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)...........................759

19.11.64ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR).................................759

19.11.65ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR).................................760

19.11.66ADCParityControlRegister(ADPARCR)...............................................................760

19.11.67ADCParityErrorAddressRegister(ADPARADDR)...................................................761

19.11.68ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL).....................................761

20High-EndTimer(N2HET)Module.......................................................................................762

20.1Features...................................................................................................................763

20.1.1Overview........................................................................................................763

20.1.2BlockDiagram..................................................................................................766

20.2N2HETFunctionalDescription.........................................................................................768

20.2.1SpecializedTimerMicromachine............................................................................768

20.2.2N2HETRAMOrganization....................................................................................772

20.2.3TimeBase......................................................................................................775

20.2.4HostInterface...................................................................................................777

20.2.5I/OControl......................................................................................................778

20.2.6SuppressionFilters............................................................................................792

20.2.7InterruptsandExceptions.....................................................................................793

20.2.8HardwarePriorityScheme:...................................................................................794

20.2.9N2HETRequeststoDMAandHTU.........................................................................796

20.3AngleFunctions..........................................................................................................797

20.3.1SoftwareAngleGenerator....................................................................................797

20.4N2HETControlRegisters...............................................................................................801

20.4.1GlobalConfigurationRegister(HETGCR)..................................................................802

20.4.2PrescaleFactorRegister(HETPFR)........................................................................803

20.4.3N2HETCurrentAddressRegister(HETADDR)............................................................804

20.4.4OffsetIndexPriorityLevel1Register(HETOFF1)........................................................804

20.4.5OffsetIndexPriorityLevel2Register(HETOFF2)........................................................805

20.4.6InterruptEnableSetRegister(HETINTENAS).............................................................806

20.4.7InterruptEnableClearRegister(HETINTENAC)..........................................................806

20.4.8ExceptionControlRegister1(HETEXC1)..................................................................807

20.4.9ExceptionControlRegister2(HETEXC2)..................................................................808

20.4.10InterruptPriorityRegister(HETPRY)......................................................................809

20.4.11InterruptFlagRegister(HETFLG)..........................................................................809

20.4.12ANDShareControlRegister(HETAND)..................................................................810

20.4.13HRShareControlRegister(HETHRSH)..................................................................811

20.4.14XORShareControlRegister(HETXOR)..................................................................812

20.4.15RequestEnableSetRegister(HETREQENS)............................................................813

20.4.16RequestEnableClearRegister(HETREQENC).........................................................813

20.4.17RequestDestinationSelectRegister(HETREQDS).....................................................814

20.4.18NHETDirectionRegister(HETDIR)........................................................................815

20.4.19N2HETDataInputRegister(HETDIN)....................................................................816

20.4.20N2HETDataOutputRegister(HETDOUT)...............................................................816

20.4.21NHETDataSetRegister(HETDSET).....................................................................817

20.4.22N2HETDataClearRegister(HETDCLR).................................................................817

20.4.23N2HETOpenDrainRegister(HETPDR)..................................................................818

15

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

20.4.24N2HETPullDisableRegister(HETPULDIS).............................................................818

20.4.25N2HETPullSelectRegister(HETPSL)...................................................................819

20.4.26ParityControlRegister(HETPCR).........................................................................820

20.4.27ParityAddressRegister(HETPAR)........................................................................821

20.4.28ParityPinRegister(HETPPR)..............................................................................822

20.4.29SuppressionFilterPreloadRegister(HETSFPRLD)....................................................823

20.4.30SuppressionFilterEnableRegister(HETSFENA).......................................................823

20.4.31LoopBackPairSelectRegister(HETLBPSEL)..........................................................824

20.4.32LoopBackPairDirectionRegister(HETLBPDIR).......................................................825

20.4.33N2HETPinDisableRegister(HETPINDIS)...............................................................825

20.5InstructionSet............................................................................................................827

20.5.1InstructionSummary...........................................................................................827

20.5.2Abbreviations,EncodingFormatsandBits.................................................................829

20.5.3InstructionDescription.........................................................................................832

21High-EndTimerTransferUnit(HTU)Module.......................................................................896

21.1Overview..................................................................................................................897

21.1.1Features.........................................................................................................897

21.2ModuleOperation........................................................................................................898

21.2.1DataTransfersbetweenMainRAMandNHETRAM.....................................................900

21.2.2ArbitrationofHTUElementsandFrames..................................................................905

21.2.3ConditionsforFrameTransferInterruption.................................................................905

21.2.4HTUOverloadandRequestLostDetection................................................................906

21.2.5MemoryProtection.............................................................................................908

21.2.6ControlPacketRAMParityChecking.......................................................................909

21.3UseCases................................................................................................................911

21.3.1Example:SingleElementTransferwithOneTriggerRequest...........................................911

21.3.2Example:MultipleElementTransferwithOneTriggerRequest.........................................911

21.3.3Example:64-Bit-TransferofControlFieldandDataFields..............................................912

21.4ControlRegisters.........................................................................................................914

21.4.1GlobalControlRegister(HTUGC)..........................................................................915

21.4.2ControlPacketEnableRegister(HTUCPENA)...........................................................916

21.4.3ControlPacket(CP)BusyRegister0(HTUBUSY0)......................................................917

21.4.4ControlPacket(CP)BusyRegister1(HTUBUSY1)......................................................918

21.4.5ControlPacket(CP)BusyRegister2(HTUBUSY2)......................................................918

21.4.6ControlPacket(CP)BusyRegister3(HTUBUSY3)......................................................919

21.4.7ActiveControlPacketandErrorRegister(HTUACPE)..................................................919

21.4.8RequestLostandBusErrorControlRegister(HTURLBECTRL)......................................921

21.4.9BufferFullInterruptEnableSetRegister(HTUBFINTS).................................................922

21.4.10BufferFullInterruptEnableClearRegister(HTUBFINTC).............................................922

21.4.11InterruptMappingRegister(HTUINTMAP)...............................................................923

21.4.12InterruptOffsetRegister0(HTUINTOFF0)..............................................................924

21.4.13InterruptOffsetRegister1(HTUINTOFF1)..............................................................925

21.4.14BufferInitializationModeRegister(HTUBIM)............................................................926

21.4.15RequestLostFlagRegister(HTURLOSTFL)............................................................928

21.4.16BufferFullInterruptFlagRegister(HTUBFINTFL)......................................................928

21.4.17BERInterruptFlagRegister(HTUBERINTFL)...........................................................929

21.4.18MemoryProtection1StartAddressRegister(HTUMP1S).............................................930

21.4.19MemoryProtection1EndAddressRegister(HTUMP1E).............................................930

21.4.20DebugControlRegister(HTUDCTRL)....................................................................931

21.4.21WatchPointRegister(HTUWPR).........................................................................932

21.4.22WatchMaskRegister(HTUWMR)........................................................................932

21.4.23ModuleIdentificationRegister(HTUID)...................................................................933

21.4.24ParityControlRegister(HTUPCR)........................................................................934

16

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

21.4.25ParityAddressRegister(HTUPAR).......................................................................935

21.4.26MemoryProtectionControlandStatusRegister(HTUMPCS)........................................936

21.4.27MemoryProtectionStartAddressRegister0(HTUMP0S).............................................938

21.4.28MemoryProtectionEndAddressRegister(HTUMP0E)................................................938

21.5DoubleControlPacketConfigurationMemory.......................................................................939

21.5.1InitialFullAddressARegister(HTUIFADDRA)...........................................................940

21.5.2InitialFullAddressBRegister(HTUIFADDRB)...........................................................940

21.5.3InitialNHETAddressandControlRegister(HTUIHADDRCT)..........................................941

21.5.4InitialTransferCountRegister(HTUITCOUNT)..........................................................942

21.5.5CurrentFullAddressARegister(HTUCFADDRA).......................................................943

21.5.6CurrentFullAddressBRegister(HTUCFADDRB).......................................................944

21.5.7CurrentFrameCountRegister(HTUCFCOUNT).........................................................945

21.6Examples..................................................................................................................946

21.6.1ApplicationExamplesforSettingtheTransferModesofCPAandBofaDCP......................946

21.6.2SoftwareExampleSequenceAssumingCircularModeforBothCPAandB.........................946

21.6.3ExampleofanInterruptDispatchFlowforaRequestLostInterrupt...................................947

22General-PurposeInput/Output(GIO)Module.......................................................................948

22.1Overview..................................................................................................................949

22.2QuickStartGuide........................................................................................................950

22.3FunctionalDescriptionofGIOModule................................................................................952

22.3.1I/OFunctions...................................................................................................952

22.3.2InterruptFunction..............................................................................................952

22.3.3GIOBlockDiagram............................................................................................953

22.4DeviceModesofOperation.............................................................................................954

22.4.1EmulationMode................................................................................................954

22.4.2Power-DownMode(Low-PowerMode).....................................................................954

22.5GIOControlRegisters...................................................................................................955

22.5.1GIOGlobalControlRegister(GIOGCR0)..................................................................956

22.5.2GIOInterruptDetectRegister(GIOINTDET)...............................................................957

22.5.3GIOInterruptPolarityRegister(GIOPOL)..................................................................958

22.5.4GIOInterruptEnableRegisters(GIOENASETandGIOENACLR)......................................959

22.5.5GIOInterruptPriorityRegisters(GIOLVLSETandGIOLVLCLR).......................................961

22.5.6GIOInterruptFlagRegister(GIOFLG)......................................................................963

22.5.7GIOOffsetRegister1(GIOOFF1)...........................................................................964

22.5.8GIOOffsetBRegister(GIOOFF2)...........................................................................965

22.5.9GIOEmulationARegister(GIOEMU1).....................................................................966

22.5.10GIOEmulationBRegister(GIOEMU2)....................................................................967

22.5.11GIODataDirectionRegisters[A-H][7:0](GIODIR[A-H][7:0])...........................................968

22.5.12GIODataInputRegisters[A-H][7:0](GIODIN[A-H][7:0])................................................968

22.5.13GIODataOutputRegisters[A-H][7:0](GIODOUT[A-H][7:0])...........................................969

22.5.14GIODataSetRegister[A-H][7:0](GIODSET[A-H][7:0])................................................969

22.5.15GIODataClearRegisters[A-H][7:0](GIODCLR[A-H][7:0])............................................970

22.5.16GIOOpenDrainRegister[A-H][7:0](GIOPDR[A-H][7:0])...............................................970

22.5.17GIOPullDisableRegisters[A-H][7:0](GIOPULDIS[A-H][7:0]).........................................971

22.5.18GIOPullSelectRegister[A-H][7:0](GIOPSL[A-H][7:0])................................................971

22.6I/OControlSummary....................................................................................................972

23FlexRayModule...............................................................................................................973

23.1Overview..................................................................................................................974

23.1.1FeatureList.....................................................................................................974

23.2FlexRayModuleBlockDiagram.......................................................................................975

23.3FlexRayModuleBlockMapping.......................................................................................977

23.4TransferUnitBlockDiagram...........................................................................................979

23.5TransferUnitFunctionalDescription..................................................................................980

17

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23.5.1TransferControl................................................................................................982

23.5.2TransferConfigurationRAM..................................................................................988

23.5.3MemoryProtectionMechanism..............................................................................988

23.6CommunicationCycle...................................................................................................989

23.6.1StaticSegment.................................................................................................989

23.6.2DynamicSegment.............................................................................................989

23.6.3SymbolWindow................................................................................................989

23.6.4NetworkIdleTime(NIT).......................................................................................990

23.6.5ConfigurationofNITStartandOffsetCorrectionStart....................................................990

23.7CommunicationModes..................................................................................................990

23.7.1Time-TriggeredDistributed(TT-D)..........................................................................990

23.8ClockSynchronization...................................................................................................991

23.8.1GlobalTime.....................................................................................................991

23.8.2LocalTime......................................................................................................991

23.8.3SynchronizationProcess......................................................................................991

23.8.4SyncFrameTransmission....................................................................................992

23.8.5ExternalClockSynchronization..............................................................................992

23.9ErrorHandling............................................................................................................992

23.9.1ClockCorrectionFailedCounter.............................................................................993

23.9.2PassivetoActiveCounter....................................................................................993

23.9.3HALTCommand...............................................................................................993

23.9.4FREEZECommand...........................................................................................993

23.10CommunicationControllerStates.....................................................................................994

23.10.1CommunicationControllerStateDiagram.................................................................994

23.10.2DEFAULT_CONFIGState..................................................................................995

23.10.3CONFIGState................................................................................................995

23.10.4MONITOR_MODE............................................................................................996

23.10.5READYState.................................................................................................996

23.10.6WAKEUPState...............................................................................................997

23.10.7STARTUPState.............................................................................................1000

23.10.8NORMAL_ACTIVEState..................................................................................1005

23.10.9NORMAL_PASSIVEState.................................................................................1005

23.10.10HALTState.................................................................................................1005

23.11NetworkManagement.................................................................................................1006

23.12FilteringandMasking..................................................................................................1006

23.12.1SlotCounterFiltering.......................................................................................1007

23.12.2CycleCounterFiltering.....................................................................................1007

23.12.3ChannelIDFiltering........................................................................................1008

23.12.4FIFOFiltering................................................................................................1008

23.13TransmitProcess.......................................................................................................1008

23.13.1StaticSegment..............................................................................................1008

23.13.2DynamicSegment..........................................................................................1009

23.13.3TransmitBuffers.............................................................................................1009

23.13.4FrameTransmission........................................................................................1010

23.13.5NullFrameTransmission..................................................................................1010

23.14ReceiveProcess.......................................................................................................1010

23.14.1DedicatedReceiveBuffers................................................................................1010

23.14.2FrameReception............................................................................................1011

23.14.3NullFrameReception......................................................................................1011

23.15FIFOFunction..........................................................................................................1011

23.15.1Description...................................................................................................1011

23.15.2ConfigurationoftheFIFO..................................................................................1013

23.15.3AccesstotheFIFO.........................................................................................1013

18

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23.16MessageHandling.....................................................................................................1013

23.16.1ReconfigurationofMessageBuffers.....................................................................1013

23.16.2HostAccesstoMessageRAM............................................................................1014

23.16.3FlexRayProtocolControllerAccesstoMessageRAM................................................1019

23.17ModuleRAMs...........................................................................................................1020

23.17.1MessageRAM...............................................................................................1020

23.17.2ParityCheck.................................................................................................1024

23.18Interrupts................................................................................................................1028

23.18.1TransferUnitInterrupts.....................................................................................1028

23.18.2CommunicationControllerInterrupts.....................................................................1030

23.19FlexRayModuleRegisters............................................................................................1033

23.19.1TransferUnitRegisters.....................................................................................1033

23.19.2CommunicationControllerRegisters.....................................................................1074

23.20MinimumPeripheralClockFrequency..............................................................................1160

23.21AssignmentofFlexRayConfigurationParameters................................................................1161

23.22Emulation/DebugSupport.............................................................................................1162

24ControllerAreaNetwork(DCAN)Module...........................................................................1163

24.1Overview.................................................................................................................1164

24.1.1Features.......................................................................................................1164

24.1.2FunctionalDescription.......................................................................................1164

24.2CANBlocks..............................................................................................................1165

24.2.1CANCore......................................................................................................1165

24.2.2MessageRAM................................................................................................1165

24.2.3MessageHandler.............................................................................................1165

24.2.4MessageRAMInterface.....................................................................................1166

24.2.5RegisterandMessageObjectAccess.....................................................................1166

24.2.6DualClockSource...........................................................................................1166

24.3CANBitTiming.........................................................................................................1167

24.3.1BitTimeandBitRate........................................................................................1167

24.3.2DCANBitTimingRegisters.................................................................................1169

24.4CANModuleConfiguration............................................................................................1171

24.4.1DCANRAMInitializationthroughharware................................................................1171

24.4.2CANModuleInitialization....................................................................................1171

24.5MessageRAM..........................................................................................................1174

24.5.1StructureofMessageObjects..............................................................................1174

24.5.2AddressingMessageObjectsinRAM.....................................................................1176

24.5.3MessageRAMRepresentationinDebug/SuspendMode..............................................1177

24.5.4MessageRAMRepresentationinDirectAccessMode.................................................1177

24.6MessageInterfaceRegisterSets.....................................................................................1178

24.6.1MessageInterfaceRegisterSets1and2.................................................................1178

24.6.2UsingMessageInterfaceRegisterSets1and2.........................................................1179

24.6.3MessageInterfaceRegister3..............................................................................1180

24.7MessageObjectConfigurations......................................................................................1181

24.7.1ConfigurationofaTransmitObjectforDataFrames....................................................1181

24.7.2ConfigurationofaTransmitObjectforRemoteFrames................................................1181

24.7.3ConfigurationofaSingleReceiveObjectforDataFrames.............................................1181

24.7.4ConfigurationofaSingleReceiveObjectforRemoteFrames.........................................1182

24.7.5ConfigurationofaFIFOBuffer..............................................................................1182

24.7.6ReconfigurationofMessageObjectsfortheReceptionofFrames....................................1182

24.7.7ReconfigurationofMessageObjectsfortheTransmissionofFrames................................1182

24.8MessageHandling......................................................................................................1183

24.8.1MessageHandlerOverview.................................................................................1183

24.8.2Receive/TransmitPriority....................................................................................1183

19

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

24.8.3TransmissionofMessagesinEventDrivenCANCommunication....................................1184

24.8.4UpdatingaTransmitObject.................................................................................1184

24.8.5ChangingaTransmitObject................................................................................1184

24.8.6AcceptanceFilteringofReceivedMessages.............................................................1185

24.8.7ReceptionofDataFrames..................................................................................1185

24.8.8ReceptionofRemoteFrames..............................................................................1185

24.8.9ReadingReceivedMessages...............................................................................1185

24.8.10RequestingNewDataforaReceiveObject............................................................1186

24.8.11StoringReceivedMessagesinFIFOBuffers...........................................................1186

24.8.12ReadingfromaFIFOBuffer..............................................................................1186

24.9CANMessageTransfer................................................................................................1188

24.9.1AutomaticRetransmission..................................................................................1188

24.9.2Auto-Bus-On..................................................................................................1188

24.10InterruptFunctionality..................................................................................................1189

24.10.1MessageObjectInterrupts.................................................................................1189

24.10.2StatusChangeInterrupts..................................................................................1189

24.10.3ErrorInterrupts..............................................................................................1190

24.11GlobalPowerDownMode............................................................................................1191

24.11.1EnteringGlobalPowerDownMode......................................................................1191

24.11.2WakeupFromGlobalPowerDownMode...............................................................1191

24.12LocalPowerDownMode.............................................................................................1192

24.12.1EnteringLocalPowerDownMode.......................................................................1192

24.12.2WakeupFromLocalPowerDown........................................................................1192

24.13GIOsupport.............................................................................................................1192

24.14TestModes.............................................................................................................1194

24.14.1SilentMode..................................................................................................1194

24.14.2LoopBackMode............................................................................................1195

24.14.3ExternalLoopBackMode.................................................................................1196

24.14.4LoopBackCombinedwithSilentMode..................................................................1197

24.14.5SoftwareControlofCAN_TXPin.........................................................................1197

24.15ParityCheckMechanism..............................................................................................1198

24.15.1BehavioronParityError...................................................................................1198

24.15.2ParityTesting................................................................................................1198

24.16Debug/SuspendMode.................................................................................................1199

24.17DCANControlRegisters..............................................................................................1199

24.17.1CANControlRegister(DCANCTL)......................................................................1201

24.17.2ErrorandStatusRegister(DCANES)...................................................................1203

24.17.3ErrorCounterRegister(DCANERRC)..................................................................1205

24.17.4BitTimingRegister(DCANBTR).........................................................................1206

24.17.5InterruptRegister(DCANINT)............................................................................1207

24.17.6TestRegister(DCANTEST)..............................................................................1208

24.17.7ParityErrorCodeRegister(DCANPERR)..............................................................1209

24.17.8Auto-Bus-OnTimeRegister(DCANABOTR)...........................................................1210

24.17.9TransmissionRequestXRegister(DCANTXRQX)...................................................1210

24.17.10TransmissionRequestRegisters(DCANTXRQ12toDCANTXRQ78)...........................1211

24.17.11NewDataXRegister(DCANNWDATX)..............................................................1212

24.17.12NewDataRegisters(DCANNWDAT12toDCANNWDAT78)......................................1213

24.17.13InterruptPendingXRegister(DCANINTPNDX).....................................................1214

24.17.14InterruptPendingRegisters(DCANINTPND12toDCANINTPND78)............................1215

24.17.15MessageValidXRegister(DCANMSGVALX).......................................................1216

24.17.16MessageValidRegisters(DCANMSGVAL12toDCANMSGVAL78).............................1217

24.17.17InterruptMultiplexerRegisters(DCANINTMUX12toDCANINTMUX78).........................1218

24.17.18IF1/IF2CommandRegisters(DCANIF1CMD,DCANIF2CMD)....................................1219

20

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

24.17.19IF1/IF2MaskRegisters(DCANIF1MSK,DCANIF2MSK)..........................................1222

24.17.20IF1/IF2ArbitrationRegisters(DCANIF1ARB,DCANIF2ARB).....................................1223

24.17.21IF1/IF2MessageControlRegisters(DCANIF1MCTL,DCANIF2MCTL).........................1224

24.17.22IF1/IF2DataAandDataBRegisters(DCANIF1DATA/DATB,DCANIF2DATA/DATB).......1226

24.17.23IF3ObservationRegister(DCANIF3OBS)............................................................1227

24.17.24IF3MaskRegister(DCANIF3MSK)....................................................................1229

24.17.25IF3ArbitrationRegister(DCANIF3ARB)...............................................................1230

24.17.26IF3MessageControlRegister(DCANIF3MCTL).....................................................1231

24.17.27IF3DataAandDataBRegisters(DCANIF3DATA/DATB).........................................1232

24.17.28IF3UpdateEnableRegisters(DCANIF3UPD12toIF3UPD78)....................................1233

24.17.29CANTXIOControlRegister(DCANTIOC)...........................................................1234

24.17.30CANRXIOControlRegister(DCANRIOC)...........................................................1235

25Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPinOption(MibSPIP)1237

25.1Overview.................................................................................................................1238

25.1.1WordFormatOptions........................................................................................1238

25.1.2Multi-buffering(Mib)support................................................................................1238

25.1.3TransmissionLock(Multi-BufferModeMasterOnly)....................................................1239

25.2OperatingModes.......................................................................................................1239

25.2.1PinConfigurations............................................................................................1239

25.2.2DataHandling.................................................................................................1240

25.2.3OperationwithSPISCS......................................................................................1243

25.2.4OperationwithSPIENA......................................................................................1244

25.2.5Five-PinOperation(HardwareHandshaking)............................................................1245

25.2.6DataFormats.................................................................................................1246

25.2.7ClockingModes...............................................................................................1247

25.2.8DataTransferExample......................................................................................1249

25.2.9DecodedandEncodedChipSelect(MasterOnly)......................................................1250

25.2.10VariableChipSelectSetupandHoldTiming(MasterOnly)..........................................1250

25.2.11HoldChip-SelectActive....................................................................................1250

25.2.12DetectionofSlaveDesynchronization(MasterOnly)..................................................1251

25.2.13ENASignalTime-Out(MasterOnly).....................................................................1251

25.2.14Data-LengthError...........................................................................................1252

25.2.15ParallelMode(MultipleSIMO/SOMISupport,notavailableonalldevices)........................1252

25.2.16ContinuousSelf-Test(Master/Slave).....................................................................1260

25.2.17HalfDuplexMode...........................................................................................1260

25.3TestFeatures...........................................................................................................1260

25.3.1InternalLoop-BackTestMode(MasterOnly)............................................................1260

25.3.2Input/OutputLoopbackTestMode.........................................................................1261

25.4General-PurposeI/O...................................................................................................1262

25.5Low-PowerMode.......................................................................................................1262

25.6Interrupts.................................................................................................................1263

25.6.1InterruptsinMulti-BufferMode.............................................................................1263

25.7DMAInterface...........................................................................................................1265

25.7.1DMAinMulti-BufferMode...................................................................................1265

25.8ModuleConfiguration..................................................................................................1266

25.8.1Compatibility(SPI)ModeConfiguration....................................................................1266

25.8.2MibSPIModeConfiguration.................................................................................1267

25.9ControlRegisters.......................................................................................................1268

25.9.1SPIGlobalControlRegister0(SPIGCR0)................................................................1269

25.9.2SPIGlobalControlRegister1(SPIGCR1)................................................................1270

25.9.3SPIInterruptRegister(SPIINT0)...........................................................................1271

25.9.4SPIInterruptLevelRegister(SPILVL).....................................................................1273

25.9.5SPIFlagRegister(SPIFLG)................................................................................1274

21

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

25.9.6SPIPinControlRegister0(SPIPC0)......................................................................1277

25.9.7SPIPinControlRegister1(SPIPC1)......................................................................1278

25.9.8SPIPinControlRegister2(SPIPC2)......................................................................1280

25.9.9SPIPinControlRegister3(SPIPC3)......................................................................1281

25.9.10SPIPinControlRegister4(SPIPC4)....................................................................1282

25.9.11SPIPinControlRegister5(SPIPC5)....................................................................1284

25.9.12SPIPinControlRegister6(SPIPC6)....................................................................1285

25.9.13SPIPinControlRegister7(SPIPC7)....................................................................1287

25.9.14SPIPinControlRegister8(SPIPC8)....................................................................1288

25.9.15SPITransmitDataRegister0(SPIDAT0)...............................................................1289

25.9.16SPITransmitDataRegister1(SPIDAT1)...............................................................1290

25.9.17SPIReceiveBufferRegister(SPIBUF)..................................................................1291

25.9.18SPIEmulationRegister(SPIEMU).......................................................................1293

25.9.19SPIDelayRegister(SPIDELAY)..........................................................................1293

25.9.20SPIDefaultChipSelectRegister(SPIDEF).............................................................1296

25.9.21SPIDataFormatRegisters(SPIFMT)...................................................................1297

25.9.22InterruptVector0(INTVECT0)............................................................................1299

25.9.23InterruptVector1(INTVECT1)............................................................................1300

25.9.24Parallel/ModuloModeControlRegister(SPIPMCTRL)................................................1301

25.9.25Multi-bufferModeEnableRegister(MIBSPIE)..........................................................1304

25.9.26TGInterruptEnableSetRegister(TGITENST).........................................................1305

25.9.27TGInterruptEnableClearRegister(TGITENCR)......................................................1306

25.9.28TransferGroupInterruptLevelSetRegister(TGITLVST).............................................1307

25.9.29TransferGroupInterruptLevelClearRegister(TGITLVCR)..........................................1308

25.9.30TransferGroupInterruptFlagRegister(TGINTFLG)..................................................1309

25.9.31TickCountRegister(TICKCNT)..........................................................................1310

25.9.32LastTGEndPointer(LTGPEND)........................................................................1311

25.9.33TGxControlRegisters(TGxCTRL).......................................................................1312

25.9.34DMAChannelControlRegister(DMAxCTRL)..........................................................1315

25.9.35DMAxCOUNTRegister(ICOUNT)........................................................................1317

25.9.36DMALargeCount(DMACNTLEN).......................................................................1318

25.9.37Multi-bufferRAMUncorrectableParityErrorControlRegister(UERRCTRL)......................1318

25.9.38Multi-bufferRAMUncorrectableParityErrorStatusRegister(UERRSTAT)........................1319

25.9.39RXRAMUncorrectableParityErrorAddressRegister(UERRADDR1)..............................1320

25.9.40TXRAMUncorrectableParityErrorAddressRegister(UERRADDR0)..............................1321

25.9.41RXRAMOverrunBufferAddressRegister(RXOVRN_BUF_ADDR)................................1322

25.9.42I/O-LoopbackTestControlRegister(IOLPBKTSTCR)................................................1323

25.9.43SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1forSPIFMT0andSPIFMT1)...1325

25.9.44SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2forSPIFMT2andSPIFMT3)...1327

25.10Multi-BufferRAM.......................................................................................................1329

25.10.1Multi-BufferRAMAutoInitialization.......................................................................1330

25.10.2Multi-bufferRAMRegisterSummary.....................................................................1330

25.10.3Multi-bufferRAMTransmitDataRegister...............................................................1331

25.10.4Multi-bufferRAMReceiveBufferRegister...............................................................1333

25.11ParityMemory..........................................................................................................1335

25.11.1ExampleofParityMemoryOrganization................................................................1337

25.12MibSPIPinTimingParameters.......................................................................................1338

25.12.1MasterModeTimingsforSPI/MibSPI....................................................................1338

25.12.2SlaveModeTimingsforSPI/MibSPI.....................................................................1340

25.12.3MasterModeTimingParameterDetails.................................................................1341

25.12.4SlaveModeTimingParameterDetails...................................................................1343

26SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)Module....................1344

26.1IntroductionandFeatures.............................................................................................1345

22

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

26.1.1SCIFeatures..................................................................................................1345

26.1.2LINFeatures..................................................................................................1346

26.1.3BlockDiagram................................................................................................1347

26.2SCICommunicationFormats.........................................................................................1350

26.2.1SCIFrameFormats..........................................................................................1350

26.2.2SCITimingMode.............................................................................................1351

26.2.3SCIBaudRate................................................................................................1351

26.2.4SCIMultiprocessorCommunicationModes...............................................................1354

26.2.5SCIMultiBufferedMode....................................................................................1356

26.3SCIInterrupts...........................................................................................................1358

26.3.1TransmitInterrupt.............................................................................................1359

26.3.2ReceiveInterrupt.............................................................................................1359

26.3.3WakeUpInterrupt.............................................................................................1359

26.3.4ErrorInterrupts................................................................................................1360

26.4SCIDMAInterface.....................................................................................................1361

26.4.1ReceiveDMARequests.....................................................................................1361

26.4.2TransmitDMARequests....................................................................................1361

26.5SCIConfigurations.....................................................................................................1362

26.5.1ReceivingData................................................................................................1362

26.5.2TransmittingData.............................................................................................1363

26.6SCILowPowerMode..................................................................................................1364

26.6.1SleepModeforMultiprocessorCommunication..........................................................1364

26.7LINCommunicationFormats..........................................................................................1365

26.7.1LINStandards.................................................................................................1365

26.7.2MessageFrame..............................................................................................1366

26.7.3Synchronizer..................................................................................................1368

26.7.4BaudRate.....................................................................................................1368

26.7.5HeaderGeneration...........................................................................................1370

26.7.6ExtendedFramesHandling.................................................................................1374

26.7.7TimeoutControl...............................................................................................1375

26.7.8TXRXErrorDetector(TED).................................................................................1376

26.7.9MessageFilteringandValidation...........................................................................1379

26.7.10ReceiveBuffers.............................................................................................1381

26.7.11TransmitBuffers............................................................................................1381

26.8LINInterrupts............................................................................................................1382

26.9LINDMAInterface......................................................................................................1382

26.9.1LINReceiveDMARequests................................................................................1382

26.9.2LINTransmitDMARequests...............................................................................1382

26.10LINConfigurations.....................................................................................................1383

26.10.1ReceivingData..............................................................................................1383

26.10.2TransmittingData...........................................................................................1384

26.11Low-PowerMode.......................................................................................................1385

26.11.1EnteringSleepMode.......................................................................................1385

26.11.2Wakeup......................................................................................................1386

26.11.3WakeupTimeouts...........................................................................................1387

26.12EmulationMode........................................................................................................1387

26.13SCI/LINControlRegisters............................................................................................1388

26.13.1SCIGlobalControlRegister0(SCIGCR0)..............................................................1389

26.13.2SCIGlobalControlRegister1(SCIGCR1)..............................................................1390

26.13.3SCIGlobalControlRegister2(SCIGCR2)..............................................................1394

26.13.4SCISetInterruptRegister(SCISETINT).................................................................1395

26.13.5SCIClearInterruptRegister(SCICLEARINT)..........................................................1398

26.13.6SCISetInterruptLevelRegister(SCISETINTLVL).....................................................1401

23

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

26.13.7SCIClearInterruptLevelRegister(SCICLEARINTLVL)..............................................1404

26.13.8SCIFlagsRegister(SCIFLR).............................................................................1407

26.13.9SCIInterruptVectorOffset0(SCIINTVECT0)..........................................................1414

26.13.10SCIInterruptVectorOffset1(SCIINTVECT1)........................................................1414

26.13.11SCIFormatControlRegister(SCIFORMAT)..........................................................1415

26.13.12BaudRateSelectionRegister(BRS)...................................................................1416

26.13.13SCIDataBuffers(SCIED,SCIRD,SCITD)............................................................1417

26.13.14SCIPinI/OControlRegister0(SCIPIO0).............................................................1419

26.13.15SCIPinI/OControlRegister1(SCIPIO1).............................................................1420

26.13.16SCIPinI/OControlRegister2(SCIPIO2).............................................................1421

26.13.17SCIPinI/OControlRegister3(SCIPIO3).............................................................1422

26.13.18SCIPinI/OControlRegister4(SCIPIO4).............................................................1423

26.13.19SCIPinI/OControlRegister5(SCIPIO5).............................................................1424

26.13.20SCIPinI/OControlRegister6(SCIPIO6).............................................................1425

26.13.21SCIPinI/OControlRegister7(SCIPIO7).............................................................1426

26.13.22SCIPinI/OControlRegister8(SCIPIO8).............................................................1426

26.13.23LINCompareRegister(LINCOMPARE)...............................................................1427

26.13.24LINReceiveBuffer0Register(LINRD0)...............................................................1428

26.13.25LINReceiveBuffer1Register(LINRD1)...............................................................1428

26.13.26LINMaskRegister(LINMASK)..........................................................................1429

26.13.27LINIdentificationRegister(LINID)......................................................................1430

26.13.28LINTransmitBuffer0Register(LINTD0)...............................................................1431

26.13.29LINTransmitBuffer1Register(LINTD1)..............................................................1431

26.13.30MaximumBaudRateSelectionRegister(MBRS)....................................................1432

26.13.31Input/OutputErrorEnable(IODFTCTRL)Register...................................................1433

26.14GPIOFunctionality.....................................................................................................1435

26.14.1GPIOFunctionality..........................................................................................1435

26.14.2UnderReset.................................................................................................1435

26.14.3OutofReset.................................................................................................1436

26.14.4Open-DrainFeatureEnabledonaPin...................................................................1436

26.14.5Summary.....................................................................................................1436

27SerialCommunicationInterface(SCI)Module....................................................................1437

27.1Introduction..............................................................................................................1438

27.1.1SCIFeatures..................................................................................................1438

27.1.2BlockDiagram................................................................................................1438

27.2SCICommunicationFormats.........................................................................................1440

27.2.1SCIFrameFormats..........................................................................................1440

27.2.2SCITimingMode.............................................................................................1440

27.2.3SCIBaudRate................................................................................................1441

27.2.4SCIMultiprocessorCommunicationModes...............................................................1442

27.3SCIInterrupts...........................................................................................................1445

27.3.1TransmitInterrupt.............................................................................................1446

27.3.2ReceiveInterrupt.............................................................................................1446

27.3.3WakeUpInterrupt.............................................................................................1446

27.3.4ErrorInterrupts................................................................................................1447

27.4SCIDMAInterface.....................................................................................................1448

27.4.1ReceiveDMARequests.....................................................................................1448

27.4.2TransmitDMARequests....................................................................................1448

27.5SCIConfigurations.....................................................................................................1449

27.5.1ReceivingData................................................................................................1449

27.5.2TransmittingData.............................................................................................1450

27.6SCILowPowerMode..................................................................................................1450

27.6.1SleepModeforMultiprocessorCommunication..........................................................1451

24

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

27.7SCIControlRegisters..................................................................................................1452

27.7.1SCIGlobalControlRegister0(SCIGCR0)................................................................1453

27.7.2SCIGlobalControlRegister1(SCIGCR1)................................................................1454

27.7.3SCISetInterruptRegister(SCISETINT)..................................................................1457

27.7.4SCIClearInterruptRegister(SCICLEARINT)............................................................1459

27.7.5SCISetInterruptLevelRegister(SCISETINTLVL)......................................................1461

27.7.6SCIClearInterruptLevelRegister(SCICLEARINTLVL)................................................1462

27.7.7SCIFlagsRegister(SCIFLR)...............................................................................1464

27.7.8SCIInterruptVectorOffset0(SCIINTVECT0)...........................................................1468

27.7.9SCIInterruptVectorOffset1(SCIINTVECT1)...........................................................1468

27.7.10SCIFormatControlRegister(SCIFORMAT)............................................................1469

27.7.11BaudRateSelectionRegister(BRS).....................................................................1470

27.7.12SCIDataBuffers(SCIED,SCIRD,SCITD)..............................................................1471

27.7.13SCIPinI/OControlRegister0(SCIPIO0)...............................................................1472

27.7.14SCIPinI/OControlRegister1(SCIPIO1)...............................................................1473

27.7.15SCIPinI/OControlRegister2(SCIPIO2)...............................................................1474

27.7.16SCIPinI/OControlRegister3(SCIPIO3)...............................................................1475

27.7.17SCIPinI/OControlRegister4(SCIPIO4)...............................................................1476

27.7.18SCIPinI/OControlRegister5(SCIPIO5)...............................................................1477

27.7.19SCIPinI/OControlRegister6(SCIPIO6)...............................................................1478

27.7.20SCIPinI/OControlRegister7(SCIPIO7)...............................................................1479

27.7.21SCIPinI/OControlRegister8(SCIPIO8)...............................................................1479

27.7.22Input/OutputErrorEnable(IODFTCTRL)Register.....................................................1480

27.8GPIOFunctionality.....................................................................................................1482

27.8.1GPIOFunctionality...........................................................................................1482

27.8.2UnderReset...................................................................................................1482

27.8.3OutofReset...................................................................................................1483

27.8.4Open-DrainFeatureEnabledonaPin....................................................................1483

27.8.5Summary......................................................................................................1483

28Inter-IntegratedCircuit(I2C)Module.................................................................................1484

28.1Overview.................................................................................................................1485

28.1.1IntroductiontotheI2CModule..............................................................................1485

28.1.2FunctionalOverview.........................................................................................1486

28.1.3ClockGeneration.............................................................................................1488

28.2I2CModuleOperation.................................................................................................1489

28.2.1InputandOutputVoltageLevels...........................................................................1489

28.2.2I2CModuleResetConditions...............................................................................1489

28.2.3I2CModuleDataValidity...................................................................................1489

28.2.4I2CModuleStartandStopConditions....................................................................1490

28.2.5SerialDataFormats..........................................................................................1490

28.2.6NACKBitGeneration........................................................................................1492

28.3I2COperationModes..................................................................................................1493

28.3.1MasterTransmitterMode....................................................................................1493

28.3.2MasterReceiverMode.......................................................................................1493

28.3.3SlaveTransmitterMode.....................................................................................1493

28.3.4SlaveReceiverMode........................................................................................1493

28.3.5LowPowerMode.............................................................................................1494

28.3.6FreeRunMode...............................................................................................1494

28.3.7IgnoreNACKMode..........................................................................................1494

28.4I2CModuleIntegrity....................................................................................................1495

28.4.1Arbitration......................................................................................................1495

28.4.2I2CClockGenerationandSynchronization...............................................................1496

28.4.3Prescaler......................................................................................................1496

25

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

28.4.4NoiseFilter....................................................................................................1496

28.5OperationalInformation................................................................................................1497

28.5.1I2CModuleInterrupts........................................................................................1497

28.5.2DMAControllerEvents......................................................................................1498

28.5.3I2CEnable/Disable...........................................................................................1498

28.5.4GeneralPurposeI/O.........................................................................................1498

28.5.5PullUp/PullDownFunction.................................................................................1499

28.5.6OpenDrainFunction.........................................................................................1499

28.6I2CRegisters............................................................................................................1500

28.6.1I2COwnAddressManager(I2COAR).....................................................................1501

28.6.2I2CInterruptMaskRegister(I2CIMR).....................................................................1502

28.6.3I2CStatusRegister(I2CSTR)..............................................................................1503

28.6.4I2CClockDividerLowRegister(I2CCKL)................................................................1506

28.6.5I2CClockControlHighRegister(I2CCKH)...............................................................1506

28.6.6I2CDataCountRegister(I2CCNT)........................................................................1507

28.6.7I2CDataReceiveRegister(I2CDRR).....................................................................1507

28.6.8I2CSlaveAddressRegister(I2CSAR)....................................................................1508

28.6.9I2CDataTransmitRegister(I2CDXR).....................................................................1508

28.6.10I2CModeRegister(I2CMDR).............................................................................1509

28.6.11I2CInterruptVectorRegister(I2CIVR)...................................................................1512

28.6.12I2CExtendedModeRegister(I2CEMDR)...............................................................1513

28.6.13I2CPrescaleRegister(I2CPSC)..........................................................................1513

28.6.14I2CPeripheralIDRegister1(I2CPID1)..................................................................1514

28.6.15I2CPeripheralIDRegister2(I2CPID2)..................................................................1514

28.6.16I2CDMAControlRegister(I2CDMACR)................................................................1515

28.6.17I2CPinFunctionRegister(I2CPFNC)...................................................................1515

28.6.18I2CPinDirectionRegister(I2CPDIR)....................................................................1516

28.6.19I2CDataInputRegister(I2CDIN).........................................................................1516

28.6.20I2CDataOutputRegister(I2CDOUT)...................................................................1517

28.6.21I2CDataSetRegister(I2CDSET)........................................................................1517

28.6.22I2CDataClearRegister(I2CDCLR).....................................................................1518

28.6.23I2CPinOpenDrainRegister(I2CPDR).................................................................1518

28.6.24I2CPullDisableRegister(I2CPDIS).....................................................................1519

28.6.25I2CPullSelectRegister(I2CPSEL)......................................................................1519

28.6.26I2CPinsSlewRateSelectRegister(I2CSRS).........................................................1520

28.7SampleWaveforms....................................................................................................1521

29EMAC/MDIOModule.......................................................................................................1522

29.1Introduction..............................................................................................................1523

29.1.1PurposeofthePeripheral...................................................................................1523

29.1.2Features.......................................................................................................1523

29.1.3FunctionalBlockDiagram...................................................................................1524

29.1.4IndustryStandard(s)ComplianceStatement.............................................................1525

29.2Architecture..............................................................................................................1526

29.2.1ClockControl..................................................................................................1526

29.2.2MemoryMap..................................................................................................1526

29.2.3SignalDescriptions...........................................................................................1526

29.2.4MII/RMIISignalMultiplexingControl.....................................................................1529

29.2.5EthernetProtocolOverview.................................................................................1529

29.2.6ProgrammingInterface......................................................................................1531

29.2.7EMACControlModule.......................................................................................1542

29.2.8MDIOModule.................................................................................................1543

29.2.9EMACModule................................................................................................1548

29.2.10MACInterface...............................................................................................1550

26

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

29.2.11PacketReceiveOperation.................................................................................1554

29.2.12PacketTransmitOperation................................................................................1559

29.2.13ReceiveandTransmitLatency............................................................................1560

29.2.14TransferNodePriority......................................................................................1560

29.2.15ResetConsiderations.......................................................................................1561

29.2.16Initialization..................................................................................................1562

29.2.17InterruptSupport............................................................................................1564

29.2.18PowerManagement........................................................................................1568

29.2.19EmulationConsiderations..................................................................................1568

29.3EMACControlModuleRegisters.....................................................................................1569

29.3.1EMACControlModuleRevisionIDRegister(REVID)...................................................1570

29.3.2EMACControlModuleSoftwareResetRegister(SOFTRESET)......................................1570

29.3.3EMACControlModuleInterruptControlRegister(INTCONTROL)....................................1571

29.3.4EMACControlModuleReceiveThresholdInterruptEnableRegisters(C0RXTHRESHEN).......1572

29.3.5EMACControlModuleReceiveInterruptEnableRegisters(C0RXEN)...............................1573

29.3.6EMACControlModuleTransmitInterruptEnableRegisters(C0TXEN)..............................1574

29.3.7EMACControlModuleMiscellaneousInterruptEnableRegisters(C0MISCEN)....................1575

29.3.8EMACControlModuleReceiveThresholdInterruptStatusRegisters(C0RXTHRESHSTAT)....1576

29.3.9EMACControlModuleReceiveInterruptStatusRegisters(C0RXSTAT)............................1577

29.3.10EMACControlModuleTransmitInterruptStatusRegisters(C0TXSTAT)..........................1578

29.3.11EMACControlModuleMiscellaneousInterruptStatusRegisters(C0MISCSTAT)................1579

29.3.12EMACControlModuleReceiveInterruptsPerMillisecondRegisters(C0RXIMAX)...............1580

29.3.13EMACControlModuleTransmitInterruptsPerMillisecondRegisters(C0TXIMAX)..............1581

29.4MDIORegisters.........................................................................................................1582

29.4.1MDIORevisionIDRegister(REVID)......................................................................1582

29.4.2MDIOControlRegister(CONTROL).......................................................................1583

29.4.3PHYAcknowledgeStatusRegister(ALIVE)..............................................................1584

29.4.4PHYLinkStatusRegister(LINK)...........................................................................1584

29.4.5MDIOLinkStatusChangeInterrupt(Unmasked)Register(LINKINTRAW)..........................1585

29.4.6MDIOLinkStatusChangeInterrupt(Masked)Register(LINKINTMASKED)........................1586

29.4.7MDIOUserCommandCompleteInterrupt(Unmasked)Register(USERINTRAW).................1587

29.4.8MDIOUserCommandCompleteInterrupt(Masked)Register(USERINTMASKED)...............1588

29.4.9MDIOUserCommandCompleteInterruptMaskSetRegister(USERINTMASKSET)..............1589

29.4.10MDIOUserCommandCompleteInterruptMaskClearRegister(USERINTMASKCLEAR)......1590

29.4.11MDIOUserAccessRegister0(USERACCESS0).....................................................1591

29.4.12MDIOUserPHYSelectRegister0(USERPHYSEL0).................................................1592

29.4.13MDIOUserAccessRegister1(USERACCESS1).....................................................1593

29.4.14MDIOUserPHYSelectRegister1(USERPHYSEL1).................................................1594

29.5EMACModuleRegisters..............................................................................................1595

29.5.1TransmitRevisionIDRegister(TXREVID)................................................................1598

29.5.2TransmitControlRegister(TXCONTROL)................................................................1598

29.5.3TransmitTeardownRegister(TXTEARDOWN)..........................................................1599

29.5.4ReceiveRevisionIDRegister(RXREVID)................................................................1599

29.5.5ReceiveControlRegister(RXCONTROL)................................................................1600

29.5.6ReceiveTeardownRegister(RXTEARDOWN)..........................................................1600

29.5.7TransmitInterruptStatus(Unmasked)Register(TXINTSTATRAW)..................................1601

29.5.8TransmitInterruptStatus(Masked)Register(TXINTSTATMASKED)................................1602

29.5.9TransmitInterruptMaskSetRegister(TXINTMASKSET)..............................................1603

29.5.10TransmitInterruptMaskClearRegister(TXINTMASKCLEAR).......................................1604

29.5.11MACInputVectorRegister(MACINVECTOR)..........................................................1605

29.5.12MACEndOfInterruptVectorRegister(MACEOIVECTOR)..........................................1606

29.5.13ReceiveInterruptStatus(Unmasked)Register(RXINTSTATRAW).................................1607

29.5.14ReceiveInterruptStatus(Masked)Register(RXINTSTATMASKED)...............................1608

27

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

29.5.15ReceiveInterruptMaskSetRegister(RXINTMASKSET).............................................1609

29.5.16ReceiveInterruptMaskClearRegister(RXINTMASKCLEAR).......................................1610

29.5.17MACInterruptStatus(Unmasked)Register(MACINTSTATRAW)...................................1611

29.5.18MACInterruptStatus(Masked)Register(MACINTSTATMASKED).................................1611

29.5.19MACInterruptMaskSetRegister(MACINTMASKSET)...............................................1612

29.5.20MACInterruptMaskClearRegister(MACINTMASKCLEAR).........................................1612

29.5.21ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)........1613

29.5.22ReceiveUnicastEnableSetRegister(RXUNICASTSET)............................................1615

29.5.23ReceiveUnicastClearRegister(RXUNICASTCLEAR)................................................1616

29.5.24ReceiveMaximumLengthRegister(RXMAXLEN).....................................................1616

29.5.25ReceiveBufferOffsetRegister(RXBUFFEROFFSET)................................................1617

29.5.26ReceiveFilterLowPriorityFrameThresholdRegister(RXFILTERLOWTHRESH)................1617

29.5.27ReceiveChannelFlowControlThresholdRegisters(RX0FLOWTHRESH-RX7FLOWTHRESH)

....................................................................................................................1618

29.5.28ReceiveChannelFreeBufferCountRegisters(RX0FREEBUFFER-RX7FREEBUFFER).......1618

29.5.29MACControlRegister(MACCONTROL)................................................................1619

29.5.30MACStatusRegister(MACSTATUS)....................................................................1621

29.5.31EmulationControlRegister(EMCONTROL)............................................................1623

29.5.32FIFOControlRegister(FIFOCONTROL)................................................................1623

29.5.33MACConfigurationRegister(MACCONFIG)............................................................1624

29.5.34SoftResetRegister(SOFTRESET)......................................................................1624

29.5.35MACSourceAddressLowBytesRegister(MACSRCADDRLO).....................................1625

29.5.36MACSourceAddressHighBytesRegister(MACSRCADDRHI).....................................1625

29.5.37MACHashAddressRegister1(MACHASH1)..........................................................1626

29.5.38MACHashAddressRegister2(MACHASH2)..........................................................1626

29.5.39BackOffTestRegister(BOFFTEST)....................................................................1627

29.5.40TransmitPacingAlgorithmTestRegister(TPACETEST).............................................1627

29.5.41ReceivePauseTimerRegister(RXPAUSE)............................................................1628

29.5.42TransmitPauseTimerRegister(TXPAUSE)............................................................1628

29.5.43MACAddressLowBytesRegister(MACADDRLO)....................................................1629

29.5.44MACAddressHighBytesRegister(MACADDRHI)....................................................1630

29.5.45MACIndexRegister(MACINDEX).......................................................................1630

29.5.46TransmitChannelDMAHeadDescriptorPointerRegisters(TX0HDP-TX7HDP)..................1631

29.5.47ReceiveChannelDMAHeadDescriptorPointerRegisters(RX0HDP-RX7HDP)..................1631

29.5.48TransmitChannelCompletionPointerRegisters(TX0CP-TX7CP)..................................1632

29.5.49ReceiveChannelCompletionPointerRegisters(RX0CP-RX7CP)..................................1632

29.5.50NetworkStatisticsRegisters...............................................................................1633

30DataModificationModule(DMM)......................................................................................1642

30.1Overview.................................................................................................................1643

30.1.1Features.......................................................................................................1643

30.1.2BlockDiagram................................................................................................1643

30.2ModuleOperation......................................................................................................1644

30.2.1DataFormat...................................................................................................1644

30.2.2DataPort......................................................................................................1646

30.2.3ErrorHandling................................................................................................1647

30.2.4Interrupts......................................................................................................1648

30.3ControlRegisters.......................................................................................................1649

30.3.1DMMGlobalControlRegister(DMMGLBCTRL).........................................................1650

30.3.2DMMInterruptSetRegister(DMMINTSET)..............................................................1652

30.3.3DMMInterruptClearRegister(DMMINTCLR)............................................................1656

30.3.4DMMInterruptLevelRegister(DMMINTLVL)............................................................1661

30.3.5DMMInterruptFlagRegister(DMMINTFLG).............................................................1663

30.3.6DMMInterruptOffset1Register(DMMOFF1)...........................................................1667

28

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

30.3.7DMMInterruptOffset2Register(DMMOFF2)...........................................................1668

30.3.8DMMDirectDataModeDestinationRegister(DMMDDMDEST)......................................1669

30.3.9DMMDirectDataModeBlocksizeRegister(DMMDDMBL)............................................1669

30.3.10DMMDirectDataModePointerRegister(DMMDDMPT).............................................1670

30.3.11DMMDirectDataModeInterruptPointerRegister(DMMINTPT)....................................1670

30.3.12DMMDestinationxRegion1(DMMDESTxREG1).....................................................1671

30.3.13DMMDestinationxBlocksize1(DMMDESTxBL1).....................................................1672

30.3.14DMMDestinationxRegion2(DMMDESTxREG2).....................................................1673

30.3.15DMMDestinationxBlocksize2(DMMDESTxBL2).....................................................1674

30.3.16DMMPinControl0(DMMPC0)...........................................................................1675

30.3.17DMMPinControl1(DMMPC1)...........................................................................1676

30.3.18DMMPinControl2(DMMPC2)...........................................................................1678

30.3.19DMMPinControl3(DMMPC3)...........................................................................1679

30.3.20DMMPinControl4(DMMPC4)...........................................................................1680

30.3.21DMMPinControl5(DMMPC5)...........................................................................1682

30.3.22DMMPinControl6(DMMPC6)...........................................................................1683

30.3.23DMMPinControl7(DMMPC7)...........................................................................1685

30.3.24DMMPinControl8(DMMPC8)...........................................................................1686

31RAMTracePort(RTP).....................................................................................................1688

31.1Overview.................................................................................................................1689

31.1.1Features.......................................................................................................1689

31.1.2BlockDiagram................................................................................................1689

31.2ModuleOperation......................................................................................................1690

31.2.1TraceMode...................................................................................................1690

31.2.2DirectDataMode(DDM)....................................................................................1691

31.2.3TraceRegions................................................................................................1692

31.2.4Overflow/EmptyHandling...................................................................................1694

31.2.5SignalDescription............................................................................................1694

31.2.6DataRate......................................................................................................1695

31.3GIOFunction............................................................................................................1696

31.4ControlRegisters.......................................................................................................1696

31.4.1RTPGlobalControlRegister(RTPGLBCTRL)...........................................................1697

31.4.2RTPTraceEnableRegister(RTPTRENA)................................................................1700

31.4.3RTPGlobalStatusRegister(RTPGSR)...................................................................1701

31.4.4RTPRAM1TraceRegion[1:2]Register(RTPRAM1REG[1:2]).......................................1703

31.4.5RTPRAM2TraceRegion[1:2]Register(RTPRAM2REG[1:2]).......................................1704

31.4.6RTPPeripheralTraceRegion[1:2]Registers(RTPPERREG[1:2])...................................1705

31.4.7RTPDirectDataModeWriteRegister(RTPDDMW)....................................................1706

31.4.8RTPPinControl0Register(RTPPC0)....................................................................1707

31.4.9RTPPinControl1Register(RTPPC1)....................................................................1708

31.4.10RTPPinControl2Register(RTPPC2)..................................................................1709

31.4.11RTPPinControl3Register(RTPPC3)..................................................................1710

31.4.12RTPPinControl4Register(RTPPC4)..................................................................1711

31.4.13RTPPinControl5Register(RTPPC5)..................................................................1712

31.4.14RTPPinControl6Register(RTPPC6)..................................................................1713

31.4.15RTPPinControl7Register(RTPPC7)..................................................................1715

31.4.16RTPPinControl8Register(RTPPC8)..................................................................1716

32eFuseController............................................................................................................1717

32.1Overview.................................................................................................................1718

32.2Introduction..............................................................................................................1718

32.3eFuseControllerTesting..............................................................................................1718

32.3.1eFuseControllerConnectionstoESM....................................................................1718

32.3.2CheckingforeFuseErrorsAfterPowerUp...............................................................1718

29

SPNU499B–November2012–RevisedAugust2013

Contents

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

32.4eFuseControllerRegisters............................................................................................1721

32.4.1EFCBoundaryControlRegister(EFCBOUND)..........................................................1721

32.4.2EFCPinsRegister(EFCPINS).............................................................................1723

32.4.3EFCErrorStatusRegister(EFCERRSTAT)..............................................................1724

32.4.4EFCSelfTestCyclesRegister(EFCSTCY)..............................................................1724

32.4.5EFCSelfTestSignatureRegister(EFCSTSIG)..........................................................1725

ARevisionHistory............................................................................................................1726

30

Contents

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

ListofFigures

1-1.BlockDiagram.............................................................................................................94

1-2.Example:SPIDELAY–0xFFF7F448...................................................................................95

2-1.ArchitecturalBlockDiagram.............................................................................................97

2-2.MemoryMap.............................................................................................................101

2-3.HardwareMemoryInitializationProtocol.............................................................................111

2-4.ClockTestRegister(CLKTEST)[offset=FFFFFFF8Ch]..........................................................121

2-5.SYSPinControlRegister1(SYSPC1)[offset=00h]...............................................................126

2-6.SYSPinControlRegister2(SYSPC2)[offset=04h]...............................................................126

2-7.SYSPinControlRegister3(SYSPC3)[offset=08h]...............................................................127

2-8.SYSPinControlRegister4(SYSPC4)[offset=0Ch]..............................................................127

2-9.SYSPinControlRegister5(SYSPC5)[offset=10h]...............................................................128

2-10.SYSPinControlRegister6(SYSPC6)[offset=14h]...............................................................128

2-11.SYSPinControlRegister7(SYSPC7)[offset=18h]...............................................................129

2-12.SYSPinControlRegister8(SYSPC8)[offset=1Ch]..............................................................129

2-13.SYSPinControlRegister9(SYSPC9)[offset=20h]...............................................................130

2-14.ClockSourceDisableRegister(CSDIS)[offset=30h].............................................................131

2-15.ClockSourceDisableSetRegister(CSDISSET)[offset=34h]...................................................132

2-16.ClockSourceDisableClearRegister(CSDISCLR)[offset=38h].................................................133

2-17.ClockDomainDisableRegister(CDDIS)[offset=3Ch]............................................................134

2-18.ClockDomainDisableSetRegister(CDDISSET)[offset=40h]..................................................135

2-19.ClockDomainDisableClearRegister(CDDISCLR)[offset=44h]................................................136

2-20.GCLK,HCLK,VCLK,andVCLK2SourceRegister(GHVSRC)[offset=48h]..................................138

2-21.PeripheralAsynchronousClockSourceRegister(VCLKASRC)[offset=4Ch].................................139

2-22.RTIClockSourceRegister(RCLKSRC)[offset=50h].............................................................140

2-23.ClockSourceValidStatusRegister(CSVSTAT)[offset=54h]....................................................141

2-24.MemorySelf-TestGlobalControlRegister(MSTGCR)[offset=58h]............................................142

2-25.MemoryHardwareInitializationGlobalControlRegister(MINITGCR)[offset=5Ch]..........................143

2-26.MBISTController/MemoryInitializationEnableRegister(MSINENA)[offset=60h]............................144

2-27.MSTCGlobalStatusRegister(MSTCGSTAT)[offset=68h]......................................................145

2-28.MemoryHardwareInitializationStatusRegister(MINISTAT)[offset=6Ch].....................................146

2-29.PLLControlRegister1(PLLCTL1)[offset=70h]...................................................................146

2-30.PLLControlRegister2(PLLCTL2)[offset=74h]...................................................................148

2-31.SYSPinControlRegister10(SYSPC10)[offset=78h]............................................................149

2-32.DieIdentificationRegister,LowerWord(DIEIDL)[offset=7Ch]..................................................150

2-33.DieIdentificationRegister,UpperWord(DIEIDH)[offset=80h]..................................................150

2-34.LPO/ClockMonitorControlRegister(LPOMONCTL)[offset=88h]..............................................151

2-35.ClockTestRegister(CLKTEST)[offset=8Ch]......................................................................154

2-36.DFTControlRegister(DFTCTRLREG)[offset=90h]..............................................................156

2-37.DFTControlRegister2(DFTCTRLREG2)[offset=94h]..........................................................157

2-38.GeneralPurposeRegister(GPREG1)[offset=A0h]...............................................................158

2-39.ImpreciseFaultStatusRegister(IMPFASTS)[offset=A8h].......................................................160

2-40.ImpreciseFaultWriteAddressRegister(IMPFTADD)[offset=ACh].............................................161

2-41.SystemSoftwareInterruptRequest1Register(SSIR1)[offset=B0h]...........................................162

2-42.SystemSoftwareInterruptRequest2Register(SSIR2)[offset=B4h]...........................................162

2-43.SystemSoftwareInterruptRequest3Register(SSIR3)[offset=B8h]...........................................163

2-44.SystemSoftwareInterruptRequest4Register(SSIR4)[offset=BCh]..........................................163

2-45.RAMControlRegister(RAMGCR)[offset=C0h]...................................................................164

31

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

2-46.BusMatrixModuleControlRegister1(BMMCR)[offset=C4h]..................................................165

2-47.CPUResetControlRegister(CPURSTCR)[offset=CCh]........................................................165

2-48.ClockControlRegister(CLKCNTRL)[offset=D0h]................................................................166

2-49.ECPControlRegister(ECPCNTL)[offset=D4h]...................................................................167

2-50.DEVParityControlRegister1(DEVCR1)[offset=DCh]..........................................................168

2-51.SystemExceptionControlRegister(SYSECR)[offset=E0h].....................................................168

2-52.SystemExceptionStatusRegister(SYSESR)[offset=E4h].....................................................169

2-53.SystemTestAbortStatusRegister(SYSTASR)[offset=E8h]...................................................170

2-54.GlobalStatusRegister(GLBSTAT)[offset=ECh]..................................................................171

2-55.DeviceIdentificationRegister(DEVID)[offset=F0h]...............................................................172

2-56.SoftwareInterruptVectorRegister(SSIVEC)[offset=F4h].......................................................173

2-57.SystemSoftwareInterruptFlagRegister(SSIF)[offset=F8h]....................................................174

2-58.PLLControlRegister3(PLLCTL3)[offset=00].....................................................................176

2-59.CPULogicBISTClockPrescaler(STCLKDIV)[offset=08h]......................................................177

2-60.Clock2ControlRegister(CLK2CNTRL)[offset=3Ch].............................................................177

2-61.PeripheralAsynchronousClockConfiguration1Register(VCLKACON1)[offset=40h]......................178

2-62.ClockSlipRegister(CLKSLIP)[offset=70h].......................................................................179

2-63.EFUSEControllerControlRegister(EFC_CTLREG)[offset=ECh].............................................180

2-64.DieIdentificationRegister,LowerWord(DIEIDL_REG0)[offset=F0h]..........................................180

2-65.DieIdentificationRegister,UpperWord(DIEIDH_REG1)[offset=F4h].........................................181

2-66.DieIdentificationRegister,LowerWord(DIEIDL_REG2)[offset=F8h]..........................................181

2-67.DieIdentificationRegister,UpperWord(DIEIDH_REG3)[offset=FCh].........................................181

2-68.PeripheralMemoryProtectionSetRegister0(PMPROTSET0)[offset=00]....................................183

2-69.PeripheralMemoryProtectionSetRegister1(PMPROTSET1)[offset=04h]..................................183

2-70.PeripheralMemoryProtectionClearRegister0(PMPROTCLR0)[offset=10h]................................184

2-71.PeripheralMemoryProtectionClearRegister1(PMPROTCLR1)[offset=14h]................................184

2-72.PeripheralProtectionSetRegister0(PPROTSET0)[offset=20h]...............................................185

2-73.PeripheralProtectionSetRegister1(PPROTSET1)[offset=24h]...............................................186

2-74.PeripheralProtectionSetRegister2(PPROTSET2)[offset=28h]...............................................186

2-75.PeripheralProtectionSetRegister3(PPROTSET3)[offset=2Ch]..............................................187

2-76.PeripheralProtectionClearRegister0(PPROTCLR0)[offset=40h]............................................187

2-77.PeripheralProtectionClearRegister1(PPROTCLR1)[offset=44h]............................................188

2-78.PeripheralProtectionClearRegister2(PPROTCLR2)[offset=48h]............................................188

2-79.PeripheralProtectionClearRegister3(PPROTCLR3)[offset=4Ch]............................................189

2-80.PeripheralMemoryPower-DownSetRegister0(PCSPWRDWNSET0)[offset=60h]........................189

2-81.PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNSET1)[offset=64h]........................190

2-82.PeripheralMemoryPower-DownClearRegister0(PCSPWRDWNCLR0)[offset=70h]......................190

2-83.PeripheralMemoryPower-DownClearRegister1(PCSPWRDWNCLR1)[offset=74h]......................191

2-84.PeripheralPower-DownSetRegister0(PSPWRDWNSET0)[offset=80h].....................................192

2-85.PeripheralPower-DownSetRegister1(PSPWRDWNSET1)[offset=84h].....................................193

2-86.PeripheralPower-DownSetRegister2(PSPWRDWNSET2)[offset=88h].....................................193

2-87.PeripheralPower-DownSetRegister3(PSPWRDWNSET3)[offset=8Ch]....................................194

2-88.PeripheralPower-DownClearRegister0(PSPWRDWNCLR0)[offset=A0h]..................................194

2-89.PeripheralPower-DownClearRegister1(PSPWRDWNCLR1)[offset=A4h]..................................195

2-90.PeripheralPower-DownClearRegister2(PSPWRDWNCLR2)[offset=A8h]..................................195

2-91.PeripheralPower-DownClearRegister3(PSPWRDWNCLR)[offset=ACh]...................................196

3-1.PMMBlockDiagram....................................................................................................198

3-2.CorePowerDomains....................................................................................................200

3-3.LogicPowerDomainControlRegister(LOGICPDPWRCTRL0)[offset=00]...................................206

32

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

3-4.MemoryPowerDomainControlRegister0(MEMPDPWRCTRL0)[offset=10h]..............................207

3-5.PowerDomainClockDisableRegister(PDCLKDISREG)[offset=20h]........................................208

3-6.PowerDomainClockDisableSetRegister(PDCLKDISSETREG)[offset=24h]...............................209

3-7.PowerDomainClockDisableClearRegister(PDCLKDISCLRREG)[offset=28h]...........................210

3-8.LogicPowerDomainPD2PowerStatusRegister(LOGICPDPWRSTAT0)[offset=40h].....................211

3-9.LogicPowerDomainPD3PowerStatusRegister(LOGICPDPWRSTAT1)[offset=44h].....................212

3-10.LogicPowerDomainPD4PowerStatusRegister(LOGICPDPWRSTAT2)[offset=48h].....................213

3-11.LogicPowerDomainPD5PowerStatusRegister(LOGICPDPWRSTAT3)[offset=4Ch]....................214

3-12.MemoryPowerDomainRAM_PD1PowerStatusRegister(MEMPDPWRSTAT0)[offset=80h]............215

3-13.MemoryPowerDomainRAM_PD2PowerStatusRegister(MEMPDPWRSTAT1)[offset=84h]............216

3-14.MemoryPowerDomainRAM_PD3PowerStatusRegister(MEMPDPWRSTAT2)[offset=88h]............217

3-15.GlobalControlRegister1(GLOBALCTRL1)[offset=A0h]........................................................218

3-16.GlobalStatusRegister(GLOBALSTAT)[offset=A8h].............................................................219

3-17.PSCONDiagnosticCompareKeyRegister(PRCKEYREG)[offset=ACh].....................................219

3-18.LogicPDPSCONDiagnosticCompareStatusRegister1(LPDDCSTAT1)[offset=B0h].....................220

3-19.LogicPDPSCONDiagnosticCompareStatusRegister2(LPDDCSTAT2)[offset=B4h].....................221

3-20.MemoryPDPSCONDiagnosticCompareStatusRegister1(MPDDCSTAT1)[offset=B8h]...............222

3-21.MemoryPDPSCONDiagnosticCompareStatusRegister2(MPDDCSTAT2)[offset=BCh]...............223

3-22.IsolationDiagnosticStatusRegister(ISODIAGSTAT)[offset=C0h]............................................224

4-1.PINMMR10ControlRegister,Address=FFFFEB38h............................................................226

4-2.OutputMultiplexingExample..........................................................................................227

4-3.InputMultiplexingExample............................................................................................229

4-4.REVISION_REG:RevisionRegister(Address=FFFFEA00h)....................................................231

4-5.ENDIAN_REG:DeviceEndiannessRegister(Address=FFFFEA20h).........................................232

4-6.KICK_REG0:KickerRegister0(Address=FFFFEA38h).........................................................233

4-7.KICK_REG1:KickerRegister1(Address=FFFFEA3Ch).........................................................233

4-8.ERR_RAW_STATUS_REG:ErrorRawStatus/SetRegister(Address=FFFFEAE0h)......................234

4-9.ERR_ENABLED_STATUS_REG:ErrorEnabledStatus/ClearRegister(Address=FFFFEAE4h)........235

4-10.ERR_ENABLE_REG:ErrorSignalingEnableRegister(Address=FFFFEAE8h).............................236

4-11.ERR_ENABLE_CLR_REG:ErrorSignalingEnableClearRegister(Address=FFFFEAECh)...............237

4-12.FAULT_ADDRESS_REG:FaultAddressRegister(Address=FFFFEAF4h)...................................237

4-13.FAULT_STATUS_REG:FaultStatusRegister(Address=FFFFEAF8h)........................................238

4-14.FAULT_CLEAR_REG:FaultClearRegister(Address=FFFFEAFCh)..........................................239

4-15.PINMMRnn:PinMultiplexingControlRegisters(Address=FFFFEB10h-FFFFEB88h)......................239

5-1.ECCByteMapping......................................................................................................252

5-2.TIOTPBank0SectorInformation(F0080158h)...................................................................253

5-3.TIOTPBank0PackageandMemorySizeInformation(F008015Ch)..........................................254

5-4.TIOTPBank0LPOTrimandMaxHCLKInformation(F00801B4h)............................................255

5-5.TIOTPBank0SymbolizationInformation(F00801E0h-F00801FFh)...........................................255

5-6.ECCMalfunctionTestLogic............................................................................................258

5-7.FlashOptionControlRegister(FRDCNTL)(offset=FFF87000h)...............................................263

5-8.32-bit,4RowsFlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1)(offset=FFF8

7008h).....................................................................................................................264

5-9.FlashErrorCorrectionandCorrectionControlRegister2(FEDACCTRL2)(offset=FFF8700Ch)..........266

5-10.FlashCorectableErrorCountRegister(FCOR_ERR_CNT)(offset=FFF87010h)............................266

5-11.FlashCorrectableErrorAddressRegister(FCOR_ERR_ADD)(offset=FFF87014h)........................267

5-12.FlashCorrectableErrorPositionRegister(FCOR_ERR_POS)(offset=FFF87018h)........................268

5-13.FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)(offset=FFF8701Ch)............269

5-14.FlashUn-CorrectableErrorAddressRegister(FUNC_ERR_ADD)(offset=FFF87020h)....................271

33

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

5-15.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS)(offset=FFF87024h).......272

5-16.PrimaryAddressTagRegister(FPRIM_ADD_TAG)(offset=FFF87028h).....................................273

5-17.DuplicateAddressTagRegister(FDUP_ADD_TAG)(offset=FFF8702Ch)...................................273

5-18.FlashBankProtectionRegister(FBPROT)(offset=FFF87030h)...............................................274

5-19.FlashBankSectorEnableRegister(FBSE)(offset=FFF87034h)..............................................274

5-20.FlashBankBusyRegister(FBBUSY)(offset=FFF87038h)......................................................275

5-21.FlashBankAccessControlRegister(FBAC)(offset=FFF8703Ch).............................................276

5-22.FlashBankFallbackPowerRegister(FBFALLBACK)(offset=FFF87040h)...................................277

5-23.FlashBank/PumpReadyRegister(FBPRDY)(offset=FFF87044h)............................................278

5-24.FlashPumpAccessControlRegister1(FPAC1)(offset=FFF87048h)........................................279

5-25.FlashPumpAccessControlRegister2(FPAC2)(offset=FFF8704Ch)........................................280

5-26.FlashModuleAccessControlRegister(FMAC)[offset=FFF87050h)..........................................280

5-27.FlashModuleStatusRegister(FMSTAT)(offset=FFF87054h).................................................281

5-28.EEPROMEmulationDataMSWRegister(FEMU_DMSW)(offset=FFF87058h).............................283

5-29.EEPROMEmulationDataLSWRegister(FEMU_DLSW)(offset=FFF8705Ch)..............................283

5-30.EEPROMEmulationECCRegister(FEMU_ECC)(offset=FFF87060h).......................................284

5-31.EEPROMEmulationAddressRegister(FEMU_ADDR)(offset=FFF87068h).................................285

5-32.DiagnosticControlRegister(FDIAGCTRL)(offset=FFF8706Ch)...............................................286

5-33.UncorrectedRawDataHighRegister(FRAW_DATAH)(offset=FFF87070h)................................288

5-34.UncorrectedRawDataLowRegister(FRAW_DATAL)[offset=FFF87074h)..................................289

5-35.UncorrectedRawECCRegister(FRAW_ECC)(offset=FFF87078h)..........................................290

5-36.ParityOverrideRegister(FPAR_OVR)(offset=FFF8707Ch)....................................................291

5-37.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS2)(offset=FFF870C0h).....292

5-38.FSMRegisterWriteEnable(FSM_WR_ENA)(offset=FFF87288h)...........................................293

5-39.FSMSectorRegister(FSM_WR_ENA)(offset=FFF872A4h)...................................................293

5-40.EEPROMEmulationConfigurationRegister(EEPROM_CONFIG)(offset=FFF872B8h)...................294

5-41.EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)(offset=FFF8

7308h).....................................................................................................................295

5-42.EEPROMEmulationErrorCorrectionandCorrectionControlRegister2(EE_CTRL2)(offset=FFF8

730Ch).....................................................................................................................297

5-43.EEPROMEmulationErrorCorectableErrorCountRegister(EE_COR_ERR_CNT)(offset=FFF8

7310h).....................................................................................................................297

5-44.EEPROMEmulationCorrectableErrorAddressRegister(EE_COR_ERR_ADD)(offset=FFF87314h)...298

5-45.EEPROMEmulationCorrectableErrorPositionRegister(EE_COR_ERR_POS)(offset=FFF87318h)...299

5-46.EEPROMEmulationErrorStatusRegister(EE_STATUS)(offset=FFF8731Ch).............................300

5-47.EEPROMEmulationUn-CorrectableErrorAddressRegister(EE_UNC_ERR_ADD)(offset=FFF8

7320h).....................................................................................................................301

5-48.FlashBankConfigurationRegister(FCFG_BANK)(offset=FFF87400h)......................................302

6-1.TCRAMModuleConnections..........................................................................................304

6-2.RAMMemoryMap.......................................................................................................305

6-3.TCRAMModuleControlRegister(RAMCTRL)[offset=00].......................................................309

6-4.TCRAMModuleSingle-BitErrorCorrectionThresholdRegister(RAMTHRESHOLD)[offset=04h]........310

6-5.TCRAMModuleSingle-BitErrorOccurrencesCounterRegister(RAMOCCUR)[offset=08h]...............311

6-6.TCRAMModuleInterruptControlRegister(RAMINTCTRL)[offset=0Ch]......................................311

6-7.TCRAMModuleErrorStatusRegister(RAMERRSTATUS)[offset=10h].......................................312

6-8.TCRAMModuleSingle-BitErrorAddressRegister(RAMSERRADDR)[offset=14h].........................313

6-9.TCRAMModuleUncorrectableErrorAddressRegister(RAMUERRADDR)[offset=1Ch]...................314

6-10.TCRAMModuleTestModeControlRegister(RAMTEST)[offset=30h]........................................315

6-11.TCRAMModuleTestModeVectorRegister(RAMADDRDECVECT)[offset=38h]...........................316

6-12.TCRAMModuleParityErrorAddressRegister(RAMPERRADDR)[offset=3Ch].............................316

34

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

7-1.PBISTBlockDiagram..................................................................................................318

7-2.PBISTMemorySelf-TestFlowDiagram.............................................................................320

7-3.RAMConfigurationRegister(RAMT)[offset=0160h]..............................................................325

7-4.DataloggerRegister(DLR)[offset=0164h]..........................................................................326

7-5.PBISTActivate/ROMClockEnableRegister(PACT)[offset=0180h]...........................................327

7-6.PBISTIDRegister[offset=184h].....................................................................................328

7-7.OverrideRegister(OVER)[offset=0188h]..........................................................................328

7-8.FailStatusFailRegister0(FSRF0)[offset=0190h]................................................................329

7-9.FailStatusCount0Register(FSRC0)[offset=0198h]............................................................330

7-10.FailStatusCountRegister1(FSRC1)[offset=019Ch]............................................................330

7-11.FailStatusAddress0Register(FSRA0)[offset=01A0h]..........................................................331

7-12.FailStatusAddress1Register(FSRA1)[offset=01A4h]..........................................................331

7-13.FailStatusDataRegister0(FSRDL0)[offset=01A8h]............................................................332

7-14.FailStatusDataRegister1(FSRDL1)[offset=01B0h]............................................................332

7-15.ROMMaskRegister(ROM)[offset=01C0h]........................................................................333

7-16.ROMAlgorithmMaskRegister(ALGO)[offset=01C4h]...........................................................333

7-17.RAMInfoMaskLowerRegister(RINFOL)[offset=01C8h].......................................................334

7-18.RAMInfoMaskUpperRegister(RINFOU)[offset=01CCh]......................................................335

8-1.STCBlockDiagram.....................................................................................................340

8-2.ApplicationSelf-TestFlowChart......................................................................................342

8-3.STCGlobalControlRegister0(STCGCR0)[offset=00]..........................................................345

8-4.STCGlobalControlRegister1(STCGCR1)[offset=04h].........................................................345

8-5.Self-TestRunTimeoutCounterPreloadRegister(STCTPR)[offset=08h].....................................346

8-6.STCCurrentROMAddressRegister(STC_CADDR)[offset=0Ch].............................................346

8-7.STCCurrentIntervalCountRegister(STCCICR)[offset=10h]...................................................347

8-8.Self-TestGlobalStatusRegister(STCGSTAT)[offset=14h].....................................................347

8-9.Self-TestFailStatusRegister(STCFSTAT)[offset=18h].........................................................348

8-10.CPU1CurrentMISRRegister(CPU1_CURMISR3)[offset=1Ch]................................................349

8-11.CPU1CurrentMISRRegister(CPU1_CURMISR2)[offset=20h]................................................349

8-12.CPU1CurrentMISRRegister(CPU1_CURMISR1)[offset=24h]................................................349

8-13.CPU1CurrentMISRRegister(CPU1_CURMISR0)[offset=28h]................................................349

8-14.CPU2CurrentMISRRegister(CPU2_CURMISR3)[offset=2Ch]................................................350

8-15.CPU2CurrentMISRRegister(CPU2_CURMISR2)[offset=30h]................................................350

8-16.CPU2CurrentMISRRegister(CPU2_CURMISR1)[offset=34h]................................................350

8-17.CPU2CurrentMISRRegister(CPU2_CURMISR0)[offset=38h]................................................350

8-18.SignatureCompareSelf-CheckRegister(STCSCSCR)[offset=3Ch]...........................................351

9-1.BlockDiagram...........................................................................................................354

9-2.CCM-R4FStatusRegister(CCMSR)(Offset=FFFFF600h).....................................................359

9-3.CCM-R4FKeyRegister(CCMKEYR)(Offset=FFFFF604h).....................................................360

10-1.ClockPathFromOscillatorThroughPLLToDevice...............................................................363

10-2.ClockGenerationPath.................................................................................................364

10-3.OscillatorImplementation..............................................................................................365

10-4.OperationoftheFM-PLLmodule......................................................................................369

10-5.PLLSlipDetectionandReset/BypassBlockDiagram.............................................................374

10-6.SSWPLLBISTControlRegister1(SSWPLL1)[offset=24h]....................................................378

10-7.SSWPLLBISTControlRegister2(SSWPLL2)[offset=28h].....................................................379

10-8.SSWPLLBISTControlRegister3(SSWPLL3)[offset=2Ch]....................................................380

10-9.BasicPLLCircuit........................................................................................................381

10-10.PFDTiming..............................................................................................................381

35

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

10-11.PLLModulationBlockDiagram.......................................................................................382

10-12.Frequencyvs.Time.....................................................................................................383

11-1.DCCOperation...........................................................................................................387

11-2.CounterRelationship....................................................................................................389

11-3.Clock1SlowerThanClock0-ResultsinanErrorandStopsCounting..........................................389

11-4.Clock1FasterThanClock0-ResultsinanErrorandStopsCounting...........................................390

11-5.Clock1NotPresent-ResultsinanErrorandStopsCounting....................................................390

11-6.Clock0NotPresent-ResultsinanErrorandStopsCounting....................................................391

11-7.DCCControlRegister(DCCGCTRL)[offset=00]..................................................................394

11-8.DCCRevisionIdRegister(DCCREV)[offset=4h].................................................................395

11-9.DCCCounter0SeedRegister(DCCCNT0SEED)[offset=8h]...................................................395

11-10.DCCValid0SeedRegister(DCCVALID0SEED)[offset=Ch]....................................................396

11-11.DCCCounter1SeedRegister(DCCCNT1SEED)[offset=10h].................................................396

11-12.DCCStatusRegister(DCCSTAT)[offset=14h]....................................................................397

11-13.DCCCounter0ValueRegister(DCCCNT0)[offset=18h]........................................................397

11-14.DCCValid0ValueRegister(DCCVALID0)[offset=1Ch].........................................................398

11-15.DCCCounter1ValueRegister(DCCCNT1)[offset=20h]........................................................398

11-16.DCCCounter1ClockSourceSelectionRegister(DCCCNT1CLKSRC)[offset=24h]........................399

11-17.DCCCounter0ClockSourceSelectionRegister(DCCCNT0CLKSRC)[offset=24h]........................399

12-1.BlockDiagram...........................................................................................................401

12-2.InterruptResponseHandling..........................................................................................402

12-3.ERRORPinResponseHandling......................................................................................402

12-4.ERRORPinTiming-Example1.......................................................................................404

12-5.ERRORPinTiming-Example2......................................................................................404

12-6.ERRORPinTiming-Example3......................................................................................404

12-7.ERRORPinTiming-Example4......................................................................................404

12-8.ERRORPinTiming-Example5......................................................................................404

12-9.ERRORPinTiming-Example6......................................................................................405

12-10.ESMInitialization........................................................................................................406

12-11.ESMEnableERRORPinAction/ResponseRegister1(ESMEEPAPR1)[offset=FFFFF500h].............408

12-12.ESMDisableERRORPinAction/ResponseRegister1(ESMDEPAPR1)[offset=FFFFF504h]............408

12-13.ESMInterruptEnableSet/StatusRegister1(ESMIESR1)[offset=FFFFF508h]..............................409

12-14.ESMInterruptEnableClear/StatusRegister1(ESMIECR1)[offset=FFFFF50Ch]...........................409

12-15.ESMInterruptLevelSet/StatusRegister1(ESMILSR1)[offset=FFFFF510h]................................410

12-16.ESMInterruptLevelClear/StatusRegister1(ESMILCR1)[offset=FFFFF514h].............................410

12-17.ESMStatusRegister1(ESMSR1)[offset=FFFFF518h].........................................................411

12-18.ESMStatusRegister2(ESMSR2)[offset=FFFFF51Ch].........................................................411

12-19.ESMStatusRegister3(ESMSR3)[offset=FFFFF520h].........................................................412

12-20.ESMERRORPinStatusRegister(ESMEPSR)[offset=FFFFF524h]..........................................412

12-21.ESMInterruptOffsetHighRegister(ESMIOFFHR)[offset=FFFFF528h]......................................413

12-22.ESMInterruptOffsetLowRegister(ESMIOFFLR)[offset=FFFFF52Ch]......................................414

12-23.ESMLow-TimeCounterRegister(ESMLTCR)[offset=FFFFF530h]...........................................415

12-24.ESMLow-TimeCounterPreloadRegister(ESMLTCPR)[offset=FFFFF534h]...............................415

12-25.ESMErrorKeyRegister(ESMEKR)[offset=FFFFF538h].......................................................416

12-26.ESMStatusShadowRegister2(ESMSSR2)[offset=FFFFF53Ch]............................................416

12-27.ESMInfluenceERRORPinSet/StatusRegister4(ESMIEPSR4)[offset=FFFFF540h].....................417

12-28.ESMInfluenceERRORPinClear/StatusRegister4(ESMIEPCR4)[offset=FFFFF544h]..................417

12-29.ESMInterruptEnableSet/StatusRegister4(ESMIESR4)[offset=FFFFF548h]..............................418

12-30.ESMInterruptEnableClear/StatusRegister4(ESMIECR4)[offset=FFFFF54Ch]...........................418

36

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

12-31.ESMInterruptLevelSet/StatusRegister4(ESMILSR4)[offset=FFFFF550h]................................419

12-32.ESMInterruptLevelClear/StatusRegister4(ESMILCR4)[offset=FFFFF554h].............................419

12-33.ESMStatusRegister4(ESMSR4)[offset=FFFFF558h].........................................................420

13-1.RTIBlockDiagram......................................................................................................423

13-2.CounterBlockDiagram.................................................................................................424

13-3.CompareUnitBlockDiagram(showsonly1of4blocksforsimplification).....................................426

13-4.TimebaseControl.......................................................................................................427

13-5.ClockDetectionScheme...............................................................................................427

13-6.SwitchtoNTUx..........................................................................................................428

13-7.MissingNTUxSignalExample........................................................................................429

13-8.DigitalWatchdog........................................................................................................429

13-9.DWDOperation..........................................................................................................430

13-10.DigitalWindowedWatchdogTimingExample.......................................................................431

13-11.DigitalWindowedWatchdogOperationExample(25%Window)................................................431

13-12.RTIGlobalControlRegister(RTIGCTRL)[offset=00]............................................................434

13-13.RTITimebaseControlRegister(RTITBCTRL)[offset=04h].....................................................435

13-14.RTICaptureControlRegister(RTICAPCTRL)[offset=08h]......................................................436

13-15.RTICompareControlRegister(RTICOMPCTRL)[offset=0Ch]..................................................437

13-16.RTIFreeRunningCounter0Register(RTIFRC0)[offset=10h]..................................................438

13-17.RTIUpCounter0Register(RTIUC0)[offset=14h]................................................................438

13-18.RTICompareUpCounter0Register(RTICPUC0)[offset=18h].................................................439

13-19.RTICaptureFreeRunningCounter0Register(RTICAFRC0)[offset=20h]....................................439

13-20.RTICaptureUpCounter0Register(RTICAUC0)[offset=24]....................................................440

13-21.RTIFreeRunningCounter1Register(RTIFRC1)[offset=30h]..................................................440

13-22.RTIUpCounter1Register(RTIUC1)[offset=34h]................................................................441

13-23.RTICompareUpCounter1Register(RTICPUC1)[offset=38h].................................................441

13-24.RTICaptureFreeRunningCounter1Register(RTICAFRC1)[offset=40h]....................................443

13-25.RTICaptureUpCounter1Register(RTICAUC1)[offset=44h]..................................................443

13-26.RTICompare0Register(RTICOMP0)[offset=50h]...............................................................444

13-27.RTIUpdateCompare0Register(RTIUDCP0)[offset=54h]......................................................444

13-28.RTICompare1Register(RTICOMP1)[offset=58h]...............................................................445

13-29.RTIUpdateCompare1Register(RTIUDCP1)[offset=5Ch].....................................................445

13-30.RTICompare2Register(RTICOMP2)[offset=60h]...............................................................446

13-31.RTIUpdateCompare2Register(RTIUDCP2)[offset=64h]......................................................446

13-32.RTICompare3Register(RTICOMP3)[offset=68h]...............................................................447

13-33.RTIUpdateCompare3Register(RTIUDCP3)[offset=6Ch].....................................................447

13-34.RTITimebaseLowCompareRegister(RTITBLCOMP)[offset=70h]...........................................448

13-35.RTITimebaseHighCompareRegister(RTITBHCOMP)[offset=74h]..........................................448

13-36.RTISetInterruptControlRegister(RTISETINTENA)[offset=80h]..............................................449

13-37.RTIClearInterruptControlRegister(RTICLEARINTENA)[offset=84h]........................................451

13-38.RTIInterruptFlagRegister(RTIINTFLAG)[offset=88h]..........................................................453

13-39.DigitalWatchdogControlRegister(RTIDWDCTRL)[offset=90h]...............................................454

13-40.DigitalWatchdogPreloadRegister(RTIDWDPRLD)[offset=94h]..............................................455

13-41.WatchdogStatusRegister(RTIWDSTATUS)[offset=98h]......................................................456

13-42.RTIWatchdogKeyRegister(RTIDWDKEY)[offset=9Ch]........................................................457

13-43.RTIWatchdogDownCounterRegister(RTIDWDCNTR)[offset=A0h].........................................458

13-44.DigitalWindowedWatchdogReactionControl(RTIWWDRXNCTRL)[offset=A4h]..........................458

13-45.DigitalWindowedWatchdogWindowSizeControl(RTIWWDSIZECTRL)[offset=A8h].....................459

13-46.RTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)[offset=ACh]..........................460

37

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

13-47.RTICompare0ClearRegister(RTICMP0CLR)[offset=B0h]....................................................461

13-48.RTICompare1ClearRegister(RTICMP1CLR)[offset=B4h]....................................................461

13-49.RTICompare2ClearRegister(RTICMP2CLR)[offset=B8h]....................................................462

13-50.RTICompare3ClearRegister(RTICMP3CLR)[offset=BCh]....................................................462

14-1.CRCControllerBlockDiagramForOneChannel..................................................................465

14-2.LFSR......................................................................................................................467

14-3.AUTOModeUsingHardwareTimerTrigger........................................................................470

14-4.AUTOModeWithSoftwareCPUTrigger............................................................................470

14-5.Semi-CPUModeWithHardwareTimerTrigger.....................................................................471

14-6.TimeoutExample1.....................................................................................................473

14-7.TimeoutExample2.....................................................................................................474

14-8.TimeoutExample3.....................................................................................................474

14-9.CRCGlobalControlRegister0(CRC_CTRL0)[offset=00h].....................................................480

14-10.CRCGlobalControlRegister1(CRC_CTRL1)[offset=08h].....................................................480

14-11.CRCGlobalControlRegister2(CRC_CTRL2)[offset=10h].....................................................481

14-12.CRCInterruptEnableSetRegister(CRC_INTS)[offset=18h]...................................................482

14-13.CRCInterruptEnableResetRegister(CRC_INTR)[offset=20h]................................................485

14-14.CRCInterruptStatusRegister(CRC_STATUS)[offset=28h]....................................................488

14-15.CRCInterruptOffset(CRC_INT_OFFSET_REG)[offset=30h]..................................................489

14-16.CRCBusyRegister(CRC_BUSY)[offset=38h]....................................................................490

14-17.CRCPatternCounterPreloadRegister1(CRC_PCOUNT_REG1)[offset=40h]..............................490

14-18.CRCSectorCounterPreloadRegister1(CRC_SCOUNT_REG1)[offset=44h]...............................491

14-19.CRCCurrentSectorPreloadRegister1(CRC_CURSEC_REG1)[offset=48h]...............................491

14-20.CRCChannel1WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD1)[offset=4Ch].................492

14-21.CRCChannel1BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD1)[offset=50h]............492

14-22.Channel1PSASignatureLowRegister(PSA_SIGREGL1)[offset=60h]......................................493

14-23.Channel1PSASignatureHighRegister(PSA_SIGREGH1)[offset=64h].....................................493

14-24.Channel1CRCValueLowRegister(CRC_REGL1)[offset=68h]...............................................493

14-25.Channel1CRCValueHighRegister(CRC_REGH1)[offset=6Ch].............................................494

14-26.Channel1PSASectorSignatureLowRegister(PSA_SECSIGREGL1)[offset=70h]........................494

14-27.Channel1PSASectorSignatureHighRegister(PSA_SECSIGREGH1)[offset=74h].......................494

14-28.Channel1RawDataLowRegister(RAW_DATAREGL1)[offset=78h].........................................495

14-29.Channel1RawDataHighRegister(RAW_DATAREGH1)[offset=7Ch].......................................495

14-30.CRCPatternCounterPreloadRegister2(CRC_PCOUNT_REG2)[offset=80h]..............................495

14-31.CRCSectorCounterPreloadRegister2(CRC_SCOUNT_REG2)[offset=84h]...............................496

14-32.CRCCurrentSectorRegister2(CRC_CURSEC_REG2)[offset=88h].........................................496

14-33.CRCChannel2WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD2)[offset=8Ch].................497

14-34.CRCChannel2BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD2)[offset=90h]............497

14-35.Channel2PSASignatureLowRegister(PSA_SIGREGL2)[offset=A0h]......................................498

14-36.Channel2PSASignatureHighRegister(PSA_SIGREGH2)[offset=A4h].....................................498

14-37.Channel2CRCValueLowRegister(CRC_REGL2)[offset=A8h]..............................................498

14-38.Channel2CRCValueHighRegister(CRC_REGH2)[offset=ACh].............................................499

14-39.Channel2PSASectorSignatureLowRegister(PSA_SECSIGREGL2)[offset=B0h]........................499

14-40.Channel2PSASectorSignatureHighRegister(PSA_SECSIGREGH2)[offset=B4h].......................499

14-41.Channel2RawDataLowRegister(RAW_DATAREGL2)[offset=B8h]........................................500

14-42.Channel2RawDataHighRegister(RAW_DATAREGH2)[offset=BCh].......................................500

14-43.DataBusSelectionRegister(CRC_TRACE_BUS_SEL)[offset=140h].........................................501

15-1.DeviceLevelInterruptBlockDiagram................................................................................503

15-2.VIMInterruptHandlingBlockDiagram...............................................................................506

38

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

15-3.VIMChannelMapping..................................................................................................507

15-4.VIMinDefaultState....................................................................................................508

15-5.VIMinaProgrammedState...........................................................................................508

15-6.InterruptChannelManagement.......................................................................................509

15-7.VIMInterruptAddressMemoryMap..................................................................................510

15-8.ParityBitMapping.......................................................................................................512

15-9.DetailoftheIRQInput..................................................................................................513

15-10.CaptureEventSources.................................................................................................514

15-11.InterruptVectorTableParityFlagRegister(PARFLG)[Offset=FFFFFDECh]...............................518

15-12.InterruptVectorTableParityControlRegister(PARCTL)[Offset=FFFFFDF0h].............................518

15-13.AddressParityErrorRegister(ADDERR)[Offset=FFFFFDF4h]...............................................519

15-14.Fall-BackAddressParityErrorRegister(FBPARERR)[Offset=FFFFFDF8h]................................519

15-15.IRQIndexOffsetVectorRegister(IRQINDEX)[Offset=FFFFFE00h].........................................521

15-16.FIQIndexOffsetVectorRegister(FIQINDEX)[Offset=FFFFFE04h]..........................................521

15-17.FIQ/IRQProgramControlRegister0(FIRQPR0)[offset=FFFFFE10h]........................................522

15-18.FIQ/IRQProgramControlRegister1(FIRQPR1)[offset=FFFFFE14h]........................................522

15-19.FIQ/IRQProgramControlRegister2(FIRQPR2)[offset=FFFFFE18h]........................................522

15-20.PendingInterruptReadLocationRegister0(INTREQ0)[offset=FFFFFE20h]................................523

15-21.PendingInterruptReadLocation1(INTREQ1)Register[offset=FFFFFE24h]................................523

15-22.PendingInterruptReadLocation2(INTREQ2)Register[offset=FFFFFE28h]................................523

15-23.InterruptEnableSetRegister0(REQENASET0)[offset=FFFFFE30h]........................................524

15-24.InterruptEnableSetRegister1(REQENASET1)[offset=FFFFFE34h]........................................524

15-25.InterruptEnableSetRegister2(REQENASET2)[offset=FFFFFE38h]........................................524

15-26.InterruptEnableClearRegister0(REQENACLR0)[offset=FFFFFE40h].....................................525

15-27.InterruptEnableClearRegister1(REQENACLR1)[offset=FFFFFE44h].....................................525

15-28.InterruptEnableClearRegister2(REQENACLR2)[offset=FFFFFE48h].....................................525

15-29.Wake-UpEnableSetRegister0(WAKEENASET0)[offset=FFFFFE50h].....................................526

15-30.Wake-UpEnableSetRegister1(WAKEENASET1)[offset=FFFFFE54h].....................................526

15-31.Wake-UpEnableSetRegister2(WAKEENASET2)[offset=FFFFFE58h].....................................526

15-32.Wake-UpEnableClearRegister0(WAKEENACLR0)[offset=FFFFFE60h]..................................527

15-33.Wake-UpEnableClearRegister1(WAKEENACLR1)[offset=FFFFFE64h]..................................527

15-34.Wake-UpEnableClearRegister2(WAKEENACLR2)[offset=FFFFFE68h]..................................527

15-35.IRQInterruptVectorRegister(IRQVECREG)[Offset=FFFFFE70h]...........................................528

15-36.IRQInterruptVectorRegister(FIQVECREG)[Offset=FFFFFE74h]...........................................528

15-37.CaptureEventRegister(CAPEVT)[Offset=FFFFFE78h].......................................................529

15-38.InterruptControlRegisters[0:31](CHANCTRL[0:23])[Offset=FFFFFE80h-FFFFFEDCh]...............530

16-1.DMABlockDiagram.....................................................................................................533

16-2.ExampleofaDMATransferUsingFrameTriggerSource.........................................................534

16-3.ExampleofaDMATransferUsingBlockTriggerSource..........................................................534

16-4.DMARequestMappingandControlPacketOrganization.........................................................535

16-5.ControlPacketOrganizationandMemoryMap......................................................................536

16-6.DMATransferExample1...............................................................................................538

16-7.DMAIndexingExample1...............................................................................................538

16-8.DMAIndexingExample2...............................................................................................539

16-9.FixedPriorityScheme...................................................................................................539

16-10.ExampleofPriorityQueues............................................................................................540

16-11.ExampleChannelAssignments........................................................................................541

16-12.ExampleofDMADataUnpacking.....................................................................................542

16-13.ExampleofDMADataPacking........................................................................................543

39

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

16-14.DMAInterrupts...........................................................................................................545

16-15.DetailedInterruptStructure(FrameTransferCompletePath).....................................................546

16-16.ExampleofChannelChaining..........................................................................................548

16-17.ExampleofProtectionMechanism....................................................................................549

16-18.GlobalControlRegister(GCTRL)[offset=00]......................................................................554

16-19.ChannelPendingRegister(PEND)[offset=04h]...................................................................555

16-20.DMAStatusRegister(DMASTAT)[offset=0Ch]....................................................................555

16-21.HWChannelEnableSetandStatusRegister(HWCHENAS)[offset=14h]....................................556

16-22.HWChannelEnableResetandStatusRegister(HWCHENAR)[offset=1Ch].................................556

16-23.SWChannelEnableSetandStatusRegister(SWCHENAS)[offset=24h].....................................557

16-24.SWChannelEnableResetandStatusRegister(SWCHENAR)[offset=2Ch].................................558

16-25.ChannelPrioritySetRegister(CHPRIOS)[offset=34h]...........................................................558

16-26.ChannelPriorityResetRegister(CHPRIOR)[offset=3Ch].......................................................559

16-27.GlobalChannelInterruptEnableSetRegister(GCHIENAS)[offset=44h]......................................559

16-28.GlobalChannelInterruptEnableResetRegister(GCHIENAR)[offset=4Ch]..................................560

16-29.DMARequestAssignmentRegister0(DREQASI0)[offset=54h]................................................561

16-30.DMARequestAssignmentRegister1(DREQASI1)[offset=58h]................................................562

16-31.DMARequestAssignmentRegister2(DREQASI2)[offset=5Ch]...............................................563

16-32.DMARequestAssignmentRegister3(DREQASI3)[offset=60h]................................................564

16-33.PortAssignmentRegister0(PAR0)[offset=94h]..................................................................565

16-34.PortAssignmentRegister1(PAR1)[offset=98h]..................................................................566

16-35.FTCInterruptMappingRegister(FTCMAP)[offset=B4h].........................................................567

16-36.LFSInterruptMappingRegister(LFSMAP)[offset=BCh].........................................................567

16-37.HBCInterruptMappingRegister(HBCMAP)[offset=C4h]........................................................568

16-38.BTCInterruptMappingRegister(BTCMAP)[offset=CCh]........................................................568

16-39.BERInterruptMappingRegister(BERMAP)[offset=D4h]........................................................569

16-40.FTCInterruptEnableSet(FTCINTENAS)[offset=DCh]..........................................................569

16-41.FTCInterruptEnableReset(FTCINTENAR)[offset=E4h]........................................................570

16-42.LFSInterruptEnableSet(LFSINTENAS)[offset=ECh]...........................................................570

16-43.LFSInterruptEnableReset(LFSINTENAR)[offset=F4h]........................................................571

16-44.HBCInterruptEnableSet(HBCINTENAS)[offset=FCh]..........................................................571

16-45.HBCInterruptEnableReset(HBCINTENAR)[offset=104h]......................................................572

16-46.BTCInterruptEnableSet(BTCINTENAS)[offset=10Ch].........................................................572

16-47.BTCInterruptEnableReset(BTCINTENAR)[offset=114h]......................................................573

16-48.GlobalInterruptFlagRegister(GINTFLAG)[offset=11Ch].......................................................573

16-49.FTCInterruptFlagRegister(FTCFLAG)[offset=124h]...........................................................574

16-50.LFSInterruptFlagRegister(LFSFLAG)[offset=12Ch]............................................................574

16-51.HBCInterruptFlagRegister(HBCFLAG)[offset=134h]...........................................................575

16-52.BTCInterruptFlagRegister(BTCFLAG)[offset=13Ch]...........................................................575

16-53.BERInterruptFlagRegister(BERFLAG)[offset=144h]...........................................................576

16-54.FTCAInterruptChannelOffsetRegister(FTCAOFFSET)[offset=14Ch].......................................576

16-55.LFSAInterruptChannelOffsetRegister(LFSAOFFSET)[offset=150h]........................................577

16-56.HBCAInterruptChannelOffsetRegister(HBCAOFFSET)[offset=154h].......................................577

16-57.BTCAInterruptChannelOffsetRegister(BTCAOFFSET)[offset=158h].......................................578

16-58.BERAInterruptChannelOffsetRegister(BERAOFFSET)[offset=15Ch]......................................578

16-59.FTCBInterruptChannelOffsetRegister(FTCBOFFSET)[offset=160h].......................................579

16-60.LFSBInterruptChannelOffsetRegister(LFSBOFFSET)[offset=164h]........................................579

16-61.HBCBInterruptChannelOffsetRegister(HBCBOFFSET)[offset=168h].......................................580

16-62.BTCBInterruptChannelOffsetRegister(BTCBOFFSET)[offset=16Ch].......................................580

40

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

16-63.BERBInterruptChannelOffsetRegister(BERBOFFSET)[offset=170h].......................................581

16-64.PortControlRegister(PTCRL)[offset=178h].......................................................................582

16-65.RAMTestControl(RTCTRL)[offset=17Ch]........................................................................583

16-66.DebugControl(DCTRL)[offset=180h]..............................................................................584

16-67.WatchPointRegister(WPR)[offset=184h].........................................................................585

16-68.WatchMaskRegister(WMR)[offset=188h]........................................................................585

16-69.PortBActiveChannelSourceAddressRegister(PBACDADDR)[offset=198h]..............................586

16-70.PortBActiveChannelDestinationAddressRegister(PBACDADDR)[offset=19Ch].........................586

16-71.PortBActiveChannelTransferCountRegister(PBACTC)[offset=1A0h].....................................587

16-72.ParityControlRegister(DMAPCR)[offset=1A8h]..................................................................588

16-73.DMAParityErrorAddressRegister(DMAPAR)[offset=1ACh]..................................................589

16-74.DMAMemoryProtectionControlRegister(DMAMPCTRL)[offset=1B0h]......................................590

16-75.DMAMemoryProtectionStatusRegister(DMAMPST)[offset=1B4h]..........................................592

16-76.DMAMemoryProtectionRegion0StartAddressRegister(DMAMPR0S)[offset=1B8h]....................593

16-77.DMAMemoryProtectionRegion0EndAddressRegister(DMAMPR0E)[offset=1BCh]....................593

16-78.DMAMemoryProtectionRegion1StartAddressRegister(DMAMPR1S)[offset=1C0h]....................594

16-79.DMAMemoryProtectionRegion1EndAddressRegister(DMAMPR1E)[offset=1C4h].....................594

16-80.DMAMemoryProtectionRegion2StartAddressRegister(DMAMPR2S)[offset=1C8h]....................595

16-81.DMAMemoryProtectionRegion2EndAddressRegister(DMAMPR2E)[offset=1CCh]....................595

16-82.DMAMemoryProtectionRegion3StartAddressRegister(DMAMPR3S)[offset=1D0h]....................596

16-83.DMAMemoryProtectionRegion3EndAddressRegister(DMAMPR3E)[offset=1D4h].....................596

16-84.InitialSourceAddress(ISADDR)[offset=00].......................................................................597

16-85.InitialDestinationAddressRegister(IDADDR)[offset=04h]......................................................598

16-86.InitialTransferCountRegister(ITCOUNT)[offset=08h]..........................................................598

16-87.ChannelControlRegister(CHCTRL)[offset=10h].................................................................599

16-88.ElementIndexOffsetRegister(EIOFF)[offset=14h]..............................................................600

16-89.FrameIndexOffsetRegister(FIOFF)[offset=18h]................................................................600

16-90.CurrentSourceAddressRegister(CSADDR)[offset=800h].....................................................601

16-91.CurrentDestinationAddressRegister(CDADDR)[offset=804h]................................................601

16-92.CurrentTransferCountRegister(CTCOUNT)[offset=808h].....................................................602

17-1.EMIFFunctionalBlockDiagram.......................................................................................605

17-2.TimingWaveformofSDRAMPRECommand.......................................................................609

17-3.EMIFto2M×16×4bankSDRAMInterface........................................................................609

17-4.EMIFto512K×16×2bankSDRAMInterface.....................................................................610

17-5.TimingWaveformforBasicSDRAMReadOperation..............................................................617

17-6.TimingWaveformforBasicSDRAMWriteOperation...............................................................618

17-7.EMIFAsynchronousInterface..........................................................................................620

17-8.EMIFto8-bit/16-bitMemoryInterface.................................................................................621

17-9.CommonAsynchronousInterface.....................................................................................621

17-10.TimingWaveformofanAsynchronousReadCycleinNormalMode.............................................625

17-11.TimingWaveformofanAsynchronousWriteCycleinNormalMode.............................................627

17-12.TimingWaveformofanAsynchronousReadCycleinSelectStrobeMode.....................................629

17-13.TimingWaveformofanAsynchronousWriteCycleinSelectStrobeMode.....................................631

17-14.AsynchronousReadinPageMode....................................................................................632

17-15.ModuleIDRegister(MIDR)[offset=00]..............................................................................638

17-16.AsynchronousWaitCycleConfigurationRegister(AWCCR)[offset=04h].....................................639

17-17.SDRAMConfigurationRegister(SDCR)[offset=08h].............................................................640

17-18.SDRAMRefreshControlRegister(SDRCR)[offset=0Ch]........................................................641

17-19.AsynchronousnConfigurationRegister(CEnCFG)[offset=10h-1Ch].........................................642

41

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

17-20.SDRAMTimingRegister(SDTIMR)[offset=20h]..................................................................643

17-21.SDRAMSelfRefreshExitTimingRegister(SDSRETR)[offset=3Ch]..........................................644

17-22.EMIFInterruptRawRegister(INTRAW)[offset=40h].............................................................645

17-23.EMIFInterruptMaskRegister(INTMSK)[offset=44h].............................................................646

17-24.EMIFInterruptMaskSetRegister(INTMSKSET)[offset=48h]...................................................647

17-25.EMIFInterruptMaskClearRegister(INTMSKCLR)[offset=4Ch]................................................648

17-26.PageModeControlRegister(PMCR)[offset=68h]................................................................649

17-27.ExampleConfigurationInterface.......................................................................................651

17-28.SDRAMTimingRegister(SDTIMR)...................................................................................652

17-29.SDRAMSelfRefreshExitTimingRegister(SDSRETR)...........................................................653

17-30.SDRAMRefreshControlRegister(SDRCR).........................................................................653

17-31.SDRAMConfigurationRegister(SDCR)..............................................................................654

17-32.LH28F800BJE-PTTL90toEMIFReadTimingWaveforms........................................................655

17-33.LH28F800BJE-PTTL90toEMIFWriteTimingWaveforms.........................................................656

17-34.AsynchronousmConfigurationRegister(m=1,2)(CEnCFG(n=2,3))........................................657

18-1.SystemOverlayBlockDiagram........................................................................................659

18-2.RegionDefinitionExample..............................................................................................660

18-3.POMGlobalControlRegister(POMGLBCTRL)[address=FFA04000h]........................................662

18-4.POMRevisionID(POMREV)[address=FFA04004h].............................................................663

18-5.POMClockGateControlRegister[address=FFA04008h]........................................................663

18-6.POMStatusRegister[address=FFA0400Ch]......................................................................664

18-7.POMProgramRegionStartRegisterx(POMPROGSTARTx)[address=FFA04200h,FFA04210h,...,

FFA043F0h]..............................................................................................................665

18-8.POMOverlayRegionStartRegisterx(POMOVLSTARTx)[address=FFA04204h,FFA04214h,...,

FFA043F4h]..............................................................................................................665

18-9.POMRegionSizeRegisterx(POMREGSIZEx)[address=FFA04208h,FFA04218h,...,FFA043F8h]....666

18-10.POMIntegrationControlRegister(POMITCTRL)[address=FFA04F00h]......................................666

18-11.POMClaimSetRegister(POMCLAIMSET)[address=FFA04FA0h]............................................667

18-12.POMClaimClearRegister(POMCLAIMCLR)[address=FFA04FA4h].........................................668

18-13.POMLockAccessRegister(POMLOCKACCESS)[address=FFA04FB0h]....................................669

18-14.POMLockStatusRegister(POMLOCKSTATUS)[address=FFA04FB4h].....................................669

18-15.POMAuthenticationStatusRegister(POMAUTHSTATUS)[address=FFA04FB8h]..........................669

18-16.POMDeviceIDRegister(POMDEVID)[address=FFA04FC8h].................................................670

18-17.POMDeviceTypeRegister(POMDEVTYPE)[address=FFA04FCCh].........................................670

18-18.POMPeripheralID4Register(POMPERIPHERALID4)[address=FFA04FD0h]..............................671

18-19.POMPeripheralID5Register(POMPERIPHERALID5)[address=FFA04FD4h]..............................671

18-20.POMPeripheralID6Register(POMPERIPHERALID6)[address=FFA04FD8h]..............................672

18-21.POMPeripheralID7Register(POMPERIPHERALID7)[address=FFA04FDCh].............................672

18-22.POMPeripheralID0Register(POMPERIPHERALID0)[address=FFA04FE0h]..............................673

18-23.POMPeripheralID1Register(POMPERIPHERALID1)[address=FFA04FE4]...............................673

18-24.POMPeripheralID2Register(POMPERIPHERALID2)[address=FFA04FE8h]..............................674

18-25.POMPeripheralID3Register(POMPERIPHERALID3)[address=FFA04FECh].............................674

18-26.POMComponentID0Register(POMCOMPONENTID0)[address=FFA04FF0h]............................675

18-27.POMComponentID1Register(POMCPOMPONENTID1)[address=FFA04FF4h]..........................675

18-28.POMComponentID2Register(POMCPOMPONENTID2)[address=FFA04FF8h]..........................676

18-29.POMComponentID3Register(POMCPOMPONENTID3)[address=FFA04FFCh]..........................676

19-1.ChannelAssignmentsofTwoADCCores...........................................................................678

19-2.ADCBlockDiagram.....................................................................................................679

19-3.FIFOImplementation...................................................................................................684

42

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

19-4.FormatofConversionResultReadfromFIFO,12-bitADC.......................................................684

19-5.FormatofConversionResultReadfromFIFO,10-bitADC.......................................................685

19-6.ADCMemoryMapping.................................................................................................685

19-7.FormatofConversionResultDirectlyReadfromADCRAM,12-bitADC.......................................686

19-8.FormatofConversionResultDirectlyReadfromADCRAM,10-bitADC.......................................686

19-9.ConversionResultsStorage...........................................................................................686

19-10.Self-TestandCalibrationLogic........................................................................................695

19-11.Mid-pointValueCalculation............................................................................................698

19-12.Self-TestandCalibrationLogic........................................................................................699

19-13.TimingforSelf-TestMode.............................................................................................700

19-14.TimingforSampleCapacitorDischargeMode......................................................................701

19-15.ADCMemoryMapinParityTestMode..............................................................................703

19-16.GPIOFunctionalityofADxEVT........................................................................................704

19-17.ADCResetControlRegister(ADRSTCR)[offset=00].............................................................708

19-18.ADCOperatingModeControlRegister(ADOPMODECR)[offset=04]..........................................708

19-19.ADCClockControlRegister(ADCLOCKCR)[offset=08h]........................................................710

19-20.ADCCalibrationModeControlRegister(ADCALCR)[offset=0Ch]..............................................710

19-21.ADCEventGroupOperatingModeControlRegister(ADEVMODECR)[offset=10h].........................712

19-22.ADCGroup1OperatingModeControlRegister(ADG1MODECR)[offset=14h]...............................714

19-23.ADCGroup2OperatingModeControlRegister(ADG2MODECR)[offset=18h]...............................716

19-24.ADCEventGroupTriggerSourceSelectRegister(ADEVSRC)[offset=1Ch].................................718

19-25.ADCGroup1TriggerSourceSelectRegister(ADG1SRC)[offset=20h]........................................719

19-26.ADCGroup2TriggerSourceSelectRegister(ADG2SRC)[offset=24h]........................................720

19-27.ADCEventGroupInterruptEnableControlRegister(ADEVINTENA)[offset=28h]...........................721

19-28.ADCGroup1InterruptEnableControlRegister(ADG1INTENA)[offset=2Ch].................................722

19-29.ADCGroup2InterruptEnableControlRegister(ADG2INTENA)[offset=30h].................................723

19-30.ADCEventGroupInterruptFlagRegister(ADEVINTFLG)[offset=34h]........................................724

19-31.ADCGroup1InterruptFlagRegister(ADG1INTFLG)[offset=38h]..............................................725

19-32.ADCGroup2InterruptFlagRegister(ADG2INTFLG)[offset=3Ch]..............................................726

19-33.ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR)[offset=40h]...................727

19-34.ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR)[offset=44h]..........................727

19-35.ADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR)[offset=48h]..........................728

19-36.ADCEventGroupDMAControlRegister(ADEVDMACR)[offset=4Ch]........................................729

19-37.ADCGroup1DMAControlRegister(ADG1DMACR)[offset=50h]..............................................730

19-38.ADCGroup2DMAControlRegister(ADG2DMACR)[offset=54h]..............................................731

19-39.ADCResultsMemoryConfigurationRegister(ADBNDCR)[offset=58h].......................................732

19-40.ADCResultsMemorySizeConfigurationRegister(ADBNDEND)[offset=5Ch]...............................733

19-41.ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)[offset=60h].......................734

19-42.ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP)[offset=64h].............................734

19-43.ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP)[offset=68h].............................735

19-44.ADCEventGroupStatusRegister(ADEVSR)[offset=6Ch]......................................................736

19-45.ADCGroup1StatusRegister(ADG1SR)[offset=70h]............................................................737

19-46.ADCGroup2StatusRegister(ADG2SR)[offset=74h]............................................................738

19-47.ADCEventGroupChannelSelectRegister(ADEVSEL)[offset=78h]..........................................739

19-48.ADCGroup1ChannelSelectRegister(ADG1SEL)[offset=7Ch]................................................740

19-49.ADCGroup2ChannelSelectRegister(ADG2SEL)[offset=80h]................................................741

19-50.ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)[offset=84h]................................742

19-51.ADCStateMachineStatusRegister(ADSMSTATE)[offset=88h]...............................................742

19-52.ADCChannelLastConversionValueRegister(ADLASTCONV)[offset=8Ch]................................743

43

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

19-53.12-bitADCEventGroupResults'FIFORegister(ADEVBUFFER)[offset=90h-AFh].......................744

19-54.10-bitADCEventGroupResults'FIFORegister(ADEVBUFFER)[offset=90h-AFh].......................744

19-55.12-bitADCGroup1ResultsFIFORegister(ADG1BUFFER)[offset=B0h-CFh]..............................745

19-56.10-bitADCGroup1Results'FIFORegister(ADG1BUFFER)[offset=B0h-CFh].............................745

19-57.12-bitADCGroup2ResultsFIFORegister(ADG2BUFFER)[offset=D0h-EFh]..............................746

19-58.10-bitADCGroup2Results'FIFORegister(ADG2BUFFER)[offset=D0h-EFh].............................746

19-59.ADCADEVTPinDirectionControlRegister(ADEVTDIR)[offset=FCh]........................................747

19-60.ADCADEVTPinOutputValueControlRegister(ADEVTOUT)[offset=100h].................................748

19-61.ADCADEVTPinInputValueRegister(ADEVTIN)[offset=104h]...............................................748

19-62.ADCADEVTPinSetRegister(ADEVTSET)[offset=108h].......................................................749

19-63.ADCADEVTPinClearRegister(ADEVTCLR)[offset=10Ch]....................................................749

19-64.ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)[offset=110h]...................................750

19-65.ADCADEVTPinPullControlDisableRegister(ADEVTPDIS)[offset=114h]..................................750

19-66.ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)[offset=118h]...................................751

19-67.ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)[offset=11Ch]..........751

19-68.ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)[offset=120h].................752

19-69.ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)[offset=124h].................753

19-70.ADCMagnitudeCompareInterruptControlRegisters(ADMAGINTxCR)[offset=128h-138h].............754

19-71.ADCMagnitudeCompareMaskRegister(ADMAGINTxMASK)[offset=12Ch-13Ch].......................755

19-72.ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)[offset=158h].............755

19-73.ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)[offset=15Ch]..........756

19-74.ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)[offset=160h]..........................756

19-75.ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF)[offset=164h]........................757

19-76.ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)[offset=168h].....................757

19-77.ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR)[offset=16Ch]...........................758

19-78.ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR)[offset=170h]............................758

19-79.ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)[offset=174h]......................759

19-80.ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR)[offset=178h]............................759

19-81.ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR)[offset=17Ch]............................760

19-82.ADCParityControlRegister(ADPARCR)[offset=180h]..........................................................760

19-83.ADCParityErrorAddressRegister(ADPARADDR)[offset=184h]..............................................761

19-84.ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL)[offset=188h]................................761

20-1.N2HETBlockDiagram.................................................................................................767

20-2.SpecializedTimerMicromachine......................................................................................768

20-3.ProgramFlowTimings..................................................................................................769

20-4.UseoftheOverflowInterruptFlag(HETEXC2).....................................................................770

20-5.Multi-ResolutionOperationFlowExample...........................................................................771

20-6.DebugControlConfiguration..........................................................................................772

20-7.PrescalerConfiguration................................................................................................775

20-8.I/OControl................................................................................................................779

20-9.N2HETLoopResolutionStructureforEachBit.....................................................................780

20-10.LoopResolutionInstructionExecutionExample....................................................................780

20-11.HRI/OArchitecture.....................................................................................................781

20-12.ExampleofHRStructureSharingforN2HETPins0/1............................................................782

20-13.XOR-sharedHRI/O.....................................................................................................782

20-14.SymmetricalPWMwithXOR-sharingOutput.......................................................................783

20-15.AND-sharedHRI/O.....................................................................................................784

20-16.HR0toHR1DigitalLoopbackLogic:LBTYPE[0]=‘0’.............................................................785

20-17.HR0toHR1AnalogLoopBackLogic:LBTYPE[0]=‘1’...........................................................785

44

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

20-18.N2HETInputEdgeDetection..........................................................................................786

20-19.ECMPExecutionTimings..............................................................................................787

20-20.High/LowResolutionModesforECMPandPWCNT..............................................................788

20-21.PCNTInstructionTiming(WithCaptureEdgeAfterHRCounterOverflow).....................................789

20-22.PCNTInstructionTiming(WithCaptureEdgeBeforeHRCounterOverflow)..................................789

20-23.WCAPInstructionTiming..............................................................................................790

20-24.I/OBlockDiagramIncludingPullControlLogic.....................................................................790

20-25.N2HETPinDisableFeatureDiagram................................................................................792

20-26.SuppressionFilterCounterOperation................................................................................793

20-27.InterruptFunctionalityonInstructionLevel..........................................................................794

20-28.InterruptFlag/PriorityLevelArchitecture.............................................................................795

20-29.RequestLineAssignmentExample..................................................................................796

20-30.OperationofN2HETCountInstructions.............................................................................797

20-31.SCNTCountOperation.................................................................................................798

20-32.ACNTPeriodVariationCompensations..............................................................................798

20-33.N2HETTimingsAssociatedwiththeGapFlag(ACNTDeceleration)7..........................................799

20-34.N2HETTimingsAssociatedwiththeGapFlag(ACNTAcceleration)............................................799

20-35.GlobalConfigurationRegister(HETGCR)............................................................................802

20-36.PrescaleFactorRegister(HETPFR)..................................................................................803

20-37.N2HETCurrentAddress(HETADDR)................................................................................804

20-38.OffsetIndexPriorityLevel1Register(HETOFF1)..................................................................804

20-39.OffsetIndexPriorityLevel2Register(HETOFF2)..................................................................805

20-40.InterruptEnableSetRegister(HETINTENAS)......................................................................806

20-41.InterruptEnableClear(HETINTENAC)...............................................................................806

20-42.ExceptionControlRegister(HETEXC1).............................................................................807

20-43.ExceptionControlRegister2(HETEXC2)............................................................................808

20-44.InterruptPriorityRegister(HETPRY).................................................................................809

20-45.InterruptFlagRegister(HETFLG).....................................................................................809

20-46.ANDShareControlRegister(HETAND).............................................................................810

20-47.HRShareControlRegister(HETHRSH).............................................................................811

20-48.XORShareControlRegister(HETXOR).............................................................................812

20-49.RequestEnableSetRegister(HETREQENS).......................................................................813

20-50.RequestEnableClearRegister(HETREQENC)....................................................................813

20-51.RequestDestinationSelectRegister(HETREQDS)[offset=FFF7B844h].....................................814

20-52.N2HETDirectionRegister(HETDIR)..................................................................................815

20-53.N2HETDataInputRegister(HETDIN)................................................................................816

20-54.N2HETDataOutputRegister(HETDOUT)...........................................................................816

20-55.N2HETDataSetRegister(HETDSET)...............................................................................817

20-56.N2HETDataClearRegister(HETDCLR).............................................................................817

20-57.N2HETOpenDrainRegister(HETPDR).............................................................................818

20-58.N2HETPullDisableRegister(HETPULDIS)........................................................................818

20-59.N2HETPullSelectRegister(HETPSL)...............................................................................819

20-60.ParityControlRegister(HETPCR).....................................................................................820

20-61.ParityAddressRegister(HETPAR)...................................................................................821

20-62.ParityPinRegister(HETPPR).........................................................................................822

20-63.SuppressionFilterPreloadRegister(HETSFPRLD)................................................................823

20-64.SuppressionFilterEnableRegister(HETSFENA)...................................................................823

20-65.LoopBackPairSelectRegister(HETLBPSEL)......................................................................824

20-66.LoopBackPairDirectionRegister(HETLBPDIR)..................................................................825

45

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

20-67.N2HETPinDisableRegister(HETPINDIS)..........................................................................825

20-68.ACMPProgramField(P31:P0)........................................................................................832

20-69.ACMPControlField(C31:C0)..........................................................................................832

20-70.ACMPDataField(D31:D0).............................................................................................832

20-71.ACNTProgramField(P31:P0).........................................................................................834

20-72.ACNTControlField(C31:C0)..........................................................................................834

20-73.ACNTDataField(D31:D0).............................................................................................834

20-74.ADCNSTProgramField(P31:P0).....................................................................................837

20-75.ADCNSTControlField(C31:C0)......................................................................................837

20-76.ADCNSTDataField(D31:D0).........................................................................................837

20-77.ADCNSTOperationIfRemoteDataField[31:7]IsNotZero......................................................838

20-78.ADCNSTOperationifRemoteDataField[31:7]IsZero...........................................................838

20-79.ADC,ADD,AND,OR,SBB,SUB,XORProgramField(P31:P0).................................................839

20-80.ADC,ADD,AND,OR,SBB,SUB,XORControlField(C31:C0).................................................839

20-81.ADC,ADD,AND,OR,SBB,SUB,XORDataField(D31:D0).....................................................839

20-82.ADM32ProgramField(P31:P0).......................................................................................845

20-83.ADM32ControlField(C31:C0).........................................................................................845

20-84.ADM32DataField(D31:D0)............................................................................................845

20-85.ADM32AddandMoveOperationforIM&REGTOREG(Case00)...............................................847

20-86.ADM32AddandMoveOperationforREM&REGTOREG(Case01)............................................847

20-87.APCNTProgramField(P31:P0).......................................................................................848

20-88.APCNTControlField(C31:C0)........................................................................................848

20-89.APCNTDataField(D31:D0)...........................................................................................848

20-90.BRProgramField(P31:P0)............................................................................................851

20-91.BRControlField(C31:C0)..............................................................................................851

20-92.BRDataField(D31:D0).................................................................................................851

20-93.CNTProgramField(P31:P0)...........................................................................................853

20-94.CNTControlField(C31:C0)............................................................................................853

20-95.CNTDataField(D31:D0)...............................................................................................853

20-96.DADM64ProgramField(P31:P0).....................................................................................856

20-97.DADM64ControlField(C31:C0).......................................................................................856

20-98.DADM64DataField(D31:D0)..........................................................................................857

20-99.DADM64AddandMoveOperation...................................................................................857

20-100.DJZProgramField(P31:P0)..........................................................................................858

20-101.DJZControlField(C31:C0)...........................................................................................858

20-102.DJZDataField(D31:D0)..............................................................................................858

20-103.ECMPProgramField(P31:P0).......................................................................................860

20-104.ECMPControlField(C31:C0)........................................................................................860

20-105.ECMPDataField(D31:D0)...........................................................................................860

20-106.ECNTProgramField(P31:P0).......................................................................................863

20-107.ECNTControlField(C31:C0).........................................................................................863

20-108.ECNTDataField(D31:D0)............................................................................................863

20-109.MCMPProgramField(P31:P0).......................................................................................865

20-110.MCMPControlField(C31:C0)........................................................................................865

20-111.MCMPDataField(D31:D0)...........................................................................................865

20-112.MOV32ProgramField(P31:P0)......................................................................................868

20-113.MOV32ControlField(C31:C0).......................................................................................868

20-114.MOV32DataField(D31:D0)..........................................................................................868

20-115.MOV32MoveOperationforIMTOREG(Case00)................................................................869

46

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

20-116.MOV32MoveOperationforIMTOREG&REM(Case01)........................................................870

20-117.MOV32MoveOperationforREGTOREM(Case10).............................................................870

20-118.MOV32MoveOperationforREMTOREG(Case11).............................................................870

20-119.MOV64ProgramField(P31:P0)......................................................................................872

20-120.MOV64ControlField(C31:C0).......................................................................................872

20-121.MOV64DataField(D31:D0)..........................................................................................873

20-122.MOV64MoveOperation..............................................................................................873

20-123.PCNTProgramField(P31:P0).......................................................................................874

20-124.PCNTControlField(C31:C0).........................................................................................874

20-125.PCNTDataField(D31:D0)............................................................................................874

20-126.PWCNTProgramField(P31:P0).....................................................................................877

20-127.PWCNTControlField(C31:C0)......................................................................................877

20-128.PWCNTDataField(D31:D0).........................................................................................877

20-129.RADM64ProgramField(P31:P0)....................................................................................880

20-130.RADM64ControlField(C31:C0).....................................................................................880

20-131.RADM64DataField(D31:D0)........................................................................................881

20-132.RADM64AddandMoveOperation.................................................................................881

20-133.RCNTProgramField(P31:P0).......................................................................................883

20-134.RCNTControlField(C31:C0).........................................................................................883

20-135.RCNTDataField(D31:D0)............................................................................................883

20-136.SCMPProgramField(P31:P0).......................................................................................885

20-137.SCMPControlField(C31:C0)........................................................................................885

20-138.SCMPDataField(D31:D0)...........................................................................................885

20-139.SCNTProgramField(P31:P0).......................................................................................887

20-140.SCNTControlField(C31:C0).........................................................................................887

20-141.SCNTDataField(D31:D0)............................................................................................887

20-142.SHFTProgramField(P31:P0)........................................................................................889

20-143.SHFTControlField(C31:C0).........................................................................................889

20-144.SHFTDataField(D31:D0)............................................................................................889

20-145.WCAPProgramField(P31:P0).......................................................................................892

20-146.WCAPControlField(C31:C0)........................................................................................892

20-147.WCAPDataField(D31:D0)...........................................................................................892

20-148.WCAPEProgramField(P31:P0).....................................................................................894

20-149.WCAPEControlField(C31:C0)......................................................................................894

20-150.WCAPEDataField(D31:D0).........................................................................................894

21-1.SystemBlockDiagram..................................................................................................898

21-2.HTUBlockDiagram......................................................................................................899

21-3.ExampleofaHTUTransfer............................................................................................899

21-4.SingleBufferTimingandMemoryRepresentation..................................................................901

21-5.TimingExampleforCircularBufferMode............................................................................902

21-6.DualBufferTiming.......................................................................................................903

21-7.TimingExampleforAutoSwitchBufferMode.......................................................................904

21-8.TimingforDisablingControlPackets..................................................................................905

21-9.TimingExampleIncludingLostRequests............................................................................906

21-10.TimingwhichGeneratesNoRequestLostError....................................................................907

21-11.TimingwhichGeneratesaRequestLostError......................................................................907

21-12.TimingExampleforTwoWCAPInstructions.........................................................................908

21-13.TimingoftheWCAP,ECNT,PCNTExample........................................................................911

21-14.GlobalControlRegister(HTUGC)[offset=00].....................................................................915

47

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

21-15.ControlPacketEnableRegister(HTUCPENA)[offset=04h].....................................................916

21-16.ControlPacket(CP)BusyRegister0(HTUBUSY0)[offset=08h]...............................................917

21-17.ControlPacket(CP)BusyRegister1(HTUBUSY1)[offset=0Ch]...............................................918

21-18.ControlPacket(CP)BusyRegister2(HTUBUSY2)[offset=10h]...............................................918

21-19.ControlPacket(CP)BusyRegister3(HTUBUSY3)[offset=14h]...............................................919

21-20.ActiveControlPacketandErrorRegister(HTUACPE)[offset=18h]............................................919

21-21.RequestLostandBusErrorControlRegister(HTURLBECTRL)[offset=20h]................................921

21-22.BufferFullInterruptEnableSetRegister(HTUBFINTS)[offset=24h]..........................................922

21-23.BufferFullInterruptEnableClearRegister(HTUBFINTC)[offset=28h]........................................922

21-24.InterruptMappingRegister(HTUINTMAP)[offset=2Ch].........................................................923

21-25.InterruptOffsetRegister0(HTUINTOFF0)[offset=34h].........................................................924

21-26.InterruptOffsetRegister1(HTUINTOFF1)[offset=38h].........................................................925

21-27.BufferInitializationModeRegister(HTUBIM)[offset=3Ch]......................................................926

21-28.RequestLostFlagRegister(HTURLOSTFL)[offset=40h].......................................................928

21-29.BufferFullInterruptFlagRegister(HTUBFINTFL)[offset=44h].................................................928

21-30.BERInterruptFlagRegister(HTUBERINTFL)[offset=48h]......................................................929

21-31.MemoryProtection1StartAddressRegister(HTUMP1S)[offset=4Ch].......................................930

21-32.MemoryProtection1EndAddressRegister(HTUMP1E)[offset=50h]........................................930

21-33.DebugControlRegister(HTUDCTRL)[offset=54h]...............................................................931

21-34.WatchPointRegister(HTUWPR)[offset=58h]....................................................................932

21-35.WatchMaskRegister(HTUWMR)[offset=5Ch]...................................................................932

21-36.ModuleIdentificationRegister(HTUID)[offset=60h]..............................................................933

21-37.ParityControlRegister(HTUPCR)[offset=64h]...................................................................934

21-38.ParityAddressRegister(HTUPAR)[offset=68h]..................................................................935

21-39.MemoryProtectionControlandStatusRegister(HTUMPCS)[offset=70h]...................................936

21-40.MemoryProtectionStartAddressRegister0(HTUMP0S)[offset=74h].......................................938

21-41.MemoryProtectionEndAddressRegister(HTUMP0E)[offset=78h]...........................................938

21-42.InitialFullAddressARegister(HTUIFADDRA).....................................................................940

21-43.InitialFullAddressBRegister(HTUIFADDRB).....................................................................940

21-44.InitialNHETAddressandControlRegister(HTUIHADDRCT)....................................................941

21-45.InitialTransferCountRegister(HTUITCOUNT)....................................................................942

21-46.CurrentFullAddressARegister(HTUCFADDRA).................................................................943

21-47.CurrentFullAddressBRegister(HTUCFADDRB).................................................................944

21-48.CurrentFrameCountRegister(HTUCFCOUNT)...................................................................945

22-1.GIOBlockDiagram......................................................................................................949

22-2.I/OFunctionQuickStartFlowChart...................................................................................950

22-3.InterruptGenerationFunctionQuickStartFlowChart..............................................................951

22-4.GIOBlockDiagram......................................................................................................953

22-5.GIOGlobalControlRegister(GIOGCR0)[address=FFF7BC00h]..............................................956

22-6.GIOInterruptDetectRegister(GIOINTDET)[address=FFF7BC08h]..........................................957

22-7.GIOInterruptPolarityRegister(GIOPOL)[address=FFF7BC0Ch].............................................958

22-8.GIOInterruptEnableSetRegister(GIOENASET)[address=FFF7BC10h]....................................959

22-9.GIOInterruptEnableClearRegister(GIOENACLR)[address=FFF7BC14h].................................960

22-10.GIOInterruptPriorityRegister(GIOLVLSET)[address=FFF7BC18h].........................................961

22-11.GIOInterruptPriorityRegister(GIOLVLCLR)[address=FFF7BC1Ch].........................................962

22-12.GIOInterruptFlagRegister(GIOFLG)[address=FFF7BC20h].................................................963

22-13.GIOOffset1Register(GIOOFF1)[address=FFF7BC24h]......................................................964

22-14.GIOOffset2Register(GIOOFF2)[address=FFF7BC28h]......................................................965

22-15.GIOEmulation1Register(GIOEMU1)[address=FFF7BC2Ch]................................................966

48

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

22-16.GIOEmulation2Register(GIOEMU2)[address=FFF7BC30h].................................................967

22-17.GIODataDirectionRegisters[A-H][7:0](GIODIR[A-H])[address=FFF7BC34h,FFF7BC54h,

FFF7BC74h,FFF7BC94h,FFF7BCB4h,FFF7BCD4h,FFF7BCF4h,FFF7BD14h]............................968

22-18.GIODataInputRegisters[A-H][7:0](GIODIN[A-H])[address=FFF7BC38h,FFF7BC58h,FFF7BC78h,

FFF7BC98h,FFF7BCB8h,FFF7BCD8h,FFF7BCF8h,FFF7BD18h]............................................968

22-19.GIODataOutputRegisters[A-H][7:0](GIODOUT[A-H][7:0])[address=FFF7BC3Ch,FFF7BC5Ch,

FFF7BC7Ch,FFF7BC9Ch,FFF7BCBCh,FFF7BCDCh,FFF7BCFCh,FFF7BD1Ch].........................969

22-20.GIODataSetRegisters[A-H][7:0](GIODSET[A-H][7:0])[address=FFF7BC40h,FFF7BC60h,

FFF7BC80h,FFF7BCA0h,FFF7BCC0h,FFF7BCE0h,FFF7BD00h,FFF7BD20h]............................969

22-21.GIODataClearRegisters[A-H][7:0](GIODCLR[A-H][7:0])[address=FFF7BC44h,FFF7BC64h,

FFF7BC84h,FFF7BCA4h,FFF7BCC4h,FFF7BCE4h,FFF7BD04h,FFF7BD24h]............................970

22-22.GIOOpenDrainRegisters[A-H][7:0](GIOPDR[A-H][7:0])[address=FFF7BC48h,FFF7BC68h,

FFF7BC88h,FFF7BCA8h,FFF7BCC8h,FFF7BCE8h,FFF7BD08h,FFF7BD28h]............................970

22-23.GIOPullDisableRegisters[A-H][7:0](GIOPULDIS[A-H][7:0])[address=FFF7BC4Ch,FFF7BC6Ch,

FFF7BC8Ch,FFF7BCACh,FFF7BCCCh,FFF7BCECh,FFF7BD0Ch,FFF7BD2Ch].........................971

22-24.GIOPullSelectRegisters[A-H][7:0](GIOPSL[A-H][7:0])[address=FFF7BC50h,FFF7BC70h,

FFF7BC90h,FFF7BCB0h,FFF7BCD0h,FFF7BCF0h,FFF7BD10h,FFF7BD30h]............................971

23-1.BlockDiagram...........................................................................................................975

23-2.FlexRayModuleBlocks................................................................................................978

23-3.TransferUnit.............................................................................................................979

23-4.FlexRayTransferUnitOperationPrinciple..........................................................................980

23-5.FlexRayTransferUnitOperationPrincipleforTransferFSM(simplified).......................................981

23-6.FlexRayTransferUnitOperationPrincipleforEventFSM(simplified)..........................................982

23-7.Example:FTUReadTransferof6Words...........................................................................984

23-8.Example:FTUWriteTransferof6Words...........................................................................984

23-9.TransferStartAddresstoMessageBufferNumberAssignment.................................................986

23-10.StructureofCommunicationCycle....................................................................................989

23-11.ConfigurationofNITStartandOffsetCorrectionStart.............................................................990

23-12.OverallStateDiagramofCommunicationController...............................................................994

23-13.StructureofPOCStateWAKEUP....................................................................................998

23-14.TimingofWakeUpPattern...........................................................................................1000

23-15.StateDiagramTime-TriggeredStartup.............................................................................1002

23-16.FIFOStatus:Empty,NotEmpty,andOverrun.....................................................................1012

23-17.HostAccesstoMessageRAM......................................................................................1015

23-18.DoubleBufferStructureInputBuffer................................................................................1016

23-19.SwappingofIBCMandIBCRBits...................................................................................1016

23-20.DoubleBufferStructureOutputBuffer..............................................................................1017

23-21.SwappingofOBCMandOBCRBits................................................................................1018

23-22.AccesstoTransientBufferRAMs...................................................................................1020

23-23.ConfigurationExampleofMessageBuffersintheMessageRAM..............................................1021

23-24.HeaderSectionofMessageBufferinMessageRAM............................................................1022

23-25.ExampleStructureofDataPartitioninMessageRAM...........................................................1024

23-26.ParityStructure........................................................................................................1025

23-27.ParityGenerationandCheck........................................................................................1026

23-28.TransferUnitInterruptStructure.....................................................................................1029

23-29.InterruptStructure.....................................................................................................1031

23-30.GlobalStaticNumber0(GSN0)[offset_TU=00h]...............................................................1035

23-31.GlobalStaticNumber1(GSN1)[offset_TU=04h]...............................................................1035

23-32.GlobalControlSet(GCS)[offset_TU=10h]........................................................................1036

23-33.GlobalControlReset(GCR)[offset_TU=14h]....................................................................1036

23-34.TransferStatusCurrentBuffer(TSCB)[offset_TU=18h]........................................................1039

49

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-35.LastTransferredBuffertoCommunicationController(LTBCC)[offset_TU=1Ch]...........................1040

23-36.LastTransferredBuffertoSystemMemory(LTBSM)[offset_TU=20h].......................................1040

23-37.TransferBaseAddress(TBA)[offset_TU=24h]..................................................................1041

23-38.NextTransferBaseAddress(NTBA)[offset_TU=28h]..........................................................1041

23-39.BaseAddressofMirroredStatus(BAMS)[offset_TU=2Ch]....................................................1042

23-40.StartAddressofMemoryProtection(SAMP)[offset_TU=30h]................................................1042

23-41.EndAddressofMemoryProtection(EAMP)[offset_TU=34h].................................................1043

23-42.TransfertoSystemMemoryOccurred1(TSMO1)[offset_TU=40h]..........................................1044

23-43.TransfertoSystemMemoryOccurred2(TSMO2)[offset_TU=44h]..........................................1044

23-44.TransfertoSystemMemoryOccurred3(TSMO3)[offset_TU=48h]..........................................1045

23-45.TransfertoSystemMemoryOccurred4(TSMO4)[offset_TU=4Ch].........................................1045

23-46.TransfertoCommunicationControllerOccurred1(TCCO1)[offset_TU=50h]..............................1046

23-47.TransfertoCommunicationControllerOccurred2(TCCO2)[offset_TU=54h]..............................1046

23-48.TransfertoCommunicationControllerOccurred3(TCCO3)[offset_TU=58h]..............................1047

23-49.TransfertoCommunicationControllerOccurred4(TCCO4)[offset_TU=5Ch]..............................1047

23-50.TransferOccurredOffset(TOOFF)[offset_TU=60h]............................................................1048

23-51.ParityErrorAddress(PEADR)[offset_TU=70h].................................................................1049

23-52.TransferErrorInterruptFlag(TEIF)[offset_TU=74h]...........................................................1050

23-53.TransferErrorInterruptEnableSet(TEIRES)[offset_TU=78h]...............................................1051

23-54.TransferErrorInterruptEnableReset(TEIRER)[offset_TU=7Ch]............................................1052

23-55.TriggerTransfertoSystemMemorySet1(TTSMS1)[offset_TU=80h]......................................1053

23-56.TriggerTransfertoSystemMemoryReset1(TTSMR1)[offset_TU=84h]...................................1053

23-57.TriggerTransfertoSystemMemorySet2(TTSMS2)[offset_TU=88h]......................................1054

23-58.TriggerTransfertoSystemMemoryReset2(TTSMR2)[offset_TU=8Ch]...................................1054

23-59.TriggerTransfertoSystemMemorySet3(TTSMS3)[offset_TU=90h]......................................1054

23-60.TriggerTransfertoSystemMemoryReset3(TTSMR3)[offset_TU=94h]...................................1055

23-61.TriggerTransfertoSystemMemorySet4(TTSMS4)[offset_TU=98h]......................................1055

23-62.TriggerTransfertoSystemMemoryReset4(TTSMR4)[offset_TU=9Ch]...................................1055

23-63.TriggerTransfertoCommunicationControllerSet1(TTCCS1)[offset_TU=A0h]..........................1056

23-64.TriggerTransfertoCommunicationControllerReset1(TTCCR1)[offset_TU=A4h].......................1056

23-65.TriggerTransfertoCommunicationControllerSet2(TTCCS2)[offset_TU=A8h]..........................1057

23-66.TriggerTransfertoCommunicationControllerReset2(TTCCR2)[offset_TU=ACh].......................1057

23-67.TriggerTransfertoCommunicationControllerSet3(TTCCS3)[offset_TU=B0h]..........................1057

23-68.TriggerTransfertoCommunicationControllerReset3(TTCCR3)[offset_TU=B4h].......................1058

23-69.TriggerTransfertoCommunicationControllerSet4(TTCCS4)[offset_TU=B8h]..........................1058

23-70.TriggerTransfertoCommunicationControllerReset4(TTCCR4)[offset_TU=BCh].......................1058

23-71.EnableTransferonEventtoSystemMemorySet1(ETESMS1)[offset_TU=C0h]........................1059

23-72.EnableTransferonEventtoSystemMemoryReset1(ETESMR1)[offset_TU=C4h].....................1059

23-73.EnableTransferonEventtoSystemMemorySet2(ETESMS2)[offset_TU=C8h]........................1060

23-74.EnableTransferonEventtoSystemMemoryReset2(ETESMR2)[offset_TU=CCh].....................1060

23-75.EnableTransferonEventtoSystemMemorySet3(ETESMS3)[offset_TU=D0h]........................1060

23-76.EnableTransferonEventtoSystemMemoryReset3(ETESMR3)[offset_TU=D4h].....................1061

23-77.EnableTransferonEventtoSystemMemorySet4(ETESMS4)[offset_TU=D8h]........................1061

23-78.EnableTransferonEventtoSystemMemoryReset4(ETESMR4)[offset_TU=DCh].....................1061

23-79.ClearonEventtoSystemMemorySet1(CESMS1)[offset_TU=E0h].......................................1062

23-80.ClearonEventtoSystemMemoryReset1(CESMR1)[offset_TU=E4h]....................................1062

23-81.ClearonEventtoSystemMemorySet2(CESMS2)[offset_TU=E8h].......................................1063

23-82.ClearonEventtoSystemMemoryReset2(CESMR2)[offset_TU=ECh]...................................1063

23-83.ClearonEventtoSystemMemorySet3(CESMS3)[offset_TU=F0h].......................................1063

50

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-84.ClearonEventtoSystemMemoryReset3(CESMR3)[offset_TU=F4h]....................................1064

23-85.ClearonEventtoSystemMemorySet4(CESMS4)[offset_TU=F8h].......................................1064

23-86.ClearonEventtoSystemMemoryReset4(CESMR4)[offset_TU=FCh]...................................1064

23-87.TransfertoSystemMemoryInterruptEnableSet1(TSMIES1)[offset_TU=100h].........................1065

23-88.TransfertoSystemMemoryInterruptEnableReset1(TSMIER1)[offset_TU=104h]......................1065

23-89.TransfertoSystemMemoryInterruptEnableSet2(TSMIES2)[offset_TU=108h].........................1066

23-90.TransfertoSystemMemoryInterruptEnableReset2(TSMIER2)[offset_TU=10Ch]......................1066

23-91.TransfertoSystemMemoryInterruptEnableSet3(TSMIES3)[offset_TU=110h].........................1066

23-92.TransfertoSystemMemoryInterruptEnableReset3(TSMIER3)[offset_TU=114h]......................1067

23-93.TransfertoSystemMemoryInterruptEnableSet4(TSMIES4)[offset_TU=118h].........................1067

23-94.TransfertoSystemMemoryInterruptEnableReset4(TSMIER4)[offset_TU=11Ch]......................1067

23-95.TransfertoCommunicationControllerInterruptEnableSet1(TCCIES1)[offset_TU=120h]..............1068

23-96.TransfertoCommunicationControllerInterruptEnableReset1(TCCIER1)[offset_TU=124h]..........1068

23-97.TransfertoCommunicationControllerInterruptEnableSet2(TCCIES2)[offset_TU=128h]..............1069

23-98.TransfertoCommunicationControllerInterruptEnableReset2(TCCIER2)[offset_TU=12Ch]..........1069

23-99.TransfertoCommunicationControllerInterruptEnableSet3(TCCIES3)[offset_TU=130h]..............1070

23-100.TransfertoCommunicationControllerInterruptEnableReset3(TCCIER3)[offset_TU=134h].........1070

23-101.TransfertoCommunicationControllerInterruptEnableSet4(TCCIES4)[offset_TU=138h]............1071

23-102.TransfertoCommunicationControllerInterruptEnableReset4(TCCIER4)[offset_TU=13Ch].........1071

23-103.TransferConfigurationRAM(TCR)[offset_TU_RAM=0000h-01FFh].....................................1072

23-104.ParityInformationinTCRParityTestMode[offset_TU_RAM=0200h-03FFh]...........................1073

23-105.MessageBufferAssignment........................................................................................1074

23-106.TestRegister1(TEST1)[offset_CC=10h].......................................................................1078

23-107.TestRegister2(TEST2)[offset_CC=14h].......................................................................1082

23-108.TestModeAccesstoCommunicationControllerRAMBlocks.................................................1083

23-109.LockRegister(LCK)[offset_CC=1Ch]............................................................................1084

23-110.ErrorInterruptRegister(EIR)[offset_CC=20h]..................................................................1085

23-111.StatusInterruptRegister(SIR)[offset_CC=24h]................................................................1087

23-112.ErrorInterruptLineSelectRegister(EILS)[offset_CC=28h]..................................................1090

23-113.StatusInterruptLineSelectRegister(SILS)[offset_CC=2Ch]................................................1092

23-114.ErrorInterruptEnableSet/ResetRegister(EIES,EIER)[offset_CC=30h-34h].............................1094

23-115.StatusInterruptEnableSet/ResetRegister(SIES,SIER)[offset_CC=38h-3Ch]...........................1096

23-116.InterruptLineEnableRegister(ILE)[offset_CC=40h]..........................................................1098

23-117.Timer0ConfigurationRegister(T0C)[offset_CC=44h]........................................................1099

23-118.Timer1ConfigurationRegister(T1C)[offset_CC=48h]........................................................1100

23-119.StopWatchRegister1(STPW1)[offset_CC=4Ch].............................................................1101

23-120.StopWatchRegister2(STPW2)[offset_CC=50h]..............................................................1102

23-121.SUCConfigurationRegister1(SUCC1)[offset_CC=80h].....................................................1103

23-122.SUCConfigurationRegister2(SUCC2)[offset_CC=84h].....................................................1107

23-123.SUCConfigurationRegister3(SUCC3)[offset_CC=88h].....................................................1108

23-124.NEMConfigurationRegister(NEMC)[offset_CC=8Ch]........................................................1108

23-125.PRTConfigurationRegister1(PRTC1)[offset_CC=90h]......................................................1109

23-126.PRTConfigurationRegister2(PRTC2)[offset_CC=94h]......................................................1110

23-127.MHDConfigurationRegister(MHDC)[offset_CC=98h]........................................................1111

23-128.GTUConfigurationRegister1(GTUC1)[offset_CC=A0h].....................................................1111

23-129.GTUConfigurationRegister2(GTUC2)[offset_CC=A4h].....................................................1112

23-130.GTUConfigurationRegister3(GTUC3)[offset_CC=A8h].....................................................1113

23-131.GTUConfigurationRegister4(GTUC4)[offset_CC=ACh]....................................................1114

23-132.GTUConfigurationRegister5(GTUC5)[offset_CC=B0h].....................................................1114

51

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-133.GTUConfigurationRegister6(GTUC6)[offset_CC=B4h].....................................................1115

23-134.GTUConfigurationRegister7(GTUC7)[offset_CC=B8h].....................................................1115

23-135.GTUConfigurationRegister8(GTUC8)[offset_CC=BCh]....................................................1116

23-136.GTUConfigurationRegister9(GTUC9)[offset_CC=C0h].....................................................1116

23-137.GTUConfigurationRegister10(GTUC10)[offset_CC=C4h]..................................................1117

23-138.GTUConfigurationRegister11(GTUC11)[offset_CC=C8h]..................................................1118

23-139.CommunicationControllerStatusVectorRegister(CCSV)[offset_CC=100h]..............................1119

23-140.CommunicationControllerErrorVectorRegister(CCEV)[offset_CC=104h]...............................1121

23-141.SlotCounterVectorRegister(SCV)[offset_CC=110h]........................................................1122

23-142.MacrotickandCycleCounterRegister(MTCCV)[offset_CC=114h].........................................1122

23-143.RateCorrectionValueRegister(RCV)[offset_CC=118h].....................................................1123

23-144.OffsetCorrectionValueRegister(OCV)[offset_CC=11Ch]...................................................1123

23-145.SyncFrameStatusRegister(SFS)[offset_CC=120h].........................................................1124

23-146.SymbolWindowandNITStatusRegister(SWNIT)[offset_CC=124h].......................................1125

23-147.AggregatedChannelStatusRegister(ACS)[offset_CC=128h]...............................................1126

23-148.EvenSyncIDRegister[1...15](ESIDn)[offset_CC=130h-168h]............................................1128

23-149.OddSyncIDRegister[1...15](OSIDn)[offset_CC=170h-1A8h]............................................1129

23-150.NetworkManagementRegister[1...3](NMVn)[offset_CC=1B0h-1B8h]...................................1130

23-151.MessageRAMConfigurationRegister(MRC)[offset_CC=300h].............................................1131

23-152.FIFORejectionFilterRegister(FRF)[offset_CC=304h].......................................................1133

23-153.FIFORejectionFilterMaskRegister(FRFM)[offset_CC=308h]..............................................1134

23-154.FIFOCriticalLevelRegister(FCL)[offset_CC=30Ch]..........................................................1134

23-155.MessageHandlerStatus(MHDS)[offset_CC=310h]...........................................................1135

23-156.LastDynamicTransmitSlot(LDTS)[offset_CC=314h]........................................................1136

23-157.FIFOStatusRegister(FSR)[offset_CC=318h]..................................................................1137

23-158.MessageHandlerConstraintsFlags(MHDF)[offset_CC=31Ch].............................................1138

23-159.TransmissionRequestRegister4(TXRQ4)[offset_CC=32Ch]...............................................1139

23-160.TransmissionRequestRegister3(TXRQ3)[offset_CC=328h]...............................................1139

23-161.TransmissionRequestRegister2(TXRQ2)[offset_CC=324h]...............................................1139

23-162.TransmissionRequestRegister1(TXRQ1)[offset_CC=320h]...............................................1140

23-163.NewDataRegister4(NDAT4)[offset_CC=33Ch]..............................................................1140

23-164.NewDataRegister3(NDAT3)[offset_CC=338h]...............................................................1140

23-165.NewDataRegister2(NDAT2)[offset_CC=334h]...............................................................1140

23-166.NewDataRegister1(NDAT1)[offset_CC=330h]...............................................................1141

23-167.MessageBufferStatusChangedRegister4(MBSC4)[offset_CC=34Ch]..................................1141

23-168.MessageBufferStatusChangedRegister3(MBSC3)[offset_CC=348h]...................................1141

23-169.MessageBufferStatusChangedRegister2(MBSC2)[offset_CC=344h]...................................1141

23-170.MessageBufferStatusChangedRegister1(MBSC1)[offset_CC=340h]...................................1142

23-171.CoreReleaseRegister(CREL)[offset_CC=3F0h]..............................................................1143

23-172.EndianRegister(ENDN)[offset_CC=3F4h].....................................................................1143

23-173.WriteDataSection[1...64]Register(WRDSn)[offset_CC=400h-4FCh]...................................1144

23-174.WriteHeaderSectionRegister1(WRHS1)[offset_CC=500h]................................................1145

23-175.WriteHeaderSectionRegister2(WRHS2)[offset_CC=504h]................................................1146

23-176.WriteHeaderSectionRegister3(WRHS3)[offset_CC=508h]................................................1147

23-177.InputBufferCommandMaskRegister(IBCM)[offset_CC=510h]............................................1148

23-178.InputBufferCommandRequestRegister(IBCR)[offset_CC=514h].........................................1149

23-179.ReadDataSectionRegister(RDDSn)[offset_CC=600h-6FCh]..............................................1150

23-180.ReadHeaderSectionRegister1(RDHS1)[offset_CC=700h]................................................1151

23-181.ReadHeaderSectionRegister2(RDHS2)[offset_CC=704h]................................................1152

52

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-182.ReadHeaderSectionRegister3(RDHS3)[offset_CC=708h]................................................1153

23-183.MessageBufferStatusRegister(MBS)[offset_CC=70Ch]....................................................1154

23-184.OutputBufferCommandMaskRegister(OBCM)[offset_CC=700h].........................................1157

23-185.OutputBufferCommandMaskRegister(OBCR)[offset_CC=714h].........................................1158

24-1.BlockDiagram..........................................................................................................1165

24-2.BitTiming...............................................................................................................1167

24-3.CANBit-timingConfiguration.........................................................................................1172

24-4.StructureofaMessageObject......................................................................................1174

24-5.MessageRAMRepresentationinDebug/SuspendMode........................................................1177

24-6.MessageRAMRepresentationinRAMDirectAccessMode....................................................1177

24-7.DataTransferBetweenIF1/IF2RegistersandMessageRAM................................................1179

24-8.InitializationofaTransmitObject....................................................................................1181

24-9.InitializationofaSingleReceiveObjectforDataFrames........................................................1181

24-10.InitializationofaSingleReceiveObjectforRemoteFrames....................................................1182

24-11.CPUHandlingofaFIFOBuffer(InterruptDriven)................................................................1187

24-12.CANInterruptTopology1............................................................................................1190

24-13.CANInterruptTopology2............................................................................................1191

24-14.LocalPowerDownModeFlowDiagram...........................................................................1193

24-15.CANCoreinSilentMode.............................................................................................1194

24-16.CANCoreinLoopBackMode.......................................................................................1195

24-17.CANCoreinExternalLoopBackMode............................................................................1196

24-18.CANCoreinLoopBackCombinedwithSilentMode............................................................1197

24-19.CANControlRegister(DCANCTL)[offset=00]...................................................................1201

24-20.ErrorandStatusRegister(DCANES)[offset=04h]..............................................................1203

24-21.ErrorCounterRegister(DCANERRC)[offset=08h].............................................................1205

24-22.BitTimingRegister(DCANBTR)[offset=0Ch]....................................................................1206

24-23.InterruptRegister(DCANINT)[offset=10h].......................................................................1207

24-24.TestRegister(DCANTEST)[offset=14h].........................................................................1208

24-25.ParityErrorCodeRegister(DCANPERR)[offset=1Ch].........................................................1209

24-26.Auto-Bus-OnTimeRegister(DCANABOTR)[offset=80h]......................................................1210

24-27.TransmissionRequestXRegister(DCANTXRQX)[offset=84h]..............................................1210

24-28.TransmissionRequest12Register[offset=88h]..................................................................1211

24-29.TransmissionRequest34Register[offset=8Ch].................................................................1211

24-30.TransmissionRequest56Register[offset=90h]..................................................................1211

24-31.TransmissionRequest78Register[offset=94h]..................................................................1211

24-32.NewDataXRegister(DCANNWDATX)[offset=98h]..........................................................1212

24-33.NewData12Register[offset=9Ch]................................................................................1213

24-34.NewData34Register[offset=A0h]................................................................................1213

24-35.NewData56Register[offset=A4h]................................................................................1213

24-36.NewData78Register[offset=A8h]................................................................................1213

24-37.InterruptPendingXRegister(DCANINTPNDX)[offset=ACh].................................................1214

24-38.InterruptPending12Register[offset=B0h]........................................................................1215

24-39.InterruptPending34Register[offset=B4h]........................................................................1215

24-40.InterruptPending56Register[offset=B8h]........................................................................1215

24-41.InterruptPending78Register[offset=BCh].......................................................................1215

24-42.MessageValidXRegister(DCANMSGVALX)[offset=C0h]...................................................1216

24-43.MessageValid12Register[offset=C4h]..........................................................................1217

24-44.MessageValid34Register[offset=C8h]..........................................................................1217

24-45.MessageValid56Register[offset=CCh]..........................................................................1217

53

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

24-46.MessageValid78Register[offset=D0h]..........................................................................1217

24-47.InterruptMultiplexer12Register[offset=D8h]....................................................................1218

24-48.InterruptMultiplexer34Register[offset=DCh]....................................................................1218

24-49.InterruptMultiplexer56Register[offset=E0h]....................................................................1218

24-50.InterruptMultiplexer78Register[offset=E4h]....................................................................1218

24-51.IF1CommandRegisters(DCANIF1CMD)[offset=100h].......................................................1219

24-52.IF2CommandRegisters(DCANIF2CMD)[offset=120h].......................................................1219

24-53.IF1MaskRegister(DCANIF1MSK)[offset=104h]...............................................................1222

24-54.IF2MaskRegister(DCANIF2MSK)[offset=124h]...............................................................1222

24-55.IF1ArbitrationRegister(DCANIF1ARB)[offset=108h].........................................................1223

24-56.IF2ArbitrationRegister(DCANIF2ARB)[offset=128h].........................................................1223

24-57.IF1MessageControlRegister(DCANIF1MCTL)[offset=10Ch]...............................................1224

24-58.IF2MessageControlRegister(DCANIF2MCTL)[offset=12Ch]...............................................1224

24-59.IF1DataARegister(DCANIF1DATA)[offset=110h]............................................................1226

24-60.IF1DataBRegister(DCANIF1DATB)[offset=114h]............................................................1226

24-61.IF2DataARegister(DCANIF2DATA)[offset=130h]............................................................1226

24-62.IF2DataBRegister(DCANIF2DATB)[offset=134h]............................................................1226

24-63.IF3ObservationRegister(DCANIF3OBS)[offset=140h].......................................................1227

24-64.IF3MaskRegister(DCANIF3MSK)[offset=144h]...............................................................1229

24-65.IF3ArbitrationRegister(DCANIF3ARB)[offset=148h].........................................................1230

24-66.IF3MessageControlRegister(DCANIF3MCTL)[offset=14Ch]..............................................1231

24-67.IF3DataARegister(DCANIF3DATA)[offset=150h]............................................................1232

24-68.IF3DataBRegister(DCANIF3DATB)[offset=154h]............................................................1232

24-69.IF3UpdateEnable12Register[offset=160h].....................................................................1233

24-70.IF3UpdateEnable34Register[offset=164h].....................................................................1233

24-71.IF3UpdateEnable56Register[offset=168h].....................................................................1233

24-72.IF3UpdateEnable78Register[offset=16Ch]....................................................................1233

24-73.CANTXIOControlRegister(DCANTIOC)[offset=1E0h]......................................................1234

24-74.CANRXIOControlRegister(DCANRIOC)[offset=1E4h].....................................................1235

25-1.SPIFunctionalLogicDiagram.......................................................................................1240

25-2.SPIThree-PinOperation.............................................................................................1242

25-3.OperationwithSPISCS................................................................................................1243

25-4.OperationwithSPIENA................................................................................................1244

25-5.SPIFive-PinOptionwithSPIENAandSPISCS....................................................................1245

25-6.FormatforTransmittingan8-BitWord..............................................................................1246

25-7.FormatforReceivingan8-BitWord.................................................................................1246

25-8.ClockModewithPolarity=0andPhase=0......................................................................1247

25-9.ClockModewithPolarity=0andPhase=1.......................................................................1247

25-10.ClockModewithPolarity=1andPhase=0......................................................................1248

25-11.ClockModewithPolarity=1andPhase=1.......................................................................1248

25-12.FiveBitsperCharacter(5-PinOption)..............................................................................1249

25-13.TypicalDiagramwhenaBufferinMasterisinCSHOLDMode(SPI-SPI).....................................1251

25-14.BlockDiagramShiftRegister,MSBFirst...........................................................................1253

25-15.BlockDiagramShiftRegister,LSBFirst............................................................................1253

25-16.2-dataLineMode(Phase0,Polarity0).............................................................................1256

25-17.Two-PinParallelModeTimingDiagram(Phase0,Polarity0)...................................................1256

25-18.4-DataLineMode(Phase0,Polarity0)............................................................................1257

25-19.4PinsParallelModeTimingDiagram(Phase0,Polarity0).....................................................1257

25-20.Eight-dataLineMode(Phase0,Polarity0)........................................................................1258

54

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

25-21.8PinsParallelModeTimingDiagram(Phase0,Polarity0).....................................................1259

25-22.I/OPathsduringI/OLoopbackModes..............................................................................1261

25-23.TGInterruptStructure.................................................................................................1264

25-24.SPIFLGInterruptStructure...........................................................................................1264

25-25.DMAChannelandRequestLine(Logical)StructureinMultibufferMode.....................................1265

25-26.SPIGlobalControlRegister0(SPIGCR0)[offset=00]...........................................................1269

25-27.SPIGlobalControlRegister1(SPIGCR1)[offset=04h].........................................................1270

25-28.SPIInterruptRegister(SPIINT0)[offset=08h]....................................................................1271

25-29.SPIInterruptLevelRegister(SPILVL)[offset=0Ch]..............................................................1273

25-30.SPIFlagRegister(SPIFLG)[offset=10h].........................................................................1274

25-31.SPIPinControlRegister0(SPIPC0)[offset=14h]...............................................................1277

25-32.SPIPinControlRegister1(SPIPC1)[offset=18h]...............................................................1278

25-33.SPIPinControlRegister2(SPIPC2)[offset=1Ch]...............................................................1280

25-34.SPIPinControlRegister3(SPIPC3)[offset=20h]...............................................................1281

25-35.SPIPinControlRegister4(SPIPC4)[offset=24h]...............................................................1282

25-36.SPIPinControlRegister5(SPIPC5)[offset=28h]...............................................................1284

25-37.SPIPinControlRegister6(SPIPC6)[offset=2Ch]..............................................................1285

25-38.SPIPinControlRegister7(SPIPC7)[offset=30h]...............................................................1287

25-39.SPIPinControlRegister8(SPIPC8)[offset=34h]...............................................................1288

25-40.SPITransmitDataRegister0(SPIDAT0)[offset=38h]..........................................................1289

25-41.SPITransmitDataRegister1(SPIDAT1)[offset=3Ch]..........................................................1290

25-42.SPIReceiveBufferRegister(SPIBUF)[offset=40h].............................................................1291

25-43.SPIEmulationRegister(SPIEMU)[offset=44h]..................................................................1293

25-44.SPIDelayRegister(SPIDELAY)[offset=48h].....................................................................1293

25-45.Example:tC2TDELAY=8VCLKCycles..................................................................................1295

25-46.Example:tT2CDELAY=4VCLKCycles..................................................................................1295

25-47.Transmit-Data-Finished-to-ENA-Inactive-Timeout.................................................................1295

25-48.Chip-Select-Active-to-ENA-Signal-Active-Timeout.................................................................1295

25-49.SPIDefaultChipSelectRegister(SPIDEF)[offset=4Ch].......................................................1296

25-50.SPIDataFormatRegisters(SPIFMT[3:0])[offset=5Ch-50h]...................................................1297

25-51.InterruptVector0(NTVECT0)[offset=60h].......................................................................1299

25-52.InterruptVector1(INTVECT1)[offset=64h].......................................................................1300

25-53.Parallel/ModuloModeControlRegister(SPIPMCTRL)[offset=6Ch]..........................................1301

25-54.Multi-bufferModeEnableRegister(MIBSPIE)[offset=70h].....................................................1304

25-55.TGInterruptEnableSetRegister(TGITENST)[offset=74h]....................................................1305

25-56.TGInterruptEnableClearRegister(TGITENCR)[offset=78h].................................................1306

25-57.TransferGroupInterruptLevelSetRegister(TGITLVST)[offset=7Ch].......................................1307

25-58.TransferGroupInterruptLevelClearRegister(TGITLVCR)[offset=80h].....................................1308

25-59.TransferGroupInterruptFlagRegister(TGINTFLG)[offset=84h].............................................1309

25-60.TickCounterOperation................................................................................................1310

25-61.TickCountRegister(TICKCNT)[offset=90h].....................................................................1310

25-62.LastTGEndPointer(LTGPEND)[offset=94h]...................................................................1311

25-63.MibSPITGControlRegisters(TGxCTRL)[offsets=98h-D4h]..................................................1312

25-64.DMAChannelControlRegister(DMAxCTRL)[offset=D8h-F4h]...............................................1315

25-65.DMAxCOUNTRegister(ICOUNT)[offset=F8h-114h]............................................................1317

25-66.DMALargeCountRegister(DMACNTLEN)[offset=118h]......................................................1318

25-67.Multi-bufferRAMUncorrectableParityErrorControlRegister(UERRCTRL)[offset=120h]................1318

25-68.Multi-bufferRAMUncorrectableParityErrorStatusRegister(UERRSTAT)[offset=124h].................1319

25-69.RXRAMUncorrectableParityErrorAddressRegister(UERRADDR1)[offset=128h].......................1320

55

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

25-70.TXRAMUncorrectableParityErrorAddressRegister(UERRADDR0)[offset=12Ch].......................1321

25-71.RXRAMOverrunBufferAddressRegister(RXOVRN_BUF_ADDR)[offset=130h]..........................1322

25-72.I/O-LoopbackTestControlRegister(IOLPBKTSTCR)[offset=134h]..........................................1323

25-73.SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1forSPIFMT0andSPIFMT1)[offset=

138h].....................................................................................................................1325

25-74.SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2forSPIFMT2andSPIFMT3)[offset=

13Ch].....................................................................................................................1327

25-75.Multi-BufferRAMConfiguration......................................................................................1329

25-76.Multi-bufferRAMTransmitDataRegister[offset=Base+000-1FFh]..........................................1331

25-77.Multi-bufferRAMReceiveBufferRegister[offset=RAMBase+200-3FFh]..................................1333

25-78.MemoryMapforParityLocationsduringNormalandTestMode...............................................1336

25-79.ExampleofMemoryMappedParityLocationsduringTestMode...............................................1337

25-80.SPI/MibSPIPinsduringMastermode3-pinconfiguration.......................................................1338

25-81.SPI/MibSPIpinsduringMastermode4-pinwithSPISCSconfiguation........................................1338

25-82.SPI/MibSPIpinsduringMastermodein4pinwithSPIENAconfiguration.....................................1339

25-83.SPI/MibSPIpinsduringMaster/Slavemodewith5-pinconfiguration...........................................1339

25-84.SPI/MibSPIpinsduringSlavemode3-pinconfiguration.........................................................1340

25-85.SPI/MibSPIpinsduringSlavemodein4pinwithSPIENAconfiguration.......................................1340

25-86.SPI/MibSPIpinsduringSlavemodein5pinconfiguration-(SingleSlave)....................................1340

25-87.SPI/MibSPIpinsduringSlavemodein5pinconfiguration-(Single/MultiSlave)..............................1340

26-1.DetailedSCIBlockDiagram..........................................................................................1348

26-2.SCI/LINBlockDiagram...............................................................................................1349

26-3.TypicalSCIDataFrameFormats...................................................................................1350

26-4.AsynchronousCommunicationBitTiming..........................................................................1351

26-5.SuperfractionalDividerExample....................................................................................1353

26-6.Idle-LineMultiprocessorCommunicationFormat..................................................................1355

26-7.Address-BitMultiprocessorCommunicationFormat..............................................................1355

26-8.ReceiveBuffers........................................................................................................1356

26-9.TransmitBuffers.......................................................................................................1357

26-10.GeneralInterruptScheme............................................................................................1358

26-11.InterruptGenerationforGivenFlags................................................................................1359

26-12.LINProtocolMessageFrameFormat:MasterHeaderandSlaveResponse.................................1366

26-13.Header3Fields:SynchBreak,Synch,andID....................................................................1366

26-14.ResponseFormatofLINMessageFrame.........................................................................1367

26-15.MessageHeaderinTermsofTbit.....................................................................................1370

26-16.IDField..................................................................................................................1370

26-17.MeasurementsforSynchronization.................................................................................1372

26-18.SynchronizationValidationProcessandBaudRateAdjustment................................................1373

26-19.OptionalEmbeddedChecksuminResponseforExtendedFrames............................................1374

26-20.ChecksumCompareandSendforExtendedFrames............................................................1375

26-21.TXRXErrorDetector..................................................................................................1377

26-22.ClassicChecksumGenerationatTransmittingNode.............................................................1378

26-23.LIN2.0-CompliantChecksumGenerationatTransmittingNode................................................1378

26-24.IDReception,FilteringandValidation..............................................................................1380

26-25.LINMessageFrameShowingLINInterruptTimingandSequence............................................1382

26-26.WakeupSignalGeneration...........................................................................................1386

26-27.SCIGlobalControlRegister0(SCIGCR0)[offset=00]..........................................................1389

26-28.SCIGlobalControlRegister1(SCIGCR1)[offset=04h].........................................................1390

26-29.SCIGlobalControlRegister2(SCIGCR2)[offset=08h].........................................................1394

56

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

26-30.SCISetInterruptRegister(SCISETINT)[offset=0Ch]...........................................................1395

26-31.SCIClearInterruptRegister(SCICLEARINT)[offset=10h].....................................................1398

26-32.SCISetInterruptLevelRegister(SCISETINTLVL)[offset=14h]................................................1401

26-33.SCIClearInterruptLevelRegister(SCICLEARINTLVL)[offset=18h].........................................1404

26-34.SCIFlagsRegister(SCIFLR)[offset=1Ch]........................................................................1407

26-35.SCIInterruptVectorOffset0(SCIINTVECT0)[offset=20h].....................................................1414

26-36.SCIInterruptVectorOffset1(SCIINTVECT1)[offset=24h].....................................................1414

26-37.SCIFormatControlRegister(SCIFORMAT)[offset=28h].......................................................1415

26-38.BaudRateSelectionRegister(BRS)[offset=2Ch]...............................................................1416

26-39.ReceiverEmulationDataBuffer(SCIED)[offset=30h]...........................................................1417

26-40.ReceiverDataBuffer(SCIRD)[offset=34h].......................................................................1418

26-41.TransmitDataBufferRegister(SCITD)[offset=38h].............................................................1419

26-42.SCIPinI/OControlRegister0(SCIPIO0)[offset=3Ch].........................................................1419

26-43.SCIPinI/OControlRegister1(SCIPIO1)[offset=40h]..........................................................1420

26-44.SCIPinI/OControlRegister2(SCIPIO2)[offset=44h].........................................................1421

26-45.SCIPinI/OControlRegister3(SCIPIO3)[offset=48h]..........................................................1422

26-46.SCIPinI/OControlRegister4(SCIPIO4)[offset=4Ch].........................................................1423

26-47.SCIPinI/OControlRegister5(SCIPIO5)[offset=50h]..........................................................1424

26-48.SCIPinI/OControlRegister6(SCIPIO6)[offset=54h].........................................................1425

26-49.SCIPinI/OControlRegister7(SCIPIO7)[offset=58h]..........................................................1426

26-50.SCIPinI/OControlRegister8(SCIPIO8)[offset=5Ch].........................................................1426

26-51.LINCompareRegister(LINCOMPARE)[offset=60h]............................................................1427

26-52.LINReceiveBuffer0Register(LINRD0)[offset=64h]...........................................................1428

26-53.LINReceiveBuffer1Register(RD1)[offset=68h]...............................................................1428

26-54.LINMaskRegister(LINMASK)[offset=6Ch]......................................................................1429

26-55.LINIdentificationRegister(LINID)[offset=70h]...................................................................1430

26-56.LINTransmitBuffer0Register(LINTD0)[offset=74h]...........................................................1431

26-57.LINTransmitBuffer1Register(LINTD1)[offset=78h]...........................................................1431

26-58.MaximumBaudRateSelectionRegister(MBRS)[offset=7Ch]................................................1432

26-59.Input/OutputErrorEnableRegister(IODFTCTRL)[offset=90h]................................................1433

26-60.GPIOFunctionality....................................................................................................1435

27-1.DetailedSCIBlockDiagram..........................................................................................1439

27-2.TypicalSCIDataFrameFormats...................................................................................1440

27-3.AsynchronousCommunicationBitTiming..........................................................................1441

27-4.Idle-LineMultiprocessorCommunicationFormat..................................................................1443

27-5.Address-BitMultiprocessorCommunicationFormat..............................................................1444

27-6.GeneralInterruptScheme............................................................................................1445

27-7.InterruptGenerationforGivenFlags................................................................................1446

27-8.SCIGlobalControlRegister0(SCIGCR0)[offset=00]..........................................................1453

27-9.SCIGlobalControlRegister1(SCIGCR1)[offset=04h].........................................................1454

27-10.SCISetInterruptRegister(SCISETINT)[offset=0Ch]...........................................................1457

27-11.SCIClearInterruptRegister(SCICLEARINT)[offset=10h].....................................................1459

27-12.SCISetInterruptLevelRegister(SCISETINTLVL)[offset=14h]................................................1461

27-13.SCIClearInterruptLevelRegister(SCICLEARINTLVL)[offset=18h].........................................1462

27-14.SCIFlagsRegister(SCIFLR)[offset=1Ch]........................................................................1464

27-15.SCIInterruptVectorOffset0(SCIINTVECT0)[offset=20h].....................................................1468

27-16.SCIInterruptVectorOffset1(SCIINTVECT1)[offset=24h].....................................................1468

27-17.SCIFormatControlRegister(SCIFORMAT)[offset=28h].......................................................1469

27-18.BaudRateSelectionRegister(BRS)[offset=2Ch]...............................................................1470

57

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

27-19.ReceiverEmulationDataBuffer(SCIED)[offset=30h]...........................................................1471

27-20.ReceiverDataBuffer(SCIRD)[offset=34h].......................................................................1471

27-21.TransmitDataBufferRegister(SCITD)[offset=38h].............................................................1472

27-22.SCIPinI/OControlRegister0(SCIPIO0)[offset=3Ch].........................................................1472

27-23.SCIPinI/OControlRegister1(SCIPIO1)[offset=40h]..........................................................1473

27-24.SCIPinI/OControlRegister2(SCIPIO2)[offset=44h].........................................................1474

27-25.SCIPinI/OControlRegister3(SCIPIO3)[offset=48h]..........................................................1475

27-26.SCIPinI/OControlRegister4(SCIPIO4)[offset=4Ch].........................................................1476

27-27.SCIPinI/OControlRegister5(SCIPIO5)[offset=50h]..........................................................1477

27-28.SCIPinI/OControlRegister6(SCIPIO6)[offset=54h].........................................................1478

27-29.SCIPinI/OControlRegister7(SCIPIO7)[offset=58h]..........................................................1479

27-30.SCIPinI/OControlRegister8(SCIPIO8)[offset=5Ch].........................................................1479

27-31.Input/OutputErrorEnableRegister(IODFTCTRL)[offset=90h]................................................1480

27-32.GPIOFunctionality....................................................................................................1482

28-1.MultipleI2CModulesConnectionDiagram........................................................................1485

28-2.SimpleI2CBlockDiagram...........................................................................................1487

28-3.ClockingDiagramfortheI2CModule...............................................................................1488

28-4.BitTransferontheI2CBus..........................................................................................1489

28-5.I2CModuleSTARTandSTOPConditions.........................................................................1490

28-6.I2CModuleDataTransfer............................................................................................1490

28-7.I2CModule7-BitAddressingFormat...............................................................................1491

28-8.I2CModule10-bitAddressingFormat..............................................................................1491

28-9.I2CModule7-BitAddressingFormatwithRepeatedSTART....................................................1491

28-10.I2CModuleinFreeDataFormat....................................................................................1492

28-11.ArbitrationProcedureBetweenTwoMasterTransmitters........................................................1495

28-12.SynchronizationofTwoI2CClockGeneratorsDuringArbitration..............................................1496

28-13.I2COwnAddressManagerRegister(I2COAR)[Offset=00]...................................................1501

28-14.I2CInterruptMaskRegister(I2CIMR)[Offset=04h].............................................................1502

28-15.I2CStatusRegister(I2CSR)[Offset=08h]........................................................................1503

28-16.I2CClockDividerLowRegister(I2CCKL)[Offset=0Ch]........................................................1506

28-17.I2CClockControlHighRegister(I2CCKH)[Offset=10h].......................................................1506

28-18.I2CDataCountRegister(I2CCNT)[Offset=14h]................................................................1507

28-19.I2CDataReceiveRegister(I2CDRR)[Offset=18h].............................................................1507

28-20.I2CSlaveAddressRegister(I2CSAR)[Offset=1Ch]............................................................1508

28-21.I2CDataTransmitRegister(I2CDXR)[Offset=20h].............................................................1508

28-22.I2CModeRegister(I2CMDR)[Offset=24h]......................................................................1509

28-23.TypicalTimingDiagramofRepeatMode...........................................................................1511

28-24.I2CInterruptVectorRegister(I2CIVR)[Offset=28h]............................................................1512

28-25.I2CExtendedModeRegister(I2CEMDR)[Offset=2Ch]........................................................1513

28-26.I2CPrescaleRegister(I2CPSC)[Offset=30h]....................................................................1513

28-27.I2CPeripheralIDRegister1(I2CPID1)[Offset=34h]...........................................................1514

28-28.I2CPeripheralIDRegister2(I2CPID2)[Offset=38h]...........................................................1514

28-29.I2CDMAControlRegister(I2CDMACR)[Offset=3Ch].........................................................1515

28-30.I2CPinFunctionRegister(I2CPFNC)[Offset=48h].............................................................1515

28-31.I2CPinDirectionRegister(I2CPDIR)[Offset=4Ch].............................................................1516

28-32.I2CDataInputRegister(I2CDIN)[Offset=50h]..................................................................1516

28-33.I2CDataOutputRegister(I2CDOUT)[Offset0x54]..............................................................1517

28-34.I2CDataSetRegister(I2CDSET)[Offset=58h]..................................................................1517

28-35.I2CDataClearRegister(I2CDCLR)[Offset=5Ch]...............................................................1518

58

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

28-36.I2CPinOpenDrainRegister(I2CPDR)[Offset=60h]...........................................................1518

28-37.I2CPullDisableRegister(I2CPDIS)[Offset=64h]...............................................................1519

28-38.I2CPullSelectRegister(I2CPSEL)[Offset=68h]................................................................1519

28-39.I2CPinsSlewRateSelectRegister(I2CSRS)[Offset=6Ch]...................................................1520

28-40.DifferencebetweenNormalOperationandBackwardCompatibilityMode....................................1521

29-1.EMACandMDIOBlockDiagram.....................................................................................1524

29-2.EthernetConfiguration—MIIConnections...........................................................................1527

29-3.EthernetConfiguration—RMIIConnections.........................................................................1528

29-4.EthernetFrameFormat................................................................................................1529

29-5.BasicDescriptorFormat...............................................................................................1531

29-6.TypicalDescriptorLinkedList.........................................................................................1532

29-7.TransmitBufferDescriptorFormat...................................................................................1535

29-8.ReceiveBufferDescriptorFormat....................................................................................1538

29-9.EMACControlModuleBlockDiagram...............................................................................1542

29-10.MDIOModuleBlockDiagram.........................................................................................1544

29-11.EMACModuleBlockDiagram........................................................................................1548

29-12.EMACControlModuleRevisionIDRegister(REVID).............................................................1570

29-13.EMACControlModuleSoftwareResetRegister(SOFTRESET)................................................1570

29-14.EMACControlModuleInterruptControlRegister(INTCONTROL)..............................................1571

29-15.EMACControlModuleReceiveThresholdInterruptEnableRegister(C0RXTHRESHEN)..................1572

29-16.EMACControlModuleReceiveInterruptEnableRegister(C0RXEN)..........................................1573

29-17.EMACControlModuleTransmitInterruptEnableRegister(C0TXEN)..........................................1574

29-18.EMACControlModuleMiscellaneousInterruptEnableRegister(C0MISCEN)................................1575

29-19.EMACControlModuleReceiveThresholdInterruptStatusRegister(C0RXTHRESHSTAT)................1576

29-20.EMACControlModuleReceiveInterruptStatusRegister(C0RXSTAT)........................................1577

29-21.EMACControlModuleTransmitInterruptStatusRegister(C0TXSTAT).......................................1578

29-22.EMACControlModuleMiscellaneousInterruptStatusRegister(C0MISCSTAT).............................1579

29-23.EMACControlModuleReceiveInterruptsPerMillisecondRegister(C0RXIMAX)............................1580

29-24.EMACControlModuleTransmitInterruptsPerMillisecondRegister(C0TXIMAX)...........................1581

29-25.MDIORevisionIDRegister(REVID).................................................................................1582

29-26.MDIOControlRegister(CONTROL).................................................................................1583

29-27.PHYAcknowledgeStatusRegister(ALIVE)........................................................................1584

29-28.PHYLinkStatusRegister(LINK).....................................................................................1584

29-29.MDIOLinkStatusChangeInterrupt(Unmasked)Register(LINKINTRAW)....................................1585

29-30.MDIOLinkStatusChangeInterrupt(Masked)Register(LINKINTMASKED)..................................1586

29-31.MDIOUserCommandCompleteInterrupt(Unmasked)Register(USERINTRAW)...........................1587

29-32.MDIOUserCommandCompleteInterrupt(Masked)Register(USERINTMASKED).........................1588

29-33.MDIOUserCommandCompleteInterruptMaskSetRegister(USERINTMASKSET)........................1589

29-34.MDIOUserCommandCompleteInterruptMaskClearRegister(USERINTMASKCLEAR).................1590

29-35.MDIOUserAccessRegister0(USERACCESS0).................................................................1591

29-36.MDIOUserPHYSelectRegister0(USERPHYSEL0)............................................................1592

29-37.MDIOUserAccessRegister1(USERACCESS1).................................................................1593

29-38.MDIOUserPHYSelectRegister1(USERPHYSEL1)............................................................1594

29-39.TransmitRevisionIDRegister(TXREVID)..........................................................................1598

29-40.TransmitControlRegister(TXCONTROL)..........................................................................1598

29-41.TransmitTeardownRegister(TXTEARDOWN)....................................................................1599

29-42.ReceiveRevisionIDRegister(RXREVID)..........................................................................1599

29-43.ReceiveControlRegister(RXCONTROL)..........................................................................1600

29-44.ReceiveTeardownRegister(RXTEARDOWN)....................................................................1600

59

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

29-45.TransmitInterruptStatus(Unmasked)Register(TXINTSTATRAW)............................................1601

29-46.TransmitInterruptStatus(Masked)Register(TXINTSTATMASKED)...........................................1602

29-47.TransmitInterruptMaskSetRegister(TXINTMASKSET)........................................................1603

29-48.TransmitInterruptMaskClearRegister(TXINTMASKCLEAR)..................................................1604

29-49.MACInputVectorRegister(MACINVECTOR).....................................................................1605

29-50.MACEndOfInterruptVectorRegister(MACEOIVECTOR)......................................................1606

29-51.ReceiveInterruptStatus(Unmasked)Register(RXINTSTATRAW).............................................1607

29-52.ReceiveInterruptStatus(Masked)Register(RXINTSTATMASKED)...........................................1608

29-53.ReceiveInterruptMaskSetRegister(RXINTMASKSET).........................................................1609

29-54.ReceiveInterruptMaskClearRegister(RXINTMASKCLEAR)...................................................1610

29-55.MACInterruptStatus(Unmasked)Register(MACINTSTATRAW)..............................................1611

29-56.MACInterruptStatus(Masked)Register(MACINTSTATMASKED).............................................1611

29-57.MACInterruptMaskSetRegister(MACINTMASKSET)..........................................................1612

29-58.MACInterruptMaskClearRegister(MACINTMASKCLEAR)....................................................1612

29-59.ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)....................1613

29-60.ReceiveUnicastEnableSetRegister(RXUNICASTSET)........................................................1615

29-61.ReceiveUnicastClearRegister(RXUNICASTCLEAR)...........................................................1616

29-62.ReceiveMaximumLengthRegister(RXMAXLEN)................................................................1616

29-63.ReceiveBufferOffsetRegister(RXBUFFEROFFSET)............................................................1617

29-64.ReceiveFilterLowPriorityFrameThresholdRegister(RXFILTERLOWTHRESH)...........................1617

29-65.ReceiveChannelnFlowControlThresholdRegister(RXnFLOWTHRESH)...................................1618

29-66.ReceiveChannelnFreeBufferCountRegister(RXnFREEBUFFER)..........................................1618

29-67.MACControlRegister(MACCONTROL)............................................................................1619

29-68.MACStatusRegister(MACSTATUS)...............................................................................1621

29-69.EmulationControlRegister(EMCONTROL)........................................................................1623

29-70.FIFOControlRegister(FIFOCONTROL)............................................................................1623

29-71.MACConfigurationRegister(MACCONFIG).......................................................................1624

29-72.SoftResetRegister(SOFTRESET)..................................................................................1624

29-73.MACSourceAddressLowBytesRegister(MACSRCADDRLO)................................................1625

29-74.MACSourceAddressHighBytesRegister(MACSRCADDRHI)................................................1625

29-75.MACHashAddressRegister1(MACHASH1).....................................................................1626

29-76.MACHashAddressRegister2(MACHASH2).....................................................................1626

29-77.BackOffRandomNumberGeneratorTestRegister(BOFFTEST)..............................................1627

29-78.TransmitPacingAlgorithmTestRegister(TPACETEST).........................................................1627

29-79.ReceivePauseTimerRegister(RXPAUSE)........................................................................1628

29-80.TransmitPauseTimerRegister(TXPAUSE).......................................................................1628

29-81.MACAddressLowBytesRegister(MACADDRLO)...............................................................1629

29-82.MACAddressHighBytesRegister(MACADDRHI)................................................................1630

29-83.MACIndexRegister(MACINDEX)...................................................................................1630

29-84.TransmitChannelnDMAHeadDescriptorPointerRegister(TXnHDP)........................................1631

29-85.ReceiveChannelnDMAHeadDescriptorPointerRegister(RXnHDP)........................................1631

29-86.TransmitChannelnCompletionPointerRegister(TXnCP)......................................................1632

29-87.ReceiveChannelnCompletionPointerRegister(RXnCP).......................................................1632

29-88.StatisticsRegister......................................................................................................1633

30-1.DMMBlockDiagram...................................................................................................1643

30-2.TraceModePacketFormat...........................................................................................1645

30-3.DirectDataModePacketFormat....................................................................................1645

30-4.PacketSyncSignalExample.........................................................................................1647

30-5.ExampleSinglePacketTransmission...............................................................................1647

60

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

30-6.InterruptStructure......................................................................................................1648

30-7.DMMGlobalControlRegister(DMMGLBCTRL)[offset=00h]..................................................1650

30-8.DMMInterruptSetRegister(DMMINTSET)[offset=04h]........................................................1652

30-9.DMMInterruptClearRegister(DMMINTCLR)[offset=08h].....................................................1656

30-10.DMMInterruptLevelRegister(DMMINTLVL)[offset=0Ch].....................................................1661

30-11.DMMInterruptFlagRegister(DMMINTFLG)[offset=10h].......................................................1663

30-12.DMMInterruptOffset1Register(DMMOFF1)[offset=14h].....................................................1667

30-13.DMMInterruptOffset2Register(DMMOFF2)[offset=18h].....................................................1668

30-14.DMMDirectDataModeDestinationRegister(DMMDDMDEST)[offset=1Ch]...............................1669

30-15.DMMDirectDataModeBlocksizeRegister(DMMDDMBL)[offset=20h].....................................1669

30-16.DMMDirectDataModePointerRegister(DMMDDMPT)[offset=24h]........................................1670

30-17.DMMDirectDataModeInterruptPointerRegister(DMMINTPT)[offset=28h]...............................1670

30-18.DMMDestinationxRegion1(DMMDESTxREG1)[offset=2Ch,3Ch,4Ch,5Ch]............................1671

30-19.DMMDestinationxBlocksize1(DMMDESTxBL1)[offset=30h,40h,50h,60h].............................1672

30-20.DMMDestinationxRegion2(DMMDESTxREG2)[offset=34h,44h,54h,64h]..............................1673

30-21.DMMDestinationxBlocksize2(DMMDESTxBL2)[offset=38h,48h,58h,68h].............................1674

30-22.DMMPinControl0(DMMPC0)[offset=6Ch]......................................................................1675

30-23.DMMPinControl1(DMMPC1)[offset=70h]......................................................................1676

30-24.DMMPinControl2(DMMPC2)[offset=74h]......................................................................1678

30-25.DMMPinControl3(DMMPC3)[offset=78h]......................................................................1679

30-26.DMMPinControl4(DMMPC4)[offset=7Ch]......................................................................1680

30-27.DMMPinControl5(DMMPC5)[offset=80h]......................................................................1682

30-28.DMMPinControl6(DMMPC6)[offset=84h]......................................................................1683

30-29.DMMPinControl7(DMMPC7)[offset=88h]......................................................................1685

30-30.DMMPinControl8(DMMPC8)[offset=8Ch]......................................................................1686

31-1.BlockDiagramRAMTracePortModule............................................................................1689

31-2.PacketFormatTraceModeforRAMLocations....................................................................1690

31-3.PacketFormatTraceModeforPeripheralLocations..............................................................1690

31-4.PacketFormatinDirectDataMode..................................................................................1692

31-5.ExampleforTraceRegionSetup.....................................................................................1693

31-6.FIFOOverflowHandling...............................................................................................1694

31-7.RTPPacketTransferwithSyncSignal..............................................................................1695

31-8.PacketFormatinTraceMode........................................................................................1695

31-9.RTPGlobalControlRegister(RTPGLBCTRL)[offset=00h].....................................................1697

31-10.RTPTraceEnableRegister(RTPTRENA)[offset=04h].........................................................1700

31-11.RTPGlobalStatusRegister(RTPGSR)[offset=08h]............................................................1701

31-12.RTPRAM1TraceRegion[1:2]Register(RTPRAM1REG[1:2])[offset=0Ch,10h]..........................1703

31-13.RTPRAM2TraceRegion[1:2]Register(RTPRAM2REG[1:2])[offset=14h,18h]..........................1704

31-14.RTPPeripheralTraceRegion[1:2]Register(RTPPERREG[1:2])[offset=24h,28h]........................1705

31-15.RTPDirectDataModeWriteRegister(RTPDDMW)[offset=2Ch].............................................1706

31-16.RTPPinControl0Register(RTPPC0)[offset=34h].............................................................1707

31-17.RTPPinControl1Register(RTPPC1)[offset=38h].............................................................1708

31-18.RTPPinControl2Register(RTPPC2)[offset=3Ch].............................................................1709

31-19.RTPPinControl3Register(RTPPC3)[offset=40h].............................................................1710

31-20.RTPPinControl4Register(RTPPC4)[offset=44h].............................................................1711

31-21.RTPPinControl5Register(RTPPC5)[offset=48h].............................................................1712

31-22.RTPPinControl6Register(RTPPC6)[offset=4Ch].............................................................1713

31-23.RTPPinControl7Register(RTPPC7)[offset=50h].............................................................1715

31-24.RTPPinControl8Register(RTPPC8)[offset=54h].............................................................1716

61

SPNU499B–November2012–RevisedAugust2013

ListofFigures

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

32-1.eFuseSelfTestFlowChart...........................................................................................1720

32-2.EFCBoundaryControlRegister(EFCBOUND)[offset=1Ch]...................................................1721

32-3.EFCPinsRegister(EFCPINS)[offset=2Ch].....................................................................1723

32-4.EFCErrorStatusRegister(EFCERRSTAT)[offset=3Ch].......................................................1724

32-5.EFCSelfTestCyclesRegister(EFCSTCY)[offset=48h].......................................................1724

32-6.EFCSelfTestCyclesRegister(EFCSTSIG)[offset=4Ch]......................................................1725

62

ListofFigures

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

ListofTables

2-1.DefinitionofTerms.......................................................................................................98

2-2.BusMaster/SlaveAccessPrivileges................................................................................100

2-3.ModuleRegisters/MemoriesMemoryMap.........................................................................102

2-4.FlashMemoryBanksandSectors....................................................................................106

2-5.PBISTMemoryGrouping...............................................................................................108

2-6.PBISTAlgorithmMapping.............................................................................................109

2-7.MemoryInitializationSelectMapping.................................................................................112

2-8.CausesofResets.......................................................................................................113

2-9.ClockSources............................................................................................................116

2-10.ClockDomains...........................................................................................................117

2-11.TypicalLow-PowerModes.............................................................................................120

2-12.ClockTestModeOptions..............................................................................................121

2-13.DCC1Counter0ClockInputs.........................................................................................123

2-14.DCC1Counter1Clock/SignalInputs...............................................................................123

2-15.DCC2Counter0ClockInputs.........................................................................................123

2-16.DCC2Counter1Clock/SignalInputs...............................................................................123

2-17.PrimarySystemControlRegisters.....................................................................................124

2-18.SYSPinControlRegister1(SYSPC1)FieldDescriptions.........................................................126

2-19.SYSPinControlRegister2(SYSPC2)FieldDescriptions.........................................................126

2-20.SYSPinControlRegister3(SYSPC3)FieldDescriptions.........................................................127

2-21.SYSPinControlRegister4(SYSPC4)FieldDescriptions.........................................................127

2-22.SYSPinControlRegister5(SYSPC5)FieldDescriptions.........................................................128

2-23.SYSPinControlRegister6(SYSPC6)FieldDescriptions.........................................................128

2-24.SYSPinControlRegister7(SYSPC7)FieldDescriptions.........................................................129

2-25.SYSPinControlRegister8(SYSPC8)FieldDescriptions.........................................................129

2-26.SYSPinControlRegister9(SYSPC9)FieldDescriptions.........................................................130

2-27.ClockSourceDisableRegister(CSDIS)FieldDescriptions........................................................131

2-28.ClockSourcesTable....................................................................................................131

2-29.ClockSourceDisableSetRegister(CSDISSET)FieldDescriptions.............................................132

2-30.ClockSourceDisableClearRegister(CSDISCLR)FieldDescriptions...........................................133

2-31.ClockDomainDisableRegister(CDDIS)FieldDescriptions.......................................................134

2-32.ClockDomainDisableSetRegister(CDDISSET)FieldDescriptions.............................................135

2-33.ClockDomainDisableClearRegister(CDDISCLR)FieldDescriptions..........................................136

2-34.GCLK,HCLK,VCLK,andVCLK2SourceRegister(GHVSRC)FieldDescriptions.............................138

2-35.PeripheralAsynchronousClockSourceRegister(VCLKASRC)FieldDescriptions............................139

2-36.RTIClockSourceRegister(RCLKSRC)FieldDescriptions........................................................140

2-37.ClockSourceValidRegister(CSVSTAT)FieldDescriptions......................................................141

2-38.MemorySelf-TestGlobalControlRegister(MSTGCR)FieldDescriptions.......................................142

2-39.MemoryHardwareInitializationGlobalControlRegister(MINITGCR)FieldDescriptions.....................143

2-40.MBISTController/MemoryInitializationEnableRegister(MSINENA)FieldDescriptions......................144

2-41.MSTCGlobalStatusRegister(MSTCGSTAT)FieldDescriptions................................................145

2-42.MemoryHardwareInitializationStatusRegister(MINISTAT)FieldDescriptions...............................146

2-43.PLLControlRegister1(PLLCTL1)FieldDescriptions..............................................................147

2-44.PLLControlRegister2(PLLCTL2)FieldDescriptions..............................................................148

2-45.SYSPinControlRegister10(SYSPC10)FieldDescriptions......................................................149

2-46.DieIdentificationRegister,LowerWord(DIEIDL)FieldDescriptions.............................................150

2-47.DieIdentificationRegister,UpperWord(DIEIDH)FieldDescriptions............................................150

63

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

2-48.LPO/ClockMonitorControlRegister(LPOMONCTL)FieldDescriptions.........................................151

2-49.ClockTestRegister(CLKTEST)FieldDescriptions.................................................................154

2-50.DFTControlRegister(DFTCTRLREG)FieldDescriptions.........................................................156

2-51.DFTControlRegister2(DFTCTRLREG2)FieldDescriptions....................................................157

2-52.GeneralPurposeRegister(GPREG1)FieldDescriptions..........................................................158

2-53.ImpreciseFaultStatusRegister(IMPFASTS)FieldDescriptions.................................................160

2-54.ImpreciseFaultWriteAddressRegister(IMPFTADD)FieldDescriptions........................................161

2-55.SystemSoftwareInterruptRequest1Register(SSIR1)FieldDescriptions.....................................162

2-56.SystemSoftwareInterruptRequest2Register(SSIR2)FieldDescriptions.....................................162

2-57.SystemSoftwareInterruptRequest3Register(SSIR3)FieldDescriptions.....................................163

2-58.SystemSoftwareInterruptRequest4Register(SSIR4)FieldDescriptions.....................................163

2-59.RAMControlRegister(RAMGCR)FieldDescriptions..............................................................164

2-60.BusMatrixModuleControlRegister1(BMMCR)FieldDescriptions.............................................165

2-61.CPUResetControlRegister(CPURSTGCR)FieldDescriptions.................................................165

2-62.ClockControlRegister(CLKCNTRL)FieldDescriptions...........................................................166

2-63.ECPControlRegister(ECPCNTL)FieldDescriptions..............................................................167

2-64.DEVParityControlRegister1(DEVCR1)FieldDescriptions......................................................168

2-65.SystemExceptionControlRegister(SYSECR)FieldDescriptions...............................................168

2-66.SystemExceptionStatusRegister(SYSESR)FieldDescriptions.................................................169

2-67.SystemTestAbortStatusRegister(SYSTASR)FieldDescriptions..............................................170

2-68.GlobalStatusRegister(GLBSTAT)FieldDescriptions.............................................................171

2-69.DeviceIdentificationRegister(DEVID)FieldDescriptions.........................................................172

2-70.SoftwareInterruptVectorRegister(SSIVEC)FieldDescriptions..................................................173

2-71.SystemSoftwareInterruptFlagRegister(SSIF)FieldDescriptions..............................................174

2-72.SecondarySystemControlRegistersSummary.....................................................................175

2-73.PLLControlRegister3(PLLCTL3)FieldDescriptions.............................................................176

2-74.CPULogicBISTClockPrescaler(STCLKDIV)FieldDescriptions................................................177

2-75.Clock2ControlRegister(CLK2CNTRL)FieldDescriptions.......................................................177

2-76.PeripheralAsynchronousClockConfiguration1Register(VCLKACON1)FieldDescriptions................178

2-77.ClockSlipRegister(CLKSLIP)FieldDescriptions..............................................................179

2-78.EFUSEControllerControlRegister(EFC_CTLREG)FieldDescriptions....................................180

2-79.DieIdentificationRegister,LowerWord(DIEIDL_REG0)FieldDescriptions....................................180

2-80.DieIdentificationRegister,UpperWord(DIEIDH_REG1)FieldDescriptions...................................181

2-81.DieIdentificationRegister,LowerWord(DIEIDL_REG2)FieldDescriptions....................................181

2-82.DieIdentificationRegister,UpperWord(DIEIDH_REG3)FieldDescriptions...................................181

2-83.PeripheralCentralResourceControlRegistersSummary.........................................................182

2-84.PeripheralMemoryProtectionSetRegister0(PMPROTSET0)FieldDescriptions............................183

2-85.PeripheralMemoryProtectionSetRegister1(PMPROTSET1)FieldDescriptions............................183

2-86.PeripheralMemoryProtectionClearRegister0(PMPROTCLR0)FieldDescriptions..........................184

2-87.PeripheralMemoryProtectionClearRegister1(PMPROTCLR1)FieldDescriptions..........................184

2-88.PeripheralProtectionSetRegister0(PPROTSET0)FieldDescriptions.........................................185

2-89.PeripheralProtectionSetRegister1(PPROTSET1)FieldDescriptions.........................................186

2-90.PeripheralProtectionSetRegister2(PPROTSET2)FieldDescriptions.........................................186

2-91.PeripheralProtectionSetRegister3(PPROTSET3)FieldDescriptions.........................................187

2-92.PeripheralProtectionClearRegister0(PPROTCLR0)FieldDescriptions.......................................187

2-93.PeripheralProtectionClearRegister1(PPROTCLR1)FieldDescriptions.......................................188

2-94.PeripheralProtectionClearRegister2(PPROTCLR2)FieldDescriptions.......................................188

2-95.PeripheralProtectionClearRegister3(PPROTCLR3)FieldDescriptions.......................................189

2-96.PeripheralMemoryPower-DownSetRegister0(PCSPWRDWNSET0)FieldDescriptions..................189

64

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

2-97.PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNSET1)FieldDescriptions..................190

2-98.PeripheralMemoryPower-DownClearRegister0(PCSPWRDWNCLR0)FieldDescriptions................190

2-99.PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNCLR1)FieldDescriptions..................191

2-100.PeripheralPower-DownSetRegister0(PSPWRDWNSET0)FieldDescriptions...............................192

2-101.PeripheralPower-DownSetRegister1(PSPWRDWNSET1)FieldDescriptions...............................193

2-102.PeripheralPower-DownSetRegister2(PSPWRDWNSET2)FieldDescriptions...............................193

2-103.PeripheralPower-DownSetRegister3(PSPWRDWNSET3)FieldDescriptions...............................194

2-104.PeripheralPower-DownClearRegister0(PSPWRDWNCLR0)FieldDescriptions............................194

2-105.PeripheralPower-DownClearRegister1(PSPWRDWNCLR1)FieldDescriptions............................195

2-106.PeripheralPower-DownClearRegister2(PSPWRDWNCLR2)FieldDescriptions............................195

2-107.PeripheralPower-DownClearRegister3(PSPWRDWNCLR3)FieldDescriptions............................196

3-1.PMMRegisterSummary................................................................................................205

3-2.LogicPowerDomainControlRegister(LOGICPDPWRCTRL0)FieldDescriptions............................206

3-3.MemoryPowerDomainControlRegister0(MEMPDPWRCTRL0)FieldDescriptions........................207

3-4.PowerDomainClockDisableRegister(PDCLKDISREG)FieldDescriptions..................................208

3-5.PowerDomainClockDisableSetRegister(PDCLKDISSETREG)FieldDescriptions........................209

3-6.PowerDomainClockDisableClearRegister(PDCLKDISCLRREG)FieldDescriptions......................210

3-7.LogicPowerDomainPD2PowerStatusRegister(LOGICPDPWRSTAT0)FieldDescriptions..............211

3-8.LogicPowerDomainPD3PowerStatusRegister(LOGICPDPWRSTAT1)FieldDescriptions..............212

3-9.LogicPowerDomainPD4PowerStatusRegister(LOGICPDPWRSTAT2)FieldDescriptions..............213

3-10.LogicPowerDomainPD5PowerStatusRegister(LOGICPDPWRSTAT3)FieldDescriptions..............214

3-11.MemoryPowerDomainRAM_PD1PowerStatusRegister(MEMPDPWRSTAT0)FieldDescriptions.....215

3-12.MemoryPowerDomainRAM_PD2PowerStatusRegister(MEMPDPWRSTAT1)FieldDescriptions.....216

3-13.MemoryPowerDomainRAM_PD3PowerStatusRegister(MEMPDPWRSTAT2)FieldDescriptions.....217

3-14.GlobalControlRegister1(GLOBALCTRL1)FieldDescriptions..................................................218

3-15.GlobalStatusRegister(GLOBALSTAT)FieldDescriptions.......................................................219

3-16.PSCONDiagnosticCompareKeyRegister(PRCKEYREG)FieldDescriptions................................219

3-17.LogicPDPSCONDiagnosticCompareStatusRegister1(LPDDCSTAT1)FieldDescriptions...............220

3-18.LogicPDPSCONDiagnosticCompareStatusRegister2(LPDDCSTAT2)FieldDescriptions...............221

3-19.MemoryPDPSCONDiagnosticCompareStatusRegister1(MPDDCSTAT1)FieldDescriptions..........222

3-20.MemoryPDPSCONDiagnosticCompareStatusRegister2(MPDDCSTAT2)FieldDescriptions..........223

3-21.IsolationDiagnosticStatusRegister(ISODIAGSTAT)FieldDescriptions.......................................224

4-1.InputMultiplexingon144QFPParts..................................................................................227

4-2.InputMultiplexingon337BGAParts..................................................................................228

4-3.IOMMRegisterSummary...............................................................................................231

4-4.RevisionRegisterFieldDescriptions..................................................................................231

4-5.DeviceEndiannessRegisterFieldDescriptions....................................................................232

4-6.KickerRegister0FieldDescriptions..................................................................................233

4-7.KickerRegister1FieldDescriptions..................................................................................233

4-8.ErrorRawStatus/SetRegisterFieldDescriptions.................................................................234

4-9.ErrorSignalingEnabledStatus/ClearRegisterFieldDescriptions..............................................235

4-10.ErrorEnableRegisterFieldDescriptions.............................................................................236

4-11.InterruptEnableClearRegisterFieldDescriptions.................................................................237

4-12.FaultAddressRegisterFieldDescriptions...........................................................................237

4-13.FaultStatusRegisterFieldDescriptions.............................................................................238

4-14.FAULT_CLEAR_REG:FaultClearRegisterFieldDescriptions..................................................239

4-15.PinMultiplexingControlRegistersFieldDescriptions..............................................................239

4-16.MultiplexingandControl................................................................................................240

5-1.ECCEncodingforBE32Devices......................................................................................249

65

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

5-2.SyndromeTable,DecodetoBitinError..............................................................................250

5-3.AlternateSyndromeTable..............................................................................................251

5-4.TIOTPBank0SectorInformationFieldDescriptions..............................................................253

5-5.TIOTPSectorInformationAddress...................................................................................254

5-6.TIOTPBank0PackageandMemorySizeInformationFieldDescriptions......................................254

5-7.TIOTPBank0LPOTrimandMaxHCLKInformationFieldDescriptions.......................................255

5-8.TIOTPBank0SectorInformationFieldDescriptions..............................................................255

5-9.DIAGMODEEncoding...................................................................................................257

5-10.Bus1DiagnosticModeSummary......................................................................................260

5-11.Bus2andECCDiagnosticModeSummary..........................................................................260

5-12.PortSignalsDiagnosticModeSummary..............................................................................261

5-13.FlashControlRegisters.................................................................................................262

5-14.FlashOptionControlRegister(FRDCNTL)FieldDescriptions....................................................263

5-15.FlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1)FieldDescriptions................264

5-16.FlashErrorCorrectionControlandCorrectionRegister2(FEDACCTRL2)FieldDescriptions...............266

5-17.FlashCorrectableErrorCountRegister(FCOR_ERR_CNT)FieldDescriptions................................266

5-18.FlashCorrectableErrorAddressRegister(FCOR_ERR_ADD)FieldDescriptions.............................267

5-19.FlashCorrectableErrorPositionRegister(FCOR_ERR_POS)FieldDescriptions.............................268

5-20.FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)FieldDescriptions.................269

5-21.FlashUn-CorrectableErrorAddressRegister(FUNC_ERR_ADD)FieldDescriptions.........................271

5-22.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS)FieldDescriptions............272

5-23.PrimaryAddressTagRegister(FPRIM_ADD)_TAGFieldDescriptions..........................................273

5-24.DuplicateAddressTagRegister(FDUP_ADD)_TAGFieldDescriptions.........................................273

5-25.FlashBankProtectionRegister(FBPROT)FieldDescriptions....................................................274

5-26.FlashBankSectorEnableRegister(FBSE)FieldDescriptions...................................................274

5-27.FlashBankBusyRegister(FBBUSY)FieldDescriptions..........................................................275

5-28.FlashBankAccessControlRegister(FBAC)FieldDescriptions.................................................276

5-29.FlashBankFallbackPowerRegister(FBFALLBACK)FieldDescriptions........................................277

5-30.FlashPumpAccessControlRegister1(FPAC1)FieldDescriptions.............................................278

5-31.FlashPumpAccessControlRegister1(FPAC1)FieldDescriptions.............................................279

5-32.FlashPumpAccessControlRegister2(FPAC2)FieldDescriptions.............................................280

5-33.FlashModuleAccessControlRegister(FMAC)FieldDescriptions...............................................280

5-34.FlashModuleStatusRegister(FMSTAT)FieldDescriptions.....................................................281

5-35.EEPROMEmulationDataMSWRegister(FEMU_DMSW)FieldDescriptions..................................283

5-36.EEPROMEmulationDataLSWRegister(FEMU_DLSW)FieldDescriptions...................................283

5-37.EEPROMEmulationECCRegister(FEMU_ECC)FieldDescriptions............................................284

5-38.EEPROMEmulationAddressRegister(FEMU_ADDR)FieldDescriptions.....................................285

5-39.DiagnosticControlRegister(FDIAGCTRL)FieldDescriptions....................................................286

5-40.UncorrectedRawDataHighRegister(FRAW_DATAH)FieldDescriptions.....................................288

5-41.UncorrectedRawDataLowRegister(FRAW_DATAL)FieldDescriptions......................................289

5-42.UncorrectedRawECCRegister(FRAW_ECC)FieldDescriptions...............................................290

5-43.ParityOverrideRegister(FPAR_OVR)FieldDescriptions.........................................................291

5-44.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS2)FieldDescriptions..........292

5-45.FSMRegisterWriteEnable(FSM_WR_ENA)FieldDescriptions................................................293

5-46.FSMRegisterWriteEnable(FSM_WR_ENA)FieldDescriptions................................................293

5-47.EPROMEmulationConfigurationRegister(EEPROM_CONFIG)FieldDescriptions..........................294

5-48.EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)FieldDescriptions..295

5-49.EEPROMEmulationErrorCorrectionControlRegister2(EE_CTRL2)FieldDescriptions....................297

5-50.EEPROMEmulationCorrectableErrorCountRegister(EE_COR_ERR_CNT)FieldDescriptions..........297

66

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

5-51.EEPROMEmulationCorrectableErrorAddressRegister(EE_COR_ERR_ADD)FieldDescriptions.......298

5-52.EEPROMEmulationCorrectableErrorPositionRegister(EE_COR_ERR_POS)FieldDescriptions........299

5-53.EEPROMEmulationErrorStatusRegister(EE_STATUS)FieldDescriptions..................................300

5-54.EEPROMEmulationUn-CorrectableErrorAddressRegister(EE_UNC_ERR_ADD)FieldDescriptions...301

5-55.FlashBankConfigurationRegister(FCFG_BANK)FieldDescriptions...........................................302

6-1.TCRAMModuleControlandStatusRegisterMap..................................................................308

6-2.TCRAMModuleControlRegister(RAMCTRL)FieldDescriptions................................................309

6-3.TCRAMModuleSingle-BitErrorCorrectionThresholdRegister(RAMTHRESHOLD)FieldDescriptions...310

6-4.TCRAMModuleSingle-BitErrorOccurrencesCounterRegister(RAMOCCUR)FieldDescriptions.........311

6-5.TCRAMModuleInterruptControlRegister(RAMINTCTRL)FieldDescriptions.................................311

6-6.TCRAMModuleErrorStatusRegister(RAMERRSTATUS)FieldDescriptions.................................312

6-7.TCRAMModuleSingle-BitErrorAddressRegister(RAMSERRADDR)FieldDescriptions...................313

6-8.TCRAMModuleUncorrectableErrorAddressRegister(RAMUERRADDR)FieldDescriptions..............314

6-9.TCRAMModuleTestModeControlRegister(RAMTEST)FieldDescriptions..................................315

6-10.TCRAMModuleTestModeVectorRegister(RAMADDRDEVECT)FieldDescriptions........................316

6-11.TCRAMModuleParityErrorAddressRegister(RAMPERRADDR)FieldDescriptions........................316

7-1.PBISTRegisters.........................................................................................................324

7-2.RAMConfigurationRegister(RAMT)FieldDescriptions...........................................................325

7-3.DataloggerRegister(DLR)FieldDescriptions.......................................................................326

7-4.PBISTActivate/ROMClockEnableRegister(PACT)FieldDescriptions........................................327

7-5.PBISTIDRegisterFieldDescriptions.................................................................................328

7-6.OverrideRegister(OVER)FieldDescriptions........................................................................328

7-7.FailStatusFailRegister0(FSRF0)FieldDescriptions.............................................................329

7-8.FailStatusCount0Register(FSRC0)FieldDescriptions..........................................................330

7-9.FailStatusCountRegister1(FSRC1)FieldDescriptions..........................................................330

7-10.FailStatusAddress0Register(FSRA0)FieldDescriptions.......................................................331

7-11.FailStatusAddress1Register(FSRA1)FieldDescriptions.......................................................331

7-12.FailStatusDataRegister0(FSRDL0)FieldDescriptions..........................................................332

7-13.FailStatusDataRegister1(FSRDL1)FieldDescriptions..........................................................332

7-14.ROMMaskRegister(ROM)FieldDescriptions......................................................................333

7-15.AlgorithmMaskRegister(ALGO)FieldDescriptions................................................................333

7-16.RAMInfoMaskLowerRegister(RINFOL)FieldDescriptions.....................................................334

7-17.RAMInfoMaskUpperRegister(RINFOU)FieldDescriptions.....................................................335

8-1.STCTestCoverageandDuration....................................................................................343

8-2.TypicalSTCExecutionTimes.........................................................................................343

8-3.STCControlRegisters..................................................................................................344

8-4.STCGlobalControlRegister0(STCGCR0)FieldDescriptions...................................................345

8-5.STCGlobalControlRegister1(STCGCR1)FieldDescriptions...................................................345

8-6.Self-TestRunTimeoutCounterPreloadRegister(STCTPR)......................................................346

8-7.STCCurrentROMAddressRegister(STC_CADDR)FieldDescriptions........................................346

8-8.STCCurrentIntervalCountRegister(STCCICR)FieldDescriptions.............................................347

8-9.Self-TestGlobalStatusRegister(STCGSTAT)FieldDescriptions...............................................347

8-10.Self-TestFailStatusRegister(STCFSTAT)FieldDescriptions...................................................348

8-11.CPU1CurrentMISRRegister(CPU1_CURMISR[3:0])FieldDescriptions.......................................349

8-12.CPU2CurrentMISRRegister(CPU2_CURMISR[3:0])FieldDescriptions.......................................350

8-13.SignatureCompareSelf-CheckRegsiter(STCSCSCR)FieldDescriptions.....................................351

9-1.CompareMatchTestSequence......................................................................................356

9-2.CompareMismatchTestSequence..................................................................................357

9-3.ModuleRegisters........................................................................................................358

67

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

9-4.CCM-R4FStatusRegister(CCMSR)FieldDescriptions..........................................................359

9-5.CCM-R4FKeyRegister(CCMKEYR)FieldDescriptions...........................................................360

10-1.ValidFrequencyRangesforPLL.....................................................................................369

10-2.PLLValueEncoding....................................................................................................370

10-3.StateMachineTimings..................................................................................................373

10-4.PLLModuleRegisters...................................................................................................377

10-5.LPOCLKDETModuleRegisters........................................................................................377

10-6.SSWPLLBISTControlRegister1(SSWPLL1)FieldDescriptions...............................................378

10-7.SSWPLLBISTControlRegister2(SSWPLL2)FieldDescriptions...............................................379

10-8.SSWPLLBISTControlRegister3(SSWPLL3)FieldDescriptions...............................................380

11-1.DCCRegisters...........................................................................................................393

11-2.DCCControlRegister(DCCGCTRL)FieldDescriptions...........................................................394

11-3.DCCRevisionIdRegister(DCCREV)FieldDescriptions.........................................................395

11-4.DCCCounter0SeedRegister(DCCCNT0SEED)FieldDescriptions............................................395

11-5.DCCValid0SeedRegister(DCCVALID0SEED)FieldDescriptions.............................................396

11-6.DCCCounter1SeedRegister(DCCCNT0SEED)FieldDescriptions............................................396

11-7.DCCStatusRegister(DCCSTAT)FieldDescriptions..............................................................397

11-8.DCCCounter0SeedRegister(DCCCNT0)FieldDescriptions...................................................397

11-9.DCCValid0ValueRegister(DCCVALID0)FieldDescriptions....................................................398

11-10.DCCCounter1ValueRegister(DCCCNT1)FieldDescriptions...................................................398

11-11.DCCCounter1ValueRegister(DCCCNT1)FieldDescriptions...................................................399

11-12.DCCCounter0ClockSourceSelectionRegister(DCCCNT0CLKSRC)FieldDescriptions..................399

12-1.ESMInterruptandERRORPinBehavior............................................................................402

12-2.ESMModuleRegisters..................................................................................................407

12-3.ESMEnableERRORPinAction/ResponseRegister1(ESMEEPAPR1)FieldDescriptions..................408

12-4.ESMDisableERRORPinAction/ResponseRegister1(ESMDEPAPR1)FieldDescriptions.................408

12-5.ESMInterruptEnableSet/StatusRegister1(ESMIESR1)FieldDescriptions...................................409

12-6.ESMInterruptEnableClear/StatusRegister1(ESMIECR1)FieldDescriptions................................409

12-7.ESMInterruptLevelSet/StatusRegister1(ESMILSR1)FieldDescriptions.....................................410

12-8.ESMInterruptLevelClear/StatusRegister1(ESMILCR1)FieldDescriptions..................................410

12-9.ESMStatusRegister1(ESMSR1)FieldDescriptions.............................................................411

12-10.ESMStatusRegister2(ESMSR2)FieldDescriptions.............................................................411

12-11.ESMStatusRegister3(ESMSR3)FieldDescriptions.............................................................412

12-12.ESMERRORPinStatusRegister(ESMEPSR)FieldDescriptions...............................................412

12-13.ESMInterruptOffsetHighRegister(ESMIOFFHR)FieldDescriptions...........................................413

12-14.ESMInterruptOffsetLowRegister(ESMIOFFLR)FieldDescriptions............................................414

12-15.ESMLow-TimeCounterRegister(ESMLTCR)FieldDescriptions................................................415

12-16.ESMLow-TimeCounterPreloadRegister(ESMLTCPR)FieldDescriptions....................................415

12-17.ESMErrorKeyRegister(ESMEKR)FieldDescriptions............................................................416

12-18.ESMStatusShadowRegister2(ESMSSR2)FieldDescriptions..................................................416

12-19.ESMInfluenceERRORPinSet/StatusRegister4(ESMIEPSR4)FieldDescriptions..........................417

12-20.ESMInfluenceERRORPinClear/StatusRegister4(ESMIEPCR4)FieldDescriptions.......................417

12-21.ESMInterruptEnableSet/StatusRegister4(ESMIESR4)FieldDescriptions...................................418

12-22.ESMInterruptEnableClear/StatusRegister4(ESMIECR4)FieldDescriptions................................418

12-23.ESMInterruptLevelSet/StatusRegister4(ESMILSR4)FieldDescriptions.....................................419

12-24.ESMInterruptLevelClear/StatusRegister4(ESMILCR4)FieldDescriptions..................................419

12-25.ESMStatusRegister4(ESMSR4)FieldDescriptions..............................................................420

13-1.RTIRegisters.............................................................................................................433

13-2.RTIGlobalControlRegister(RTIGCTRL)FieldDescriptions......................................................434

68

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

13-3.RTITimebaseControlRegister(RTITBCTRL)FieldDescriptions................................................435

13-4.RTICaptureControlRegister(RTICAPCTRL)FieldDescriptions................................................436

13-5.RTICompareControlRegister(RTICOMPCTRL)FieldDescriptions............................................437

13-6.RTIFreeRunningCounter0Register(RTIFRC0)FieldDescriptions............................................438

13-7.RTIUpCounter0Register(RTIUC0)FieldDescriptions...........................................................438

13-8.RTICompareUpCounter0Register(RTICPUC0)FieldDescriptions...........................................439

13-9.RTICaptureFreeRunningCounter0Register(RTICAFRC0)FieldDescriptions..............................439

13-10.RTICaptureUpCounter0Register(RTICAUC0)FieldDescriptions............................................440

13-11.RTIFreeRunningCounter1Register(RTIFRC1)FieldDescriptions............................................440

13-12.RTIUpCounter1Register(RTIUC1)FieldDescriptions...........................................................441

13-13.RTICompareUpCounter1Register(RTICPUC1)FieldDescriptions...........................................442

13-14.RTICaptureFreeRunningCounter1Register(RTICAFRC1)FieldDescriptions..............................443

13-15.RTICaptureUpCounter1Register(RTICAUC1)FieldDescriptions............................................443

13-16.RTICompare0Register(RTICOMP0)FieldDescriptions.........................................................444

13-17.RTIUpdateCompare0Register(RTIUDCP0)FieldDescriptions................................................444

13-18.RTICompare1Register(RTICOMP1)FieldDescriptions.........................................................445

13-19.RTIUpdateCompare1Register(RTIUDCP1)FieldDescriptions................................................445

13-20.RTICompare2Register(RTICOMP2)FieldDescriptions.........................................................446

13-21.RTIUpdateCompare2Register(RTIUDCP2)FieldDescriptions................................................446

13-22.RTICompare3Register(RTICOMP3)FieldDescriptions.........................................................447

13-23.RTIUpdateCompare3Register(RTIUDCP3)FieldDescriptions................................................447

13-24.RTITimebaseLowCompareRegister(RTITBLCOMP)FieldDescriptions......................................448

13-25.RTITimebaseHighCompareRegister(RTITBHCOMP)FieldDescriptions.....................................448

13-26.RTISetInterruptControlRegister(RTISETINTENA)FieldDescriptions.........................................449

13-27.RTIClearInterruptControlRegister(RTICLEARINTENA)FieldDescriptions..................................451

13-28.RTIInterruptFlagRegister(RTIINTFLAG)FieldDescriptions.....................................................453

13-29.DigitalWatchdogControlRegister(RTIDWDCTRL)FieldDescriptions.........................................454

13-30.DigitalWatchdogPreloadRegister(RTIDWDPRLD)FieldDescriptions........................................455

13-31.WatchdogStatusRegister(RTIWDSTATUS)FieldDescriptions.................................................456

13-32.RTIWatchdogKeyRegister(RTIDWDKEY)FieldDescriptions..................................................457

13-33.ExampleofaWDKEYSequence......................................................................................457

13-34.RTIWatchdogDownCounterRegister(RTIDWDCNTR)FieldDescriptions....................................458

13-35.DigitalWindowedWatchdogReactionControl(RTIWWDRXNCTRL)FieldDescriptions......................458

13-36.DigitalWindowedWatchdogWindowSizeControl(RTIWWDSIZECTRL)FieldDescriptions...............459

13-37.RTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)...........................................460

13-38.RTICompare0ClearRegister(RTICMP0CLR).....................................................................461

13-39.RTICompare1ClearRegister(RTICMP1CLR).....................................................................461

13-40.RTICompare2ClearRegister(RTICMP2CLR).....................................................................462

13-41.RTICompare3ClearRegister(RTICMP3CLR).....................................................................462

14-1.CRCModesinWhichDMARequestandCounterLogicareActiveorInactive................................471

14-2.ModesinWhichInterruptConditionCanOccur.....................................................................472

14-3.InterruptOffsetMapping...............................................................................................475

14-4.CRCControlRegisters..................................................................................................479

14-5.CRCGlobalControlRegister0(CRC_CTRL0)FieldDescriptions................................................480

14-6.CRCGlobalControlRegister1(CRC_CTRL1)FieldDescriptions................................................480

14-7.CRCGlobalControlRegister2(CRC_CTRL2)FieldDescriptions................................................481

14-8.CRCInterruptEnableSetRegister(CRC_INTS)FieldDescriptions.............................................482

14-9.CRCInterruptEnableResetRegister(CRC_INTR)FieldDescriptions..........................................485

14-10.CRCInterruptStatusRegister(CRC_STATUS)FieldDescriptions...............................................488

69

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

14-11.CRCInterruptOffset(CRC_INT_OFFSET_REG)FieldDescriptions.............................................489

14-12.CRCBusyRegister(CRC_BUSY)FieldDescriptions..............................................................490

14-13.CRCPatternCounterPreloadRegister1(CRC_PCOUNT_REG1)FieldDescriptions........................490

14-14.CRCSectorCounterPreloadRegister1(CRC_SCOUNT_REG1)FieldDescriptions.........................491

14-15.CRCCurrentSectorRegister1(CRC_CURSEC_REG1)FieldDescriptions....................................491

14-16.CRCChannel1WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD1)FieldDescriptions............492

14-17.CRCChannel1BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD1)FieldDescriptions......492

14-18.Channel1PSASignatureLowRegister(PSA_SIGREGL1)FieldDescriptions.................................493

14-19.Channel1PSASignatureHighRegister(PSA_SIGREGH1)FieldDescriptions................................493

14-20.Channel1CRCValueLowRegister(CRC_REGL1)FieldDescriptions.........................................493

14-21.Channel1CRCValueHighRegister(CRC_REGH1)FieldDescriptions........................................494

14-22.Channel1PSASectorSignatureLowRegister(PSA_SECSIGREGL1)FieldDescriptions..................494

14-23.Channel1PSASectorSignatureHighRegister(PSA_SECSIGREGH1)FieldDescriptions.................494

14-24.Channel1RawDataLowRegister(RAW_DATAREGL1)FieldDescriptions...................................495

14-25.Channel1RawDataHighRegister(RAW_DATAREGH1)FieldDescriptions..................................495

14-26.CRCPatternCounterPreloadRegister2(CRC_PCOUNT_REG2)FieldDescriptions........................495

14-27.CRCSectorCounterPreloadRegister2(CRC_SCOUNT_REG2)FieldDescriptions.........................496

14-28.CRCCurrentSectorRegister2(CRC_CURSEC_REG2)FieldDescriptions....................................496

14-29.CRCChannel2WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD2)FieldDescriptions............497

14-30.CRCChannel2BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD2)FieldDescriptions......497

14-31.Channel2PSASignatureLowRegister(PSA_SIGREGL2)FieldDescriptions.................................498

14-32.Channel2PSASignatureHighRegister(PSA_SIGREGH2)FieldDescriptions................................498

14-33.Channel2CRCValueLowRegister(CRC_REGL2)FieldDescriptions.........................................498

14-34.Channel2CRCValueHighRegister(CRC_REGH2)FieldDescriptions........................................499

14-35.Channel2PSASectorSignatureLowRegister(PSA_SECSIGREGL2)FieldDescriptions..................499

14-36.Channel2PSASectorSignatureHighRegister(PSA_SECSIGREGH2)FieldDescriptions.................499

14-37.Channel2RawDataLowRegister(RAW_DATAREGL2)FieldDescriptions...................................500

14-38.Channel2RawDataHighRegister(RAW_DATAREGH2)FieldDescriptions..................................500

14-39.DataBusSelectionRegisterFieldDescriptions.....................................................................501

15-1.VIMControlRegisterSummary.......................................................................................517

15-2.InterruptVectorTableParityFlagRegister(PARFLG)FieldDescriptions......................................518

15-3.InterruptVectorTableParityControlRegister(PARCTL)FieldDescriptions...................................518

15-4.AddressParityErrorRegister(PARERR)FieldDescriptions.....................................................519

15-5.FallBackAddressParityErrorRegister(FBPARERR)FieldDescriptions......................................519

15-6.InterruptDispatch.......................................................................................................520

15-7.IRQIndexOffsetVectorRegister(IRQINDEX)FieldDescriptions...............................................521

15-8.FIQIndexOffsetVectorRegister(FIQINDEX)FieldDescriptions................................................521

15-9.FIQ/IRQProgramControlRegisters[0](FIRQPR[0])FieldDescriptions.........................................522

15-10.PendingInterruptReadRegisters[0](INTREQ[0])FieldDescriptions...........................................523

15-11.InterruptEnableSetRegister[0](REQENASET[0])FieldDescriptions..........................................524

15-12.RequestEnableClearRegister(REQENACLR)FieldDescriptions..............................................525

15-13.Wake-UpEnableSetRegisters[0](WAKEENASET[0])FieldDescriptions......................................526

15-14.Wake-UpEnableClearRegisters[0](WAKEENACLR[0])FieldDescriptions....................................527

15-15.IRQInterruptVectorRegister(IRQVECREG)FieldDescriptions................................................528

15-16.FIQInterruptVectorRegister(FIQVECREG)FieldDescriptions.................................................528

15-17.CaptureEventRegister(CAPEVT)FieldDescriptions.............................................................529

15-18.InterruptControlRegistersOrganization.............................................................................530

15-19.InterruptControlRegisters[0:31](CHANCTL[0:15]FieldDescriptions...........................................530

16-1.ArbitrationAccordingtoPriorityQueuesandPrioritySchemes...................................................540

70

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

16-2.MaximumNumberofDMATransactionsperChannelinNon-BypassMode....................................547

16-3.MaximumNumberofDMATransactionsperChannelinBypassMode..........................................547

16-4.ControlPacketRAM.....................................................................................................550

16-5.ControlPacketRAM.....................................................................................................550

16-6.ParityRAM................................................................................................................550

16-7.DMAControlRegisters..................................................................................................551

16-8.ControlPacketMemoryMap...........................................................................................553

16-9.GlobalControlRegister(GCTRL)FieldDescriptions...............................................................554

16-10.ChannelPendingRegister(PEND)FieldDescriptions.............................................................555

16-11.DMAStatusRegister(DMASTAT)FieldDescriptions..............................................................555

16-12.HWChannelEnableSetandStatusRegister(HWCHENAS)FieldDescriptions...............................556

16-13.HWChannelEnableResetandStatusRegister(HWCHENAR)FieldDescriptions............................556

16-14.SWChannelEnableSetandStatusRegister(SWCHENAS)FieldDescriptions...............................557

16-15.SWChannelEnableResetandStatusRegister(SWCHENAR)FieldDescriptions............................558

16-16.ChannelPrioritySetRegister(CHPRIOS)FieldDescriptions.....................................................558

16-17.ChannelPriorityResetRegister(CHPRIOR)FieldDescriptions..................................................559

16-18.GlobalChannelInterruptEnableSetRegister(GCHIENAS)FieldDescriptions................................559

16-19.GlobalChannelInterruptEnableResetRegister(GCHIENAR)FieldDescriptions.............................560

16-20.DMARequestAssignmentRegister0(DREQASI0)FieldDescriptions..........................................561

16-21.DMARequestAssignmentRegister1(DREQASI1)FieldDescriptions..........................................562

16-22.DMARequestAssignmentRegister2(DREQASI2)FieldDescriptions..........................................563

16-23.DMARequestAssignmentRegister3(DREQASI3)FieldDescriptions..........................................564

16-24.PortAssignmentRegister0(PAR0)FieldDescriptions............................................................565

16-25.PortAssignmentRegister1(PAR1)FieldDescriptions............................................................566

16-26.FTCInterruptMappingRegister(FTCMAP)FieldDescriptions...................................................567

16-27.LFSInterruptMappingRegister(LFSMAP)FieldDescriptions....................................................567

16-28.HBCInterruptMappingRegister(HBCMAP)FieldDescriptions..................................................568

16-29.BTCInterruptMappingRegister(BTCMAP)FieldDescriptions...................................................568

16-30.BERInterruptMappingRegister(BERMAP)FieldDescriptions...................................................569

16-31.FTCInterruptEnableSet(FTCINTENAS)FieldDescriptions.....................................................569

16-32.FTCInterruptEnableReset(FTCINTENAR)FieldDescriptions..................................................570

16-33.LFSInterruptEnableSet(LFSINTENAS)FieldDescriptions......................................................570

16-34.LFSInterruptEnableReset(LFSINTENAR)FieldDescriptions...................................................571

16-35.HBCInterruptEnableSet(HBCINTENAS)FieldDescriptions.....................................................571

16-36.HBCInterruptEnableReset(HBCINTENAR)FieldDescriptions.................................................572

16-37.BTCInterruptEnableReset(BTCINTENAS)FieldDescriptions..................................................572

16-38.BTCInterruptEnableReset(BTCINTENAR)FieldDescriptions..................................................573

16-39.GlobalInterruptFlagRegister(GINTFLAG)FieldDescriptions...................................................573

16-40.FTCINTERRUPTFLAGRegister(FTCFLAG)FieldDescriptions................................................574

16-41.LFSInterruptFlagRegister(LFSFLAG)FieldDescriptions........................................................574

16-42.HBCInterruptFlag(HBCFLAG)FieldDescriptions.................................................................575

16-43.BTCInterruptFlagRegister(BTCFLAG)FieldDescriptions.......................................................575

16-44.BERInterruptFlagRegister(BERFLAG)FieldDescriptions.......................................................576

16-45.FTCAInterruptChannelOffsetRegister(FTCAOFFSET)FieldDescriptions...................................576

16-46.LFSAInterruptChannelOffsetRegister(LFSAOFFSET)FieldDescriptions....................................577

16-47.HBCAInterruptChannelOffsetRegister(HBCAOFFSET)FieldDescriptions..................................577

16-48.BTCAInterruptChannelOffsetRegister(BTCAOFFSET)FieldDescriptions...................................578

16-49.BERAInterruptChannelOffsetRegister(BERAOFFSET)FieldDescriptions...................................578

16-50.FTCBInterruptChannelOffsetRegister(FTCBOFFSET)FieldDescriptions...................................579

71

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

16-51.LFSBInterruptChannelOffsetRegister(LFSBOFFSET)FieldDescriptions....................................579

16-52.HBCBInterruptChannelOffsetRegister(HBCBOFFSET)FieldDescriptions..................................580

16-53.BTCBInterruptChannelOffsetRegister(BTCBOFFSET)FieldDescriptions...................................580

16-54.BERBInterruptChannelOffsetRegister(BERBOFFSET)FieldDescriptions...................................581

16-55.PortControlRegister(PTCRL)FieldDescriptions..................................................................582

16-56.RAMTestControl(RTCTRL)FieldDescriptions....................................................................583

16-57.DebugControl(DCTRL)FieldDescriptions..........................................................................584

16-58.WatchPointRegister(WPR)FieldDescriptions.....................................................................585

16-59.WatchMaskRegister(WMR)FieldDescriptions....................................................................585

16-60.PortBActiveChannelSourceAddressRegister(PBACDADDR)FieldDescriptions..........................586

16-61.PortBActiveChannelDestinationAddressRegister(PBACDADDR)FieldDescriptions.....................586

16-62.PortBActiveChannelTransferCountRegister(PBACTC)FieldDescriptions.................................587

16-63.ParityControlRegister(DMAPCR)FieldDescriptions..............................................................588

16-64.DMAParityErrorAddressRegister(DMAPAR)FieldDescriptions...............................................589

16-65.DMAMemoryProtectionControlRegister(DMAMPCTRL)FieldDescriptions..................................590

16-66.DMAMemoryProtectionStatusRegister(DMAMPST)FieldDescriptions......................................592

16-67.DMAMemoryProtectionRegion0StartAddressRegister(DMAMPR0S)FieldDescriptions................593

16-68.DMAMemoryProtectionRegion0EndAddressRegister(DMAMPR0E)]FieldDescriptions................593

16-69.DMAMemoryProtectionRegion1StartAddressRegister(DMAMPR1S)FieldDescriptions................594

16-70.DMAMemoryProtectionRegion1EndAddressRegister(DMAMPR1E)FieldDescriptions.................594

16-71.DMAMemoryProtectionRegion2StartAddressRegister(DMAMPR2S)FieldDescriptions................595

16-72.DMAMemoryProtectionRegion2EndAddressRegister(DMAMPR2E)FieldDescriptions.................595

16-73.DMAMemoryProtectionRegion3StartAddressRegister(DMAMPR3S)FieldDescriptions................596

16-74.DMAMemoryProtectionRegion3EndAddressRegister(DMAMPR3E)FieldDescriptions.................596

16-75.InitialSourceAddress(ISADDR)FieldDescriptions................................................................597

16-76.InitialDestinationAddressRegister(IDADDR)FieldDescriptions................................................598

16-77.InitialTransferCountRegister(ITCOUNT)FieldDescriptions.....................................................598

16-78.ChannelControlRegister(CHCTRL)FieldDescriptions...........................................................599

16-79.ElementIndexOffsetRegister(EIOFF)FieldDescriptions........................................................600

16-80.FrameIndexOffsetRegister(FIOFF)FieldDescriptions...........................................................600

16-81.CurrentSourceAddressRegister(CSADDR)FieldDescriptions................................................601

16-82.CurrentDestinationAddressRegister(CDADDR)FieldDescriptions............................................601

16-83.CurrentTransferCountRegister(CTCOUNT)FieldDescriptions.................................................602

17-1.EMIFPinsUsedtoAccessBothSDRAMandAsynchronousMemories.........................................606

17-2.EMIFPinsSpecifictoSDRAM.........................................................................................607

17-3.EMIFPinsSpecifictoAsynchronousMemory.......................................................................607

17-4.EMIFSDRAMCommands..............................................................................................608

17-5.TruthTableforSDRAMCommands..................................................................................608

17-6.16-bitEMIFAddressPinConnections................................................................................610

17-7.DescriptionoftheSDRAMConfigurationRegister(SDCR)........................................................611

17-8.DescriptionoftheSDRAMRefreshControlRegister(SDRCR)...................................................611

17-9.DescriptionoftheSDRAMTimingRegister(SDTIMR).............................................................612

17-10.DescriptionoftheSDRAMSelfRefreshExitTimingRegister(SDSRETR)......................................612

17-11.SDRAMLOADMODEREGISTERCommand.......................................................................613

17-12.RefreshUrgencyLevels.................................................................................................614

17-13.MappingfromLogicalAddresstoEMIFPinsfor16-bitSDRAM..................................................619

17-14.NormalModevs.SelectStrobeMode................................................................................620

17-15.DescriptionoftheAsynchronousmConfigurationRegister(CEnCFG)..........................................622

17-16.DescriptionoftheAsynchronousWaitCycleConfigurationRegister(AWCC).................................623

72

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

17-17.DescriptionoftheEMIFInterruptMaskSetRegister(INTMSKSET).............................................624

17-18.DescriptionoftheEMIFInterruptMastClearRegister(INTMSKCLR)...........................................624

17-19.AsynchronousReadOperationinNormalMode....................................................................624

17-20.AsynchronousWriteOperationinNormalMode.....................................................................626

17-21.AsynchronousReadOperationinSelectStrobeMode.............................................................628

17-22.AsynchronousWriteOperationinSelectStrobeMode.............................................................630

17-23.InterruptMonitorandControlBitFields...............................................................................634

17-24.ExternalMemoryInterface(EMIF)Registers........................................................................638

17-25.ModuleIDRegister(MIDR)FieldDescriptions......................................................................638

17-26.AsynchronousWaitCycleConfigurationRegister(AWCCR)FieldDescriptions................................639

17-27.SDRAMConfigurationRegister(SDCR)FieldDescriptions.......................................................640

17-28.SDRAMRefreshControlRegister(SDRCR)FieldDescriptions...................................................641

17-29.AsynchronousnConfigurationRegister(CEnCFG)FieldDescriptions..........................................642

17-30.SDRAMTimingRegister(SDTIMR)FieldDescriptions.............................................................643

17-31.SDRAMSelfRefreshExitTimingRegister(SDSRETR)FieldDescriptions.....................................644

17-32.EMIFInterruptRawRegister(INTRAW)FieldDescriptions........................................................645

17-33.EMIFInterruptMaskRegister(INTMSK)FieldDescriptions.......................................................646

17-34.EMIFInterruptMaskSetRegister(INTMSKSET)FieldDescriptions.............................................647

17-35.EMIFInterruptMaskClearRegister(INTMSKCLR)FieldDescriptions..........................................648

17-36.PageModeControlRegister(PMCR)FieldDescriptions..........................................................649

17-37.SRFieldValueFortheEMIFtoK4S641632H-TC(L)70Interface.................................................650

17-38.SDTIMRFieldCalculationsfortheEMIFtoK4S641632H-TC(L)70Interface...................................652

17-39.RRCalculationfortheEMIFtoK4S641632H-TC(L)70Interface..................................................653

17-40.RRCalculationfortheEMIFtoK4S641632H-TC(L)70Interface..................................................653

17-41.SDCRFieldValuesFortheEMIFtoK4S641632H-TC(L)70Interface...........................................654

17-42.ACCharacteristicsforaReadAccess................................................................................655

17-43.ACCharacteristicsforaWriteAccess................................................................................655

18-1.POMRegisters...........................................................................................................661

18-2.POMGlobalControlRegister(POMGLBCTRL)FieldDescriptions...............................................662

18-3.POMRevisionID(POMREV)FieldDescriptions....................................................................663

18-4.POMClockGateControlRegister(POMCLKCTRL)FieldDescriptions.........................................663

18-5.POMStatusRegister(POMFLG)FieldDescriptions................................................................664

18-6.POMProgramRegionStartAddressRegisterx(POMPROGSTARTx)FieldDescriptions...................665

18-7.POMOverlayRegionStartAddressRegisterx(POMOVLSTARTx)FieldDescriptions.......................665

18-8.POMRegionSizeRegisterx(POMREGSIZEx)FieldDescriptions...............................................666

18-9.POMIntegrationControlRegister(POMITCTRL)FieldDescriptions.............................................666

18-10.POMClaimSetRegister(POMCLAIMSET)FieldDescriptions...................................................667

18-11.POMClaimClearRegister(POMCLAIMCLR)FieldDescriptions.................................................668

18-12.POMLockAccessRegister(POMLOCKACCESS)FieldDescriptions...........................................669

18-13.POMLockStatusRegister(POMLOCKSTATUS)FieldDescriptions............................................669

18-14.POMAuthenticationStatusRegister(POMAUTHSTATUS)FieldDescriptions.................................669

18-15.POMDeviceIDRegister(POMDEVID)FieldDescriptions.........................................................670

18-16.POMDeviceTypeRegister(POMDEVTYPE)FieldDescriptions.................................................670

18-17.POMPeripheralID4Register(POMPERIPHERALID4)FieldDescriptions.....................................671

18-18.POMPeripheralID5Register(POMPERIPHERALID5)FieldDescriptions.....................................671

18-19.POMPeripheralID6Register(POMPERIPHERALID6)FieldDescriptions.....................................672

18-20.POMPeripheralID7Register(POMPERIPHERALID7)FieldDescriptions.....................................672

18-21.POMPeripheralID0Register(POMPERIPHERALID0)FieldDescriptions.....................................673

18-22.POMPeripheralID1Register(POMPERIPHERALID1)FieldDescriptions.....................................673

73

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

18-23.POMPeripheralID2Register(POMPERIPHERALID2)FieldDescriptions.....................................674

18-24.POMPeripheralID3Register(POMPERIPHERALID3)FieldDescriptions.....................................674

18-25.POMComponentID0Register(POMCOMPONENTID0)FieldDescriptions...................................675

18-26.POMComponentID1Register(POMCOMPONENTID1)FieldDescriptions...................................675

18-27.POMComponentID2Register(POMCOMPONENTID2)FieldDescriptions...................................676

18-28.POMComponentID3Register(POMCOMPONENTID3)FieldDescriptions...................................676

19-1.ADCGroups’OperatingModeControlandStatusRegisters.....................................................688

19-2.CalibrationReferenceVoltages†......................................................................................696

19-3.Self-TestReferenceVoltages†........................................................................................699

19-4.DeterminationofADCInputChannelCondition....................................................................700

19-5.OutputBufferandPullControlBehaviorforADxEVTasGPIOPins.............................................705

19-6.ADCRegistersSummary...............................................................................................706

19-7.ADCResetControlRegister(ADRSTCR)FieldDescriptions......................................................708

19-8.ADCOperatingModeControlRegister(ADOPMODECR)FieldDescriptions..................................708

19-9.ADCClockControlRegister(ADCLOCKCR)FieldDescriptions..................................................710

19-10.ADCCalibrationModeControlRegister(ADCALCR)FieldDescriptions........................................710

19-11.ADCEventGroupOperatingModeControlRegister(ADEVMODECR)FieldDescriptions...................712

19-12.ADCGroup1OperatingModeControlRegister(ADG1MODECR)FieldDescriptions.........................714

19-13.ADCGroup2OperatingModeControlRegister(ADG2MODECR)FieldDescriptions........................716

19-14.ADCEventGroupTriggerSourceSelectRegister(ADEVSRC)FieldDescriptions............................718

19-15.ADCGroup1TriggerSourceSelectRegister(ADG1SRC)FieldDescriptions..................................719

19-16.ADCGroup2TriggerSourceSelectRegister(ADG2SRC)FieldDescriptions..................................720

19-17.ADCEventGroupInterruptEnableControlRegister(ADEVINTENA)FieldDescriptions.....................721

19-18.ADCGroup1InterruptEnableControlRegister(ADG1INTENA)FieldDescriptions...........................722

19-19.ADCGroup2InterruptEnableControlRegister(ADG2INTENA)FieldDescriptions...........................723

19-20.ADCEventGroupInterruptFlagRegister(ADEVINTFLG)FieldDescriptions..................................724

19-21.ADCGroup1InterruptFlagRegister(ADG1INTFLG)FieldDescriptions........................................725

19-22.ADCGroup2InterruptFlagRegister(ADG2INTFLG)FieldDescriptions........................................726

19-23.ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR)FieldDescriptions..............727

19-24.ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR)FieldDescriptions....................727

19-25.ADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR)FieldDescriptions....................728

19-26.ADCEventGroupDMAControlRegister(ADEVDMACR)FieldDescriptions..................................729

19-27.ADCGroup1DMAControlRegister(ADG1DMACR)FieldDescriptions.........................................730

19-28.ADCGroup2DMAControlRegister(ADG2DMACR)FieldDescriptions.........................................731

19-29.ADCResultsMemoryConfigurationRegister(ADBNDCR)FieldDescriptions.................................732

19-30.ADCResultsMemorySizeConfigurationRegister(ADBNDEND)FieldDescriptions..........................733

19-31.ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)FieldDescriptions.................734

19-32.ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP)FieldDescriptions.......................734

19-33.ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP)FieldDescriptions.......................735

19-34.ADCEventGroupStatusRegister(ADEVSR)FieldDescriptions................................................736

19-35.ADCGroup1StatusRegister(ADG1SR)FieldDescriptions.......................................................737

19-36.ADCGroup2StatusRegister(ADG2SR)FieldDescriptions.......................................................738

19-37.ADCEventGroupChannelSelectRegister(ADEVSEL)FieldDescriptions....................................739

19-38.ADCGroup1ChannelSelectRegister(ADG1SEL)FieldDescriptions...........................................740

19-39.ADCGroup2ChannelSelectRegister(ADG2SEL)FieldDescriptions...........................................741

19-40.ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)FieldDescriptions..........................742

19-41.ADCStateMachineStatusRegister(ADSMSTATE)FieldDescriptions........................................742

19-42.ADCChannelLastConversionValueRegister(ADLASTCONV)FieldDescriptions...........................743

19-43.ADCEventGroupResults'FIFORegister(ADEVBUFFER)FieldDescriptions.................................744

74

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

19-44.ADCGroup1ResultsFIFORegister(ADG1BUFFER)FieldDescriptions.......................................745

19-45.ADCGroup2ResultsFIFORegister(ADG2BUFFER)FieldDescriptions.......................................746

19-46.ADCADEVTPinDirectionControlRegister(ADEVTDIR)FieldDescriptions...................................747

19-47.ADCADEVTPinOutputValueControlRegister(ADEVTOUT)FieldDescriptions.............................748

19-48.ADCADEVTPinInputValueRegister(ADEVTIN)FieldDescriptions...........................................748

19-49.ADCADEVTPinSetRegister(ADEVTSET)FieldDescriptions..................................................749

19-50.ADCADEVTPinClearRegister(ADEVTCLR)FieldDescriptions................................................749

19-51.ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)FieldDescriptions...............................750

19-52.ADCADEVTPinPullControlDisableRegister(ADEVTPDIS)FieldDescriptions..............................750

19-53.ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)FieldDescriptions..............................751

19-54.ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)FieldDescriptions.......751

19-55.ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)FieldDescriptions.............752

19-56.ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)FieldDescriptions.............753

19-57.ADCMagnitudeCompareInterruptControlRegisters(ADMAGINTxCR)FieldDescriptions.................754

19-58.ADCMagnitudeCompareMaskRegister(ADMAGINTxMASK)FieldDescriptions............................755

19-59.ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)FieldDescriptions.........755

19-60.ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)FieldDescriptions......756

19-61.ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)FieldDescriptions......................756

19-62.ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF)FieldDescriptions....................757

19-63.ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)FieldDescriptions.................757

19-64.ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR)FieldDescriptions.......................758

19-65.ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR)FieldDescriptions.......................758

19-66.ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)FieldDescriptions..................759

19-67.ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR)FieldDescriptions........................759

19-68.ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR)FieldDescriptions........................760

19-69.ADCParityControlRegister(ADPARCR)FieldDescriptions......................................................760

19-70.ADCParityErrorAddressRegister(ADPARADDR)FieldDescriptions..........................................761

19-71.ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL)FieldDescriptions...........................761

20-1.N2HETRAMBaseAddresses........................................................................................772

20-2.N2HETRAMBankStructure..........................................................................................773

20-3.PinSafeStateUponParityErrorDetection.........................................................................774

20-4.N2HETParityBitMapping.............................................................................................774

20-5.PrescaleFactorRegisterEncoding....................................................................................776

20-6.Interpretationofthe7-BitHRDataField.............................................................................777

20-7.EdgeDetectionInputTimingforLoopResolutionInstructions....................................................786

20-8.EdgeDetectionInputTimingforHighResolutionInstructions.....................................................786

20-9.InputBuffer,OutputBufferandPullControlBehavior.............................................................791

20-10.N2HETPinDisableFeature...........................................................................................792

20-11.PulseLengthExamplesforSuppressionFilter......................................................................793

20-12.InterruptSourcesandCorrespondingOffsetValuesinRegistersHETOFFx...................................793

20-13.N2HETRegisters........................................................................................................801

20-14.GlobalConfigurationRegister(HETGCR)FieldDescriptions......................................................802

20-15.PrescaleFactorRegister(HETPFR)FieldDescriptions............................................................803

20-16.N2HETCurrentAddress(HETADDR)FieldDescriptions..........................................................804

20-17.OffsetIndexPriorityLevel1Register(HETOFF1)FieldDescriptions............................................804

20-18.InterruptOffsetEncodingFormat......................................................................................805

20-19.OffsetIndexPriorityLevel2Register(HETOFF2)FieldDescriptions............................................805

20-20.InterruptEnableSetRegister(HETINTENAS)FieldDescriptions................................................806

20-21.NHETInterruptEnableClear(HETINTENAC)FieldDescriptions.................................................806

75

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

20-22.ExceptionControlRegister1(HETEXC1)FieldDescriptions......................................................807

20-23.ExceptionControlRegister2(HETEXC2)FieldDescriptions......................................................808

20-24.InterruptPriorityRegister(HETPRY)FieldDescriptions...........................................................809

20-25.InterruptFlagRegister(HETFLG)FieldDescriptions...............................................................809

20-26.ANDShareControlRegister(HETAND)FieldDescriptions.......................................................810

20-27.HRShareControlRegister(HETHRSH)FieldDescriptions.......................................................811

20-28.XORShareControlRegister(HETXOR)FieldDescriptions.......................................................812

20-29.RequestEnableSetRegister(HETREQENS)FieldDescriptions.................................................813

20-30.RequestEnableClearRegister(HETREQENC)FieldDescriptions..............................................813

20-31.RequestDestinationSelectRegister(HETREQDS)FieldDescriptions..........................................814

20-32.N2HETDirectionRegister(HETDIR)FieldDescriptions...........................................................815

20-33.N2HETDataInputRegister(HETDIN)FieldDescriptions.........................................................816

20-34.N2HETDataOutputRegister(HETDOUT)FieldDescriptions....................................................816

20-35.N2HETDataSetRegister(HETDSET)FieldDescriptions.........................................................817

20-36.N2HETDataClearRegister(HETDCLR)FieldDescriptions......................................................817

20-37.N2HETOpenDrainRegister(HETPDR)FieldDescriptions.......................................................818

20-38.N2HETPullDisableRegister(HETPULDIS)FieldDescriptions...................................................818

20-39.N2HETPullSelectRegister(HETPSL)FieldDescriptions.........................................................819

20-40.ParityControlRegister(HETPCR)FieldDescriptions..............................................................820

20-41.ParityAddressRegister(HETPAR)FieldDescriptions.............................................................821

20-42.ParityPinRegister(HETPPR)FieldDescriptions...................................................................822

20-43.KnownStateonParityError............................................................................................822

20-44.SuppressionFilterPreloadRegister(HETSFPRLD)FieldDescriptions..........................................823

20-45.SuppressionFilterEnableRegister(HETSFENA)FieldDescriptions............................................823

20-46.LoopBackPairSelectRegister(HETLBPSEL)FieldDescriptions...............................................824

20-47.LoopBackPairDirectionRegister(HETLBPDIR)FieldDescriptions.............................................825

20-48.NHETPinDisableRegister(HETPINDIS)FieldDescriptions.....................................................826

20-49.InstructionSummary.....................................................................................................827

20-50.FLAGSGeneratedbyInstruction.....................................................................................828

20-51.InterruptCapableInstructions..........................................................................................828

20-52.Arithmetic/BitwiseLogicSub-Opcodes.............................................................................840

20-53.SourceOperandChoices..............................................................................................840

20-54.DestinationOperandChoices.........................................................................................840

20-55.ShiftEncoding............................................................................................................841

20-56.ExecutionTimeforADC,ADD,AND,OR,SBB,SUB,XORInstructions.......................................841

20-57.MoveTypesforADM32................................................................................................846

20-58.EdgeSelectEncodingforAPCNT....................................................................................849

20-59.BranchConditionEncodingforBR...................................................................................852

20-60.DADM64ControlFieldDescription...................................................................................857

20-61.EventEncodingFormatforECNT....................................................................................864

20-62.MagnitudeCompareOrderforMCMP...............................................................................866

20-63.MoveTypeEncodingSelection.......................................................................................869

20-64.MOV64ControlFieldDescriptions....................................................................................873

20-65.ComparisonTypeEncodingFormat..................................................................................873

20-66.CounterTypeEncodingFormat.......................................................................................875

20-67.ComparisonTypeEncodingFormat..................................................................................881

20-68.RADM64ControlFieldDescriptions..................................................................................881

20-69.StepWidthEncodingforSCNT.......................................................................................887

20-70.SHIFTMODEEncodingFormat.......................................................................................890

76

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

20-71.SHIFTConditionEncoding.............................................................................................890

20-72.EventEncodingFormatforWCAP...................................................................................893

20-73.EventEncodingFormatforWCAPE..................................................................................895

21-1.CPENA/TMBxPriorityRules..........................................................................................904

21-2.TriggeredControlPackets..............................................................................................907

21-3.DCPRAM.................................................................................................................910

21-4.DCPParityRAM.........................................................................................................910

21-5.FieldAddressesoftheWCAP,ECNT,PCNTExample............................................................911

21-6.32-Bit-TransferofDataFields.........................................................................................912

21-7.DestinationBufferValues...............................................................................................912

21-8.64-Bit-TransferofControlFieldandDataFields....................................................................912

21-9.DestinationBufferValues...............................................................................................913

21-10.ControlRegisterMapping...............................................................................................914

21-11.GlobalControlRegister(HTUGC)FieldDescriptions..............................................................915

21-12.ControlPacketEnableRegister(HTUCPENA)FieldDescriptions...............................................916

21-13.CPENAWriteResults...................................................................................................916

21-14.CPENAReadResults...................................................................................................916

21-15.ControlPacket(CP)BusyRegister0(HTUBUSY0)FieldDescriptions.........................................917

21-16.ControlPacket(CP)BusyRegister1(HTUBUSY1)FieldDescriptions.........................................918

21-17.ControlPacket(CP)BusyRegister2(HTUBUSY2)FieldDescriptions.........................................918

21-18.ControlPacket(CP)BusyRegister3(HTUBUSY3)FieldDescriptions.........................................919

21-19.ActiveControlPacketandErrorRegister(HTUACPE)FieldDescriptions......................................919

21-20.RequestLostandBusErrorControlRegister(HTURLBECTRL)FieldDescriptions..........................921

21-21.BufferFullInterruptEnableSetRegister(HTUBFINTS)FieldDescriptions....................................922

21-22.BufferFullInterruptEnableClearRegister(HTUBFINTC)FieldDescriptions..................................922

21-23.InterruptMappingRegister(HTUINTMAP)FieldDescriptions....................................................923

21-24.InterruptOffsetRegister0(HTUINTOFF0)FieldDescriptions....................................................924

21-25.InterruptOffsetRegister1(HTUINTOFF1)FieldDescriptions....................................................925

21-26.BufferInitializationModeRegister(HTUBIM)FieldDescriptions.................................................926

21-27.BufferInitialization.......................................................................................................926

21-28.RequestLostFlagRegister(HTURLOSTFL)FieldDescriptions................................................928

21-29.BufferFullInterruptFlagRegister(HTUBFINTFL)FieldDescriptions..........................................928

21-30.BERInterruptFlagRegister(HTUBERINTFL)FieldDescriptions................................................929

21-31.MemoryProtection1StartAddressRegister(HTUMP1S)FieldDescriptions..................................930

21-32.MemoryProtection1EndAddressRegister(HTUMP1E)FieldDescriptions...................................930

21-33.DebugControlRegister(HTUDCTRL)FieldDescriptions.........................................................931

21-34.WatchPointRegister(HTUWPR)FieldDescriptions..............................................................932

21-35.WatchMaskRegister(HTUWMR)FieldDescriptions..............................................................932

21-36.ModuleIdentificationRegister(HTUID)FieldDescriptions........................................................933

21-37.ParityControlRegister(HTUPCR)FieldDescriptions.............................................................934

21-38.ParityAddressRegister(HTUPAR)FieldDescriptions............................................................935

21-39.MemoryProtectionControlandStatusRegister(HTUMPCS)FieldDescriptions..............................936

21-40.MemoryProtection0StartaddressRegister(HTUMP0S)FieldDescriptions..................................938

21-41.MemoryProtectionEndAddressRegister(HTUMP0E)FieldDescriptions.....................................938

21-42.DoubleControlPacketMemoryMap..................................................................................939

21-43.InitialFullAddressARegister(HTUIFADDRA)FieldDescriptions...............................................940

21-44.InitialFullAddressBRegister(HTUIFADDRB)FieldDescriptions...............................................940

21-45.InitialNHETAddressandControlRegister(HTUIHADDRCT)FieldDescriptions.............................941

21-46.InitialTransferCountRegister(HTUITCOUNT)FieldDescriptions..............................................942

77

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

21-47.CurrentFullAddressARegister(HTUCFADDRA)FieldDescriptions...........................................943

21-48.CurrentFullAddressBRegister(HTUCFADDRB)FieldDescriptions...........................................944

21-49.InitialTransferCountRegister(HTUCFCOUNT)FieldDescriptions.............................................945

21-50.ApplicationExamplesforSettingtheTransferModesofCPAandBofaDCP................................946

22-1.GIOControlRegistersSummary......................................................................................955

22-2.GIOGlobalControlRegister(GIOGCR0)FieldDescriptions.....................................................956

22-3.GIOInterruptDetectRegister(GIOINTDET)FieldDescriptions...................................................957

22-4.GIOInterruptPolarityRegister(GIOPOL)FieldDescriptions......................................................958

22-5.GIOInterruptEnableSetRegister(GIOENASET)FieldDescriptions............................................959

22-6.GIOInterruptEnableClearRegister(GIOENACLR)FieldDescriptions..........................................960

22-7.GIOInterruptPriorityRegister(GIOLVLSET)FieldDescriptions..................................................961

22-8.GIOInterruptPriorityRegister(GIOLVLCLR)FieldDescriptions..................................................962

22-9.GIOInterruptFlagRegister(GIOFLG)FieldDescriptions..........................................................963

22-10.GIOOffset1Register(GIOOFF1)FieldDescriptions...............................................................964

22-11.GIOOffset2Register(GIOOFF2)FieldDescriptions...............................................................965

22-12.GIOEmulation1Register(GIOEMU1)FieldDescriptions.........................................................966

22-13.GIOEmulation2Register(GIOEMU2)FieldDescriptions.........................................................967

22-14.GIODataDirectionRegisters[A-H][7:0](GIODIR[A-H][7:0])FieldDescriptions................................968

22-15.GIODataInputRegisters[A-H][7:0](GIODIN[A-H][7:0])FieldDescriptions.....................................968

22-16.GIODataOutputRegisters[A-H][7:0](GIODOUT[A-H][7:0])FieldDescriptions................................969

22-17.GIODataSetRegisters[A-H][7:0](GIODSET[A-H][7:0])FieldDescriptions....................................969

22-18.GIODataClearRegisters[A-H][7:0](GIODCLR[A-H][7:0])FieldDescriptions..................................970

22-19.GIOOpenDrainRegisters[A-H][7:0](GIOPDR[A-H][7:0])FieldDescriptions..................................970

22-20.GIOPullDisableRegisters[A-H][7:0](GIOPULDIS[A-H][7:0])FieldDescriptions.............................971

22-21.GIOPullSelectRegisters[A-H][7:0](GIOPSL[A-H][7:0])FieldDescriptions....................................971

22-22.OutputBuffer,andPullControlBehaviorforGIOPins............................................................972

23-1.FlexRayAddressRangeTable........................................................................................978

23-2.FlexRayTransferUnitEventTriggerConditions....................................................................983

23-3.MirroringAddressMapping.............................................................................................985

23-4.MirroringAddressMapping.............................................................................................986

23-5.ErrorModesofthePOC(DegradationModel)......................................................................992

23-6.StateTransitionsofCommunicationControllerOverallStateMachine..........................................994

23-7.StateTransitionsWAKEUP............................................................................................998

23-8.DefinitionofCycleSet................................................................................................1007

23-9.ExamplesforValidCycleSets.......................................................................................1007

23-10.ChannelFilteringConfiguration......................................................................................1008

23-11.ScanofMessageRAM...............................................................................................1014

23-12.AssignmentofInputBufferCommandMaskBits.................................................................1017

23-13.AssignmentofInputBufferCommandRequestbits..............................................................1017

23-14.AssignmentofOutputBufferCommandMaskBits...............................................................1019

23-15.AssignmentofOutputBufferCommandRequestBits............................................................1019

23-16.ModuleInterruptFlagsandInterruptLineEnable.................................................................1032

23-17.TransferUnitRegisterSummary.....................................................................................1033

23-18.GlobalStaticNumber0(GSN0)FieldDescriptions...............................................................1035

23-19.GlobalStaticNumber1(GSN1)FieldDescriptions...............................................................1035

23-20.GlobalControlSet/Reset(GCS/R)FieldDescriptions.............................................................1037

23-21.TransferStatusCurrentBuffer(TSCB)FieldDescriptions........................................................1039

23-22.LastTransferredBuffertoCommunicationController(LTBCC)FieldDescriptions...........................1040

23-23.LastTransferredBuffertoSystemMemory(LTBSM)FieldDescriptions......................................1040

78

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-24.TransferBaseAddress(TBA)FieldDescriptions.................................................................1041

23-25.NextTransferBaseAddress(NTBA)FieldDescriptions.........................................................1041

23-26.BaseAddressofMirroredStatus(BAMS)FieldDescriptions...................................................1042

23-27.StartAddressofMemoryProtection(SAMP)FieldDescriptions................................................1042

23-28.EndAddressofMemoryProtection(EAMP)FieldDescriptions.................................................1043

23-29.TransfertoSystemMemoryOccurred1(TSMO1)FieldDescriptions.........................................1044

23-30.TransfertoSystemMemoryOccurred2(TSMO2)FieldDescriptions.........................................1044

23-31.TransfertoSystemMemoryOccurred3(TSMO3)FieldDescriptions.........................................1045

23-32.TransfertoSystemMemoryOccurred4(TSMO4)FieldDescriptions.........................................1045

23-33.(TransfertoCommunicationControllerOccurred1(TCCO1)FieldDescriptions.............................1046

23-34.(TransfertoCommunicationControllerOccurred2(TCCO2)FieldDescriptions.............................1046

23-35.(TransfertoCommunicationControllerOccurred3(TCCO3)FieldDescriptions.............................1047

23-36.(TransfertoCommunicationControllerOccurred4(TCCO4)FieldDescriptions.............................1047

23-37.(TransferOccurredOffset(TOOFF)FieldDescriptions..........................................................1048

23-38.ParityErrorAddress(PEADR)FieldDescriptions.................................................................1049

23-39.CodingofParityErrorAddress......................................................................................1049

23-40.TransferErrorInterruptFlag(TEIF)FieldDescriptions...........................................................1050

23-41.TransferErrorInterruptEnableSet(TEIRES).....................................................................1051

23-42.TransferErrorInterruptEnableReset(TEIRER)..................................................................1052

23-43.TriggerTransfertoSystemMemorySet1(TTSMS1)FieldDescriptions......................................1053

23-44.TriggerTransfertoSystemMemoryReset1(TTSMR1)FieldDescriptions..................................1053

23-45.TriggerTransfertoSystemMemorySet2(TTSMS2)FieldDescriptions......................................1054

23-46.TriggerTransfertoSystemMemoryReset2(TTSMR2)FieldDescriptions..................................1054

23-47.TriggerTransfertoSystemMemorySet3(TTSMS3)FieldDescriptions......................................1054

23-48.TriggerTransfertoSystemMemoryReset3(TTSMR3)FieldDescriptions..................................1055

23-49.TriggerTransfertoSystemMemorySet4(TTSMS4)FieldDescriptions......................................1055

23-50.TriggerTransfertoSystemMemoryReset4(TTSMR4)FieldDescriptions..................................1055

23-51.TriggerTransfertoCommunicationControllerSet1(TTCCS1)FieldDescriptions..........................1056

23-52.TriggerTransfertoCommunicationControllerReset1(TTCCR1)FieldDescriptions.......................1056

23-53.TriggerTransfertoCommunicationControllerSet2(TTCCS2)FieldDescriptions..........................1057

23-54.TriggerTransfertoCommunicationControllerReset2(TTCCR2)FieldDescriptions.......................1057

23-55.TriggerTransfertoCommunicationControllerSet3(TTCCS3)FieldDescriptions..........................1057

23-56.TriggerTransfertoCommunicationControllerReset3(TTCCR3)FieldDescriptions.......................1058

23-57.TriggerTransfertoCommunicationControllerSet4(TTCCS4)FieldDescriptions..........................1058

23-58.TriggerTransfertoCommunicationControllerReset4(TTCCR4)FieldDescriptions.......................1058

23-59.EnableTransferonEventtoSystemMemorySet1FieldDescriptions.......................................1059

23-60.EnableTransferonEventtoSystemMemoryReset1(ETESMR1)FieldDescriptions.....................1059

23-61.EnableTransferonEventtoSystemMemorySet2FieldDescriptions.......................................1060

23-62.EnableTransferonEventtoSystemMemoryReset2(ETESMR2)FieldDescriptions.....................1060

23-63.EnableTransferonEventtoSystemMemorySet3FieldDescriptions.......................................1060

23-64.EnableTransferonEventtoSystemMemoryReset3(ETESMR3)FieldDescriptions.....................1061

23-65.EnableTransferonEventtoSystemMemorySet4FieldDescriptions.......................................1061

23-66.EnableTransferonEventtoSystemMemoryReset4(ETESMR4)FieldDescriptions.....................1061

23-67.ClearonEventtoSystemMemorySet1(CESMS1)FieldDescriptions.......................................1062

23-68.ClearonEventtoSystemMemoryReset1(CESMR1)FieldDescriptions...................................1062

23-69.ClearonEventtoSystemMemorySet2(CESMS2)FieldDescriptions.......................................1063

23-70.ClearonEventtoSystemMemoryReset2(CESMR2)FieldDescriptions...................................1063

23-71.ClearonEventtoSystemMemorySet3(CESMS3)FieldDescriptions.......................................1063

23-72.ClearonEventtoSystemMemoryReset3(CESMR3)FieldDescriptions...................................1064

79

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-73.ClearonEventtoSystemMemorySet4(CESMS4)FieldDescriptions.......................................1064

23-74.ClearonEventtoSystemMemoryReset4(CESMR4)FieldDescriptions...................................1064

23-75.TransfertoSystemMemoryInterruptEnableSet1(TSMIES1)FieldDescriptions..........................1065

23-76.TransfertoSystemMemoryInterruptEnableReset1(TSMIER1)FieldDescriptions.......................1065

23-77.TransfertoSystemMemoryInterruptEnableSet2(TSMIES2)FieldDescriptions..........................1066

23-78.TransfertoSystemMemoryInterruptEnableReset2(TSMIER2)FieldDescriptions.......................1066

23-79.TransfertoSystemMemoryInterruptEnableSet3(TSMIES3)FieldDescriptions..........................1066

23-80.TransfertoSystemMemoryInterruptEnableReset3(TSMIER3)FieldDescriptions.......................1067

23-81.TransfertoSystemMemoryInterruptEnableSet4(TSMIES4)FieldDescriptions..........................1067

23-82.TransfertoSystemMemoryInterruptEnableReset4(TSMIER4)FieldDescriptions.......................1067

23-83.TransfertoCommunicationControllerInterruptEnableSet1(TCCIES1)FieldDescriptions..............1068

23-84.TransfertoCommunicationControllerInterruptEnableReset1(TCCIER1)FieldDescriptions...........1068

23-85.TransfertoCommunicationControllerInterruptEnableSet2(TCCIES2)FieldDescriptions..............1069

23-86.TransfertoCommunicationControllerInterruptEnableReset2(TCCIER2)FieldDescriptions...........1069

23-87.TransfertoCommunicationControllerInterruptEnableSet3(TCCIES3)FieldDescriptions..............1070

23-88.TransfertoCommunicationControllerInterruptEnableReset3(TCCIER3)FieldDescriptions...........1070

23-89.TransfertoCommunicationControllerInterruptEnableSet4(TCCIES4)FieldDescriptions..............1071

23-90.TransfertoCommunicationControllerInterruptEnableReset4(TCCIER4)FieldDescriptions...........1071

23-91.TransferConfigurationRAM(TCR)FieldDescriptions...........................................................1072

23-92.ParityInformationinTCRParityTestModeFieldDescriptions.................................................1073

23-93.CommunicationControllerRegisterMap...........................................................................1075

23-94.TestRegister1(TEST1)FieldDescriptions........................................................................1078

23-95.TestRegister2(TEST2)FieldDescriptions........................................................................1082

23-96.LockRegister(LCK)FieldDescriptions.............................................................................1084

23-97.ErrorInterruptRegister(EIR)FieldDescriptions...................................................................1085

23-98.StatusInterruptRegister(SIR)FieldDescriptions.................................................................1087

23-99.ErrorInterruptLineSelectRegister(EILS)FieldDescriptions...................................................1090

23-100.StatusInterruptLineSelectRegister(SILS)FieldDescriptions................................................1092

23-101.ErrorInterruptSet/ResetRegister(EIES,EIER)FieldDescriptions...........................................1094

23-102.StatusInterruptEnableSet/ResetRegister(SIES,SIER)FieldDescriptions................................1096

23-103.InterruptLineEnableRegister(ILE)FieldDescriptions..........................................................1098

23-104.Timer0ConfigurationRegister(T0C)FieldDescriptions........................................................1099

23-105.Timer1ConfigurationRegister(T1C)FieldDescriptions........................................................1100

23-106.StopWatchRegister1(STPW1)FieldDescriptions.............................................................1101

23-107.StopWatchRegister2(STPW2)FieldDescriptions.............................................................1102

23-108.SUCConfigurationRegister1(SUCC1)FieldDescriptions.....................................................1103

23-109.SUCConfigurationRegister2(SUCC2)FieldDescriptions.....................................................1107

23-110.SUCConfigurationRegister3(SUCC3)FieldDescriptions.....................................................1108

23-111.NEMConfigurationRegister(NEMC)FieldDescriptions........................................................1108

23-112.PRTConfigurationRegister1(PRTC1)FieldDescriptions.....................................................1109

23-113.PRTConfigurationRegister2(PRTC2)FieldDescriptions.....................................................1110

23-114.MHDConfigurationRegister(MHDC)FieldDescriptions........................................................1111

23-115.GTUConfigurationRegister1(GTUC1)FieldDescriptions.....................................................1111

23-116.GTUConfigurationRegister2(GTUC2)FieldDescriptions.....................................................1112

23-117.GTUConfigurationRegister3(GTUC3)FieldDescriptions.....................................................1113

23-118.GTUConfigurationRegister4(GTUC4)FieldDescriptions.....................................................1114

23-119.GTUConfigurationRegister5(GTUC5)FieldDescriptions.....................................................1114

23-120.GTUConfigurationRegister6(GTUC6)FieldDescriptions.....................................................1115

23-121.GTUConfigurationRegister7(GTUC7)FieldDescriptions.....................................................1115

80

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

23-122.GTUConfigurationRegister8(GTUC8)FieldDescriptions.....................................................1116

23-123.GTUConfigurationRegister9(GTUC9)FieldDescriptions.....................................................1116

23-124.GTUConfigurationRegister10(GTUC10)FieldDescriptions..................................................1117

23-125.GTUConfigurationRegister11(GTUC11)FieldDescriptions..................................................1118

23-126.CommunicationControllerStatusVectorRegister(CCSV)FieldDescriptions...............................1119

23-127.CommunicationControllerErrorVectorRegister(CCEV)FieldDescriptions.................................1121

23-128.SlotCounterVectorRegister(SCV)FieldDescriptions..........................................................1122

23-129.MacrotickandCycleCounterRegister(MTCCV)FieldDescriptions..........................................1122

23-130.RateCorrectionValueRegister(RCV)FieldDescriptions......................................................1123

23-131.OffsetCorrectionValueRegister(OCV)FieldDescriptions.....................................................1123

23-132.SyncFrameStatusRegister(SFS)FieldDescriptions...........................................................1124

23-133.SymbolWindowandNITStatusRegister(SWNIT)FieldDescriptions........................................1125

23-134.AggregatedChannelStatusRegister(ACS)FieldDescriptions................................................1126

23-135.EvenSyncIDRegister[1...15](ESIDn)FieldDescriptions.....................................................1128

23-136.OddSyncIDRegister[1...15](OSIDn)FieldDescriptions.....................................................1129

23-137.AssignmentofDataBytestoNetworkManagementVector....................................................1130

23-138.MessageRAMConfigurationRegister(MRC)FieldDescriptions..............................................1131

23-139.BufferConfiguration...................................................................................................1132

23-140.FIFORejectionFilterRegister(FRF)FieldDescriptions.........................................................1133

23-141.FIFORejectionFilterMaskRegister(FRFM)FieldDescriptions...............................................1134

23-142.FIFOCriticalLevelRegister(FCL)FieldDescriptions...........................................................1134

23-143.MessageHandlerStatus(MHDS)FieldDescriptions............................................................1135

23-144.LastDynamicTransmitSlot(LDTS)FieldDescriptions..........................................................1136

23-145.FIFOStatusRegister(FSR)FieldDescriptions...................................................................1137

23-146.MessageHandlerConstraintFlags(MHDF)FieldDescriptions................................................1138

23-147.TransmissionRequestRegister(TXRQ1/2/3/4)FieldDescription..............................................1140

23-148.NewDataRegister(NDAT1/2/3/4)FieldDescriptions...........................................................1141

23-149.MessageBufferStatusChangedRegister(MBSC1/2/3/4)FieldDescriptions................................1142

23-150.CoreReleaseRegister(CREL)FieldDescriptions...............................................................1143

23-151.ReleaseCoding.......................................................................................................1143

23-152.EndianRegister(ENDN)FieldDescriptions.......................................................................1143

23-153.WriteDataSectionRegister[1...64](WRDSn)FieldDescriptions............................................1144

23-154.WriteHeaderSectionRegister1(WRHS1)FieldDescriptions.................................................1145

23-155.ChannelFilterControlBitDescriptions.............................................................................1146

23-156.WriteHeaderSectionRegister2(WRHS2)FieldDescriptions.................................................1146

23-157.WriteHeaderSectionRegister3(WRHS3)FieldDescriptions.................................................1147

23-158.InputBufferCommandMaskRegister(IBCM)FieldDescriptions..............................................1148

23-159.InputBufferCommandRequestRegister(IBCR)FieldDescriptions..........................................1149

23-160.ReadDataSectionRegister(RDDSn)FieldDescriptions.......................................................1150

23-161.ReadHeaderSectionRegister1(RDHS1)FieldDescriptions.................................................1151

23-162.ReadHeaderSectionRegister2(RDHS2)FieldDescriptions.................................................1152

23-163.ReadHeaderSectionRegister3(RDHS3)FieldDescriptions.................................................1153

23-164.MessageBufferStatusRegister(MBS)FieldDescriptions......................................................1154

23-165.OutputBufferCommandMaskRegister(MBS)FieldDescriptions............................................1157

23-166.OutputBufferCommandMaskRegister(OBCR)FieldDescriptions..........................................1158

23-167.AssignmentofFlexRayConfigurationParameters..............................................................1161

24-1.ParametersoftheCANBitTime....................................................................................1167

24-2.MessageObjectFieldDescriptions..................................................................................1174

24-3.MessageRAMAddressinginDebug/SuspendandRDAmode.................................................1176

81

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

24-4.MessageInterfaceRegisterSets1and2..........................................................................1178

24-5.MessageInterfaceRegister3........................................................................................1180

24-6.DCANControlRegisters...............................................................................................1199

24-7.CANControlRegisterFieldDescriptions............................................................................1201

24-8.ErrorandStatusRegisterFieldDescriptions.......................................................................1203

24-9.ErrorCounterRegisterFieldDescriptions..........................................................................1205

24-10.BitTimingRegisterFieldDescriptions...............................................................................1206

24-11.InterruptRegisterFieldDescriptions.................................................................................1207

24-12.TestRegisterFieldDescriptions......................................................................................1208

24-13.ParityErrorCodeRegisterFieldDescriptions......................................................................1209

24-14.Auto-Bus-OnTimeRegisterFieldDescriptions....................................................................1210

24-15.TransmissionRequestRegistersFieldDescriptions...............................................................1211

24-16.NewDataRegistersFieldDescriptions..............................................................................1213

24-17.InterruptPendingRegistersFieldDescriptions.....................................................................1215

24-18.MessageValidRegistersFieldDescriptions........................................................................1217

24-19.InterruptMultiplexerRegistersFieldDescriptions..................................................................1218

24-20.IF1/IF2CommandRegisterFieldDescriptions.....................................................................1220

24-21.IF1/IF2MaskRegisterFieldDescriptions...........................................................................1222

24-22.IF1/IF2ArbitrationRegisterFieldDescriptions.....................................................................1223

24-23.IF1/IF2MessageControlRegisterFieldDescriptions.............................................................1225

24-24.IF3ObservationRegisterFieldDescriptions........................................................................1227

24-25.IF3MaskRegisterFieldDescriptions................................................................................1229

24-26.IF3ArbitrationRegisterFieldDescriptions..........................................................................1230

24-27.IF3MessageControlRegisterFieldDescriptions..................................................................1231

24-28.IF3UpdateControlRegisterFieldDescriptions....................................................................1233

24-29.CANTXIOControlRegisterFieldDescriptions....................................................................1234

24-30.CANRXIOControlRegisterFieldDescriptions...................................................................1235

25-1.PinConfigurations.....................................................................................................1240

25-2.ClockingModes........................................................................................................1247

25-3.PinMappingforSIMOPinwithMSBFirst.........................................................................1254

25-4.PinMappingforSOMIPinwithMSBFirst.........................................................................1254

25-5.PinMappingforSIMOPinwithLSBFirst..........................................................................1255

25-6.PinMappingforSOMIPinwithLSBFirst..........................................................................1255

25-7.SPIRegisters...........................................................................................................1268

25-8.SPIGlobalControlRegister0(SPIGCR0)FieldDescriptions....................................................1269

25-9.SPIGlobalControlRegister1(SPIGCR1)FieldDescriptions....................................................1270

25-10.SPIInterruptRegister(SPIINT0)FieldDescriptions...............................................................1271

25-11.SPIInterruptLevelRegister(SPILVL)FieldDescriptions.........................................................1273

25-12.SPIFlagRegister(SPIFLG)FieldDescriptions....................................................................1274

25-13.SPIPinControl(SPIPC0)FieldDescriptions.......................................................................1277

25-14.SPIPinControlRegister(SPIPC1)FieldDescriptions............................................................1278

25-15.SPIPinControlRegister2(SPIPC2)FieldDescriptions..........................................................1280

25-16.SPIPinControlRegister3(SPIPC3)FieldDescriptions..........................................................1281

25-17.SPIPinControlRegister4(SPIPC4)FieldDescriptions..........................................................1282

25-18.SPIPinControlRegister5(SPIPC5)FieldDescriptions..........................................................1284

25-19.SPIPinControlRegister6(SPIPC6)FieldDescriptions..........................................................1286

25-20.SPIPinControlRegister7(SPIPC7)FieldDescriptions..........................................................1287

25-21.SPIPinControlRegister8(SPIPC8)FieldDescriptions..........................................................1288

25-22.SPITransmitDataRegister0(SPIDAT0)FieldDescriptions....................................................1289

82

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

25-23.SPITransmitDataRegister1(SPIDAT1)FieldDescriptions....................................................1290

25-24.SPIReceiveBufferRegister(SPIBUF)FieldDescriptions........................................................1291

25-25.SPIEmulationRegister(SPIEMU)FieldDescriptions.............................................................1293

25-26.SPIDelayRegister(SPIDELAY)FieldDescriptions...............................................................1293

25-27.SPIDefaultChipSelectRegister(SPIDEF)FieldDescriptions..................................................1296

25-28.SPIDataFormatRegisters(SPIFMT[3:0])FieldDescriptions...................................................1297

25-29.TransferGroupInterruptVector0(INTVECT0)....................................................................1299

25-30.TransferGroupInterruptVector1(INTVECT1)....................................................................1300

25-31.SPIParallel/ModuloModeControlRegister(SPIPMCTRL)FieldDescriptions................................1302

25-32.Multi-bufferModeEnableRegister(MIBSPIE)FieldDescriptions...............................................1304

25-33.TGInterruptEnableSetRegister(TGITENST)FieldDescriptions..............................................1305

25-34.TGInterruptEnableClearRegister(TGITENCR)FieldDescriptions...........................................1306

25-35.TransferGroupInterruptLevelSetRegister(TGITLVST)FieldDescriptions..................................1307

25-36.TransferGroupInterruptLevelClearRegister(TGITLVCR)FieldDescriptions...............................1308

25-37.TransferGroupInterruptFlagRegister(TGINTFLG)FieldDescriptions........................................1309

25-38.TickCountRegister(TICKCNT)FieldDescriptions................................................................1310

25-39.LastTGEndPointer(LTGPEND)FieldDescriptions..............................................................1311

25-40.TGControlRegisters(TGxCTRL)FieldDescriptions.............................................................1312

25-41.DMAChannelControlRegister(DMAxCTRL)FieldDescriptions...............................................1315

25-42.MibSPIDMAxCOUNTRegister(ICOUNT)FieldDescriptions...................................................1317

25-43.MibSPIDMALargeCountRegister(DMACNTLEN)FieldDescriptions........................................1318

25-44.Multi-bufferRAMUncorrectableParityErrorControlRegister(UERRCTRL)FieldDescriptions............1318

25-45.Multi-bufferRAMUncorrectableParityErrorStatusRegister(UERRSTAT)FieldDescriptions.............1319

25-46.RXRAMUncorrectableParityErrorAddressRegister(UERRADDR1)FieldDescriptions...................1320

25-47.TXRAMUncorrectableParityErrorAddressRegister(UERRADDR0)FieldDescriptions...................1321

25-48.RXRAMOverrunBufferAddressRegister(RXOVRN_BUF_ADDR)FieldDescriptions......................1322

25-49.I/O-LoopbackTestControlRegister(IOLPBKTSTCR)FieldDescriptions......................................1323

25-50.SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1)FieldDescriptions..........................1325

25-51.SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2)FieldDescriptions..........................1327

25-52.Multi-bufferRAMRegisterSummary................................................................................1330

25-53.Multi-bufferRAMTransmitDataRegisterFieldDescriptions.....................................................1331

25-54.Multi-bufferReceiveBufferRegisterFieldDescriptions...........................................................1333

25-55.TimingParametersofSPI/MibSPIPinsinMasterMode.........................................................1341

25-56.TimingParametersofSPI/MibSPIPinsinSlaveMode...........................................................1343

26-1.SuperfractionalBitModulationforSCIMode(NormalConfiguration)..........................................1352

26-2.SuperfractionalBitModulationforSCIMode(MaximumConfiguration).......................................1353

26-3.SCIMode(MinimumConfiguration).................................................................................1353

26-4.SCI/LINInterrupts.....................................................................................................1360

26-5.ResponseLengthInfoUsingIDBYTEFieldBits[5:4]forLINStandardsEarlierthan1.3...................1367

26-6.ResponseLengthwithSCIFORMAT[18:16]Programming......................................................1367

26-7.SuperfractionalBitModulationforLINMasterModeandSlaveMode.........................................1369

26-8.TimeoutValuesinTbitUnits...........................................................................................1376

26-9.SCI/LINControlRegisters.............................................................................................1388

26-10.SCIGlobalControlRegister0(SCIGCR0)FieldDescriptions...................................................1389

26-11.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions...................................................1390

26-12.SCIReceiverStatusFlags............................................................................................1393

26-13.SCITransmitterStatusFlags.........................................................................................1393

26-14.SCIGlobalControlRegister2(SCIGCR2)FieldDescriptions...................................................1394

26-15.SCISetInterruptRegister(SCISETINT)FieldDescriptions......................................................1395

83

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

26-16.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions................................................1398

26-17.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions..........................................1401

26-18.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions....................................1404

26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions...................................................................1407

26-20.SCIInterruptVectorOffset0(SCIINTVECT0)FieldDescriptions...............................................1414

26-21.SCIInterruptVectorOffset1(SCIINTVECT1)FieldDescriptions...............................................1414

26-22.SCIFormatControlRegister(SCIFORMAT)FieldDescriptions.................................................1415

26-23.BaudRateSelectionRegister(BRS)FieldDescriptions..........................................................1416

26-24.ComparativeBaudValuesforDifferentPValues,AsynchronousMode........................................1417

26-25.ReceiverEmulationDataBuffer(SCIED)FieldDescriptions.....................................................1417

26-26.ReceiverDataBuffer(SCIRD)FieldDescriptions.................................................................1418

26-27.TransmitDataBufferRegister(SCITD)FieldDescriptions.......................................................1419

26-28.SCIPinI/OControlRegister0(SCIPIO0)FieldDescriptions....................................................1419

26-29.SCIPinI/OControlRegister1(SCIPIO1)FieldDescriptions....................................................1420

26-30.LINTXPinControl.....................................................................................................1420

26-31.LINRXPinControl.....................................................................................................1420

26-32.SCIPinI/OControlRegister2(SCIPIO2)FieldDescriptions...................................................1421

26-33.SCIPinI/OControlRegister3(SCIPIO3)FieldDescriptions...................................................1422

26-34.SCIPinI/OControlRegister4(SCIPIO4)FieldDescriptions...................................................1423

26-35.SCIPinI/OControlRegister5(SCIPIO5)FieldDescriptions...................................................1424

26-36.SCIPinI/OControlRegister6(SCIPIO6)FieldDescriptions....................................................1425

26-37.SCIPinI/OControlRegister7(SCIPIO7)FieldDescriptions....................................................1426

26-38.SCIPinI/OControlRegister8(SCIPIO8)FieldDescriptions...................................................1426

26-39.LINCompareRegister(LINCOMPARE)FieldDescriptions......................................................1427

26-40.LINReceiveBuffer0Register(LINRD0)FieldDescriptions......................................................1428

26-41.LINReceiveBuffer1Register(RD1)FieldDescriptions..........................................................1428

26-42.LINMaskRegister(LINMASK)FieldDescriptions.................................................................1429

26-43.LINIdentificationRegister(LINID)FieldDescriptions.............................................................1430

26-44.LINTransmitBuffer0Register(LINTD0)FieldDescriptions.....................................................1431

26-45.LINTransmitBuffer1Register(LINTD1)FieldDescriptions.....................................................1431

26-46.MaximumBaudRateSelectionRegister(MBRS)FieldDescriptions...........................................1432

26-47.Input/OutputErrorEnableRegister(IODFTCTRL)FieldDescriptions..........................................1433

26-48.InputBuffer,OutputBuffer,andPullControlBehaviorasGPIOPins..........................................1436

27-1.SCIInterrupts..........................................................................................................1447

27-2.DMAandInterruptRequestsinMultiprocessorModes...........................................................1448

27-3.SCIControlRegistersSummary.....................................................................................1452

27-4.SCIGlobalControlRegister0(SCIGCR0)FiedDescriptions....................................................1453

27-5.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions...................................................1454

27-6.SCISetInterruptRegister(SCISETINT)FieldDescriptions......................................................1457

27-7.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions................................................1459

27-8.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions..........................................1461

27-9.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions....................................1462

27-10.SCIFlagsRegister(SCIFLR)FieldDescriptions...................................................................1464

27-11.SCIReceiverStatusFlags...........................................................................................1467

27-12.SCITransmitterStatusFlags........................................................................................1467

27-13.SCIInterruptVectorOffset0(SCIINTVECT0)FieldDescriptions...............................................1468

27-14.SCIInterruptVectorOffset1(SCIINTVECT1)FieldDescriptions...............................................1468

27-15.SCIFormatControlRegister(SCIFORMAT)FieldDescriptions.................................................1469

27-16.BaudRateSelectionRegister(BRS)FieldDescriptions.........................................................1470

84

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

27-17.ComparativeBaudValuesforDifferentPValues,AsynchronousMode.......................................1470

27-18.ReceiverEmulationDataBuffer(SCIED)FieldDescriptions.....................................................1471

27-19.ReceiverDataBuffer(SCIRD)FieldDescriptions.................................................................1471

27-20.TransmitDataBufferRegister(SCITD)FieldDescriptions.......................................................1472

27-21.SCIPinI/OControlRegister0(SCIPIO0)FieldDescriptions....................................................1472

27-22.SCIPinI/OControlRegister1(SCIPIO1)FieldDescriptions....................................................1473

27-23.SCITXPinControl.....................................................................................................1473

27-24.SCIRXPinControl.....................................................................................................1473

27-25.SCIPinI/OControlRegister2(SCIPIO2)FieldDescriptions...................................................1474

27-26.SCIPinI/OControlRegister3(SCIPIO3)FieldDescriptions...................................................1475

27-27.SCIPinI/OControlRegister4(SCIPIO4)FieldDescriptions...................................................1476

27-28.SCIPinI/OControlRegister5(SCIPIO5)FieldDescriptions...................................................1477

27-29.SCIPinI/OControlRegister6(SCIPIO6)FieldDescriptions....................................................1478

27-30.SCIPinI/OControlRegister7(SCIPIO7)FieldDescriptions....................................................1479

27-31.SCIPinI/OControlRegister8(SCIPIO8)FieldDescriptions...................................................1479

27-32.Input/OutputErrorEnableRegister(IODFTCTRL)FieldDescriptions..........................................1480

27-33.InputBuffer,OutputBuffer,andPullControlBehaviorasGPIOPins..........................................1483

28-1.WaystoGenerateaNACKBit.......................................................................................1492

28-2.InterruptRequestsGeneratedbyI2CModule.....................................................................1497

28-3.I2CControlRegisterSummary......................................................................................1500

28-4.I2COwnAddressManagerRegister(I2COAR)FieldDescriptions.............................................1501

28-5.CorrectModeforBitsOA.9:0........................................................................................1501

28-6.I2CInterruptMaskRegister(I2CIMR)FieldDescriptions........................................................1502

28-7.I2CStatusRegister(I2CSTR)FieldDescriptions.................................................................1503

28-8.I2CClockDividerLowRegister(I2CCKL)FieldDescriptions...................................................1506

28-9.I2CClockControlHighRegister(I2CCKH)FieldDescriptions..................................................1506

28-10.I2CDataCountRegister(I2CCNT)FieldDescriptions...........................................................1507

28-11.I2CDataReceiveRegister(I2CDRR)FieldDescriptions........................................................1507

28-12.I2CSlaveAddressRegister(I2CSAR)FieldDescriptions.......................................................1508

28-13.CorrectModesforBitsSA(9–0).....................................................................................1508

28-14.I2CDataTransmitRegister(I2CDXR)FieldDescriptions.......................................................1508

28-15.I2CModeRegister(I2CMDR)FieldDescriptions.................................................................1509

28-16.I2CModuleCondition,BusActivity,andMode....................................................................1511

28-17.I2CModuleOperatingModes........................................................................................1511

28-18.NumberofBitsSentonBus..........................................................................................1511

28-19.I2CInterruptVectorRegister(I2CIVR)FieldDescriptions.......................................................1512

28-20.InterruptCodesforINTCODEBit....................................................................................1512

28-21.I2CExtendedModeRegister(I2CEMDR)FieldDescriptions....................................................1513

28-22.I2CPrescaleRegister(I2CPSC)FieldDescriptions..............................................................1513

28-23.I2CPeripheralIDRegister1(I2CPID1)FieldDescriptions......................................................1514

28-24.I2CPeripheralIDRegister2(I2CPID2)FieldDescriptions......................................................1514

28-25.I2CDMAControlRegister(I2CDMACR)FieldDescriptions.....................................................1515

28-26.I2CPinFunctionRegister(I2CPFNC)FieldDescriptions........................................................1515

28-27.I2CPinDirectionRegister(I2CPDIR)FieldDescriptions........................................................1516

28-28.I2CDataInputRegister(I2CDIN)FieldDescriptions.............................................................1516

28-29.I2CDataOutputRegister(I2CDOUT)FieldDescriptions........................................................1517

28-30.I2CDataSetRegister(I2CDSET)FieldDescriptions.............................................................1517

28-31.I2CDataClearRegister(I2CDSET)FieldDescriptions...........................................................1518

28-32.I2CPinOpenDrainRegister(I2CPDR)FieldDescriptions.......................................................1518

85

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

28-33.I2CPullDisableRegister(I2CPDIS)FieldDescriptions..........................................................1519

28-34.I2CPullSelectRegister(I2CPSEL)FieldDescriptions...........................................................1519

28-35.InputBuffer,OutputBuffer,andPullControlBehaviorasGPIOPins..........................................1520

28-36.I2CPinsSlewRateSelectRegister(I2CSRS)FieldDescriptions...............................................1520

29-1.EMACandMDIOSignalsforMIIInterface..........................................................................1527

29-2.EMACandMDIOSignalsforRMIIInterface........................................................................1528

29-3.MDIOMultiplexingControl............................................................................................1529

29-4.MII/RMIIMultiplexingControl........................................................................................1529

29-5.EthernetFrameDescription...........................................................................................1530

29-6.BasicDescriptorDescription..........................................................................................1532

29-7.ReceiveFrameTreatmentSummary................................................................................1557

29-8.MiddleofFrameOverrunTreatment.................................................................................1558

29-9.EmulationControl......................................................................................................1568

29-10.EMACControlModuleRegisters.....................................................................................1569

29-11.EMACControlModuleRevisionIDRegister(REVID)FieldDescriptions......................................1570

29-12.EMACControlModuleSoftwareResetRegister(SOFTRESET)................................................1570

29-13.EMACControlModuleInterruptControlRegister(INTCONTROL)..............................................1571

29-14.EMACControlModuleReceiveThresholdInterruptEnableRegister(C0RXTHRESHEN)..................1572

29-15.EMACControlModuleReceiveInterruptEnableRegister(C0RXEN)..........................................1573

29-16.EMACControlModuleTransmitInterruptEnableRegister(C0TXEN)..........................................1574

29-17.EMACControlModuleMiscellaneousInterruptEnableRegister(C0MISCEN)................................1575

29-18.EMACControlModuleReceiveThresholdInterruptStatusRegister(C0RXTHRESHSTAT)................1576

29-19.EMACControlModuleReceiveInterruptStatusRegister(C0RXSTAT)........................................1577

29-20.EMACControlModuleTransmitInterruptStatusRegister(C0TXSTAT).......................................1578

29-21.EMACControlModuleMiscellaneousInterruptStatusRegister(C0MISCSTAT).............................1579

29-22.EMACControlModuleReceiveInterruptsPerMillisecondRegister(C0RXIMAX)............................1580

29-23.EMACControlModuleTransmitInterruptsPerMillisecondRegister(C0TXIMAX)...........................1581

29-24.ManagementDataInput/Output(MDIO)Registers................................................................1582

29-25.MDIORevisionIDRegister(REVID)FieldDescriptions..........................................................1582

29-26.MDIOControlRegister(CONTROL)FieldDescriptions..........................................................1583

29-27.PHYAcknowledgeStatusRegister(ALIVE)FieldDescriptions..................................................1584

29-28.PHYLinkStatusRegister(LINK)FieldDescriptions..............................................................1584

29-29.MDIOLinkStatusChangeInterrupt(Unmasked)Register(LINKINTRAW)FieldDescriptions..............1585

29-30.MDIOLinkStatusChangeInterrupt(Masked)Register(LINKINTMASKED)FieldDescriptions............1586

29-31.MDIOUserCommandCompleteInterrupt(Unmasked)Register(USERINTRAW)FieldDescriptions.....1587

29-32.MDIOUserCommandCompleteInterrupt(Masked)Register(USERINTMASKED)FieldDescriptions...1588

29-33.MDIOUserCommandCompleteInterruptMaskSetRegister(USERINTMASKSET)FieldDescriptions.1589

29-34.MDIOUserCommandCompleteInterruptMaskClearRegister(USERINTMASKCLEAR)Field

Descriptions.............................................................................................................1590

29-35.MDIOUserAccessRegister0(USERACCESS0)FieldDescriptions...........................................1591

29-36.MDIOUserPHYSelectRegister0(USERPHYSEL0)FieldDescriptions......................................1592

29-37.MDIOUserAccessRegister1(USERACCESS1)FieldDescriptions...........................................1593

29-38.MDIOUserPHYSelectRegister1(USERPHYSEL1)FieldDescriptions......................................1594

29-39.EthernetMediaAccessController(EMAC)Registers.............................................................1595

29-40.TransmitRevisionIDRegister(TXREVID)FieldDescriptions...................................................1598

29-41.TransmitControlRegister(TXCONTROL)FieldDescriptions....................................................1598

29-42.TransmitTeardownRegister(TXTEARDOWN)FieldDescriptions..............................................1599

29-43.ReceiveRevisionIDRegister(RXREVID)FieldDescriptions....................................................1599

29-44.ReceiveControlRegister(RXCONTROL)FieldDescriptions....................................................1600

86

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

29-45.ReceiveTeardownRegister(RXTEARDOWN)FieldDescriptions..............................................1600

29-46.TransmitInterruptStatus(Unmasked)Register(TXINTSTATRAW)FieldDescriptions......................1601

29-47.TransmitInterruptStatus(Masked)Register(TXINTSTATMASKED)FieldDescriptions....................1602

29-48.TransmitInterruptMaskSetRegister(TXINTMASKSET)FieldDescriptions..................................1603

29-49.TransmitInterruptMaskClearRegister(TXINTMASKCLEAR)FieldDescriptions............................1604

29-50.MACInputVectorRegister(MACINVECTOR)FieldDescriptions...............................................1605

29-51.MACEndOfInterruptVectorRegister(MACEOIVECTOR)FieldDescriptions................................1606

29-52.ReceiveInterruptStatus(Unmasked)Register(RXINTSTATRAW)FieldDescriptions......................1607

29-53.ReceiveInterruptStatus(Masked)Register(RXINTSTATMASKED)FieldDescriptions.....................1608

29-54.ReceiveInterruptMaskSetRegister(RXINTMASKSET)FieldDescriptions..................................1609

29-55.ReceiveInterruptMaskClearRegister(RXINTMASKCLEAR)FieldDescriptions............................1610

29-56.MACInterruptStatus(Unmasked)Register(MACINTSTATRAW)FieldDescriptions........................1611

29-57.MACInterruptStatus(Masked)Register(MACINTSTATMASKED)FieldDescriptions......................1611

29-58.MACInterruptMaskSetRegister(MACINTMASKSET)FieldDescriptions....................................1612

29-59.MACInterruptMaskClearRegister(MACINTMASKCLEAR)FieldDescriptions..............................1612

29-60.ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)Field

Descriptions.............................................................................................................1613

29-61.ReceiveUnicastEnableSetRegister(RXUNICASTSET)FieldDescriptions..................................1615

29-62.ReceiveUnicastClearRegister(RXUNICASTCLEAR)FieldDescriptions.....................................1616

29-63.ReceiveMaximumLengthRegister(RXMAXLEN)FieldDescriptions..........................................1616

29-64.ReceiveBufferOffsetRegister(RXBUFFEROFFSET)FieldDescriptions.....................................1617

29-65.ReceiveFilterLowPriorityFrameThresholdRegister(RXFILTERLOWTHRESH)FieldDescriptions.....1617

29-66.ReceiveChannelnFlowControlThresholdRegister(RXnFLOWTHRESH)FieldDescriptions............1618

29-67.ReceiveChannelnFreeBufferCountRegister(RXnFREEBUFFER)FieldDescriptions....................1618

29-68.MACControlRegister(MACCONTROL)FieldDescriptions......................................................1619

29-69.MACStatusRegister(MACSTATUS)FieldDescriptions.........................................................1621

29-70.EmulationControlRegister(EMCONTROL)FieldDescriptions.................................................1623

29-71.FIFOControlRegister(FIFOCONTROL)FieldDescriptions.....................................................1623

29-72.MACConfigurationRegister(MACCONFIG)FieldDescriptions.................................................1624

29-73.SoftResetRegister(SOFTRESET)FieldDescriptions...........................................................1624

29-74.MACSourceAddressLowBytesRegister(MACSRCADDRLO)FieldDescriptions..........................1625

29-75.MACSourceAddressHighBytesRegister(MACSRCADDRHI)FieldDescriptions..........................1625

29-76.MACHashAddressRegister1(MACHASH1)FieldDescriptions...............................................1626

29-77.MACHashAddressRegister2(MACHASH2)FieldDescriptions...............................................1626

29-78.BackOffTestRegister(BOFFTEST)FieldDescriptions..........................................................1627

29-79.TransmitPacingAlgorithmTestRegister(TPACETEST)FieldDescriptions..................................1627

29-80.ReceivePauseTimerRegister(RXPAUSE)FieldDescriptions.................................................1628

29-81.TransmitPauseTimerRegister(TXPAUSE)FieldDescriptions.................................................1628

29-82.MACAddressLowBytesRegister(MACADDRLO)FieldDescriptions.........................................1629

29-83.MACAddressHighBytesRegister(MACADDRHI)FieldDescriptions.........................................1630

29-84.MACIndexRegister(MACINDEX)FieldDescriptions.............................................................1630

29-85.TransmitChannelnDMAHeadDescriptorPointerRegister(TXnHDP)FieldDescriptions.................1631

29-86.ReceiveChannelnDMAHeadDescriptorPointerRegister(RXnHDP)FieldDescriptions..................1631

29-87.TransmitChannelnCompletionPointerRegister(TXnCP)FieldDescriptions................................1632

29-88.ReceiveChannelnCompletionPointerRegister(RXnCP)FieldDescriptions................................1632

30-1.EncodingofDestinationBitsinTraceModePacketFormat.....................................................1645

30-2.EncodingofStatusBitsinTraceModePacketFormat...........................................................1645

30-3.EncodingofWriteSizeinPacketFormat...........................................................................1645

30-4.NumberofClockCyclesperPacket.................................................................................1646

87

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

30-5.PinsUsedforDataCommunication..................................................................................1646

30-6.DMMRegistersSummary.............................................................................................1649

30-7.DMMGlobalControlRegister(DMMGLBCTRL)FieldDescriptions.............................................1650

30-8.DMMInterruptSetRegister(DMMINTSET)FieldDescriptions..................................................1652

30-9.DMMInterruptClearRegister(DMMINTCLR)FieldDescriptions...............................................1656

30-10.DMMInterruptLevelRegister(DMMINTLVL)FieldDescriptions................................................1661

30-11.DMMInterruptFlagRegister(DMMINTFLG)FieldDescriptions.................................................1663

30-12.DMMInterruptOffset1Register(DMMOFF1)FieldDescriptions...............................................1667

30-13.DMMInterruptOffset2Register(DMMOFF1)FieldDescriptions...............................................1668

30-14.DMMDirectDataModeDestinationRegister(DMMDDMDEST)FieldDescriptions..........................1669

30-15.DMMDirectDataModeBlocksizeRegister(DMMDDMBL)FieldDescriptions................................1669

30-16.DMMDirectDataModePointerRegister(DMMDDMPT)FieldDescriptions..................................1670

30-17.DMMDirectDataModeInterruptPointerRegister(DMMINTPT)FieldDescriptions.........................1670

30-18.DMMDestinationxRegion1(DMMDESTxREG1)FieldDescriptions..........................................1671

30-19.DMMDestinationxBlocksize1(DMMDESTxBL1)FieldDescriptions..........................................1672

30-20.DMMDestinationxRegion2(DMMDESTxREG2)FieldDescriptions..........................................1673

30-21.DMMDestinationxBlocksize2(DMMDESTxBL2)FieldDescriptions..........................................1674

30-22.DMMPinControl0(DMMPC0)FieldDescriptions................................................................1675

30-23.DMMPinControl1(DMMPC1)FieldDescriptions................................................................1676

30-24.DMMPinControl2(DMMPC2)FieldDescriptions................................................................1678

30-25.DMMPinControl3(DMMPC3)FieldDescriptions................................................................1679

30-26.DMMPinControl4(DMMPC4)FieldDescriptions................................................................1680

30-27.DMMPinControl5(DMMPC5)FieldDescriptions................................................................1682

30-28.DMMPinControl6(DMMPC6)FieldDescriptions................................................................1683

30-29.DMMPinControl7(DMMPC7)FieldDescriptions................................................................1685

30-30.DMMPinControl8(DMMPC8)FieldDescriptions................................................................1686

31-1.EncodingofRAMBitsinTraceModePacketFormat.............................................................1690

31-2.EncodingofStatusBitsinTraceModePacketFormat...........................................................1691

31-3.EncodingofSIZEbitsinTraceModePacketFormat.............................................................1691

31-4.EncodingofREGinTraceModePacketFormat..................................................................1691

31-5.NumberofTransfers/Packet..........................................................................................1691

31-6.ModuleRegisters.......................................................................................................1696

31-7.RTPGlobalControlRegister(RTPGLBCTRL)FieldDescriptions...............................................1697

31-8.FIFOCorrespondingAddresses......................................................................................1699

31-9.PinsUsedforDataCommunication..................................................................................1699

31-10.RTPTraceEnableRegister(RTPTRENA)FieldDescriptions...................................................1700

31-11.RTPGlobalStatusRegister(RTPGSR)[offset=08h]FieldDescriptions......................................1701

31-12.RTPRAM1TraceRegion[1:2]Register(RTPRAM1REG[1:2])FieldDescriptions...........................1703

31-13.RTPRAM2TraceRegion[1:2]Register(RTPRAM2REG[1:2])FieldDescriptions...........................1704

31-14.RTPPeripheralTraceRegion[1:2]Register(RTPPERREG[1:2])FieldDescriptions.........................1705

31-15.RTPDirectDataModeWriteRegister(RTPDDMW)[offset=2Ch]FieldDescriptions.......................1706

31-16.RTPPinControl0Register(RTPPC0)[offset=34h]FieldDescriptions.......................................1707

31-17.RTPPinControl1Register(RTPPC1)FieldDescriptions........................................................1708

31-18.RTPPinControl2Register(RTPPC2)[offset=3Ch]FieldDescriptions.......................................1709

31-19.RTPPinControl3Register(RTPPC3)FieldDescriptions........................................................1710

31-20.RTPPinControl4Register(RTPPC4)FieldDescriptions........................................................1711

31-21.RTPPinControl5Register(RTPPC5)[offset=48h]FieldDescriptions.......................................1712

31-22.RTPPinControl6Register(RTPPC6)FieldDescriptions........................................................1713

31-23.RTPPinControl7Register(RTPPC7)FieldDescriptions........................................................1715

88

ListofTables

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

31-24.RTPPinControl8Register(RTPPC8)[offset=54h]FieldDescriptions.......................................1716

32-1.ESMSignalsSetbyeFuseController...............................................................................1718

32-2.eFuseControllerRegisters............................................................................................1721

32-3.EFCBoundaryRegister(EFCBOUND)FieldDescriptions......................................................1721

32-4.EFCPinsRegister(EFCPINS)FieldDescriptions.................................................................1723

32-5.EFCErrorStatusRegister(EFCERRSTAT)FieldDescriptions..................................................1724

32-6.EFCSelfTestCyclesRegister(EFCSTCY)FieldDescriptions.................................................1724

32-7.EFCSelfTestCyclesRegister(EFCSTSIG)FieldDescriptions.................................................1725

A-1.RevisionHistory........................................................................................................1726

89

SPNU499B–November2012–RevisedAugust2013

ListofTables

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Preface

SPNU499B–November2012–RevisedAugust2013

ReadThisFirst

AboutThisManual

ThisTechnicalReferenceManual(TRM)detailstheintegration,theenvironment,thefunctional

description,andtheprogrammingmodelsforeachperipheralandsubsysteminthedevice.

RelatedDocumentationFromTexasInstruments

Foracompletelistingofrelateddocumentationanddevelopment-supporttools,visittheTexas

Instrumentswebsiteatwww.ti.com.

90

ReadThisFirst

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter1

SPNU499B–November2012–RevisedAugust2013

Introduction

Topic...........................................................................................................................Page

1.1DesignedforSafetyApplications........................................................................92

1.2FamilyDescription............................................................................................92

1.3EndianismConsiderations.................................................................................95

91

SPNU499B–November2012–RevisedAugust2013

Introduction

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DesignedforSafetyApplicationswww.ti.com

1.1DesignedforSafetyApplications

TheTMS570LS31x/21xdevicearchitecturehasbeendesignedfromthegrounduptosimplify

developmentoffunctionallysafesystems.Thebasicarchitecturalconceptisknownasasafeisland

approach.Power,clock,reset,andbasicprocessingfunctionareprotectedtoahighlevelofdiagnostic

coverageinhardware.Someofthekeyfeaturesofthesafeislandregionare:

•AdualcorelockstepprocessingsolutionbuiltaroundARM®Cortex™-R4FCPUwhichdetectsfailures

atthecoreboundaryonacyclebycyclebasis.Specialmeasuresinprocessorlayout,clock

distribution,powerdistribution,resetdistribution,andtemporaldiversityareallimplementedtomitigate

commoncausefailuresofthelogicalCPUanditschecker.

•HardwareBISTcontrollerswhichprovideanextremelyhighlevelofdiagnosticcoverageforthe

lockstepCPUsandSRAMsinthesystem,whileexecutingfasterandconsuminglessmemorythan

equivalentsoftware-basedself-testsolutions

•ECContheSRAMandflashmemoriestightlycoupledtotheR4F.TheECCcontrollersarelocated

insidetheCPU.Thisapproachhastwokeyadvantages:

–TheinterconnectbetweenCPUandthememoryisalsocoveredbythediagnostic

–TheECClogicitselfischeckedonacyclebycyclebasis

•Onboardvoltageandresetmonitoringlogic

•OnboardoscillatorandPLLfailuredetectionlogicincludingabackupRCoscillatorwhichcanbe

utilizeduponfailure

TheTMS570LS31x/21xdevicearchitecturealsoincludesmanyfeaturestosimplifydiagnosticsof

remaininglogicsuchas:

•Continuousparitydiagnosticsonallperipheralmemories

•AnaloganddigitalloopbacktotestforshortsonI/O

•HWself-testanddiagnosticsontheADCmoduletocheckintegrityofbothanaloginputsandtheADC

coreconversionfunction

•ADMAdrivenhardwareengineforthebackgroundcalculationofCRCsignaturesduringdatatransfers

•Acentralizederrorreportingfunctionincludingastatusoutputpintoenableexternalmonitoringofthe

devicestatus

1.2FamilyDescription

TheTMS570LS31x/21xintegratestheARM®Cortex™-R4FFloatingPointCPUwhichoffersanefficient

1.6DMIPS/MHzandhasconfigurationswhichcanrunupto180MHzprovidingupto288DMIPS.The

devicesupportsthebig-endian[BE32]format.

TheTMS570LS31x/21xhasupto3MBintegratedFlashandupto256KBdataRAMconfigurationswith

singlebiterrorcorrectionanddoublebiterrordetection.Theflashmemoryonthisdeviceisanonvolatile,

electricallyerasableandprogrammablememoryimplementedwitha64-bit-widedatabusinterface.The

flashoperatesona3.3Vsupplyinput(samelevelasI/Osupply)forallread,programanderase

operations.Wheninpipelinemode,theflashoperateswithasystemclockfrequencyofupto180MHz.

TheSRAMsupportssingle-cycleread/writeaccessesinbyte,halfword,andwordmodes.

TheTMS570LS31x/21xdevicefeaturesperipheralsforreal-timecontrol-basedapplications,includingtwo

NextGenerationHighEndTimer(N2HET)timingcoprocessorswithupto40totalIOterminalsanda12-

bitAtoDconvertersupportingupto24inputs.

TheN2HETisanadvancedintelligenttimerthatprovidessophisticatedtimingfunctionsforreal-time

applications.Thetimerissoftware-controlled,usingareducedinstructionset,withaspecializedtimer

micromachineandanattachedI/Oport.TheN2HETcanbeusedforpulsewidthmodulatedoutputs,

captureorcompareinputs,orgeneral-purposeI/O.Itisespeciallywellsuitedforapplicationsrequiring

multiplesensorinformationanddriveactuatorswithcomplexandaccuratetimepulses.AHighEndTimer

TransferUnit(HET-TU)canperformDMAtypetransactionstotransferN2HETdatatoorfrommain

memory.AMemoryProtectionUnit(MPU)isbuiltintotheHET-TU.

92

Introduction

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFamilyDescription

Thedevicehastwo12-bit-resolutionMibADCswith24totalchannelsand64wordsofparityprotected

bufferRAMeach.TheMibADCchannelscanbeconvertedindividuallyorcanbegroupedbysoftwarefor

sequentialconversionsequences.SixteenchannelsaresharedbetweenthetwoMibADCs.Thereare

threeseparategroupings.Eachsequencecanbeconvertedoncewhentriggeredorconfiguredfor

continuousconversionmode.

Thedevicehasmultiplecommunicationinterfaces:threeMibSPIs,uptotwoSPIs,oneLIN,oneSCI,three

DCANs,oneI2C,oneEthernet,andoneFlexRay™controller.TheSPIprovidesaconvenientmethodof

serialinteractionforhigh-speedcommunicationsbetweensimilarshift-registertypedevices.TheLIN

supportstheLocalInterconnectstandard2.0andcanbeusedasaUARTinfull-duplexmodeusingthe

standardNon-Return-to-Zero(NRZ)format.TheDCANsupportstheCAN2.0Bprotocolstandardand

usesaserial,multimastercommunicationprotocolthatefficientlysupportsdistributedreal-timecontrolwith

robustcommunicationratesofupto1megabitpersecond(Mbps).TheDCANisidealforapplications

operatinginnoisyandharshenvironments(e.g.,automotiveandindustrialfields)thatrequirereliable

serialcommunicationormultiplexedwiring.TheFlexRayusesadualchannelserial,fixedtimebase

multimastercommunicationprotocolwithcommunicationratesof10megabitspersecond(Mbps)per

channel.AFlexRayTransferUnit(FTU)enablesautonomoustransfersofFlexRaydatatoandfrommain

CPUmemory.Transfersareprotectedbyadedicated,built-inMemoryProtectionUnit(MPU).The

EthernetmodulesupportsMIIandMDIOinterfaces.

TheI2Cmoduleisamulti-mastercommunicationmoduleprovidinganinterfacebetweenthe

microcontrollerandanI2CcompatibledeviceviatheI2Cserialbus.TheI2Csupportsboth100Kbpsand

400Kbpsspeeds.

Thefrequency-modulatedphase-lockedloop(FMPLL)clockmoduleisusedtomultiplytheexternal

frequencyreferencetoahigherfrequencyforinternaluse.TheFMPLLprovidesoneofthesevenpossible

clocksourceinputstotheglobalclockmodule(GCM).TheGCMmodulemanagesthemappingbetween

theavailableclocksourcesandthedeviceclockdomains.

Thedevicealsohasanexternalclockprescaler(ECP)modulethatwhenenabled,outputsacontinuous

externalclockontheECLKpin/ball.TheECLKfrequencyisauser-programmableratiooftheperipheral

interfaceclock(VCLK)frequency.Thislowfrequencyoutputcanbemonitoredexternallyasanindicatorof

thedeviceoperatingfrequency.

TheDirectMemoryAccessController(DMA)has16channels,32controlpacketsandparityprotectionon

itsmemory.AMemoryProtectionUnit(MPU)isbuiltintotheDMAtoprotectmemoryagainsterroneous

transfers.

TheErrorSignalingModule(ESM)monitorsalldeviceerrorsanddetermineswhetheraninterruptor

externalErrorpin/ballistriggeredwhenafaultisdetected.ThenERRORcanbemonitoredexternallyas

anindicatorofafaultconditioninthemicrocontroller.

TheExternalMemoryInterface(EMIF)providesamemoryextensiontoasynchronousandsynchronous

memoriesorotherslavedevices.

Severalinterfacesareimplementedtoenhancethedebuggingcapabilitiesofapplicationcode.Inaddition

tothebuiltinARMCortex™-R4FCoreSight™debugfeatures.AnExternalTraceMacrocell(ETM)

providesinstructionanddatatraceofprogramexecution.Forinstrumentationpurposes,aRAMTracePort

Module(RTP)isimplementedtosupporthigh-speedtracingofRAMandperipheralaccessesbytheCPU

oranyothermaster.ADataModificationModule(DMM)givestheabilitytowriteexternaldataintothe

devicememory.BoththeRTPandDMMhavenooronlyminimumimpactontheprogramexecutiontime

oftheapplicationcode.AParameterOverlayModule(POM)canre-routeFlashaccessestointernal

memoryortotheEMIF,thusavoidingthere-programmingstepsnecessaryforparameterupdatesin

Flash.

Withintegratedsafetyfeaturesandawidechoiceofcommunicationandcontrolperipherals,the

TMS570LS31x/21xisanidealsolutionforhighperformancerealtimecontrolapplicationswithsafety

criticalrequirements.

93

SPNU499B–November2012–RevisedAugust2013

Introduction

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DMA

POM

DMM

HTU1

FTU

HTU2

EMAC

Switched Central Resource

Switched Central Resource

Main Cross Bar:Arbitration and Prioritization Control

CRC

Switched Central ResourcePeripheral Central Resource Bridge

Dual Cortex-R4FCPUs in Lockstep

EMAC SlavesSwitched Central Resource

MibADC1

DCAN1

MibADC2DCAN2

DCAN3LIN

SCI

I2C

N2HET1

FlexRay

GIO

N2HET2

SPI464 KB Flashfor EEPROMEmulationwith ECCMDIO

MII

MibSPI1

CAN1_RX

CAN1_TX

CAN2_RX

CAN2_TX

CAN3_RX

CAN3_TX

MIBSPI1_CLK

MIBSPI1_SIMO[1:0]

MIBSPI1_SOMI[1:0]

MIBSPI1_nCS[5:0]

MIBSPI1_nENASPI2

SPI2_CLK

SPI2_SIMO

SPI2_SOMI

SPI2_nCS[1:0]

SPI2_nENAMibSPI3

MIBSPI3_CLK

MIBSPI3_SIMO

MIBSPI3_SOMI

MIBSPI3_nCS[5:0]

MIBSPI3_nENA

SPI4_CLKSPI4_SIMOSPI4_SOMISPI4_nCS0SPI4_nENAMibSPI5

MIBSPI5_SIMO[3:0]MIBSPI5_SOMI[3:0]MIBSPI5_nCS[3:0]MIBSPI5_nENALIN_RXLIN_TXSCI_RXSCI_TX

IOMM

PMM

VIM

RTI

DCC1

DCC2

3MFlashwithECCETM-R4RTP64K64K64K64K

RTPCLK

RTPnENA

RTPSYNC

RTPDATA[15:0]

TRACECLKIN

TRACECLK

TRACECTL

ETMDATA[31:0]DMMCLK

DMMnENA

DMMSYNC

DMMDATA[15:0]

256KRAMwithECC

MDCLKMDIOMII_RXD[3:0]MII_RXERMII_TXD[3:0]MII_TXENMII_TXCLKMII_RXCLKMII_CRSMII_RXDVMII_COLEMIFEMIF_CLKEMIF_CKEEMIF_nCS[4:2]EMIF_nCS[0]EMIF_ADDR[21:0]EMIF_BA[1:0]EMIF_DATA[15:0]EMIF_nDQM[1:0]EMIF_nOEEMIF_nWEEMIF_nRASEMIF_nCASEMIF_nRWEMIF_nWAITVSSADVCCADI2C_SCLI2C_SDAFRAY_RX1FRAY_TX1FRAY_TXEN1FRAY_RX2FRAY_TX2FRAY_TXEN2GIOB[7:0]GIOA[7:0]N2HET2[18,16]N2HET2[15:0]N2HET1[31:0]VCCADVSSADADREFHIADREFLOAD1EVTAD1IN[7:0]AD1IN[23:8]AD2IN[15:0]AD2EVTADREFHIADREFLO

# 2# 3# 4#1#2

#1always onCore/RAMRAMCore#5#3

Color Legend for Power Domains

SYS

nPORRST

nRST

ECLKESM

nERROR

N2HET1_PIN_nDIS

N2HET2_PIN_nDIS



FamilyDescriptionwww.ti.com

Figure1-1.BlockDiagram

94

Introduction

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEndianismConsiderations

1.3EndianismConsiderations

1.3.1TMS570:BigEndian(BE32)

TheTMS570familyisbasedontheARM®Cortex™-R4Fcore.ARMhasdesignedthiscoretobeusedin

big-endianandlittle-endiansystems.FortheTITMS570family,theendiannesshasbeenconfiguredto

BE32.Big-endiansystemsstorethemost-significantbyteofamulti-bytedatafieldinthelowestmemory

address.Also,theaddressofthemulti-bytedatafieldisthelowestaddress.Followingisanexampleof

thephysicaladdressesofindividualbytes.

Figure1-2.Example:SPIDELAY–0xFFF7F448

31

24

23

16

C2TDELAY[7:0]

T2CDELAY[7:0]

Byte3-0xFFF7F448

Byte2-0xFFF7F449

15

8

7

0

T2EDELAY[7:0]

C2EDELAY[7:0]

Byte1-0xFFF7F44A

Byte0-0xFFF7F44B

32-bitaccessestothisregistershouldusethelowestaddress,thatis,0xFFF7F448.Writing0x11223344

toaddress0xFFF7F448showsthefollowingwhenviewingthememoryin8-bitand32-bitmodes.

AssuchtheheadersprovidedaspartofHALCoGendotaketheendiannessintoaccountandprovide

headerstructuresthatareagnostictoendianness.ThisisachievedbyusingCdirectivesforthecompiler

thatmakeuseofthecompileoptionsconfiguredfortheprojectbytheuser(__little_endian__usedin

CodeComposerStudiocodegentools).Thisdirectivemayneedtobeadaptedforothercompilers.

#ifdef__little_endian__

charC2EDELAY:8U;/**lt;0xF448:CStoENA*/

charT2EDELAY:8U;/**lt;0xF449:TransmittoENA*/

charT2CDELAY:8U;/**lt;0xF44A:TransmittoCS*/

charC2TDELAY:8U;/**lt;0xF44B:CStoTransmit*/

#else

charC2TDELAY:8U;/**lt;0xF448:CStoTransmit*/

charT2CDELAY:8U;/**lt;0xF449:TransmittoCS*/

charT2EDELAY:8U;/**lt;0xF44A:TransmittoENA*/

charC2EDELAY:8U;/**lt;0xF44B:CStoENA*/

95

SPNU499B–November2012–RevisedAugust2013

Introduction

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter2

SPNU499B–November2012–RevisedAugust2013

Architecture

Thischapterconsistsoffivesections.Thefirstsectiondescribesspecificaspectsofthedevice

architecture.Thesecondsectiondescribestheclockingstructureofthemicrocontrollers.Thethirdsection

givesanoverviewofthedevicememoryorganization.Thefourthsectiondetailsexceptionsonthedevice,

andthelastsectiondescribesthesystemandperipheralcontrolregistersofthemicrocontroller.

Topic...........................................................................................................................Page

2.1Introduction......................................................................................................97

2.2MemoryOrganization.......................................................................................101

2.3Exceptions......................................................................................................113

2.4Clocks............................................................................................................116

2.5SystemandPeripheralControlRegisters...........................................................124

96

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Flash3MBw/ECCRAM256KBw/ECCDualCortex-R4FinLockStep

DMADMMPOMDAPHTU1HTU2FTUEMAC

SCR1:AHBBusMasterMatrix(AHBBMM)

VBUSMSwitchedCentralResourceController(VBUSMSCR)CRC

SCR4:VBUSPSCR

EMAC

SlavesEMIFSlavesPCR:PeripheralCentralResourceController

ADC1ADC2

N2HET1

N2HET2

GIO

DCAN1

DCAN2

DCAN3

LIN

SCI

I2C

FlexRay

MibSPI1

MibSPI3

MibSPI5

SPI2

SPI4VBUSP:PeripheralInterfaceBus

Flash64KB

EEPROMEmulationFlashBankSCR2: VBUSPSCRSCR3: VBUSPSCR



www.ti.comIntroduction

2.1Introduction

TheTMS570LS31x/21xfamilyofmicrocontrollersisbasedontheTexasInstrumentsTMS570

Architecture.Thischapterdescribesspecificaspectsofthearchitectureasapplicabletothe

TMS570LS31x/21xfamilyofmicrocontrollers.

2.1.1ArchitectureBlockDiagram

TheTMS570LS31x/21xmicrocontrollersarebasedontheTMS570Platformarchitecture,whichdefines

theinterconnectbetweenthebusmastersandthebusslaves.

Figure2-1showsahigh-levelarchitecturalblockdiagramforthesupersetmicrocontroller.

Figure2-1.ArchitecturalBlockDiagram

97

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Introductionwww.ti.com

2.1.2DefinitionsofTerms

Table2-1providesadefinitionoftermsusedinthearchitecturalblockdiagram.

Table2-1.DefinitionofTerms

Acronym/Term

FullForm

Description

ECC

ErrorCorrectionCode

ThisisacodethatisusedbytheSingleErrorCorrectionDoubleError

Detection(SECDED)logicinsidethetwoCortex-R4Fprocessors(CPUs).There

are8bitsofECCforevery64bitsofdataaccessedfromtheCPUtightly-

coupledmemories(flashandRAM).

Lockstep

–

ThisisthemodeofoperationofthedualARMCortex-R4FCPUs.Theoutputs

ofthetwoCPUsarecomparedoneachCPUclockcycle.Anymiscompareis

flaggedasanerrorofthehighestseveritylevel.

DMA

DirectMemoryAccess

TheDMAmoduleisusedfortransferring8-,16-,32-or64-bitdataacrossthe

entiredevicememorymap.TheDMAmoduleisoneofthebusmastersonthe

device.Thatis,itcaninitiateareadorawritetransaction.

DMM

DataModificationModule

TheDMMallowsatooltousethespecialDMMI/Ointerfacetomodifyanydata

valueinanyRAMonthedevice.Thismodificationisdonewithminimal

interruptiontotheapplicationexecution,andcanbeusedforcalibrationof

applicationalgorithms.TheDMMisalsoabusmasterinthisdevice.

POM

ParameterOverlayModule

Theparameteroverlaymoduleredirectsaccessestoaprogrammableregionin

flashmemory(read-only)toaRAMmemory,eitheron-chiporviatheexternal

memoryinterface(EMIF).Thisallowsausertoevaluatetheimpactofchanging

valuesofconstantsstoredintheflashmemorywithoutactuallyhavingtoerase

andreprogramtheflash.ThePOMisalsoabusmasterinthisdevice.

DAP

DebugAccessPort

TheDAPallowsatoolsuchasadebuggertoreadfromorwritetoanyregionin

thedevicememorymap.TheDAPisabusmasterinthisdevice.

SCR1:AHB

AMBAHigh-performanceBus

TheDMA,DMM,POMandDAPallactasmastersontheAMBAHigh-

BMM

MatrixModule

performanceBus(AHB).TheBMMarbitratesbetweenconcurrentaccessesby

thesemastersusingafixedpriorityscheme.Themodulesindescendingorder

ofpriorityarePOM—>DMA—>DMM—>DAP.

HTUx

High-endtimerTransferUnit

TheHTUisadedicatedtransferunitfortheNewEnhancedHigh-EndTimer

module.TheHTUhasanativeinterfacetotheN2HETRAM,andisusedto

transferdatato/fromtheN2HETRAMfrom/toanotherregioninthedevice

memorymap.ThereisoneHTUperN2HETmodule,sothatthereare2HTU

modulesonthedevice.TheHTUxarebusmastersinthisdevice.

FTU

FlexRayTransferUnit

TheFTUisadedicatedtransferunitfortheFlexRaycommunicationinterface

controller.TheFTUhasanativeinterfacetotheFlexRaymessageRAMandis

usedtotransferdatato/fromtheFlexRaymessageRAMfrom/toanother

regioninthedevicememorymap.TheFTUisabusmasterinthisdevice.

SCR2:VBUSP

VBUSPSwitchedCentral

TheSCR2arbitratesbetweenconcurrentaccessesbytheHTUxandFTU

SCR

ResourceController

modules.Around-robinpriorityschemeisusedbetweentheHTUxandFTU.

EMAC

EthernetMediaAccess

TheEMAChasadedicatedDMA-typecomponentthatisusedtotransferdata

Controller

to/fromtheEMACdescriptormemoryfrom/toanothermemoryinthedevice

memorymap.ThisDMA-typecomponentoftheEMACisabusmasterinthis

device.

SCR3:VBUSP

VBUSPSwitchedCentral

TheSCR3arbitratesbetweenconcurrentaccessesbytheEMACandanother

SCR

ResourceController

modulethatisnotavailableinthisconfigurationofthedevice.

VBUSMSCR

VBUSMSwitchedCentral

ThisisthemaindeviceSCR.Itarbitratesbetweentheaccessesfrommultiple

ResourceController

busmasterstothebusslavesusingaroundrobinpriorityscheme.

CRC

CyclicRedundancyChecker

TheCRCmoduleprovidestwochannelstoperformbackgroundsignature

verificationonanymemoryregion.Italsosupportsmaximum-lengthParallel

SignatureAnalysis(PDS)basedona64-bitprimitivepolynomial.TheCRC

moduleisabusslaveinthisdevice.

EEPROM

EmulatedElectricallyErasable

ThisisaflashbankthatisdedicatedforuseasanemulatedEEPROM.This

EmulationFlash

ProgrammableRead-Only

devicesupports64KBofflashforemulatedEEPROM.

Bank

Memory

SCR4:VBUSP

VBUSPSwitchedCentral

TheSCR4isusedtodecodetheaccessestothebusslavesfortheEMACand

SCR

ResourceController

EMIFmodules.SCR4isabusslaveinthisdevice.

98

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroduction

Table2-1.DefinitionofTerms(continued)

Acronym/Term

FullForm

Description

EMACslaves

EthernetMediaAccess

TherearefourEMACslaves:

Controllerslaveports

1.EMACControlModule:thisprovidesaninterfacebetweentheEMACand

MDIOmodulesandthebusmasters.Italsoincludes8KBofRAMtohold

EMACpacketbufferdescriptors.

2.EMAC:TheEMACmoduleinterfacestotheotherdevicesontheEthernet

NetworkusingtheMediaIndependentInterface(MII)orReducedMedia

IndependentInterface(RMII).

3.ManagementDataInput/Output(MDIO):TheMDIOmoduleisusedto

managethephysicallayer(PHY)deviceconnectedtotheEMACmodule.

4.CommunicationsPortProgrammingInterface(CPPI):Thisisthe8KBof

RAMusedtoholdtheEMACpacketbufferdescriptors.

EMIFslaves

ExternalMemoryInterface

TherearefiveEMIFslaves:-ExternalSDRAMmemory:EMIFchipselect0-

slaveports

Externalasynchronousmemories:EMIFchipselects2,3and4-EMIFmodule

controlandstatusregisters

PCR

PeripheralCentralResource

ThePCRmanagestheaccessestotheperipheralregistersandperipheral

controller

memories.Itprovidesaglobalresetforalltheperipherals.Italsosupportsthe

capabilitytoselectivelyenableordisabletheclockforeachperipheral

individually.ThePCRalsomanagestheaccessestothesystemmodule

registersrequiredtoconfigurethedevice’sclocks,interrupts,andsoon.The

systemmoduleregistersalsoincludestatusflagsforindicatingexception

conditions–resets,aborts,errors,interrupts.

ADCx

Analog-to-DigitalConverter

TheADCusestheSuccessiveApproximationRegisterarchitecture.Itfeatures

aselectable10-bitor12-bitresolution.TheADCmodulealsoincludesaRAM

toholdtheconversionresults.Adigitallogicwrappermanagesaccessestothe

controlandstatusregisters.TherearetwoADCmodulesonthisdevice.

N2HETx

NewEnhancedHigh-End

TheN2HETisanadvancedintelligenttimerthatprovidessophisticatedtiming

Timer

functionsforreal-timeapplications.Thetimerissoftware-controlled,usinga

reducedinstructionset,withaspecializedtimermicromachineandanattached

I/Oport.TheN2HETcanbeusedforpulsewidthmodulatedoutputs,captureor

compareinputs,orgeneral-purposeI/O.

GIO

General-purposeInput/Output

TheGIOmoduleallowsupto16terminalstobeusedasgeneral-purposeInput

orOutput.Eachofthesearealsocapableofgeneratinganinterrupttothe

CPU.

DCANx

ControllerAreaNetwork

TheDCANsupportstheCAN2.0Bprotocolstandardandusesaserial,multi-

controller

mastercommunicationprotocolthatefficientlysupportsdistributedreal-time

controlwithrobustcommunicationratesofupto1megabitpersecond(Mbps).

TheDCANisidealforapplicationsoperatinginnoisyandharshenvironments

(e.g.,automotiveandindustrialfields)thatrequirereliableserialcommunication

ormultiplexedwiring.

LIN

LocalInterconnectNetwork

TheLINmodulesupportstheLocalInterconnectstandardrevision2.1andcan

controller

beusedasaUARTinfull-duplexmodeusingthestandardNon-Return-to-Zero

(NRZ)format.

SCI

SerialCommunication

TheSCImodulesupportsthestandardUARTinfull-duplexmodeusingthe

Interface

standardNon-Return-to-Zero(NRZ)format.

I2C

Inter-IntegratedCircuit

TheI2Cmoduleisamulti-mastercommunicationmoduleprovidinganinterface

controller

betweenthedeviceandanI2C-compatibledeviceviatheI2Cserialbus.The

I2Csupportsboth100Kbpsand400Kbpsspeeds.

FlexRay

FlexRaycommunication

TheFlexRayusesadualchannelserial,fixedtimebasemulti-master

controller

communicationprotocolwithcommunicationratesof10megabitspersecond

(Mbps)perchannel.

SPIx

SerialPeripheralInterface

TheSPIxmodulesprovideaclockedserialcommunicationinterfaceforreliable

communicationbetweenthedeviceandotherserialdeviceswiththestandard

SPIinterface.TherearetwoSPImodulesonthisdevice.

MibSPIx

Multi-BufferedSerial

TheMibSPIxmodulesalsosupportthestandardSPIcommunicationprotocol.

PeripheralInterface

Thetransfersareallgroupedintotransferchunkscalled“transfergroups”.

ThesetransfergroupsaremadeupofoneoremorebuffersintheMibSPIx

RAM.TheRAMisusedtoholdthecontrolinformationanddatatobe

transmitted,aswellasthestatusinformationanddatathatisreceived.There

arethreeMibSPImodulesinthisdevice.

99

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Introductionwww.ti.com

Table2-1.DefinitionofTerms(continued)

Acronym/Term

FullForm

Description

eFuse

ElectronicallyProgrammable

Electricallyprogrammablefuses(eFuses)areusedtoconfigurethedeviceafter

Fusecontroller

FusecontrollerdeassertionofPORRST.TheeFusevaluesarereadandloaded

intointernalregistersaspartofthepower-on-resetsequence.TheeFuse

valuesareprotectedwithsinglebiterrorcorrection,doublebiterrordetection

(SECDED)codes.Thesefusesareprogrammedduringtheinitialfactorytestof

thedevice.TheeFusecontrollerisdesignedsothatthestateoftheeFuses

cannotbechangedoncethedeviceispackaged.

2.1.3BusMaster/SlaveAccessPrivileges

Thisdeviceimplementssomerestrictionsonthebusslaveaccessprivilegesinordertoimprovethe

overallthroughputoftheinterconnectshowninFigure2-1.

Table2-2.BusMaster/SlaveAccessPrivileges

BusSlavesBeingAccessed

Master

BusMasters

EEPROMBank,ECC

Non-CPUAccessesto

EMACandEMIF

PCR

Id

CRCModule

bits,OTPregions

CPUFlashandRAM

Slaves

Modules

CPURead

0

Allowed

Allowed

Allowed

Allowed

Allowed

CPUWrite

1

Notallowed

Allowed

Allowed

Allowed

Allowed

POM

2

Allowed

Allowed

Allowed

Allowed

Allowed

DMA

3

Allowed

Allowed

Allowed

Allowed

Allowed

DMM

4

Allowed

Allowed

Allowed

Allowed

Allowed

DAP

5

Allowed

Allowed

Allowed

Allowed

Allowed

HTU1

6

Notallowed

Allowed

Allowed

Allowed

Allowed

FTU

7

Notallowed

Allowed

Allowed

Allowed

Allowed

HTU2

8

Notallowed

Allowed

Allowed

Allowed

Allowed

EMAC

9

Notallowed

Allowed

Notallowed

Allowed

Notallowed

100

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Flash (3MB)RAM (256KB)0x000000000x002FFFFF0x080000000x0803FFFF

CRC0xFE000000Peripherals- Frame 10xFF000000SYSTEM Modules0xFFFFFFFF

0xF07FFFFF

RAM - ECC0x084000000x0843FFFFRESERVEDRESERVEDRESERVED

0xF0000000

EMIF (16MB* 3)0x600000000x6FFFFFFF

RESERVED

Flash (3MB) (Mirrored Image)0x200000000x202FFFFF

RESERVED

RESERVED

Peripherals- Frame 20xFC0000000xFCFFFFFF0xFFF80000

EMIF (128MB)0x800000000x87FFFFFFCS0RESERVEDreservedAsync RAMSDRAM0x640000000x680000000x6C000000Flash Module Bus2 InterfaceRESERVED(Flash ECC, OTPand EEPROM accesses)

CS4CS3CS2



www.ti.comMemoryOrganization

2.2MemoryOrganization

2.2.1MemoryMapOverview

TheCortex-R4FCPUusesa32-bitaddressbus,givingitaccesstoamemoryspaceof4GB.Thisspace

isdividedintoseveralregions,eachaddressedbydifferentmemoryselects.Figure2-2showsthe

memorymapofthemicrocontroller.

Figure2-2.MemoryMap

Themainflashinstructionmemoryisaddressedstartingat0x00000000bydefault.Thisisalsothereset

vectorlocation–theARMCortex-R4Fprocessorcorestartsexecutionfromtheresetvectoraddressof

0x00000000wheneverthecoregetsreset.

TheCPUdataRAMisaddressedstartingat0x08000000bydefault.

ThedevicealsosupportstheswappingoftheCPUinstructionmemory(flash)anddatamemory(RAM).

ThiscanbedonebyconfiguringtheMEMSWAPfieldoftheBusMatrixModuleControlRegister1

(BMMCR1).

101

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryOrganizationwww.ti.com

Afterswapping,thedataRAMisaccessedstartingfrom0x00000000andtheRAMECClocationsare

accessedstartingfrom0x00400000.Theflashmemoryisnowaccessedstartingfrom0x08000000.

2.2.2MemoryMapTable

ThecontrolandstatusregistersforeachmodulearemappedwithintheCPU’s4GBmemoryspace.Some

modulesalsohaveassociatedmemories,whicharealsomappedwithinthisspace.

Table2-3showsthestartingandendingaddressesofeachmodule’sregisterframeandanyassociated

memory.Thetablealsoshowstheresponsegeneratedbythemoduleortheinterconnectwheneveran

accessismadetoanunimplementedlocationinsidetheregisterormemoryframe.

Table2-3.ModuleRegisters/MemoriesMemoryMap

FrameAddress

ResponseforAccessto

Frame

Actual

Name

MemorySelect

Unimplemented

Size

Size

Start

End

LocationinFrame

CPUTightly-CoupledMemories

TCMFlash

CS0

0x0000_0000

0x00FF_FFFF

16MB

3MB

TCMRAM+RAM

CSRAM0

0x0800_0000

0x0BFF_FFFF

64MB

256KB

Abort

ECC

MirroredFlash

Flashmirrorframe

0x2000_0000

0x20FF_FFFF

16MB

3MB

ExternalMemoryAccesses

EMIFChipSelect2

EMIFselect2

0x6000_0000

0x63FF_FFFF

64MB

16MB

(asynchronous)

EMIFChipSelect3

EMIFselect3

0x6400_0000

0x67FF_FFFF

64MB

16MB

(asynchronous)

Accessto“Reserved”

spacewillgenerateAbort

EMIFChipSelect4

EMIFselect4

0x6800_0000

0x6BFF_FFFF

64MB

16MB

(asynchronous)

EMIFChipSelect0

EMIFselect0

0x8000_0000

0x87FF_FFFF

128MB

128MB

(synchronous)

FlashBus2Interface:OTP,ECC,EEPROMBank

CustomerOTP,TCM

0xF000_0000

0xF000_1FFF

8KB

4KB

FlashBank0

CustomerOTP,TCM

0xF000_2000

0xF000_3FFF

8KB

4KB

FlashBank1

CustomerOTP,

0xF000_E000

0xF000_FFFF

8KB

4KB

EEPROMBank

Customer

OTP–ECC,TCMFlash

0xF004_0000

0xF004_03FF

1KB

512B

Bank0

Customer

OTP–ECC,TCMFlash

0xF004_0400

0xF000_07FF

1KB

512B

Bank1

CustomerOTP–ECC,

0xF004_1C00

0xF004_1FFF

1KB

512KB

EEPROMBank

Abort

TIOTP,TCMFlash

0xF008_0000

0xF008_1FFF

8KB

4KB

Bank0

TIOTP,TCMFlash

0xF008_2000

0xF008_3FFF

8KB

4KB

Bank1

TIOTP,EEPROM

0xF008_E000

0xF008_FFFF

8KB

4KB

Bank

TIOTP–ECC,TCM

0xF00C_0000

0xF00C_03FF

1KB

512B

FlashBank0

TIOTP–ECC,TCM

0xF00C_0400

0xF00C_07FF

1KB

512B

FlashBank1

TIOTP–ECC,

0xF00C_1C00

0xF00C_1FFF

1KB

512KB

EEPROMBank

EEPROMBank–ECC

0xF010_0000

0xF013_FFFF

256KB

8KB

102

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryOrganization

Table2-3.ModuleRegisters/MemoriesMemoryMap(continued)

FrameAddress

ResponseforAccessto

Frame

Actual

Name

MemorySelect

Unimplemented

Size

Size

Start

End

LocationinFrame

EEPROMBank

0xF020_0000

0xF03F_FFFF

2MB

64KB

Abort

FlashDataSpace

0xF040_0000

0xF04F_FFFF

1MB

384KB

ECC

EMACandEMIFSlaves

CPPIMemorySlave

0xFC52_0000

0xFC52_1FFF

8KB

8KB

Abort

(EthernetRAM)

CPGMACSlave

0xFCF7_8000

0xFCF7_87FF

2KB

2KB

Noerror

(EthernetSlave)

CPGMACSSWrapper

0xFCF7_8800

0xFCF7_88FF

256B

256B

Noerror

(EthernetWrapper)

EthernetMDIO

0xFCF7_8900

0xFCF7_89FF

256B

256B

Noerror

Interface

EMIFRegisters

0xFCFF_E800

0xFCFF_E8FF

256B

256B

Abort

CyclicRedundancyChecker(CRC)ModuleRegisterFrame

Accessesabove0x200

CRC

CRCframe

0xFE00_0000

0xFEFF_FFFF

16MB

512B

generateabort.

PeripheralMemories

Abortforaccessesabove

MIBSPI5RAM

PCS[5]

0xFF0A_0000

0xFF0B_FFFF

128KB

2KB

2KB

Abortforaccessesabove

MIBSPI3RAM

PCS[6]

0xFF0C_0000

0xFF0D_FFFF

128KB

2KB

2KB

Abortforaccessesabove

MIBSPI1RAM

PCS[7]

0xFF0E_0000

0xFF0F_FFFF

128KB

2KB

2KB

Wraparoundfor

accessesto

unimplementedaddress

DCAN3RAM

PCS[13]

0xFF1A_0000

0xFF1B_FFFF

128KB

2KB

offsetslowerthan0x7FF.

Abortgeneratedfor

accessesbeyondoffset

0x800.

Wraparoundfor

accessesto

unimplementedaddress

DCAN2RAM

PCS[14]

0xFF1C_0000

0xFF1D_FFFF

128KB

2KB

offsetslowerthan0x7FF.

Abortgeneratedfor

accessesbeyondoffset

0x800.

Wraparoundfor

accessesto

unimplementedaddress

DCAN1RAM

PCS[15]

0xFF1E_0000

0xFF1F_FFFF

128KB

2KB

offsetslowerthan0x7FF.

Abortgeneratedfor

accessesbeyondoffset

0x800.

Wraparoundfor

accessesto

unimplementedaddress

MIBADC2RAM

PCS[29]

0xFF3A_0000

0xFF3B_FFFF

128KB

8KB

offsetslowerthan

0x1FFF.Abortgenerated

foraccessesbeyond

0x1FFF.

Wraparoundfor

accessesto

unimplementedaddress

MIBADC1RAM

PCS[31]

0xFF3E_0000

0xFF3F_FFFF

128KB

8KB

offsetslowerthan

0x1FFF.Abortgenerated

foraccessesbeyond

0x1FFF.

103

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryOrganizationwww.ti.com

Table2-3.ModuleRegisters/MemoriesMemoryMap(continued)

FrameAddress

ResponseforAccessto

Frame

Actual

Name

MemorySelect

Unimplemented

Size

Size

Start

End

LocationinFrame

Wraparoundfor

accessesto

unimplementedaddress

NHET2RAM

PCS[34]

0xFF44_0000

0xFF45_FFFF

128KB

16KB

offsetslowerthan

0x3FFF.Abortgenerated

foraccessesbeyond

0x3FFF.

Wraparoundfor

accessesto

unimplementedaddress

NHET1RAM

PCS[35]

0xFF46_0000

0xFF47_FFFF

128KB

16KB

offsetslowerthan

0x3FFF.Abortgenerated

foraccessesbeyond

0x3FFF.

HETTU2RAM

PCS[38]

0xFF4C_0000

0xFF4D_FFFF

128KB

1KB

Abort

HETTU1RAM

PCS[39]

0xFF4E_0000

0xFF4F_FFFF

128KB

1KB

Abort

FlexRayTURAM

PCS[40]

0xFF50_0000

0xFF51_FFFF

128KB

1KB

Abort

DebugComponents

CoreSightDebug

Readsreturnzeros,

CSCS0

0xFFA0_0000

0xFFA0_0FFF

4KB

4KB

ROM

writeshavenoeffect

Readsreturnzeros,

Cortex-R4FDebug

CSCS1

0xFFA0_1000

0xFFA0_1FFF

4KB

4KB

writeshavenoeffect

Readsreturnzeros,

ETM-R4

CSCS2

0xFFA0_2000

0xFFA0_2FFF

4KB

4KB

writeshavenoeffect

Readsreturnzeros,

CoreSightTPIU

CSCS3

0xFFA0_3000

0xFFA0_3FFF

4KB

4KB

writeshavenoeffect

POM

CSCS4

0xFFA0_4000

0xFFA0_4FFF

4KB

4KB

Abort

PeripheralControlRegisters

Readsreturnzeros,

FTU

PS[23]

0xFFF7_A000

0xFFF7_A1FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

HTU1

PS[22]

0xFFF7_A400

0xFFF7_A4FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

HTU2

PS[22]

0xFFF7_A500

0xFFF7_A5FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

NHET1

PS[17]

0xFFF7_B800

0xFFF7_B8FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

NHET2

PS[17]

0xFFF7_B900

0xFFF7_B9FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

GIO

PS[16]

0xFFF7_BC00

0xFFF7_BCFF

256B

256B

writeshavenoeffect

Readsreturnzeros,

MIBADC1

PS[15]

0xFFF7_C000

0xFFF7_C1FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

MIBADC2

PS[15]

0xFFF7_C200

0xFFF7_C3FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

FlexRay

PS[12]+PS[13]

0xFFF7_C800

0xFFF7_CFFF

2KB

2KB

writeshavenoeffect

Readsreturnzeros,

I2C

PS[10]

0xFFF7_D400

0xFFF7_D4FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

DCAN1

PS[8]

0xFFF7_DC00

0xFFF7_DDFF

512B

512B

writeshavenoeffect

Readsreturnzeros,

DCAN2

PS[8]

0xFFF7_DE00

0xFFF7_DFFF

512B

512B

writeshavenoeffect

Readsreturnzeros,

DCAN3

PS[7]

0xFFF7_E000

0xFFF7_E1FF

512B

512B

writeshavenoeffect

104

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryOrganization

Table2-3.ModuleRegisters/MemoriesMemoryMap(continued)

FrameAddress

ResponseforAccessto

Frame

Actual

Name

MemorySelect

Unimplemented

Size

Size

Start

End

LocationinFrame

Readsreturnzeros,

LIN

PS[6]

0xFFF7_E400

0xFFF7_E4FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

SCI

PS[6]

0xFFF7_E500

0xFFF7_E5FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

MibSPI1

PS[2]

0xFFF7_F400

0xFFF7_F5FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

SPI2

PS[2]

0xFFF7_F600

0xFFF7_F7FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

MibSPI3

PS[1]

0xFFF7_F800

0xFFF7_F9FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

SPI4

PS[1]

0xFFF7_FA00

0xFFF7_FBFF

512B

512B

writeshavenoeffect

Readsreturnzeros,

MibSPI5

PS[0]

0xFFF7_FC00

0xFFF7_FDFF

512B

512B

writeshavenoeffect

SystemModulesControlRegistersandMemories

DMARAM

PPCS0

0xFFF8_0000

0xFFF8_0FFF

4KB

4KB

Abort

Wraparoundfor

accessesto

unimplementedaddress

VIMRAM

PPCS2

0xFFF8_2000

0xFFF8_2FFF

4KB

1KB

offsetslowerthan0x3FF.

Abortgeneratedfor

accessesbeyond0x3FF.

RTPRAM

PPCS3

0xFFF8_3000

0xFFF8_3FFF

4KB

4KB

Abort

FlashWrapper

PPCS7

0xFFF8_7000

0xFFF8_7FFF

4KB

4KB

Abort

eFuseFarm

PPCS12

0xFFF8_C000

0xFFF8_CFFF

4KB

4KB

Abort

Controller

PowerManagement

PPSE0

0xFFFF_0000

0xFFFF_01FF

512B

512B

Abort

Module(PMM)

TestController

Readsreturnzeros,

PPSE1

0xFFFF_0400

0xFFFF_07FF

1KB

1KB

(FMTM)

writeshavenoeffect

Readsreturnzeros,

PCRregisters

PPS0

0xFFFF_E000

0xFFFF_E0FF

256B

256B

writeshavenoeffect

SystemModule-

Readsreturnzeros,

PPS0

0xFFFF_E100

0xFFFF_E1FF

256B

256B

Frame2

writeshavenoeffect

Readsreturnzeros,

PBIST

PPS1

0xFFFF_E400

0xFFFF_E5FF

512B

512B

writeshavenoeffect

Readsreturnzeros,

STC

PPS1

0xFFFF_E600

0xFFFF_E6FF

256B

256B

writeshavenoeffect

IOMMMultiplexing

Generatesaddresserror

PPS2

0xFFFF_EA00

0xFFFF_EBFF

512B

512B

ControlModule

interrupt,ifenabled

Readsreturnzeros,

DCC1

PPS3

0xFFFF_EC00

0xFFFF_ECFF

256B

256B

writeshavenoeffect

Readsreturnzeros,

DMA

PPS4

0xFFFF_F000

0xFFFF_F3FF

1KB

1KB

writeshavenoeffect

Readsreturnzeros,

DCC2

PPS5

0xFFFF_F400

0xFFFF_F4FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

ESM

PPS5

0xFFFF_F500

0xFFFF_F5FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

CCMR4

PPS5

0xFFFF_F600

0xFFFF_F6FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

DMM

PPS5

0xFFFF_F700

0xFFFF_F7FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

RAMECCeven

PPS6

0xFFFF_F800

0xFFFF_F8FF

256B

256B

writeshavenoeffect

105

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryOrganizationwww.ti.com

Table2-3.ModuleRegisters/MemoriesMemoryMap(continued)

FrameAddress

ResponseforAccessto

Frame

Actual

Name

MemorySelect

Unimplemented

Size

Size

Start

End

LocationinFrame

Readsreturnzeros,

RAMECCodd

PPS6

0xFFFF_F900

0xFFFF_F9FF

256B

256B

writeshavenoeffect

Readsreturnzeros,

RTP

PPS6

0xFFFF_FA00

0xFFFF_FAFF

256B

256B

writeshavenoeffect

Readsreturnzeros,

RTI+DWWD

PPS7

0xFFFF_FC00

0xFFFF_FCFF

256B

256B

writeshavenoeffect

Readsreturnzeros,

VIMParity

PPS7

0xFFFF_FD00

0xFFFF_FDFF

256B

256B

writeshavenoeffect

Readsreturnzeros,

VIM

PPS7

0xFFFF_FE00

0xFFFF_FEFF

256B

256B

writeshavenoeffect

SystemModule-

Readsreturnzeros,

PPS7

0xFFFF_FF00

0xFFFF_FFFF

256B

256B

Frame1

writeshavenoeffect

2.2.3FlashMemory

TheTMS570LS31x/21xmicrocontrollerssupportupto3MBofflashforuseasprogrammemory.Thisis

dividedintotwoseparateflashbanks,each1.5MB.Themicrocontrollersalsosupportaseparate64KB

flashbankforuseasemulatedEEPROM.

2.2.3.1FlashBankSectoringConfiguration

Eachbankisdividedintomultiplesectors.Aflashsectoristhesmallestregionintheflashbankthatmust

beerased.ThesectoringconfigurationofeachflashbankisshowninTable2-4.

1.TheFlashbanksare144-bitwidebankwithECCsupport.

2.Theflashbank7canbeprogrammedwhileexecutingcodefromflashbank0orbank1.

3.Codeexecutionisnotallowedfromflashbank7.

Refertothedevicedatasheetforelectricalandtimingspecificationsrelatedtotheflashmodule.

Table2-4.FlashMemoryBanksandSectors

SectorNO.

SECTORSIZE

LowAddress

Highaddress

Bank0:1.5MBytes

0

32KBytes

0x0000_0000

0x0000_7FFF

1

32KBytes

0x0000_8000

0x0000_FFFF

2

32KBytes

0x0001_0000

0x0001_7FFF

3

32KBytes

0x0001_8000

0x0001_FFFF

4

128KBytes

0x0002_0000

0x0003_FFFF

5

128KBytes

0x0004_0000

0x0005_FFFF

6

128KBytes

0x0006_0000

0x0007_FFFF

7

128KBytes

0x0008_0000

0x0009_FFFF

8

128KBytes

0x000A_0000

0x000B_FFFF

9

128KBytes

0x000C_0000

0x000D_FFFF

10

128KBytes

0x000E_0000

0x000F_FFFF

11

128KBytes

0x0010_0000

0x0011_FFFF

12

128KBytes

0x0012_0000

0x0013_FFFF

13

128KBytes

0x0014_0000

0x0015_FFFF

14

128KBytes

0x0016_0000

0x0017_FFFF

Bank1:1.5MBytes

0

128KBytes

0x0018_0000

0x0019_FFFF

1

128KBytes

0x001A_0000

0x001B_FFFF

106

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryOrganization

Table2-4.FlashMemoryBanksandSectors(continued)

SectorNO.

SECTORSIZE

LowAddress

Highaddress

2

128KBytes

0x001C_0000

0x001D_FFFF

3

128KBytes

0x001E_0000

0x001F_FFFF

4

128KBytes

0x0020_0000

0x0021_FFFF

5

128KBytes

0x0022_0000

0x0023_FFFF

6

128KBytes

0x0024_0000

0x0025_FFFF

7

128KBytes

0x0026_0000

0x0027_FFFF

8

128KBytes

0x0028_0000

0x0029_FFFF

9

128KBytes

0x002A_0000

0x002B_FFFF

10

128KBytes

0x002C_0000

0x002D_FFFF

11

128KBytes

0x002E_0000

0x002F_FFFF

Bank7:64KBytes,dedicatedforEEPROMemulation

0

16KBytes

0xF020_0000

0xF020_3FFF

1

16KBytes

0xF020_4000

0xF020_7FFF

2

16KBytes

0xF020_8000

0xF020_BFFF

3

16KBytes

0xF020_C000

0xF020_FFFF

2.2.3.2ECCProtectionforFlashAccesses

TheTMS570LS31x/21xmicrocontrollersprotectallaccessestotheon-chipflashmemorybydedicated

Single-Error-Correction-Double-Error-Detection(SECDED)logic.

Theaccessestotheprogrammemory–flashbank0andflashbank1,areprotectedbySECDEDlogic

implementedinsidetheARMCortex-R4FCPU.AccessestotheEEPROMemulationflashbank(bank7)

areprotectedbydedicatedSECDEDlogicinsidethedigitalinterfacetotheflashbanks.

BoththeSECDEDlogicimplementationsuseErrorCorrectionCodes(ECC)forcorrectingsingle-biterrors

andfordetectingmultiple-biterrorsinthevaluesreadfromtheflasharrays.Thereisan8-bitECCfor

every64bitsofdata.TheECCfortheflashmemorycontentsneedstobecalculatedbyanexternaltool

suchasnowECC.TheECCcanthenbeprogrammedintotheflasharrayalongwiththeactualapplication

code.

TheECCfortheflasharrayisstoredintheflashitself,andismappedtoaregionstartingat0xF0400000

forthemainflashbanks0and1,andtoaregionstartingat0xF0200000fortheEEPROMemulationflash

bank7.

NOTE:ECCProtectionNotEnabledByDefault

TheSECDEDlogicinsidetheCPUisnotenabledbydefaultandmustbeenabledbythe

application.

CodeExampleforEnablingECCProtectionforMainFlashAccesses:

ThefollowingcodeexamplecanbeusedtoenabletheECCprotectionforaccessestothemainflash

array.

MRCp15,#0,r1,c1,c0,#1

ORRr1,r1,#0x02000000;EnableECCcheckingforATCM

DMB

MCRp15,#0,r1,c1,c0,#1

TheECCprotectionforaccessestotheEEPROMemulationflashbankcanbeenabledbywriting0xAto

theEDACENfieldoftheflashmodule’sErrorCorrectionControlRegister1(FEDACCTRL1).See

Chapter5formoredetails.

107

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryOrganizationwww.ti.com

WhentheCPUdetectsanECCsingle-,ordouble-biterroronareadfromtheflashmemory,itsignalsthis

onadedicated“Event”bus.Thiseventbussignalingisalsonotenabledbydefaultandmustbeenabled

bytheapplication.ThefollowingcodeexamplecanbeusedtoenabletheCPUeventsignaling.

MRCp15,#0,r1,c9,c12,#0;EnablingEventmonitorstates

ORRr1,r1,#0x00000010

MCRp15,#0,r1,c9,c12,#0;Set4thbit('X')ofPMNCregister

MRCp15,#0,r1,c9,c12,#0

ThedigitallogicthatinterfacestheARMCortex-R4FCPUtotheflashbankscapturestheECCerror

eventssignaledbytheCPU,andinturngenerateserrorsignalsthatareinputtothecentralError

SignalingModule(ESM).

2.2.4On-ChipSRAM

SeveralSRAMmodulesareimplementedonthedevicetosupportthefunctionalityofthemodules

included.

ReadsfromtheCPUdataRAMareprotectedbyECCcalculatedinsidetheCPU.Readsfromallother

memoriesareprotectedbyconfigurableoddorevenparitythatisevaluatedinparallelwiththeactual

read.

TheTMS570LS31x/21xmicrocontrollersaretargetedtowardssafety-criticalapplications,anditiscritical

foranyfailuresintheon-chipSRAMmodulestobeidentifiedbeforethesemodulesareusedforsafety-

criticalfunctions.ThesemicrocontrollerssupportaProgrammableBuilt-InSelf-Test(PBIST)mechanism

thatisusedtotesteachon-chipSRAMmoduleforfaults.ThePBISTisusuallyrunondevicestart-upasit

isadestructivetestandallcontentsofthetestedSRAMmoduleareoverwrittenduringthetest.

Themicrocontrollersalsosupportahardware-basedauto-initializationofon-chipSRAMmodules.This

processalsotakesintoaccountthereadprotectionschemeimplementedforeachSRAMmodule–ECC

orparity.

TIrecommendsthatthePBISTroutinesbeexecutedontheSRAMmodulespriortotheauto-initialization.

Thefollowingsectiondescribethesetwoprocesses.

2.2.4.1PBISTRAMGroupingandAlgorithmMappingForOn-ChipSRAMModules

Table2-5showsthegroupingsofthevariouson-chipmemoriesforPBIST.Italsoliststhememorytypes

andtheirassignedRAMGroupSelect(RGS)andReturnDataSelect(RDS).SeeChapter7formore

detailsontheusageoftheRGSandRDSinformation.

Table2-5.PBISTMemoryGrouping

Memory

RAMGroup#

MemoryType

RGS

RDS

PBIST_ROM

1

ROM

1

0

STC_ROM

2

ROM

2

0

DCAN1

3

Dual-port

3

0..5

DCAN2

4

Dual-port

4

0..5

DCAN3

5

Dual-port

5

0..5

ESRAM1

6

Single-port

6

0/1..4

MIBSPI1

7

Dual-port

7

0..3

MIBSPI3

8

Dual-port

7

4..7

MIBSPI5

9

Dual-port

7

8..11

VIM

10

Dual-port

8

0..1

MIBADC1

11

Dual-port

9

0

DMA

12

Dual-port

10

0..5

N2HET1

13

Dual-port

11

0..11

HETTU1

14

Dual-port

12

0..5

RTP

15

Dual-port

13

0..8

108

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryOrganization

Table2-5.PBISTMemoryGrouping(continued)

Memory

RAMGroup#

MemoryType

RGS

RDS

16

Dual-port

14

0..13

FLEXRAY

17

Single-port

MIBADC2

18

Dual-port

15

0

N2HET2

19

Dual-port

16

0..11

HETTU2

20

Dual-port

17

0..5

ESRAM5

21

Single-port

18

0/1..4

ESRAM6

22

Single-port

19

0/1..4

23

Dual-port

ETHERNET

24

Dual-port

20

0..6

25

Single-port

ESRAM8

28

Single-port

25

0/1..4

Table2-6mapsthedifferentalgorithmssupportedinapplicationmodefortheRAMgroups.Thetablealso

liststhebackgroundpatternoptionsavailableforeachalgorithm.

Table2-6.PBISTAlgorithmMapping

ALGOMASK

Available

Memories

ValidRAMINFO

No.

Register

Algorithm

Background

ValidRAMGroups

Tested

RegisterValue

Value

Patterns

1

0x00000001

triple_read_slow_read

ROM

1,2

0x00000003

2

0x00000002

triple_read_fast_read

ROM

1,2

0x00000003

0x00000000,

0x96699669,

3,4,5,7,8,9,10,11,12,13,1

3

0x00000004

march13n

two_port

0x0F0F0F0F,

0x02CEFFDC

4,15,16,18,19,20,23,24

0xAA55AA55,

0xC3C3C3C3

0x00000000,

0x96699669,

4

0x00000008

march13n

single_port

0x0F0F0F0F,

6,17,21,22,25,28

0x0D310020

0xAA55AA55,

0xC3C3C3C3

0xFFFFFFFF,

3,4,5,7,8,9,10,11,12,13,1

5

0x00000010

down1A_red

two_port

0x02CEFFDC

0xAAAAAAAA

4,15,16,18,19,20,23,24

0xFFFFFFFF,

6

0x00000020

down1A_red

single_port

6,17,21,22,25,28

0x0D310020

0xAAAAAAAA

0xFFFFFFFF,

3,4,5,7,8,9,10,11,12,13,1

7

0x00000040

mapcolumn

two_port

0x02CEFFDC

0x00000000

4,15,16,18,19,20,23,24

0xFFFFFFFF,

8

0x00000080

mapcolumn

single_port

6,17,21,22,25,28

0x0D310020

0x00000000

0xFFFFFFFF,

3,4,5,7,8,9,10,11,12,13,1

9

0x00000100

precharge

two_port

0x02CEFFDC

0x00000000

4,15,16,18,19,20,23,24

0xFFFFFFFF,

10

0x00000200

precharge

single_port

6,17,21,22,25,28

0x0D310020

0x00000000

0xFFFFFFFF,

3,4,5,7,8,9,10,11,12,13,1

11

0x00000400

dtxn2

two_port

0x02CEFFDC

0x00000000

4,15,16,18,19,20,23,24

0xFFFFFFFF,

12

0x00000800

dtxn2

single_port

6,17,21,22,25,28

0x0D310020

0x00000000

0xFFFFFFFF,

3,4,5,7,8,9,11,14,15,16,1

13

0x00001000

pmos_open

two_port

0x028AE5DC

0x00000000

8,20,24

0xFFFFFFFF,

14

0x00002000

pmos_open

single_port

6,17,21,22,25,28

0x0D310020

0x00000000

0xFFFFFFFF,

15

0x00004000

pmos_open_slice1

two_port

10,12,13,19,23

0x00441A00

0x00000000

109

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryOrganizationwww.ti.com

Table2-6.PBISTAlgorithmMapping(continued)

ALGOMASK

Available

Memories

ValidRAMINFO

No.

Register

Algorithm

Background

ValidRAMGroups

Tested

RegisterValue

Value

Patterns

0xFFFFFFFF,

16

0x00008000

pmos_open_slice2

two_port

10,12,13,19,23

0x00441A00

0x00000000

3,4,5,7,8,9,10,11,12,13,1

17

0x00010000

flip10

two_port

0xFFFFFFFF

0x02CEFFDC

4,15,16,18,19,20,23,24

18

0x00020000

flip10

single_port

0xFFFFFFFF

6,17,21,22,25,28

0x0D310020

3,4,5,7,8,9,10,11,12,13,1

19

0x00040000

iddq

two_port

0x00000000

0x02CEFFDC

4,15,16,18,19,20,23,24

20

0x00080000

iddq

single_port

0x00000000

6,17,21,22,25,28

0x0D310020

3,4,5,7,8,9,10,11,12,13,1

21

0x00100000

retention

two_port

0x00000000

0x02CEFFDC

4,15,16,18,19,20,23,24

22

0x00200000

retention

single_port

0x00000000

6,17,21,22,25,28

0x0D310020

3,4,5,7,8,9,10,11,12,13,1

23

0x00400000

iddq

two_port

0xFFFFFFFF

0x02CEFFDC

4,15,16,18,19,20,23,24

24

0x00800000

iddq

single_port

0xFFFFFFFF

6,17,21,22,25,28

0x0D310020

3,4,5,7,8,9,10,11,12,13,1

25

0x01000000

retention

two_port

0xFFFFFFFF

0x02CEFFDC

4,15,16,18,19,20,23,24

26

0x02000000

retention

single_port

0xFFFFFFFF

6,17,21,22,25,28

0x0D310020

3,4,5,7,8,9,10,11,12,13,1

27

0x04000000

iddqrowstripe

two_port

0x00000000

0x02CEFFDC

4,15,16,18,19,20,23,24

28

0x08000000

iddqrowstripe

single_port

0x00000000

6,17,21,22,25,28

0x0D310020

3,4,5,7,8,9,10,11,12,13,1

29

0x10000000

iddqrowstripe

two_port

0xFFFFFFFF

0x02CEFFDC

4,15,16,18,19,20,23,24

30

0x20000000

iddqrowstripe

single_port

0xFFFFFFFF

6,17,21,22,25,28

0x0D310020

33,34,35,36,37,38,39,40,

31

0x40000000

powerup_invpowerup

two_port

0xAAAAAAAA

41,42,43,44,45,46,47,48,

0x0007FFFF

49,50,51

32

0x80000000

powerup_invpowerup

single_port

0xAAAAAAAA

52,53,54,55,56,57,58

0x03F80000

NOTE:RecommendedMemoryTestAlgorithm

March13isthemostrecommendedalgorithmforthememoryself-test.

ForHCLK=180MHz,VCLK=90MHz,PBISTROM_CLK=90MHz,theMarch13algorithmtakes14.02

mstorunonallon-chipSRAMs.

110

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




VCLKWritetoenableMINTIGENAkeyWritetoenableMSINENAn

SYS_MMISTARTnDEV_MMIDONEnMemory

(wheren=31:0)

(wheren=31:0)(wheren=31:0)

PollMINIDONEbit,MSTCGSTAT[8]

PollMIDONEnfieldof

WheneachenabledmodulecompletescorrespondingMIIDONEbitisset.Afterallenabledmodules’hardwareinitializationcompletes,theMINIDONEbitisset,indicatingallhardwarememoryinitializationisdone.

(wheren=31:0)

modulehardwareinitialization

Black indicates System register activity.

Grayindicatesinter-moduleactivity,notaccessibleviaSystemregister.

itshardwareinitialization,the

(fromSystemmodule

tomemorymodules)(frommemorymodulestoSystemmodule)

MINISTATregister



www.ti.comMemoryOrganization

2.2.4.2Auto-InitializationofOn-ChipSRAMModules

Thedevicesystemprovidesthecapabilitytoperformahardwareinitializationonmostmemoriesonthe

systembusandontheperipheralbus.ThememoryusedfortheFlexRaymessageobjectsisnotdirectly

CPUaddressable,hencethereisnomemoryauto-initializationsupportforthismemory.

Theintentofhavingthehardwareinitializationistoprogramthememoryarrayswitherrordetection

capabilitytoaknownstatebasedontheirerrordetectionscheme–odd/evenparityorECC.Forexample,

thecontentsoftheCPUdataRAMafterpower-onresetisunknown.Ahardwareauto-initializationcanbe

startedtothatthereisnoECCerror.

NOTE:EffectofECCorParityonMemoryAuto-Initialization

TheECCorparityshouldbeenabledontheRAMsbeforehardwareauto-initializationstarts

ifparityorECCisbeingused.

Auto-InitializationSequence:

1.Enabletheglobalhardwarememoryinitializationkeybyprogramming0xAintoMINITGCR[3:0],the

MemoryInitializationKeyfield(MINITGENA)oftheMemoryHardwareInitializationGlobalControl

Register(MINITGCR)register.

2.Selectthemoduleonwhichthememoryhardwareinitializationhastobeperformedbyprogramming

theappropriatevalueintotheMSINENA(31–0)bitsintheMSINENAregister.SeeTable2-7.

3.Iftheglobalauto-initializationschemeisenabled,thecorrespondingmodulewillinitializeitsmemories

basedonitsmemoryerrorcheckingscheme(evenparityoroddparityorECC).

4.Whenthememoryinitializationiscomplete,themodulewillsignal“memoryinitializationdone”,which

setsthecorrespondingbitinthesystemmoduleMIDONEfieldoftheMINISTATregistertoindicatethe

completionofitsmemoryinitialization.

5.Whenthememoryhardwareinitializationcompletesforallmodules,(indicatedbyeachmodule’s

MIDONEbitbeingset),thememoryhardwareinitializationdonebit(MINIDONE)issetinthe

MSTCGSTATregister.

Figure2-3.HardwareMemoryInitializationProtocol

111

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryOrganizationwww.ti.com

Table2-7.MemoryInitializationSelectMapping(1)(2)(3)

AddressRange

Memory

MSINENARegisterBit#

Start

End

RAM

0x08000000

0x08013FFF

0

RAM(alwaysONdomain,PD#1)

0x08000000

0x0800FFFF

0

RAM(RAM_PD#1)

0x08010000

0x0801FFFF

0

RAM(RAM_PD#2)

0x08020000

0x0802FFFF

0

RAM(RAM_PD#3)

0x08030000

0x0803FFFF

0

MIBSPI5RAM

0xFF0A0000

0xFF0BFFFF

12(4)

MIBSPI3RAM

0xFF0C0000

0xFF0DFFFF

11(4)

MIBSPI1RAM

0xFF0E0000

0xFF0FFFFF

7(4)

DCAN3RAM

0xFF1A0000

0xFF1BFFFF

10

DCAN2RAM

0xFF1C0000

0xFF1DFFFF

6

DCAN1RAM

0xFF1E0000

0xFF1FFFFF

5

MIBADC2RAM

0xFF3A0000

0xFF3BFFFF

14

MIBADC1RAM

0xFF3E0000

0xFF3FFFFF

8

NHET2RAM

0xFF440000

0xFF57FFFF

15

NHET1RAM

0xFF460000

0xFF47FFFF

3

HETTU2RAM

0xFF4C0000

0xFF4DFFFF

16

HETTU1RAM

0xFF4E0000

0xFF4FFFFF

4

DMARAM

0xFFF80000

0xFFF80FFF

1

VIMRAM

0xFFF82000

0xFFF82FFF

2

FlexRayTURAM

0xFF500000

0xFF51FFFF

13

(1)IfECCprotectionisenabledfortheCPUdataRAM,thentheauto-initializationprocessalsoinitializesthecorrespondingECC

space.

(2)IfparityprotectionisenabledfortheperipheralSRAMmodules,thentheparitybitswillalsobeinitializedalongwiththeSRAM

modules.

(3)TheCPURAMinterfacemodulehasseparatecontrolbit-fieldstoselectthememorypowerdomainthatistobeinitialized.

(4)TheMibSPIxmodulesperformaninitializationofthetransmitandreceiveRAMsassoonasthemulti-bufferedmodeisenabled.

ThisisindependentofwhethertheapplicationhasalreadyinitializedtheseRAMsusingtheauto-initializationmethodornot.The

MibSPIxmodulesneedtobereleasedfromresetbywriting1totheirSPIGCR0registersbeforestartingauto-initializationon

theirrespectiveRAMs.

112

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExceptions

2.3Exceptions

An“Exception”isaneventthatmakestheprocessortemporarilyhaltthenormalflowofprogram

execution,forexample,toserviceaninterruptfromaperipheral.Beforeattemptingtohandlean

exception,theprocessorpreservesthecriticalpartsofthecurrentprocessorstatesothattheoriginal

programcanresumewhenthehandlerroutinehasfinished.

Thefollowingsectionsdescribethreeexceptions–Reset,AbortandtheSystemSoftwareInterrupts.

PleaserefertotheARMCortex-R4FTechnicalReferenceManualforcompletedetailsonallexceptions.

2.3.1Resets

TheTMS570LS31x/21xmicrocontrollercanberesetbyeitheroftheconditionsdescribedinTable2-8.

EachresetconditionisindicatedintheSystemExceptionStatusRegister(SYSESR).

Table2-8.CausesofResets

Condition

Description

DrivingnPORRSTpinlow

Coldreset,orpower-onreset.Thisresetsignalistypicallydrivenbyanexternalvoltage

externally

supervisor.ThisresetisflaggedbythePORSTbitintheSYSESRregister,SYSESR[15].

VoltageMonitorreset

Themicrocontrollerhasanembeddedvoltagemonitorthatgeneratesapower-onresetwhen

thecorevoltagegetsoutofavalidrange,orwhentheI/Ovoltagefallsbelowathreshold.

ThisresetisalsoflaggedbythePORSTbitintheSYSESRregister,SYSESR[15].

Note:Thevoltagemonitorisnotanalternativeforanexternalvoltagesupervisor.

DrivingnRSTpinlowexternally

Warmreset.ThisresetinputistypicallyusedinasystemwithmultipleICsandwhichrequires

thatthemicrocontrolleralsogetsresetwhenevertheotherICdetectsafaultcondition.This

resetisflaggedbytheEXTRSTbitintheSYSESR,registerSYSESR[3].

Oscillatorfailure

Thisresetisgeneratedbythesystemmodulewhentheclockmonitordetectsanoscillatorfail

condition.Whetherornotaresetisgeneratedisalsodictatedbyaregisterinthesystem

module.ThisresetisflaggedbytheOSCRSTbitintheSYSESRregister,SYSESR[14].

Softwarereset

Thisresetisgeneratedbytheapplicationsoftwarewritinga1tobit15ofSystemException

ControlRegister(SYSECR)ora0tobit14ofSYSECR.Itistypicallyusedbyabootloader

typeofcodethatusesasoftwareresettoallowthecodeexecutiontobranchtothe

applicationcodeonceitisprogrammedintotheprogrammemory.Thisresetisflaggedbythe

SWRSTbitoftheSYSESRregister,SYSESR[4].

CPUreset

ThisresetisgeneratedbytheCPUself-testcontroller(LBIST)orbychangingthememory

protection(MMU/MPU)configurationintheCPURSTCRregister.Thisresetisflaggedbythe

CPURSTbitoftheSYSESRregister,SYSESR[5].

Debugreset

TheICEPICKlogicimplementedonthemicrocontrollerallowsasystemresettobegenerated

viathedebuglogic.ThisresetisflaggedbytheDBGRSTbitoftheSYSESRregister,

SYSESR[13].

Watchdogreset

Thisresetisgeneratedbythedigitalwindowedwatchdog(DWWD)moduleonthe

microcontroller.TheDWWDcangeneratearesetwheneverthewatchdogservicewindowis

violated.Thisresetisalsoflaggedbybit13oftheSYSESRregister,SYSESR[13].

ThedevicenRSTterminalisanI/O.Itcanbedrivenlowbyanexternalcircuittoforceawarmresetonthe

microcontroller.Thisterminalwillbedrivenlowasanoutputforaminimumof8peripheralclock(VCLK)

cyclesforanydevicesystemresetcondition.AsaresulttheEXTRSTbitintheSYSESRregister,

SYSESR[3],getssetforallresetconditionslistedinTable2-8.ThenRSTisdrivenlowasanoutputfora

longerdurationduringdevicepower-uporwheneverthepower-onreset(nPORRST)isdrivenlow

externally.ReferthedevicedatasheetfortheelectricalandtimingspecificationsforthenRST.

2.3.2Aborts

WhentheARMCortex-R4Fprocessor'smemorysystemcannotcompleteamemoryaccesssuccessfully,

anabortisgenerated.Anerroroccurringonaninstructionfetchgeneratesaprefetchabort.Errors

occurringondataaccessesgeneratedataaborts.Abortsarealsocategorizedasbeingeitherpreciseor

imprecise.

113

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Exceptionswww.ti.com

2.3.2.1PrefetchAborts

WhenaPrefetchAbort(PABT)occurs,theprocessormarkstheprefetchedinstructionasinvalid,butdoes

nottaketheexceptionuntiltheinstructionistobeexecuted.Iftheinstructionisnotexecuted,forexample

becauseabranchoccurswhileitisinthepipeline,theabortdoesnottakeplace.

Allprefetchabortsarepreciseaborts.

2.3.2.2DataAborts

Anerroroccurringonadatamemoryaccesscangenerateadataabort.Iftheinstructiongeneratingthe

memoryaccessisnotexecuted,forexample,becauseitfailsitsconditioncodes,orisinterrupted,the

dataabortdoesnottakeplace.

ADataAbort(DABT)canbeeitherpreciseorimprecise,dependingonthetypeoffaultthatcausedit.

2.3.2.3PreciseAborts

Apreciseabort,alsoknownasasynchronousabort,isoneforwhichtheexceptionisguaranteedtobe

takenontheinstructionthatgeneratedtheabortingmemoryaccess.Theaborthandlercanusethevalue

intheLinkRegister(r14_abt)todeterminewhichinstructiongeneratedtheabort,andthevalueinthe

SavedProgramStatusRegister(SPSR_abt)todeterminethestateoftheprocessorwhentheabort

occurred.

2.3.2.4ImpreciseAborts

Animpreciseabort,alsoknownasanasynchronousabort,isoneforwhichtheexceptionistakenona

laterinstructiontotheinstructionthatgeneratedtheabortingmemoryaccess.Theaborthandlercannot

determinewhichinstructiongeneratedtheabort,orthestateoftheprocessorwhentheabortoccurred.

Therefore,impreciseabortsarenormallyfatal.

Impreciseabortscanbegeneratedbystoreinstructionstonormal-typeordevice-typememory.Whenthe

storeinstructioniscommitted,thedataisnormallywrittenintoabufferthatholdsthedatauntilthe

memorysystemhassufficientbandwidthtoperformthewriteaccess.Thisgivesreadaccesseshigher

priority.Thewritedatacanbeheldinthebufferforalongperiod,duringwhichmanyotherinstructions

cancomplete.Ifanerroroccurswhenthewriteisfinallyperformed,thisgeneratesanimpreciseabort.

TheTMS570LS31x/21xmicrocontrollerarchitectureappliestechniquesatthesystemleveltomitigatethe

impactofimpreciseaborts.Systemleveladoptionofwritestatussidebandstothedatapathallowbus

masterstocomprehendimpreciseaborts,turningthemintopreciseaborts.Incaseswherethisapproach

isnotfeasible,bufferingbridgesorothersourcesofimprecisionmaybuildaFIFOofcurrenttransactions

suchthatanimpreciseabortmayberegisteredatthepointofimprecisionforlateranalysis.

MaskingOfImpreciseAborts:

Thenatureofimpreciseabortsmeansthattheycanoccurwhiletheprocessorishandlingadifferent

abort.Ifanimpreciseabortgeneratesanewexceptioninsuchasituation,thebankedlinkregister

(R14_abt)andtheSavedProcessorStatusRegister(SPSR_abt)valuesareoverwritten.Ifthisoccurs

beforethedataispushedtothestackinmemory,thestateinformationaboutthefirstabortislost.To

preventthisfromhappening,theCurrentProcessorStatusRegister(CPSR)containsamaskbitto

indicatethatanimpreciseabortcannotbeaccepted,theA-bit.WhentheA-bitisset,anyimpreciseabort

thatoccursisheldpendingbytheprocessoruntiltheA-bitiscleared,whentheexceptionisactually

taken.TheA-bitisautomaticallysetwhenabort,IRQorFIQexceptionsaretaken,andonreset.The

applicationmustonlycleartheA-bitinanaborthandlerafterthestateinformationhaseitherbeenstacked

tomemory,orisnolongerrequired.

NOTE:DefaultBehaviorforImpreciseAborts

TheA-bitintheCPSRissetbydefault.Thismeansthatnoimpreciseabortexceptionwill

occur.TheapplicationmustenableimpreciseabortexceptiongenerationbyclearingtheA-

bitoftheCPSR.

114

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExceptions

2.3.2.5ConditionsThatGenerateAborts

AnAbortisgeneratedunderthefollowingconditionsontheTMS570LS31x/21xmicrocontrollers.

•Accesstoanillegaladdress(anonimplementedaddress)

•Accesstoaprotectedaddress(protectionviolation)

•Parity/ECC/Time-outErroronavalidaccess

IllegalAddresses:

TheillegaladdressesandtheresponsestoanaccesstotheseaddressesaredefinedinTable2-3.

AddressesProtectedByMPU:

MemoryaccesspermissionscanbeconfiguredviatheARMCortex-R4Fprocessor’sMemoryProtection

Unit(MPU).PleaserefertotheARMCortex-R4FTRMformoredetailsontheMPUconfiguration.

AmemoryaccessviolationisloggedasapermissionfaultintheCPU’sfaultstatusregisterandthevirtual

addressoftheaccessisloggedintotheCPU’sfaultaddressregister.

ProtectionofPeripheralRegisterandMemoryFrames:

AccessestotheperipheralregisterandmemoryframescanbeprotectedeitherbyconfiguringtheMPUor

byconfiguringthePeripheralCentralResource(PCR)controllerregisters.

ThePCRmodulePPROTSETxregisterscontainonebitperperipheralselectquadrant.Thesebitsdefine

theaccesspermissionstotheperipheralregisterframes.IftheCPUattemptstowritetoaperipheral

registerforwhichitdoesnothavethecorrectpermissions,aprotectionviolationisdetectedandanAbort

occurs.

SomemodulesalsoenforceregisterupdatestoonlybeallowedwhentheCPUisinaprivilegedmodeof

operation.IftheCPUwritestotheseregistersinusermode,thewritesareignored.

ThePCRmodulePMPROTSETxregisterscontainonebitperperipheralmemoryframe.Thesebitsdefine

theaccesspermissionstotheperipheralmemoryframes.IftheCPUattemptstowritetoaperipheral

memoryforwhichitdoesnothavethecorrectpermissions,aprotectionviolationisdetectedandanAbort

occurs.

NOTE:NoAccessProtectionforReads

ThePCRPPROTSETxandPMPROTSETxregistersprotecttheperipheralregistersand

memoriesagainstillegalwritesbytheCPU.TheCPUcanreadfromtheperipheralregisters

andmemoriesinbothuserandprivilegedmodes.

2.3.3SystemSoftwareInterrupts

Thesystemmoduleprovidesthecapabilityofgeneratinguptofoursoftwareinterrupts.Asoftware

interruptisgeneratedbywritingthecorrectkeyvaluetoeitherofthefourSystemSoftwareInterrupt

Registers(SSIRx).TheSSIregistersalsoallowtheapplicationtoprovidealabelforthatsoftware

interrupt.Thislabelisan8-bitvaluethatcanthenbeusedbytheinterruptserviceroutinetoperformthe

requiredtaskbasedonthevalueprovided.Thesourceofthesystemsoftwareinterruptisreflectedinthe

systemsoftwareinterruptvector(SSIVEC)register.

115

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Clockswww.ti.com

2.4Clocks

ThissectiondescribestheclockingstructureoftheTMS570LS31x/21xmicrocontrollers.

2.4.1ClockSources

Thedevicessupportupto7clocksources.TheseareshowninTable2-9.

Table2-9.ClockSources

ClockSource#

ClockSourceName

Description

Mainoscillator.Thisistheprimaryclockforthemicrocontrollerandisthe

0

OSCIN

primaryinputtothephase-lockedloops.Theoscillatorfrequencymustbe

between5and20MHz.

ThisistheoutputofthemainPLL.ThePLLiscapableofmodulatingits

1

PLL#1

outputfrequencyinacontrolledmannertoreducetheradiatedemissions.

Thisclocksourceisnotavailableandmustnotbeenabledorusedas

2

Notimplemented

sourceforanyclockdomain.

Externalclockinput1.Asquarewaveinputcanbeappliedtothisdevice

3

EXTCLKIN1

inputandusedasaclocksourceinsidethedevice.

Thisisthelow-frequencyoutputoftheinternalreferenceoscillator.Thisis

LFLPO

4

typicallyan80KHzsignalwhichisusedbythereal-timeinterruptmodule

(LowFrequencyLPO)

forgeneratingperiodicinterruptstowakeupfromalowpowermode.

Thisisthehigh-frequencyoutputoftheinternalreferenceoscillator.Thisis

HFLPO

5

typicallya10MHzsignalwhichisusedbytheclockmonitormoduleasa

(HighFrequencyLPO)

referenceclocktomonitorthemainoscillatorfrequency.

ThisistheoutputofthesecondPLL.Thereisnooptionofmodulatingthis

PLL’soutputsignal.Thisseparatenon-modulatingPLLallowsthe

6

PLL#2

generationofanasynchronousclocksourcethatisindependentofthe

CPUclockfrequency.

Externalclockinput2.Asquarewaveinputcanbeappliedtothisdevice

7

EXTCLKIN2

inputandusedasaclocksourceinsidethedevice.

Theelectricalspecificationsaswellastimingrequirementsforeachoftheaboveclocksourcesare

specifiedinthedevicedatasheet.

2.4.1.1Enabling/DisablingClockSources

EachclocksourcecanbeindependentlyenabledordisabledusingthesetofClockSourceDisable

registers–CSDIS,CSDISSETandCSDISCLR.

EachbitintheseregisterscorrespondstotheclocksourcenumberindicatedinTable2-9.Forexample,

settingbit1intheCSDISorCSDISSETregistersdisablesthePLL#1.

NOTE:DisablingtheMainOscillatororHFLPO

Bydefault,theclockmonitoringcircuitisenabledandchecksforthemainoscillator

frequencytobewithinacertainrangeusingtheHFLPOasareference.Ifthemainoscillator

and/ortheHFLPOaredisabledwiththeclockmonitoringstillenabled,theclockmonitorwill

indicateanoscillatorfault.Clockmonitoringmustbedisabledbeforedisablingthemain

oscillatorortheHFLPOclocksource(s).

Aclocksourceisonlydisabledoncethereisnoactiveclockdomainthatisusingthatclocksource.Also,

seeChapter10formoreinformationonenabling/disablingtheoscillatorandPLL.

OntheTMS570LS31x/21xmicrocontrollers,theclocksources0,4and5areenabledbydefault.

2.4.1.2CheckingforValidClockSources

Theapplicationcancheckwhetheraclocksourceisvalidornotbycheckingthecorrespondingbittobe

setintheClockSourceValidStatus(CSVSTAT)register.Forexample,theapplicationcancheckifbit1in

CSVSTATissetbeforeusingtheoutputofPLL1asthesourceforanyclockdomain.

116

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comClocks

NOTE:TheclocksourcesLFLPO,EXTCLKIN1andEXTCLKIN2havenovaliditycheck.These

clocksourcesareconsideredtobealwaysvalidandareavailableforusebyaclockdomain

assoonastheyareenabled.Theapplicationmustensurethatavalidclocksignalispresent

ontheEXTCLKINxinputsbeforeenablingtheseclocksources.

2.4.2ClockDomains

Theclockingonthisdeviceisdividedintomultipleclockdomainsforflexibilityincontrolaswellasclock

sourceselection.Thereare10clockdomainsonthisdevice.EachofthesearedescribedinTable2-10

below.

Table2-10.ClockDomains

Source

Clock

Default

ClockDomain

Selection

SpecialConsiderations

Domain#

Source

Register

•ClockdomainusedbyoneofthetwoCortex-R4FCPUsoperating

inlock-step

•AlwaysthesamefrequencyasHCLK

•InphasewithHCLK

GCLK

0

OSCIN

GHVSRC

•IsdisabledseparatelyfromHCLKviatheCDDISxregistersbit0

•Canbedividedby1upto8whenrunningCPUselftest(LBIST)

usingtheCLKDIVfieldoftheSTCCLKDIVregisterataddress

0xFFFFE108

•ClockdomainusedbythesecondCortex-R4FCPUoperatingin

lock-step

•AlwaysthesamefrequencyasGCLK

GCLK2

0

OSCIN

GHVSRC

•2cyclesdelayedfromGCLK

•IsdisabledalongwithGCLK

•GetsdividedbythesamedividersettingasthatforGCLKwhen

runningCPUselftest(LBIST)

•Clockdomainusedbythehigh-speedsystemmodules:Flash

memoryinterfaces,TCRAMinterface,ErrorSignalingModule

HCLK

1

OSCIN

GHVSRC

(ESM),DMA

•IsdisabledviatheCDDISxregistersbit1

•Clockdomainusedbysomesystemmodules(VIM),peripheral

modulesaccessedviathePeripheralCentralResource(PCR)

controller,andallotherregisterinterfacesalsoaccessedviathe

PCR

VCLK

2

OSCIN

GHVSRC

•DivideddownfromHCLK

•CanbeHCLK/1,HCLK/2,...orHCLK/16

•IsdisabledseparatelyfromHCLKviatheCDDISxregistersbit2

•Clockdomainusedbythetimermodules:N2HET1,N2HET2and

thededicatedtransferunits:HTU1,HTU2

•DivideddownfromHCLK

VCLK2

3

OSCIN

GHVSRC

•CanbeHCLK/1,HCLK/2,...orHCLK/16

•FrequencymustbeanintegermultipleofVCLKfrequency

•IsdisabledseparatelyfromHCLKviatheCDDISxregistersbit3

•ClockdomainusedforEMACandEMIFslaveinterfaces

•DivideddownfromHCLK

VCLK3

8

OSCIN

GHVSRC

•CanbeHCLK/1,HCLK/2,...orHCLK/16

•IsdisabledseparatelyfromHCLKviatheCDDISxregistersbit8

•ClockdomaindedicatedfortheCANcontrollers:DCAN1,DCAN2,

DCAN3,usedforbaud-rategeneration

VCLKA1

4

VCLK

VCLKASRC

•DefaultstoVCLKasthesource

•FrequencycanbeasfastasHCLKfrequency

•IsdisabledviatheCDDISxregistersbit4

117

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Clockswww.ti.com

Table2-10.ClockDomains(continued)

Source

Clock

Default

ClockDomain

Selection

SpecialConsiderations

Domain#

Source

Register

•ClockdomaindedicatedfortheFlexRaycontrollerandthe

dedicatedtransferunit

VCLKA2

5

VCLK

VCLKASRC

•DefaultstoVCLKasthesource

•FrequencycanbeasfastasHCLKfrequency

•IsdisabledviatheCDDISxregistersbit5

•ClockdomaindedicatedfortheEthernetcontroller(EMAC)when

theTXandRXclocksareinternallygenerated

VCLKA4

11

VCLK

VCLKACON1

•DefaultstoVCLKasthesource

•FrequencycanbeasfastasHCLKfrequency

•IsdisabledviatheCDDISxregistersbit11

•ClockdomaindedicatedfortimebasegenerationintheReal-Time

Interrupt(RTI)generationmodule

•DefaultstoVCLKasthesource

•IfaclocksourceotherthanVCLKisselectedforRTICLK,then

RTICLK

6

VCLK

RCLKSRC

theRTICLKfrequencymustbelessthanorequaltoVCLK/3

•ApplicationcanensurethisbyprogrammingtheRTI1DIVfieldof

theRCLKSRCregister,ifnecessary

•IsdisabledviatheCDDISxregistersbit6

EachofthecontrolregistersindicatedintheabovetablearedefinedinSection2.5.TheACtiming

characteristicsforeachclockdomainarespecifiedinthedevicedatasheet.

118

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comClocks

2.4.2.1Enabling/DisablingClockDomains

EachclockdomaincanbeindependentlyenabledordisabledusingthesetofClockDomainDisable

registers–CDDIS,CDDISSETandCDDISCLR.

EachbitintheseregisterscorrespondstotheclockdomainnumberindicatedinTable2-10.Forexample,

settingbit1intheCDDISorCDDISSETregistersdisablestheHCLKclockdomain.Theclockdomainwill

beturnedoffonlywheneverymodulethatusestheHCLKdomaingivesthe“permission”forHCLKtobe

turnedoff.

Allclockdomainsareenabledbydefault,oruponasystemreset,orwheneverawakeupconditionis

detected.

2.4.2.2MappingClockSourcestoClockDomains

Eachclockdomainneedstobemappedtoavalidclocksource.Therearecontrolregistersthatallowan

applicationtochoosetheclocksourcesforeachclockdomain.

•SelectingclocksourceforGCLK,HCLKandVCLKxdomains

TheCPUclock(GCLK),thesystemmoduleclock(HCLK),andtheperipheralbusclocks(VCLKx)alluse

thesameclocksource.ThisclocksourceisselectedviatheGHVSRCregister.Thedefaultsourceforthe

GCLK,HCLKandVCLKxisthemainoscillator.Thatis,afterpowerup,theGCLKandHCLKarerunning

attheOSCINfrequency,whiletheVCLKxfrequencyistheOSCINfrequencydividedby2.

•SelectingclocksourceforVCLKA1andVCLKA2domains

TheclocksourceforVCLKA1andVCLKA2domainsisselectedviatheVCLKASRCregister.Thedefault

sourcefortheandVCLKA2domainsisVCLK.

•SelectingclocksourceforVCLKA4domain

TheclocksourceforVCLKA4domainisselectedviatheVCLKACON1register.Thedefaultsourceforthe

VCLKA4domainisVCLK.

•SelectingclocksourceforRTICLKdomain

TheclocksourceforRTICLKdomainisselectedviatheRCLKSRCregister.Thedefaultsourceforthe

RTICLKdomainisVCLK.

NOTE:SelectingaclocksourceforRTICLKthatisnotVCLK

WhentheapplicationchoosesaclocksourceforRTICLKdomainthatisnotVCLK,thenthe

applicationmustensurethattheresultingRTICLKfrequencymustbelessthanorequalto

VCLKfrequencydividedby3.TheapplicationcanconfiguretheRTI1DIVfieldofthe

RCLKSRCregisterfordividingtheselectedclocksourcefrequencyby1,2,4or8tomeet

thisrequirement.

2.4.3LowPowerModes

Allclockdomainsareactiveinthenormaloperatingmode.Thisisthedefaultmodeofoperation.As

describedinSection2.4.1.1andSection2.4.2.1,theapplicationcanchoosetodisableanyparticularclock

sourceanddomainthatitdoesnotplantouse.Also,theperipheralcentralresourcecontroller(PCR)has

controlregisterstoenable/disabletheperipheralclock(VCLK)foreachperipheralselect.Thisoffersthe

applicationalargenumberofchoicesforenabling/disablingclocksources,orclockdomains,orclocksto

specificperipherals.

Thissectiondescribesthreeparticularlow-powermodesandtheirtypicalcharacteristics.Theyarenotthe

onlylow-powermodesconfigurablebytheapplication,asjustdescribed.

119

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Clockswww.ti.com

Table2-11.TypicalLow-PowerModes

Suggested

Active

Mode

ActiveClock

WakeUp

WakeUpTime(wakeupdetected-to-CPU

Clock

WakeUpOptions

Name

Source(s)

Clock

codeexecutionstart)

Domain(s)

Source(s)

Flashpumpsleep->activetransitiontime

RTIinterrupt,GIO

+

interrupt,CAN

Doze

Mainoscillator

RTICLK

Mainoscillator

Flashbanksleep->standbytransitiontime

message,SCI

+

message

Flashbankstandby->activetransitiontime

HFLPOwarmstart-uptime

+

RTIinterrupt,GIO

Flashpumpsleep->activetransitiontime

interrupt,CAN

Snooze

LFLPO

RTICLK

HFLPO

+

message,SCI

Flashbanksleep->standbytransitiontime

message

+

Flashbankstandby->activetransitiontime

HFLPOwarmstart-uptime

+

GIOinterrupt,CAN

Flashpumpsleep->activetransitiontime

Sleep

None

None

message,SCI

HFLPO

+

message

Flashbanksleep->standbytransitiontime

+

Flashbankstandby->activetransitiontime

2.4.3.1TypicalSoftwareSequencetoEnteraLow-PowerMode

1.Programtheflashbanksandflashpumpfall-backmodestobe“sleep”.

Theflashpumptransitionsfromactivetosleepmodeonlyafteralltheflashbankshaveswitchedfrom

activetosleepmode.Theflashbanksstartswitchingfromactivetosleepmodeonlyafterthebanks

arenotaccessedforatleastadurationdefinedbytheActiveGracePeriod(AGP)parameter

configuredforthebanks.SeeChapter5formoredetails.

2.Disabletheclocksourcesthatarenotrequiredtobekeptactive.

Aclocksourcedoesnotgetdisableduntilallclockdomainsusingthatclocksourcearedisabledfirst,

orareconfiguredtouseanalternateclocksource.

3.Disabletheclockdomainsthatarenotrequiredtobekeptactive.

Aclockdomaindoesnotgetdisableduntilallmodulesusingthatclockdomain“givetheirpermission”

forthatclockdomaintobeturnedoff.

4.IdletheCortex-R4Fcore.

TheARMCortex-R4FCPUhasinternalpowermanagementlogic,andrequiresadedicatedinstruction

tobeusedinordertoenteralowpowermode.ThisistheWaitForInterrupt(WFI)instruction.

WhenaWFIinstructionisexecuted,theCortex-R4Fcoreflushesitspipeline,flushesallwritebuffers,

andcompletesallpendingbustransactions.Atthistimethecoreindicatestothesystemthattheclock

tothecorecanbestopped.ThisindicationisusedbytheGlobalClockModule(GCM)toturnoffthe

CPUclockdomain(GCLK)iftheCDDISregisterbit0isset.

2.4.3.2SpecialConsiderationsforEntrytoLowPowerModes

Somebusmastermodules–High-EndTimerTransferUnits(HTUx),FlexRayTransferUnit(FTU),Data

ModificationModule(DMM),andParameterOverlayModule(POM),canhaveongoingtransactionswhen

theapplicationwantstoenteralowpowermodetoturnofftheclockstothosemodules.Thisisnot

recommendedasitcouldleavethedeviceinanunpredictablestate.Refertotheindividualmoduleuser

guidesformoreinformationaboutthesequencetobefollowedtosafelyenteralow-powermode.

2.4.3.3SelectingClockSourceUponWakeUp

ThedomainsforCPUclock(GCLK),thesystemclock(HCLK)andtheperipheralclock(VCLKx)usethe

sameclocksourceselectedviatheGHVSRCfieldoftheGHVSRCregister.TheGHVSRCregisteralso

allowstheapplicationtochoosetheclocksourceafterwakeupviatheGHVWAKEfield.

120

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comClocks

Whenawakeupconditionisdetected,iftheselectedwakeupclocksourceisnotalreadyactive,the

globalclockmodule(GCM)willenablethisselectedclocksource,waitforittobecomevalid,andthenuse

itfortheGCLK,HCLKandVCLKxdomains.TheotherclockdomainsVCLKAxandRTICLKretainthe

configurationfortheirclocksourceselectionregisters–VCLKASRC,VCLKACON1andRCLKSRC.

2.4.4ClockTestMode

TheTMS570LS31x/21xmicrocontrollerssupportatestmodewhichallowsausertobringoutseveral

differentclocksourcesandclockdomainsontotheECLKterminal.Thisisveryusefulinformationfor

debugpurposes.EachclocksourcealsohasacorrespondingclocksourcevalidstatusflagintheClock

SourceValidStatus(CSVSTAT)register.Theclocksourcevalidstatusflagscanalsobebroughtoutonto

theNHET1[12]terminalinthisclocktestmode.

TheclocktestmodeiscontrolledbytheCLKTESTregisterinthesystemmoduleregisterframe.

Figure2-4.ClockTestRegister(CLKTEST)[offset=FFFFFFF8Ch]

31

27

26

25

24

23

20

19

16

ALTLIMPCLOCK

RANGEDET

RANGEDETENA

Reserved

Reserved

CLK_TEST_EN

ENABLE

CTRL

SSEL

R-0

R/W-0

R/W-0

R/W-0

R-0

R/W-Ah

15

4

3

0

Reserved

SEL_ECP_PIN

R-0

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;-n=valueafterreset

Theclocktestmodeisenabledbywriting0x5totheCLK_TEST_ENfield.

ThesignaltobebroughtoutontotheECLKterminalisdefinedbytheSEL_ECP_PINfield,andthesignal

tobebroughtoutontotheNHET1[12]terminalisdefinedbytheSEL_GIO_PINfield.

ThechoicesfortheseselectionsaredefinedinTable2-12.

Table2-12.ClockTestModeOptions

SEL_ECP_PIN

SignalonECLK

SEL_GIO_PIN

SignalonNHET1[12]

0000

Oscillator

0000

OscillatorValidstatus

0001

PLL1free-runningclockoutput

0001

PLL1Validstatus

0010

Reserved

0010

Reserved

0011

EXTCLKIN1

0011

Reserved

0100

CLK80K

0100

Reserved

0101

CLK10M

0101

CLK10MValidstatus

0110

PLL2free-runningclockoutput

0110

PLL2ValidStatus

0111

EXTCLKIN2

0111

Reserved

1000

GCLK

1000

CLK80K

1001

RTIBase

1001

Reserved

1010

Reserved

1010

Reserved

1011

AVCLK1

1011

Reserved

1100

AVCLK2

1100

Reserved

1101

Reserved

1101

Reserved

1110

AVCLK4

1110

Reserved

1111

Reserved

1111

Reserved

121

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Clockswww.ti.com

2.4.5SafetyConsiderationsforClocks

TheTMS570LS31x/21xmicrocontrollersaretargetedforuseinseveralsafety-criticalapplications.The

followingsectionsdescribetheinternalorexternalmonitoringmechanismsthatdetectandsignalclock

sourcefailures.

2.4.5.1OscillatorMonitor

TheoscillatorclockfrequencyismonitoredbyadedicatedcircuitrycalledCLKDETusingtheHFLPOas

thereferenceclock.TheCLKDETflagsanoscillatorfailconditionwhenevertheOSCINfrequencyfalls

outsideofarangewhichisdefinedbytheHFLPOfrequency.

ThevalidOSCINrangeisdefinedasaminimumoff(HFLPO)/4toamaximumoff(HFLPO)*4.

Referthespecificdevicedatasheettoidentifytherangeoftheprimaryoscillatorfrequencythatis

consideredvalid.

Theapplicationcanselectthedeviceresponsetoanoscillatorfailindication.SeeChapter10formore

detailsontheoscillatormonitoringandthesystemresponsechoices.

2.4.5.2PLLSlipDetector

BoththePLLmacrosimplementedonthemicrocontrollershaveanembeddedslipdetectioncircuit.APLL

slipisdetectedbytheslipdetectorunderthefollowingconditions:

1.Referencecycleslip,RFSLIP—theoutputclockisrunningtoofastrelativetothereferenceclock

2.Feedbackcycleslip,FBSLIP—theoutputclockisrunningtooslowrelativetothereferenceclock

ThedevicealsoincludesoptionalfiltersthatcanbeenabledbeforeaslipindicationfromthePLLis

actuallyloggedinthesystemmoduleGlobalStatusRegister(GLBSTAT).Also,onceaPLLslipcondition

isloggedinthesystemmoduleglobalstatusregister,theapplicationcanchoosethedevice’sresponseto

theslipindication.SeeChapter10formoredetailsonPLLslipandthesystemresponsechoices.

2.4.5.3ExternalClockMonitor

ThemicrocontrollerssupportaterminalcalledECLK–ExternalClock,whichisusedtooutputaslow

frequencywhichisdivideddownfromthedevicesystemclockfrequency.Anexternalcircuitcanmonitor

theECLKfrequencyinordertocheckthatthedeviceisoperatingatthecorrectfrequency.

ThefrequencyofthesignaloutputontheECLKpincanbedivideddownby1to65536fromthe

peripheralclock(VCLK)frequencyusingtheExternalClockPrescalerControlRegister(ECPCNTL).The

actualclockoutputonECLKisenabledbysettingtheECPCLKFUNbitoftheSYSPC1controlregister.

2.4.5.4Dual-ClockComparators

Themicrocontrollersincludetwoinstancesofthedual-clockcomparatormodule.Thismoduleincludestwo

downcounterswhichindependentlycountfromtwoseparateseedvaluesattherateoftwoindependent

clockfrequencies.Oneoftheclockinputsisareferenceclockinput,selectablebetweenthemain

oscillatorortheHFLPOinfunctionalmode.Thesecondclockinputisselectablefromamongasetof

definedsignalsasdescribedinSection2.4.5.4.1andSection2.4.5.4.2.Thismechanismcanbeusedto

useaknown-goodclocktomeasurethefrequencyofanotherclock.

122

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comClocks

2.4.5.4.1DCC1

Table2-13.DCC1Counter0ClockInputs

ClockSource[3–0]

Clock/SignalName

Allothervalues

oscillator(OSCIN)

0x5

HFLPO

0xA

testclock(TCK)

Table2-14.DCC1Counter1Clock/SignalInputs

Key[3–0]

ClockSource[3–0]

Clock/SignalName

0x0

PLL1free-runningoutput

0x1

PLL2free-runningoutput

0x2

LFLPO

0x3

HFLPO

0xA

0x4

Reserved

0x5

EXTCLKIN1

0x6

EXTCLKIN2

0x7

Reserved

0x8-0xF

VCLK

Allothervalues

anyvalue

NHET1[31]

Ascanbeseen,themainoscillator(OSCIN)canbeusedforcounter0asa“known-good”reference

clock.Theclockforcounter1canbeselectedfromamong8options.SeeChapter11formoredetailson

theDCCusage.

2.4.5.4.2DCC2

Table2-15.DCC2Counter0ClockInputs

ClockSource[3–0]

Clock/SignalName

Allothervalues

oscillator(OSCIN)

0xA

testclock(TCK)

Table2-16.DCC2Counter1Clock/SignalInputs

Key[3–0]

ClockSource[3–0]

Clock/SignalName

0x0-0x7

Reserved

0xA

0x8-0xF

VCLK

Allothervalues

anyvalue

NHET2[0]

Ascanbeseen,themainoscillator(OSCIN)canbeusedforcounter0asa“known-good”reference

clock.Theclockforcounter1canbeselectedfromamong2options.SeeChapter11formoredetailson

theDCCusage.

123

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5SystemandPeripheralControlRegisters

ThefollowingsectionsdescribethesystemandperipheralcontrolregistersoftheTMS570LS31x/21x

microcontroller.

2.5.1PrimarySystemControlRegisters(SYS)

ThissectiondescribestheSYSTEMregisters.Theseregistersarebrokenupintotwoseparateframes.

ThestartaddressoftheprimarysystemmoduleframeisFFFFFF00handtheendaddressisFFFF

FFFFh.ThestartaddressofthesecondarysystemmoduleframeisFFFFE100handtheendaddressis

FFFFE1FFh.Theregisterssupport32-,16-,and8-bitwrites.Theoffsetisrelativetothesystemmodule

framestartaddress.

Table2-17containsalistoftheprimarysystemcontrolregisters.

Table2-17.PrimarySystemControlRegisters

Offset

Acronym

RegisterDescription

Section

00h

SYSPC1

SYSPinControlRegister1

Section2.5.1.1

04h

SYSPC2

SYSPinControlRegister2

Section2.5.1.2

08h

SYSPC3

SYSPinControlRegister3

Section2.5.1.3

0Ch

SYSPC4

SYSPinControlRegister4

Section2.5.1.4

10h

SYSPC5

SYSPinControlRegister5

Section2.5.1.5

14h

SYSPC6

SYSPinControlRegister6

Section2.5.1.6

18h

SYSPC7

SYSPinControlRegister7

Section2.5.1.7

1Ch

SYSPC8

SYSPinControlRegister8

Section2.5.1.8

20h

SYSPC9

SYSPinControlRegister9

Section2.5.1.9

30h

CSDIS

ClockSourceDisableRegister

Section2.5.1.10

34h

CSDISSET

ClockSourceDisableSetRegister

Section2.5.1.11

38h

CSDISCLR

ClockSourceDisableClearRegister

Section2.5.1.12

3Ch

CDDIS

ClockDomainDisableRegister

Section2.5.1.13

40h

CDDISSET

ClockDomainDisableSetRegister

Section2.5.1.14

44h

CDDISCLR

ClockDomainDisableClearRegister

Section2.5.1.15

48h

GHVSRC

GCLK,HCLK,VCLK,andVCLK2SourceRegister

Section2.5.1.16

4Ch

VCLKASRC

PeripheralAsynchronousClockSourceRegister

Section2.5.1.17

50h

RCLKSRC

RTIClockSourceRegister

Section2.5.1.18

54h

CSVSTAT

ClockSourceValidStatusRegister

Section2.5.1.19

58h

MSTGCR

MemorySelf-TestGlobalControlRegister

Section2.5.1.20

5Ch

MINITGCR

MemoryHardwareInitializationGlobalControlRegister

Section2.5.1.21

60h

MSIENA

MemorySelf-Test/InitializationEnableRegister

Section2.5.1.22

64h

Reserved

Reserved

68h

MSTCGSTAT

MSTCGlobalStatusRegister

Section2.5.1.23

6Ch

MINISTAT

MemoryHardwareInitializationStatusRegister

Section2.5.1.24

70h

PLLCTL1

PLLControlRegister1

Section2.5.1.25

74h

PLLCTL2

PLLControlRegister2

Section2.5.1.26

78h

SYSPC10

SYSPinControlRegister10

Section2.5.1.27

7Ch

DIEIDL

DieIdentificationRegister,LowerWord

Section2.5.1.28

80h

DIEIDH

DieIdentificationRegister,UpperWord

Section2.5.1.29

88h

LPOMONCTL

LPO/ClockMonitorControlRegister

Section2.5.1.30

8Ch

CLKTEST

ClockTestRegister

Section2.5.1.31

90h

DFTCTRLREG

DFTControlRegister

Section2.5.1.32

94h

DFTCTRLREG2

DFTControlRegister2

Section2.5.1.33

98h-9Ch

Reserved

Reserved

A0h

GPREG1

GeneralPurposeRegister

Section2.5.1.34

124

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-17.PrimarySystemControlRegisters(continued)

Offset

Acronym

RegisterDescription

Section

A8h

IMPFASTS

ImpreciseFaultStatusRegister

Section2.5.1.35

ACh

IMPFTADD

ImpreciseFaultWriteAddressRegister

Section2.5.1.36

B0h

SSIR1

SystemSoftwareInterruptRequest1Register

Section2.5.1.37

B4h

SSIR2

SystemSoftwareInterruptRequest2Register

Section2.5.1.38

B8h

SSIR3

SystemSoftwareInterruptRequest3Register

Section2.5.1.39

BCh

SSIR4

SystemSoftwareInterruptRequest4Register

Section2.5.1.40

C0h

RAMGCR

RAMControlRegister

Section2.5.1.41

C4h

BMMCR1

BusMatrixModuleControlRegister1

Section2.5.1.42

C8h

Reserved

Reserved

CCh

CPURSTCR

CPUResetControlRegister

Section2.5.1.43

D0h

CLKCNTL

ClockControlRegister

Section2.5.1.44

D4h

ECPCNTL

ECPControlRegister

Section2.5.1.45

DCh

DEVCR1

DEVParityControlRegister1

Section2.5.1.46

E0h

SYSECR

SystemExceptionControlRegister

Section2.5.1.47

E4h

SYSESR

SystemExceptionStatusRegister

Section2.5.1.48

E8h

SYSTASR

SystemTestAbortStatusRegister

Section2.5.1.49

ECh

GLBSTAT

GlobalStatusRegister

Section2.5.1.50

F0h

DEVID

DeviceIdentificationRegister

Section2.5.1.51

F4h

SSIVEC

SoftwareInterruptVectorRegister

Section2.5.1.52

F8h

SSIF

SystemSoftwareInterruptFlagRegister

Section2.5.1.53

125

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.1SYSPinControlRegister1(SYSPC1)

TheSYSPC1register,showninFigure2-5anddescribedinTable2-18,controlsthefunctionoftheECLK

pin.

Figure2-5.SYSPinControlRegister1(SYSPC1)[offset=00h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKFUN

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-18.SYSPinControlRegister1(SYSPC1)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKFUN

ECLKfunction.ThisbitchangesthefunctionoftheECLKpin.

0

ECLKisinGIOmode.

1

ECLKisinfunctionalmodeasaclockoutput.

Note:ProperECLKdutycycleisnotassureduntil1ECLKcyclehaselapsedafterswitching

intofunctionalmode.

2.5.1.2SYSPinControlRegister2(SYSPC2)

TheSYSPC2register,showninFigure2-6anddescribedinTable2-19,controlswhetherthepinisan

inputoranoutputwheninGIOmode.

Figure2-6.SYSPinControlRegister2(SYSPC2)[offset=04h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKDIR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-19.SYSPinControlRegister2(SYSPC2)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKDIR

ECLKdatadirection.ThisbitcontrolsthedirectionoftheECLKpinwhenitisconfiguredtobein

GIOmodeonly.

0

TheECLKpinisaninput.

Note:Ifthepindirectionissetasaninput,theoutputbufferistristated.

1

TheECLKpinisanoutput.

Note:TheECLKpinisplacedintoGIOmodebyclearingtheECPCLKFUNbitto0inthe

SYSPC1register.

126

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.3SYSPinControlRegister3(SYSPC3)

TheSYSPC3register,showninFigure2-7anddescribedinTable2-20,displaysthelogicstateofthe

ECLKpinwhenitisinGIOmode.

Figure2-7.SYSPinControlRegister3(SYSPC3)[offset=08h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKDIN

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=Undefined

Table2-20.SYSPinControlRegister3(SYSPC3)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKDIN

ECLKdatain.ThisbitdisplaysthelogicstateoftheECLKpinwhenitisconfiguredtobeinGIO

mode.

0

TheECLKpinisatlogiclow(0).

1

TheECLKpinisatlogichigh(1).

2.5.1.4SYSPinControlRegister4(SYSPC4)

TheSYSPC4register,showninFigure2-8anddescribedinTable2-21,controlsthelogicleveloutput

functionoftheECLKpinwhenwhenitisconfiguredasanoutputinGIOmode.

Figure2-8.SYSPinControlRegister4(SYSPC4)[offset=0Ch]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKDOUT

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-21.SYSPinControlRegister4(SYSPC4)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKDOUT

ECLKdataoutwrite.ThisbitisonlyactivewhentheECLKpinisconfiguredtobeinGIOmode.

WritestothisbitwillonlytakeeffectwhentheECLKpinisconfiguredasanoutputinGIOmode.

ThecurrentlogicstateoftheECLKpinwillbedisplayedbythisbitinbothinputandoutputGIO

mode.

0

TheECLKpinisdriventologiclow(0).

1

TheECLKpinisdriventologichigh(1).

Note:TheECLKpinisplacedintoGIOmodebysettingtheECPCLKFUNbitto0inthe

SYSPC1register.TheECLKpinisplacedinoutputmodebysettingtheECPCLKDIRbitto1

intheSYSPC2register.

127

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.5SYSPinControlRegister5(SYSPC5)

TheSYSPC5register,showninFigure2-9anddescribedinTable2-22,controlsthesetfunctionofthe

ECLKpinwhenwhenitisconfiguredasanoutputinGIOmode.

Figure2-9.SYSPinControlRegister5(SYSPC5)[offset=10h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKSET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-22.SYSPinControlRegister5(SYSPC5)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKSET

ECLKdataoutset.ThisbitdrivestheoutputoftheECLKpinhighwhensetinGIOoutputmode.

0

Write:Writinga0hasnoeffect.

1

Write:TheECLKpinisdriventologichigh(1).

Note:ThecurrentlogicstateoftheECPCLKDOUTbitwillalsobedisplayedbythisbitwhen

thepinisconfiguredinGIOoutputmode.

Note:TheECLKpinisplacedintoGIOmodebysettingtheECPCLKFUNbitto0inthe

SYSPC1register.TheECLKpinisplacedinoutputmodebysettingtheECPCLKDIRbitto1

intheSYSPC2register.

2.5.1.6SYSPinControlRegister6(SYSPC6)

TheSYSPC6register,showninFigure2-10anddescribedinTable2-23,controlstheclearfunctionofthe

ECLKpinwhenwhenitisconfiguredasanoutputinGIOmode..

Figure2-10.SYSPinControlRegister6(SYSPC6)[offset=14h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKCLR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-23.SYSPinControlRegister6(SYSPC6)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKCLR

ECLKdataoutclear.ThisbitdrivestheoutputoftheECLKpinlowwhensetinGIOoutputmode.

0

Write:TheECLKpinvalueisunchanged.

1

Write:TheECLKpinisdriventologiclow(0).

Note:ThecurrentlogicstateoftheECPCLKDOUTbitwillalsobedisplayedbythisbitwhen

thepinisconfiguredinGIOoutputmode.

Note:TheECLKpinisplacedintoGIOmodebysettingtheECPCLKFUNbitto0inthe

SYSPC1register.TheECLKpinisplacedinoutputmodebysettingtheECPCLKDIRbitto1

intheSYSPC2register.

128

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.7SYSPinControlRegister7(SYSPC7)

TheSYSPC7register,showninFigure2-11anddescribedinTable2-24,controlstheopendrainfunction

oftheECLKpin.

Figure2-11.SYSPinControlRegister7(SYSPC7)[offset=18h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKODE

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-24.SYSPinControlRegister7(SYSPC7)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKODE

ECLKopendrainenable.ThisbitisonlyactivewhenECLKisconfiguredtobeinGIOmode.

0

TheECLKpinisconfiguredinpush/pull(normalGIO)mode.

1

TheECLKpinisconfiguredinopendrainmode.TheECPCLKDOUTbitintheSYSPC4register

controlsthestateoftheECLKoutputbuffer:

ECPCLKDOUT=0TheECLKoutputbufferisdrivenlow

ECPCLKDOUT=1TheECLKoutputbufferistristated

Note:TheECLKpinisplacedintoGIOmodebysettingtheECPCLKFUNbitto0inthe

SYSPC1register.

2.5.1.8SYSPinControlRegister8(SYSPC8)

TheSYSPC8register,showninFigure2-12anddescribedinTable2-25,controlsthepullenablefunction

oftheECLKpinwhenitisconfiguredasaninputinGIOmode.

Figure2-12.SYSPinControlRegister8(SYSPC8)[offset=1Ch]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKPUE

R-0

R/W-D

LEGEND:R/W=Read/Write;R=Readonly;D=DeviceSpecific;-n=valueafterreset

Table2-25.SYSPinControlRegister8(SYSPC8)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKPUE

ECLKpullenable.WritestothisbitwillonlytakeeffectwhentheECLKpinisconfiguredasan

inputinGIOmode.

0

ECLKpullenableisactive.

1

ECLKpullenableisinactive.

Note:Thepulldirection(up/down)isselectedbytheECPCLKPSbitintheSYSPC9register.

Note:TheECLKpinisplacedintoGIOmodebysettingtheECPCLKFUNbitto0inthe

SYSPC1register.TheECLKpinisplacedininputmodebysettingtheECPCLKDIRbitto0in

theSYSPC2register.

129

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.9SYSPinControlRegister9(SYSPC9)

TheSYSPC9register,showninFigure2-13anddescribedinTable2-26,controlsthepullup/pulldown

configurationoftheECLKpinwhenitisconfiguredasaninputinGIOmode.

Figure2-13.SYSPinControlRegister9(SYSPC9)[offset=20h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLKPS

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-26.SYSPinControlRegister9(SYSPC9)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLKPS

ECLKpullup/pulldownselect.ThisbitisonlyactivewhenECLKisconfiguredasaninputinGIO

modeandthepullup/pulldownlogicisenabled.

0

ECLKpulldownisselected,whenpullup/pulldownlogicisenabled.

1

ECLKpullupisselected,whenpullup/pulldownlogicisenabled.

Note:TheECLKpinpullup/pulldownlogicisenabledbysettingtheECPCLKPUEbitto0in

theSYSPC8register.

Note:TheECLKpinisplacedintoGIOmodebysettingtheECPCLKFUNbitto0inthe

SYSPC1register.TheECLKpinisplacedininputmodebysettingtheECPCLKDIRbitto0in

theSYSPC2register.

130

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.10ClockSourceDisableRegister(CSDIS)

TheCSDISregister,showninFigure2-14anddescribedinTable2-27,controlsanddisplaysthestateof

thedeviceclocksources.

Figure2-14.ClockSourceDisableRegister(CSDIS)[offset=30h]

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

CLKSR7OFF

CLKSR6OFF

CLKSR5OFF

CLKSR4OFF

CLKSR3OFF

Reserved

CLKSR1OFF

CLKSR0OFF

R/WP-1

R/WP-1

R/WP-0

R/WP-0

R/WP-1

R-1

R/WP-1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-27.ClockSourceDisableRegister(CSDIS)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-3

CLKSR[7-3]OFF

Clocksource[7-3]off.

0

Clocksource[7-3]isenabled.

1

Clocksource[7-3]isdisabled.

Note:Onwakeup,onlyclocksources0,4and5areenabled.

2

Reserved

Readsreturnone.Writeshavenoeffect.

1-0

CLKSR[1-0]OFF

Clocksource[1-0]off.

0

Clocksource[1-0]isenabled.

1

Clocksource[1-0]isdisabled.

Note:Onwakeup,onlyclocksources0,4and5areenabled.

Table2-28.ClockSourcesTable

ClockSource#

ClockSourceName

ClockSource0

Oscillator

ClockSource1

PLL1

ClockSource2

NotImplemented

ClockSource3

EXTCLKIN

ClockSource4

LowFrequencyLPO(LowPowerOscillator)clock

ClockSource5

HighFrequencyLPO(LowPowerOscillator)clock

ClockSource6

PLL2

ClockSource7

EXTCLKIN2

NOTE:Nonimplementedclocksourcesshouldnotbeenabledorused.

131

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.11ClockSourceDisableSetRegister(CSDISSET)

TheCSDISSETregister,showninFigure2-15anddescribedinTable2-29,setsclocksourcestothe

disabledstate.

Figure2-15.ClockSourceDisableSetRegister(CSDISSET)[offset=34h]

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

SETCLKSR7OFF

SETCLKSR6OFF

SETCLKSR5OFF

SETCLKSR4OFF

SETCLKSR3OFF

Reserved

SETCLKSR1OFF

SETCLKSR0OFF

R/WP-1

R/WP-1

R/WP-0

R/WP-0

R/WP-1

R-1

R/WP-1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-29.ClockSourceDisableSetRegister(CSDISSET)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-3

SETCLKSR[7-3]OFF

Setclocksource[7-3]tothedisabledstate.

0

Read:Clocksource[7-3]isenabled.

Write:Clocksource[7-3]isunchanged.

1

Read:Clocksource[7-3]isdisabled.

Write:Clocksource[7-3]issettothedisabledstate.

Note:AfteranewclocksourcedisablebitissetviatheCSDISSETregister,thenew

statusofthebitwillbereflectedintheCSDISregister(offset30h),theCSDISSET

register(offset34h)andtheCSDISCLRregister(offset38h).

2

Reserved

1

Readsreturn1.Writeshavenoeffect.

1-0

SETCLKSR[1-0]OFF

Setclocksource[1-0]tothedisabledstate.

0

Read:Clocksource[1-0]isenabled.

Write:Clocksource[1-0]isunchanged.

1

Read:Clocksource[1-0]isdisabled.

Write:Clocksource[1-0]issettothedisabledstate.

Note:AfteranewclocksourcedisablebitissetviatheCSDISSETregister,thenew

statusofthebitwillbereflectedintheCSDISregister(offset30h),theCSDISSET

register(offset34h)andtheCSDISCLRregister(offset38h).

NOTE:AlistoftheavailableclocksourcesisshowninTable2-28.

132

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.12ClockSourceDisableClearRegister(CSDISCLR)

TheCSDISCLRregister,showninFigure2-16anddescribedinTable2-30,clearsclocksourcestothe

enabledstate.

Figure2-16.ClockSourceDisableClearRegister(CSDISCLR)[offset=38h]

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

CLRCLKSR7OFF

CLRCLKSR6OFF

CLRCLKSR5OFF

CLRCLKSR4OFF

CLRCLKSR3OFF

Reserved

CLRCLKSR1OFF

CLRCLKSR0OFF

R/WP-1

R/WP-1

R/WP-0

R/WP-0

R/WP-1

R-1

R/WP-1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-30.ClockSourceDisableClearRegister(CSDISCLR)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-3

CLRCLKSR[7-3]OFF

Enablesclocksource[7-3].

0

Read:Clocksource[7-3]isdisabled.

Write:Clocksource[7-3]isunchanged.

1

Read:Clocksource[7-3]isenabled.

Write:Clocksource[7-3]issettotheenabledstate.

Note:AfteranewclocksourcedisablebitissetviatheCSDISSETregister,thenew

statusofthebitwillbereflectedintheCSDISregister(offset30h),theCSDISSET

register(offset34h)andtheCSDISCLRregister(offset38h).

2

Reserved

1

Readsreturn1.Writeshavenoeffect.

1-0

CLRCLKSR[1-0]OFF

Enablesclocksource[1-0].

0

Read:Clocksource[1-0]isdisabled.

Write:Clocksource[1-0]isunchanged.

1

Read:Clocksource[1-0]isenabled.

Write:Clocksource[1-0]issettotheenabledstate.

Note:AfteranewclocksourcedisablebitissetviatheCSDISSETregister,thenew

statusofthebitwillbereflectedintheCSDISregister(offset30h),theCSDISSET

register(offset34h)andtheCSDISCLRregister(offset38h).

NOTE:AlistoftheavailableclocksourcesisshowninTable2-28.

133

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.13ClockDomainDisableRegister(CDDIS)

TheCDDISregister,showninFigure2-17anddescribedinTable2-31,controlsthestateoftheclock

domains.

NOTE:Alltheclockdomainsareenabledonwakeup.

TheapplicationshouldguaranteethatwhenHCLKandVCLK_sysareturnedoffthroughthe

HCLKOFFbit,theGCLKdomainisalsoturnedoff.

Figure2-17.ClockDomainDisableRegister(CDDIS)[offset=3Ch]

31

16

Reserved

R-0

15

12

11

10

9

8

Reserved

VCLKA4OFF

VCLKA3OFF

Reserved

VCLK3OFF

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

Reserved

RTICLK1OFF

VCLKA2OFF

VCLKA1OFF

VCLK2OFF

VCLKPOFF

HCLKOFF

GCLKOFF

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-31.ClockDomainDisableRegister(CDDIS)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-10

VCLKA[4-3]OFF

VCLKA[4-3]domainoff.

0

TheVCLKA[4-3]domainisenabled.

1

TheVCLKA[4-3]domainisdisabled.

9

Reserved

0-1

Readsreturn0or1andprivilegemodewritesallowed.

8

VCLK3OFF

VCLK3domainoff.

0

TheVCLK3domainisenabled.

1

TheVCLK3domainisdisabled.

7

Reserved

0-1

Readsreturn0or1andprivilegemodewritesallowed.

6

RTICLK1OFF

RTICLK1domainoff.

0

TheRTICLK1domainisenabled.

1

TheRTICLK1domainisdisabled.

5-4

VCLKA[2-1]OFF

VCLKA[2-1]domainoff.

0

TheVCLKA[2-1]domainisenabled.

1

TheVCLKA[2-1]domainisdisabled.

3

VCLK2OFF

VCLK2domainoff.

0

TheVCLK2domainisenabled.

1

TheVCLK2domainisdisabled.

2

VCLKPOFF

VCLK_periphdomainoff.

0

TheVCLK_periphdomainisenabled.

1

TheVCLK_periphdomainisdisabled.

1

HCLKOFF

HCLKandVCLK_sysdomainsoff.

0

TheHCLKandVCLK_sysdomainsareenabled.

1

TheHCLKandVCLK_sysdomainsaredisabled.

0

GCLKOFF

GCLKdomainoff.

0

TheGCLKdomainisenabled.

1

TheGCLKdomainisdisabled.

134

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.14ClockDomainDisableSetRegister(CDDISSET)

ThisCDDISSETregister,showninFigure2-18anddescribedinTable2-32,setsclockdomainstothe

disabledstate.

Figure2-18.ClockDomainDisableSetRegister(CDDISSET)[offset=40h]

31

16

Reserved

R-0

15

12

11

10

9

8

Reserved

SETVCLKA4OFF

SETVCLKA3OFF

Reserved

SETVCLK3OFF

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

Reserved

SETRTI1CLKOFF

SETVCLKA2OFF

CLKVCLKA1OFF

CLKVCLK2OFF

CLKVCLKPOFF

CLRHCLKOFF

CLRGCLKOFF

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-32.ClockDomainDisableSetRegister(CDDISSET)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-10

SETVCLKA[4-3]OFF

SetVCLKA[4-3]domain.

0

Read:TheVCLKA[4-3]domainisenabled.

Write:TheVCLKA[4-3]domainisunchanged.

1

Read:TheVCLKA[4-3]domainisdisabled.

Write:TheVCLKA[4-3]domainissettotheenabledstate.

9

Reserved

0-1

Readsreturn0or1andprivilegemodewritesallowed.

8

SETVCLK3OFF

SetVCLK3domain.

0

Read:TheVCLK3domainisenabled.

Write:TheVCLK3domainisunchanged.

1

Read:TheVCLK3domainisdisabled.

Write:TheVCLK3domainissettotheenabledstate.

7

Reserved

0-1

Readsreturn0or1andprivilegemodewritesallowed.

6

SETRTI1CLKOFF

SetRTICLK1domain.

0

Read:TheRTICLK1domainisenabled.

Write:TheRTICLK1domainisunchanged.

1

Read:TheRTICLK1domainisdisabled.

Write:TheRTICLK1domainissettotheenabledstate.

5

SETTVCLKA2OFF

SetVCLKA2domain.

0

Read:TheVCLKA2domainisenabled.

Write:TheVCLKA2domainisunchanged.

1

Read:TheVCLKA2domainisdisabled.

Write:TheVCLKA2domainissettotheenabledstate.

4

SETVCLKA1OFF

SetVCLKA1domain.

0

Read:TheVCLKA1domainisenabled.

Write:TheVCLKA1domainisunchanged.

1

Read:TheVCLKA1domainisdisabled.

Write:TheVCLKA1domainissettotheenabledstate.

135

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

Table2-32.ClockDomainDisableSetRegister(CDDISSET)FieldDescriptions(continued)

Bit

Field

Value

Description

3

SETVCLK2OFF

SetVCLK2domain.

0

Read:TheVCLK2domainisenabled.

Write:TheVCLK2domainisunchanged.

1

Read:TheVCLK2domainisdisabled.

Write:TheVCLK2domainissettotheenabledstate.

2

SETVCLKPOFF

SetVCLK_periphdomain.

0

Read:TheVCLK_periphdomainisenabled.

Write:TheVCLK_periphdomainisunchanged.

1

Read:TheVCLK_periphdomainisdisabled.

Write:TheVCLK_periphdomainissettotheenabledstate.

1

SETHCLKOFF

SetHCLKandVCLK_sysdomains.

0

Read:TheHCLKandVCLK_sysdomainisenabled.

Write:TheHCLKandVCLK_sysdomainisunchanged.

1

Read:TheHCLKandVCLK_sysdomainisdisabled.

Write:TheHCLKandVCLK_sysdomainissettotheenabledstate.

0

SETGCLKOFF

SetGCLKdomain.

0

Read:TheGCLKdomainisenabled.

Write:TheGCLKdomainisunchanged.

1

Read:TheGCLKdomainisdisabled.

Write:TheGCLKdomainissettotheenabledstate.

2.5.1.15ClockDomainDisableClearRegister(CDDISCLR)

TheCDDISCLRregister,showninFigure2-19anddescribedinTable2-33,clearsclockdomainstothe

enabledstate.

Figure2-19.ClockDomainDisableClearRegister(CDDISCLR)[offset=44h]

31

16

Reserved

R-0

15

12

11

10

9

8

Reserved

CLRVCLKA4OFF

CLRVCLKA3OFF

Reserved

CLRVCLK3OFF

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

Reserved

CLRRTI1CLKOFF

CLRVCLKA2OFF

CLRVCLKA1OFF

CLRVCLK2OFF

CLRVCLKPOFF

CLRHCLKOFF

CLRGCLKOFF

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-33.ClockDomainDisableClearRegister(CDDISCLR)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-10

CLRVCLKA[4-3]OFF

ClearVCLKA[4-3]domain.

0

Read:TheVCLKA[4-3]domainisenabled.

Write:TheVCLKA[4-3]domainisunchanged.

1

Read:TheVCLKA[4-3]domainisdisabled.

Write:TheVCLKA[4-3]domainisclearedtotheenabledstate.

9

Reserved

0-1

Readsreturn0or1andprivilegemodewritesallowed.

136

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-33.ClockDomainDisableClearRegister(CDDISCLR)FieldDescriptions(continued)

Bit

Field

Value

Description

8

CLRVCLK3OFF

ClearVCLK3domain.

0

Read:TheVCLK3domainisenabled.

Write:TheVCLK3domainisunchanged.

1

Read:TheVCLK3domainisdisabled.

Write:TheVCLK3domainisclearedtotheenabledstate.

7

Reserved

0-1

Readsreturn0or1andprivilegemodewritesallowed.

6

CLRRTI1CLKOFF

ClearRTICLK1domain.

0

Read:TheRTICLK1domainisenabled.

Write:TheRTICLK1domainisunchanged.

1

Read:TheRTICLK1domainisdisabled.

Write:TheRTICLK1domainisclearedtotheenabledstate.

5

CLRTVCLKA2OFF

ClearVCLKA2domain.

0

Read:TheVCLKA2domainisenabled.

Write:TheVCLKA2domainisunchanged.

1

Read:TheVCLKA2domainisdisabled.

Write:TheVCLKA2domainisclearedtotheenabledstate.

4

CLRVCLKA1OFF

ClearVCLKA1domain.

0

Read:TheVCLKA1domainisenabled.

Write:TheVCLKA1domainisunchanged.

1

Read:TheVCLKA1domainisdisabled.

Write:TheVCLKA1domainisclearedtotheenabledstate.

3

CLRVCLK2OFF

ClearVCLK2domain.

0

Read:TheVCLK2domainisenabled.

Write:TheVCLK2domainisunchanged.

1

Read:TheVCLK2domainisdisabled.

Write:TheVCLK2domainisclearedtotheenabledstate.

2

CLRVCLKPOFF

ClearVCLK_periphdomain.

0

Read:TheVCLK_periphdomainisenabled.

Write:TheVCLK_periphdomainisunchanged.

1

Read:TheVCLK_periphdomainisdisabled.

Write:TheVCLK_periphdomainisclearedtotheenabledstate.

1

CLRHCLKOFF

ClearHCLKandVCLK_sysdomains.

0

Read:TheHCLKandVCLK_sysdomainisenabled.

Write:TheHCLKandVCLK_sysdomainisunchanged.

1

Read:TheHCLKandVCLK_sysdomainisdisabled.

Write:TheHCLKandVCLK_sysdomainisclearedtotheenabledstate.

0

CLRGCLKOFF

ClearGCLKdomain.

0

Read:TheGCLKdomainisenabled.

Write:TheGCLKdomainisunchanged.

1

Read:TheGCLKdomainisdisabled.

Write:TheGCLKdomainisclearedtotheenabledstate.

137

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.16GCLK,HCLK,VCLK,andVCLK2SourceRegister(GHVSRC)

TheGHVSRCregister,showninFigure2-20anddescribedinTable2-34,controlstheclocksource

configurationfortheGCLK,HCLK,VCLKandVCLK2clockdomains.

Figure2-20.GCLK,HCLK,VCLK,andVCLK2SourceRegister(GHVSRC)[offset=48h]

31

28

27

24

23

20

19

16

Reserved

GHVWAKE

Reserved

HVLPM

R-0

R/WP-0

R-0

R/WP-0

15

4

3

0

Reserved

GHVSRC

R-0

R/WP-0

LEGEND:R=Readonly;R/W=Read/Write;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-34.GCLK,HCLK,VCLK,andVCLK2SourceRegister(GHVSRC)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

GHVWAKE

GCLK,HCLK,VCLK,VCLK2sourceonwakeup.

0

Clocksource0isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

1h

Clocksource1isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

2h

Clocksource2isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

3h

Clocksource3isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

4h

Clocksource4isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

5h

Clocksource5isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

6h

Clocksource6isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

7h

Clocksource7isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

8h-Fh

Reserved-Thesevaluesshouldnotbeused.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

HVLPM

HCLK,VCLK,VCLK2sourceonwakeupwhenGCLKisturnedoff.

0

Clocksource0isthesourceforHCLK,VCLK,VCLK2onwakeup.

1h

Clocksource1isthesourceforHCLK,VCLK,VCLK2onwakeup.

2h

Clocksource2isthesourceforHCLK,VCLK,VCLK2onwakeup.

3h

Clocksource3isthesourceforHCLK,VCLK,VCLK2onwakeup.

4h

Clocksource4isthesourceforHCLK,VCLK,VCLK2onwakeup.

5h

Clocksource5isthesourceforHCLK,VCLK,VCLK2onwakeup.

6h

Clocksource6isthesourceforHCLK,VCLK,VCLK2onwakeup.

7h

Clocksource7isthesourceforHCLK,VCLK,VCLK2onwakeup.

8h-Fh

Reserved-Thesevaluesshouldnotbeused.

15-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

GHVSRC

GCLK,HCLK,VCLK,VCLK2currentsource.

Note:TheGHVSRC[3-0]bitsareupdatedwiththeHVLPM[3-0]settingwhenGCLKisturned

off,andareupdatedwiththeGHVWAKE[3-0]settingonsystemwakeup.

0

Clocksource0isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

1h

Clocksource1isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

2h

Clocksource2isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

3h

Clocksource3isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

4h

Clocksource4isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

5h

Clocksource5isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

6h

Clocksource6isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

7h

Clocksource7isthesourceforGCLK,HCLK,VCLK,VCLK2onwakeup.

8h-Fh

Reserved-Thesevaluesshouldnotbeused.

138

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

NOTE:Nonimplementedclocksourcesshouldnotbeenabledorused.Alistoftheavailableclock

sourcesisshowninTable2-28.

2.5.1.17PeripheralAsynchronousClockSourceRegister(VCLKASRC)

TheVCLKASRCregister,showninFigure2-21anddescribedinTable2-35,setstheclocksourceforthe

asynchronousperipheralclockdomainstobeconfiguredtorunfromaspecificclocksource.

Figure2-21.PeripheralAsynchronousClockSourceRegister(VCLKASRC)[offset=4Ch]

31

16

Reserved

R-0

15

12

11

8

7

4

3

0

Reserved

VCLKA2S

Reserved

VCLKA1S

R-0

R/WP-9h

R-0

R/WP-9h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-35.PeripheralAsynchronousClockSourceRegister(VCLKASRC)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

VCLKA2S

Peripheralasynchronousclock2source.

0

Clocksource0isthesourceforperipheralasynchronousclock2.

1h

Clocksource1isthesourceforperipheralasynchronousclock2.

2h

Clocksource2isthesourceforperipheralasynchronousclock2.

3h

Clocksource3isthesourceforperipheralasynchronousclock2.

4h

Clocksource4isthesourceforperipheralasynchronousclock2.

5h

Clocksource5isthesourceforperipheralasynchronousclock2.

6h

Clocksource6isthesourceforperipheralasynchronousclock2.

7h

Clocksource7isthesourceforperipheralasynchronousclock2.

8h-Fh

VCLKisthesourceforperipheralasynchronousclock2.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

VCLKA1S

Peripheralasynchronousclock1source.

0

Clocksource0isthesourceforperipheralasynchronousclock1.

1h

Clocksource1isthesourceforperipheralasynchronousclock1.

2h

Clocksource2isthesourceforperipheralasynchronousclock1.

3h

Clocksource3isthesourceforperipheralasynchronousclock1.

4h

Clocksource4isthesourceforperipheralasynchronousclock1.

5h

Clocksource5isthesourceforperipheralasynchronousclock1.

6h

Clocksource6isthesourceforperipheralasynchronousclock1.

7h

Clocksource7isthesourceforperipheralasynchronousclock1.

8h-Fh

VCLKisthesourceforperipheralasynchronousclock1.

NOTE:Nonimplementedclocksourcesshouldnotbeenabledorused.Alistoftheavailableclock

sourcesisshowninTable2-28.

139

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.18RTIClockSourceRegister(RCLKSRC)

TheRCLKSRCregister,showninFigure2-22anddescribedinTable2-36,controlstheRTI(RealTime

Interrupt)clocksourceselection.

NOTE:ImportantconstraintwhentheRTIclocksourceisnotVCLK

IftheRTIxclocksourceischosentobeanythingotherthanthedefaultVCLK,thentheRTI

clockneedstobeatleastthreetimesslowerthantheVCLK.Thiscanbeachievedby

configuringtheRTIxCLKdividerinthisregister.Thisdividerisinternallybypassedwhenthe

RTIxclocksourceisVCLK.

Figure2-22.RTIClockSourceRegister(RCLKSRC)[offset=50h]

31

26

25

24

23

20

19

16

Reserved

Reserved

Reserved

Reserved

R-0

R/WP-1h

R-0

R/WP-9h

15

10

9

8

7

4

3

0

Reserved

RTI1DIV

Reserved

RTI1SRC

R-0

R/WP-1h

R-0

R/WP-9h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-36.RTIClockSourceRegister(RCLKSRC)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25-24

Reserved

0

Readsreturnvalueandprivilegemodewritesallowed.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

Reserved

0

Readsreturnvalueandprivilegemodewritesallowed.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

RTI1DIV

RTIclock1Divider.

0

RTICLK1dividervalueis1.

1h

RTICLK1dividervalueis2.

2h

RTICLK1dividervalueis4.

3h

RTICLK1dividervalueis8.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

RTI1SRC

RTIclock1source.

0

Clocksource0isthesourceforRTICLK1.

1h

Clocksource1isthesourceforRTICLK1.

2h

Clocksource2isthesourceforRTICLK1.

3h

Clocksource3isthesourceforRTICLK1.

4h

Clocksource4isthesourceforRTICLK1.

5h

Clocksource5isthesourceforRTICLK1.

6h

Clocksource6isthesourceforRTICLK1.

7h

Clocksource7isthesourceforRTICLK1.

8h-Fh

VCLKisthesourceforRTICLK1.

NOTE:AlistoftheavailableclocksourcesisshowninTable2-28.

140

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.19ClockSourceValidStatusRegister(CSVSTAT)

TheCSVSTATregister,showninFigure2-23anddescribedinTable2-37,indicatesthestatusofusable

clocksources.

Figure2-23.ClockSourceValidStatusRegister(CSVSTAT)[offset=54h]

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

CLKSR7V

CLKSR6V

CLKSR5V

CLKSR4V

CLKSR3V

Reserved

CLKSR1V

CLKSR0V

R-1

R-0

R-0

R-1

R-1

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-37.ClockSourceValidRegister(CSVSTAT)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved.

0

Readsreturn0.Writeshavenoeffect.

7-3

CLKSR[7-3]V

Clocksource[7-0]valid.

0

Clocksource[7-0]isnotvalid.

1

Clocksource[7-0]isvalid.

Note:Ifthevalidbitofthesourceofaclockdomainisnotset(thatis,theclocksourceis

notfullystable),therespectiveclockdomainisdisabledbytheGlobalClockModule

(GCM).

2

Reserved.

0

Readsreturn0.Writeshavenoeffect.

1-0

CLKSR[1-0]V

Clocksource[1–0]valid.

0

Clocksource[1–0]isnotvalid.

1

Clocksource[1–0]isvalid.

Note:Ifthevalidbitofthesourceofaclockdomainisnotset(thatis,theclocksourceis

notfullystable),therespectiveclockdomainisdisabled.

NOTE:AlistoftheavailableclocksourcesisshowninTable2-28.

141

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.20MemorySelf-TestGlobalControlRegister(MSTGCR)

TheMSTGCRregister,showninFigure2-24anddescribedinTable2-38,controlsseveralaspectsofthe

PBIST(ProgrammableBuilt-InSelfTest)memorycontroller.

Figure2-24.MemorySelf-TestGlobalControlRegister(MSTGCR)[offset=58h]

31

16

Reserved

R-0

15

10

9

8

7

4

3

0

Reserved

ROM_DIV

Reserved

MSTGENA

R-0

R/WP-0

R-0

R/WP-5h

LEGEND:R=Readonly;R/W=Read/Write;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-38.MemorySelf-TestGlobalControlRegister(MSTGCR)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

ROM_DIV

PrescalerdividerbitsforROMclocksource.

0

ROMclocksourceisHCLKdividedby1.PBISTwillresetfor16VBUScycles.

1h

ROMclocksourceisHCLKdividedby2.PBISTwillresetfor32VBUScycles.

2h

ROMclocksourceisHCLKdividedby4.PBISTwillresetfor64VBUScycles.

3h

ROMclocksourceisHCLKdividedby8.PBISTwillresetfor96VBUScycles.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

MSTGENA

Memoryself-testcontrollerglobalenablekey

Note:EnablingtheMSTGENAkeywillgeneratearesettothestatemachineofthe

selectedPBISTcontroller.

Ah

Memoryself-testcontrollerisenabled.

Others

Memoryself-testcontrollerisdisabled.

Note:Itisrecommendedthatavalueof0101bbeusedtodisablethememoryself-

testcontroller.Thisvaluewillgivemaximumprotectionfromabitflipinducingevent

thatwouldinadvertentlyenablethecontroller.

142

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.21MemoryHardwareInitializationGlobalControlRegister(MINITGCR)

TheMINITGCRregister,showninFigure2-25anddescribedinTable2-39,enablesautomatichardware

memoryinitialization.

Figure2-25.MemoryHardwareInitializationGlobalControlRegister(MINITGCR)[offset=5Ch]

31

16

Reserved

R-0

15

4

3

0

Reserved

MINITGENA

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-39.MemoryHardwareInitializationGlobalControlRegister(MINITGCR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

MINITGENA

Memoryhardwareinitializationglobalenablekey.

Ah

Globalmemoryhardwareinitializationisenabled.

Others

Globalmemoryhardwareinitializationisdisabled.

Note:Itisrecommendedthatavalueof5hbeusedtodisablememoryhardware

initialization.Thisvaluewillgivemaximumprotectionfromaneventthatwould

inadvertentlyenablethecontroller.

143

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.22MBISTController/MemoryInitializationEnableRegister(MSINENA)

TheMSINENAregister,showninFigure2-26anddescribedinTable2-40,enablesPBISTcontrollersfor

memoryselftestandthememorymodulesinitializedduringautomatichardwarememoryinitialization.

Figure2-26.MBISTController/MemoryInitializationEnableRegister(MSINENA)[offset=60h]

31

0

MSIENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-40.MBISTController/MemoryInitializationEnableRegister(MSINENA)FieldDescriptions

Bit

Field

Value

Description

31-0

MSIENA

PBISTcontrollerandmemoryinitializationenableregister.Inmemoryself-testmode,allthe

correspondingbitsofthememoriestobetestedshouldbesetbeforeenablingtheglobalmemoryself-

testcontrollerkey(MSTGENA)intheMSTGCRregister(offset58h).Thereasonforthisisthat

MSTGENA,inadditiontobeingtheglobalenableforallindividualPBISTcontrollers,isthesourcefor

theresetgenerationtoallthePBISTcontrollerstatemachines.DisablingtheMSTGENAor

MINITGENAkey(bywritingfromaAhtoanyothervalue)willresetalltheMSIENA[31-0]bitstotheir

defaultvalues.

0

Inmemoryself-testmode(MSTGENA=Ah):

PBISTcontroller[31-0]isdisabled.

InmemoryInitializationmode(MINITGENA=Ah):

Memorymodule[31-0]autohardwareinitializationisdisabled.

1

Inmemoryself-testmode(MSTGENA=5h):

PBISTcontroller[31-0]isenabled.

InmemoryInitializationmode(MINITGENA=5h):

Memorymodule[31-0]autohardwareinitializationisenabled.

Note:Softwareshouldensurethatboththememoryself-testglobalenablekey(MSTGENA)and

thememoryhardwareinitializationglobalkey(MINITGENA)arenotenabledatthesametime.

144

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.23MSTCGlobalStatusRegister(MSTCGSTAT)

TheMSTCGSTATregister,showninFigure2-27anddescribedinTable2-41,showsthestatusofthe

memoryhardwareinitializationandthememoryseft-test.

Figure2-27.MSTCGlobalStatusRegister(MSTCGSTAT)[offset=68h]

31

16

Reserved

R-0

15

9

8

7

1

0

Reserved

MINIDONE

Reserved

MSTDONE

R-0

R/WPC-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-41.MSTCGlobalStatusRegister(MSTCGSTAT)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

MINIDONE

Memoryhardwareinitializationcompletestatus.

Note:DisablingtheMINITGENAkey(bywritingfromAhtoanyothervalue)willclearthe

MINIDONEstatusbitto0.

Note:IndividualmemoryinitializationstatusisshownintheMINISTATregister.

0

Read:Memoryhardwareinitializationisnotcompleteforallmemory.

Write:Awriteof0hasnoeffect.

1

Read:Hardwareinitializationofallmemoryiscompleted.

Write:Thebitisclearedto0.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

MSTDONE

Memoryself-testruncompletestatus.

Note:DisablingtheMSTGENAkey(bywritingfromAhtoanyothervalue)willclearthe

MSTDONEstatusbitto0.

0

Read:Memoryself-testisnotcompleted.

Write:Awriteof0hasnoeffect.

1

Read:Memoryself-testiscompleted.

Write:Thebitisclearedto0.

145

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.24MemoryHardwareInitializationStatusRegister(MINISTAT)

TheMINISTATregister,showninFigure2-28anddescribedinTable2-42,indicatesthestatusof

hardwarememoryinitialization.

Figure2-28.MemoryHardwareInitializationStatusRegister(MINISTAT)[offset=6Ch]

31

0

MIDONE

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-42.MemoryHardwareInitializationStatusRegister(MINISTAT)FieldDescriptions

Bit

Field

Value

Description

31-0

MIDONE

Memoryhardwareinitializationstatusbit.

0

Read:Memorymodule[31-0]hardwareinitializationisnotcompleted.

Write:Awriteof0hasnoeffect.

1

Read:Memorymodule[31-0]hardwareinitializationiscompleted.

Write:Thebitisclearedto0.

Note:DisablingtheMINITGENAkey(bywritingfromAhtoanyothervalue)willresetallthe

individualstatusbitsto0.

2.5.1.25PLLControlRegister1(PLLCTL1)

ThePLLCTL1register,showninFigure2-29anddescribedinTable2-43,controlstheoutputfrequencyof

PLL1(ClockSource1-FMzPLL).ItalsocontrolsthebehaviorofthedeviceifaPLLsliporoscillator

failureisdetected.

Figure2-29.PLLControlRegister1(PLLCTL1)[offset=70h]

31

30

29

28

24

23

22

21

16

ROS

MASK_SLIP

PLLDIV

ROF

Rsvd

REFCLKDIV

R/WP-0

R/WP-1h

R/WP-Fh

R/WP-0

R-0

R/WP-2h

15

0

PLLMUL

R/WP-5F00h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

146

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-43.PLLControlRegister1(PLLCTL1)FieldDescriptions

Bit

Field

Value

Description

31

ROS

ResetonPLLSlip

0

DonotresetsystemwhenPLLslipisdetected

1

ResetwhenPLLslipisdetected

Note:MASK_SLIP(Bits30-29)mustalsobeenabledforROStobeenabled.

30-29

MASK_SLIP

MaskdetectionofPLLslip

2h

BypassonPLLSlipisdisabled.IfaPLLSlipisdetectednoactionistaken.

Others

BypassonPLLSlipisenabled.IfaPLLSlipisdetectedthedevicewillautomaticallybypassthe

PLLandusetheoscillatortoprovidethedeviceclock.

Note:IfROS(Bit31)issetto1,thedevicewillberesetifaPLLSlipandthePLLwillbe

bypassedaftertheresetoccurs.

28-24

PLLDIV

PLLOutputClockDivider

R=PLLDIV+1

fPLLCLK=fpost_ODCLK/R

0

fPLLCLK=fpost-ODCLK/1

1h

fPLLCLK=fpost-ODCLK/2

:

:

1Fh

fPLLCLK=fpost-ODCLK/32

23

ROF

ResetonOscillatorFail

0

Donotresetsystemwhenoscillatorisoutofrange.

1

Resetsystemwhenoscillatorisoutofrange.

22

Reserved

0

ValuehasnoeffectonPLLoperation.

21-16

REFCLKDIV

ReferenceClockDivider

NR=REFCLKDIV+1

fINTCLK=fOSCIN/NR

0

fINTCLK=fOSCIN/1

1h

fINTCLK=fOSCIN/2

:

:

3Fh

fINTCLK=fOSCIN/64

15-0

PLLMUL

PLLMultiplicationFactor

NF=(PLLMUL/256)+1,validmultiplicationfactorsarefrom1to256.

fVCOCLK=fINTCLKxNF

100h

fVCOCLK=fINTCLKx1

:

:

5B00h

fVCOCLK=fINTCLKx92

5C00h

fVCOCLK=fINTCLKx93

:

:

FF00h

fVCOCLK=fINTCLKx256

147

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.26PLLControlRegister2(PLLCTL2)

ThePLLCTL2register,showninFigure2-30anddescribedinTable2-44,controlsthemodulation

characteristicsandtheoutputdividerofthePLL.

Figure2-30.PLLControlRegister2(PLLCTL2)[offset=74h]

31

30

22

21

20

16

FMENA

SPREADINGRATE

Rsvd

MULMOD

R/WP-0

R/WP-1FFh

R-0

R/WP-0

15

12

11

9

8

0

MULMOD

ODPLL

SPR_AMOUNT

R/WP-7h

R/WP-1h

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-44.PLLControlRegister2(PLLCTL2)FieldDescriptions

Bit

Field

Value

Description

31

FMENA

FrequencyModulationEnable.

0

Disablefrequencymodulation

1

Enablefrequencymodulation

30-22

SPREADINGRATE

NS=SPREADINGRATE+1

fmod=fs=fINTCLK/(2×NS)

0

fmod=fs=fINTCLK/(2×1)

1h

fmod=fs=fINTCLK/(2×2)

:

:

1FFh

fmod=fs=fINTCLK/(2×512)

21

Reserved

0

ValuehasnoeffectonPLLoperation.

20-12

MULMOD

MultiplierCorrectionwhenFrequencyModulationisenabled.

WhenFMENA=0,MUL_when_MOD=0;whenFMENA=1,MUL_when_MOD=

(MULMOD/256)

0

NoaddertoNF

8h

MUL_when_MOD=8/256

9h

MUL_when_MOD=9/256

:

:

1FFh

MUL_when_MOD=511/256

11-9

ODPLL

InternalPLLOutputDivider.

OD=ODPLL+1

fpost-ODCLK=fVCOCLK/OD

0

fpost-ODCLK=fVCOCLK/1

1h

fpost-ODCLK=fVCOCLK/2

:

:

7h

fpost-ODCLK=fVCOCLK/8

Note:PLLoutputclockisgatedoff,ifODPLLischangedwhilethePLLisactive.

8-0

SPR_AMOUNT

SpreadingAmount.

NV=(SPR_AMOUNT+1)/2048

NVrangesfrom1/2048to512/2048

NotethatthePLLoutputclockisdisabledfor1modulationperiod,iftheSPR_AMOUNT

fieldischangedwhilethefrequencymodulationisenabled.Iffrequencymodulationis

disabledandSPR_AMOUNTischanged,thereisnoeffectonthePLLoutputclock.

0

NV=1/2048

1h

NV=2/2048

:

:

1FFh

NV=512/2048

148

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.27SYSPinControlRegister10(SYSPC10)

TheSYSPC10register,showninFigure2-31anddescribedinTable2-45,controlsthefunctionofthe

ECPCLKslewmode.

Figure2-31.SYSPinControlRegister10(SYSPC10)[offset=78h]

31

16

Reserved

R-0

15

1

0

Reserved

ECPCLK_SLEW

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-45.SYSPinControlRegister10(SYSPC10)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ECPCLK_SLEW

ECPCLKslewcontrol.Thisbitcontrolsbetweenthefastorslowslewmode.

0

Fastmodeisenabled;thenormaloutputbufferisusedforthispin.

1

Slowmodeisenabled;slewratecontrolisusedforthispin.

149

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.28DieIdentificationRegisterLowerWord(DIEIDL)

TheDIEIDLregister,showninFigure2-32anddescribedinTable2-46,containsinformationaboutthedie

lotnumber,wafernumber,andX,Ywafercoordinates.

Figure2-32.DieIdentificationRegister,LowerWord(DIEIDL)[offset=7Ch]

31

22

21

16

LOT#(LOWER10BITS)

WAFER#

R-D

R-D

15

8

7

0

YWAFERCOORDINATE

XWAFERCOORDINATE

R-D

R-D

LEGEND:R=Readonly;-n=valueafterreset;-D=devicespecific

Table2-46.DieIdentificationRegister,LowerWord(DIEIDL)FieldDescriptions

Bit

Field

Description

31-22

LOT#(Lower10Bits)

Thesereadonlybitscontainthelower10bitsofthedevicelotnumber.

21-16

WAFER#

Thesereadonlybitscontainthewafernumberofthedevice.

15-8

YWAFERCOORDINATE

ThesereadonlybitscontaintheYwafercoordinateofthedevice

7-0

XWAFERCOORDINATE

ThesereadonlybitscontaintheXwafercoordinateofthedevice

NOTE:DieIdentificationInformation

Thedieidentificationinformationwillvaryfromunittounit.Thisinformationisprogrammed

byTIaspartoftheinitialdevicetestprocedure.

2.5.1.29DieIdentificationRegisterUpperWord(DIEIDH)

TheDIEIDHregister,showninFigure2-33anddescribedinTable2-47,containsinformationaboutthe

dielotnumber.

Figure2-33.DieIdentificationRegister,UpperWord(DIEIDH)[offset=80h]

31

16

Reserved

R-0

15

14

13

0

Reserved

LOT#(UPPER14BITS)

R-0

R-D

LEGEND:R/W=Read/Write;R=Readonly;D=Valueisdevicedependent;-n=valueafterreset

Table2-47.DieIdentificationRegister,UpperWord(DIEIDH)FieldDescriptions

Bit

Field

Value

Description

31-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-0

LOT#(Upper14Bits)

Thisread-onlyregistercontainstheupper14bitsofthedevicelotnumber.

NOTE:DieIdentificationInformation

Thedieidentificationinformationwillvaryfromunittounit.Thisinformationisprogrammed

byTIaspartoftheinitialdevicetestprocedure.

150

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.30LPO/ClockMonitorControlRegister(LPOMONCTL)

TheLPOMONCTLregister,showninFigure2-34anddescribedinTable2-48,controlstheLow

Frequency(ClockSource4)andHighFrequency(ClockSource5)LowPowerOscillator'strimvalues.

Figure2-34.LPO/ClockMonitorControlRegister(LPOMONCTL)[offset=88h]

31

25

24

23

17

16

Reserved

BIASENABLE

Reserved

OSCFRQCONFIGCNT

R-0

R/WP-1

R-0

R/WP-0

15

13

12

8

7

5

4

0

Reserved

HFTRIM

Reserved

LFTRIM

R-0

R/WP-10h

R-0

R/WP-10h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-48.LPO/ClockMonitorControlRegister(LPOMONCTL)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

BIASENABLE

Biasenable.

0

Thebiascircuitinsidethelow-poweroscillator(LPO)isdisabled.

1

ThebiascircuitinsideLPOisenabled.

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

OSCFRQCONFIGCNT

ConfiguresthecounterbasedonOSCfrequency.

0

OSCfreqis<=20MHz

1

OSCfreqis>20MHzand<=80MHz

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

151

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

Table2-48.LPO/ClockMonitorControlRegister(LPOMONCTL)FieldDescriptions(continued)

Bit

Field

Value

Description

12-8

HFTRIM

Highfrequencyoscillatortrimvalue.Thisfive-bitvalueisusedtocentertheHFoscillator's

frequency.

Caution:ThisvalueshouldonlybechangedwhentheHFoscillatorisnotthe

sourceforaclockdomain;otherwise,asystemfailurecouldresult.

Thevaluesbelowaretheratio:f/fointheF021process.

0

29.52

1h

34.24%

2h

38.85%

3h

43.45%

4h

47.99%

5h

52.55%

6h

57.02%

7h

61.46%

8h

65.92%

9h

70.17

Ah

74.55%

Bh

78.92%

Ch

83.17%

Dh

87.43%

Eh

91.75%

Fh

95.89%

10h

100.00%DefaultatReset.

11h

104.09

12h

108.17

13h

112.32

14h

116.41

15h

120.67

16h

124.42

17h

128.38

18h

132.24

19h

136.15

1Ah

140.15

1Bh

143.94

1Ch

148.02

1Dh

151.80x

1Eh

155.50x

1Fh

159.35%

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

152

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-48.LPO/ClockMonitorControlRegister(LPOMONCTL)FieldDescriptions(continued)

Bit

Field

Value

Description

4-0

LFTRIM

Lowfrequencyoscillatortrimvalue.Thisfive-bitvalueisusedtocentertheLFoscillator's

frequency.

Caution:ThisvalueshouldonlybechangedwhentheLFoscillatorisnotthe

sourceforaclockdomain;otherwise,asystemfailurecouldresult.

Thevaluesbelowaretheratio:f/fointheF021process.

0

20.67

1h

25.76

2h

30.84

3h

35.90

4h

40.93

5h

45.95

6h

50.97

7h

55.91

8h

60.86

9h

65.78

Ah

70.75

Bh

75.63

Ch

80.61

Dh

85.39

Eh

90.23

Fh

95.11

10h

100.00%DefaultatReset

11h

104.84

12h

109.51

13h

114.31

14h

119.01

15h

123.75

16h

128.62

17h

133.31

18h

138.03

19h

142.75

1Ah

147.32

1Bh

152.02

1Ch

156.63

1Dh

161.38

1Eh

165.90

1Fh

170.42

153

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.31ClockTestRegister(CLKTEST)

TheCLKTESTregister,showninFigure2-35anddescribedinTable2-49,controlstheclocksignalthatis

suppliedtotheECLKpinfortestanddebugpurposes.

NOTE:ClockTestRegisterUsage

Thisregistershouldonlybeusedfortestanddebugpurposes.

Figure2-35.ClockTestRegister(CLKTEST)[offset=8Ch]

31

27

26

25

24

Reserved

ALTLIMPCLOCKENABLE

RANGEDETCTRL

RANGEDETENASSEL

R-0

R/WP-0

R/WP-0

R/WP-0

23

20

19

16

Reserved

CLK_TEST_EN

R-0

R/WP-Ah

15

12

11

8

7

4

3

0

Reserved

SEL_GIO_PIN

Reserved

SEL_ECP_PIN

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-49.ClockTestRegister(CLKTEST)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

ALTLIMPCLOCKENABLE

ThisbitselectsaclockdrivenbytheGIOB[0]pinasanalternatelimpclocktotheclock

monitorphasefrequencydetect(PFD).

0

The10-MHzLPOfastclockisthecompareclockfortheclockdetectPFDcircuitandthe

sourcetolimpclockonaclockfail.

1

TheALTLIMPCLOCKdrivenontheGIOB[0]pinisthecompareclockfortheclockdetect

PFDcircuitandthesourcetolimpclockonaclockfail.

25

RANGEDETCTRL

Rangedetectioncontrol.Thisbit'sfunctionalityisdependantonthestateofthe

RANGEDETENSSELbit(Bit24)oftheCLKTESTregister.

0

Theclockmonitorrangedetectioncircuitry(RANGEDETECTENABLE)isdisabled.

1

Theclockmonitorrangedetectioncircuitry(RANGEDETECTENABLE)isenabled.

24

RANGEDETENASSEL

Selectsrangedetectionenable.Thisbitresetsasynchronouslyonpoweronreset.

0

Therangedetectenableisgeneratedbythehardwareintheclockmonitorwrapper.

1

TherangedetectenableiscontrolledbytheRANGEDETCTRLbit(Bit25)ofthe

CLKTESTregister.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

CLK_TEST_EN

Clocktestenable.ThisbitenablestheclockgoingtotheECLKpin.

Note:TheECLKpinmustalsobeplacedintoFunctionalmodebysettingthe

ECPCLKFUNbitto1intheSYSPC1register.

5h

ClockgoingtoECLKpinisenabled.

Others

ClockgoingtoECLKpinisdisabled.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

154

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-49.ClockTestRegister(CLKTEST)FieldDescriptions(continued)

Bit

Field

Value

Description

11-8

SEL_GIO_PIN

GIOB[0]pinclocksourcevalid,clocksourceselect

0

Oscillatorvalidstatus

1h

PLLclockstatus

2h

Reserved

3h

Reserved

4h

Reserved

5h

HighfrequencyclockLPO(LowPowerOscillator)clockvalidstatus

6h

SecondaryPLLfree-runningclockoutputvalidstatus

7h

Reserved

8h

LowfrequencyclockLPO(LowPowerOscillator)clock

9h

Oscillatorvalidstatus

Ah

Oscillatorvalidstatus

Bh

Oscillatorvalidstatus

Ch

Oscillatorvalidstatus

Dh

Oscillatorvalidstatus

Eh

Oscillatorvalidstatus

Fh

Oscillatorvalidstatus

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

SEL_ECP_PIN

ECLKpinclocksourceselect

Note:OnlyvalidclocksourcescanbeselectedfortheECLKpin.Validclock

sourcesaredisplayedbytheCSVSTATregister.

0

Oscillatorclock

1h

PLLclock

2h

NotImplemented

3h

EXTCLKIN1

4h

LowfrequencyLPO(LowPowerOscillator)clock

5h

HighfrequencyclockLPO(LowPowerOscillator)clock

6h

SecondaryPLLfree-runningclockoutput

7h

EXCLKIN2

8h

GCLK

9h

RTIBase

Ah

NotImplemented

Bh

VCLKA1

Ch

VCLKA2

Dh

VCLKA3_S

Eh

VCLKA4

Fh

FlashHDPumpOscillator

NOTE:Nonimplementedclocksourcesshouldnotbeenabledorused.

155

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.32DFTControlRegister(DFTCTRLREG)

ThisregisterisshowninFigure2-36anddescribedinTable2-50.

Figure2-36.DFTControlRegister(DFTCTRLREG)[offset=90h]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

7

4

3

0

Reserved

DFTWRITE

Reserved

DFTREAD

Reserved

TEST_MODE_KEY

R-0

R/WP-1h

R-0

R/WP-1h

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-50.DFTControlRegister(DFTCTRLREG)FieldDescriptions

Bit

Field

Value

Description

31-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-12

DFTWRITE

DFTlogicaccess.

ForF021:

DFTWRITE[0]=0andDFTREAD[0]=0configuredinstressmode

DFTWRITE[1]=0andDFTREAD[1]=0configuredinstressmode

DFTWRITE[0]=0andDFTREAD[0]=0configuredinfastmode

DFTWRITE[1]=1andDFTREAD[1]=1configuredinfastmode

DFTWRITE[0]=1andDFTREAD[0]=1configuredinslowmode

DFTWRITE[1]=0andDFTREAD[1]=0configuredinslowmode

DFTWRITE[0]=1andDFTREAD[0]=1configuredinscreenmode

DFTWRITE[1]=1andDFTREAD[1]=1configuredinscreenmode

11-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

DFTREAD

DFTlogicaccess.

ForF021:

DFTWRITE[0]=0andDFTREAD[0]=0configuredinstressmode

DFTWRITE[1]=0andDFTREAD[1]=0configuredinstressmode

DFTWRITE[0]=0andDFTREAD[0]=0configuredinfastmode

DFTWRITE[1]=1andDFTREAD[1]=1configuredinfastmode

DFTWRITE[0]=1andDFTREAD[0]=1configuredinslowmode

DFTWRITE[1]=0andDFTREAD[1]=0configuredinslowmode

DFTWRITE[0]=1andDFTREAD[0]=1configuredinscreenmode

DFTWRITE[1]=1andDFTREAD[1]=1configuredinscreenmode

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

TEST_MODE_KEY

Testmodekey.ThisregisterisforinternalTIuseonly.

0-Fh

Registerkeydisable.Allbitsinthisregisterwillmaintaintheirdefaultvalueandcannotbe

(exceptAh)

written.

Ah

Registerkeyenable.Allthebitscanbewrittentoonlywhenthekeyisenabled.Onreset,

thesebitswillbesetto5h.

156

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.33DFTControlRegister2(DFTCTRLREG2)

ThisregisterisshowninFigure2-37anddescribedinTable2-51.

Figure2-37.DFTControlRegister2(DFTCTRLREG2)[offset=94h]

31

16

IMPDF(27:12)

R/WP-0

15

4

3

0

IMPDF(11:0)

TEST_MODE_KEY

R/WP-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-51.DFTControlRegister2(DFTCTRLREG2)FieldDescriptions

Bit

Field

Value

Description

31-4

IMPDF[27:0]

DFTImplementationdefinedbits.

0

IMPDF[27:0]-Disabled

1

IMPDF[27:0]-Enabled

3-0

TEST_MODE_KEY

Testmodekey.ThisregisterisforinternalTIuseonly.

0-Fh

Registerkeydisable.Allbitsinthisregisterwillmaintaintheirdefaultvalueandcannotbe

(exceptAh)

written.

Ah

Registerkeyenable.Allthebitscanbewrittentoonlywhenthekeyisenabled.

157

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.34GeneralPurposeRegister(GPREG1)

ThisregisterisshowninFigure2-38anddescribedinTable2-52.

Figure2-38.GeneralPurposeRegister(GPREG1)[offset=A0h]

31

30

26

25

20

19

16

EMIF_FUNC

Reserved

PLL1_FBSLIP_FILTER_COUNT

PLL1_RFSLIP_FILTER_KEY

R/WP-0

R-0

R/WP-0

R/WP-5h

15

0

OUTPUT_BUFFER_LOW_EMI_MODE

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-52.GeneralPurposeRegister(GPREG1)FieldDescriptions

Bit

Field

Value

Description

31

EMIF_FUNC

0

EnableEMIFfunctionstobeoutput.EMIF_ADDR[0],EMIF_ADDR[1],

EMIF_ADDR[6],EMIF_ADDR[7],EMIF_ADDR[8],EMIF_BA[1],

EMIF_nCS[0],andEMIF_nCS[3]aremultiplexedwithN2HET2

signals.Bydefault,theseterminalsaretri-statedandpulleddown.

AnyapplicationthatrequirestheEMIFfunctionalitymustsetthe

EMIF_FUNCbit.Thisallowsthese8EMIFmoduleoutputstobe

drivenontotheassignedballs.

30-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25-20

PLL1_FBSLIP_FILTER_COUNT

FBSLIPdowncounterprogrammedvalue.

0-3Fh

ConfiguresthesystemresponsewhenaFBSLIPisindicatedbythe

PLLmacro.WhenPLL1_RFSLIP_FILTER_KEYisnot1010,the

downcountercountsfromtheprogrammedvalueoneveryLPOhigh

frequencyclockoncePLLmacroindicatesFBSLIP.Whenthecount

reacheszero,ifthesynchronizedFBSLIPsignalisstillhigh,an

FBSLIPconditionisindicatedtothesystemmoduleandiscaptured

intheglobalstatusregister.WhentheFBSLIPsignalfromthePLL

macroisde-assertedbeforethecountreaches0,thecounteris

reloadedwiththeprogrammedvalue.

19-16

PLL1_RFSLIP_FILTER_KEY

ConfiguresthesystemresponsewhenaFBSLIPisindicatedbythe

PLLmacro.

5h

TheFBSLIPfilterisbypassedandtheFBSLIPindicatedbythePLL

macroiscapturedinthesystemmoduleglobalstatusregister.

Ah

TheFBSLIPfilterisenabledandtheone-stagesynchronization

circuitisused.

Fh

TheFBSLIPfilterisenabledandthetwo-stagesynchronizationcircuit

isused.

158

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-52.GeneralPurposeRegister(GPREG1)FieldDescriptions(continued)

Bit

Field

Value

Description

15-0

OUTPUT_BUFFER_LOW_EMI_MODE

Controlfieldforthelow-EMImodeofoutputbuffersfor

module/signals:

bit[0]controlsMiBSPI1

bit[1]controlsSPI2

bit[2]controlsMiBSPI3

bit[3]controlsSPI4

bit[4]controlsMiBSPI5

bit[5]controlsFlexRay

bit[6]controlsEMIF

bit[7]controlsETM

bit[8]controlssignalTMS

bit[9]controlssignalTDI

bit[10]controlssignalTDO

bit[11]controlssignalRTCK

bit[12]controlssignalTEST

bit[13]controlssignalnERROR

bit[14]controlssignalADEVT

bit[15]controlssignalRTP

0

EnableEMImodeforeachconnectedoutputbuffers.

1h-FFFEh

Enable/DisableEMImodeforconnectedoutputbuffers.

FFFFh

DisableEMImodeforeachconnectedoutputbuffer.

159

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.35ImpreciseFaultStatusRegister(IMPFASTS)

TheIMPFASTSregister,showninFigure2-39anddescribedinTable2-53,displaysinformationabout

impreciseabortsthathaveoccurred.

Figure2-39.ImpreciseFaultStatusRegister(IMPFASTS)[offset=A8h]

31

24

23

16

Reserved

MASTERID

R-0

R-0

15

11

10

9

8

7

1

0

Reserved

EMIFA

NCBA

VBUSA

Reserved

ATYPE

R-0

R-0

R-0

R-0

R-0

R/WC-

0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table2-53.ImpreciseFaultStatusRegister(IMPFASTS)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-16

MASTERID

0-FFh

MasterID.Thisregisterindicateswhichmasterisresponsiblefortheimpreciseabort.Themaster

IDvaluedependsondeviceimplementation,seeTable2-2forMASTERIDvaluesforeachbus

master.

Notes:

•Thesebitsareonlyupdatedwhenanimpreciseabortoccurs

•Thesebitsareclearedto0onlyonpower-upreset.Thevalueofthesebitsremainsunchanged

afterallotherresets.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10

EMIFA

EMIFimpreciseabort.Thisregisterindicatestheimpreciseabortwasgeneratedwritingintothe

EMIF.

Notes:

•Thisbitisonlyupdatedwhenanimpreciseabortoccurs

•Thisbitisclearedto0onlyonpower-upreset.Thevalueofthisregisterremainsunchanged

afterallotherresets.

0

EMIFdidnotgeneratethelastimpreciseabort.

1

EMIFwaswrittenwithanillegaladdressandgeneratedanimpreciseabort.

9

NCBA

Non-cacheable,bufferableabort(NCBA).Thisregisterindicatestheimpreciseabortwas

generatedbyanon-cacheable,bufferablewriteorshareddevicewritethroughthewritebufferof

theCPU.

Notes:

•Thisbitisonlyupdatedwhenanimpreciseabortgeneratedbyanon-cacheable,bufferable

writeorshareddevicewriteoccurs.

•Thisbitisclearedto0onlyonpower-upreset.Thevalueofthisregisterremainsunchanged

afterallotherresets.

0

ANCBAisnotresponsibleforthelastimpreciseabort.

1

ANCBAwaswrittenwithanillegaladdressandgeneratedanimpreciseabort.

8

VBUSA

VBUSabort.Thisregisterindicatestheimpreciseabortwasgeneratedwhenwritingintothe

peripheralframe.

Notes:

•Thisbitisonlyupdatedwhenanimpreciseabortisgeneratedwhenwritingintotheperipheral

frame

•Thisbitisclearedto0onlyonpower-upreset.Thevalueofthisregisterremainsunchanged

afterallotherresets.

0

Theperipheralframedidnotgeneratethelastimpreciseabort.

1

Theperipheralframewaswrittenwithanillegaladdressandgeneratedanimpreciseabort.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

160

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-53.ImpreciseFaultStatusRegister(IMPFASTS)FieldDescriptions(continued)

Bit

Field

Value

Description

0

ATYPE

Aborttype.ThisbitindicatestotheCPUwhetherthelastabortwasanimpreciseabortoraprecise

abort.

Notes:

•ThisbitisupdatedaftereachabortisgeneratedtotheCPU.

•ThisbitisclearedonCPUread.

•Thisbitisclearedto0onlyonpower-upreset.Thevalueofthisbitremainsunchangedafterall

otherresets

0

Thelastabortgeneratedwasapreciseabort.MASTERID,VBUSA,NCBA,EMIFAand

IMPFTADDwerenotupdated.

1

Thelastabortgeneratedwasanimpreciseabort.MASTERID,VBUSA,NCBA,EMIFAand

IMPFTADDwereupdated.

Note:OnceATYPEisset,theIMPFAWADDandIMPFASTSbitsarenotupdatedby

subsequentABORTsignals.

NOTE:TheDMA,DMM,andtheperipheralmasterportwillalsogenerateanimpreciseaborttothe

CPUwhenwritingtotheperipheralregionortotheEMIFregion.Thiswillbeindicatedinthe

MasterIDfieldofthisregister.

2.5.1.36ImpreciseFaultAddressRegister(IMPFTADD)

ThisIMPFTADDregister,showninFigure2-40anddescribedinTable2-54,showstheaddressatwhich

animpreciseabortoccurred.

Figure2-40.ImpreciseFaultWriteAddressRegister(IMPFTADD)[offset=ACh]

31

0

IMPFTADD

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table2-54.ImpreciseFaultWriteAddressRegister(IMPFTADD)FieldDescriptions

Bit

Field

Value

Description

31-0

IMPFTADD

0-FFFFFFFFh

Thesebitscontainthefaultaddresswhenanimpreciseabortoccurs.

Note:Thesebitsareonlyupdatedwhenanimpreciseabortoccurs.

Note:Thesebitsareclearedto0onlyonpower-upreset.Thevalueofthisregister

remainsunchangedafterallotherresets.

161

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.37SystemSoftwareInterruptRequest1Register(SSIR1)

TheSSIR1register,showninFigure2-41anddescribedinTable2-55,isusedforsoftwareinterrupt

generation.

Figure2-41.SystemSoftwareInterruptRequest1Register(SSIR1)[offset=B0h]

31

16

Reserved

R-0

15

8

7

0

SSKEY1

SSDATA1

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-55.SystemSoftwareInterruptRequest1Register(SSIR1)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

SSKEY1

0-FFh

Systemsoftwareinterruptrequestkey.A075hwrittentothesebitsinitiatesIRQ/FIQinterrupts.

Datainthisfieldisalwaysreadas0.TheSSKEY1fieldcanbewrittenintoonlyifthewritedata

matchesthekey(75h).TheSSDATA1fieldcanonlybewrittenintoifthewritedataintothisfield,

theSSKEY1field,matchesthekey(75h).

7-0

SSDATA1

0-FFh

Systemsoftwareinterruptdata.Thesebitscontainuserread/writeregisterbits.Theymaybeused

bytheapplicationsoftwareasdifferententrypointsfortheinterruptroutine.TheSSDATA1field

cannotbewrittenintounlessthewritedataintotheSSKEY1fieldmatchesthekey(75h);

therefore,bytewritescannotbeperformedontheSSDATA1field.

NOTE:ThisregisterismirroredatoffsetFChforcompatibilityreasons.

2.5.1.38SystemSoftwareInterruptRequest2Register(SSIR2)

TheSSIR2register,showninFigure2-42anddescribedinTable2-56,isusedforsoftwareinterrupt

generation.

Figure2-42.SystemSoftwareInterruptRequest2Register(SSIR2)[offset=B4h]

31

16

Reserved

R-0

15

8

7

0

SSKEY2

SSDATA2

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-56.SystemSoftwareInterruptRequest2Register(SSIR2)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

SSKEY2

0-FFh

Systemsoftwareinterrupt2requestkey.A84hwrittentothesebitsinitiatesIRQ/FIQinterrupts.

Datainthisfieldisalwaysreadas0.TheSSKEY2fieldcanbewrittenintoonlyifthewritedata

matchesthekey(84h).TheSSDATA2fieldcanonlybewrittenintoifthewritedataintothisfield,

theSSKEY2field,matchesthekey(84h).

7-0

SSDATA2

0-FFh

Systemsoftwareinterruptdata.Thesebitscontainuserread/writeregisterbits.Theymaybeused

bytheapplicationsoftwareasdifferententrypointsfortheinterruptroutine.TheSSDATA2field

cannotbewrittenintounlessthewritedataintotheSSKEY2fieldmatchesthekey(84h);

therefore,bytewritescannotbeperformedontheSSDATA2field.

162

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.39SystemSoftwareInterruptRequest3Register(SSIR3)

TheSSIR3register,showninFigure2-43anddescribedinTable2-57,isusedforsoftwareinterrupt

generation.

Figure2-43.SystemSoftwareInterruptRequest3Register(SSIR3)[offset=B8h]

31

16

Reserved

R-0

15

8

7

0

SSKEY3

SSDATA3

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-57.SystemSoftwareInterruptRequest3Register(SSIR3)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

SSKEY3

0-FFh

Systemsoftwareinterruptrequestkey.A93hwrittentothesebitsinitiatesIRQ/FIQinterrupts.Data

inthisfieldisalwaysreadas0.TheSSKEY3fieldcanbewrittenintoonlyifthewritedata

matchesthekey(93h).TheSSDATA3fieldcanonlybewrittenintoifthewritedataintothisfield,

theSSKEY3field,matchesthekey(93h).

7-0

SSDATA3

0-FFh

Systemsoftwareinterruptdata.Thesebitscontainuserread/writeregisterbits.Theymaybeused

bytheapplicationsoftwareasdifferententrypointsfortheinterruptroutine.TheSSDATA3field

cannotbewrittenintounlessthewritedataintotheSSKEY3fieldmatchesthekey(93h);

therefore,bytewritescannotbeperformedontheSSDATA3field.

2.5.1.40SystemSoftwareInterruptRequest4Register(SSIR4)

TheSSIR4register,showninFigure2-44anddescribedinTable2-58,isusedforsoftwareinterrupt

generation.

Figure2-44.SystemSoftwareInterruptRequest4Register(SSIR4)[offset=BCh]

31

16

Reserved

R-0

15

8

7

0

SSKEY4

SSDATA4

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-58.SystemSoftwareInterruptRequest4Register(SSIR4)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

SSKEY4

0-FFh

Systemsoftwareinterrupt2requestkey.AA2hwrittentothesebitsinitiatesIRQ/FIQinterrupts.

Datainthisfieldisalwaysreadas0.TheSSKEY4fieldcanbewrittenintoonlyifthewritedata

matchesthekey(A2h).TheSSDATA4fieldcanonlybewrittenintoifthewritedataintothisfield,

theSSKEY4field,matchesthekey(A2h).

7-0

SSDATA4

0-FFh

Systemsoftwareinterruptdata.Thesebitscontainuserread/writeregisterbits.Theymaybeused

bytheapplicationsoftwareasdifferententrypointsfortheinterruptroutine.TheSSDATA4field

cannotbewrittenintounlessthewritedataintotheSSKEY4fieldmatchesthekey(A2h);

therefore,bytewritescannotbeperformedontheSSDATA4field.

163

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.41RAMControlRegister(RAMGCR)

TheRAMGCRregister,showninFigure2-45anddescribedinTable2-59,isusedtoconfigureeSRAM

dataandaddresswaitstates.

NOTE:TheRAM_DFT_ENbitsareforTIinternaluseonly.

ThecontentsoftheRAM_DFT_ENfieldshouldnotbechanged.

Figure2-45.RAMControlRegister(RAMGCR)[offset=C0h]

31

20

19

16

Reserved

RAM_DFT_EN

R-0

R/WP-5h

15

8

Reserved

R-0

7

3

2

1

0

Reserved

WST_AENA0

Reserved

WST_DENA0

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-59.RAMControlRegister(RAMGCR)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

RAM_DFT_EN

FunctionalmodeRAMDFT(DesignForTest)portenablekey.

Note:ForTIinternaluseonly.

Ah

RAMDFTportisenabled.

Others

RAMDFTportisdisabled.

Note:Itisrecommendedthatavalueof5hbeusedtodisabletheRAMDFTport.Thisvalue

willgivemaximumprotectionfromabitflipinducingeventthatwouldinadvertentlyenable

thecontroller.

15-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

WST_AENA0

eSRAMdataphasewaitstateenablebit.

0

ThedefaultaddresssetuptimeforeSRAM0isused.

1

TheeSRAMaddresssetuptimeisincreasedbyoneHCLKcycle.

1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

WST_DENA0

eSRAMdataphasewaitstateenablebit.

0

TherearenowaitstatesforeSRAMduringthedataphase.

1

TheeSRAMdataphasesetuptimeisincreasedbyoneHCLKcycle.

164

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.42BusMatrixModuleControlRegister1(BMMCR1)

TheBMMCR1register,showninFigure2-46anddescribedinTable2-60,allowsRAMandProgram

(Flash)memoryaddressestobeswapped.

Figure2-46.BusMatrixModuleControlRegister1(BMMCR)[offset=C4h]

31

16

Reserved

R-0

15

4

3

0

Reserved

MEMSW

R-0

R/WP-Ah

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-60.BusMatrixModuleControlRegister1(BMMCR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

MEMSW

Memoryswapkey.

Note:ACPUresetmustbeissuedafterthememoryswapkeyhasbeenchangedforthe

memoryswaptooccur.ACPUresetcanbeinitiatedbychangingthestateoftheCPU

RESETbitintheCPURSTCRregister.

Ah

Defaultmemorymap:

Programmemory(Flash)startsataddress0.eSRAMstartsataddress8000000h.

5h

Swappedmemorymap:

eSRAMstartsataddress0.Programmemory(Flash)startsataddress8000000h.

Others

Thedevicememorymapisunchanged.

2.5.1.43CPUResetControlRegister(CPURSTCR)

TheCPURSTCRregistershowninFigure2-47anddescribedinTable2-61,allowsthememoryprotection

modetobeconfigured.ItalsoallowsaresettotheCortexR4CPUtobegenerated.

Figure2-47.CPUResetControlRegister(CPURSTCR)[offset=CCh]

31

16

Reserved

R-0

15

1

0

Reserved

CPURESET

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-61.CPUResetControlRegister(CPURSTGCR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

CPURESET

CPUReset.

OnlytheCPUisresetwheneverthisbitistoggled.Thereisnosystemreset.

165

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.44ClockControlRegister(CLKCNTL)

TheCLKCNTLregister,showninFigure2-48anddescribedinTable2-62,controlsperipheralresetand

theperipheralclockdivideratios.

NOTE:VCLKandVCLK2clockratiorestrictions.

VCLK2mustalwaysbegreaterthanorequaltoVCLK.Inaddition,theVCLKandVCLK2

clockratiosmustnotbechangedsimultaneously.TheapplicationmustconfiguretheVCLK2

ratio,readbackthecontentsoftheCLKCNTLregister,andthenconfiguretheVCLKratio.

Figure2-48.ClockControlRegister(CLKCNTRL)[offset=D0h]

31

28

27

24

23

20

19

16

Reserved

VCLK2R

Reserved

VCLKR

R-0

R/WP-1h

R-0

R/WP-1h

15

9

8

7

0

Reserved

PENA

Reserved

R-0

R/WP-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-62.ClockControlRegister(CLKCNTRL)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

VCLK2R

VBUSclock2ratio.

0

TheVCLK2speedisHCLKdividedby1.

:

:

Fh

TheVCLK2speedisHCLKdividedby16.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

VCLKR

VBUSclockratio.

0

TheVCLKspeedisHCLKdividedby1.

:

:

Fh

TheVCLKspeedisHCLKdividedby16.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

PENA

Peripheralenablebit.Theapplicationmustsetthisbitbeforeaccessinganyperipheral

0

Theglobalperipheral/peripheralmemoryframesareinreset.

1

Allperipheral/peripheralmemoryframesareoutofreset.

7-0

Reserved

0

Readreturns0.Writeshavenoeffect.

166

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




()

1ECPDIVNVCLKorOSCIECLK+=



www.ti.comSystemandPeripheralControlRegisters

2.5.1.45ECPControlRegister(ECPCNTL)

TheECPregister,showninFigure2-49anddescribedinTable2-63,configurestheECLKpinin

functionalmode.

NOTE:ECLKFunctionalmodeconfiguration.

TheECLKpinmustbeplacedintoFunctionalmodebysettingtheECPCLKFUNbitto1in

theSYSPC1registerbeforeaclocksourcewillbevisibleontheECLKpin.

Figure2-49.ECPControlRegister(ECPCNTL)[offset=D4h]

31

25

24

23

22

18

17

16

Reserved

ECPSSEL

ECPCOS

Reserved

ECPINSEL

R-0

R/W-0

R/W-0

R-0

R/W-0

15

0

ECPDIV

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-63.ECPControlRegister(ECPCNTL)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

ECPSSEL

ThisbitallowstheselectionbetweenVCLKandOSCINastheclocksourceforECLK.

Note:OtherECLKclocksourcesareavailablefordebugpurposesbyconfiguringthe

CLKTESTregister.

0

VCLKisselectedastheECPclocksource.

1

OSCINisselectedastheECPclocksource.

23

ECPCOS

ECPcontinueonsuspend.

Note:SuspendmodeisenteredwhileperformingcertainJTAGdebuggingoperations.

0

ECLKoutputisdisabledinsuspendmode.ECLKoutputwillbeshutoffandwillnotbeseenon

theI/Opinofthedevice.

1

ECLKoutputisnotdisabledinsuspendmode.ECLKoutputwillnotbeshutoffandwillbeseen

ontheI/Opinofthedevice.

22-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17-6

ECPINSEL

SelectECPinputclocksource.

0

TiedLow

1h

HCLK

2h

Externalclock

3h

TiedLow

15-0

ECPDIV

0-FFFFh

ECPdividervalue.ThevalueofECPDIVbitsdeterminetheexternalclock(ECPclock)frequency

asaratioofVBUSclockorOSCINasshownintheformula:

(1)

Note:TheECLKpinbufferdoesnotsupportoutputfrequenciesgreaterthan20MHz.

167

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.46DEVParityControlRegister1(DEVCR1)

ThisregisterisshowninFigure2-50anddescribedinTable2-64.

Figure2-50.DEVParityControlRegister1(DEVCR1)[offset=DCh]

31

16

Reserved

R-0

15

4

3

0

Reserved

DEVPARSEL

R-0

R/WP-Ah

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-64.DEVParityControlRegister1(DEVCR1)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

DEVPARSEL

Deviceparityselectbitkey.

Note:Afteranodd(DEVPARSEL=Ah)oreven(DEVPARSEL=5h)schemeisprogrammed

intotheDEVPARSELregister,anyonebitchangecanbedetectedandwillretainits

programmedscheme.MorethanonebitchangesinDEVPARSELwillcauseadefaulttoodd

parityscheme.

Ah

Thedeviceparityisodd.

5h

Thedeviceparityiseven.

2.5.1.47SystemExceptionControlRegister(SYSECR)

TheSYSECRregister,showninFigure2-51anddescribedinTable2-65,isusedtogenerateasoftware

reset.

Figure2-51.SystemExceptionControlRegister(SYSECR)[offset=E0h]

31

16

Reserved

R-0

15

14

13

0

RESET1

RESET0

Reserved

R/WP-0

R/WP-1

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-65.SystemExceptionControlRegister(SYSECR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-14

RESET[1-0]

Softwareresetbits.SettingRESET1orclearingRESET0causesasystemsoftwarereset.

1h

Noresetwilloccur.

1x,x0

Aglobalsystemresetwilloccur.

13-0

Reserved

0

Readreturns0.Writeshavenoeffect.

168

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.48SystemExceptionStatusRegister(SYSESR)

TheSYSESRregister,showninFigure2-52anddescribedinTable2-66,showsthesourcefordifferent

resetsencountered.Previousresetsourcestatusbitsarenotautomaticallyclearedifnewresetsoccur.All

bitsinthisregistercanbeclearedbywritinga'1'tothebit.

Figure2-52.SystemExceptionStatusRegister(SYSESR)[offset=E4h]

31

16

Reserved

R-0

15

14

13

12

8

PORST

OSCRST

WDRST

Reserved

R/WC-X

R/WC-X

R/WC-X

R-0

7

6

5

4

3

2

1

0

Reserved

CPURST

SWRST

EXTRST

Reserved

MPMODE

R-0

R/WC-X

R/WC-X

R/WC-X

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;X=valueunchangedafterreset;-n=valueafterreset

Table2-66.SystemExceptionStatusRegister(SYSESR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15

PORST

Power-upreset.ThisbitissetwhenVCCOR(VCCOutofRange)isdetected.

0

NoresethasoccuredduetotheVCCbeingoutofrange.

1

AresetwascausedbyVCCbeingoutofrange(nPORSTwasasserted).

14

OSCRST

ResetcausedbyanoscillatorfailureorPLLcycleslip.Thisbitissetwhenaresetiscausedbyan

oscillatorfailureorPLLslip.

Note:TheactiontakenwhenanoscillatorfailureorPLLslipisdetectedmustconfiguredin

thePLLCTL1register.

0

NoresethasoccurredduetoanoscillatorfailureoraPLLcycleslip.

1

AresetwascausedbyanoscillatorfailureoraPLLcycleslip.

13

WDRST

Watchdogresetflag.Thisbitissetwhenthelastresetwascausedbythedigitalwindowed

watchdog.

Duringdebugging,theICEPICKlogicimplementedonthemicrocontrolleralsoallowsasystem

resettobegeneratedviathedebuglogic.ThisresetisalsoindicatedontheWDRSTbitofthe

SYSESR.ThisflagcanalsobesetviaaresetdrivenbyICEPICK.

0

NoresethasoccurredbecauseoftheDWWD.

1

AresetwascausedbytheDWWD.

12-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5

CPURST

CPUresetflag.ThisbitissetwhentheCPUisreset.

Note:ACPUresetcanbeinitiatedbytheCPUself-testcontroller(LBIST)orbychanging

thememoryprotection(MMU/MPU)configurationinCPURSTCRregister.

0

NoCPUresethasoccurred.

1

ACPUresetoccurred.

4

SWRST

Softwareresetflag.Thisbitissetwhenasoftwaresystemresethasoccurred.

Note:AsoftwaresystemresetcanbeinitiatedbywritingtotheRESETbitsintheSYSECR

register.

0

Nosoftwareresethasoccurred.

1

Asoftwareresetoccurred.

3

EXTRST

Externalresetflag.ThisbitissetwhenaresetiscausedbytheexternalresetpinnRST.

0

Theexternalresetpinhasnotassertedareset.

1

Aresethasbeencausedbytheexternalresetpin.

2-1

Reserved

0

Readreturns0.Writeshavenoeffect.

169

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

Table2-66.SystemExceptionStatusRegister(SYSESR)FieldDescriptions(continued)

Bit

Field

Value

Description

0

MPMODE

Thisindicatesthecurrentmemoryprotectionunit(MPU)mode.

0

MPUisdisabled.

1

MPUisenabled.

2.5.1.49SystemTestAbortStatusRegister(SYSTASR)

ThisregisterisshowninFigure2-53anddescribedinTable2-67.

Figure2-53.SystemTestAbortStatusRegister(SYSTASR)[offset=E8h]

31

16

Reserved

R-0

15

5

4

0

Reserved

EFUSE_Abort

R-0

R/WPC-X/0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;C=Clear;-X=Valueunchangedafterreset;-n=value

afterreset

Table2-67.SystemTestAbortStatusRegister(SYSTASR)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

EFUSE_Abort

TestAbortstatusflag.Thesebitsaresetwhentestabortoccurred:

0

Read:Thelastoperation(ifany)completedsuccessfully.Thisisalsothevaluethatthe

error/statusregisterissettoafterreset.

1h

Read:ControllertimesoutbecausethereisnolastrowsentfromtheFuseROM.

2h

Read:Theautoloadmachinewasstarted,eitherthroughtheSYS_INITZsignalfromthesystemor

theJTAGdataregister.Ineithercase,theautoloadmachinedidnotfindenoughFuseROMdata

tofillthescanchain.

3h

Read:Theautoloadmachinewasstarted,eitherthroughtheSYS_INITZsignalfromthesystemor

theJTAGdataregister.Ineithercase,theautoloadmachinestartsthescanchainwithasignature

itexpectstoseeafterthescanchainisfull.Theautoloadmachinewasabletofillthescanchain,

butthewrongsignaturewasreturned.

4h

Read:Theautoloadmachinewasstarted,eitherthroughtheSYS_INITZsignalfromthesystemor

theJTAGdataregister.Ineithercase,theautoloadmachinewasnotableornotallowedto

completeitsoperation.

Others

Read:Reserved.

1Fh

Write:Thesebitsareclearedto0.

170

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.50GlobalStatusRegister(GLBSTAT)

TheGLBSTATregister,showninFigure2-54anddescribedinTable2-68,indicatestheFMzPLL(PLL1)

slipstatusandtheoscillatorfailstatus.

NOTE:PLLandOSCfailbehavior

ThedevicebehaviorafteraPLLsliporanoscillatorfailureisconfiguredinthePLLCTL1

register.

Figure2-54.GlobalStatusRegister(GLBSTAT)[offset=ECh]

31

16

Reserved

R-0

15

10

9

8

7

1

0

Reserved

FBSLIP

RFSLIP

Reserved

OSCFAIL

R-0

R/WC-0

R/WC-0

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table2-68.GlobalStatusRegister(GLBSTAT)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

FBSLIP

PLLovercycleslipdetection.

0

Read:NoPLLovercyclesliphasbeendetected.

Write:Thebitisunchanged.

1

Read:APLLovercyclesliphasbeendetected.

Write:Thebitisclearedto0.

8

RFSLIP

PLLundercycleslipdetection.

0

Read:NoPLLundercyclesliphasbeendetected.

Write:Thebitisunchanged.

1

Read:APLLundercyclesliphasbeendetected.

Write:Thebitisclearedto0.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

OSCFAIL

Oscillatorfailflagbit.

0

Read:Nooscillatorfailurehasbeendetected.

Write:Thebitisunchanged.

1

Read:Anoscillatorfailurehasbeendetected.

Write:Thebitisclearedto0.

171

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.51DeviceIdentificationRegister(DEVID)

TheDEVIDisaread-onlyregister.Itcontainsdevice-specificinformationthatishard-codedduringdevice

manufacture.Fortheinitialsiliconversion,thedeviceidentificationcodevalueis802AAD05h.This

registerisshowninFigure2-55anddescribedinTable2-69.

Figure2-55.DeviceIdentificationRegister(DEVID)[offset=F0h]

31

30

17

16

CP15

UNIQUEID

TECH

R-K

R-K

R-K

15

13

12

11

10

9

8

TECH

I/OVOLTAGE

PERIPHERAL

FLASHECC

RAMECC

PARITY

R-K

R-K

R-K

R-K

R-K

7

3

2

1

0

VERSION

PLATFORMID

R-K

R-K

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-K=Constantvalue

Table2-69.DeviceIdentificationRegister(DEVID)FieldDescriptions

Bit

Field

Value

Description

31

CP15

CP15CPU.ThisbitindicateswhethertheCPUhasacoprocessor15(CP15).

0

TheCPUhasnoCP15present.

1

TheCPUhasaCP15present.TheCPUIDcanbereadusingtheCP15C0,C0,0register.

30-17

UNIQUEID

0-3FFFh

DeviceID.ThedeviceIDisuniquebydeviceconfiguration.

16-13

TECH

Thesebitsdefinetheprocesstechnologybywhichthedevicewasmanufactured.

0

DevicemanufacturedintheC05processtechnology.

1h

DevicemanufacturedintheF05processtechnology.

2h

DevicemanufacturedintheC035processtechnology.

3h

DevicemanufacturedintheF035processtechnology.

4h

DevicemanufacturedintheC021processtechnology.

5h

DevicemanufacturedintheF021processtechnology.

6h-Fh

Reserved

12

I/OVOLTAGE

Input/outputvoltage.ThisbitdefinestheI/Ovoltageofthedevice.

0

TheI/Ovoltageis3.3V.

1

TheI/Ovoltageis5V.

11

PERIPHERAL

Peripheralparity.Thisbitindicateswhetherornotperipheralmemoryparityispresent.

PARITY

0

Theperipheralmemorieshavenoparity.

1

Theperipheralmemorieshaveparity.

10-9

FLASHECC

Thesebitsindicatewhichparityispresentfortheprogrammemory.

0

Nomemoryprotectionispresent.

1h

Theprogrammemory(Flash)hassinglebitparity.

2h

Theprogrammemory(Flash)hasECC.

3h

Thiscombinationisreserved.

8

RAMECC

RAMECC.ThisbitindicateswhetherornotRAMmemoryECCispresent.

0

TheRAMmemoriesdonothaveECC.

1

TheRAMmemorieshaveECC.

7-3

VERSION

0-1Fh

Version.Thesebitsprovidetherevisionofthedevice.

2-0

PLATFORMID

5h

ThedeviceispartoftheTMS570Pxfamily.TheTMS570PxIDisalways5h.

172

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.1.52SoftwareInterruptVectorRegister(SSIVEC)

TheSSIVECregister,showninFigure2-56anddescribedinTable2-70,containsinformationabout

softwareinterrupts.

Figure2-56.SoftwareInterruptVectorRegister(SSIVEC)[offset=F4h]

31

16

Reserved

R-0

15

8

7

0

SSIDATA

SSIVECT

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table2-70.SoftwareInterruptVectorRegister(SSIVEC)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

SSIDATA

0-FFh

Systemsoftwareinterruptdatakey.Thesebitscontainthedatakeyvalueofthesourceforthe

systemsoftwareinterrupt,whichisindicatedbythevectorintheSSIVEC[7-0]field.

7-0

SSIVECT

Thesebitscontainthesourceforthesystemsoftwareinterrupt.

Note:AreadfromtheSSIVECTbitsclearsthecorrespondingSSI_FLAG[4-1]bitinthe

SSIFregister,correspondingtothesourcevectorofthesystemsoftwareinterrupt.

Note:TheSSIR[4-1]interrupthasthefollowingpriorityorder:

SSIR1hasthehighestpriority.

SSIR4hasthelowestpriority.

0

Nosoftwareinterruptispending.

1h

AsoftwareinterrupthasbeengeneratedbywritingthecorrectkeyvaluetoTheSSIR1register.

2h

AsoftwareinterrupthasbeengeneratedbywritingthecorrectkeyvaluetoTheSSIR2register.

3h

AsoftwareinterrupthasbeengeneratedbywritingthecorrectkeyvaluetoTheSSIR3register.

4h

AsoftwareinterrupthasbeengeneratedbywritingthecorrectkeyvaluetoTheSSIR4register.

5h-FFh

Reserved

173

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.1.53SystemSoftwareInterruptFlagRegister(SSIF)

TheSSIFregister,showninFigure2-57anddescribedinTable2-71,containssoftwareinterruptflag

statusinformation.

Figure2-57.SystemSoftwareInterruptFlagRegister(SSIF)[offset=F8h]

31

16

Reserved

R-0

15

8

Reserved

R-0

7

4

3

2

1

0

Reserved

SSI_FLAG4

SSI_FLAG3

SSI_FLAG2

SSI_FLAG1

R-0

R/WC-0

R/WC-0

R/WC-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table2-71.SystemSoftwareInterruptFlagRegister(SSIF)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

SSI_FLAG[4-1]

Systemsoftwareinterruptflag[4-1].ThisflagissetwhenthecorrectSSKEYiswrittentothe

SSIRregister[4-1].

Note:AreadfromtheSSIVECregisterclearsthecorrespondingSSI_FLAG[4-1]bitinthe

SSIF,correspondingtothesourcevectorofthesystemsoftwareinterrupt.

0

Read:NoIRQ/FIQinterruptwasgeneratedsincethebitwaslastcleared.

Write:Thebitisunchanged.

1

Read:AnIRQ/FIQinterruptwasgenerated.

Write:Thebitisclearedto0.

174

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.2SecondarySystemControlRegisters(SYS2)

Thissectiondescribesthesecondaryframeofsystemregisters.Thestartaddressofthesecondsystem

moduleframeis0xFFFFE100andtheendaddressis0xFFFFE1FF.Theregisterssupport32-,16-,and

8-bitwrites.Theoffsetisrelativetothesystemmoduleframestartaddress.

Table2-72.SecondarySystemControlRegistersSummary

Offset

Acronym

RegisterDescription

Section

00

PLLCTL3

PLLControlRegister3

Section2.5.2.1

04h

Reserved

Reserved

08h

STCCLKDIV

CPULogicBISTClockDivider

Section2.5.2.2

0Ch-20h

Reserved

Reserved

24h

ECPCNTL

ECPControlRegister

Section2.5.1.45

28h-38h

Reserved

Reserved

3Ch

CLK2CNTRL

Clock2ControlRegister

Section2.5.2.3

40h

VCLKACON1

PeripheralAsynchronousClockConfiguration1Register

Section2.5.2.4

44h-6Ch

Reserved

Reserved

70h

CLKSLIP

ClockSlipRegister

Section2.5.2.5

74h-E8h

Reserved

Reserved

ECh

EFC_CTLREG

EFUSEControllerControlRegister

Section2.5.2.6

F0h

DIEDL_REG0

DieIdentificationRegisterLowerWord

Section2.5.2.7

F4h

DIEDH_REG1

DieIdentificationRegisterUpperWord

Section2.5.2.8

F8h

DIEDL_REG2

DieIdentificationRegisterLowerWord

Section2.5.2.9

FCh

DIEDH_REG3

DieIdentificationRegisterUpperWord

Section2.5.2.10

NOTE:Alladditionalregistersinthesecondarysystemframearereserved.

175

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.2.1PLLControlRegister3(PLLCTL3)

ThePLLCTL3registerisshowninFigure2-58anddescribedinTable2-73;controlsthesettingsofPLL2

(ClockSource6-FPLL).

Figure2-58.PLLControlRegister3(PLLCTL3)[offset=00]

31

29

28

24

23

22

21

16

ODPLL2

PLLDIV2

Reserved

REFCLKDIV2

R/WP-1h

R/WP-Fh

R-0

R/WP-2h

15

0

PLL_MUL2

R/WP-5F00h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-73.PLLControlRegister3(PLLCTL3)FieldDescriptions

Bit

Field

Value

Description

31-29

ODPLL2

InternalPLLOutputDivider

OD2=ODPLL2+1,rangesfrom1to8.

fpost_ODCLK2=foutput_CLK2/OD2

0

fpost_ODCLK2=foutput_CLK2/1

1h

fpost_ODCLK2=foutput_CLK2/2

:

:

7h

fpost_ODCLK2=foutput_CLK2/8

Note:PLLoutputclockisgatedoff,ifODPLL2ischangedwhilethePLL2isactive.

28-24

PLLDIV2

PLL2OutputClockDivider

R2=PLLDIV2+1,rangesfrom1to32.

fPLL2CLK=fpost_ODCLK2/R2

0

fPLL2CLK=fpost_ODCLK2/1

1h

fPLL2CLK=fpost_ODCLK2/2

:

:

1Fh

fPLL2CLK=fpost_ODCLK2/32

23-22

Reserved

0

ValuehasnoeffectonPLLoperation.

21-16

REFCLKDIV2

ReferenceClockDivider

NR2=REFCLKDIV2+1,rangesfrom1to64.

fINTCLK2=fOSCIN/NR2

0

fINTCLK2=fOSCIN/1

1h

fINTCLK2=fOSCIN/2

:

:

3Fh

fINTCLK2=fOSCIN/64

Note:ThisvalueshouldnotbechangedwhilethePLL2isactive.

15-0

PLLMUL2

PLL2MultiplicationFactor

NF2=(PLLMUL2/256)+1,validmultiplicationfactorsarefrom1to256.

fVCOCLK2=fINTCLK2xNF2

Userandprivilegedmode(read):

Privilegedmode(write):

100h

fVCOCLK2=fINTCLK2x1

:

:

5B00h

fVCOCLK2=fINTCLK2x92

5C00h

fVCOCLK2=fINTCLK2x93

:

:

FF00h

fVCOCLK2=fINTCLK2x256

176

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.2.2CPULogicBistClockDivider(STCLKDIV)

ThisregisterisshowninFigure2-59anddescribedinTable2-74.

Figure2-59.CPULogicBISTClockPrescaler(STCLKDIV)[offset=08h]

31

27

26

24

23

16

Reserved

CLKDIV

Reserved

R-0

R/WP-0

R-0

15

0

Reserved

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-74.CPULogicBISTClockPrescaler(STCLKDIV)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-24

CLKDIV

0

Clockdivider/prescalerforCPUclockduringlogicBIST

23-0

Reserved

0

Readreturns0.Writeshavenoeffect.

2.5.2.3Clock2ControlRegister(CLK2CNTRL)

ThisregisterisshowninFigure2-60anddescribedinTable2-75.

Figure2-60.Clock2ControlRegister(CLK2CNTRL)[offset=3Ch]

31

16

Reserved

R-0

15

12

11

8

7

4

3

0

Reserved

Reserved

Reserved

VCLK3R

R-0

R/WP-1h

R-0

R/WP-1h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-75.Clock2ControlRegister(CLK2CNTRL)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

Reserved

Readsreturnvalueandwritesallowedinprivilegemode.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

VCLK3R

VBUSclock3ratio.

0

TheratioisHCLKdivideby1.

:

:

Fh

TheratioisHCLKdividedby16.

177

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.2.4PeripheralAsynchronousClockConfiguration1Register(VCLKACON1)

ThisregisterisshowninFigure2-61anddescribedinTable2-76.

Figure2-61.PeripheralAsynchronousClockConfiguration1Register(VCLKACON1)[offset=40h]

31

27

26

24

23

21

20

19

16

Reserved

VCLKA4R

Reserved

VCLKA4_DIV_CDDIS

VCLKA4S

R-0

R/WP-1h

R-0

R/WP-0

R/WP-9h

15

11

10

8

7

5

4

3

0

Reserved

VCLKA3R

Reserved

VCLKA3_DIV_CDDIS

VCLKA3S

R-0

R/WP-1h

R-0

R/WP-0

R/WP-9h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-76.PeripheralAsynchronousClockConfiguration1Register(VCLKACON1)Field

Descriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-24

VCLKA4R

ClockdividerfortheVCLKA4source.OutputwillbepresentonVCLKA4_DIVR.

VCLKA4domainwillbeenabledbywritingtotheCDDISregisterandVCLKA4_DIV_CDDISbit

ItcaninferredthatVCLKA4_DIVclockisdisabledwhenVCLKA4_Sclockisdisabled.

0

TheratioisVCLKA4dividedby1.

:

:

7h

TheratioisVCLKA4dividedby8.

23-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20

VCLKA4_DIV_CDDIS

DisabletheVCLKA4divideroutput.

VCLKA4domainwillbeenabledbywritingtotheCDDISregister

0

EnabletheprescaledVCLKA4clockonVCLKA4_DIVR.

1

DisabletheprescaledVCLKA4clockonVCLKA4_DIVR.

19-16

VCLKA4S

Peripheralasynchronousclock4source.

0

Clocksource0isthesourceforperipheralasynchronousclock4.

1h

Clocksource1isthesourceforperipheralasynchronousclock4.

2h

Clocksource2isthesourceforperipheralasynchronousclock4.

3h

Clocksource3isthesourceforperipheralasynchronousclock4.

4h

Clocksource4isthesourceforperipheralasynchronousclock4.

5h

Clocksource5isthesourceforperipheralasynchronousclock4.

6h

Clocksource6isthesourceforperipheralasynchronousclock4.

7h

Clocksource7isthesourceforperipheralasynchronousclock4.

8h-Fh

VCLKisthesourceforperipheralasynchronousclock4.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-8

VCLKA3R

ClockdividerfortheVCLKA3source.OutputwillbepresentonVCLKA3_DIVR.

VCLKA3domainwillbeenabledbywritingtotheCDDISregisterandVCLKA3_DIV_CDDISbit

ItcaninferredthatVCLKA3_DIVclockisdisabledwhenVCLKA3_Sclockisdisabled.

0

TheratioisVCLKA3dividedby1.

:

:

7h

TheratioisVCLKA3dividedby8.

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

VCLKA3_DIV_CDDIS

DisabletheVCLKA3divideroutput.

VCLKA3domainwillbeenabledbywritingtotheCDDISregister

0

EnabletheprescaledVCLKA3clockonVCLKA3_DIVR.

1

DisabletheprescaledVCLKA3clockonVCLKA3_DIVR.

178

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

Table2-76.PeripheralAsynchronousClockConfiguration1Register(VCLKACON1)FieldDescriptions

(continued)

Bit

Field

Value

Description

3-0

VCLKA3S

Peripheralasynchronousclock3source.

0

Clocksource0isthesourceforperipheralasynchronousclock3.

1h

Clocksource1isthesourceforperipheralasynchronousclock3.

2h

Clocksource2isthesourceforperipheralasynchronousclock3.

3h

Clocksource3isthesourceforperipheralasynchronousclock3.

4h

Clocksource4isthesourceforperipheralasynchronousclock3.

5h

Clocksource5isthesourceforperipheralasynchronousclock3.

6h

Clocksource6isthesourceforperipheralasynchronousclock3.

7h

Clocksource7isthesourceforperipheralasynchronousclock3.

8h-Fh

VCLKisthesourceforperipheralasynchronousclock3.

NOTE:Nonimplementedclocksourcesshouldnotbeenabledorused.Alistoftheavailableclock

sourcesisshowninTable2-28.

2.5.2.5ClockSlipRegister(CLKSLIP)

ThisregisterisshowninFigure2-62anddescribedinTable2-77.

Figure2-62.ClockSlipRegister(CLKSLIP)[offset=70h]

31

16

Reserved

R-0

15

14

13

8

7

4

3

0

Reserved

PLL1_SLIP_FILTER_COUNT

Reserved

PLL1_SLIP_FILTER_KEY

R-0

R/WP-0

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-77.ClockSlipRegister(CLKSLIP)FieldDescriptions

Bit

Field

Value

Description

31-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

PLL1_SLIP_FILTER_COUNT

ConfigurethecountforthefilteredPLLslip.Countison10Mclock.

0

Onreset,countervalueiszero.Countermustbeprogrammedtonon-zerovalue

andenabledforthefilteringtobeenabled

1h-3Fh

Counterprogrammedtoanon-zerovalue

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

PLL1_SLIP_FILTER_KEY

EnablethePLLfiltering.

5h

Onreset,thePLLfilterisdisabledandnormalPLLslippassesthrough.

Fh

Thisisanunsupportedvalue.Usershouldavoidwritingthisvaluetothisfield.

Others

EnableoffilteredPLLslip.Recommendedtoprogram1010inthesebitfields.

EnableofPLLslipoccurswhentheKEYisprogrammedandanon-zerovalueis

presentintheCOUNTfield.

179

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.2.6EFUSEControllerControlRegister(EFC_CTLREG)

ThisregisterisshowninFigure2-63anddescribedinTable2-78.

Figure2-63.EFUSEControllerControlRegister(EFC_CTLREG)[offset=ECh]

31

16

Reserved

R-0

15

4

3

0

Reserved

EFC_INSTR_WEN

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-78.EFUSEControllerControlRegister(EFC_CTLREG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

EFC_INSTR_WEN

Enableuserwriteof4EFUSEcontrollerinstructions.

SYSmodulegeneratestheenablesignalwhichwillbetiedto

OCP_FROM_WRITE_DISABLEonefusecontrollerport

Ah

Writingofinstructions(Program,ProgramCRA,RunAutoload,andLoadFuseScanchain)to

EFCisallowedenabled.

Others

Writingofinstructions(Program,ProgramCRA,RunAutoload,andLoadFuseScanchain)in

EFCregistersisblocked.

2.5.2.7DieIdentificationRegisterLowerWord(DIEIDL_REG0)

ThisregisterisshowninFigure2-64anddescribedinTable2-79.

Figure2-64.DieIdentificationRegister,LowerWord(DIEIDL_REG0)[offset=F0h]

31

0

DIEIDL

R-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-X=Valueunchangedafterreset

Table2-79.DieIdentificationRegister,LowerWord(DIEIDL_REG0)FieldDescriptions

Bit

Field

Value

Description

31-0

DIEIDL(31-0)

0-FFFFFFFFh

Thisread-onlyregistercontainsthelowerword(31:0)ofthedieIDinformation.

180

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.2.8DieIdentificationRegisterUpperWord(DIEIDH_REG1)

ThisregisterisshowninFigure2-65anddescribedinTable2-80.

Figure2-65.DieIdentificationRegister,UpperWord(DIEIDH_REG1)[offset=F4h]

31

0

DIEIDH

R-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-X=Valueunchangedafterreset

Table2-80.DieIdentificationRegister,UpperWord(DIEIDH_REG1)FieldDescriptions

Bit

Field

Value

Description

31-0

DIEIDH(63-32)

0-FFFFFFFFh

Thisread-onlyregistercontainstheupperword(63:32)ofthedieIDinformation.

2.5.2.9DieIdentificationRegisterLowerWord(DIEIDL_REG2)

ThisregisterisshowninFigure2-66anddescribedinTable2-81.

Figure2-66.DieIdentificationRegister,LowerWord(DIEIDL_REG2)[offset=F8h]

31

0

DIEIDL2

R-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-X=Valueunchangedafterreset

Table2-81.DieIdentificationRegister,LowerWord(DIEIDL_REG2)FieldDescriptions

Bit

Field

Value

Description

31-0

DIEIDL2(95-64)

0-FFFFFFFFh

Thisread-onlyregistercontainsthelowerword(95:64)ofthedieIDinformation.

2.5.2.10DieIdentificationRegisterUpperWord(DIEIDH_REG3)

ThisregisterisshowninFigure2-67anddescribedinTable2-82.

Figure2-67.DieIdentificationRegister,UpperWord(DIEIDH_REG3)[offset=FCh]

31

0

DIEIDH2

R-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-X=Valueunchangedafterreset

Table2-82.DieIdentificationRegister,UpperWord(DIEIDH_REG3)FieldDescriptions

Bit

Field

Value

Description

31-0

DIEIDH2(127-96)

0-FFFFFFFFh

Thisread-onlyregistercontainstheupperword(127:97)ofthedieIDinformation.

181

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3PeripheralCentralResource(PCR)ControlRegisters

ThissectiondescribesthePeripheralCentralResource(PCR)controlregisters.Thestartaddressofthe

PCRregisterframeis0xFFFFE000andtheendaddressis0xFFFFE0FF.Table2-83summarizesthe

registersinthePCR,whichareusedtoconfigureprotectiontotheperipheralsinPCSandPSregions.

Thefollowingsectionsprovidedetailedinformationabouttheseregisters.Notallchipselectsexistonthis

device.

Table2-83.PeripheralCentralResourceControlRegistersSummary

Offset

Acronym

RegisterDescription

Section

00

PMPROTSET0

PeripheralMemoryProtectionSetRegister0

Section2.5.3.1

04h

PMPROTSET1

PeripheralMemoryProtectionSetRegister1

Section2.5.3.2

08h-0Ch

Reserved

Reserved

10h

PMPROTCLR0

PeripheralMemoryProtectionClearRegister0

Section2.5.3.3

14h

PMPROTCLR1

PeripheralMemoryProtectionClearRegister1

Section2.5.3.4

18h-1Ch

Reserved

Reserved

20h

PPROTSET0

PeripheralProtectionSetRegister0

Section2.5.3.5

24h

PPROTSET1

PeripheralProtectionSetRegister1

Section2.5.3.6

28h

PPROTSET2

PeripheralProtectionSetRegister2

Section2.5.3.7

2Ch

PPROTSET3

PeripheralProtectionSetRegister3

Section2.5.3.8

30h-3Ch

Reserved

Reserved

40h

PPROTCLR0

PeripheralProtectionClearRegister0

Section2.5.3.9

44h

PPROTCLR1

PeripheralProtectionClearRegister1

Section2.5.3.10

48h

PPROTCLR2

PeripheralProtectionClearRegister2

Section2.5.3.11

4Ch

PPROTCLR3

PeripheralProtectionClearRegister3

Section2.5.3.12

50h-5Ch

Reserved

Reserved

60h

PCSPWRDWNSET0

PeripheralMemoryPower-DownSetRegister0

Section2.5.3.13

64h

PCSPWRDWNSET1

PeripheralMemoryPower-DownSetRegister1

Section2.5.3.14

68h-6Ch

Reserved

Reserved

70h

PCSPWRDWNCLR0

PeripheralMemoryPower-DownClearRegister0

Section2.5.3.15

74h

PCSPWRDWNCLR1

PeripheralMemoryPower-DownClearRegister1

Section2.5.3.16

78h-7Ch

Reserved

Reserved

80h

PSPWRDWNSET0

PeripheralPower-DownSetRegister0

Section2.5.3.17

84h

PSPWRDWNSET1

PeripheralPower-DownSetRegister1

Section2.5.3.18

88h

PSPWRDWNSET2

PeripheralPower-DownSetRegister2

Section2.5.3.19

8Ch

PSPWRDWNSET3

PeripheralPower-DownSetRegister3

Section2.5.3.20

90h-9Ch

Reserved

Reserved

A0h

PSPWRDWNCLR0

PeripheralPower-DownClearRegister0

Section2.5.3.21

A4h

PSPWRDWNCLR1

PeripheralPower-DownClearRegister1

Section2.5.3.22

A8h

PSPWRDWNCLR2

PeripheralPower-DownClearRegister2

Section2.5.3.23

ACh

PSPWRDWNCLR3

PeripheralPower-DownClearRegister3

Section2.5.3.24

182

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.1PeripheralMemoryProtectionSetRegister0(PMPROTSET0)

ThisregisterisshowninFigure2-68anddescribedinTable2-84.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-68.PeripheralMemoryProtectionSetRegister0(PMPROTSET0)[offset=00]

31

0

PCS[31-0]PROTSET

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-84.PeripheralMemoryProtectionSetRegister0(PMPROTSET0)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[31-0]PROTSET

Peripheralmemoryframeprotectionset.

0

Read:Theperipheralmemoryframencanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryframencanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET0andPMPROTCLR0registersissetto1.

2.5.3.2PeripheralMemoryProtectionSetRegister1(PMPROTSET1)

ThisregisterisshowninFigure2-69anddescribedinTable2-85.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-69.PeripheralMemoryProtectionSetRegister1(PMPROTSET1)[offset=04h]

31

0

PCS[63-32]PROTSET

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-85.PeripheralMemoryProtectionSetRegister1(PMPROTSET1)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[63-32]PROTSET

Peripheralmemoryframeprotectionset.

0

Read:Theperipheralmemoryframencanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryframencanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET1andPMPROTCLR1registersissetto1.

183

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.3PeripheralMemoryProtectionClearRegister0(PMPROTCLR0)

ThisregisterisshowninFigure2-70anddescribedinTable2-86.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-70.PeripheralMemoryProtectionClearRegister0(PMPROTCLR0)[offset=10h]

31

0

PCS[31-0]PROTCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-86.PeripheralMemoryProtectionClearRegister0(PMPROTCLR0)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[31-0]PROTCLR

Peripheralmemoryframeprotectionclear.

0

Read:Theperipheralmemoryframencanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryframencanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET0andPMPROTCLR0registersisclearedto0.

2.5.3.4PeripheralMemoryProtectionClearRegister1(PMPROTCLR1)

ThisregisterisshowninFigure2-71anddescribedinTable2-87.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-71.PeripheralMemoryProtectionClearRegister1(PMPROTCLR1)[offset=14h]

31

0

PCS[63-32]PROTCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-87.PeripheralMemoryProtectionClearRegister1(PMPROTCLR1)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[63-32]PROTCLR

Peripheralmemoryframeprotectionclear.

0

Read:Theperipheralmemoryframencanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryframencanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET1andPMPROTCLR1registersisclearedto0.

184

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.5PeripheralProtectionSetRegister0(PPROTSET0)

ThereisonebitforeachquadrantforPS0toPS7.

ThefollowingarethewaysinwhichquadrantsareusedwithinaPSframe:

(a)Theslaveusesallthefourquadrants.

Onlythebitcorrespondingtothequadrant0ofPSnisimplemented.Itprotectsthewhole1K-byte

frame.Theremainingthreebitsarenotimplemented.

(b)Theslaveusestwoquadrants.

Eachquadranthastobeinoneofthesegroups:(Quad0andQuad1)or(Quad2andQuad3).

ForthegroupQuad0/Quad1,thebitquadrant0protectsbothquadrants0and1.Thebitquadrant1is

notimplemented.

ForthegroupQuad2/Quad3,thebitquadrant2protectsbothquadrants2and3.Thebitquadrant3is

notimplemented

(c)Theslaveusesonlyonequadrant.

Inthiscase,thebit,asspecifiedinTable2-88,protectstheslave.

Theabovearrangementistrueforalltheperipheralselect(PS0toPS31)presentedinSection2.5.3.6to

Section2.5.3.12.ThisregisterholdsbitsforPS0toPS7andisshowninFigure2-72anddescribedin

Table2-88.

NOTE:Writestononimplementedbitshavenoeffectandreadsare0.

Figure2-72.PeripheralProtectionSetRegister0(PPROTSET0)[offset=20h]

31

0

PCS[7-0]QUAD[3-0]PROTSET

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-88.PeripheralProtectionSetRegister0(PPROTSET0)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[7-0]QUAD[3-0]

Peripheralselectquadrantprotectionset.

PROTSET

0

Read:Theperipheralselectquadrantanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET0andPMPROTCLR0registersissetto1.

185

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.6PeripheralProtectionSetRegister1(PPROTSET1)

ThereisonebitforeachquadrantforPS8toPS15.Theprotectionschemeisdescribedin

Section2.5.3.5.ThisregisterisshowninFigure2-73anddescribedinTable2-89.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-73.PeripheralProtectionSetRegister1(PPROTSET1)[offset=24h]

31

0

PCS[15-8]QUAD[3-0]PROTSET

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-89.PeripheralProtectionSetRegister1(PPROTSET1)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[15-8]QUAD[3-0]

Peripheralselectquadrantprotectionset.

PROTSET

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET1andPMPROTCLR1registersissetto1.

2.5.3.7PeripheralProtectionSetRegister2(PPROTSET2)

ThereisonebitforeachquadrantforPS16toPS23.Theprotectionschemeisdescribedin

Section2.5.3.5.ThisregisterisshowninFigure2-74anddescribedinTable2-90.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-74.PeripheralProtectionSetRegister2(PPROTSET2)[offset=28h]

31

0

PCS[23-16]QUAD[3-0]PROTSET

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-90.PeripheralProtectionSetRegister2(PPROTSET2)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[23-16]QUAD[3-0]

Peripheralselectquadrantprotectionset.

PROTSET

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET2andPMPROTCLR2registersissetto1.

186

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.8PeripheralProtectionSetRegister3(PPROTSET3)

ThereisonebitforeachquadrantforPS24toPS31.Theprotectionschemeisdescribedin

Section2.5.3.5.ThisregisterisshowninFigure2-75anddescribedinTable2-91.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-75.PeripheralProtectionSetRegister3(PPROTSET3)[offset=2Ch]

31

0

PCS[31-0]QUAD[3-0]PROTSET

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-91.PeripheralProtectionSetRegister3(PPROTSET3)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[31-0]QUAD[3-0]

Peripheralselectquadrantprotectionset.

PROTSET

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET3andPMPROTCLR3registersissetto1.

2.5.3.9PeripheralProtectionClearRegister0(PPROTCLR0)

ThereisonebitforeachquadrantforPS0toPS7.TheprotectionschemeisdescribedinSection2.5.3.5.

ThisregisterisshowninFigure2-76anddescribedinTable2-92.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-76.PeripheralProtectionClearRegister0(PPROTCLR0)[offset=40h]

31

0

PCS[7-0]QUAD[3-0]PROTCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-92.PeripheralProtectionClearRegister0(PPROTCLR0)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[7-0]QUAD[3-0]

Peripheralselectquadrantprotectionclear.

PROTCLR

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET0andPMPROTCLR0registersisclearedto0.

187

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.10PeripheralProtectionClearRegister1(PPROTCLR1)

ThereisonebitforeachquadrantforPS8toPS15.Theprotectionschemeisdescribedin

Section2.5.3.5.ThisregisterisshowninFigure2-77anddescribedinTable2-93.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-77.PeripheralProtectionClearRegister1(PPROTCLR1)[offset=44h]

31

0

PCS[15-8]QUAD[3-0]PROTCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-93.PeripheralProtectionClearRegister1(PPROTCLR1)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[15-8]QUAD[3-0]

Peripheralselectquadrantprotectionclear.

PROTCLR

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET1andPMPROTCLR1registersisclearedto0.

2.5.3.11PeripheralProtectionClearRegister2(PPROTCLR2)

ThereisonebitforeachquadrantforPS16toPS23.Theprotectionschemeisdescribedin

Section2.5.3.5.ThisregisterisshowninFigure2-78anddescribedinTable2-94.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-78.PeripheralProtectionClearRegister2(PPROTCLR2)[offset=48h]

31

0

PCS[23-16]QUAD[3-0]PROTCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-94.PeripheralProtectionClearRegister2(PPROTCLR2)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[23-16]QUAD[3-0]

Peripheralselectquadrantprotectionclear.

PROTCLR

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET2andPMPROTCLR2registersisclearedto0.

188

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.12PeripheralProtectionClearRegister3(PPROTCLR3)

ThereisonebitforeachquadrantforPS24toPS31.Theprotectionschemeisdescribedin

Section2.5.3.5.ThisregisterisshowninFigure2-79anddescribedinTable2-95.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-79.PeripheralProtectionClearRegister3(PPROTCLR3)[offset=4Ch]

31

0

PCS[31-0]QUAD[3-0]PROTCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-95.PeripheralProtectionClearRegister3(PPROTCLR3)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[31-0]QUAD[3-0]

Peripheralselectquadrantprotectionclear.

PROTCLR

0

Read:Theperipheralselectquadrantcanbewrittentoandreadfrominbothuserand

privilegedmodes.

Write:Thebitisunchanged.

1

Read:Theperipheralselectquadrantcanbewrittentoonlyinprivilegedmode,butitcanbe

readinbothuserandprivilegedmodes.

Write:ThecorrespondingbitinPMPROTSET3andPMPROTCLR3registersisclearedto0.

2.5.3.13PeripheralMemoryPower-DownSetRegister0(PCSPWRDWNSET0)

EachbitcorrespondstoabitatthesameindexinthePMPROTregisterinthattheybothrelatetothe

sameperipheral.ThisregisterisshowninFigure2-80anddescribedinTable2-96.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-80.PeripheralMemoryPower-DownSetRegister0(PCSPWRDWNSET0)[offset=60h]

31

0

PCS[31-0]PWRDNSET

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-96.PeripheralMemoryPower-DownSetRegister0(PCSPWRDWNSET0)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[31-0]PWRDNSET

Peripheralmemoryclockpower-downset.

0

Read:Theperipheralmemoryclock[31-0]isactive.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryclock[31-0]isinactive.

Write:ThecorrespondingbitinthePCSPWRDWNSET0andPCSPWRDWNCLR0registers

issetto1.

189

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.14PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNSET1)

ThisregisterisshowninFigure2-81anddescribedinTable2-97.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-81.PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNSET1)[offset=64h]

31

0

PCS[63-32]PWRDNSET

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-97.PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNSET1)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[63-32]PWRDNSET

Peripheralmemoryclockpower-downset.

0

Read:Theperipheralmemoryclock[63-32]isactive.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryclock[63-32]isinactive.

Write:ThecorrespondingbitinthePCSPWRDWNSET1andPCSPWRDWNCLR1registers

issetto1.

2.5.3.15PeripheralMemoryPower-DownClearRegister0(PCSPWRDWNCLR0)

ThisregisterisshowninFigure2-82anddescribedinTable2-98.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-82.PeripheralMemoryPower-DownClearRegister0(PCSPWRDWNCLR0)[offset=70h]

31

0

PCS[31-0]PWRDNCLR

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-98.PeripheralMemoryPower-DownClearRegister0(PCSPWRDWNCLR0)Field

Descriptions

Bit

Field

Value

Description

31-0

PCS[31-0]PWRDNCLR

Peripheralmemoryclockpower-downclear.

0

Read:Theperipheralmemoryclock[31-0]isactive.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryclock[31-0]isinactive.

Write:ThecorrespondingbitinthePCSPWRDWNSET0andPCSPWRDWNCLR0registers

isclearedto0.

190

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.16PeripheralMemoryPower-DownClearRegister1(PCSPWRDWNCLR1)

ThisregisterisshowninFigure2-83anddescribedinTable2-99.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-83.PeripheralMemoryPower-DownClearRegister1(PCSPWRDWNCLR1)[offset=74h]

31

0

PCS[63-32]PWRDNCLR

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-99.PeripheralMemoryPower-DownSetRegister1(PCSPWRDWNCLR1)FieldDescriptions

Bit

Field

Value

Description

31-0

PCS[63-32]PWRDNCLR

Peripheralmemoryclockpower-downclear.

0

Read:Theperipheralmemoryclock[63-32]isactive.

Write:Thebitisunchanged.

1

Read:Theperipheralmemoryclock[63-32]isinactive.

Write:ThecorrespondingbitinthePCSPWRDWNSET1andPCSPWRDWNCLR1registers

isclearedto0.

191

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.17PeripheralPower-DownSetRegister0(PSPWRDWNSET0)

ThereisonebitforeachquadrantforPS0toPS7.Eachbitofthisregistercorrespondstothebitatthe

sameindexinthecorrespondingPPROTregisterinthattheyrelatetothesameperipheral.Thesebitsare

usedtopowerdown/poweruptheclocktothecorrespondingperipheral.

ForeverybitimplementedinthePPROTregister,thereisonebitinthePSnPWRDWNregister,except

whentwoperipherals(bothinPSarea)sharebuses.Inthatcase,onlyonePower-Downbitis

implemented,atthepositioncorrespondingtothatperipheralwhosequadrantcomesfirst(thelower

numbered).

Thewaysinwhichquadrantscanbeusedwithinaframeareidenticaltowhatisdescribedunder

PPROTSET0,Section2.5.3.5.

ThisarrangementisthesameforbitsofPS8toPS31,presentedinSection2.5.3.18-Section2.5.3.24.

ThisregisterholdsbitsforPS0toPS7.ThisregisterisshowninFigure2-84anddescribedinTable2-

100.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-84.PeripheralPower-DownSetRegister0(PSPWRDWNSET0)[offset=80h]

31

0

PS[7-0]QUAD[3-0]PWRDWNSET

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-100.PeripheralPower-DownSetRegister0(PSPWRDWNSET0)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[7-0]QUAD[3-0]

Peripheralselectquadrantclockpower-downset.

PWRDWNSET

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET0andPSPWRDWNCLR0registersisset

to1.

192

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.18PeripheralPower-DownSetRegister1(PSPWRDWNSET1)

ThereisonebitforeachquadrantforPS8toPS15.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-85anddescribedinTable2-101.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-85.PeripheralPower-DownSetRegister1(PSPWRDWNSET1)[offset=84h]

31

0

PS[15-8]QUAD[3-0]PWRDWNSET

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-101.PeripheralPower-DownSetRegister1(PSPWRDWNSET1)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[15-8]QUAD[3-0]

Peripheralselectquadrantclockpower-downset.

PWRDWNSET

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET1andPSPWRDWNCLR1registersisset

to1.

2.5.3.19PeripheralPower-DownSetRegister2(PSPWRDWNSET2)

ThereisonebitforeachquadrantforPS16toPS23.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-86anddescribedinTable2-102.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-86.PeripheralPower-DownSetRegister2(PSPWRDWNSET2)[offset=88h]

31

0

PS[23-16]QUAD[3-0]PWRDWNSET

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-102.PeripheralPower-DownSetRegister2(PSPWRDWNSET2)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[23-16]QUAD[3-0]

Peripheralselectquadrantclockpower-downset.

PWRDWNSET

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET2andPSPWRDWNCLR2registersisset

to1.

193

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.20PeripheralPower-DownSetRegister3(PSPWRDWNSET3)

ThereisonebitforeachquadrantforPS24toPS31.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-87anddescribedinTable2-103.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-87.PeripheralPower-DownSetRegister3(PSPWRDWNSET3)[offset=8Ch]

31

0

PS[31-24]QUAD[3-0]PWRDWNSET

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-103.PeripheralPower-DownSetRegister3(PSPWRDWNSET3)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[31-24]QUAD[3-0]

Peripheralselectquadrantclockpower-downset.

PWRDWNSET

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET3andPSPWRDWNCLR3registersisset

to1.

2.5.3.21PeripheralPower-DownClearRegister0(PSPWRDWNCLR0)

ThereisonebitforeachquadrantforPS0toPS7.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-88anddescribedinTable2-104.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-88.PeripheralPower-DownClearRegister0(PSPWRDWNCLR0)[offset=A0h]

31

0

PS[7-0]QUAD[3-0]PWRDWNCLR

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-104.PeripheralPower-DownClearRegister0(PSPWRDWNCLR0)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[7-0]QUAD[3-0]

Peripheralselectquadrantclockpower-downclear.

PWRDWNCLR

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET0andPSPWRDWNCLR0registersis

clearedto0.

194

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSystemandPeripheralControlRegisters

2.5.3.22PeripheralPower-DownClearRegister1(PSPWRDWNCLR1)

ThereisonebitforeachquadrantforPS8toPS15.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-89anddescribedinTable2-105.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-89.PeripheralPower-DownClearRegister1(PSPWRDWNCLR1)[offset=A4h]

31

0

PS[15-8]QUAD[3-0]PWRDWNCLR

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-105.PeripheralPower-DownClearRegister1(PSPWRDWNCLR1)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[15-8]QUAD[3-0]

Peripheralselectquadrantclockpower-downclear.

PWRDWNCLR

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET1andPSPWRDWNCLR1registersis

clearedto0.

2.5.3.23PeripheralPower-DownClearRegister2(PSPWRDWNCLR2)

ThereisonebitforeachquadrantforPS16toPS23.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-90anddescribedinTable2-106.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-90.PeripheralPower-DownClearRegister2(PSPWRDWNCLR2)[offset=A8h]

31

0

PS[23-16]QUAD[3-0]PWRDWNCLR

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-106.PeripheralPower-DownClearRegister2(PSPWRDWNCLR2)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[23-16]QUAD[3-0]

Peripheralselectquadrantclockpower-downclear.

PWRDWNCLR

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET2andPSPWRDWNCLR2registersis

clearedto0.

195

SPNU499B–November2012–RevisedAugust2013

Architecture

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SystemandPeripheralControlRegisterswww.ti.com

2.5.3.24PeripheralPower-DownClearRegister3(PSPWRDWNCLR3)

ThereisonebitforeachquadrantforPS24toPS31.Theprotectionschemeisdescribedin

Section2.5.3.17.ThisregisterisshowninFigure2-91anddescribedinTable2-107.

NOTE:Onlythosebitsthathaveaslaveatthecorrespondingbitpositionareimplemented.Writes

tononimplementedbitshavenoeffectandreadsare0.

Figure2-91.PeripheralPower-DownClearRegister3(PSPWRDWNCLR)[offset=ACh]

31

0

PS[31-24]QUAD[3-0]PWRDWNCLR

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table2-107.PeripheralPower-DownClearRegister3(PSPWRDWNCLR3)FieldDescriptions

Bit

Field

Value

Description

31-0

PS[31-24]QUAD[3-0]

Peripheralselectquadrantclockpower-downclear.

PWRDWNCLR

0

Read:Theclocktotheperipheralselectquadrantisactive.

Write:Thebitisunchanged.

1

Read:Theclocktotheperipheralselectquadrantisinactive.

Write:ThecorrespondingbitinPSPWRDWNSET3andPSPWRDWNCLR3registersis

clearedto0.

196

Architecture

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter3

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

Thischapterdescribesthepowermanagementmodule(PMM).

Topic...........................................................................................................................Page

3.1Overview........................................................................................................198

3.2PowerDomains...............................................................................................200

3.3PMMOperation................................................................................................202

3.4PMMRegisters................................................................................................205

197

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Register

Interface

Register

File

PSCON

Diagnostic

Compare

Self-test

Diagnostic

PMM

Reset

Manage-

ment

Clock

Manage-

ment

System

Interface

WakeUpControl

PMC

Power

Domain(1)

Power

Domain(n)

Diagnos-

tic

Diagnos-

tic

Primary

PSCON(1)

Primary

PSCON(n)

PSCON(1)

PSCON(1)



Overviewwww.ti.com

3.1Overview

ThemicrocontrollerispartoftheHerculesfamilyofmicrocontrollersfromTexasInstrumentsforsafety-

criticalapplications.Severalfunctionsareimplementedonthismicrocontrollertargetedtowardsvaried

applications.Thecorelogicisdividedintoseveraldomainsthatcanbeindependentlyturnedonoroff

basedontheapplication’srequirements.Thisallowsanapplicationtoreducetheleakagecurrentfora

coredomainthathasmodulesthatarenotbeingusedbytheapplication.

ThischapterdescribesthePowerManagementModule(PMM).ThePMMprovidesmemory-mapped

registersthatcontrolthestatesofthesupportedpowerdomains.ThePMMincludesinterfacestothe

PowerModeController(PMC)andthePowerStateController(PSCON).ThePMCandPSCONcontrol

thepowerup/downsequenceofeachpowerdomain.

3.1.1MainFeaturesofthePowerManagementModule(PMM)

ThemainfeaturesofthePMMimplementedonthemicrocontrollerare:

•Supports5logicpowerdomains:PD1,PD2,PD3,PD4andPD5

NotethatPD1isanalways-ONpowerdomainandisnotcontrolledbythePMM.

•Supports3memory-onlypowerdomains:RAM_PD1,RAM_PD2andRAM_PD3

•Managestheclocksforeachpowerdomain

•Managestheresetstoeachpowerdomain

•Includesfailsafecomparelogictocontinuouslymonitorthestatesofeachpowerdomain

•Supportsdiagnosticandself-testlogictovalidatefailsafecomparelogic

3.1.2BlockDiagram

Figure3-1.PMMBlockDiagram

198

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOverview

PMMconsistsofseveralkeycomponents:

•Registerinterface–thePMMcontrolregistersaremappedtothedevicememoryspaceandstartat

address0xFFFF0000.

•SystemInterface–thePMMreceivestheclocks,resets,errorsandallothercontrolsignalsthrough

thisinterface.

•PSCONDiagnosticCompare–thisblockcomparestheoutputsofeachprimaryPSCONandthe

respectivediagnosticPSCONimplementedforfailsafesafety.

•Self-TestDiagnostic–thisblockcontainsthelogictoplacethePSCONdiagnosticcompareblockina

self-testmodeinordertotestthefailsafefeature.

•Clockmanagement–thePMMprovidesindependentclockgatingandhandshakingcontrolsforeach

powerdomainandalsogeneratestheclockdomainsforeachpowerdomain.

•ResetManagement–thePMMprovidesindependentresetsignalsforeachpowerdomain.

•PowerStateController(PSCON)–ThePSCONisafinitestatemachinethatcontrolsthepower

sequenceofapowerdomainfromonestatetoanother.Eachpowerdomainiscontrolledbyone

dedicatedPSCON.

•PowerDomain–Apowerdomainisagroupoflogicand/ormemorieswhichisseparatedfromthe

globalpowersupplyviapowerswitches.ThesepowerswitchesarecontrolledbythePSCONandcan

beturnedonoroff.

199

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DMA

POM

DMM

HTU1

FTU

HTU2

EMAC

Switched Central Resource

Switched Central Resource

Main Cross Bar:Arbitration and Prioritization Control

CRC

Switched Central ResourcePeripheral Central Resource Bridge

Dual Cortex-R4FCPUs in Lockstep

EMAC SlavesSwitched Central Resource

MibADC1

DCAN1

MibADC2DCAN2

DCAN3LIN

SCI

I2C

N2HET1

FlexRay

GIO

N2HET2

SPI464 KB Flashfor EEPROMEmulationwith ECCMDIO

MII

MibSPI1

CAN1_RX

CAN1_TX

CAN2_RX

CAN2_TX

CAN3_RX

CAN3_TX

MIBSPI1_CLK

MIBSPI1_SIMO[1:0]

MIBSPI1_SOMI[1:0]

MIBSPI1_nCS[5:0]

MIBSPI1_nENASPI2

SPI2_CLK

SPI2_SIMO

SPI2_SOMI

SPI2_nCS[1:0]

SPI2_nENAMibSPI3

MIBSPI3_CLK

MIBSPI3_SIMO

MIBSPI3_SOMI

MIBSPI3_nCS[5:0]

MIBSPI3_nENA

SPI4_CLKSPI4_SIMOSPI4_SOMISPI4_nCS0SPI4_nENAMibSPI5

MIBSPI5_SIMO[3:0]MIBSPI5_SOMI[3:0]MIBSPI5_nCS[3:0]MIBSPI5_nENALIN_RXLIN_TXSCI_RXSCI_TX

IOMM

PMM

VIM

RTI

DCC1

DCC2

3MFlashwithECCETM-R4RTP64K64K64K64K

RTPCLK

RTPnENA

RTPSYNC

RTPDATA[15:0]

TRACECLKIN

TRACECLK

TRACECTL

ETMDATA[31:0]DMMCLK

DMMnENA

DMMSYNC

DMMDATA[15:0]

256KRAMwithECC

MDCLKMDIOMII_RXD[3:0]MII_RXERMII_TXD[3:0]MII_TXENMII_TXCLKMII_RXCLKMII_CRSMII_RXDVMII_COLEMIFEMIF_CLKEMIF_CKEEMIF_nCS[4:2]EMIF_nCS[0]EMIF_ADDR[21:0]EMIF_BA[1:0]EMIF_DATA[15:0]EMIF_nDQM[1:0]EMIF_nOEEMIF_nWEEMIF_nRASEMIF_nCASEMIF_nRWEMIF_nWAITVSSADVCCADI2C_SCLI2C_SDAFRAY_RX1FRAY_TX1FRAY_TXEN1FRAY_RX2FRAY_TX2FRAY_TXEN2GIOB[7:0]GIOA[7:0]N2HET2[18,16]N2HET2[15:0]N2HET1[31:0]VCCADVSSADADREFHIADREFLOAD1EVTAD1IN[7:0]AD1IN[23:8]AD2IN[15:0]AD2EVTADREFHIADREFLO

# 2# 3# 4#1#2

#1always onCore/RAMRAMCore#5#3

Color Legend for Power Domains

SYS

nPORRST

nRST

ECLKESM

nERROR

N2HET1_PIN_nDIS

N2HET2_PIN_nDIS



PowerDomainswww.ti.com

3.2PowerDomains

Figure3-2.CorePowerDomains

Figure3-2showsthecoreandmemorypowerdomainsimplementedonthemicrocontroller.

Thisdevicehas8separatecorepowerdomains:

200

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPowerDomains

•PD1isanalways-ONdomainandisnotcontrolledbyPMM.ItcontainstheCPUaswellasother

principalmodulesandtheinterconnectrequiredforoperationofthemicrocontroller.Thisdomainalso

includes64KBofthetightly-coupledRAM.ThePD1canoperateonitsownevenwhenalltheother

corepowerdomainsareturnedoffbythePMM.NotethatallI/Osareinthisalways-ONdomainas

well.

CorepowerdomainsPD2throughPD5andRAM_PD1throughRAM_PD3arecontrolledbythePMM.

•PD2containstheEmbeddedTraceMacrocell(ETM-R4),RAMTracePort(RTP),andData

ModificationModule(DMM)componentsofthedebugsub-systemaswellastheParameterOverlay

Module(POM).

•PD3containssomeadditionalperipheralmodulesasanenhancedconfigurationoverandabovethe

peripheralsetavailableinPD1.TheseincludeasecondHigh-EndTimer(NHET2)withitsdedicated

transferunit(HTU2),asecondAnalog-to-DigitalConverter(ADC2),aSerialCommunicationInterface

(SCI),anInter-IntegratedCircuitcontroller(I2C),athirdControllerAreaNetworkcontroller(DCAN3),

andafourthSerialPeripheralInterfacemodule(SPI4).

•PD4containstheFlexRaycontrolleranditsdedicatedtransferunit(FTU).

•PD5containstheEthernetcontroller(EMAC),theExternalMemoryInterface(EMIF),aswellassome

componentsoftheinterconnectfabricrequiredbythesemodules.

•RAM_PD1,RAM_PD2andRAM_PD3eachcontain64KBoftightly-coupledRAM.

NOTE:SwitchingofPowerDomains

Themicrocontrollersonlysupportstaticswitchingofthepowerdomains.Thatis,thepower

domainscanbeturnedONorOFFonetimeduringdeviceinitialization.Onceconfigured,itis

notallowedtochangethestateofapowerdomainwithoutfirstassertingasystemreset.

201

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMOperationwww.ti.com

3.3PMMOperation

Itisimportanttounderstandsomefundamentalconceptsbeforehand.

3.3.1PowerSwitch

Apowerdomaingetsitspowersupplyviaapowerswitch.Thepowerswitchcreatesalinkbetweenthe

globalcoresupplyplaneandthelocalswitchablepowerdomainsupply.Eachpowerdomainusesmultiple

powerswitches,whicharedaisy-chainedtogether.

3.3.2PowerDomainState

Eachcorepowerdomaincanbeinoneofthreestates:Active,Idle,orOff.

Intheactivestate,apowerdomainisfullypoweredwithnormalsupplyvoltage.

Intheidlestate,allclockstoapowerdomainareturnedoff(drivenlow).Thesupplyvoltageisstill

maintainedatthenormallevel.

Intheoffstate,apowerdomainiscompletelycutofffromthepowersupply.

3.3.3DefaultPowerDomainState

Thedefaultstateofeachpowerdomain,exceptforPD1,iscontrolledbyTIduringproductiontestingvia

programmationofindividualbitswithintheresetconfigurationwordintheTI-OTPsectorofflashbank0.

Thisallowseachpowerdomaintodefaulttoeithertheactivestateortheoffstate.

3.3.4DisablingaPowerDomainPermanently

TIcanalsopermanentlydisableanypowerdomain,exceptforPD1.Thisisalsocontrolledby

programmationofindividualbitswithintheresetconfigurationwordintheTI-OTPsectorofflashbank0.

3.3.5ChangingPowerDomainState

Adomaincanonlychangestatewhencommandedbytheapplication.Eachdomainhasanassociated4-

bitkeytodefinetheintendedpowerstate.Whenthecorrectkeyisprogrammed,thePMMinitiatesthe

sequencetotransitionthatdomaintothecommandedstate.

Apowerstatetransitionisconsideredcompleteonlywheneverysinglepowerswitchforthatdomainhas

switchedovertothecommandedstate.

3.3.5.1TurningaPowerDomainOff

Itisnecessarytoturnoffallclocksgoingtoapowerdomainbeforethatdomaincanbepowereddown.

PMMcontainsthehardwareinterlockstohandlethis.Eachpowerdomainhasanassociatedmemory-

mappedregisterwhichallowstheapplicationtoturnoffclockstothatpowerdomain.

Stepstopowerdownadomainwithlogic–PD2,PD3,PD4,PD5:

1.WritetothePDCLK_DISxregistertodisableallclockstothepowerdomain.

2.Write0xAtotheLOGICPDONxregistertopowerdownthedomain.

3.PollforLOGICPDPWRSTATxtobecome“00”.Thepowerdomainisnowpowereddown.

ApowerdomainwithonlySRAMmacrosdoesnothaveaclockinput,sothesequenceisshorter.This

appliestoRAM_PD1,RAM_PD2andRAM_PD3powerdomainsshowninFigure3-2:

1.WritethecorrectkeytotheMEMPDONxregistertopowerdownthedomain.

2.PollforMEMPDPWRSTATxtobecome“00”.Thepowerdomainisnowpowereddown.

202

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMOperation

3.3.5.2TurningaPowerDomainOn

ApowerdomaincanbeturnedonbywritingthecorrectkeytotheLOGICPDONorMEMPDONregister.

PMMwillautomaticallyrestarttheclockstothepowerdomainoncethepowerisrestoredifthe“automatic

clockenableuponwakeup”optionisselected.Ifthisoptionisnotselected,theapplicationcanturnon

clockstothepowerdomainbyclearingthePDCLK_DISregister.Theapplicationmustpollthe

DOMAINISONregistertoensurethatthepowerhasbeenfullyrestoredbeforeenablingtheclocks.

NOTE:ifapowerdomainispermanentlydisabledbyTI,thentheapplicationcannotturnthatpower

domainbackon.Noerrorisgeneratediftheapplicationattemptstodoso.

3.3.6ResetManagement

PMMhandlestheresetsequenceforeachpowerdomain.Whenapowerdomainisturnedonfromanoff

state,thePMMwillresetthepowerdomaintoensurethatalllogicbeginsinitsdefaultresetstate.

PMMgeneratesnPORRST(power-onreset),nRST(systemreset),nPRST(peripheralreset),andnTRST

(test/debuglogicreset)foreachdomain.

3.3.7DiagnosticPowerStateController(PSCON)

EachpowerdomainstateiscontrolledbyaprimaryPSCON.ThereisasecondPSCONaswellforeach

powerdomain.ThisisthediagnosticPSCON.Allpowermanagementinputstoapowerdomainare

controlledonlybytheprimaryPSCON.Allpowermanagementoutputsfromthepowerdomainarefed

backtoboththeprimaryandthediagnosticPSCON.

ThePMMcommandsboththePSCONidenticallysothattheyarealwaysinalock-stepoperatingmode.A

dedicatedcompareunitcheckstheoutputsofthetwoPSCONmodulesoneverycycle.

3.3.8PSCONCompareBlock

Thediagnosticcompareblockcanoperateinoneoffourmodes:

3.3.8.1Lock-StepMode

ThisisthedefaultmodeofoperationofthePSCONcompareblock.ThePSCONdiagnosticcompare

blockcomparestheoutputsfromthetwoPSCONsoneverycycle.AnymismatchinthePSCONoutputsis

indicatedasaPSCONcompareerror.ThiserrorsignalismappedtotheErrorSignalingModule’s(ESM)

Group1channel38.Theapplicationcandefinetheresponsetothiserror.

3.3.8.2Self-TestMode

Aself-testmechanismisprovidedtocheckthePSCONcomparelogicforfaults.Thecompareerrorsignal

outputisdisabledinself-testmode.ThePSCONdiagnosticcompareblockgeneratestwotypesof

patternsduringself-testmode:comparematchtestfollowedbycomparemismatchtest.Duringtheself-

test,eachtestpatternisappliedonbothPSCONsignalportsofthePSCONdiagnosticcompareblock

andthenisclockedforonecycle.Thedurationoftheself-testis24cycles.Anydetectedfaultisindicated

asaself-testerror,mappedtoESMgroup1channel39.Ifnofaultisdetected,theself-testcompleteflag

isset.

TheapplicationcanpollforthisflagtobesetandthenswitchthemodeofthePSCONcompareblock

backtolock-stepmodebywritingtothemodekeyregister.

NOTE:PSCONoperationwhencompareblockisinself-testmode

WhenthePSCONcompareblockisinitsself-testmode,bothPSCONscontinuetofunction

normally.However,thereisnocomparisondoneonthePSCONoutputs.

203

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMOperationwww.ti.com

Comparematchtest:

Anidenticalvectorisappliedtobothinputportsatthesametime,therebyexpectingacomparematch.If

thecompareunitproducesamismatchthentheself-testerrorflagissetandtheself-testerrorsignalis

generated.Thecomparematchtestisterminatedifacomparemismatchisdetected.Thecomparematch

testtakes4cyclestocompletewhenthetestpasses.

Comparemismatchtest:

Avectorwithall1'sisappliedtothePSCONdiagnosticcompareblock’sprimaryinputportandthesame

inputisalsoappliedtothesecondaryinputportbutwithonebitflippedstartingfrombitposition0.The

unequalvectorsshouldcausethePSCONdiagnosticcompareblocktogenerateacomparemismatchat

bitposition0.Incaseamismatchisnotdetected,aself-testerrorisindicated.Thiscomparemismatch

testalgorithmisrepeateduntileverysinglebitpositionisverifiedonbothPSCONsignalports.

3.3.8.3Error-ForcingMode

ThismodeisdesignedspecificallytoensurethattheerrorsignaloutputfromthePSCONcompareblock

isnotstuckinactive.Inthismode,atestpatternisappliedtothePSCONrelatedinputsofthecompare

logictoforceanerror.TheapplicationcancleartheflagforESMgroup1channel38oncetheerroris

flagged.IftheESMgroup1channel38flagdoesnotgetset,thisindicatesthatthePSCONcompareerror

signalisstuckinactiveandcannotbereliedupontodetectaPSCONmismatch.

3.3.8.4Self-TestError-ForcingMode

Inthismode,anerrorisforcedsothattheself-testerroroutputfromthePSCONcompareblockis

activated.TheapplicationcancleartheflagforESMgroup1channel39oncetheerrorisflagged.Ifthe

ESMgroup1channel39flagdoesnotgetset,thisindicatesthatthePSCONcompareblockself-testerror

signalisstuckinactiveandthereisnoself-testmechanismavailableforthePSCONcompareblock.

3.3.8.5PMMOperationDuringCPUHaltDebugMode

NocompareerrorsaregeneratedwhentheCPUishaltedindebugmode,regardlessofthemodeofthe

diagnosticcompareblock.Nostatusflagsareupdatedinthismode.Normaloperationofthecompare

blockisresumedoncetheCPUexitsthedebugmode.

204

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4PMMRegisters

Table3-1showsasummaryofthecontrolregistersinthePMMmodule.Theregisterssupport32-bit,16-

bitand8-bitaccesses.TheaddressoffsetisspecifiedfromthebaseaddressofFFFF0000h.Anyaccess

toanunimplementedlocationwithinthePMMregisterframewillgenerateabuserrorthatresultsinan

Abortexception.

Table3-1.PMMRegisterSummary

Offset

Acronym

RegisterDescription

Section

00

LOGICPDPWRCTRL0

LogicPowerDomainControlRegister0

Section3.4.1

04h-0Ch

Reserved

Reserved

10h

MEMPDPWRCTRL0

MemoryPowerDomainControlRegister0

Section3.4.2

14h-1Ch

Reserved

Reserved

20h

PDCLKDIS

PowerDomainClockDisableRegister

Section3.4.3

24h

PDCLKDISSET

PowerDomainClockDisableSetRegister

Section3.4.4

28h

PDCLKDISCLR

PowerDomainClockDisableClearRegister

Section3.4.5

30h-3Ch

Reserved

Reserved

40h

LOGICPDPWRSTAT0

LogicPowerDomainPD2PowerStatusRegister

Section3.4.6

44h

LOGICPDPWRSTAT1

LogicPowerDomainPD3PowerStatusRegister

Section3.4.7

48h

LOGICPDPWRSTAT2

LogicPowerDomainPD4PowerStatusRegister

Section3.4.8

4Ch

LOGICPDPWRSTAT3

LogicPowerDomainPD5PowerStatusRegister

Section3.4.9

50h-7Fh

Reserved

Reserved

80h

MEMPDPWRSTAT0

MemoryPowerDomainRAM_PD1PowerStatusRegister

Section3.4.10

84h

MEMPDPWRSTAT1

MemoryPowerDomainRAM_PD2PowerStatusRegister

Section3.4.11

88h

MEMPDPWRSTAT2

MemoryPowerDomainRAM_PD3PowerStatusRegister

Section3.4.12

8Ch-9Fh

Reserved

Reserved

A0h

GLOBALCTRL1

GlobalControlRegister1

Section3.4.13

A8h

GLOBALSTAT

GlobalStatusRegister

Section3.4.14

ACh

PRCKEYREG

PSCONDiagnosticCompareKeyRegister

Section3.4.15

B0h

LPDDCSTAT1

LogicPDPSCONDiagnosticCompareStatusRegister1

Section3.4.16

B4h

LPDDCSTAT2

LogicPDPSCONDiagnosticCompareStatusRegister2

Section3.4.17

B8h

MPDDCSTAT1

MemoryPDPSCONDiagnosticCompareStatusRegister1

Section3.4.18

BCh

MPDDCSTAT2

MemoryPDPSCONDiagnosticCompareStatusRegister2

Section3.4.19

C0h

ISODIAGSTAT

IsolationDiagnosticStatusRegister

Section3.4.20

205

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.1LogicPowerDomainControlRegister(LOGICPDPWRCTRL0)

Figure3-3.LogicPowerDomainControlRegister(LOGICPDPWRCTRL0)[offset=00]

31

28

27

24

23

20

19

16

Reserved

LOGICPDON0

Reserved

LOGICPDON1

R-0

R/WP-n

R-0

R/WP-n

15

12

11

8

7

4

3

0

Reserved

LOGICPDON2

Reserved

LOGICPDON3

R-0

R/WP-n

R-0

R/WP-n

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-2.LogicPowerDomainControlRegister(LOGICPDPWRCTRL0)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

LOGICPDON0

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainPD2isinOFFstate.

Write:PowerdomainPD2iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainPD2isinActivestate.

Write:PowerdomainPD2iscommandedtoswitchtoActivestate.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

LOGICPDON1

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainPD3isinOFFstate.

Write:PowerdomainPD3iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainPD3isinActivestate.

Write:PowerdomainPD3iscommandedtoswitchtoActivestate.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

LOGICPDON2

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainPD4isinOFFstate.

Write:PowerdomainPD4iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainPD4isinActivestate.

Write:PowerdomainPD4iscommandedtoswitchtoActivestate.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

LOGICPDON3

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainPD5isinOFFstate.

Write:PowerdomainPD5iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainPD5isinActivestate.

Write:PowerdomainPD5iscommandedtoswitchtoActivestate.

206

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.2MemoryPowerDomainControlRegister0(MEMPDPWRCTRL0)

Figure3-4.MemoryPowerDomainControlRegister0(MEMPDPWRCTRL0)[offset=10h]

31

28

27

24

23

20

19

16

Reserved

MEMPDON0

Reserved

MEMPDON1

R-0

R/WP-n

R-0

R/WP-n

15

12

11

8

7

0

Reserved

MEMPDON2

Reserved

R-0

R/WP-n

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-3.MemoryPowerDomainControlRegister0(MEMPDPWRCTRL0)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

MEMPDON0

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainRAM_PD1isinOFFstate.

Write:PowerdomainRAM_PD1iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainRAM_PD1isinActivestate.

Write:PowerdomainRAM_PD1iscommandedtoswitchtoActivestate.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

MEMPDON1

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainRAM_PD2isinOFFstate.

Write:PowerdomainRAM_PD2iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainRAM_PD2isinActivestate.

Write:PowerdomainRAM_PD2iscommandedtoswitchtoActivestate.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

MEMPDON2

ReadinUserandPrivilegedMode.WriteinPrivilegedModeonly.

Ah

Read:PowerdomainRAM_PD3isinOFFstate.

Write:PowerdomainRAM_PD3iscommandedtoswitchtoOFFstate.

9h

Reserved

Anyothervalue

Read:PowerdomainRAM_PD3isinActivestate.

Write:PowerdomainRAM_PD3iscommandedtoswitchtoActivestate.

7-0

Reserved

0

Readreturns0.Writeshavenoeffect.

207

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.3PowerDomainClockDisableRegister(PDCLKDISREG)

Figure3-5.PowerDomainClockDisableRegister(PDCLKDISREG)[offset=20h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

PDCLK_DIS(3)

PDCLK_DIS(2)

PDCLK_DIS(1)

PDCLK_DIS(0)

R-0

R/WP-n

R/WP-n

R/WP-n

R/WP-n

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-4.PowerDomainClockDisableRegister(PDCLKDISREG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3

PDCLK_DIS[3]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[3].WriteinPrivileged

Modeonly.

0

EnableclockstologicpowerdomainPD5

1

DisableclockstologicpowerdomainPD5

2

PDCLK_DIS[2]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[2].WriteinPrivileged

Modeonly

0

EnableclockstologicpowerdomainPD4

1

DisableclockstologicpowerdomainPD4

1

PDCLK_DIS[1]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[1].WriteinPrivileged

Modeonly.

0

EnableclockstologicpowerdomainPD3

1

DisableclockstologicpowerdomainPD3

0

PDCLK_DIS[0]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[0].WriteinPrivileged

Modeonly.

0

EnableclockstologicpowerdomainPD2

1

DisableclockstologicpowerdomainPD2

208

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.4PowerDomainClockDisableSetRegister(PDCLKDISSETREG)

Figure3-6.PowerDomainClockDisableSetRegister(PDCLKDISSETREG)[offset=24h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

PDCLK_DISSE

PDCLK_DISSE

PDCLK_DISSE

PDCLK_DISSE

T(3)

T(2)

T(1)

T(0)

R-0

R/WP-n

R/WP-n

R/WP-n

R/WP-n

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-5.PowerDomainClockDisableSetRegister(PDCLKDISSETREG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3

PDCLK_DISSET[3]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DISSET[3].Writein

PrivilegedModeonly.

0

NoeffecttostateofclockstopowerdomainPD5

1

DisableclockstologicpowerdomainPD5

2

PDCLK_DISSET[2]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DISSET[2].Writein

PrivilegedModeonly.

0

NoeffecttostateofclockstopowerdomainPD4

1

DisableclockstologicpowerdomainPD4

1

PDCLK_DISSET[1]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DISSET[1].Writein

PrivilegedModeonly.

0

NoeffecttostateofclockstopowerdomainPD3

1

DisableclockstologicpowerdomainPD3

0

PDCLK_DISSET[0]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DISSET[0].Writein

PrivilegedModeonly.

0

NoeffecttostateofclockstopowerdomainPD2

1

DisableclockstologicpowerdomainPD2

209

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.5PowerDomainClockDisableClearRegister(PDCLKDISCLRREG)

Figure3-7.PowerDomainClockDisableClearRegister(PDCLKDISCLRREG)[offset=28h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

PDCLK_DISCL

PDCLK_DISCL

PDCLK_DISCL

PDCLK_DISCL

R(3)

R(2)

R(1)

R(0)

R-0

R/WP-n

R/WP-n

R/WP-n

R/WP-n

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-6.PowerDomainClockDisableClearRegister(PDCLKDISCLRREG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3

PDCLK_DISCLR[3]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[3].WriteinPrivileged

Modeonly.

0

NoeffecttostateofclockstopowerdomainPD5

1

EnableclockstologicpowerdomainPD5

2

PDCLK_DISCLR[2]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[2].WriteinPrivileged

Modeonly.

0

NoeffecttostateofclockstopowerdomainPD4

1

EnableclockstologicpowerdomainPD4

1

PDCLK_DISCLR[1]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[1].WriteinPrivileged

Modeonly.

0

NoeffecttostateofclockstopowerdomainPD3

1

EnableclockstologicpowerdomainPD3

0

PDCLK_DISCLR[0]

ReadinUserandPrivilegedModereturnsthecurrentvalueofPDCLK_DIS[0].WriteinPrivileged

Modeonly.

0

NoeffecttostateofclockstopowerdomainPD2

1

EnableclockstologicpowerdomainPD2

210

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.6LogicPowerDomainPD2PowerStatusRegister(LOGICPDPWRSTAT0)

Figure3-8.LogicPowerDomainPD2PowerStatusRegister(LOGICPDPWRSTAT0)[offset=40h]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS0

TRANS0

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

LOGICPDPWR

Reserved

Reserved

ON0

STAT0

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-7.LogicPowerDomainPD2PowerStatusRegister(LOGICPDPWRSTAT0)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS0

LogicintransitionstatusforpowerdomainPD2.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainPD2isinthesteadyActiveorOFFstate

1

LogicinpowerdomainPD2isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS0

MemoryintransitionstatusforpowerdomainPD2.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainPD2isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainPD2isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON0

CurrentstateofpowerdomainPD2.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainPD2isintheOFFstate

1

PowerdomainPD2isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

LOGICPDPWRSTAT0

LogicpowerdomainPD2powerstate.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

LogicpowerdomainPD2isswitchedOFF

1h

LogicpowerdomainPD2isinIdlestate

2h

Reserved

3h

LogicpowerdomainPD2isinActivestate

211

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.7LogicPowerDomainPD3PowerStatusRegister(LOGICPDPWRSTAT1)

Figure3-9.LogicPowerDomainPD3PowerStatusRegister(LOGICPDPWRSTAT1)[offset=44h]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS1

TRANS1

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

LOGICPDPWR

Reserved

Reserved

ON1

STAT1

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-8.LogicPowerDomainPD3PowerStatusRegister(LOGICPDPWRSTAT1)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS1

LogicintransitionstatusforpowerdomainPD3.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainPD3isinthesteadyActiveorOFFstate

1

LogicinpowerdomainPD3isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS1

MemoryintransitionstatusforpowerdomainPD3.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainPD3isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainPD3isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON1

CurrentstateofpowerdomainPD3.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainPD3isintheOFFstate

1

PowerdomainPD3isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

LOGICPDPWRSTAT1

LogicpowerdomainPD3powerstate.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

LogicpowerdomainPD3isswitchedOFF

1h

LogicpowerdomainPD3isinIdlestate

2h

Reserved

3h

LogicpowerdomainPD3isinActivestate

212

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.8LogicPowerDomainPD4PowerStatusRegister(LOGICPDPWRSTAT2)

Figure3-10.LogicPowerDomainPD4PowerStatusRegister(LOGICPDPWRSTAT2)[offset=48h]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS2

TRANS2

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

LOGICPDPWR

Reserved

Reserved

ON2

STAT2

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-9.LogicPowerDomainPD4PowerStatusRegister(LOGICPDPWRSTAT2)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS2

LogicintransitionstatusforpowerdomainPD4.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainPD4isinthesteadyActiveorOFFstate

1

LogicinpowerdomainPD4isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS2

MemoryintransitionstatusforpowerdomainPD4.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainPD4isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainPD4isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON2

CurrentstateofpowerdomainPD4.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainPD4isintheOFFstate

1

PowerdomainPD4isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

LOGICPDPWRSTAT2

LogicpowerdomainPD4powerstate.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

LogicpowerdomainPD4isswitchedOFF

1h

LogicpowerdomainPD4isinIdlestate

2h

Reserved

3h

LogicpowerdomainPD4isinActivestate

213

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.9LogicPowerDomainPD5PowerStatusRegister(LOGICPDPWRSTAT3)

Figure3-11.LogicPowerDomainPD5PowerStatusRegister(LOGICPDPWRSTAT3)[offset=4Ch]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS3

TRANS3

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

LOGICPDPWR

Reserved

Reserved

ON3

STAT3

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-10.LogicPowerDomainPD5PowerStatusRegister(LOGICPDPWRSTAT3)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS3

LogicintransitionstatusforpowerdomainPD5.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainPD5isinthesteadyActiveorOFFstate

1

LogicinpowerdomainPD5isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS3

MemoryintransitionstatusforpowerdomainPD5.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainPD5isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainPD5isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON3

CurrentstateofpowerdomainPD5.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainPD5isintheOFFstate

1

PowerdomainPD5isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

LOGICPDPWRSTAT3

LogicpowerdomainPD5powerstate.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

LogicpowerdomainPD5isswitchedOFF

1h

LogicpowerdomainPD5isinIdlestate

2h

Reserved

3h

LogicpowerdomainPD5isinActivestate

214

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.10MemoryPowerDomainRAM_PD1PowerStatusRegister(MEMPDPWRSTAT0)

Figure3-12.MemoryPowerDomainRAM_PD1PowerStatusRegister(MEMPDPWRSTAT0)[offset

=80h]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS0

TRANS0

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

MEMPDPWR

Reserved

Reserved

ON0

STAT0

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-11.MemoryPowerDomainRAM_PD1PowerStatusRegister(MEMPDPWRSTAT0)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS0

LogicintransitionstatusforpowerdomainRAM_PD1.Thispowerdomainonlycontains

SRAMmacros.However,anSRAMmacroalsohassomedigitallogiccontrolledbythe

PSCON.Therefore,amemorypowerdomainalsocontainsalogicstatusindicator.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainRAM_PD1isinthesteadyActiveorOFFstate

1

LogicinpowerdomainRAM_PD1isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS0

MemoryintransitionstatusforpowerdomainRAM_PD1.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainRAM_PD1isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainRAM_PD1isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON0

CurrentstateofpowerdomainRAM_PD1.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainRAM_PD1isintheOFFstate

1

PowerdomainRAM_PD1isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

MEMPDPWRSTAT0

MemorypowerdomainRAM_PD1powerstate.Thedefaultvalueofthisfieldiscontrolledby

thedeviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

MemorypowerdomainRAM_PD1isswitchedOFF

1h

Reserved

2h

Reserved

3h

LogicpowerdomainRAM_PD1isinActivestate

215

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.11MemoryPowerDomainRAM_PD2PowerStatusRegister(MEMPDPWRSTAT1)

Figure3-13.MemoryPowerDomainRAM_PD2PowerStatusRegister(MEMPDPWRSTAT1)[offset

=84h]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS1

TRANS1

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

MEMPDPWR

Reserved

Reserved

ON1

STAT1

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-12.MemoryPowerDomainRAM_PD2PowerStatusRegister(MEMPDPWRSTAT1)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS1

LogicintransitionstatusforpowerdomainRAM_PD2.Thispowerdomainonlycontains

SRAMmacros.However,anSRAMmacroalsohassomedigitallogiccontrolledbythe

PSCON.Therefore,amemorypowerdomainalsocontainsalogicstatusindicator.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainRAM_PD2isinthesteadyActiveorOFFstate

1

LogicinpowerdomainRAM_PD2isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS1

MemoryintransitionstatusforpowerdomainRAM_PD2.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainRAM_PD2isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainRAM_PD2isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON1

CurrentstateofpowerdomainRAM_PD2.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainRAM_PD2isintheOFFstate

1

PowerdomainRAM_PD2isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

MEMPDPWRSTAT1

MemorypowerdomainRAM_PD2powerstate.Thedefaultvalueofthisfieldiscontrolledby

thedeviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

MemorypowerdomainRAM_PD2isswitchedOFF

1h

Reserved

2h

Reserved

3h

LogicpowerdomainRAM_PD2isinActivestate

216

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.12MemoryPowerDomainRAM_PD3PowerStatusRegister(MEMPDPWRSTAT2)

Figure3-14.MemoryPowerDomainRAM_PD3PowerStatusRegister(MEMPDPWRSTAT2)[offset

=88h]

31

25

24

23

17

16

LOGICIN

MEMIN

Reserved

Reserved

TRANS2

TRANS2

R-0

R-n

R-0

R-n

15

9

8

7

2

1

0

DOMAIN

MEMPDPWR

Reserved

Reserved

ON2

STAT2

R-0

R-n

R-0

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Thisisaread-onlyregister.Allwritesareignored.

Thedefaultvaluesofthecontrolfieldsaredeterminedbythedeviceresetconfigurationwordstoredinthe

TI-OTPregionofflashbank0.

Table3-13.MemoryPowerDomainRAM_PD3PowerStatusRegister(MEMPDPWRSTAT2)Field

Descriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

LOGICINTRANS2

LogicintransitionstatusforpowerdomainRAM_PD3.Thispowerdomainonlycontains

SRAMmacros.However,anSRAMmacroalsohassomedigitallogiccontrolledbythe

PSCON.Therefore,amemorypowerdomainalsocontainsalogicstatusindicator.

ReadinUserandPrivilegedMode.

0

LogicinpowerdomainRAM_PD3isinthesteadyActiveorOFFstate

1

LogicinpowerdomainRAM_PD3isintheprocessofpower-down/up

13-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MEMINTRANS2

MemoryintransitionstatusforpowerdomainRAM_PD3.

ReadinUserandPrivilegedMode.

0

MemoryinpowerdomainRAM_PD3isinthesteadyActiveorOFFstate

1

MemoryinpowerdomainRAM_PD3isintheprocessofpower-down/up

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DOMAINON2

CurrentstateofpowerdomainRAM_PD3.Thedefaultvalueofthisfieldiscontrolledbythe

deviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

PowerdomainRAM_PD3isintheOFFstate

1

PowerdomainRAM_PD3isintheActivestate

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

MEMPDPWRSTAT2

MemorypowerdomainRAM_PD3powerstate.Thedefaultvalueofthisfieldiscontrolledby

thedeviceresetconfigurationwordintheTI-OTPregionofflashbank0.

ReadinUserandPrivilegedMode.

0

MemorypowerdomainRAM_PD3isswitchedOFF

1h

Reserved

2h

Reserved

3h

LogicpowerdomainRAM_PD3isinActivestate

217

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.13GlobalControlRegister1(GLOBALCTRL1)

Figure3-15.GlobalControlRegister1(GLOBALCTRL1)[offset=A0h]

31

16

Reserved

R-0

15

9

8

Reserved

PMCTRLPWRDN

R-0

R/WP-0

7

1

0

Reserved

AUTOCLKWAKEENA

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table3-14.GlobalControlRegister1(GLOBALCTRL1)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

PMCTRLPWRDN

PMC/PSCONPowerDown

ReadinUserandPrivilegedModereturnscurrentvalueofPMCTRLPWRDN.Writein

Privilegedmodeonly.

0

Enabletheclocktopmctrl_wakeupblock.

1

Disabletheclocktopmctrl_wakeupblock,whichcontainsPMCandallPSCONs.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

AUTOCLKWAKEENA

AutomaticClockEnableonWakeUp

ReadinUserandPrivilegedModereturnscurrentvalueofAUTOCLKWAKEENA.Writein

Privilegedmodeonly.

0

Disableautomaticclockwakeup.Theapplicationmustenableclocksbyclearingthecorrect

bitinthePDCLK_DISregister.

1

EnableautomaticclockwakeupwhenapowerdomaintransitionstoActivestate.

218

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.14GlobalStatusRegister(GLOBALSTAT)

Figure3-16.GlobalStatusRegister(GLOBALSTAT)[offset=A8h]

31

16

Reserved

R-0

15

1

0

Reserved

PMCTRLIDLE

R-0

R-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table3-15.GlobalStatusRegister(GLOBALSTAT)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

PMCTRLIDLE

StateofPMCandallPSCONs.ThePMMcapturesthestatusofPMCandPSCONsastheydonot

havearegisterinterfacetothehostCPU.

0

PMCandPSCONsforallpowerdomainsareintheprocessofgeneratingpowerstatetransition

controlsequenceforlogicand/orSRAM.

1

PMCandPSCONsforallpowerdomainshavecompletedgeneratingpowerstatetransitioncontrol

sequencetriggeredbyPMCinputcontrolsignals.

3.4.15PSCONDiagnosticCompareKeyRegister(PRCKEYREG)

Figure3-17.PSCONDiagnosticCompareKeyRegister(PRCKEYREG)[offset=ACh]

31

16

Reserved

R-0

15

4

3

0

Reserved

MKEY

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table3-16.PSCONDiagnosticCompareKeyRegister(PRCKEYREG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

MKEY

DiagnosticPSCONModeKey.ThemodekeyisappliedtoallindividualPSCONcompareunits.

ReadinUserandPrivilegedmodereturnsthecurrentvalueofMKEY.WriteinPrivilegedmodeonly.

0

LockStepmode

6h

Self-testmode

9h

ErrorForcingmode

Fh

Self-testErrorForcingMode

Allothers

LockStepmode

219

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.16LogicPDPSCONDiagnosticCompareStatusRegister1(LPDDCSTAT1)

Figure3-18.LogicPDPSCONDiagnosticCompareStatusRegister1(LPDDCSTAT1)[offset=B0h]

31

24

Reserved

R-0

23

20

19

18

17

16

Reserved

LCMPE[3]

LCMPE[2]

LCMPE[1]

LCMPE[0]

R-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

15

8

Reserved

R-0

7

4

3

2

1

0

Reserved

LSTC[3]

LSTC[2]

LSTC[1]

LSTC[0]

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table3-17.LogicPDPSCONDiagnosticCompareStatusRegister1(LPDDCSTAT1)Field

Descriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

LCMPE[3–0]

LogicPowerDomainCompareError

Eachofthesebitscorrespondstoalogicpowerdomain:

Bit3forPD5,

Bit2forPD4,

Bit1forPD3,

Bit0forPD2.

ReadinUserandPrivilegedMode.WriteinPrivilegedmodeonly.

0

Read:PSCONsignalsareidentical.

Write:Writing0hasnoeffect.

1

Read:PSCONsignalcomparemismatchidentified.

Write:ClearsthecorrespondingLCMPEbit,ifset.

15-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

LSTC[3–0]

LogicPowerDomainSelf-testComplete

Eachofthesebitscorrespondstoalogicpowerdomain:

Bit3forPD5,

Bit2forPD4,

Bit1forPD3,

Bit0forPD2.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Self-testisongoingifself-testmodeisentered.

1

Self-testiscomplete.

220

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.17LogicPDPSCONDiagnosticCompareStatusRegister2(LPDDCSTAT2)

Figure3-19.LogicPDPSCONDiagnosticCompareStatusRegister2(LPDDCSTAT2)[offset=B4h]

31

24

Reserved

R-0

23

20

19

18

17

16

Reserved

LSTET[3]

LSTET[2]

LSTET[1]

LSTET[0]

R-0

R-0

R-0

R-0

R-0

15

8

Reserved

R-0

7

4

3

2

1

0

Reserved

LSTE[3]

LSTE[2]

LSTE[1]

LSTE[0]

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table3-18.LogicPDPSCONDiagnosticCompareStatusRegister2(LPDDCSTAT2)Field

Descriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

LSTET[3–0]

LogicPowerDomainSelf-testErrorType

Eachofthesebitscorrespondstoalogicpowerdomain:

Bit3forPD5,

Bit2forPD4,

Bit1forPD3,

Bit0forPD2.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Self-testfailedduringcomparematchtest.

1

Self-testfailedduringcomparemismatchtest.

15-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

LSTE[3–0]

LogicPowerDomainSelf-testError

Eachofthesebitscorrespondstoalogicpowerdomain:

Bit3forPD5,

Bit2forPD4,

Bit1forPD3,

Bit0forPD2.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Self-testpassed.

1

Self-testfailed.

221

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.18MemoryPDPSCONDiagnosticCompareStatusRegister1(MPDDCSTAT1)

Thisregistershowstheinterruptstatus(beforeenabling)andallowssettingoftheinterruptstatus.

Figure3-20.MemoryPDPSCONDiagnosticCompareStatusRegister1(MPDDCSTAT1)[offset=

B8h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

MCPME[2]

MCPME[1]

MCPME[0]

R-0

R-0

R-0

R-0

15

8

Reserved

R-0

7

3

2

1

0

Reserved

MSTC[2]

MSTC[1]

MSTC[0]

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table3-19.MemoryPDPSCONDiagnosticCompareStatusRegister1(MPDDCSTAT1)Field

Descriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18-16

MCMPE[2–0]

MemoryPowerDomainCompareError

Eachofthesebitscorrespondstoamemorypowerdomain:

Bit2forRAM_PD3,

Bit1forRAM_PD2,

Bit0forRAM_PD1.

ReadinUserandPrivilegedMode.WriteinPrivilegedmodeonly.

0

Read:PSCONsignalsareidentical.

Write:Writing0hasnoeffect.

1

Read:PSCONsignalcomparemismatchidentified.

Write:ClearsthecorrespondingMCMPEbit,ifset.

15-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

MSTC[2–0]

MemoryPowerDomainSelf-testComplete

Eachofthesebitscorrespondstoamemorypowerdomain:

Bit2forRAM_PD3,

Bit1forRAM_PD2,

Bit0forRAM_PD1.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Self-testisongoingifself-testmodeisentered.

1

Self-testiscomplete.

222

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPMMRegisters

3.4.19MemoryPDPSCONDiagnosticCompareStatusRegister2(MPDDCSTAT2)

Figure3-21.MemoryPDPSCONDiagnosticCompareStatusRegister2(MPDDCSTAT2)[offset=

BCh]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

MSTET[2]

MSTET[1]

MSTET[0]

R-0

R-0

R-0

R-0

15

8

Reserved

R-0

7

3

2

1

0

Reserved

MSTE[2]

MSTE[1]

MSTE[0]

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table3-20.MemoryPDPSCONDiagnosticCompareStatusRegister2(MPDDCSTAT2)Field

Descriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18-16

MSTET[2–0]

MemoryPowerDomainSelf-testErrorType

Eachofthesebitscorrespondstoamemorypowerdomain:

Bit2forRAM_PD3,

Bit1forRAM_PD2,

Bit0forRAM_PD1.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Self-testfailedduringcomparematchtest.

1

Self-testfailedduringcomparemismatchtest.

15-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

MSTE[2–0]

MemoryPowerDomainSelf-testError

Eachofthesebitscorrespondstoamemorypowerdomain:

Bit2forRAM_PD3,

Bit1forRAM_PD2,

Bit0forRAM_PD1.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Self-testpassed.

1

Self-testfailed.

223

SPNU499B–November2012–RevisedAugust2013

PowerManagementModule(PMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PMMRegisterswww.ti.com

3.4.20IsolationDiagnosticStatusRegister(ISODIAGSTAT)

Thepowerstatecontroller(PSCON)implementedforeachlogicpowerdomaindoesnotsupportan

inherentacknowledgesignalindicatingthatitindeedreceivedthecommandtopowerdown(orisolate).

However,thisisanimportantconcernforsafety-criticalapplications.Therefore,aspecialisolationcellis

implementedineachlogicpowerdomaintoemulatethefunctionofsuchanacknowledgesignal.

ThisistheISO_DIAGcellandisimplementedseparatelyforeachlogicpowerdomain.Thisisaspecial

tie-offcellthatreadsavalueof1whenthelogicpowerdomainispoweredup.Thiscellhasanisolation

valueof0.Thatis,whenthislogicpowerdomainisturnedoff,thiscellwillread0.TheISO_DIAG

statusesforeachlogicpowerdomainisreflectedintheISODIAGSTATregister.Theapplicationcanpoll

thisdiagnosticregistertomakesurethatadomainthathasbeencommandedtoturnoffhasactually

receivedthecommand.

Figure3-22.IsolationDiagnosticStatusRegister(ISODIAGSTAT)[offset=C0h]

31

8

Reserved

R-0

4

3

2

1

0

Reserved

ISODIAG[3]

ISODIAG[2]

ISODIAG[1]

ISODIAG[0]

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table3-21.IsolationDiagnosticStatusRegister(ISODIAGSTAT)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

ISODIAG[3–0]

IsolationDiagnostic

Eachofthesebitscorrespondstoalogicpowerdomain:

Bit3forPD5,

Bit2forPD4,

Bit1forPD3,

Bit0forPD2.

ReadinUserandPrivilegedMode.Writeshavenoeffect.

0

Isolationisenabledforcorrespondingpowerdomain

1

Isolationisdisabledforcorrespondingpowerdomain

224

PowerManagementModule(PMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter4

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

ThischapterdescribestheI/OMultiplexingandControlModule(IOMM).

Topic...........................................................................................................................Page

4.1Overview........................................................................................................226

4.2MainFeaturesofI/OMultiplexingModule(IOMM)................................................226

4.3ControlofMultiplexedFunctions.......................................................................226

4.4SafetyFeatures...............................................................................................230

4.5IOMMRegisters...............................................................................................231

4.6SignalMultiplexingandControl.........................................................................240

225

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

4.1Overview

ThischapterdescribestheoverallfeaturesofthemodulewhichcontrolstheI/Omultiplexingonthe

device.ThemappingofcontrolregisterstomultiplexingoptionsisspecifiedinSection4.6.

4.2MainFeaturesofI/OMultiplexingModule(IOMM)

TheIOMMcontainsmemory-mappedregisters(MMR)thatcontroldevice-specificmultiplexedfunctions.

ThesafetyanddiagnosticfeaturesoftheIOMMare:

•KickermechanismtoprotecttheMMRsfromaccidentalwrites

•Master-idcheckertoonlyallowtheCPUtowritetotheMMRs

•Errorindicationforaccessviolations

4.3ControlofMultiplexedFunctions

Severalfunctionsaremultiplexedonthismicrocontroller.Thefollowingsectionsdescribethemultiplexing

schemeanditsimplementation.

4.3.1ControlofMultiplexedOutputs

Thesignalmultiplexingcontrolledbyeachmemory-mappedcontrolregister(PINMMRn)isdescribedin

Table4-16.EachbyteinthePINMMRscontrolthefunctionalityoutputonasingleterminal.Considerthe

followingexampleforthePINMMR10controlregister.

Figure4-1.PINMMR10ControlRegister,Address=FFFFEB38h

31

26

25

24

Reserved

EMIFDATA[2]

ETMDATA[18]

RWP-0

R/WP-0

R/WP-1

23

18

17

16

Reserved

RTPDATA[15]

EMIFnCS[0]

RWP-0

R/WP-0

R/WP-1

15

10

9

8

Reserved

EMIFDATA[3]

ETMDATA[19]

RWP-0

R/WP-0

R/WP-1

7

3

2

1

0

Reserved

RMII_RX_ER

MII_RX_ER

AD1EVT

RWP-0

R/WP-0

R/WP-0

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

•ConsiderthemultiplexingcontrolledbyPINMMR10[15–8].Thesebitscontrolthemultiplexingbetween

theETMDATA[19]andEMIF_DATA[3]ontheballN15ofthe337BGApackageforthisdevice.The

defaultfunctionontheN15ballisETMDATA[19].Thisisindicatedbybit8ofthePINMMR10register

beingset.

•IftheapplicationwantstouseN15asanEMIF_DATA[3]signal,thenbit8ofPINMMR10mustbe

clearedandbit9mustbeset.

•Eachfeatureoftheoutputfunctionisdeterminedbythefunctionselectedtobeoutputonaterminal.

Forexample,theballN15onthe337BGApackageisdrivenbyanoutputbufferwithan8mAdrive

strengthandwhichsupportstheadaptiveimpedancecontrolmodeforreducedelectromagneticemissions.

Thisoutputbufferhasthefollowingsignals:A(signaltobeoutput),GZ(outputenable),SBEN(Standard

BufferEnable)andLPM(LowPowerMode).Eachofthesesignalsisanoutputofamultiplexorwhich

allowstheselectedfunctiontocontrolallavailablefeaturesoftheoutputbuffer.

226

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SBENGZAY

PINMMR10[8,9]

not(GPREG1.7)forETMnot(GPREG1.6)forEMIFTIEDZEROEMIF_DATA[3]_nENETM_DATA[19]EMIF_DATA[3]8mAlow-EMIoutputbufferpad



www.ti.comControlofMultiplexedFunctions

•ThePINMMRcontrolregistersareusedtoimplementaone-hotencodingschemeforselectingthe

multiplexedfunction.

–Forexample,fortheN15ballonthe337BGApackageforthisdeviceatleastoneoutofbit8orbit

9mustbeset.

–Iftheapplicationclearsbothbits8and9,thenthedefaultfunctionwillbeselectedforoutputon

N15.

–Iftheapplicationsetsbothbits8and9,thenthedefaultfunctionwillbeselectedforoutputonN15.

–Iftheapplicationsetsoneoremorereservedbit(s)withinthebyte15–8,thenthedefaultfunction

willbeselectedforoutputonN15.

Figure4-2showsthemultiplexingbetweentheoutputfunctionsfortheN15ball.Thisterminalusesan

8mAlow-EMIoutputbuffer.

Figure4-2.OutputMultiplexingExample

NotesonFigure4-2:

•ETM_DATA[19]isanoutput-onlysignal.ThereforetheGZistiedtozerowhentheETMfunctionalityis

selectedtobeoutputonthispad.

•Thelow-EMImodecontrolsfortheEMIFandETMsignalsareindependent.Thesecontrolsare

multiplexedandchosenasperthefunctionbeingoutputonthispad.

4.3.2ControlofMultiplexedInputs

Themicrocontrollersareavailableintwopackageoptions–337-ballgridarray(BGA)and144-pinQuad

FlatPack(QFP).Inputmultiplexingisnotrequiredforthe337BGApackageexceptforGIOB[2]andallthe

SPI4signals.Forthe144QFPpackage,somesignalshaveamultiplexorimplementedontheirinputside.

Theselectionbetweenthetwoinputpathsisdonebyacombinationoftwocontrolregisters.These

registersaredescribedinTable4-1.

Table4-1.InputMultiplexingon144QFPParts

144QFPDedicated

144QFPMultiplexed

Signal

ControlRegisterBitA

ControlRegisterBitB

InputPin#

InputPin#

SPI4SIMO

–

30

PINMMR5[9]

PINMMR23[16]

SPI4SOMI

–

31

PINMMR5[17]

PINMMR23[24]

SPI4CLK

–

25

PINMMR5[1]

PINMMR23[8]

SPI4NENA

–

23

PINMMR4[17]

PINMMR24[0]

227

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlofMultiplexedFunctionswww.ti.com

Table4-1.InputMultiplexingon144QFPParts(continued)

144QFPDedicated

144QFPMultiplexed

Signal

ControlRegisterBitA

ControlRegisterBitB

InputPin#

InputPin#

SPI4NCS[0]

–

24

PINMMR4[25]

PINMMR24[8]

N2HET1[17]

–

130

PINMMR20[17]

PINMMR24[16]

N2HET1[19]

–

40

PINMMR8[9]

PINMMR24[24]

N2HET1[23]

–

96

PINMMR12[17]

PINMMR25[8]

N2HET1[25]

–

37

PINMMR7[9]

PINMMR25[16]

N2HET1[27]

–

4

PINMMR0[26]

PINMMR25[24]

N2HET1[29]

–

3

PINMMR0[18]

PINMMR26[0]

N2HET1[31]

–

54

PINMMR9[10]

PINMMR26[8]

GIOB[2]

142

55

PINMMR29[16]

PINMMR29[16]

Forsignalswitha“–”inthecolumnfordedicatedinputpin#,thesesignalsdohaveadedicatedpadon

thedie.Thedefaultinputforthesesignalscomesfromthededicatedpad.Tobeabletodriveintheinput

fromthemultiplexedpinsonthe144QFPpackage,theIOMMregistersneedtobeconfigured.

Table4-2.InputMultiplexingon337BGAParts

337BGA

337BGADedicated

Signal

MultiplexedInput

ControlRegisterBitA

ControlRegisterBitB

InputBall#

Ball#

SPI4SIMO

–

W5

PINMMR5[9]

PINMMR23[16]

SPI4SOMI

–

V6

PINMMR5[17]

PINMMR23[24]

SPI4CLK

–

K18

PINMMR5[1]

PINMMR23[8]

SPI4NENA

–

V2

PINMMR4[17]

PINMMR24[0]

SPI4NCS[0]

–

U1

PINMMR4[25]

PINMMR24[8]

GIOB[2]

F2

V10

PINMMR29[16]

PINMMR29[16]

Table4-1andTable4-2showtwocontrolsforselectingtheinputpathforeachofthesesignals:AandB.

Aindicatesthecontrolregisterbittobesettoenablethecorrespondingsignaltobeoutputonthe

multiplexedpin.

Bisanothercontrolregisterbitthatisusedtoselectbetweenthededicatedinputterminalandthe

multiplexedpin.

•Theinputtoamodulecomesfromthemultiplexedpinwhenthecondition[Aandnot(B)]=TRUE.

•Theinputtoamodulecomesfromthededicatedpadwhenthecondition[not(A)or(AandB)]=

TRUE.

NOTE:Inputsarebroadcasttoallmultiplexedfunctions

Theinputsignalsarebroadcasttoallmoduleshookeduptoaterminal.Theapplicationmust

ensurethatmodulesthatarenotbeingusedintheapplicationdonotreacttoachangeon

theirinputfunctions.e.g.aGIOsignaltogglecantriggeraninterruptrequest,whenthe

applicationactuallyisusingthefunctionmultiplexedwiththisGIOsignal.

228

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




dedicatedSPI4CLKpadmultiplexedSPI4CLKpad

tootherinputfunctionsmultiplexedwithSPI4CLK

SPI4CLK_INSPI4

CombinationofPINMMR5[1]andPINMMR23[8]



www.ti.comControlofMultiplexedFunctions

Figure4-3.InputMultiplexingExample

4.3.3ControlofSpecialMultiplexedOptions

PINMMR29andPINMMR30registersareusedtocontrolsomespecificdevicefunctions.

•EMIF_CLKControl:

PINMMR29[8]issetbydefault.ThisisusedtoblocktheEMIF_CLKfrombeingoutputfromthe

microcontroller.IftheEMIFisusedtoconnecttoanexternalSDRAMmodule,thentheapplicationmust

enabletheEMIF_CLKoutputbyclearingthePINMMR29[8]bit.

•ControlforotherEMIFSignals:

Bit31ofthesystemmodulecontrolregisterGPREG1ataddress0xFFFFFFA0isusedtogateoffthe

EMIFmoduleoutputs:EMIF_ADDR[0],EMIF_ADDR[1],EMIF_ADDR[6],EMIF_ADDR[7],EMIF_ADDR[8],

EMIF_BA[1],EMIF_nCS[0],EMIF_nCS[3].These8signalsaremultiplexedwithNHET2signals.By

default,theseterminalsaretri-statedandpulleddown.AnyapplicationthatrequirestheEMIFfunctionality

mustsetGPREG1[31].Thisallowsthese8EMIFmoduleoutputstobedrivenontotheassignedballs.

•EthernetControllerModeControl:

PINMMR29[24]issetbydefault.ThisbitisusedtoenabletheReducedMediaIndependentInterfaceof

theEthernetcontroller.IftheapplicationdesirestousetheMediaIndependentInterfaceoftheEthernet

controller,thenthePINMMR29[24]mustbecleared.

•ADCTriggerControl:

ThemicrocontrollerscontaintwoAnalog-to-DigitalConverter(ADC)modules.TheADCconversionscan

bestartedusingarisingorfallingorbothedgesasthetriggerevent.BoththeADCmodulessupportupto

eighteventtriggerinputs.Therearetwosetsofthese8inputsforeachADC.Thefirstsetisthedefault

setandisselectedbysettingthePINMMR30[0].ThePINMMR30[0]isalsosetbydefault.Thealternate

setof8eventtriggeroptionsareselectedbyclearingPINMMR30[0]bit.

•GeneratingInterruptwhenfaultisindicatedtoN2HET2

TheN2HETmodulesonthismicrocontrollersupportamechanismtorespondtofaultsindicatedontheir

PIN_nDISinputs.ThisinputfortheN2HET2moduleisconnectedtotheMibSPI3_nCS[0]/AD2EVT

terminal.Whenthisterminalisdrivenlow,theN2HET2canbeconfiguredtotri-stateallPWMsoutputfrom

theN2HET2.ItisveryusefultobeabletogenerateaninterrupttothehostCPUwhenthishappens.

Therefore,theMibSPI3_nCS[0]/AD2EVTsignalisalsoavailabletobeconnectedtotheGIOB[2]signal.

ThisdevicealsocontainsadedicatedterminalfortheGIOB[2]signal.Thisnecessitatesamultiplexoron

theinputconnectiontotheGIOB[2].Thismultiplexor'sselectioniscontrolledbyPINMMR29[16].When

PINMMR29[16]iscleared(0,default),theconnectiontotheGIOB[2]comesfromthededicatedterminal.

WhenPINMMR29[16]isset,theconnectiontotheGIOB[2]comesfromtheMibSPI3_nCS[0]/AD2EVT

terminal.EnablingthisconnectiontotheGIOB[2]allowstheapplicationtogenerateaGIOinterrupttothe

hostCPUwhentheexternalfaultmonitorcircuitrydrivestheMibSPI3_nCS[0]/AD2EVTterminallowto

indicateafaultconditiontotheN2HET2module.

229

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SafetyFeatureswww.ti.com

4.4SafetyFeatures

TheIOMMsupportscertainsafetyfunctionsthataredesignedtopreventunintentionalchangestotheI/O

multiplexingconfiguration.Thesearedescribedinthefollowingsections.

4.4.1LockingMechanismforMemory-MappedRegisters

TheIOMMcontainsamechanismtopreventanyspuriouswritesfromchanginganyoftheIOMMcontrol

registervalues.ThecontrolregistersotherthantheKICK0andKICK1registersarelockedbydefaultand

afteranysystemreset.NoneoftheIOMMcontrolregisterscanbewrittenunderthiscondition.The

applicationcanreadanyoftheIOMMregistersregardlessofthestateofthelockingmechanism.

•EnablingWriteAccesstotheIOMMRegisters

ToenablewriteaccesstotheIOMMregistersotherthanKick0andKick1registers,theCPUmustwrite

0x83e70b13tothekick0registerfollowedbyawriteof0x95a4f1e0tothekick1register.

•DisablingWriteAccesstotheIOMMRegisters

ItisrecommendedtodisablewriteaccesstotheIOMMregistersoncetheI/Omultiplexingconfigurationis

completed.Thiscanbedoneby:

•writinganyotherdatavaluetoeitherofthekickregisters,or

•restartingtheunlocksequencebywriting0x83e70b13tothekick0register,andnotwritingthe

correctkeytothekick1register

NOTE:NoErrorOnWritetoLockedIOMMRegisters

ThereisnoerrorresponseonanywriteaccessestotheIOMMregisterswhenwriteaccess

isdisabled.NoneoftheIOMMregisterschangestateduetothiswrite.

4.4.2MasterIDCheck

EachbustransactiontotheIOMMhasanassociatedmasterIDvalue.MasterIDvaluesareuniqueto

eachbusmaster.TheIOMMonlyallowswriteaccessedbytheCPUbusmaster.Writesbyotherbus

masterswillgenerateabuserrorresponsetothecorrespondingbusmaster,andthestatesoftheIOMM

registersarenotaffected.

4.4.3ErrorConditions

TheIOMMgeneratesoneerrorsignalthatismappedtotheErrorSignalingModule’sGroup1,channel

37.Thiserrorsignalisgeneratedundereitherofthefollowingtwoconditions:

•AddressError–occurswhenthereisareadorawriteaccesstoanun-implementedmemorylocation

withintheIOMMregisterframe.

•ProtectionError–occurswhentheCPUwritestoanIOMMregisterwhilenotinaprivilegedmodeof

operation.

TheapplicationcanreadtheErrorRawStatusregister(Section4.5.5)todeterminetheactualcauseof

theerror.

230

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIOMMRegisters

4.5IOMMRegisters

Table4-3showsasummaryofthecontrolregistersintheIOMM.

Table4-3.IOMMRegisterSummary

Address

Acronym

RegisterDescription

Section

FFFFEA00h

REVISION_REG

RevisionRegister

Section4.5.1

FFFFEA20h

ENDIAN_REG

DeviceEndiannessRegister

Section4.5.2

FFFFEA38h

KICK_REG0

KickerRegister0

Section4.5.3

FFFFEA3Ch

KICK_REG1

KickerRegister1

Section4.5.4

FFFFEAE0h

ERR_RAW_STATUS_REG

ErrorRawStatus/SetRegister

Section4.5.5

FFFFEAE4h

ERR_ENABLED_STATUS_REG

ErrorEnabledStatus/ClearRegister

Section4.5.6

FFFFEAE8h

ERR_ENABLE_REG

ErrorSignalingEnableRegister

Section4.5.7

FFFFEAECh

ERR_ENABLE_CLR_REG

ErrorSignalingEnableClearRegister

Section4.5.8

FFFFEAF4h

FAULT_ADDRESS_REG

FaultAddressRegister

Section4.5.9

FFFFEAF8h

FAULT_STATUS_REG

FaultStatusRegister

Section4.5.10

FFFFEAFCh

FAULT_CLEAR_REG

FaultClearRegister

Section4.5.11

FFFFEB10h-

PINMMRnn

PinMultiplexingControlRegisters

Section4.5.12

FFFFEB88h

4.5.1REVISION_REG:RevisionRegister

Thisisaread-onlyregisterthatprovidestherevisioninformationabouttheI/OMultiplexingModule

(IOMM).

Figure4-4.REVISION_REG:RevisionRegister(Address=FFFFEA00h)

31

30

29

28

27

16

REVSCHEME

Reserved

REVMODULE

R-01

R-0

R-E84h

15

11

10

8

7

6

5

0

REVRTL

REVMAJOR

REVCUSTOM

REVMINOR

R-0

R-001

R-0

R-2h

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table4-4.RevisionRegisterFieldDescriptions

Bit

Field

Value

Description

31-30

REVSCHEME

01

RevisionScheme

29-28

Reserved

0

Readsreturnzeros,writeshavenoeffect.

27-16

REVMODULE

E84h

ModuleId

15-11

REVRTL

0

RTLRevision

10-8

REVMAJOR

001

MajorRevision

7-6

REVCUSTOM

0

CustomRevision

5-0

REVMINOR

2h

MinorRevision

231

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






IOMMRegisterswww.ti.com

4.5.2ENDIAN_REG:DeviceEndiannessRegister

Thisisaread-onlyregisterthatreflectsthestateofthedeviceendianness.

Figure4-5.ENDIAN_REG:DeviceEndiannessRegister(Address=FFFFEA20h)

31

16

Reserved

R-0

15

1

0

Reserved

ENDIAN

R-0

R-D

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;R-D=Valuereadisdeterminedbyexternalconfiguration

Table4-5.DeviceEndiannessRegisterFieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ENDIAN

Deviceendianness

0

Deviceisconfiguredinlittleendianmode

1

Deviceisconfiguredinbigendianmode

232

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIOMMRegisters

4.5.3KICK_REG0:KickerRegister0

ThisregistermustbewrittenbytheCPUinaprivilegedmodeofoperation.Itformsthefirstpartofthe

unlocksequenceforbeingabletoupdatetheI/Omultiplexingcontrolregisters(PINMMRnn).

Figure4-6.KICK_REG0:KickerRegister0(Address=FFFFEA38h)

31

16

KICK0

R/WP-0

15

0

KICK0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-6.KickerRegister0FieldDescriptions

Bit

Field

Value

Description

31-0

KICK0

0

Kicker0Register.Thevalue83E70B13hmustbewrittentoKICK0aspartoftheprocessto

unlocktheCPUwriteaccesstothePINMMRnnregisters.

4.5.4KICK_REG1:KickerRegister1

ThisregistermustbewrittenbytheCPUinaprivilegedmodeofoperation.Itformsthesecondpartofthe

unlocksequenceforbeingabletoupdatetheI/Omultiplexingcontrolregisters(PINMMRnn).

Figure4-7.KICK_REG1:KickerRegister1(Address=FFFFEA3Ch)

31

16

KICK1

R/WP-0

15

0

KICK1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-7.KickerRegister1FieldDescriptions

Bit

Field

Value

Description

31-0

KICK1

0

Kicker1Register.Thevalue95A4F1E0hmustbewrittentotheKICK1aspartoftheprocessto

unlocktheCPUwriteaccesstothePINMMRnnregisters.

233

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






IOMMRegisterswww.ti.com

4.5.5ERR_RAW_STATUS_REG:ErrorRawStatus/SetRegister

Thisregistershowsthestatusesoftheerrorconditions(beforeenabling)andallowssettingthestatus.

TheIOMMmoduleerrorsignalisconnectedtothedevice'sErrorSignalingModule(ESM)group1channel

37.TheapplicationcanchoosetogenerateaninterruptwheneverthisESMchannelflaggetsset.This

interruptserviceroutinecanthenreadthisErrorRawStatusRegistertodeterminetheactualcauseofthe

errorcondition.

TheErrorRawStatusregisterisalsowritablebytheapplicationinordertotesttheESMsignalingand

interruptgenerationmechanism.

Figure4-8.ERR_RAW_STATUS_REG:ErrorRawStatus/SetRegister(Address=FFFFEAE0h)

31

8

Reserved

R-0

7

2

1

0

Reserved

ADDR_ERR

PROT_ERR

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-8.ErrorRawStatus/SetRegisterFieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturnszeros,writeshavenoeffect.

1

ADDR_ERR

AddressingErrorStatusandErrorSignalingEnable.AnAddressingErroroccurswhenan

unimplementedlocationinsidetheIOMMregisterframeisaccessed.

0

Read:AddressingErrorhasnotoccurred.

Write:Writing0hasnoeffect.

1

Read:AddressingErrorhasbeendetected.

Write:AddressingErrorstatusisset.

0

PROT_ERR

ProtectionErrorStatusandErrorSignalingEnable.AProtectionErroroccurswhenanycontrol

registerinsidetheIOMMiswrittenintheCPU'susermodeofoperation.

0

Read:ProtectionErrorhasnotoccurred.

Write:Writing0hasnoeffect.

1

Read:ProtectionErrorhasbeendetected.

Write:ProtectionErrorstatusisset.

234

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIOMMRegisters

4.5.6ERR_ENABLED_STATUS_REG:ErrorEnabledStatus/ClearRegister

Thisregistershowstheerrorsignalenabledstatusandallowsclearingoftheerrorstatus.

Figure4-9.ERR_ENABLED_STATUS_REG:ErrorEnabledStatus/ClearRegister(Address=

FFFFEAE4h)

31

8

Reserved

R-0

7

2

1

0

Reserved

ENABLED_ADDR_ERR

ENABLED_PROT_ERR

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-9.ErrorSignalingEnabledStatus/ClearRegisterFieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturnszeros,writeshavenoeffect.

1

ENABLED_ADDR_ERR

AddressingErrorSignalingEnableStatusandStatusClear

0

Read:AddressingErrorSignalingisdisabled.

Write:Writing0hasnoeffect.

1

Read:AddressingErrorSignalingisenabled.

Write:AddressingErrorstatusiscleared.

0

ENABLED_PROT_ERR

ProtectionErrorSignalingEnableStatusandStatusClear

0

Read:ProtectionErrorSignalingisdisabled.

Write:Writing0hasnoeffect.

1

Read:ProtectionErrorSignalingisenabled.

Write:ProtectionErrorstatusiscleared.

235

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






IOMMRegisterswww.ti.com

4.5.7ERR_ENABLE_REG:ErrorSignalingEnableRegister

Thisregistershowstheinterruptenablestatusandallowsenablingoftheinterrupts.

Figure4-10.ERR_ENABLE_REG:ErrorSignalingEnableRegister(Address=FFFFEAE8h)

31

8

Reserved

R-0

7

2

1

0

Reserved

ADDR_ERR_EN

PROT_ERR_EN

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-10.ErrorEnableRegisterFieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturnszeros,writeshavenoeffect.

1

ADDR_ERR_EN

AddressingErrorSignalingEnable

0

Read:AddressingErrorSignalingisdisabled.

Write:Writing0hasnoeffect.

1

Read:AddressingErrorSignalingisenabled.

Write:AddressingErrorSignalingisenabled.

0

PROT_ERR_EN

ProtectionErrorSignalingEnable

0

Read:ProtectionErrorSignalingisdisabled.

Write:Writing0hasnoeffect.

1

Read:ProtectionErrorSignalingisenabled.

Write:ProtectionErrorSignalingisenabled.

236

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIOMMRegisters

4.5.8ERR_ENABLE_CLR_REG:ErrorSignalingEnableClearRegister

Thisregistershowstheerrorsignalingenablestatusandallowsdisablingoftheerrorsignaling.

Figure4-11.ERR_ENABLE_CLR_REG:ErrorSignalingEnableClearRegister(Address=

FFFFEAECh)

31

8

Reserved

R-0

7

2

1

0

Reserved

ADDR_ERR_EN_CLR

PROT_ERR_EN_CLR

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-11.InterruptEnableClearRegisterFieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturnszeros,writeshavenoeffect.

1

ADDR_ERR_EN_CLR

AddressingErrorSignalingEnableClear

0

Read:AddressingErrorsignalingisdisabled.

Write:Writing0hasnoeffect.

1

Read:AddressingErrorsignalingisenabled.

Write:AddressingErrorsignalingisdisabled.

0

PROT_ERR_EN_CLR

ProtectionErrorSignalingEnableClear

0

Read:ProtectionErrorsignalingisdisabled.

Write:Writing0hasnoeffect.

1

Read:ProtectionErrorsignalingisenabled.

Write:ProtectionErrorsignalingisdisabled.

4.5.9FAULT_ADDRESS_REG:FaultAddressRegister

Thisregisterholdstheaddressofthefirstfaulttransfer.

Figure4-12.FAULT_ADDRESS_REG:FaultAddressRegister(Address=FFFFEAF4h)

31

16

FAULT_ADDR

R/WP-0

15

0

FAULT_ADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-12.FaultAddressRegisterFieldDescriptions

Bit

Field

Value

Description

31-0

FAULT_ADDR

0

FaultAddress.Thisfieldcapturesthefaultaddressincaseofanaddresserrorora

protectionerrorcondition.

237

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






IOMMRegisterswww.ti.com

4.5.10FAULT_STATUS_REG:FaultStatusRegister

Thisregisterholdsthestatusandattributesofthefirstfaulttransfer.

Figure4-13.FAULT_STATUS_REG:FaultStatusRegister(Address=FFFFEAF8h)

31

28

27

24

23

16

Reserved

FAULT_ID

FAULT_MSTID

R-0

R-0

R-0

15

13

12

9

8

7

6

5

0

Reserved

FAULT_PRIVID

Rsvd.

Rsvd.

Rsvd.

FAULT_TYPE

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table4-13.FaultStatusRegisterFieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readsreturnzeros,writeshavenoeffect.

27-24

FAULT_ID

FaultingTransactionID

23-16

FAULT_MSTID

IDofMasterthatinitiatedthefaultingtransaction

15-13

Reserved

0

Readsreturnzeros,writeshavenoeffect.

12-9

FAULT_PRIVID

FaultingPrivilegeID

8-6

Reserved

0

Readsreturnzeros,writeshavenoeffect.

5-0

FAULT_TYPE

Typeoffaultdetected

20h

Supervisorreadfault

8h

Supervisorwritefault

4h

Supervisorexecutefault

3h

Userreadfault

2h

Userwritefault

1h

Userexecutefault

0

Nofault

238

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIOMMRegisters

4.5.11FAULT_CLEAR_REG:FaultClearRegister

Thisregisterallowstheapplicationtoclearthecurrentfaultsothatanothercanbecapturedwhen1is

writtentothisregister.

Figure4-14.FAULT_CLEAR_REG:FaultClearRegister(Address=FFFFEAFCh)

31

16

Reserved

R-0

15

1

0

Reserved

FAULT_CLEAR

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-14.FAULT_CLEAR_REG:FaultClearRegisterFieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

FAULT_CLEAR

FaultClear

0

Read:CurrentvalueoftheFAULT_CLEARbitis0.

Write:Writing0hasnoeffect.

1

Read:CurrentvalueoftheFAULT_CLEARbitis1.

Write:Writinga1clearsthecurrentfault.

4.5.12PINMMRnn:PinMultiplexingControlRegisters

Theseregisterscontrolthemultiplexingofthefunctionalityavailableoneachpad.Thereare31such

registers–PINMMR0throughPINMMR31.Each8-bitfieldofaPINMMRregistercontrolsthefunctionality

ofasingleball/pin.ThemappingbetweenthePINMMRxcontrolregistersandthefunctionalityselectedon

agiventerminalisdefinedinSection4.6.SomeofthePINMMRnnregistersarealsousedtocontrol

specialmultiplexedfunctionsonthedevice.ThesearedescribedinSection4.3.3.

Figure4-15.PINMMRnn:PinMultiplexingControlRegisters(Address=FFFFEB10h-FFFFEB88h)

31

24

23

16

PINMMRx[31–24]

PINMMRx[23–16]

R/WP-1

R/WP-1

15

8

7

0

PINMMRx[15–8]

PINMMRx[7–0]

R/WP-1

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table4-15.PinMultiplexingControlRegistersFieldDescriptions

Bit

Field

Value

Description

31-24

PINMMRx[31–24]

1h

Eachofthesebyte-fieldscontrolthefunctionalityonagivenball/pin.Pleasereferto

Table4-16foralistofmultiplexedsignalssortedbythecontrolregisters.

23-16

PINMMRx[23–16]

1h

15-8

PINMMRx[15–8]

1h

7-0

PINMMRx[7–0]

1h

239

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SignalMultiplexingandControlwww.ti.com

4.6SignalMultiplexingandControl

Table4-16showsthemultiplexingimplementedonthismicrocontrolleraswellasthememory-mappedregisters(PINMMRx)thatcontrolthese

multiplexors.Theseareall32-bitregistersandcanbeaddressedusingbyte,half-word,orwordaccesses.Anybitnotshowninthetableis

reservedandwillreadaszero.

Table4-16.MultiplexingandControl

Alternate

Alternate

ControlRegisterAddress

DefaultFunction

SelectionBit

AlternateFunction1

SelectionBit

Function2

SelectionBit

AlternateFunction3

SelectionBit

Function4

SelectionBit

GIOB[3]

PINMMR0[0]

RESERVED

PINMMR0[1]

RESERVED

PINMMR0[2]

RESERVED

PINMMR0[3]

RESERVED

PINMMR0[4]

GIOA[0]

PINMMR0[8]

RESERVED

PINMMR0[9]

RESERVED

PINMMR0[10]

RESERVED

PINMMR0[11]

RESERVED

PINMMR0[12]

0xFFFFEB10

MIBSPI3NCS[3]

PINMMR0[16]

I2C_SCL

PINMMR0[17]

N2HET1[29]

PINMMR0[18]

RESERVED

PINMMR0[19]

RESERVED

PINMMR0[20]

MIBSPI3NCS[2]

PINMMR0[24]

I2C_SDA

PINMMR0[25]

N2HET1[27]

PINMMR0[26]

RESERVED

PINMMR0[27]

RESERVED

PINMMR0[28]

GIOA[1]

PINMMR1[0]

RESERVED

PINMMR1[1]

RESERVED

PINMMR1[2]

RESERVED

PINMMR1[3]

RESERVED

PINMMR1[4]

N2HET1[11]

PINMMR1[8]

MIBSPI3NCS[4]

PINMMR1[9]

N2HET2[18]

PINMMR1[10]

RESERVED

PINMMR1[11]

RESERVED

PINMMR1[12]

0xFFFFEB14

ETMDATA[20]

PINMMR1[16]

EMIF_DATA[4]

PINMMR1[17]

RESERVED

PINMMR1[18]

RESERVED

PINMMR1[19]

RESERVED

PINMMR1[20]

ETMDATA[21]

PINMMR1[24]

EMIF_DATA[5]

PINMMR1[25]

RESERVED

PINMMR1[26]

RESERVED

PINMMR1[27]

RESERVED

PINMMR1[28]

GIOA[2]

PINMMR2[0]

RESERVED

PINMMR2[1]

RESERVED

PINMMR2[2]

N2HET2[0]

PINMMR2[3]

RESERVED

PINMMR2[4]

ETMDATA[22]

PINMMR2[8]

EMIF_DATA[6]

PINMMR2[9]

RESERVED

PINMMR2[10]

RESERVED

PINMMR2[11]

RESERVED

PINMMR2[12]

0xFFFFEB18

GIOA[3]

PINMMR2[16]

N2HET2[2]

PINMMR2[17]

RESERVED

PINMMR2[18]

RESERVED

PINMMR2[19]

RESERVED

PINMMR2[20]

GIOA[5]

PINMMR2[24]

EXTCLKIN

PINMMR2[25]

RESERVED

PINMMR2[26]

RESERVED

PINMMR2[27]

RESERVED

PINMMR2[28]

ETMDATA[23]

PINMMR3[0]

EMIF_DATA[7]

PINMMR3[1]

RESERVED

PINMMR3[2]

RESERVED

PINMMR3[3]

RESERVED

PINMMR3[4]

N2HET1[22]

PINMMR3[8]

RESERVED

PINMMR3[9]

RESERVED

PINMMR3[10]

RESERVED

PINMMR3[11]

RESERVED

PINMMR3[12]

0xFFFFEB1C

GIOA[6]

PINMMR3[16]

N2HET2[4]

PINMMR3[17]

RESERVED

PINMMR3[18]

RESERVED

PINMMR3[19]

RESERVED

PINMMR3[20]

ETMDATA[24]

PINMMR3[24]

EMIF_DATA[8]

PINMMR3[25]

RESERVED

PINMMR3[26]

RESERVED

PINMMR3[27]

RESERVED

PINMMR3[28]

GIOA[7]

PINMMR4[0]

N2HET2[6]

PINMMR4[1]

RESERVED

PINMMR4[2]

RESERVED

PINMMR4[3]

RESERVED

PINMMR4[4]

ETMDATA[25]

PINMMR4[8]

EMIF_DATA[9]

PINMMR4[9]

RESERVED

PINMMR4[10]

RESERVED

PINMMR4[11]

RESERVED

PINMMR4[12]

0xFFFFEB20

N2HET1[01]

PINMMR4[16]

SPI4NENA

PINMMR4[17]

RESERVED

PINMMR4[18]

RESERVED

PINMMR4[19]

N2HET2[8]

PINMMR4[20]

N2HET1[03]

PINMMR4[24]

SPI4NCS[0]

PINMMR4[25]

RESERVED

PINMMR4[26]

RESERVED

PINMMR4[27]

N2HET2[10]

PINMMR4[28]

N2HET1[0]

PINMMR5[0]

SPI4CLK

PINMMR5[1]

RESERVED

PINMMR5[2]

RESERVED

PINMMR5[3]

RESERVED

PINMMR5[4]

N2HET1[02]

PINMMR5[8]

SPI4SIMO

PINMMR5[9]

RESERVED

PINMMR5[10]

RESERVED

PINMMR5[11]

RESERVED

PINMMR5[12]

0xFFFFEB24

N2HET1[05]

PINMMR5[16]

SPI4SOMI

PINMMR5[17]

N2HET2[12]

PINMMR5[18]

RESERVED

PINMMR5[19]

RESERVED

PINMMR5[20]

ETMDATA[26]

PINMMR5[24]

EMIF_DATA[10]

PINMMR5[25]

RESERVED

PINMMR5[26]

RESERVED

PINMMR5[27]

RESERVED

PINMMR5[28]

N2HET1[07]

PINMMR6[0]

RESERVED

PINMMR6[1]

RESERVED

PINMMR6[2]

N2HET2[14]

PINMMR6[3]

RESERVED

PINMMR6[4]

ETMDATA[27]

PINMMR6[8]

EMIF_DATA[11]

PINMMR6[9]

RESERVED

PINMMR6[10]

RESERVED

PINMMR6[11]

RESERVED

PINMMR6[12]

0xFFFFEB28

N2HET1[09]

PINMMR6[16]

N2HET2[16]

PINMMR6[17]

RESERVED

PINMMR6[18]

RESERVED

PINMMR6[19]

RESERVED

PINMMR6[20]

ETMDATA[28]

PINMMR6[24]

EMIF_DATA[12]

PINMMR6[25]

RESERVED

PINMMR6[26]

RESERVED

PINMMR6[27]

RESERVED

PINMMR6[28]

ETMDATA[29]

PINMMR7[0]

EMIF_DATA[13]

PINMMR7[1]

RESERVED

PINMMR7[2]

RESERVED

PINMMR7[3]

RESERVED

PINMMR7[4]

MIBSPI3NCS[1]

PINMMR7[8]

N2HET1[25]

PINMMR7[9]

MDCLK

PINMMR7[10]

RESERVED

PINMMR7[11]

RESERVED

PINMMR7[12]

0xFFFFEB2C

N2HET1[06]

PINMMR7[16]

SCIRX

PINMMR7[17]

RESERVED

PINMMR7[18]

RESERVED

PINMMR7[19]

RESERVED

PINMMR7[20]

ETMDATA[30]

PINMMR7[24]

EMIF_DATA[14]

PINMMR7[25]

RESERVED

PINMMR7[26]

RESERVED

PINMMR7[27]

RESERVED

PINMMR7[28]

240

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSignalMultiplexingandControl

Table4-16.MultiplexingandControl(continued)

Alternate

Alternate

ControlRegisterAddress

DefaultFunction

SelectionBit

AlternateFunction1

SelectionBit

Function2

SelectionBit

AlternateFunction3

SelectionBit

Function4

SelectionBit

N2HET1[13]

PINMMR8[0]

SCITX

PINMMR8[1]

RESERVED

PINMMR8[2]

RESERVED

PINMMR8[3]

RESERVED

PINMMR8[4]

MIBSPI1NCS[2]

PINMMR8[8]

N2HET1[19]

PINMMR8[9]

MDIO

PINMMR8[10]

RESERVED

PINMMR8[11]

RESERVED

PINMMR8[12]

0xFFFFEB30

N2HET1[15]

PINMMR8[16]

MIBSPI1NCS[4]

PINMMR8[17]

RESERVED

PINMMR8[18]

RESERVED

PINMMR8[19]

RESERVED

PINMMR8[20]

ETMDATA[31]

PINMMR8[24]

EMIF_DATA[15]

PINMMR8[25]

RESERVED

PINMMR8[26]

RESERVED

PINMMR8[27]

RESERVED

PINMMR8[28]

ETMTRACECLKIN

PINMMR9[0]

EXTCLKIN2

PINMMR9[1]

RESERVED

PINMMR9[2]

RESERVED

PINMMR9[3]

RESERVED

PINMMR9[4]

MIBSPI3NENA

PINMMR9[8]

MIBSPI3NCS[5]

PINMMR9[9]

N2HET1[31]

PINMMR9[10]

RESERVED

PINMMR9[11]

RESERVED

PINMMR9[12]

0xFFFFEB34

MIBSPI3NCS[0]

PINMMR9[16]

AD2EVT

PINMMR9[17]

GIOB[2]

PINMMR29[16]

RESERVED

PINMMR9[19]

RESERVED

PINMMR9[20]

MIBSPI1NCS[3]

PINMMR9[24]

N2HET1[21]

PINMMR9[25]

RESERVED

PINMMR9[26]

RESERVED

PINMMR9[27]

RESERVED

PINMMR9[28]

AD1EVT

PINMMR10[0]

MII_RX_ER

PINMMR10[1]

RMII_RX_ER

PINMMR10[2]

RESERVED

PINMMR10[3]

RESERVED

PINMMR10[4]

ETMDATA[19]

PINMMR10[8]

EMIF_DATA[3]

PINMMR10[9]

RESERVED

PINMMR10[10]

RESERVED

PINMMR10[11]

RESERVED

PINMMR10[12]

0xFFFFEB38

EMIF_nCS[0]

PINMMR10[16]

RTP_DATA[15]

PINMMR10[17]

N2HET2[7]

PINMMR10[18]

RESERVED

PINMMR10[19]

RESERVED

PINMMR10[20]

ETMDATA[18]

PINMMR10[24]

EMIF_DATA[2]

PINMMR10[25]

RESERVED

PINMMR10[26]

RESERVED

PINMMR10[27]

RESERVED

PINMMR10[28]

EMIF_nCS[3]

PINMMR11[0]

RTP_DATA[14]

PINMMR11[1]

N2HET2[9]

PINMMR11[2]

RESERVED

PINMMR11[3]

RESERVED

PINMMR11[4]

EMIF_nCS[4]

PINMMR11[8]

RTP_DATA[07]

PINMMR11[9]

RESERVED

PINMMR11[10]

RESERVED

PINMMR11[11]

RESERVED

PINMMR11[12]

0xFFFFEB3C

ETMDATA[17]

PINMMR11[16]

EMIF_DATA[1]

PINMMR11[17]

RESERVED

PINMMR11[18]

RESERVED

PINMMR11[19]

RESERVED

PINMMR11[20]

N2HET1[24]

PINMMR11[24]

MIBSPI1NCS[5]

PINMMR11[25]

MII_RXD[0]

PINMMR11[26]

RMII_RXD[0]

PINMMR11[27]

RESERVED

PINMMR11[28]

N2HET1[26]

PINMMR12[0]

MII_RXD[1]

PINMMR12[1]

RMII_RXD[1]

PINMMR12[2]

RESERVED

PINMMR12[3]

RESERVED

PINMMR12[4]

ETMDATA[16]

PINMMR12[8]

EMIF_DATA[0]

PINMMR12[9]

RESERVED

PINMMR12[10]

RESERVED

PINMMR12[11]

RESERVED

PINMMR12[12]

0xFFFFEB40

MIBSPI1NENA

PINMMR12[16]

N2HET1[23]

PINMMR12[17]

MII_RXD[2]

PINMMR12[18]

RESERVED

PINMMR12[19]

RESERVED

PINMMR12[20]

MIBSPI5NENA

PINMMR12[24]

DMM_DATA[7]

PINMMR12[25]

MII_RXD[3]

PINMMR12[26]

RESERVED

PINMMR12[27]

RESERVED

PINMMR12[28]

MIBSPI5SOMI[0]

PINMMR13[0]

DMM_DATA[12]

PINMMR13[1]

MII_TXD[0]

PINMMR13[2]

RMII_TXD[0]

PINMMR13[3]

RESERVED

PINMMR13[4]

MIBSPI5SIMO[0]

PINMMR13[8]

DMM_DATA[8]

PINMMR13[9]

MII_TXD[1]

PINMMR13[10]

RMII_TXD[1]

PINMMR13[11]

RESERVED

PINMMR13[12]

0xFFFFEB44

MIBSPI5CLK

PINMMR13[16]

DMM_DATA[4]

PINMMR13[17]

MII_TXEN

PINMMR13[18]

RMII_TXEN

PINMMR13[19]

RESERVED

PINMMR13[20]

MIBSPI1NCS[0]

PINMMR13[24]

MIBSPI1SOMI[1]

PINMMR13[25]

MII_TXD[2]

PINMMR13[26]

RESERVED

PINMMR13[27]

RESERVED

PINMMR13[28]

N2HET1[8]

PINMMR14[0]

MIBSPI1SIMO[1]

PINMMR14[1]

MII_TXD[3]

PINMMR14[2]

RESERVED

PINMMR14[3]

RESERVED

PINMMR14[4]

N2HET1[28]

PINMMR14[8]

MII_RXCLK

PINMMR14[9]

RMII_REFCLK

PINMMR14[10]

MII_RX_AVCLK4

PINMMR14[11]

RESERVED

PINMMR14[12]

0xFFFFEB48

EMIF_nWE

PINMMR14[16]

EMIF_RNW

PINMMR14[17]

RESERVED

PINMMR14[18]

RESERVED

PINMMR14[19]

RESERVED

PINMMR14[20]

EMIF_BA[1]

PINMMR14[24]

N2HET2[5]

PINMMR14[25]

RESERVED

PINMMR14[26]

RESERVED

PINMMR14[27]

RESERVED

PINMMR14[28]

EMIF_ADDR[21]

PINMMR15[0]

RTP_CLK

PINMMR15[1]

RESERVED

PINMMR15[2]

RESERVED

PINMMR15[3]

RESERVED

PINMMR15[4]

EMIF_ADDR[20]

PINMMR15[8]

RTP_nSYNC

PINMMR15[9]

RESERVED

PINMMR15[10]

RESERVED

PINMMR15[11]

RESERVED

PINMMR15[12]

0xFFFFEB4C

EMIF_ADDR[19]

PINMMR15[16]

RTP_nENA

PINMMR15[17]

RESERVED

PINMMR15[18]

RESERVED

PINMMR15[19]

RESERVED

PINMMR15[20]

EMIF_ADDR[18]

PINMMR15[24]

RTP_DATA[0]

PINMMR15[25]

RESERVED

PINMMR15[26]

RESERVED

PINMMR15[27]

RESERVED

PINMMR15[28]

ETMDATA[12]

PINMMR16[0]

EMIF_BA[0]

PINMMR16[1]

RESERVED

PINMMR16[2]

RESERVED

PINMMR16[3]

RESERVED

PINMMR16[4]

EMIF_ADDR[17]

PINMMR16[8]

RTP_DATA[01]

PINMMR16[9]

RESERVED

PINMMR16[10]

RESERVED

PINMMR16[11]

RESERVED

PINMMR16[12]

0xFFFFEB50

EMIF_ADDR[16]

PINMMR16[16]

RTP_DATA[02]

PINMMR16[17]

RESERVED

PINMMR16[18]

RESERVED

PINMMR16[19]

RESERVED

PINMMR16[20]

ETMDATA[13]

PINMMR16[24]

EMIF_nOE

PINMMR16[25]

RESERVED

PINMMR16[26]

RESERVED

PINMMR16[27]

RESERVED

PINMMR16[28]

241

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SignalMultiplexingandControlwww.ti.com

Table4-16.MultiplexingandControl(continued)

Alternate

Alternate

ControlRegisterAddress

DefaultFunction

SelectionBit

AlternateFunction1

SelectionBit

Function2

SelectionBit

AlternateFunction3

SelectionBit

Function4

SelectionBit

N2HET1[10]

PINMMR17[0]

MII_TX_CLK

PINMMR17[1]

RESERVED

PINMMR17[2]

MII_TX_AVCLK4

PINMMR17[3]

RESERVED

PINMMR17[4]

ETMDATA[14]

PINMMR17[8]

EMIF_nDQM[1]

PINMMR17[9]

RESERVED

PINMMR17[10]

RESERVED

PINMMR17[11]

RESERVED

PINMMR17[12]

0xFFFFEB54

N2HET1[12]

PINMMR17[16]

MII_CRS

PINMMR17[17]

RMII_CRS_DV

PINMMR17[18]

RESERVED

PINMMR17[19]

RESERVED

PINMMR17[20]

ETMDATA[8]

PINMMR17[24]

EMIF_ADDR[5]

PINMMR17[25]

RESERVED

PINMMR17[26]

RESERVED

PINMMR17[27]

RESERVED

PINMMR17[28]

EMIF_ADDR[15]

PINMMR18[0]

RTP_DATA[03]

PINMMR18[1]

RESERVED

PINMMR18[2]

RESERVED

PINMMR18[3]

RESERVED

PINMMR18[4]

N2HET1[14]

PINMMR18[8]

RESERVED

PINMMR18[9]

RESERVED

PINMMR18[10]

RESERVED

PINMMR18[11]

RESERVED

PINMMR18[12]

0xFFFFEB58

EMIF_ADDR[14]

PINMMR18[16]

RTP_DATA[04]

PINMMR18[17]

RESERVED

PINMMR18[18]

RESERVED

PINMMR18[19]

RESERVED

PINMMR18[20]

GIOB[0]

PINMMR18[24]

RESERVED

PINMMR18[25]

RESERVED

PINMMR18[26]

RESERVED

PINMMR18[27]

RESERVED

PINMMR18[28]

ETMDATA[09]

PINMMR19[0]

EMIF_ADDR[4]

PINMMR19[1]

RESERVED

PINMMR19[2]

RESERVED

PINMMR19[3]

RESERVED

PINMMR19[4]

N2HET1[30]

PINMMR19[8]

MII_RX_DV

PINMMR19[9]

RESERVED

PINMMR19[10]

RESERVED

PINMMR19[11]

RESERVED

PINMMR19[12]

0xFFFFEB5C

ETMDATA[15]

PINMMR19[16]

EMIF_nDQM[0]

PINMMR19[17]

RESERVED

PINMMR19[18]

RESERVED

PINMMR19[19]

RESERVED

PINMMR19[20]

ETMDATA[10]

PINMMR19[24]

EMIF_ADDR[3]

PINMMR19[25]

RESERVED

PINMMR19[26]

RESERVED

PINMMR19[27]

RESERVED

PINMMR19[28]

EMIF_ADDR[13]

PINMMR20[0]

RTP_DATA[05]

PINMMR20[1]

RESERVED

PINMMR20[2]

RESERVED

PINMMR20[3]

RESERVED

PINMMR20[4]

EMIF_ADDR[12]

PINMMR20[8]

RTP_DATA[06]

PINMMR20[9]

RESERVED

PINMMR20[10]

RESERVED

PINMMR20[11]

RESERVED

PINMMR20[12]

0xFFFFEB60

MIBSPI1NCS[1]

PINMMR20[16]

N2HET1[17]

PINMMR20[17]

MII_COL

PINMMR20[18]

RESERVED

PINMMR20[19]

RESERVED

PINMMR20[20]

EMIF_ADDR[11]

PINMMR20[24]

RTP_DATA[8]

PINMMR20[25]

RESERVED

PINMMR20[26]

RESERVED

PINMMR20[27]

RESERVED

PINMMR20[28]

EMIF_ADDR[1]

PINMMR21[0]

N2HET2[3]

PINMMR21[1]

RESERVED

PINMMR21[2]

RESERVED

PINMMR21[3]

RESERVED

PINMMR21[4]

GIOB[1]

PINMMR21[8]

RESERVED

PINMMR21[9]

RESERVED

PINMMR21[10]

RESERVED

PINMMR21[11]

RESERVED

PINMMR21[12]

0xFFFFEB64

EMIF_ADDR[10]

PINMMR21[16]

RTP_DATA[09]

PINMMR21[17]

RESERVED

PINMMR21[18]

RESERVED

PINMMR21[19]

RESERVED

PINMMR21[20]

EMIF_ADDR[9]

PINMMR21[24]

RTP_DATA[10]

PINMMR21[25]

RESERVED

PINMMR21[26]

RESERVED

PINMMR21[27]

RESERVED

PINMMR21[28]

EMIF_ADDR[0]

PINMMR22[0]

N2HET2[1]

PINMMR22[1]

RESERVED

PINMMR22[2]

RESERVED

PINMMR22[3]

RESERVED

PINMMR22[4]

EMIF_ADDR[7]

PINMMR22[8]

RTP_DATA[12]

PINMMR22[9]

N2HET2[13]

PINMMR22[10]

RESERVED

PINMMR22[11]

RESERVED

PINMMR22[12]

0xFFFFEB68

EMIF_ADDR[6]

PINMMR22[16]

RTP_DATA[13]

PINMMR22[17]

N2HET2[11]

PINMMR22[18]

RESERVED

PINMMR22[19]

RESERVED

PINMMR22[20]

ETMDATA[11]

PINMMR22[24]

EMIF_ADDR[2]

PINMMR22[25]

RESERVED

PINMMR22[26]

RESERVED

PINMMR22[27]

RESERVED

PINMMR22[28]

EMIF_ADDR[8]

PINMMR23[0]

RTP_DATA[11]

PINMMR23[1]

N2HET2[15]

PINMMR23[2]

RESERVED

PINMMR23[3]

RESERVED

PINMMR23[4]

SPI4CLK

PINMMR23[8]

RESERVED

PINMMR23[9]

RESERVED

PINMMR23[10]

RESERVED

PINMMR23[11]

RESERVED

PINMMR23[12]

0xFFFFEB6C

SPI4SIMO

PINMMR23[16]

RESERVED

PINMMR23[17]

RESERVED

PINMMR23[18]

RESERVED

PINMMR23[19]

RESERVED

PINMMR23[20]

SPI4SOMI

PINMMR23[24]

RESERVED

PINMMR23[25]

RESERVED

PINMMR23[26]

RESERVED

PINMMR23[27]

RESERVED

PINMMR23[28]

SPI4NENA

PINMMR24[0]

RESERVED

PINMMR24[1]

RESERVED

PINMMR24[2]

RESERVED

PINMMR24[3]

RESERVED

PINMMR24[4]

SPI4NCS[0]

PINMMR24[8]

RESERVED

PINMMR24[9]

RESERVED

PINMMR24[10]

RESERVED

PINMMR24[11]

RESERVED

PINMMR24[12]

0xFFFFEB70

N2HET1[17]

PINMMR24[16]

RESERVED

PINMMR24[17]

RESERVED

PINMMR24[18]

RESERVED

PINMMR24[19]

RESERVED

PINMMR24[20]

N2HET1[19]

PINMMR24[24]

RESERVED

PINMMR24[25]

RESERVED

PINMMR24[26]

RESERVED

PINMMR24[27]

RESERVED

PINMMR24[28]

N2HET1[21]

PINMMR25[0]

RESERVED

PINMMR25[1]

RESERVED

PINMMR25[2]

RESERVED

PINMMR25[3]

RESERVED

PINMMR25[4]

N2HET1[23]

PINMMR25[8]

RESERVED

PINMMR25[9]

RESERVED

PINMMR25[10]

RESERVED

PINMMR25[11]

RESERVED

PINMMR25[12]

0xFFFFEB74

N2HET1[25]

PINMMR25[16]

RESERVED

PINMMR25[17]

RESERVED

PINMMR25[18]

RESERVED

PINMMR25[19]

RESERVED

PINMMR25[20]

N2HET1[27]

PINMMR25[24]

RESERVED

PINMMR25[25]

RESERVED

PINMMR25[26]

RESERVED

PINMMR25[27]

RESERVED

PINMMR25[28]

242

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSignalMultiplexingandControl

Table4-16.MultiplexingandControl(continued)

Alternate

Alternate

ControlRegisterAddress

DefaultFunction

SelectionBit

AlternateFunction1

SelectionBit

Function2

SelectionBit

AlternateFunction3

SelectionBit

Function4

SelectionBit

N2HET1[29]

PINMMR26[0]

RESERVED

PINMMR26[1]

RESERVED

PINMMR26[2]

RESERVED

PINMMR26[3]

RESERVED

PINMMR26[4]

N2HET1[31]

PINMMR26[8]

RESERVED

PINMMR26[9]

RESERVED

PINMMR26[10]

RESERVED

PINMMR26[11]

RESERVED

PINMMR26[12]

0xFFFFEB78

MIBSPI5NCS[2]

PINMMR26[16]

DMM_DATA[2]

PINMMR26[17]

RESERVED

PINMMR26[18]

RESERVED

PINMMR26[19]

RESERVED

PINMMR26[20]

MIBSPI5NCS[3]

PINMMR26[24]

DMM_DATA[3]

PINMMR26[25]

RESERVED

PINMMR26[26]

RESERVED

PINMMR26[27]

RESERVED

PINMMR26[28]

MIBSPI5NCS[0]

PINMMR27[0]

DMM_DATA[5]

PINMMR27[1]

RESERVED

PINMMR27[2]

RESERVED

PINMMR27[3]

RESERVED

PINMMR27[4]

MIBSPI5NCS[1]

PINMMR27[8]

DMM_DATA[6]

PINMMR27[9]

RESERVED

PINMMR27[10]

RESERVED

PINMMR27[11]

RESERVED

PINMMR27[12]

0xFFFFEB7C

MIBSPI5SIMO[1]

PINMMR27[16]

DMM_DATA[9]

PINMMR27[17]

RESERVED

PINMMR27[18]

RESERVED

PINMMR27[19]

RESERVED

PINMMR27[20]

MIBSPI5SIMO[2]

PINMMR27[24]

DMM_DATA[10]

PINMMR27[25]

RESERVED

PINMMR27[26]

RESERVED

PINMMR27[27]

RESERVED

PINMMR27[28]

MIBSPI5SIMO[3]

PINMMR28[0]

DMM_DATA[11]

PINMMR28[1]

RESERVED

PINMMR28[2]

RESERVED

PINMMR28[3]

RESERVED

PINMMR28[4]

MIBSPI5SOMI[1]

PINMMR28[8]

DMM_DATA[13]

PINMMR28[9]

RESERVED

PINMMR28[10]

RESERVED

PINMMR28[11]

RESERVED

PINMMR28[12]

0xFFFFEB80

MIBSPI5SOMI[2]

PINMMR28[16]

DMM_DATA[14]

PINMMR28[17]

RESERVED

PINMMR28[18]

RESERVED

PINMMR28[19]

RESERVED

PINMMR28[20]

MIBSPI5SOMI[3]

PINMMR28[24]

DMM_DATA[15]

PINMMR28[25]

RESERVED

PINMMR28[26]

RESERVED

PINMMR28[27]

RESERVED

PINMMR28[28]

SPI2NENA

PINMMR29[0]

SPI2NCS[1]

PINMMR29[1]

RESERVED

PINMMR29[2]

RESERVED

PINMMR29[3]

RESERVED

PINMMR29[4]

EMIF_CLK_SEL

PINMMR29[8]

RESERVED

PINMMR29[9]

RESERVED

PINMMR29[10]

RESERVED

PINMMR29[11]

RESERVED

PINMMR29[12]

0xFFFFEB84

GIOB[2]

PINMMR29[16]

RESERVED

PINMMR29[17]

RESERVED

PINMMR29[18]

RESERVED

PINMMR29[19]

RESERVED

PINMMR29[20]

GMII_SEL

PINMMR29[24]

RESERVED

PINMMR29[25]

RESERVED

PINMMR29[26]

RESERVED

PINMMR29[27]

RESERVED

PINMMR29[28]

ADC_TRG1

PINMMR30[0]

ADC_TRG2

PINMMR30[1]

RESERVED

PINMMR30[2]

RESERVED

PINMMR30[3]

RESERVED

PINMMR30[4]

RESERVED

PINMMR30[8]

RESERVED

PINMMR30[9]

RESERVED

PINMMR30[10]

RESERVED

PINMMR30[11]

RESERVED

PINMMR30[12]

0xFFFFEB88

RESERVED

PINMMR30[16]

RESERVED

PINMMR30[17]

RESERVED

PINMMR30[18]

RESERVED

PINMMR30[19]

RESERVED

PINMMR30[20]

RESERVED

PINMMR30[24]

RESERVED

PINMMR30[25]

RESERVED

PINMMR30[26]

RESERVED

PINMMR30[27]

RESERVED

PINMMR30[28]

243

SPNU499B–November2012–RevisedAugust2013

I/OMultiplexingandControlModule(IOMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.com

244

I/OMultiplexingandControlModule(IOMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter5

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

TheFlashelectricallyerasableprogrammableread-onlymemorymoduleisatypeofnonvolatilememory

whichhasfastreadaccesstimesandisabletobereprogrammedinthefieldorintheapplication.This

chapterdescribestheF021Flashmodulecontroller(FMC).

Topic...........................................................................................................................Page

5.1Overview........................................................................................................246

5.2DefaultFlashConfiguration..............................................................................247

5.3SECDED.........................................................................................................248

5.4MemoryMap...................................................................................................252

5.5PowerOn,PowerOff,andResetConsiderations.................................................256

5.6EmulationandSIL3DiagnosticModes...............................................................256

5.7ControlRegisters............................................................................................261

245

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

5.1Overview

TheF021Flashisusedtoprovidenon-volatilememoryforinstructionexecutionordatastorage.The

Flashcanbeelectricallyprogrammedanderasedmanytimestoeasecodedevelopment.

Referthefollowingdocumentsforsupportinhowtoinitializeandusetheon-chipFlashanditsAPI:

•InitializationofHerculesARMCortex-R4FMicrocontrollers(literaturenumberSPNA106)

•F021(TexasInstruments65nmFlash)FlashAPIReferenceGuide(literaturenumberSPNU501)

5.1.1Features

•Read,programanderasewithasingle3.3Vsupplyvoltage

•Supportserrordetectionandcorrection

–SingleErrorCorrectionandDoubleErrorDetection(SECDED)

–ErrorCorrectionCode(ECC)isevaluatedintheCPUforthemainFlashbankarraysandinthe

FlashWrapperfortheEEPROMemulationFlashbanks

–AddressbitsincludedinECCcalculation

•ProvidesdifferentreadmodestooptimizeperformanceandverifytheintegrityofFlashcontents

•Providesbuilt-inpowermodecontrollogic

•Integratedprogram/erasestatemachine

–Simplifiessoftwarealgorithms

–Supportssimultaneousreadaccessonabankwhileperformingawriteoreraseoperationonany

oneoftheremainingbanks

–Suspendcommandallowsreadaccesstoasectorbeingprogrammed/erased

–Fasteraseandprogramtimes(fordetails,seethedevice-specificdatasheet)

FortheactualsizeoftheFlashmemoryforthedevice,seethedevice-specificdatasheet.

5.1.2DefinitionofTerms

Termsusedinthisdocumenthavethefollowingmeaning:

•BAGP(BankActiveGracePeriod):Time(inHCLKcycles)fromthemostrecentFlashaccessofa

particularbankuntilthatbankentersfallbackpowermode.Thisreducespowerconsumptionbythe

Flash.However,itcanalsoincreaseaccesstime.

•bw-NormaldataspacebankdatawidthofaFlashbank.Thebwis128bits(144bitsincludingthe

errorcorrectionbits).

•bwe-EEPROMemulationbankis128bitwide(144bitsincludingtheerrorcorrectionbits).

•Chargepump:Voltagegeneratorsandassociatedcontrol(logic,oscillator,andbandgap,forexample).

•CSM:Program/erasecommandstatemachine

•Fallbackpowermode:Thepowermode(active,standbyorsleep,dependingonwhichmodeis

selected)intowhichabankorthechargepumpfallsbackeachtimetheactivegraceperiodexpires.

•Flashbank:AgroupofFlashsectorswhichshareinput/outputbuffers,datapaths,senseamplifiers,

andcontrollogic.

•FEE-FlashEEPROMEmulation.FeaturesontheFMCtosupportusingaFlashtypememoryinplace

ofanEEPROMFlashmemory.EEPROMiserasablebythewordwhilethisFlashmemoryisonly

erasablebythesector.TheFEEbankisaccessibleonlythroughBus2inaspecialaddressrangeand

alwaysresidesinbank7.

•Flashmodule:Flashbanks,chargepump,andFlashwrapper.

•Flashwrapper:Powerandmodecontrollogic,datapath,waitlogic,andwrite/erasestatemachines.

•FMC-FlashModuleController.

•Command-AsequenceofcodedinstructionstoFlashmoduletoexecuteacertaintask.

246

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDefaultFlashConfiguration

•FSM(FlashStateMachine)-StatemachinewhichparsesanddecodesFSMcommands.Itexecutes

embeddedalgorithmsandgeneratescontrolsignalstobothFlashbankandchargepumpduringthe

actualprogram/eraseoperation.

•OTP(one-timeprogrammable):Aprogram-only-onceFlashsector(cannotbeerased)

•PAGP(PumpActiveGracePeriod):Time(inHCLKcycles)fromwhenthelastofthebankshave

enteredfallbackpowermodeuntilthepumpentersafallbackpowermode.Thiscanreducepower

consumptionbytheFlash;however,itcanalsoincreaseaccesstime.

•Pipelinemode:ThemodeinwhichFlashisread128bits(+16bitECC)atatime,providinghigher

throughput.

•Sector:AcontiguousregionofFlashmemorywhichmustbeerasedsimultaneously.

•Wide_Word-thewidthofthedataoutputfromtheFlashbank.Thisis144bitswideformainFlashand

fortheFEEbank.

•Standardreadmode:Themodeassumedwhenthepipelinemodeisdisabled.Physically,128(+16bit

ECC)isreadatatime.However,only32bitsofdataisusedwhiletheotherbitsofdataarediscarded.

•ReadMargin1mode:Morestringentreadmodedesignedforearlydetectionofmarginallyerasedbits.

•ReadMargin0mode:Morestringentreadmodedesignedforearlydetectionofmarginally

programmedbits.

5.1.3F021FlashTools

TexasInstrumentsprovidesthefollowingtoolsforF021Flash:

•nowECCGenerationTool-togeneratetheFlashECCfromtheFlashdata.

•nowFLASHProgrammingTool-toerase/program/verifythedeviceFlashcontentthroughJTAG.

•CodeComposerStudio-thedevelopmentenvironmentwithintegratedFlashprogrammingcapabilities.

•F021FlashAPILibrary-asetofsoftwareperipheralfunctionstoprogram/erasetheFlashmodule.

RefertoF021FlashAPIReferenceGuide(literaturenumberSPNU501)formoreinformation.

5.2DefaultFlashConfiguration

Atpowerup,theFlashmodulestateexhibitsthefollowingproperties:

•Waitstatesaresetto1datawaitstateand0addresswaitstates

•Pipelinemodeisdisabled

•TheFlashcontentisprotectedfrommodification

•PowermodesaresettoActive(nopowersavings)

•Thebootcodemustinitializethewaitstates(includingdatawaitstatesandaddresswaitstates)and

thedesiredpipelinemodebyinitializingtheFRDCNTLregistertoachievetheoptimumsystem

performance.Thisneedstobedonebeforeswitchingtothefinaldeviceoperatingfrequency.Referto

InitializationofHerculesARMCortex-R4FMicrocontrollers(literaturenumberSPNA106)formore

information.

247

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SECDEDwww.ti.com

5.3SECDED

TheFlashmemorycanbeprotectedbySingleErrorCorrectionDoubleErrorDetection(SECDED).The

mainprogrammemoryisprotectedbytheSECDEDcircuitinsideoftheCortexR4CPU.AllOTPandthe

FEEmemory(bank7)isprotectedbySECDEDlogicintheflashwrapper.

5.3.1SECDEDInitialization

Flasherrordetectionandcorrectionisnotenabledatreset.ToenableSECDED,errorcorrectiondetection

mustbeenabledintheflashwrapper,theCPUeventbusmustbeenabledandSECDEDmustbe

enabledwithintheCPU.RefertoInitializationofHerculesARMCortex-R4FMicrocontrollers(literature

numberSPNA106)forinformationonthesesteps.

TheECCvaluesforalloftheATCMprogrammemoryspace(flashbanks0through6)mustbe

programmedintotheflashbeforeSECDEDisenabled.Thiscanbedonebygeneratingthecorrectvalues

oftheECCwithanexternaltoolsuchasnowECCormaybegeneratedbytheprogrammingtool.The

CortexR4CPUmaygeneratespeculativefetchestoanylocationwithintheATCMmemoryspace.A

speculativefetchtoalocationwithinvalidECC,whichissubsequentlynotused,willnotcreateanabort,

butwillsettheESMflagsforacorrectableoruncorrectableerror.Anuncorrectableerrorwill

unconditionallycausethenERRORpintotogglelow.Thereforecaremustbetakentogeneratethe

correctECCfortheentireATCMspaceincludingtheholesbetweensectionsandanyunusedorblank

flashareas.

TheCortexR4CPUdoesnotgeneratespeculativefetchesintotheaddressspaceofbank7,the

EEPROMEmulationflash.ItisonlynecessarytoinitializetheECCvaluesofthelocationswhichwillbe

intentionallyreadbytheCPUorotherbusmasters.

248

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSECDED

5.3.2ECCEncoding

NineteenaddresslinesarealsoincludedintheECCcalculation.Afailureofasingleaddresslineinsideof

thebankwillbetreatedasanuncorrectableerror.TheECCencodingisshowinTable5-1.Bits31:0

comefromthewordattheaddressendingin0x0or0x8,Bits63:31comefromthewordattheaddress

endingin0x4or0xC.

Table5-1.ECCEncodingforBE32Devices

8

8

8

7

7

7

7

7

7

7

7

7

7

6

6

6

6

6

6

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

ParticipatingAddressbits

ADDR_MSW_LSW

ECCbit

2

2

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

0007F_00FFFF00_FF0000FF

7

x

x

x

x

x

x

x

7FF80_FF0000FF_FF0000FF

6

x

x

x

x

x

x

x

x

x

x

x

x

07F80_00FF00FF_00FF00FF

5

x

x

x

x

x

x

x

x

19F83_FCC0FCC0_FCC0FCC0

4

x

x

x

x

x

x

x

x

x

x

6A78D_E338E338_E338E338

3

x

x

x

x

x

x

x

x

x

x

x

2A9B5_99A699A6_99A699A6

2

x

x

x

x

x

x

x

x

x

x

0BAD1_57155715_57155715

1

x

x

x

x

x

x

x

x

x

554EA_D1B4D1B4_2E4B2E4B

0

x

x

x

x

x

x

x

x

x

x

⊕

6

6

6

6

5

5

5

5

5

5

5

5

5

5

4

4

4

4

4

4

4

4

4

4

3

3

3

3

3

3

3

3

3

3

2

2

2

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

ParticipatingDatabits

6

6

6

6

5

5

5

5

5

5

5

5

5

5

4

4

4

4

4

4

4

4

4

4

3

3

3

3

3

3

3

3

3

3

2

2

2

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

2

2

2

2

2

2

2

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

0

0

Parity(1)

Checkbits(2)

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

ParticipatingDatabits

2

2

2

2

2

2

2

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

0

0

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

x

x

x

x

x

x

x

x

x

x

x

Even

ECC[7]

x

x

x

x

x

x

x

x

x

x

x

Even

ECC[6]

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

Even

ECC[5]

x

x

x

x

x

x

x

x

x

x

x

Even

ECC[4]

x

x

x

x

x

x

x

x

x

x

x

x

x

Odd

ECC[3]

x

x

x

x

x

x

x

x

x

x

x

x

x

Odd

ECC[2]

x

x

x

x

x

x

x

x

x

x

x

x

x

x

Even

ECC[1]

x

x

x

x

x

x

x

x

x

x

x

x

x

x

Even

ECC[0]

(1)ForOddparity,XORa1totherow’sXORresult.ForevenParity,usetherow’sXORresultdirectly.

(2)EachECC[x]bitrepresentstheXORofallthedatabitsmarkedwithxinthesamerow.

249

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SECDEDwww.ti.com

5.3.3SyndromeTable:DecodetoBitinError

Thesyndromeisa8bitvaluewhichdecodestothebitinerror.Thebitinerrorcanbeabitamongthe64

databits,the19addressbitsorabitamongthe8ECCcheckbits.Asyndromevalueof00000000

indicatesthereisnoerror.Anyothersyndromecombinationsnotshowninthetableareun-correctable

multi-biterror.Errorsofthreeofmorebitsmayescapedetection.Thesyndromedecodingisshowin

Table5-2.

Table5-2.SyndromeTable,DecodetoBitinError

AddressBitErrorPosition

2

2

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

.

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

0

1

1

0

0

1

1

1

1

1

1

0

0

0

0

0

1

1

1

1

0

1

0

1

0

0

1

1

1

1

0

0

0

1

1

0

1

0

1

0

1

0

1

0

1

0

0

1

1

0

1

1

0

1

0

1

0

0

0

1

0

1

1

1

0

1

0

1

1

0

1

0

0

0

1

1

0

1

0

1

0

1

0

1

0

0

1

1

1

0

1

0

1

0

DataBitErrorPosition

6

6

6

6

5

5

5

5

5

5

5

5

5

5

4

4

4

4

4

4

4

4

4

4

3

3

3

3

3

3

3

3

3

3

2

2

2

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

0

0

0

0

0

1

1

1

1

1

1

0

0

1

1

0

0

0

0

0

0

1

1

1

1

1

1

0

0

1

1

0

0

0

0

0

0

1

1

1

1

1

1

1

1

0

0

0

1

1

0

0

1

1

1

0

0

0

1

1

1

0

0

0

1

1

0

0

1

1

1

0

0

0

1

1

1

0

0

1

0

0

1

1

0

0

1

1

0

1

0

0

1

1

0

1

0

0

1

1

0

0

1

1

0

1

0

0

1

1

0

1

0

0

1

1

0

1

0

1

0

1

1

1

0

0

0

1

0

1

0

1

0

1

0

1

0

1

1

1

0

0

0

1

0

1

0

1

0

1

0

1

0

1

1

0

1

0

0

0

1

1

0

1

1

0

1

0

0

1

1

0

1

0

0

0

1

1

0

1

1

0

1

0

0

0

0

1

0

1

DataBitErrorPosition

ECCErrorBit

2

2

2

2

2

2

2

1

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

7

6

5

4

3

2

1

0

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

Bit[7]

1

1

1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

0

1

0

0

0

0

0

0

Bit[6]

0

0

0

1

1

1

1

1

1

1

1

0

0

0

0

0

0

0

0

1

1

1

1

1

1

1

1

0

0

1

0

0

0

0

0

Bit[5]

1

0

0

1

1

0

0

0

0

0

0

1

1

1

1

1

1

0

0

1

1

0

0

0

0

0

0

0

0

0

1

0

0

0

0

Bit[4]

0

1

1

0

0

1

1

1

0

0

0

1

1

1

0

0

0

1

1

0

0

1

1

1

0

0

0

0

0

0

0

1

0

0

0

Bit[3]

0

0

1

1

0

1

0

0

1

1

0

1

0

0

1

1

0

0

1

1

0

1

0

0

1

1

0

0

0

0

0

0

1

0

0

Bit[2]

1

1

1

0

0

0

1

0

1

0

1

0

1

0

1

0

1

1

1

0

0

0

1

0

1

0

1

0

0

0

0

0

0

1

0

Bit1]

1

1

0

0

1

0

0

1

0

1

1

0

0

1

0

1

1

1

0

0

1

0

0

1

0

1

1

0

0

0

0

0

0

0

1

Bit[0]

250

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSECDED

5.3.4SyndromeTable:AnAlternateMethod

Table5-3.AlternateSyndromeTable

Syndromemsb7:4

Syndrome

0x

1x

2x

3x

4x

5x

6x

7x

8x

9x

Ax

Bx

Cx

Dx

Ex

Fx

lsb:3:0

x0

good

E04

E05

D

E06

D

D

D38

E07

D

D

D54

D

M

M

D

x1

E00

D

D

D22

D

A19

A17

D

D

A04

M

D

M

D

D

D06

x2

E01

D

D

M

D

D58

D32

D

D

D42

D48

D

M

D

D

M

x3

D

D10

D16

D

M

D

D

A15

A09

D

D

M

D

D26

D00

D

x4

E02

D

D

D23

D

D59

D33

D

D

D43

D49

D

M

D

D

D07

x5

D

D11

D17

D

M

D

D

D39

A08

D

D

D55

D

D27

D01

D

x6

D

D12

D18

D

M

D

D

A14

A07

D

D

M

D

D28

D02

D

x7

M

D

D

M

D

D60

D34

D

D

D44

D50

D

M

D

D

M

x8

E03

D

D

M

D

D61

D35

D

D

D45

D51

D

M

D

D

M

x9

D

D13

D19

D

A21

D

D

A13

A06

D

D

M

D

D29

D03

D

xA

D

D14

D20

D

D57

D

D

A12

D41

D

D

M

D

D30

D04

D

xB

D09

D

D

M

D

D62

D36

D

D

D46

D52

D

D25

D

D

M

xC

D

D15

D21

D

A20

D

D

A11

A05

D

D

M

D

D31

D05

D

xD

M

D

D

M

D

D63

D37

D

D

D47

D53

D

M

D

D

M

xE

D08

D

D

M

D

A18

A16

D

D

A03

M

D

D24

D

D

M

xF

D

M

M

D

D56

D

D

A10

D40

D

D

M

D

M

M

D

•E0x-SinglebitECCerror,correctable

•Dxx-Singlebitdataerror,correctable

•Axx-Singlebitaddresserror,uncorrectable

•D-Doublebiterror,uncorrectable

•M-Multibiterrors,uncorrectable

251

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




64 bit data word 064 bit data word 164 bit data word 264 bit data word 364 bit data word 464 bit data word 564 bit data word 6

64 bit data word 7

Data SpaceECC Space0x80x100x180x200x280x300x38Offset1+0x00Offset+0x04

ECC word 0:checks data word0

ECC word 1:checks data word1

ECC word 2:checks data word2

ECC word 3:checks data word3

3

2

1

0

7

6

5

4

Offset+0x08Offset+0x0C310Do 16 bit or 8 bit0x40

64 bit data word 864 bit data word 964 bit data word A64 bit data word B64 bit data word C64 bit data word D64 bit data word E

64 bit data word FAddress of ECC is equal toBase Address of data/8 +Range beginning.Example:The ECC ofTI OTP dataat bank 1, 200h is (2000h + 200h)/8 +F008000h or F0080440hreads of ECC only



MemoryMapwww.ti.com

5.4MemoryMap

TheFlashmodulecontainstheprogrammemory,whichismappedstartingatlocationzero,andone

CustomerOTPsectorandoneTIOTPsectorperbank.TheCustomerOTPsectorsmaybeprogrammed

bythecustomer,butcannotbeerased.Theyaretypicallyblankinnewparts.TheTIOTPsectorsare

usedtocontainmanufacturinginformation.Theymaybereadbythecustomerbutcannotbe

programmedorerased.TheTIOTPsectorscontainsettingsusedbytheFlashAPItosetuptheFlash

statemachineforeraseandprogramoperations.

AlloftheseOTPregionsarememorymappedtofacilitateeaseofaccessbytheCPU.Theyarememory

mappedtoanoffsetstartingatF0000000hintheCPU’smemorymap.

TheRWAITvalueisusedtodefinethenumberofwaitstatesfortheprogrammemoryflash.TheEWAIT

valueisusedtodefinethenumberofwaitstatesforthedataflashinbank7.Bank7startingatoffset

F0200000hisdedicatedfordatastoragessuchasEEPROMEmulation.

5.4.1LocationofFlashECCbits

TheflashECCbitscanbereadstartingataddress0xF0040000.TheECCbitsarepackedintheir

memoryspaceasshowninFigure5-1.TheECCbytesmustbereadasbytesorhalfwords.

Figure5-1.ECCByteMapping

252

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryMap

5.4.2OTPMemory

5.4.2.1FlashBankandSectorSizes

FlashBank/Sectoringinformationcanbedeterminedfromthedevice-specificdatasheetorcanbe

computedbyreadinglocationsintheTIOTPandFMCregisters.

Thenumberofbanks,whichbanksareavailable,andthenumberofsectorsforbank0canbereadfrom

TIOTPlocationF0080158hasshowinFigure5-2anddescribedinTable5-4.

Figure5-2.TIOTPBank0SectorInformation(F0080158h)

31

16

NSECTORS0

R

15

14

13

12

11

10

9

8

7

0

B7

B6

B5

B4

B3

B2

B1

B0

NBANKS

R

R

R

R

R

R

R

R

R

LEGEND:R=Readonly

Table5-4.TIOTPBank0SectorInformationFieldDescriptions

Bit

Field

Value

Description

31-16

NSECTORS0

0-FFFFh

Numberofsectorsinbank0

15

B7

Bank7exists

0

Bank7doesnotexistonthispart

1

Bank7doesexistonthispart

14

B6

Bank6exists

0

Bank6doesnotexistonthispart

1

Bank6doesexistonthispart

13

B5

Bank5exists

0

Bank5doesnotexistonthispart

1

Bank5doesexistonthispart

12

B4

Bank4exists

0

Bank4doesnotexistonthispart

1

Bank4doesexistonthispart

11

B3

Bank3exists

0

Bank3doesnotexistonthispart

1

Bank3doesexistonthispart

10

B2

Bank2exists

0

Bank2doesnotexistonthispart

1

Bank2doesexistonthispart

9

B1

Bank1exists

0

Bank1doesnotexistonthispart

1

Bank1doesexistonthispart

8

B0

Bank0exists

0

Bank0doesnotexistonthispart

1

Bank0doesexistonthispart

7-0

NBANKS

0-FFh

Numberofbanksonthispart

253

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryMapwww.ti.com

Thebanksectorinformationisrepeatedonceforeachbankinthedevice.Thenumberofsectorsis

uniqueforeachbank.Thenumberofbanksandwhichbanksareimplementedisrepeatedineach

location.UsetheTIOTPinformationforbank0todeterminewhichbanksareinthedevice,andthenread

thenumberofsectorsforeachbankusingtheTIOTPlocationsshowninTable5-5.

Table5-5.TIOTPSectorInformationAddress

Bank

TIOTPAddress

0

0xF0080158

1

F0082158h

2

F0084158h

3

F0086158h

4

F0088158h

5

F008A158h

6

F008C158h

7

F008E158h

5.4.2.2PackageandMemorySize

Packageandmemorysizeinformationcanbedeterminedfromthedevice-specificdatasheet,orcanbe

computedbyreadinglocationsintheTIOTPBank0registers.

ThepackageandmemorysizecanbereadfromTIOTPlocationF008015ChasshowinFigure5-3and

describedinTable5-6.

Figure5-3.TIOTPBank0PackageandMemorySizeInformation(F008015Ch)

31

28

27

16

Reserved

PACKAGE

R

R

15

0

MEMORY_SIZE

R

LEGEND:R=Readonly

Table5-6.TIOTPBank0PackageandMemorySizeInformationFieldDescriptions

Bit

Field

Description

31-28

Reserved

Reserved

27-16

PACKAGE

Countofpinsinthepackage

15-0

MEMORY_SIZE

FlashmemorysizeinKbytes

254

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryMap

5.4.2.3LPOTrimandMaxHCLK

TheHFLPOtrimsolution,LFLPOtrimsolutionandmaximumHCLKfrequencycanbereadfromTIOTP

locationF00801B4hasshowinFigure5-4anddescribedinTable5-7.

Figure5-4.TIOTPBank0LPOTrimandMaxHCLKInformation(F00801B4h)

31

24

23

16

HFLPO_TRIM

LFLPO_TRIM

R

R

15

0

MAX_HCLK

R

LEGEND:R=Readonly

Table5-7.TIOTPBank0LPOTrimandMaxHCLKInformationFieldDescriptions

Bit

Field

Description

31-24

HFLPO_TRIM

HFLPOTrimSolution

23-16

LFLPO_TRIM

LFLPOTrimSolution

15-0

MAX_HCLK

MaximumHCLKSpeed

5.4.2.4PartNumberSymbolization

Devicepartnumbersymbolizationinformationcanbedeterminedfromthedevice-specificdatasheetor

canbecomputedbyreadinglocationsintheTIOTPbank0registers.

ThedevicepartnumbersymbolizationcanbereadfromTIOTPbank0locationF00801E0hthrough

F00801FFhasshowinFigure5-5anddescribedinTable5-8.

Figure5-5.TIOTPBank0SymbolizationInformation(F00801E0h-F00801FFh)

0x00

0x01

0x02

0x03

0x04

0x05

0x06

0x07

0x08

0x09

0x0A

0x0B

0x0C

0x0D

0x0E

0x0F

0x54

0x4D

0x53

0x35

0x37

0x30

0x4C

0x53

0x33

0x31

0x33

0x37

0x43

0x50

0x47

0x45

R

0x10

0x11

0x12

0x13

0x14

0x15

0x16

0x17

0x18

0x19

0x1A

0x1B

0x1C

0x1D

0x1E

0x1F

0x51

0x51

0x31

0x00

0x00

0x00

0x00

0x00

0x00

0x00

0x00

0x00

0x00

0x00

0x00

0x00

R

LEGEND:R=Readonly

Table5-8.TIOTPBank0SectorInformationFieldDescriptions

Byte

Field

Value

Description

31-0

"TMS570LS3137CP

Partnumberstring(ASCII,nullterminated),thisisanexampleonly.

GEQQ1"

0x58

TMX

n

0x50

TMP

0x53

TMS

x

0x41

SiliconRevisionA

0x42

SiliconRevisionB

255

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PowerOn,PowerOff,andResetConsiderationswww.ti.com

5.5PowerOn,PowerOff,andResetConsiderations

5.5.1ErrorCheckingatPowerOn

Asthedeviceiscomingoutofthedeviceresetsequencetheflashwrapperreadstwoconfigurationwords

fromtheTIOTPsectionofbankzero,thehardwareconfigurationwordataddress0xF0080140andthen

theAJSMvisiblepasswordataddres0xF0000000.DuringthesereadsECCisenabled.Singlebiterrors

arecorrectedandgenerateanESMgroup1channel6errorevent.Thefirstfailingaddresswillbelatched

intheFCOR_ERR_ADDregisteralongwiththebitpositioninFCOR_ERR_POSregisterandthe

FEDACSTATUSregisterflagswillbeupdatedtoindicatethetypeoferror.Uncorrectableerrorswill

generateanESMgroup3channel7errorevent,theERRORpinwillbeactivated,thefirstfailingaddress

willbelatchedintheFUNC_ERR_ADDregisterandtheFEDACSTATUSregisterflagswillbeupdatedto

indicatethetypeoferror.

5.5.2FlashIntegritywhenResetwhileProgrammingorErasing

Ifadeviceisresetwhileprogramming,thenthebitsbeingprogrammedwhenresetisassertedare

indeterminate,howevertheotherbitsintheflasharenotdisturbed.Likewise,Ifthedeviceisresetwhile

beingerased,thesectororsectorsbeingerasedwillhaveindeterminatebits,howevertheothersectorsin

thesamebank,andtheotherbankswillnotbedisturbed.

5.5.3FlashIntegrityatPowerOff

Ifpowerislostduringaprogrammingoreraseoperation,apower-onresetmustbeassertedbeforethe

coresupplyvoltagedropsbelowspecificaiton.ThePORRSTpinhasaglitchfilterwhichmeansthatthe

PORRSTpinmustbeassertedlowtf(nPORRST)(2us)beforethecoresupplydropsbelowVccMIN(1.14V).If

thisrequirementismet,thenthebitsbeingprogrammedwhenPORRSTgoeslowareindeterminate,

howevertheotherbitsintheflasharenotdisturbed.Likewise,Ifthisrequirementismet,andPORRSTis

assertedwhileerasing,thesectororsectorsbeingerasedwillhaveindeterminatebits,howevertheother

sectorsinthesamebank,andtheotherbankswillnotbedisturbed.

5.6EmulationandSIL3DiagnosticModes

5.6.1SystemEmulation

DuringemulationwhenSUSPENDsignalishigh,thedatareadfrommemoryisstillpassedtoSECDED

forcorrectionifECC_ENABLEisactive.Ifacorrectableerrorisdetectedthenitiscorrectedbuterror

eventisnotgeneratedanderroroccurrencecounterisnotincrementedifinprofilingmode.Ifadouble

errorisdetectedthentherawdataisreturnedwithoutgeneratingdoubleerrorsignal.

TheSUSPENDsignalcanbedisablebyusingtheSUSP_IGNRbitinFEDACCTRL1register.The

SUSPENDsignalshouldnotbeconfusedwiththesuspend_nowoperationfortheFSM.

5.6.2DiagnosticMode

Flashwrappercanbeputindiagnosticmodetoverifyvariouslogic.Therearemultiplediagnosticmodes

supportedbythewrapper.AspecificdiagnosticmodeisselectedviaDIAGMODE[2:0]controlbits.

Diagnosticmodeisonlyenabledviaa4-bitkeystoredinDIAG_EN_KEY[3:0].OnlyDIAG_EN_KEY=0101

willenableanydiagnosticmodeandalldiagnosticmodesusetheDIAG_TRIGtoinitiatetheaction.

Alltestswillrunfromanypipelinemode.Someofthediagnosticmodescancorrupttheflashdataaccess,

andgenerateerrorsaspartofthetest.Runninginnon-pipelinemayminimizesomeoftheseconditions.

Forallmodesitisbesttofollowthissequence.

1.Write0101totheDIAG_EN_KEYregisterandsetthedesiredDIAG_MODE.Thiswillblockmany

UERRsources.

2.Setanydataregistersneededforthismode.

3.WriteaonetheDIAG_TRIGtoinitiatetheactionandallowUERRstohappenforonecycle.

4.Write1010toDIAG_EN_KEYtoexitthediagnosticmodes.

256

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEmulationandSIL3DiagnosticModes

WhentheCONF_TYPEis5thentheECClogicisintheCPUandmostofdiagnosticmodesareremoved.

SomebecausethelogictheytestnolongerexistsandtherestbecausethepathisvalidatedviatheECC

pathtotheCPU.

Table5-9.DIAGMODEEncoding

Mode

DIAGMODEBits

Description

0

0

0

0

Diagnosticmodeisdisabled.SameasDIAG_EN_KEYnotequalto5h.

1

0

0

1

ECCDatacorrectiontestmode.

2

0

1

0

ECCSyndromereportingtestmode.

3

0

1

1

ECCMalfunctiontestmode1(samedatamode)

4

1

0

0

ECCMalfunctiontestmode2(inverteddatamode)

5

1

0

1

AddressTagRegistertestmode

6

1

1

0

Reserved

7

1

1

1

ECCDataCorrection

5.6.2.1ECCDataCorrectionMode1

ThisdiagnosticmodecanbeenabledwhileECClogicisalsoenabledfornormalbankread.Theflash

wrapperwillarbitratetheusageoftheECClogicifaconflictoccursbetweenanormalbankreadand

diagnosticchecking.

Whenindiagnosticdatacorrectionmode,FEMU_xxxxregisterscontainthe64-bitEEPROMemulation

dataregister,the19-bitemulationaddressregisterandthe8-bitemulationcheck-bitregister.These

valuesareusedtoenterdiagnosticdatatoexercisetheSECDEDlogic.Theusercanapplyavaluewith

anerrorinanybitlocation.WhentheDIAG_TRIGisset,theSECDEDcalculationisdoneandthe

correctedvaluesaresavedbackintothesameFEMU_xxxxregisters.Theerrorpositionregisterisalso

updatedtoindicatethebitpositioninerror.EitherERR_ONE_FLGorERR_ZERO_FLGbitissetwhena

correctableerrorisdetected.TheD_COR_ERRbitwillbealsobesetinFEDACSTATUS.Forun-

correctableerrorthedouble/multibiterrorstatusbitECC_MUL_ERRissetaswellastheD_UNC_ERR

bitinthesameregister.Statusbitsshouldbeclearedbytheuserbeforeapplyinganewdiagnosticdata.

IttakesmultipleCPUtransactionstopreloadtheregisterswithdiagnosticvalues.Duringthistime,the

resultofthediagnosticlogicsuchascomparatorcanchange.Usershouldapplyatriggerbysetting

DIAG_TRIGbitto1asaqualifierafterallregistersareloadedwithintendedvalues.TheDIAG_TRIG

servestovalidatethediagnosticresult.OnlywhenDIAG_TRIGishighandafailingresultinthediagnostic

logicwillupdatethecorrespondingstatusflagandthepositionregister.

5.6.2.2ECCSyndromeReportMode2:DIAGMODE=2

Whenindiagnosticsyndromereportingmode,theresultingsyndromecalculatedbySECDEDiscaptured

intotheECCcheck-bitregisterFEMU_ECC.Thesyndromecanbereadbytheuserandcomparewitha

knownsyndromevalue.DiagnosticdatainFEMU_DxSWandFEMU_ADDRisnotcorrectedandtheerror

positionregisterisnotupdated.TheFEDACSTATUSerrorbitsarenotupdatedduringthismode.See

Figure5-6.

FordeviceswithECC_IN_CPU(CONF_TYPE=5),theresultingFEMU_ECCvaluewillrepresentthe32-bit

byteswappedvalues.Here,bytes7654_3210arerearrangedto4567_0123.Forinstance,ifthesyndrome

showsanerrorindatabit33,itwouldreallybeanerrorinEMU_DMWbit57.YoucanalsoXORthedata

bitpositionwith“011000”.(21hXOR18h=>39h)

NOTE:Theusershouldpre-loadtheregisterswiththetestvalueswithDIAG_TRIG=0.Afteralltest

valuesarewritten,theDIAG_TRIGshouldthenbesethightovalidatethediagnosticresult.

257

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




syndromeX

Raw ECCregisterFRAW_ECC

Raw DataregisterFRAW_DATAx

bank_dout

ECCxcorrection

Malfunction Logic

ECCxMALERR

GOODMALCOMx

Diag_En_KeyDiag_Mode=4

= 0?diag_mode=4

100110

A=BA¹not B

01diag_mode=(3 or 4)

64

Diag_ECC_Sel64

64

Diag_trig

compareAB64

SECDEDcorrected

Not Multi bit error

Zero means no correction

Diag_Mode=0(Diag_En_Key and

Diag_Trig)

(Diag_Mode=3 or 4) and

Diag En key¹0101

D

Enter_Diag4Zero when notin diag mode 4Q

Set when mode4 is entered.Clears onerrors. (bad)



EmulationandSIL3DiagnosticModeswww.ti.com

5.6.2.3ECCMalfunctionTestMode3:DIAGMODE=3

Therearethreeinputstothemalfunctiondetectionlogic:theresultingsyndrome,theoriginaluncorrected

dataandthefinalcorrecteddata.SeeFigure5-6.

Innormalfunction,themalfunctiondetectionlogicwilldetectanerrorifthesyndromeis0andifthedata

beforecorrectionandthedataafterthecorrectionisnotequalorifthesyndromeisnot0andifthedata

beforecorrectionanddataafterthecorrectionisequaltoeachother.Duringdiagnosticmode3or4,user

suppliedvaluesaresenttothemalfunctionlogic.Nofunctionalcheckingisdonebytheecc_malfunction

logicwhilethemodeis3or4.

Diagnosticmode3isalsoknownas“samedata”mode.AdiagnosticvaluecanbestoredintheECC

checkbitregister.Thevaluestoredinthe64-bitRawdataregisterwillbesuppliedtothetwoinputsofthe

malfunctioncomparatorlogic.Ifanon-zerovalueisstoredintheRawECCcheckbitregisterFRAW_ECC

thenthemalfunctionlogicshoulddetectitasanerrorandsettheECC_MAL_ERRbit(ECCmalfunction

error).ThereisoneECC_MAL_ERRbitforeachSECDEDblockandtheyarecalledECC1_MAL_ERR

andECC0_MAL_ERRandareselectablewiththeDIAG_ECC_SELbit.TheDIAG_TRIGissettoinitiate

thismode.

TheFRAW_DATAx,FRAW_ECCandFUNC_ERR_ADDwillloadonanECC_MALERRbutwillnot

containusefulinformationduringDiagmode3.

5.6.2.4ECCMalfunctionTestMode4:DIAGMODE=4

Thismodeisalsoknownas“inverteddata”mode.AdiagnosticvaluecanbestoredintheECCcheckbit

register.Avaluestoredinthe64-bitRawdataregisteranditsbit-wiseinvertedcounterpartwillbesupplied

tothetwoinputsofthemalfunctioncomparatorlogic.IfazerovalueisstoredintheRawECCcheckbit

registerFRAW_ECCthenthemalfunctionlogicshoulddetectitasanerrorandsettheECC_MAL_ERR

bit(diagnosticECCmalfunction).SeeFigure5-6.

Inthismodeonly,theCOM_MAL_GOODbit(CompareMalfunction)isclearedifanyoneofthe64XOR

gatesismalfunctioning.ThereisoneCOMx_MAL_GOODbitforeachSECDEDblocksandtheyare

calledCOM1_MAL_GOODandCOM0_MAL_GOOD.TheCOMx_MAL_GOODbitsgohighwhenentering

diagnosticmode4andgolowandstaylowifanerrorisdetected.Thesebitsareonlyvalidindiagnostic

mode4andoutsideofthismodethebitsarezero.

SettheECC_SELbitsbeforeenteringmode4orentermode4fromanonmode4andsettheECC_SEL

bitsatthesametime.DonotjustchangetheECC_SELbitsorthecorrespondingMAL_GOODwillnotget

setbecauseitdidnotentermode4correctly.

TheFRAW_DATAx,FRAW_ECCandFUNC_ERR_ADDwillloadonanECC_MALERRbutwillnot

containusefulinformationduringDiagmode4.

Figure5-6.ECCMalfunctionTestLogic

258

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEmulationandSIL3DiagnosticModes

5.6.2.5AddressTagRegisterTestMode5:DIAGMODE=5

Therearefoursetsofaddresstagregisters.Eachsetconsistsofaprimaryandaduplicateaddresstag

registers.Normally,theseregistersstorestherecentlyissuedCPUaddressesduringpipelinemode.To

detecterrorsintheseregisters,theprimaryandduplicateaddresstagregistersarecontinuously

comparedtoeachotherifthebufferisvalid.Iftheyaredifferentthenanaddresstagregistererroreventis

generated.

Theseregistersarememorymapped.Allprimaryaddresstagregistersarememorymappedtoone

addressandlikewise,allduplicatetagregistersaremappedtoanothersingleaddress.Duringdiagnostic

mode,eachindividualsetcanbeselectedviathe2-bitDIAG_BUF_SEL(Diagnosticbufferselect)register.

Usersuppliedvaluescanbewrittenintotheselectedsetduringadiagnosticmode.Ifdifferentvaluesare

writtenintotheprimaryandtheduplicateaddresstagregistersthentheADD_TAG_ERR(AddressTag

Error)registerwillbeset.ThisdiagnosticmodeusestheFRAW_DATALregistertosupplythealternate

addresswhenDIAG_TRIGisset.TheFUNC_ERR_ADDwillnotcontainusefulinformationduringDiag

mode5.Itwillalsotriggerthenormaluncorrectableregisterfreeze.

Alladdresstagsandbuffervalidbitswillbesettozerowhenleavingdiag_mode5.Goingtomode5and

backoutclearsthepipelinebuffersandisusefulforothertestmodesalso.Nofunctionalcheckingisdone

bytheaddresstaglogicwhilethemodeis5.

NOTE:Theusershouldpre-loadtheregisterswiththetestvalueswithDIAG_TRIG=0.Afteralltest

valuesarewritten,theDIAG_TRIGshouldthenbesethightovalidatethediagnosticresult.

5.6.2.6ECCDataCorrectionDiagnosticMode7:DIAGMODE=7

TestingtheerrorcorrectionandECClogicintheCPUinvolvescorruptingtheECCvaluereturnedtothe

CPU.ByinvertingoneormorebitsoftheECC,theCPUwilldetecterrorsinaselecteddataorECCbit,or

inanypossiblevaluereturnedbytheECC.

Tosetanerrorforaparticularbitusethesyndrome,seeTable5-3.Forinstanceifyouwanttocorrupt

databit62thenputthevalue70hintothetestregister.

ThemethodusestheDATA_INV_PARvalueintheFPAR_OVRregistertoaltertheECCduringaslave

accesscycle.ThevalueintheDATA_INV_PARregisterwillbeXORedwiththecurrentECCtogiveabad

ECCvaluetotheCPU.ThisonlywilloccurwhentheDIAG_MODEis7,thePAR_OVR_KEYis5,the

DIAG_EN_KEYintheFDIAGCTRLregisteris5andtheaccessisaslavecycle.

ThismodecansettheFEDACSTATUSstatuserrorbitsECC_MUL_ERRorERR_ZERO_FLGbutitwill

notsetD_UNC_ERRnorD_COR_ERR.AlsothelogictosupporttheECCx_MAL_ERRand

COMx_MAL_GOODbitsisnotimplementedfortheCPUpathsothesebitswillnotset.

Thesequencetodothistestwouldbe:

1.MakesurethetrueDMAmoduleisoff.

2.Put0101bintoPAR_OVR_KEYand101bintoDAT_INV_PARfields(00005Axxh)oftheFPAR_OVR

register(0x7C).

3.PutthedesiredvalueinDAT_INV_PARfieldofFPAR_OVRregister.

4.Put7inDIAG_MODE,and5inDIAG_EN_KEYofFDIAGCTRL(0x6C).

5.Doaslaveaccessofthedesiredaddress.

6.Put0inDIAG_MODEorAinoneofthekeyfieldstoturnoffthistest.

7.CheckerrorregistersforECCerrors.(0x14,0x1C,0x20).

8.RepeatasnecessarytotestouttheECC.

9.Put0inDIAG_MODEandAinbothofthekeyfieldstocompletelydisablethistestattheendofthe

test.

10.Write5400htoFPAR_OVR(0x7C)toclearDAT_INV_PARandput2intoPAR_OVR_KEY.

259

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EmulationandSIL3DiagnosticModeswww.ti.com

5.6.3DiagnosticModeSummary

Thefollowingtablegiveasummaryoftheinputregistersneededforeachmode,thepossibleregisters

thatcanchangeandthepossibleerrorbitsinFEDACSTATUSthatmayset.

Table5-10.Bus1DiagnosticModeSummary

DIAG

PossibleErrorBits

MODE

Name

Inputs

PossibleOutputs

Set

Notes

1

ECCDataCorrection

NotApplicable

2

ECCSyndromeReport

NotApplicable

3

ECCMalfunction

NotApplicable

4

ECCMalfunctionInverted

NotApplicable

Data

5

AddressTag

FPRIM_ADD_TAG

FUNC_ERR_ADD(1)

ADD_TAG_ERR

FDUP_ADD_TAG

FRAW_DATAL

6

Reserved

7

ECCtest

DAT_INV_PAR

FUNC_ERR_ADD

ECC_MUL_ERR

Slaveaccessonly

FCOR_ERR_ADD

ERR_ZERO_FLG

(1)Registeroutputvaluewillchange,butwillnotcontainusefulinformation.

Table5-11.Bus2andECCDiagnosticModeSummary

DIAG

MODE

Name

Inputs

PossibleOutputs

PossibleErrorBitsSet

Notes

1

ECCDataCorrection

FEUM_DMSW

FEMU_ECC

D_UNC_ERR

FEMU_DLSW

FUNC_ERR_ADD

D_COR_ERR

FEMU_ECC

FCOR_ERR_ADD

D_MUL_ERR

FEMU_ADDR

FCOR_ERR_POS

ERR_ONE_FLG

ERR_ZERO_FLG

ERR_MUL_FLG

FEMU_ECC

EE_D_UNC_ERR

EE_UNC_ERR_ADD

EE_D_COR_ERR

EE_COR_ERR_ADD

EE_D_MUL_ERR

EE_COR_ERR_POS

EE_ERR_ONE_FLG

EE_ERR_ZERO_FLG

EE_ERR_MUL_FLG

2

ECCSyndromeReport

FEMU_DMSW

FEMU_ECC

NA

FEMU_DLSW

FEMU_ECC

FEMU_ADDR

3

ECCMalfunction

FRAW_DATAH

FRAW_DATAH(1)

ECCB2_MAL_ERR

FRAW_DATAL

FRAW_DATAL(1)

D_UNC_ERR

FRAW_ECC

FRAW_ECC(1)

FUNC_ERR_ADD(1)

FRAW_DATAH(1)

EE_MAL_ERR

FRAW_DATAL(1)

EE_D_UNC_ERR

FRAW_ECC(1)

EE_UNC_ERR_ADD(1)

(1)Registeroutputvaluewillchange,butwillnotcontainusefulinformation.

260

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table5-11.Bus2andECCDiagnosticModeSummary(continued)

DIAG

MODE

Name

Inputs

PossibleOutputs

PossibleErrorBitsSet

Notes

4

ECCMalfunction

FRAW_DATAH

FRAW_DATAH(1)

COMB2_MAL_GOOD

InvertedData

FRAW_DATAL

FRAW_DATAL(1)

ECCB2_MAL_ERR

FRAW_ECC

FRAW_ECC(1)

D_UNC_ERR

FUNC_ERR_ADD(1)

FRAW_DATAH(1)

EE_COM_MAL_GOOD

FRAW_DATAL(1)

EE_MAL_ERR

FRAW_ECC(1)

EE_D_UNC_ERR

EE_UNC_ERR_ADD(1)

5

AddressTag

Notapplicable

6

Reserved

Notapplicable

7

ECCtest

Notapplicable

Table5-12.PortSignalsDiagnosticModeSummary

FEE

FEE

Uncorrectable

Correctable

AddressBus

Uncorrectable

Correctable

Error

Error

ParityError

Error

Error

DIAG

ESMGroup3

ESMGroup1

ESMGroup2

ESMGroup1

ESMGroup1

MODE

Name

ErrorIn

Channel7

Channel6

Channel4

Channel36

Channel35

1

ECCDataCorrection

Bus2

Yes

Yes

No

No

No

EEPROM

No

No

No

Yes

Yes

2

ECCSyndrome

Bus2

No

No

No

No

No

Report

EEPROM

No

No

No

No

No

3

ECCMalfunction

Bus2

Yes

No

No

No

No

EEPROM

No

No

No

Yes

No

4

ECCMalfunction

Bus2

Yes

No

No

No

No

InvertedData

EEPROM

No

No

No

Yes

No

5

AddressTag

Bus1

Yes

No

No

No

No

6

Reserved

7

ECCtest

Bus1

Yes

Yes

No

No

No

5.6.4ReadMargin

Whenthebitsareprogrammedorerased,theyarecheckedagainstaprogram_verifyorerase_verify

referencelevelthatisfarawayfromthenormalreadreferencepoint.Overtime,bitlevelsmaydrifttoward

thenormalreadpointandifitistoomuchthenabitwillreadthewrongvalue.Tocounteractthis,thebits

canbereadusingdifferentread_marginreferencepointstogiveanearlydetectionoftheproblem.The

bitscanthenbeeitherre-programmed(mostcommon)orthesectorcanbeerasedandreprogrammed.

5.7ControlRegisters

ThissectiondetailstheFlashmoduleregisters,summarizedinTable5-13.Adetaileddescriptionofeach

registeranditsbitsisalsoprovided.

TheFlashmodulecontrolregisterscanonlybereadand/orwrittenbytheCPUwhileinprivilegedmode.

Eachregisterbeginsonawordboundary.Allregistersare32-bit,16-bitand8-bitaccessible.Thestart

addressoftheFlashmoduleisFFF87000h.

261

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table5-13.FlashControlRegisters

Offset

Acronym

RegisterDescription

Section

FFF87000h

FRDCNTL

FlashOptionControlRegister

Section5.7.1

FFF87008h

FEDACTRL1

FlashErrorDetectionandCorrectionControlRegister1

Section5.7.2

FFF8700Ch

FEDACTRL2

FlashErrorDetectionandCorrectionControlRegister2

Section5.7.3

FFF87010h

FCOR_ERR_CNT

FlashCorrectableErrorCountRegister

Section5.7.4

FFF87014h

FCOR_ERR_ADD

FlashCorrectableErrorAddressRegister

Section5.7.5

FFF87018h

FCOR_ERR_POS

FlashCorrectableErrorPositionRegister

Section5.7.6

FFF8701Ch

FEDACSTATUS

FlashErrorDetectionandCorrectionStatusRegister

Section5.7.7

FFF87020h

FUNC_ERR_ADD

FlashUn-CorrectableErrorAddressRegister

Section5.7.8

FFF87024h

FEDACSDIS

FlashErrorDetectionandCorrectionSectorDisableRegister

Section5.7.9

FFF87028h

FPRIM_ADD_TAG

FlashPrimaryAddressTagRegister

Section5.7.10

FFF8702Ch

FDUP_ADD_TAG

FlashDuplicateAddressTagRegister

Section5.7.11

FFF87030h

FBPROT

FlashBankProtectionRegister

Section5.7.12

FFF87034h

FBSE

FlashBankSectorEnableRegister

Section5.7.13

FFF87038h

FBBUSY

FlashBankBusyRegister

Section5.7.14

FFF8703Ch

FBAC

FlashBankAccessControlRegister

Section5.7.15

FFF87040h

FBFALLBACK

FlashBankFallbackPowerRegister

Section5.7.16

FFF87044h

FBPRDY

FlashBank/PumpReadyRegister

Section5.7.17

FFF87048h

FPAC1

FlashPumpAccessControlRegister1

Section5.7.18

FFF8704Ch

FPAC2

FlashPumpAccessControlRegister2

Section5.7.19

FFF87050h

FMAC

FlashModuleAccessControlRegister

Section5.7.20

FFF87054h

FMSTAT

FlashModuleStatusRegister

Section5.7.21

FFF87058h

FEMU_DMSW

EEPROMEmulationDataMSWRegister

Section5.7.22

FFF8705Ch

FEMU_DLSW

EEPROMEmulationDataLSWRegister

Section5.7.23

FFF87060h

FEMU_ECC

EEPROMEmulationECCRegister

Section5.7.24

FFF87068h

FEMU_ADDR

EEPROMEmulationAddressRegister

Section5.7.25

FFF8706Ch

FDIAGCTRL

DiagnosticControlRegister

Section5.7.26

FFF87070h

FRAW_DATAH

UncorrectedRawDataHighRegister

Section5.7.27

FFF87074h

FRAW_DATAL

UncorrectedRawDataLowRegister

Section5.7.28

FFF87078h

FRAW_ECC

UncorrectedRawECCRegister

Section5.7.29

FFF8707Ch

FPAR_OVR

ParityOverrideRegister

Section5.7.30

FFF870C0h

FEDACSDIS2

FlashErrorDetectionandCorrectionSectorDisableRegister2

Section5.7.31

FFF87288h

FSM_WR_ENA

FSMRegisterWriteEnable

Section5.7.32

FFF872A4h

FSM_SECTOR

FSMSectorRegister

Section5.7.33

FFF872B8h

EEPROM_CONFIG

EEPROMEmulationConfigurationRegister

Section5.7.34

FFF87308h

EE_CTRL1

EEPROMEmulationErrorDetectionandCorrectionControl

Section5.7.35

Register1

FFF8730Ch

EE_CTRL2

EEPROMEmulationErrorDetectionandCorrectionControl

Section5.7.36

Register2

FFF87310h

EE_COR_ERR_CNT

EEPROMEmulationCorrectableErrorCountRegister

Section5.7.37

FFF87314h

EE_COR_ERR_ADD

EEPROMEmulationCorrectableErrorAddressRegister

Section5.7.38

FFF87318h

EE_COR_ERR_POS

EEPROMEmulationCorrectableErrorBitPositionRegister

Section5.7.39

FFF8731Ch

EE_STATUS

EEPROMEmulationErrorStatusRegister

Section5.7.40

FFF87320h

EE_UNC_ERR_ADD

EEPROMEmulationUn-CorrectableErrorAddressRegister

Section5.7.41

FFF87400h

FCFG_BANK

FlashBankConfigurationRegister

Section5.7.42

262

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.1FlashOptionControlRegister(FRDCNTL)

FRDCNTLsupportspipelinemode.Thisregistercontrolsflashtimingsforthemainflashbanks.Forthe

equivalentregisterthatcontrolsflashtimingsfortheEEPROMEmulationflashbank(bank7)see

Section5.7.34.

Figure5-7.FlashOptionControlRegister(FRDCNTL)(offset=FFF87000h)

31

16

Reserved

R-0

15

12

11

8

Reserved

RWAIT

R-0

R/WP-1

7

5

4

3

1

0

Reserved

ASWSTEN

Reserved

ENPIPE

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-14.FlashOptionControlRegister(FRDCNTL)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

RWAIT

0-Fh

Random/dataReadWaitState

Therandomreadwaitstatebitsindicatehowmanywaitstatesareaddedtoaflashread

access.InPipelinemodethereisalwaysonewaitstateevenwhenRWAITissetto0.

Note:TherequiredwaitstatesforeachHCLKfrequencycanbefoundinthedevice-specific

datasheet.

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

ASWSTEN

AddressSetupWaitStateEnable

0

AddressSetupWaitStateisdisabled.

1

AddressSetupWaitStateisenabled.Addressislatchedonecyclebeforedecodingto

determinepipelinehitormiss.AddressSetupWaitStateisonlyavailableinpipelinemode.

Note:TherequiredaddresswaitstateforeachHCLKfrequencycanbefoundinthedevice-

specificdatasheet.

3-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ENPIPE

EnablePipelineMode

0

Pipelinemodeisdisabled.

1

Pipelinemodeisenabled.

263

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.2FlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1)

ThisregistercontrolsECCeventdetectionforthemainflashbanks.Fortheequivalentregisterthat

controlsECCeventdetectionfortheEEPROMEmulationflashbank(bank7),seeSection5.7.35.

Figure5-8.32-bit,4RowsFlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1)

(offset=FFF87008h)

31

25

24

Reserved

SUSP_IGNR

R-0

R/WP-0

23

20

19

16

Reserved

EDACMODE

R-0

R/WP-Ah

15

11

10

9

8

Reserved

EOFEN

EZFEN

EPEN

R-0

R/WP-0

R/WP-0

R/WP-0

7

4

3

0

Reserved

EDACEN

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-15.FlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1)

FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

SUSP_IGNR

SuspendIgnore.

Inemulationmode,forexample,viewingmemoryinthedebugger'swindow,theCPU

suspendsignalisset.ThisbitdetermineswhethertheCPUsuspendsignalisignoredbythe

flashmodule.

0

CPUsuspendsignalblockserrorbitssettingandun-freezing.

Theflashmoduleblocksallerrorsfromsettingtheerrorbitsinemulationmodeandblocks

theun-freezingofthebitsandregistersbyreadingtheFUNC_ERR_ADDregister.

1

CPUsuspendhasnoeffectonerrorbitsettingandun-freezing.

TheflashmoduleignorestheCPUsuspendsignalandallowstheerrorbitstosetevenin

emulationmode.Italsoallowstheflashmoduletoun-freezetheerrorbitsandotherregisters

byreadingtheFUNC_ERR_ADDregistereveninemulationmode.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

EDACMODE

ErrorCorrectionMode.

5h

SinglebiterrorsduringreadsfromOTP,ECCandthemirroredspace(startingat

0x20000000)ofbanks0through6,willbetreatedasuncorrectableerrorsbytheflash

wrapper.ThewrapperwillassertanESMgroup3erroronchannel7andtheERRORpin

willbeactivated.NoabortwillbetakenbytheCPU.

AllOtherValues

SinglebiterrorsduringreadsfromOTP,ECCandthemirroredspace(startingat

0x20000000)ofbanks0through6,willbetreatedascorrectableerrorsbytheflashwrapper.

ThewrapperwillassertanESMgroup1erroronchannel6.Thesinglebiterrorwillbe

corrected.

Note:Thismodedoesnotaffectreadsfromthemainprogramflashstartingataddresszero.

Note:ReadingECCbitswillgenerateanECCerrorbasedonthecontentsofthe8ECCbits

andthe64databitstheyprotect

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

264

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table5-15.FlashErrorDetectionandCorrectionControlRegister1(FEDACCTRL1)

FieldDescriptions(continued)

Bit

Field

Value

Description

10

EOFEN

EventonOnesFailEnable

0

NoESMerroreventisgeneratedonasinglebiterrorwhereaonereadsasazerowhen

readingfromtheOTPorECCmemorylocations.

1

AnESMerroreventisgeneratedonasinglebiterrorwhereaonereadsasazerowhen

readingfromtheOTPorECCmemorylocations.

Note:WheneithertheEOFENortheEZFENbitisset,anerroreventwillbegeneratedon

ESMgroup1channel6whenanycorrectableerrorisgeneratedbyreadingthemain

memory

9

EZFEN

EventonZerosFailEnable

0

NoESMerroreventisgeneratedonasinglebiterrorwhereazeroreadsasaonewhen

readingfromtheOTPorECCmemorylocations.

1

AnESMerroreventisgeneratedonasinglebiterrorwhereazeroreadsasaonewhen

readingfromtheOTPorECCmemorylocations.

Note:WheneithertheEOFENortheEZFENbitisset,anerroreventwillbegeneratedon

ESMgroup1channel6whenanycorrectableerrorisgeneratedbyreadingthemain

memory

8

EPEN

ErrorProfilingEnable.

0

Errorprofilingisdisabled.

1

Errorprofilingisenabled.

Thecorrectableerroreventisgenerated(ESMgroup1channel6)whenthenumberofCPU

accessesofcorrectablebiterrorsdetectedandcorrectedhasreachedthethresholdvalue

definedintheFEDACCTRL2register.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

EDACEN

ErrorDetectionandCorrectionEnable

5h

CPUsingleanddoubleerroreventsignalsareblocked.

Note:ItisrecommendedtoenableECCintheflashwrapperbywriting"1010"tothesebits

beforeenablingECCintheCPU.IfECCisenabledintheCPU,butnotinthewrapper,the

CPUwillstillcheckandcorrectsinglebitECCerrors,andgenerateabortsonuncorrectable

errorsforthemainflash.However,thegenerationofESMevents,thecaptureoffailing

addressesandthedetectionsandcorrectionoferrorsintheOTPwillbeprevented.

AllOtherValues

ErrorDetectionandCorrectioneventsarecapturedandsenttotheESM

265

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.3FlashErrorCorrectionandCorrectionControlRegister2(FEDACCTRL2)

ThisregisterappliestoECCeventdetectionforthemainflashbanks.Fortheequivalentregisterwhich

appliestotheEEPROMEmulationflashbank(bank7)seeSection5.7.36.

Figure5-9.FlashErrorCorrectionandCorrectionControlRegister2(FEDACCTRL2)

(offset=FFF8700Ch)

31

16

Reserved

R-0

15

0

SEC_THRESHOLD

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-16.FlashErrorCorrectionControlandCorrectionRegister2(FEDACCTRL2)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

SEC_THRESHOLD

SingleErrorCorrectionThreshold

Whenerrorprofilingisenabled,thisregistercontainsthethresholdvaluefortheSEC

(singleerrorcorrection)occurrencesbeforeacorrectableerroreventisgenerated(ESM

group1,channel6).Athresholdofzerodisablesthethresholdsothatitdoesnotgenerate

anevent.

5.7.4FlashCorrectableErrorCountRegister(FCOR_ERR_CNT)

Thisregisterappliestothemainflashbanks.FortheequivalentregisterwhichappliestotheEEPROM

Emulationflashbank(bank7)seeSection5.7.37.

Figure5-10.FlashCorectableErrorCountRegister(FCOR_ERR_CNT)(offset=FFF87010h)

31

16

Reserved

R-0

15

0

FERRCNT

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-17.FlashCorrectableErrorCountRegister(FCOR_ERR_CNT)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FERRCNT

SingleErrorCorrectionCount

ThisregistercontainsthenumberofSEC(singleerrorcorrection)occurrences.Writingany

valuetothisregisterresetsthecountvaluetozero.Thecounterresetstozerowhenit

incrementstobeequaltothesingleerrorcorrectionthreshold.Thisregisteronlyincrements

whenprofilingmodeisenabled.ThisregisterisnotaffectedbytheEOFENorEZEFEN

errorcontrolbitsintheFEDACCTRL1register.

266

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.5FlashCorrectableErrorAddressRegister(FCOR_ERR_ADD)

Thisregisterappliestothemainflashbanks.FortheequivalentregisterwhichappliestotheEEPROM

Emulationflashbank(bank7)seeSection5.7.38.

TheerroraddressiscapturedduringerrorswheneitherEOFENorEZFENenablebitisset.Duringerror

profilingmodewhenonlyEPENisset,theerroraddressisnotcapturedifacorrectableerrorisdetected.

ThisregisterisfrozenwhileeithertheERR_ZERO_FLGortheERR_ONE_FLGbitissetinthe

FEDACSTATUSregister.

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,

(seeTable5-15)thisregistercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Figure5-11.FlashCorrectableErrorAddressRegister(FCOR_ERR_ADD)(offset=FFF87014h)

31

16

COR_ERR_ADD

R-u

15

3

2

0

COR_ERR_ADD

B_OFF

R-u

R-u

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-18.FlashCorrectableErrorAddressRegister(FCOR_ERR_ADD)FieldDescriptions

Bit

Field

Value

Description

31-3

COR_ERR_ADD

CorrectableErrorAddress

COR_ERR_ADDrecordstheCPUlogicaladdressofwhichacorrectableerrorisdetected

bytheECClogic.Thiserroraddressisfrozenfrombeginupdateduntilitisreadbythe

CPU.Additionalerrorareblockeduntilthisregisterisread.

2-0

B_OFF

ByteOffset

SinceECCischeckedon64bitdata,whencheckingmainmemoryorOTP,theaddress

capturedisalignedtoa64-bitboundarywithaddressbits[2:0]equalto0.Whenreadingfrom

theECCbytes,thesebitswillindicatethefailingaddressoftheECClocationassociated

withthefailure.WhenreadinganECCbyte,theECCischeckedagainstthe64databits

theyprotect.

267

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.6FlashCorrectableErrorPositionRegister(FCOR_ERR_POS)

Thisregisterappliestothemainflashbanks.FortheequivalentregisterwhichappliestotheEEPROM

Emulationflashbank(bank7),seeSection5.7.39.

Note:ThebiterrorpositionisonlydetectedduringreadsoftheOTP,themirroredflashimageortheECC

bytes.Singlebiterrorscorrectedduringreadsofthemainmemorywillonlycapturethefailingaddress,

butnotthebitposition.ThebitpositioniscapturedduringerrorswheneitherEOFENorEZFENenablebit

isset.DuringerrorprofilingmodewhenonlyEPENisset,thebitpositionisnotcapturedifacorrectable

errorisdetected.ThisregisterisfrozenwhileeithertheERR_ZERO_FLGortheERR_ONE_FLGbitisset

intheFEDACSTATUSregister.

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,this

registercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Figure5-12.FlashCorrectableErrorPositionRegister(FCOR_ERR_POS)(offset=FFF87018h)

31

16

Reserved

R-0

15

10

9

8

7

0

Reserved

BUS2

TYPE

ERR_POS

R-0

R-u

R-u

R-u

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-19.FlashCorrectableErrorPositionRegister(FCOR_ERR_POS)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

BUS2

Bus2Error

0

Theerrorwasinthemainflash

1

TheerrorwasfromanOTPread

8

TYPE

ErrorType

0

Theerrorwasoneofthe64databits

1

Theerrorwasoneofthe8checkbits

7-0

ERR_POS

Thebitaddressofthesinglebiterror

268

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.7FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)

Thisregisterappliestothemainflashbanks.FortheequivalentregisterwhichappliestotheEEPROM

Emulationflashbank(bank7),seeSection5.7.40.

Alltheseerrorstatusbitscanbeclearedbywritingaonetothebit.Writingazerohasnoeffect.

Thecorrectableerrorsinbits2:0,andFSM_DONEbit24,mustbeclearedbeforetheendoftheirerror

eventserviceroutineorelsetheerroreventwillre-issue.

Figure5-13.FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)

(offset=FFF8701Ch)

31

26

25

24

Reserved

Reserved

FSM_DONE

R-0

R-0

RCP-u

23

20

19

18

17

16

Reserved

COMB2_MAL_

ECC_B2_MAL_

B2_UNC_

B2_COR_

G

ERR

ERR

ERR

R-0

RCP-u

RCP-u

RCP-u

RCP-u

15

13

12

11

10

9

8

Reserved

D_UNC_

ADD_TAG_

ADD_PAR_

Reserved

B1_UNC_

ERR

ERR

ERR

ERR

R-0

RCP-u

RCP-u

RCP-u

R-0

RCP-u

7

4

3

2

1

0

Reserved

D_CORR_

ERR_ONE_

ERR_ZERO_

ERR_PRF_

ERR

FLG

FLG

FLG

R-0

RCP-u

RCP-u

RCP-u

RCP-u

LEGEND:R=Readonly;RCP=ReadandClearinPrivilegeMode;-n=valueafterreset;-u=unchangedvalueoninternalreset,cleared

onpowerup

Table5-20.FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)

FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25

Reserved

0

Reserved

24

FSM_DONE

FlashStateMachineDone

Thisbitissetto1whentheflashstatemachinecompletesaprogramoreraseoperation.

ThisbitwillgenerateaninterruptonVIMchannel61iftheFSM_EVT_ENbitofthe

FSM_ST_MACHINEregisterisset.Thisbitmustbeclearedbywritinga1toitinthe

interruptroutinetocleartheinterruptrequest.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19

COMB2_MAL_G

Bus2CompareMalfunctionFlag.

0

CompareMalfunctiondetectedontheBus2SECDEDindiagnosticmode4ornotin

diagnosticmode

1

CompareMalfunctionnotdetectedontheBus2SECDEDorentereddiagnosticmode4

Thisbitbecomesonewhenenteringdiagnosticmode4,withDIAG_ECC_SELfieldsetto0

or1,andwillbeclearedifdiagnosticmode4triggersanerror.Thisbitwillresettozeroand

willbezerooutsideofdiagnosticmode4.Writingaonewillsetthisbitto1onlyin

diagnosticmode4otherwisewriteshavenoeffect.

18

ECC_B2_MAL_

Bus2ECCMalfunctionErrorFlag

ERR

0

SECDEDmalfunctionnotdetectedonBus2

1

SECDEDmalfunctiondetectedonBus2

ECC_MAL_ERRbitissetifBus2dataisnotcorrectedandasinglebiterrorisseenordata

iscorrectedandasinglebiterrorisnotseen.

269

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table5-20.FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)

FieldDescriptions(continued)

Bit

Field

Value

Description

17

B2_UNC_ERR

Bus2uncorrectableerror

0

Nobus2uncorrectableerrorsweredetected

1

Abus2uncorrectableerrorwasdetected

Twoormorebitsinthedata,orECCfield;orasinglebiterrorintheaddressfieldhave

beenfoundinerror.Addressbiterrorsareconsideredanuncorrectableerror.The

FUNC_ERR_ADDregistershouldcontaintheBus2errorlocation.Thiserrorwillgenerate

anESMgroup3channel7event.

16

B2_COR_ERR

Bus2CorrectableError

0

Nobus2correctableerrorwasdetected

1

Abus2correctableerrorwasdetected

Onebitinthedata,orECCfieldhasbeenfoundinerror.EithertheERR_ONE_FLAGor

ERR_ZERO_FLAGshouldbesetinthisregisteralongwiththisbit.TheFCOR_ERR_ADD

registershouldcontaintheerroraddress,andtheFCOR_ERR_POSregistershouldcontain

thefailingbitposition.ThiserrorwillgenerateanESMgroup1channel6event.

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

D_UNC_ERR

DiagnosticUncorrectableError

Thisbitsetswhendiagnosticmode1discoversamulti-biterrorusingheECC.Thismeans

twoormorebitsinthedata,addressorECCfieldhavebeenfoundinerror.TheECCis

capableofcorrectingasinglebiterrorandthiswouldshowupinbit3D_COR_ERR.The

ECCcanalwaysdetecttwobiterrors.Threeormorebiterrorsmayescapedetectionwith

theECC.Thisbitalsomaysetduringotheruncorrectableerrorsandduringthediagnostic

modelikeaddresstagerrorsandECCmalfunctions.

11

ADD_TAG_ERR

AddressTagRegisterErrorFlag

0

AddressTagRegisterErrornotdetected

1

AddressTagRegisterErrordetected.

Thisbitissetiftheprimaryaddresstaghasahitbuttheduplicateaddresstagdoesnot

matchtheprimaryaddresstag.Thisbitisfunctionalonlywhenpipelinemodeisenabled.

ThiserrorwillcreateanESMgroup3channel7event.

10

ADD_PAR_ERR

AddressParityErrorFlag

0

Noaddressparityerrorwasdetected.

1

Aparityerrorwasdetectedontheincomingaddressbus.

Thefull32bitaddresswillbestoredinFUNC_ERR_ADDregister.Thiserrorwillcreatean

ESMgroup2channel4event.

9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

B1_UNC_ERR

Bus1UncorrectableErrorFlag

0

NoBus1uncorrectableerrorsweredetected

1

Abus1uncorrectabeerrorwasdetected

Twoormorebitsinthedata,orECCfield;orasinglebiterrorintheaddressfieldhave

beenfoundinerror.Addressbiterrorsareconsideredanuncorrectableerror.The

FUNC_ERR_ADDregisterwillcontaintheBus1errorlocation.Thiserrorwillgeneratean

ESMgroup3channel7event.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3

D_CORR_ERR

DiagnosticCorrectableErrorStatusFlag

hisbitsetswhendiagnosticmode1discoversasinglei-biterrorusingheECC.andthe

2

ERR_ONE_FLG

ErroronOneFailStatusFlag

0

Nocorrectableerrorwhereaonereadasazeroonbus2

1

Acorrectableerroroccurredonbus2whereaonereadasazero

ThisbitissetiftheEOFEN(ErroronOneFailEnable)bitissetthen,andonebitinthe

data,orECCfieldwhichshouldhavebeenreadasaone,readasazero.Duringtheread

thebitiscorrectedtoaone.TheFCOR_ERR_ADDregisterwillcontainthebus2error

address,andtheFCOR_ERR_POSregisterwillcontainthefailingbitposition.Thiserror

willgenerateanESMgroup1channel6event.Whenthisbitisset,theB2_CORR_ERRbit

willalsobeset.ThiserrorwillgenerateanESMgroup1channel6event.

270

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table5-20.FlashErrorDetectionandCorrectionStatusRegister(FEDACSTATUS)

FieldDescriptions(continued)

Bit

Field

Value

Description

1

ERR_ZERO_FLG

ErroronZeroFailStatusFlag

0

Nocorrectableerrorsonbus1noranycorrectableerrorsonbus2whereazerowasread

asaone

1

Acorrectableerroroccurredonbus1,oracorrectableerroroccurredonbus2wherea

zerowasreadasaone

ThisbitissetiftheEZFEN(ErroronZeroFailEnable)bitissetandacorrectableerroris

detectedonbus2whereazeroisreadasaoneandcorrectedtobeazero,orifeitherthe

EZFENortheEOFENbitsaresetandanysinglebiterrorisdetectedandcorrectedonbus

1.TheFCOR_ERR_ADDregisterwillcontaintheerroraddress.Iftheerrorwasonbus2,

thentheB2_COR_ERRbitwillalsobesetandtheFCOR_ERR_POSregisterwillcontain

thefailingbitposition.TheFCOR_ERR_POSregisterwillnotindicatethefailingbitposition

forabus1error.ThiserrorwillgenerateanESMgroup1channel6event.

0

ERR_PRF_FLG

ErrorProfilingStatusFlag

0

Errorprofilingisnotenabled,orthenumberofcorrectableerrorshasnotreachedthe

thresholdprogrammedintotheSEC_THRESHOLDregister

1

Errorprofilingisenabledandthenumberofcorrectableerrorshasreachedthethreshold

programmedintotheSEC_THRESHOLDregister

5.7.8FlashUn-CorrectableErrorAddressRegister(FUNC_ERR_ADD)

ThisregisterappliestoECCeventdetectionforthemainflashbanks.Fortheequivalentregisterwhich

appliestotheEEPROMEmulationflashbank(bank7),seeSection5.7.41.

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,(see

Table5-15)thisregistercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Figure5-14.FlashUn-CorrectableErrorAddressRegister(FUNC_ERR_ADD)(offset=FFF87020h)

31

16

UNC_ERR_ADD

R-u

15

3

2

0

UNC_ERR_ADD

B_OFF

R-u

R-u

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-21.FlashUn-CorrectableErrorAddressRegister(FUNC_ERR_ADD)FieldDescriptions

Bit

Field

Value

Description

31-3

UNC_ERR_ADD

Un-correctableErrorAddress

UNC_ERR_ADDrecordstheCPUlogicaladdressofwhichanun-correctableerrorisdetected

bytheECClogicintheCPU.TheUNC_ERR_ADDalsocapturestheerroraddresswhena

addressbusparitymismatchisdetected.Thiserroraddressisfrozenfrombeginupdateduntilit

isreadbytheCPU.Additionalerrorareblockeduntilthisregisterisread.

Thisregistercapturesthefull32bitincomingaddresswhenthereisabusparityerror.Itonly

capturesaddressof22:3formultiplebitECCerrors.Addressparityerrorstakepriorityover

othererrorsthathappeninthesamecycle.

2-0

B_OFF

Byteoffset

SinceECCischeckedon64bitdata,whencheckingmainmemoryorOTP,theaddress

capturedisalignedtoa64-bitboundarywithaddressbits[2:0]equalto0.Whenreadingfromthe

ECCbytes,thesebitswillindicatethefailingaddressoftheECClocationassociatedwiththe

failure.WhenreadinganECCbyte,theECCischeckedagainstthe64databitstheyprotect.

271

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.9FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS)

ThisregisterisusedtodisabletheSECDEDfunctionforoneortwosectorsfromtheEEPROMEmulation

flash(bank7).AnadditionaltwosectorscanhaveSECDEDdisabledbytheuseoftheFEDACSDIS2

register(seeSection5.7.31).

Figure5-15.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS)

(offset=FFF87024h)

31

29

28

27

24

23

21

20

19

16

BankID1_Inverse

Rsvd

SectorID1_inverse

BankID1

Rsvd

SectorID1

R/WP-0

R-0

R/WP-0

R/WP-0

R-0

R/WP-0

15

13

12

11

8

7

5

4

3

0

BankID0_Inverse

Rsvd

SectorID0_inverse

BankID0

Rsvd

SectorID0

R/WP-0

R-0

R/WP-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-22.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS)

FieldDescriptions

Bit

Field

Value

Description

31-29

BankID1_Inverse

ThebankIDinversebitsareusedwiththebankIDbitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

0

IfBankID1=7handBankID1_inverse=0,thenifavalidsectorisselectedbySectorID1

andSectorID1_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID1

28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

SectorID1_inverse

ThesectorIDinversebitsareusedwiththesectorIDbitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID1

23-21

BankID1

ThebankIDbitsareusedwiththebankIDinversebitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

7h

IfBankID1=7handBankID1_inverse=0,thenifavalidsectorisselectedbySectorID1

andSectorID1_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID1

20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

SectorID1

ThesectorIDbitsareusedwiththesectorIDinversebitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID1

15-13

BankID0_Inverse

ThebankIDinversebitsareusedwiththebankIDbitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

0

IfBankID0=7handBankID0_inverse=0,thenifavalidsectorisselectedbySectorID0

andSectorID0_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID0

12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

SectorID0_inverse

ThesectorIDinversebitsareusedwiththesectorIDbitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID0

7-5

BankID0

ThebankIDbitsareusedwiththebankIDinversebitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

7h

IfBankID0=7handBankID0_inverse=0,thenifavalidsectorisselectedbySectorID0

andSectorID0_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID0

4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

SectorID0

0-Fh

ThesectorIDbitsareusedwiththesectorIDinversebitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID0

272

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.10PrimaryAddressTagRegister(FPRIM_ADD_TAG)

Thisregisterisusedtotestthepipelineaddresstagregisters(seeSection5.6.2.5).

Figure5-16.PrimaryAddressTagRegister(FPRIM_ADD_TAG)(offset=FFF87028h)

31

16

PRIM_ADD_TAG[31:16]

R/WP-0

15

4

3

0

PRIM_ADD_TAG[15:4]

0000

R/WP-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;;-n=valueafterreset;

Table5-23.PrimaryAddressTagRegister(FPRIM_ADD)_TAGFieldDescriptions

Bit

Field

Value

Description

31-4

PRIM_ADD_TAG

PrimaryAddressTagRegister

TheprimaryaddresstagregisterselectedviaDIAG_BUF_SELbitsinFDIAGCTRLregister

ismemorymappedhere.(seeSection5.7.26)Thisregistercanonlybewritteninprivileged

modewhendiagnosticmodeisenabledwithDIAG_EN_KEY=0101andDIAGMODE=

101.ThisregisterwillnotupdatewithnewflashdataifDIAG_EN_KEYisnotequalto0101

orDIAGMODEis000or111.Validreadscanoccurinanymode.Theregisterwillclear

whenanaddresstagerrorisfoundandwhenleavingDIAG_MODE5.

3-0

0

Always0000

5.7.11DuplicateAddressTagRegister(FDUP_ADD_TAG)

Thisregisterisusedtotestthepipelineaddresstagregisters(seeSection5.6.2.5).

Figure5-17.DuplicateAddressTagRegister(FDUP_ADD_TAG)(offset=FFF8702Ch)

31

16

DUP_ADD_TAG[31:16]

R/WP-0

15

4

3

0

DUP_ADD_TAG[15:4]

0000

R/WP-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;;-n=valueafterreset;

Table5-24.DuplicateAddressTagRegister(FDUP_ADD)_TAGFieldDescriptions

Bit

Field

Value

Description

31-4

DUP_ADD_TAG

PrimaryAddressTagRegister

TheduplicateaddresstagregisterselectedviaDIAG_BUF_SELbitsinFDIAGCTRL

registerismemorymappedhere.(seeSection5.7.26)Thisregistercanonlybewrittenin

privilegedmodewhendiagnosticmodeisenabledwithDIAG_EN_KEY=0101and

DIAGMODE=101.ThisregisterwillnotupdatewithnewflashdataifDIAG_EN_KEYisnot

equalto0101orDIAGMODEis000or111.Validreadscanoccurinanymode.The

registerwillclearwhenanaddresstagerrorisfoundandwhenleavingDIAG_MODE5.

3-0

0

Always0000

273

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.12FlashBankProtectionRegister(FBPROT)

Figure5-18.FlashBankProtectionRegister(FBPROT)(offset=FFF87030h)

31

16

Reserved

R-0

15

1

0

Reserved

PROTL1DIS

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-25.FlashBankProtectionRegister(FBPROT)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

PROTL1DIS

PROTL1DIS:Level1ProtectionDisabled

Level1ProtectionDisablebit.Settingthisbitdisablesprotectionfromwritingtothe

OTPPROTDISbitsaswellastheSectorEnableregistersFBSEforallbanks.Clearingthis

bitenablesprotectionanddisableswriteaccesstotheOTPPROTDISregisterbitsand

FBSEregister.

0

Level1protectionisdisabled.

1

Level1protectionisenabled.

5.7.13FlashBankSectorEnableRegister(FBSE)

FBSEprovidesoneenablebitpersectorforupto16sectorsperbank.EachbankintheFlashmodule

hasoneFBSEregister.ThebankisselectedviatheBANK[2:0]bitsoftheFMACregister(see

Section5.7.20).AsonlyonebankatatimecanbeselectedbyFMAC,onlytheregisterforthebank

selectedappearsatthisaddress.

Figure5-19.FlashBankSectorEnableRegister(FBSE)(offset=FFF87034h)

31

16

Reserved

R-0

15

0

BSE

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-26.FlashBankSectorEnableRegister(FBSE)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BSE

BankSectorEnable

EachbitcorrespondstoaflashsectorinthebankspecifiedbytheFMACregister.Bit0

correspondstosector0,bit1correspondstosector1,etc.Thesebitscanbesetonlywhen

PROTL1DIS=1andinprivilegemode.

0

Thecorrespondingnumberedsectorisdisabledforprogramoreraseaccess.

1

Thecorrespondingnumberedsectorisenabledforprogramoreraseaccess.

274

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.14FlashBankBusyRegister(FBBUSY)

Figure5-20.FlashBankBusyRegister(FBBUSY)(offset=FFF87038h)

31

16

Reserved

R-0

15

8

7

0

BUSY[7:0]

R/WP-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-27.FlashBankBusyRegister(FBBUSY)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

BUSY[7:0]

BankBusy

EachbitcorrespondstoaFlashbank.

0

Thecorrespondingbankisnotbusy

1

Thecorrespondingbankisnotbusywithastatemachineorbus2operation,orthebankisnot

implemented

275

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.15FlashBankAccessControlRegister(FBAC)

Figure5-21.FlashBankAccessControlRegister(FBAC)(offset=FFF8703Ch)

31

24

23

16

Reserved

OTPPROTDIS

R-0

R/WP-0

15

8

7

0

BAGP

VREADST

R/WP-0

R/WP-Fh

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-28.FlashBankAccessControlRegister(FBAC)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-16

OTPPROTDIS

OTPSectorProtectionDisable.

EachbitcorrespondstoaFlashbank.ThisbitcanbesetonlywhenPROTL1DIS=1andin

privilegemode.

0

ProgrammingoftheOTPsectorisdisabled.

1

ProgrammingoftheOTPsectorisenabled.

15-8

BAGP

0-FFh

BankActiveGracePeriod.

ThesebitscontainthestartingcountvaluefortheBAGPdowncounter.Anyaccesstoagiven

bankcausesitsBAGPcountertoreloadtheBAGPvalueforthatbank.Afterthelastaccessto

thisFlashbank,thedowncounterdelaysfrom0to255prescaledHCLKclockcyclesbefore

puttingthebankintooneofthefallbackpowermodesasdeterminedbytheFBFALLBACK

register.Thisvaluemustbegreaterthan1whenthefallbackmodeisnotACTIVE.

Note:TheprescaledclockusedfortheBAGPdowncounterisaclockdividedby16from

HCLK.

7-0

VREADST

0-FFh

VREADSetup.

VREADisgeneratedbytheFlashpumpandusedforFlashreadoperation.Thebankpowerup

sequencingstartsVREADSTHCLKcyclesafterVREADpowersupplybecomesstable.

Note:ThereisnotaprogrammableBankSleepcounterandStandbycounterregister.The

numberofclockcyclestotransitionfromsleeptostandbyandstandbytoactiveishardcodedin

theFlashwrapperdesign.

276

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.16FlashBankFallbackPowerRegister(FBFALLBACK)

Figure5-22.FlashBankFallbackPowerRegister(FBFALLBACK)(offset=FFF87040h)

31

16

Reserved

R-0505h

15

14

13

4

3

2

1

0

BANKPWR7

Reserved

BANKPWR1

BANKPWR0

R/WP-3h

R/WP-3FFh

R/WP-3h

R/WP-3h

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-29.FlashBankFallbackPowerRegister(FBFALLBACK)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0505h

Donotwritetothesebits

15-14

BANKPWR7

Bank7FallbackPowerMode

0

Banksleepmode

1h

Bankstandbymode

2h

Reserved

3h

Bankactivemode

13-4

Reserved

3FFh

Donotwritetothesebits

3-2

BANKPWR1

Bank1FallbackPowerMode

0

Banksleepmode

1h

Bankstandbymode

2h

Reserved

3h

Bankactivemode

1-0

BANKPWR0

Bank0FallbackPowerMode

0

Banksleepmode

1h

Bankstandbymode

2h

Reserved

3h

Bankactivemode

277

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.17FlashBank/PumpReadyRegister(FBPRDY)

Figure5-23.FlashBank/PumpReadyRegister(FBPRDY)(offset=FFF87044h)

31

24

23

16

Reserved

BANKBUSY[7:0]

R-0

R-1(Unimplementedbanks)orR-0(Implementedbanks)

15

14

8

7

0

PUMPRDY

Reserved

BANKRDY[7:0]

R-1

R-0

R-1

LEGEND:R=Readonly;-n=valueafterreset

Table5-30.FlashPumpAccessControlRegister1(FPAC1)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-16

BANKBUSY[7:0]

Bankbusybits(onebitforeachbank)

0

Thebankisnotbusy.

1

Thebankisbusy,notreadyorthisbankisnotimplemented

Note:AbankisconsideredbusyifitisbeingaccessedbytheTCM,Bus2ortheflashstate

machine

15

PUMPRDY

Flashpumpreadyflag

0

Pumpisnotready(Codemustbeexecutingfromsomewhereotherthaninternalflash)

1

Pumpisreadyforflashaccesses

14-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

BANKRDY[7:0]

Bankreadybits(onebitforeachbank)

0

Flashbankisinthesleeporstandbystate

1

Flashbankisintheactivestate,orthebankisnotimplemented

278

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.18FlashPumpAccessControlRegister1(FPAC1)

Figure5-24.FlashPumpAccessControlRegister1(FPAC1)(offset=FFF87048h)

31

27

26

16

Reserved

PSLEEP

R-0

R/WP-64h

15

1

0

Reserved

PUMPPWR

R-0

R/WP-1

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-31.FlashPumpAccessControlRegister1(FPAC1)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

PSLEEP

PumpSleep.

Thesebitscontainthestartingcountvalueforthechargepumpsleepdowncounter.Whilethe

chargepumpisinsleepmode,thepowermodemanagementlogicholdsthechargepumpsleep

counteratthisvalue.Whenthechargepumpexitssleeppowermode,thedowncounterdelays

from0toPSLEEPpumpsleepdownclockcyclesbeforeputtingthechargepumpintoactivepower

mode.

Note:Pumpsleepdowncounterclockisadivideby2inputofHCLK.Thatis,thereare2*HCLK

cyclesforeveryPSLEEPcountercycle.

15-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

PUMPPWR

FlashChargePumpFallbackPowerMode

0

Sleep(allpumpcircuitsdisabled)

1

Active(allpumpcircuitsactive)

279

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.19FlashPumpAccessControlRegister2(FPAC2)

Figure5-25.FlashPumpAccessControlRegister2(FPAC2)(offset=FFF8704Ch)

31

16

Reserved

R-0

15

0

PAGP

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-32.FlashPumpAccessControlRegister2(FPAC2)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

PAGP

PumpActiveGracePeriod

ThisregistercontainsthestartingcountvalueforthePAGPmodedowncounter.Anyaccessto

flashmemorycausesthecountertoreloadwiththePAGPvalue.Afterthelastaccesstoflash

memory,thedowncounterdelaysfrom0to65535prescaledHCLKclockcyclesbeforeentering

oneofthechargepumpfallbackpowermodesasdeterminedbyPUMPPWRintheFPAC1register.

Note:ThePAGPdowncounterisclockedbythesameprescaledclockastheBAGPdowncounter

whichisadivideby16ofHCLK.

5.7.20FlashModuleAccessControlRegister(FMAC)

Figure5-26.FlashModuleAccessControlRegister(FMAC)[offset=FFF87050h)

31

16

Reserved

R-0

15

3

2

0

Reserved

BANK

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-33.FlashModuleAccessControlRegister(FMAC)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

BANK

BankEnable.

Thesebitsselectwhichbankisenabledforoperationssuchaslocalregisteraccess,OTPsector

access,andprogram/erasecommands.Thesebitsselectonlyonebankatatimefromuptoeight

banksdependingonthespecificdevicebeingused.Forexample,a"000"selectsbank0;"011"

selectsBank3.

Note:BANK[2:0]canidentifyupto8flashbanks.IfBANK[2:0]isselectedforanun-implemented

bankthentheBANK[2:0]willsetitselftothenumberofanimplementedbank.Todetermineifa

bankisimplemented,writethebanknumbertoBANK[2:0]andreadbackthevaluetoseeifwhat

waswrittencanbereadback.

280

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.21FlashModuleStatusRegister(FMSTAT)

Figure5-27.FlashModuleStatusRegister(FMSTAT)(offset=FFF87054h)

31

24

Reserved

R-0

23

16

Reserved

R-0

15

14

13

12

11

10

9

8

Reserved

ILA

Reserved

PGV

Reserved

EV

Reserved

BUSY

R-0

R-0

R-0

.R-0

R-0

R-0

R-0

R-0

7

6

5

4

3

2

1

0

ERS

PGM

INV-DAT

CSTAT

VOLTSTAT

ESUSP

PSUSP

SLOCK

R-0

R-0

R-0

.R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table5-34.FlashModuleStatusRegister(FMSTAT)FieldDescriptions

Bit

Field

Value

Description

31-15

Reserved

0

Readreturns0.Writeshavenoeffect.

14

ILA

IllegalAddress

Whenset,indicatesthatanillegaladdressisdetected.Fiveconditionscansettheillegaladdress

flag.

1.Writingtoahole(un-implementedlogicaladdressspace)withinaflashbank.

2.Writingtoanaddresslocationtoanun-implementedflashspace.

3.InputaddressforwriteisdecodedtoselectadifferentbankfromthebankIDregister.

4.TheaddressrangedoesnotmatchthetypeofFSMcommand.Forexample,theerase_sector

commandmustmatchtheaddressregions.

5.TI-OTPaddressselectedbutCMD_ENinFSM_ST_MACHINEisnotset.

13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

PGV

ProgramVerify

Whenset,indicatesthatawordisnotsuccessfullyprogrammedafterthemaximumallowed

numberofprogrampulsesaregivenforprogramoperation.

11

Reserved

0

Readreturns0.Writeshavenoeffect.

10

EV

EraseVerify

Whenset,indicatesthatasectorisnotsuccessfullyerasedafterthemaximumallowednumberof

erasepulsesaregivenforeraseoperation.DuringEraseverifycommand,thisflagisset

immediatelyifabitisfoundtobe0.

9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

BUSY

Busy

Whenset,thisbitindicatesthataprogram,erase,orsuspendoperationisbeingprocessed.

7

ERS

EraseActive

Whenset,thisbitindicatesthattheflashmoduleisactivelyperforminganeraseoperation.Thisbit

issetwhenerasingstartsandisclearedwhenerasingiscomplete.Itisalsoclearedwhenthe

eraseissuspendedandsetwhentheeraseresumes.

6

PGM

ProgramActive

Whenset,thisbitindicatesthattheflashmoduleiscurrentlyperformingaprogramoperation.This

bitissetwhenprogrammingstartsandisclearedwhenprogrammingiscomplete.Itisalsocleared

whenprogrammingissuspendedandsetwhenprogrammingisresumes.

5

INVDAT

InvalidData

Whenset,thisbitindicatesthattheuserattemptedtoprograma“1”wherea“0”wasalready

present.ThisbitisclearedbytheClearStatuscommand.

281

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table5-34.FlashModuleStatusRegister(FMSTAT)FieldDescriptions(continued)

Bit

Field

Value

Description

4

CSTAT

CommandStatus

OncetheFSMstartsanyfailurewillsetthisbit.Whenset,thisbitinformsthehostthatthe

program,erase,orvalidatesectorcommandfailedandthecommandwasstopped.Thisbitis

clearedbytheClearStatuscommand.Forsomeerrors,thiswillbetheonlyindicationofanFSM

errorbecausethecausedoesnotfallwithintheothererrorbittypes.

3

VOLTSTAT

CoreVoltageStatus

Whenset,thisbitindicatesthatthecorevoltagegeneratorofthepumppowersupplydippedbelow

thelowerlimitallowableduringaprogramoreraseoperation.ThisbitisclearedbytheClearStatus

command.

2

ESUSP

EraseSuspended

Whenset,thisbitindicatesthattheflashmodulehasreceivedandprocessedanerasesuspend

operation.Thisbitremainssetuntiltheeraseresumecommandhasbeenissuedoruntilthe

Clear_Morecommandisrun.

1

PSUSP

ProgramSuspended

Whenset,thisbitindicatesthattheflashmodulehasreceivedandprocessedaprogramsuspend

operation.Thisbitremainssetuntiltheprogramresumecommandhasbeenissuedoruntilthe

Clear_Morecommandisrun.

0

SLOCK

SectorLockStatus

Whenset,thisbitindicatesthattheoperationwashaltedbecausethetargetsectorwaslockedfor

erasingandprogrammingeitherbythesectorprotectbitorbyOTPwriteprotectiondisablebits.

(BitsBSEinFBSEregisterorOTPPROTDISinregisterFBAC).ThisbitisclearedbytheClear

Statuscommand.

NoSLOCKFSMerrorwilloccurifallsectorsinabankeraseoperationaresetto1.Allthesectors

willbecheckedbutnoSLOCKwillbesetifnooperationoccursduetotheSECT_ERASEDbits

beingsettoallones.ASLOCKerrorwilloccurifattemptingtodoasectorerasewitheitherBSEis

clearedorSECT_ERASEDisset

282

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.22EEPROMEmulationDataMSWRegister(FEMU_DMSW)

Figure5-28.EEPROMEmulationDataMSWRegister(FEMU_DMSW)(offset=FFF87058h)

31

0

EMU_DMSW[63:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset

Table5-35.EEPROMEmulationDataMSWRegister(FEMU_DMSW)FieldDescriptions

Bit

Field

Description

31-0

EMU_DMSW

EEPROMEmulationMostSignificantDataWord

Thisregisterisalsousedinthediagnosticmodes1and2.Inthesemodes,thisregistersuppliestheupper

dataforcheckingtheSECDED.

5.7.23EEPROMEmulationDataLSWRegister(FEMU_DLSW)

Figure5-29.EEPROMEmulationDataLSWRegister(FEMU_DLSW)(offset=FFF8705Ch)

31

0

EMU_DLSW[31:0]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset

Table5-36.EEPROMEmulationDataLSWRegister(FEMU_DLSW)FieldDescriptions

Bit

Field

Description

31-0

EMU_DLSW

EEPROMEmulationLeastSignificantDataWord

Thisregistercontainsthelower32bitsofthe64-bitEEPROMemulationdataword.Whenthisregisteris

written,thecorrespondingECCwordisupdatedinFEMU_ECCregister.

Thisregisterisalsousedinthediagnosticmodes1and2.Inthesemodes,thisregistersuppliesthelower

dataforcheckingtheSECDED.

283

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.24EEPROMEmulationECCRegister(FEMU_ECC)

Figure5-30.EEPROMEmulationECCRegister(FEMU_ECC)(offset=FFF87060h)

31

16

Reserved

R-0

15

8

7

0

Reserved

EMU_ECC[7:0]

R-0

R/WP-3h(1)

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset

(1)Seetable.

Table5-37.EEPROMEmulationECCRegister(FEMU_ECC)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7-0

EMU_ECC[7:0]

ThisregistercanbewrittenbytheCPUinanymode.

WheneitherFEMU_DMSWorFEMU_DLSWregisteriswritten,theflashwrapperwillreturnthe

correctECCvaluetothisregister.TheFEMU_ADDRregisterisalsousedinthecalculationwhen

addressisapartoftheECCcalculationandtheaddressmustbewrittenbeforethelast

FEMU_DxSWvalue.

Thisregisterisalsousedinthediagnosticmodes1and2.Inthesemodes,thisregistersupplies

theECCdataforcheckingtheSECDED.Inmode1,thisregisterisfilledwiththedesiredECCand

aftertheDIAG_TRIGissetthisregisterissettotheECCvaluereturnedfromtheSECDED

selectedbyDIAG_ECC_SEL.DIAG_EN_KEYandDIAG_TRIGmustbesettofillthisregisterinthe

diagnosticmodes.WritestoFEMU_DxSWwillnotaffectthisregisterindiagnosticmodes1or2.

Inmode2,thisregisterisfilledwiththedesiredECCandaftertheDIAG_TRIGissetthisregisteris

settothesyndromevaluereturnedfromtheSECDEDselectedbyDIAG_ECC_SEL.

ThisregisterisonlyavailablewhenthemoduleisconfiguredtousetheECClogic;otherwise,itisa

reservedregister.

284

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.25EEPROMEmulationAddressRegister(FEMU_ADDR)

Figure5-31.EEPROMEmulationAddressRegister(FEMU_ADDR)(offset=FFF87068h)

31

22

21

16

Reserved

EMU_ADDR[21:16]

R-0

R/WP-0

15

3

2

0

EMU_ADDR[15:3]

Reserved

R/WP-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset

Table5-38.EEPROMEmulationAddressRegister(FEMU_ADDR)FieldDescriptions

Bit

Field

Value

Description

31-22

Reserved

0

Reserved;writeshavenoaffect.Itisnotnecessarytomasktheseuppertenbitswhen

writingtheaddressofbank7locations(0xF002xxxx),howeverthesebitsarenotusedin

calculatingtheECCvalueandwillreadbackaszero.

21-3

EMU_ADDR

0-7FFFFh

EEPROMEmulationAddress

Thisregistercontainstheupper19bitsofthe83-bitdatausedtocalculatetheECC.When

thisregisteriswritten,thecorrespondingECCwordisupdatedinFEMU_ECCregister.

Thisregisterisalsousedinthediagnosticmodes1and2.Inthesemodes,thisregister

suppliestheaddressbits21:3forcheckingtheSECDED.

2-0

Reserved

0

Reserved;writeshavenoaffect.ThelowerthreebitsoftheCPUaddressarenotusedinthe

ECCcalculationtoalignthedataona64-bitboundary.Thesebitswillreadbackaszero.

285

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.26DiagnosticControlRegister(FDIAGCTRL)

SettheDIAG_MODEandtheDIAG_EN_KEYfirstbeforesettinguptheotherregisterstoblocktheother

registersfromcausingafalseerror.ThefinalwriteshouldsettheDIAG_TRIGregistertoactivatethetest.

Runningoutoframwillpreventproblemswiththediagnostictestcorruptingtheflashaccessinsomeof

themodes.

ThisregisterispresentonlywhenSIL3_config=1,otherwise,thisisanunimplementedlocation.Reads

willreturnzeros;writesdonothingbutnoaddresserrorwillbegenerated.

Figure5-32.DiagnosticControlRegister(FDIAGCTRL)(offset=FFF8706Ch)

31

25

24

23

20

19

16

Reserved

DIAG_TRIG

Reserved

DIAG_EN_KEY

R-0

R/WP-0

R-0

R/WP-Ah

15

14

12

11

10

9

8

7

3

2

0

Rsvd

DIAG_ECC_

Reserved

DIAG_BUF_

Reserved

DIAGMODE

SEL

SEL

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset

Table5-39.DiagnosticControlRegister(FDIAGCTRL)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Reserved

24

DIAG_TRIG

DiagnosticTrigger

Diagnostictriggeristhefinalqualifierforthediagnosticresult.Aftersettingallthe

otherdiagnosticregistervalues,theDIAG_TRIGissetto1.Thiswillactivatethe

diagnosticlogicforoneaccessandthenautomaticallycleartheDIAG_TRIGvalue.

DIAG_EN_KEYandDIAGMODEmustbesetatleastonecyclebeforesetting

DIAG_TRIG.

Thisbitalwaysreadsaszero.

23-20

Reserved

0

Reserved

19-16

DIAG_EN_KEY

DiagnosticEnableKey

5h

Diagnosticmodeenabled

Allothervalues

Diagnosticmodedisabled

15

Reserved

0

Reserved

14-12

DIAG_ECC_SEL

DiagnosticSECDEDSelect

0

SelectSECDED0fordiagnostictesting

1h

SelectSECDED1fordiagnostictesting

2h

SelectSECDED2fordiagnostictesting(256bitwidewordsonly)

3h

SelectSECDED3fordiagnostictesting(256bitwidewordsonly

4h

SelectBUS2SECDEDfordiagnostictesting

5h

SelectFEESECDEDfordiagnostictesting(SameECClogicasBUS2butsetsFEE

registers)

6h-7h

Reserved

11-10

Reserved

0

Reserved

286

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table5-39.DiagnosticControlRegister(FDIAGCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

9-8

DIAG_BUF_SEL

DiagnosticBufferSelect

0

TheDIAG_BUF_SELselectstheInstructionorDatabuffertoreadorwritewhen

accessingtheFPRIM_ADD_TAGandFDUP_ADD_TAGregisters.Theaddresstags

consistsofmatchingprimaryandduplicateaddresstagregisters.Alltheprimary

addresstagregistersarememorymappedtoacommonaddress(seeSection5.7.10)

andareselectedbyDIAG_BUF_SEL.Thesameoccursfortheduplicateaddress.

(seeSection5.7.11).Bit0selectsadatabufferifhighandaninstructionbufferiflow.

Bits1indicatethebuffernumber.

DIAG_BUF_SELENCODING:

Buffer

Inst=0

Number

Data=1

Bits1

Bit0

Buffer

0

0

InstructionBuffer0

0

1

DataBuffer0

1

0

InstructionBuffer1

1

1

DataBuffer1

7-4

Reserved

0

Reserved

2-0

DIAGMODE

DiagnosticMode

0

Diagnosticmodedisabled.ThisisthesameasDIAG_EN_KEYisnotequalto5h.

1h

DiagnosticECCdatacorrectionmode(seeSection5.6.2.1)

2h

DiagnosticECCsyndromereportingmode(seeSection5.6.2.2)

3h

ECCmalfunctiontestmode1(SameDatamode)(seeSection5.6.2.3)

4h

ECCmalfunctiontestmode2(InvertedDatamode)(seeSection5.6.2.4)

5h

Addresstagregisterdiagnosticmode(seeSection5.6.2.5)

6h

Reserved

7h

ECCDataCorrectionDiagnostic(seeSection5.6.2.6)

287

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.27UncorrectedRawDataHighRegister(FRAW_DATAH)

Figure5-33.UncorrectedRawDataHighRegister(FRAW_DATAH)(offset=FFF87070h)

31

0

RAW_DATA[63:32]

R/WP-u

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset;-u=Unchangedvalueoninternalreset,

clearedonpowerup

Table5-40.UncorrectedRawDataHighRegister(FRAW_DATAH)FieldDescriptions

Bit

Field

Description

31-0

RAW_DATA[63:32]

UncorrectedRawData

Thisregistercontainstheupper32bitsofthe64-bituncorrectedrawdatapassedintotheSECDEC.

Thisregistercapturestheuncorrecteddatapassedwheneitheran‘errorononefail’oran‘erroron

zerofail’oramulti-biterrorisdetected.Theregisterisfrozenuntiltherespectiveerrorstatusflagin

FEDACSTATUSisclearedbyCPU.Thisregisterdoesnotupdateiftheerrorwasfoundwhileusing

pipelinebufferdata.

AnECCmalfunctionerrorwillnotsavethecorrectdataintotheFRAW_xregistersbutitwillfreezethe

registerfromfurtherupdates.

IfbothSECDEDsdetectanyoneofthecorrectableerrorsatthesametimethenonlytheuncorrected

datapassedintoSECDED0iscaptured.Thecorrespondingerroraddressisalsosavedinto

FCOR_ERR_ADDregister.

Thisregisterisusedinthepipelinebufferparitydiagnosticmode(DIAG_MODE=6).Thisdiagnostic

modechecksthelogicthatcomparesthestoredpipelinebufferparityagainstthestoredpipelinebuffer

data.Diagmode6willreplacethestoredpipelinebufferdatawithFRAW_DATAHandFRAWDATAL.

ItwillalsoreplacethestoredpipelineparitywithFRAW_ECC.WhentheDIAG_TRIGissetituses

thesereplacementregisterstoexercisethecomparelogictoseeifitfunctionscorrectly.

ThisregisterisloadedwiththecurrentreaddatawhentheECCMalfunctionlogicdetectsanerror.

ThisregisterwillchangeduringanECCx_MAL_ERRerrorindiagnosticmode3or4butitwillcontain

nousefulinformation.

ThisregistercanalsobeupdatedbytheFMC,whennotfrozen,byotherdiagnosticmodesthattrigger

anECCerror.

NOTE:RawDataandRawECCregisterscanbeloadedwithdiagnostic

valuesonlyindiagnosticmodes1through6with

DIAG_EN_KEY=0101.Thesemodesmustbesetforatleastone

clockcyclebeforewritingtoanyFRAW*register.

288

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.28UncorrectedRawDataLowRegister(FRAW_DATAL)

Figure5-34.UncorrectedRawDataLowRegister(FRAW_DATAL)[offset=FFF87074h)

31

0

RAW_DATA[31:0]

R/WP-u

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;-n=valueafterreset-u=Unchangedvalueoninternalreset,

clearedonpowerup

Table5-41.UncorrectedRawDataLowRegister(FRAW_DATAL)FieldDescriptions

Bit

Field

Description

31-0

RAW_DATA[31:0]

UncorrectedRawData.SameasFRAW_DATAHbutstoreslower32bits.

Thisregisterisusedduringtheaddresstagdiagnostictest,DIAG_MODE=5,toreplacetheaddress

busbits22:2.

Duringdiagnosticmode6,onlythisregisterisusedandnottheFRAW_DATAHregisterifthedeviceis

configuredfora32-bitdatabus.

289

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.29UncorrectedRawECCRegister(FRAW_ECC)

Figure5-35.UncorrectedRawECCRegister(FRAW_ECC)(offset=FFF87078h)

31

16

Reserved

R-0

15

9

8

7

0

Reserved

PIPE

RAW_ECC[7:0]

BUF

R-0

RC-0

R/WD-u

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegemode;C=Clearbywritinga1;-n=valueafterreset-u=Unchanged

valueoninternalreset,clearedonpowerup

Table5-42.UncorrectedRawECCRegister(FRAW_ECC)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Reserved

8

PIPEBUF

Errorcamefrompipelinebufferhit

Whenthisbitisaone,latesterrorcamefromapipelinebufferhitandtheFRAW_DATH,

FRAW_DATL,andRAW_ECCfieldswillnotcontaininformationthatmatchestheerroraddressnor

errorstatusbits.ThisbitisclearedwhentheRAW_ECCfieldisupdatedwithnewvalidinformation

orbywritingaonetothisbit.

7-0

RAW_ECC[7:0]

UncorrectedRawECC

ThisregistercontainstheuncorrectedECCdatapassedintotheSECDEC.Thisregistercaptures

theuncorrecteddatapassedwheneitheranerrorononefailorerroronzerofailisdetected.The

registerisfrozenuntiltherespectiveerrorstatusflagisclearedbyCPU.Thisregisterdoesnot

updateiftheerrorwasfoundwhileusingpipelinebufferdata.

Intheeventofanon-diagnosticECCmalfunctionerrorevent,theFRAW_xregistersarefrozenbut

willcontainuselessdata.TheywillbeunfrozenwhentheECC_MAL_ERRflagbitiscleared..

Secondly,thisregisterisusedinthepipelinebufferparitydiagnosticmode(DIAG_MODE=6).Here

itreplacesthepipelineparitydatawiththeFRAW_ECCvalueandthebufferdataisreplacedwith

thedataintheFRAW_DATAHandFRAW_DATALregisters.

Thirdly,thisregisterisloadedwiththecurrentECCdatawhentheECCMalfunctionlogicdetectsan

error.TheregisterchangesduringanECCx_MAL_ERRerrorindiagnosticmode3or4,butitwill

containnousefulinformation.

NOTE:RawDataandRawECCregisterscanloadedwithdiagnostic

valuesonlyinauseddiagnosticmodewith

DIAG_EN_KEY=0101.Thismodemustbesetforatleastone

clockcyclebeforewritingtoanyFRAW*register.

290

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.30ParityOverrideRegister(FPAR_OVR)

ThisregisterispresentonlywhenSIL3_config=1,Otherwisethisisunimplementedlocation.Readswill

returnzeros;writesdonothingandnoaddresserrorwillbegenerated.

Figure5-36.ParityOverrideRegister(FPAR_OVR)(offset=FFF8707Ch)

31

17

16

Reserved

BNK_INV_

PAR

R-0

R/WP-0

15

12

11

9

8

7

0

BUS_PAR_DIS

PAR_OVR_KEY

ADD_INV_

DAT_INV_PAR

PAR

R/WP-5h

R/WP-2h

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-43.ParityOverrideRegister(FPAR_OVR)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Reserved

16

BNK_INV_PAR

BufferInvertParity

WhenthisvalueisoneandPAR_OVR_KEYis‘101’thenthecurrentsystemparitysignal

SYS_ODD_PARITYisinvertedwhendoingbankparitycalculations.Thiswillgenerateparityerrors

andcauseinterruptsignalstobegenerated.Whenzero,theSYS_ODD_PARITYvalueisused.

ThisbitisonlyimplementedforparityconfigurationsandisreservedforECCdevices.

15-12

BUS_PAR_DIS

DisableBusParity

Whenthisvalueis“1010”,theaddressbusparityerrorandbufferparityerroraredisabledandno

checkingisdoneandnoeventsaregenerated.Anyothervaluewillenabletheparitycheckingon

theAddressbusandreaddatabus.Thereaddataparityisneverdisabledfromthismodule.

11-9

PAR_OVR_KEY

Whenthisvalueis“101”,theselectedADD_INV_PARandDAT_INV_PARfieldswillbecome

active.Anyothervaluewillcausethemoduletousetheglobalsystemparitybitinthesystem

registerDEVCR1.

8

ADD_INV_PAR

AddressOddParity

ThisbitisactiveonlywhenPAR_OVR_KEY=‘101’.WhenADD_INV_PARisone,theincoming

addressbuswillinvertthesystemsignalSYS_ODD_PARITYforparitycalculations.Thiswillcause

parityerrorsandgenerateinterrupterrorsignals.WhenzeroitwillusetheSYS_ODD_PARITY

value.ThisbitissettotheSYS_ODD_PARsignalvalueonreset.

7-0

DAT_INV_PAR

DataOddParity

ThisbyteisactiveonlywhenPAR_OVR_KEY=‘101’.WhenaDATA_INV_PARbitisone,the

outputreaddatawillinvertthesystemsignalSYS_ODD_PARITYforparitycalculations.Thiswill

causeparityerrorsandgenerateinterruptsignals.WhenzeroitwillusetheSYS_ODD_PARITY

value.Thisbytecansupportuptoa64bitdatabusbutwhenthedevicehasa32bitbus,bits7:4

arereserved.

Bit0affectsreadbusbits7:0,Bit1affectsreadbusbits15:8andsoon.Eachactivebitofthisfield

issettotheSYS_ODD_PARsignalvalueonreset.

TheDAT_INV_PARisusedintheparityforthepipelinebufferlogicandforthereaddatabustothe

CPU.

WhentheECClogicisintheCPU(CONF_TYPE=5)andSIL3isactive,thisfieldbecomesthe

ECCcorruptingvalueforSIL3diagnosticmode7.(Startingwithversion1.0.0.0)

Indiagnosticmode7theFPAR_OVRshouldbesetto00005Axxhtoallowwritestothe

DAT_INV_PARfield.Thisfieldshouldbewrittenbeforeenteringdiagnosticmode7.

291

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.31FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS2)

ThisregisterisusedtodisabletheSECDEDfunctionforoneortwosectorsfromtheEEPROMEmulation

flash(bank7).AnadditionaltwosectorscanhaveSECDEDdisabledbytheuseoftheFEDACSDIS

register.seeSection5.7.9.

Figure5-37.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS2)

(offset=FFF870C0h)

31

29

28

27

24

23

21

20

19

16

BankID3_Inverse

Rsvd

SectorID3_inverse

BankID3

Rsvd

SectorID3

R/WP-0

R-0

R/WP-0

R/WP-0

R-0

R/WP-0

15

13

12

11

8

7

5

4

3

0

BankID2_Inverse

Rsvd

SectorID2_inverse

BankID2

Rsvd

SectorID2

R/WP-0

R-0

R/WP-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-44.FlashErrorDetectionandCorrectionSectorDisableRegister(FEDACSDIS2)

FieldDescriptions

Bit

Field

Value

Description

31-29

BankID3_Inverse

ThebankIDinversebitsareusedwiththebankIDbitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

0

IfBankID3=7handBankID3_inverse=0,thenifavalidsectorisselectedbySectorID3

andSectorID3_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID3

28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

SectorID3_inverse

ThesectorIDinversebitsareusedwiththesectorIDbitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID3

23-21

BankID3

ThebankIDbitsareusedwiththebankIDinversebitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

7h

IfBankID3=7handBankID3_inverse=0,thenifavalidsectorisselectedbySectorID3

andSectorID3_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID3

20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

SectorID3

ThesectorIDbitsareusedwiththesectorIDinversebitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID3

15-13

BankID2_Inverse

ThebankIDinversebitsareusedwiththebankIDbitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

0

IfBankID2=7handBankID2_inverse=0,thenifavalidsectorisselectedbySectorID2

andSectorID2_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID2

12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

SectorID2_inverse

ThesectorIDinversebitsareusedwiththesectorIDbitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID2

7-5

BankID2

ThebankIDbitsareusedwiththebankIDinversebitstoselectthebankforwhichasector

isdisabled.Theonlybankthatsupportssectordisableisbank7.

7h

IfBankID2=7handBankID2_inverse=0,thenifavalidsectorisselectedbySectorID2

andSectorID2_inversethatsectorwillhaveECCcheckingdisabled

other

NosectorisdisabledbydisableID2

4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

SectorID2

0-Fh

ThesectorIDbitsareusedwiththesectorIDinversebitstodeterminewhichsectoris

disabled.IfthesectorIDbitsarenotpointingtoavalidsector(0-3)orthesectorIDinverse

bitsarenotaninverseofthesectorIDbits,thennosectorisdisabledbydisableID2

292

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.32FSMRegisterWriteEnable(FSM_WR_ENA)

Figure5-38.FSMRegisterWriteEnable(FSM_WR_ENA)(offset=FFF87288h)

31

16

Reserved

R-0

15

3

2

0

Reserved

WR_ENA

R-0

R/WP-2h

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-45.FSMRegisterWriteEnable(FSM_WR_ENA)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

WR_ENA

FlashStateMachineWriteEnable

5h

Thisregistermustcontain“101”inordertowritetoanyotherregisterintherange

FFF87200htoFFF872FFh.ThisisthefirstregistertobewrittenwhensettinguptheFSM.

Allothervalues

Forallothervalues,theFSMregisterscannotbewritten.

5.7.33FSMSectorRegister(FSM_SECTOR)

Figure5-39.FSMSectorRegister(FSM_WR_ENA)(offset=FFF872A4h)

31

16

SECT_ERASED[16:0]

R/WP-0

15

0

Reserved

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Thisisabankedregister.Aseparateregisterisimplementedforeachbank,buttheyalloccupythesame

address.ThecorrectbankmustbeselectedintheFMACresgisterbeforereadingorwritingthisregister.

SeeSection5.7.20.

Table5-46.FSMRegisterWriteEnable(FSM_WR_ENA)FieldDescriptions

Bit

Field

Value

Description

31-16

SECT_ERASED[16:0]

SectorsErased

Thereisonebitforeachsector.Bit16correspondstosector0,bit17correspondstosector1,

andsoon.Afterbankerase,thebitcorrespondingtoeachsectorwhichiserasedwillbe

changedfrom0to1.

0

Duringbankerase,eachsectorwillbeerased.

1

Eachsectorwillnotbeerased.

15-0

Reserved

0

Thesebitsareusedbythestatemachineduringbankerase.Donotwritetothesebits.

293

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.34EEPROMEmulationConfigurationRegister(EEPROM_CONFIG)

Figure5-40.EEPROMEmulationConfigurationRegister(EEPROM_CONFIG)(offset=FFF872B8h)

31

20

19

16

Reserved

EWAIT

R-0

R/WP-1h

15

9

8

7

0

Reserved

AUTOSUSP_EN

AUTOSTART_GRACE

R-0

R/WP-0

R/WP-2h

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-47.EPROMEmulationConfigurationRegister(EEPROM_CONFIG)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

EWAIT

EEPROMWaitstateCounter

ThisregisterwillreplacetheRWAITcountintheEEPROMregister.Thesameformulasthat

applytoRWAITwillapplytoEWAITintheEEPROMbank.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

AUTOSUSP_EN

AutoSuspendEnable

0

AutoSuspendDisabled

1

AutoSuspendEnabled

Theauto-suspendwillbeginwhentheCPUorBus2attemptstoaccessabankwithan

activeandsuspendableFSMoperation.IfthishappenstheFSMwillautomaticallybe

issuedasuspendcommandandexitfromtheFSM.Itwillthendotheaccess.Afterthe

access,theFMCwillwaitforatimedeterminedbytheAutostart_gracefieldbeforeissuing

theFSMresumecommand.

7-0

AUTOSTART_GRACE

Auto-suspendStartupGracePeriod

1

ThevalueinthisregisterdetermineshowmanycyclestheFMCwillwaitafterthelastCPU

orBus2accessbeforeissuingtheFSMresumecommand.

0

TheFMCwillwait16HCLKperiodsforeachcountintheAUTOSTART_GRACEfield.A

valueof2willwaitfor32periodsafterthelastaccess.Eachaccesswillresetthecounterto

theAUTOSTART_GRACEvalue*16.

294

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.35EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)

ThisregistercontrolsECCparitydetection.

Figure5-41.EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)

(offset=FFF87308h)

31

24

Reserved

R-5h

23

20

19

16

Reserved

EE_EDACMODE

R-0

R/WP-Ah

15

10

9

8

Reserved

EE_EOFEN

EE_EZFEN

EE_EPEN

R-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

0

Reserved

EE_ALL1_OK

EE_ALL0_OK

EE_EDACEN

R-0

R/WP-0

R/WP-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-48.EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)

FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

050h

Readreturns0.Writeshavenoeffect.

19-16

EE_

ErrorCorrectionMode.

EDACMODE

5h

Detectiononlymode

Note:Indetectiononlymodesinglebiterrorswillnotbecorrected,butwillbetreatedas

uncorrectableerrors.Thesinglebiterrorflagsandprofilingmodearedisabled.Detection

onlymodehastheadvantagethatatriplebiterrorwillbedetectedandnotmistakenfora

singlebiterrorandmis-corrected.

AllOtherValues

Singlebiterrorsarecorrectedandmulti-bitoraddresserrorsaredetected

Note:ItisrecommendedtoleavetheEE_EDACMODEfieldas"1010"toguardagainst

softerorsfromflippingEE_EDACMODEtoadetectiononly.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10

EE_EOFEN

EEPROMEmulationEventonacorrectableOne'sFailEnablebit

0

NoESMeventwillbegeneratedonasinglebiterrorwhenaonereadsasazeroandis

corrected

1

AnESMgroup1channel35eventwillbegeneratedonasinglebiterrorwhenaone

readsasazeroandiscorrected

9

EE_EZFEN

EEPROMEmulationEventonacorrectableZero'sFailEnablebit

0

NoESMeventwillbegeneratedonasinglebiterrorwhenazeroreadsasaoneandis

corrected

1

AnESMgroup1channel35eventwillbegeneratedonasinglebiterrorwhenazero

readsasaoneandiscorrected

8

EE_EPEN

EEPROMEmulationErrorProfilingEnable.

0

Errorprofilingisdisabled.

1

Errorprofilingisenabled.

AnESMgroup1channel35eventwillbegeneratedwhennumberofcorrectablebit

errorsdetectedandcorrectedhasreachedthethresholdvaluedefinedintheEE_CTRL2

register.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

295

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table5-48.EEPROMEmulationErrorDetectionandCorrectionControlRegister1(EE_CTRL1)

FieldDescriptions(continued)

Bit

Field

Value

Description

5

EE_ALL1_OK

EEPROMEmulationAllOneConditionValid.

0

Oneconditionvalidisdisabled.

Readingofanerasedlocation(64databitsandthecorresponding8ECCbitsareall

ones)willgenerateECCerrors.Theerrorcounterforprofilingwillincrementifallones

aredetected.

1

Oneconditionvalidisenabled.

Readingofanerasedlocation(64databitsandthecorresponding8ECCbitsareall

ones)willNOTgenerateECCerrors.TheerrorcounterforprofilingwillNOTincrementif

allonesaredetected.

4

EE_ALL0_OK

EEPROMEmulationAllZeroConditionValid.

0

Zeroconditionvalidisdisabled.

Readingofallzeros(64databitsandthecorresponding8ECCbitsareallzeros)will

generateECCerrors.Theerrorcounterforprofilingwillincrementifallzerosare

detected.

1

Zeroconditionvalidisenabled.

Readingofallzeros(64databitsandthecorresponding8ECCbitsareallzeros)will

NOTgenerateECCerrors.TheerrorcounterforprofilingwillNOTincrementifallzeros

aredetected.

3-0

EE_EDACEN

EEPROMEmulationErrorDetectionandCorrectionEnable

5h

ErrorDetectionandCorrectionisdisabled

AllOtherValues

ErrorDetectionandCorrectionisenabled

Note:ItisrecommendedtoleavetheEE_EDACENfieldas"1010"toguardagainstsoft

erorsfromflippingtheEE_EDACENtoadisabledstate.

296

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.36EEPROMEmulationErrorCorrectionandCorrectionControlRegister2

(EE_CTRL2)

Figure5-42.EEPROMEmulationErrorCorrectionandCorrectionControlRegister2(EE_CTRL2)

(offset=FFF8730Ch)

31

16

Reserved

R-0

15

0

EE_SEC_THRESHOLD

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-49.EEPROMEmulationErrorCorrectionControlRegister2(EE_CTRL2)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

EE_SEC_THRESHOLD

0-FFFFh

EEPROMEmulationSingleErrorCorrectionThreshold

ThisregistercontainsthethresholdvaluefortheSEC(singleerrorcorrection)

occurrencesbeforeasingleinterruptrequestisgenerated.Athresholdofzero

disablesthethresholdsothatitnevertriggerstheprofileinterrupt.

5.7.37EEPROMEmulationCorrectableErrorCountRegister(EE_COR_ERR_CNT)

Figure5-43.EEPROMEmulationErrorCorectableErrorCountRegister(EE_COR_ERR_CNT)

(offset=FFF87310h)

31

16

Reserved

R-0

15

0

EE_ERRCNT

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegeMode;-n=valueafterreset

Table5-50.EEPROMEmulationCorrectableErrorCountRegister(EE_COR_ERR_CNT)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

EE_ERRCNT

0-FFFFh

SingleErrorCorrectionCount

ThisregistercontainsthenumberofSEC(singleerrorcorrection)occurrences.

Writinganyvaluetothisregisterresetsthecountvaluetozero.Thecounterresetsto

zerowhenitincrementstobeequaltothesingleerrorcorrectionthreshold.This

registeronlyincrementswhenprofilingmodeisenabled.Thisregisterisnotaffected

bytheEE_ZERO_ENorEE_ONE_ENerrorcontrolbitsintheEE_CTRL1register.

297

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.38EEPROMEmulationCorrectableErrorAddressRegister(EE_COR_ERR_ADD)

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,

(seeTable5-15)thisregistercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Figure5-44.EEPROMEmulationCorrectableErrorAddressRegister(EE_COR_ERR_ADD)

(offset=FFF87314h)

31

16

COR_ERR_ADD

R-u

15

3

2

0

COR_ERR_ADD

B_OFF

R-u

R-u

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-51.EEPROMEmulationCorrectableErrorAddressRegister(EE_COR_ERR_ADD)

FieldDescriptions

Bit

Field

Value

Description

31-3

COR_ERR_ADD

0-1FFFFFFFh

CorrectableErrorAddress

COR_ERR_ADDrecordstheCPUlogicaladdressofwhichacorrectableerroris

detectedbytheECClogic.Thiserroraddressisfrozenfrombeginupdateduntilit

isreadbytheCPU.Additionalerrorareblockeduntilthisregisterisread.

2-0

B_OFF

0-7h

Byteoffset

SinceECCischeckedon64bitdata,whencheckingmainmemoryorOTP,the

addresscapturedisalignedtoa64-bitboundarywithaddressbits[2:0]equalto0.

WhenreadingfromtheECCbytes,thesebitswillindicatethefailingaddressofthe

ECClocationassociatedwiththefailure.WhenreadinganECCbyte,theECCis

checkedagainstthe64databitstheyprotect.

298

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

5.7.39EEPROMEmulationCorrectableErrorPositionRegister(EE_COR_ERR_POS)

ThebitpositioniscapturedduringerrorswheneitherEE_EOFENorEE_EZFENenablebitisset.During

errorprofilingmodewhenonlyEE_EPENisset,thebitpositionisnotcapturedifacorrectableerroris

detected.ThisregisterisfrozenwhileeithertheEE_ERR_ZERO_FLGortheEE_ERR_ONE_FLGbitis

setintheEE_EDACSTATUSregister.

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,this

registercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Figure5-45.EEPROMEmulationCorrectableErrorPositionRegister(EE_COR_ERR_POS)

(offset=FFF87318h)

31

16

Reserved

R-0

15

8

7

0

Reserved

TYPE

EE_ERR_POS

R-0

R-u

R-u

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-52.EEPROMEmulationCorrectableErrorPositionRegister(EE_COR_ERR_POS)

FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

TYPE

ErrorType

0

Theerrorwasoneofthe64databits

1

Theerrorwasoneofthe8checkbits

7-0

EE_ERR_POS

0-FFh

Thebitaddressofthesinglebiterror

299

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.40EEPROMEmulationErrorStatusRegister(EE_STATUS)

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,(see

Table5-15)thisregistercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Alltheseerrorstatusbitscanbedeactivatedbywritingaonetothebit.Writingazerohasnoeffect.

Bits0to3showcorrectableerrorswhilebits4to12showuncorrectableerrors.Whentheuncorrectable

errorsaretriggered,thecurrentaddressisstoredintheEE_UNC_ERR_ADDregister.

TheseerrorbitsarenotsetwhiletheFMCisinthesuspendmodebuttheycanbeclearedinsuspendby

writing1stothebits.BysettingtheSUSP_IGNRbitto‘1’theseerrorbitscanbesetinsuspendmode

(seeTable5-15).

Figure5-46.EEPROMEmulationErrorStatusRegister(EE_STATUS)(offset=FFF8731Ch)

31

24

Reserved

R-0

23

16

Reserved

R-0

15

13

12

11

9

8

Reserved

EE_D_UNC_

Reserved

EE_UNC_

ERR

ERR

R-0

RCP-u

R-0

RCP-u

7

6

5

4

3

2

1

0

Reserved

EE_CMG

Reserved

EE_CME

EE_D_CORR_

EE_ERR_

EE_ERR_

EE_ERR_

ERR

ONE_FLG

ZERO_FLG

PRF_FLG

R-0

R-0

R-0

R-0

RCP-u

RCP-u

RCP-u

RCP-u

LEGEND:R=Readonly;RCP=ReadandClearinPrivilegeMode;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedon

powerup

Table5-53.EEPROMEmulationErrorStatusRegister(EE_STATUS)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readsreturn0.Writeshavenoeffect.

12

EE_D_UNC_ERR

DiagnosticModeUncorrectableErrorStatusFlag

0

Nouncorrectableerrorwasdetectedindiagnosticmode1

1

Anuncorrectableerrorwasdetectedindiagnosticmode1.Thismeanstwoormorebitsin

thedataorECCfieldhavebeenfoundinerror,oroneormorebitsintheaddresshave

beenfoundinerror.

11-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8

EE_UNC_ERR

EEPROMEmulationUncorrectableErrorFlag

0

Nouncorrectableerrorsdetectedinbank7

1

Anuncorrectableerrorwasdetectedinbank7

7

Reserved

0

Readsreturn0.Writeshavenoeffect.

6

EE_CMG

EEPROMEmulationCompareMalfunctionGood

0

Nouncorrectableerrorwasdetected

1

Anuncorrectableerrorwasdetected

5

Reserved

0

Readsreturn0.Writeshavenoeffect.

4

EE_CME

3

EE_D_COR_ERR

DiagnosticCorrectableErrorFlag

0

Nocorrectableerrorwasdetected

1

Acorrectableerrorwasdetected

300

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table5-53.EEPROMEmulationErrorStatusRegister(EE_STATUS)FieldDescriptions(continued)

Bit

Field

Value

Description

2

EE_ERR_ONE_FLG

ErroronOneFailErrorFlag

0

Nocorrectableerrorwasdetected

1

Acorrectableerrorwasdetected

1

EE_ERR_ZERO_FLG

ErroronZeroFailErrorFlag

0

Nocorrectableerrorwasdetected

1

Acorrectableerrorwasdetected

0

EE_ERR_PRF_FLG

ErrorProfilingErrorFlag

0

Nocorrectableerrorwasdetected

1

Acorrectableerrorwasdetected

5.7.41EEPROMEmulationUn-CorrectableErrorAddressRegister(EE_UNC_ERR_ADD)

Duringemulationmode,thisaddressisfrozenevenwhenread.BysettingtheSUSP_IGNRbit,(see

Table5-15)thisregistercanbeun-frozeninemulationmode.

Thisregisterisnotchangedwiththeresetsignalandcontainsunknowndataatpowerup.

Figure5-47.EEPROMEmulationUn-CorrectableErrorAddressRegister(EE_UNC_ERR_ADD)

(offset=FFF87320h)

31

16

UNC_ERR_ADD

R-u

15

3

2

0

UNC_ERR_ADD

B_OFF

R-u

R-u

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-54.EEPROMEmulationUn-CorrectableErrorAddressRegister(EE_UNC_ERR_ADD)

FieldDescriptions

Bit

Field

Value

Description

31-3

UNC_ERR_ADD

0-1FFFFFFFh

Un-correctableErrorAddress

UNC_ERR_ADDrecordstheCPUlogicaladdressofwhichanun-correctableerror

isdetectedbytheECClogic.Thiserroraddressisfrozenfrombeginupdateduntil

itisreadbytheCPU.Additionalerrorareblockeduntilthisregisterisread.

2-0

B_OFF

0-7h

Byteoffset

SinceECCischeckedon64bitdata,whencheckingmainmemoryorOTP,the

addresscapturedisalignedtoa64-bitboundarywithaddressbits[2:0]equalto

0.WhenreadingfromtheECCbytes,thesebitswillindicatethefailingaddressof

theECClocationassociatedwiththefailure.WhenreadinganECCbyte,theECC

ischeckedagainstthe64databitstheyprotect.

301

SPNU499B–November2012–RevisedAugust2013

F021FlashModuleController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

5.7.42FlashBankConfigurationRegister(FCFG_BANK)

Figure5-48.FlashBankConfigurationRegister(FCFG_BANK)(offset=FFF87400h)

31

20

19

16

EE_BANK_WIDTH

Reserved

R-90h

R-1

15

4

3

0

MAIN_BANK_WIDTH

Reserved

R-90h

R-2h

LEGEND:R=Readonly;-n=valueafterreset;-u=unchangedvalueoninternalreset,clearedonpowerup

Table5-55.FlashBankConfigurationRegister(FCFG_BANK)FieldDescriptions

Bit

Field

Value

Description

31-20

EE_BANK_WIDTH

90h

Bank7width(144bitswide)

Thisread-onlyvalueindicatesthemaximumnumberofbitsthatcanbeprogrammedinthe

bankinoneoperation.The144bitsincludes128databitsand16ECCbits.

19-16

Reserved

1

Writeshavenoeffect.

15-4

MAIN_BANK_WIDTH

90h

Widthofmainflashbanks(144bitswide)

Thisread-onlyvalueindicatesthemaximumnumberofbitsthatcanbeprogrammedinthe

bankinoneoperation.The144bitsincludes128databitsand16ECCbits.

3-0

Reserved

2h

Writeshavenoeffect.

302

F021FlashModuleController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter6

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

Thischapterdescribesthetightly-coupledRAM(TCRAM)module.

Topic...........................................................................................................................Page

6.1Overview........................................................................................................304

6.2RAMMemoryMap............................................................................................305

6.3SafetyFeatures...............................................................................................306

6.4TCRAMAuto-Initialization.................................................................................307

6.5TraceModuleSupport......................................................................................308

6.6Emulation/DebugModeBehavior.....................................................................308

6.7ControlandStatusRegisters............................................................................308

303

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




36BitRAM

36Bit

TCRAMW2

TCRAMW1VBUSPI/F

CortexR4F

B0TCM

B1TCM

ATCM

EVENAddressTCM BUS64 Bit data bus

ODDAddressTCM BUS64 Bit data busPMTI/F

Upper 32 bits data4 ECC bitsRTPI/F

36 bitWideRAM

36BitRAM

36Bit

36 bitWideRAM

36BitRAM

36Bit

36 bitWideRAM

36BitRAM

36Bit

36 bitWideRAMVBUSPI/F

PMTI/F

RTPI/F

Lower 32 bits dataand 4 ECC bitsUpper 32 bits data4 ECC bits

Lower 32 bits dataand 4 ECC bits



Overviewwww.ti.com

6.1Overview

TheHercules™familyofmicrocontrollersarebasedontheARM®Cortex-R4F™processor.ThisCPU

hastwotightly-coupledmemoryinterfaces–ATCMandBTCM,whichareusedtointerfacetotheprogram

anddatamemories,respectively.TheHerculesMCUsusetheATCMinterfaceforthemainflashmemory

andtheBTCMinterfacefortheCPUdataRAM.

6.1.1B0TCMandB1TCMConnectionDiagram

TheBTCMinterfaceisfurtherdividedintotwoparts–B0TCMandB1TCM,whicharebothusedto

interfacetoactualRAMbanksasshowninFigure6-1.

Figure6-1.TCRAMModuleConnections

6.1.2MainFeatures

Themainfeaturesofthetightly-coupledRAMinterfacemoduleare:

•Controlsread/writeaccessestothedataRAM

•DecodesaddresseswithinthememoryregionallocatedfortheRAM

•Supportsreadandwriteaccessesin64-bit,32-bit,16-bitor8-bitaccesssizes

–Doesnotsupportbit-wiseoperations

•SafetyFeatures:

–SupportforCortex-R4FCPU'sBuilt-InSingle-Error-CorrectionDouble-Error-Detection(SECDED)

Logic

•UsestheCPU'sEventbusandmaintainstheSECDEDstatusinmemory-mappedregisters

•Capturesthenumberofoccurrencesofsingle-bitormulti-biterrorsaswellastheRAMaddress

thathasthefault

•Generatessignalsforindicatingsingle-bitandmulti-biterrorstotheErrorSignalingModule

(ESM)

–SupportforCortex-R4FCPU'sParityProtectionLogicforBTCMAddressBusandControlSignals

•UsestheCPU'sTCMAddressParitySchemeandindicatesanaddressbusparityerrortothe

ESM

304

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Implementeddataspace

Implemented ECC space

Illegaladdress

8 MB4MB4MB+256KB256KB0x0

Illegal address



www.ti.comRAMMemoryMap

–RedundantAddressDecodeScheme

•ChecksthedecodingofCPUaddresslinesandgenerationofcorrectmemoryselectsforthe

RAMbanks

•Alsosupportscheckingoftheredundantaddressdecodecomparatorsthemselves

•Supportsauto-initializationoftheCPUdataRAMbanks

•SupportstheRAMTracePort(RTP)Interface

–TracesoutallRAMreadandwriteaccessestotheRTPmodule

6.2RAMMemoryMap

TheARMCortex-R4FCPUallowsupto8MBtobeaccessedthroughtheBTCMinterface.TheHercules

familyofmicrocontrollerssupportupto256KBRAMontheBTCMinterface.Checkthespecificpart's

datasheettoidentifytheactualamountofTCRAMsupportedonthepart.ThisRAMisprotectedbyECC

allowingtheCPUtocorrectanysingle-biterrorsanddetectdouble-biterrorswithina64-bitvalue.The

errorcorrectioncodes(ECC)arestoredintheRAMmemoryspaceaswell.Thememorymapforthe

TCRAMandthecorrespondingECCspaceisshowninFigure6-2.Anyaccesstoanunimplemented

TCRAMlocationresultsinanerrorresponsefromtheTCRAMmodule.

Figure6-2.RAMMemoryMap

EachRAMdatawordis64bitswide.These64bitsaredividedinto32bitsperRAMbankasshownin

Figure6-1.The8bitsofECCarealsodividedinto4bitsperRAMbank.

Forevery64-bitreadfromtheRAM,an8-bitECCisalsoreadbytheCPUonitsECCbus.Similarly,for

every64-bitwritetotheRAM,theCPUalsowritesan8-bitECCusingthesameECCbus.

NOTE:Read-Modify-WriteRequirementforWritestoRAM:TheTCRAMinterfacemodule

supports64-bit,32-bit,16-bitor8-bitwritestotheRAM.HowevertheECCiscalculatedby

theCPUfor64-bitvaluesonly.Foranywriteaccesssmallerthan64bits,itisnecessaryto

forcetheCPUtoperforma64-bitread-modify-writeoperationinordertoensurethatthe

correctECCisalsowritten.Thiscanbedonebysettingthebit1:BTCMRMWofc15,the

SecondaryAuxiliaryControlRegisteroftheCPU.Thisbitisalreadysetbydefault.

305

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SafetyFeatureswww.ti.com

TheECCmemorycanalsobedirectlyaccessedviamemory-mappedoffsetaddressesstartingfrom4MB,

asshownin.AreadfromtheECCspaceresultsinthe8-bitECCvalueappearingoneachbyteofthe64-

bitCPUdata.TheECCmemorycanonlybewrittentoasa64-bitaccess.ThewritetotheECCspace

mustalsofirstbeenabledviatheRAMControlRegister(RAMCTRL).

AccessestotheECCspacearenottracedouttotheRAMTracePort(RTP).

NOTE:NoECCErrorGeneratedforAccessestoECCMemory:AreadfromtheECCspace

sendtheECCvalueonboththe64-bitTCMreaddatabusaswellasthe8-bitECCbus.

Thiscouldresultinthedetectionofamulti-biterrorbytheSECDEDlogicinsidetheCPU.

TheTCRAMinterfacemoduleignorestheECCerrorindicatedbytheCPUfortheaccessto

theECCspace.

6.3SafetyFeatures

TheTCRAMinterfacemoduleincorporatessomefeaturesthataredesignedspecificallywithsafety

considerations.Thesearedescribedinthefollowingsections.

6.3.1SupportforCortex-R4FCPU'sSingle-Error-CorrectionDouble-Error-Detection(SECDED)

TheTCRAMinterfacemodulemonitorstheCPU'seventbus.TheCPU'seventbussignalssingle-bitor

multi-biterrorsforB0TCMaswellasB1TCMseparately.ThesesignalsaremonitoredbytheTCRAM

modulesforeachoftheseinterfaces.

TCRAMInterfaceModuleFeaturesdedicatedforSECDEDSupport:

•Dedicatedsingle-biterrorcounter

–Thiscounterisstoredinamemory-mappedregistercalledRAMOCCUR

–RAMOCCURisusedtocountthesingle-biterrorscorrectedbytheCPU'sSECDEDlogic

–TheTCRAMinterfacemoduleallowstheapplicationtogenerateaninterruptviatheRAMINTCTRL

registerwhenthenumberofsingle-biterrorscorrectedbytheCPUexceedsaprogrammable

threshold,RAMTHRESHOLD

•RAMErrorStatusRegister

–TheerrorsdetectedbytheTCRAMinterfacemoduleaswellasthoseindicatedbytheCPUare

flaggedintheRAMERRSTATUSregister

–Thereareseparatebitstoindicatesingle-biterror,double-biterror,addressdecodefailure,address

comparelogicfailure,read-addressparityfailure,andwrite-addressparityfailure

•ECCErrorAddressCapture

–Separateregisterstoholdtheaddressonwhichasingle-biterrorisdetected(RAMSERRADDR)or

adouble-biterrorisdetected(RAMUERRADDR)

–TheRAMSERRADDRregisterisonlyupdatedwhentheRAMTHRESHOLDvalueissetto1

–BoththeRAMSERRADDRandRAMUERRADDRcapturethe64-bit-alignedaddressfortheaccess

totheTCRAMasanoffsetfromthebaseaddressoftheTCRAM(0x08000000bydefault)

NOTE:Cortex-R4FCPUEventBusSignalingNotEnabledByDefault:Uponpower-upandafter

aCPUreset,theeventsignalingmechanisminsidetheCortex-R4FCPUisdisabled.This

featuremustbeenabledbysettingtheExport(X-bit)ofthePerformanceMonitoringand

ControlRegister(PMNC)intheCPU.TheTCRAMinterfacemodulecanonlycapturethe

single-bitordouble-bitECCerroroccurrencesoncetheCPU'seventsignalingmechanismis

enabled.

306

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comTCRAMAuto-Initialization

6.3.2SupportforCortex-R4FCPU'sAddressandControlBusParityChecking

TheCortex-R4FCPUcalculatesasingleparity-bitfortheTCRAMaddressandcontrolsignals.The

TCRAMinterfacemodulealsocomputesthisparitybitbasedontheCPU'saddressbusandcontrol

signals.ThecomputedparitybitiscomparedagainsttheparitybitreceivedfromtheCPU.Amismatchis

signaledasanAddressParityFailuretotheErrorSignalingModule(ESM)group2channel10or12.

ThereisaseparateaddressparityfailureerrorchannelforB0TCMandB1TCM.

The64-bitTCRAMaddresswhichfailstheparitycheckiscapturedintheRAMPERRADDRregisterasan

offsetfromthebaseaddressoftheTCRAM(0x08000000bydefault).TheTCRAMinterfacemodulealso

indicatesthetypeofaccess,readorwrite,thatfailedtheparitycheck.ThisisindicatedbytheRADDR

PARFAILortheWADDRPARFAILstatusflagsintheRAMERRSTATUSregister.

TheRAMERRSTATUSandRAMPERRADDRregistersmustbeclearedbytheapplicationinorderforthe

TCRAMinterfacemoduletocontinuecapturingsubsequenterrorsanderroraddresses.

Theparityschemeusedforthedescribedparitycheckingmechanismisdefinedbytheglobalsystem

parityselection.ThiscanbeconfiguredusingtheDEVPARSELfieldoftheDEVCR1controlregisterinthe

systemmodule.Thisdevice-wideparityschemecanbeoverriddeninsidetheTCRAMinterfacemoduleby

configuringtheAddressParityOverridefieldintheRAMCTRLregister.

NOTE:NoChangeOfParitySchemeOn-The-Fly:TheTCRAMinterfacemoduledoesnotsupport

on-the-flychangetotheparityschemebeingusedforcheckingtheCPUaddressbusand

controlbus.Theapplicationmustensurethattheparitypolarity(oddoreven)isnotchanged

whilethereisanongoingaccesstotheTCRAM.

6.3.3RedundantAddressDecode

TheTCRAMinterfacemodulegeneratesthememoryselectsforeachoftheTCRAMbanksaswellasthe

ECCmemorybasedontheCPUaddress.Thelogictogeneratethesememoryselectsisduplicatedand

theoutputscomparedtodetectanyaddressdecodeerrors.AmismatchisindciatedasanAddressError

totheErrorSignalingModule(ESM),onesignalforB0TCMandoneforB1TCM.TheTCRAMorECC

addressthatcausedthefaultiscapturedintheRAMUERRADDRregister.Thisisa64-bit-alignedaddress

isstoredasanoffsetfromthebaseoftheTCRAMorECCmemory.

Asdescribedearlier,eachindividualphysicalRAMbankis36bitswide.EachRAMbankcontributes32

bitsofdataand4bitsofECCwhenthebusmasterperformsa64-bitreadfromtheTCRAM.Each

TCRAMbankreceivesamemoryselectandtheaddressfromtheTCRAMinterfacemodule.Any

differencebetweentheaddressandthememoryselectsresultsinwrongdataandECCpairbeingsentto

theCPU.TheCPU'sSECDEDblockwilldetectthisdataerror.

TheTCRAMinterfacemodulealsosupportsamechanismtotesttheoperationoftheredundantaddress

decodelogicandthecomparelogic.Thistestingissupportedbyprovidingateststimulus,andcanbe

triggeredbytheapplicationbyconfiguringtheRAMTESTregister.Theaddressofanyerroridentified

duringtestingoftheredundantaddressdecodeandcomparelogicisnotcapturedinthe

RAMUERRADDRregister.

NOTE:Addressdecodecheckingwhenincomparelogictestmode:Whentheaddressdecode

andcomparelogictestmodeisenabled,theredundantaddressdecodeandcomparelogic

isnotavailableforcheckingthepropergenerationofthememoryselectsfortheTCRAMand

ECCmemory.

6.4TCRAMAuto-Initialization

TheRAMmemorycanbeinitializedbyusingthededicatedauto-initializationhardware.TheTCRAM

Moduleinitializestheentirememorywhentheauto-initisenabledfortheRAM.AllRAMdatamemoryis

initializedtozerosandtheECCmemoryisinitializedtothecorrectECCvalueforzeros,thatis,0Ch.

307

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






TraceModuleSupportwww.ti.com

6.5TraceModuleSupport

TheTCRAMModuletracesoutthefollowingsignalstotheRAMTracePort(RTP)module,thereby

providingRAMdataporttracecapability.

•18-bitaddressline

•64-bitdatabus

•Bytestrobeinformation

•Currentaccessmasteridentificationnumber

•Accesstype:Opcodeordatafetch

•ReadorWriteaccess

NodataistracedforanaccesstoECCmemory.

6.6Emulation/DebugModeBehavior

ThefollowingdescribesthebehavioroftheTCRAMModulewhenindebugmode:

•TheRAMOCCURregistercontinuestocountthesingle-biterrorcorrectionsperformedbytheCortex-

R4FCPU'sSECDEDlogic.

•Nosingle-biterrorinterruptisgeneratednorisanysingle-biterroraddresscapturedevenwhenthe

RAMOCCURcounterreachestheprogrammedsingle-biterrorcorrectionthreshold.

•Nouncorrectableerrorinterruptisgeneratednorisanydouble-biterroraddresscaptured.

•Noaddressparityerrorinterruptisgeneratednorisanyparityerroraddresscaptured.

•TheRAMUERRADDRregisterisnotclearedbyareadindebugmode.

–Thatis,ifadouble-biterroraddressiscapturedandisnotreadbytheCPUbeforeenteringdebug

mode,thenitremainsfrozenduringdebugmodeevenifitisread.

•TheRAMPERRADDRregisterisnotclearedbyareadindebugmode.

6.7ControlandStatusRegisters

TheTCRAMModuleregistersareaccessedthroughthesystemmoduleregisters'spaceintheCortex-

R4FCPU'smemorymap.Allregistersare32-bitwideandarelocatedona32-bitboundary.Readsand

writestoregistersaresupportedin8-,16-,and32-bitaccesses.Thebaseaddressforthecontrolregisters

isFFFFF800handFFFFF900hforevenandoffRAMECC.

Table6-1.TCRAMModuleControlandStatusRegisterMap

Offset

Acronym

RegisterDescription

Section

00h

RAMCTRL

TCRAMModuleControlRegister

Section6.7.1

04h

RAMTHRESHOLD

TCRAMModuleSingle-BitErrorCorrectionThresholdRegister

Section6.7.2

08h

RAMOCCUR

TCRAMModuleSingle-BitErrorOccurrencesControlRegister

Section6.7.3

0Ch

RAMINTCTRL

TCRAMModuleInterruptControlRegister

Section6.7.4

10h

RAMERRSTATUS

TCRAMModuleErrorStatusRegister

Section6.7.5

14h

RAMSERRADDR

TCRAMModuleSingle-BitErrorAddressRegister

Section6.7.6

1Ch

RAMUERRADDR

TCRAMModuleUncorrectableErrorAddressRegister

Section6.7.7

30h

RAMTEST

TCRAMModuleTestModeControlRegister

Section6.7.8

38h

RAMADDRDECVECT

TCRAMModuleTestModeVectorRegister

Section6.7.9

3Ch

RAMPERADDR

TCRAMModuleParityErrorAddressRegister

Section6.7.10

308

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlandStatusRegisters

6.7.1TCRAMModuleControlRegister(RAMCTRL)

TheRAMCTRLregister,showninFigure6-3anddescribedinTable6-2,controlsthesafetyfeatures

supportedbytheTCRAMModule.

Figure6-3.TCRAMModuleControlRegister(RAMCTRL)[offset=00]

31

30

29

28

27

24

Reserved

EMUTRACEDIS

Reserved

ADDRPARITYOVERRIDE

R-0

R/WP-0

R-0

R/WP-0

23

20

19

16

Reserved

ADDRPARITYDISABLE

R-0

R/WP-5h

15

9

8

Reserved

ECCWREN

R-0

R/WP-0

7

4

3

0

Reserved

ECCDETECTEN

R-0

R/WP-Ah

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-2.TCRAMModuleControlRegister(RAMCTRL)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30

EMUTRACEDIS

EmulationModeTraceDisable.Thisbit,whenset,disablesthetracingofreaddatato

RAMTracePort(RTP)moduleforanemulationmodeaccess.

0

Dataisallowedtobetracedouttothetracemodulesforemulationmodeaccesses.

1

Dataisblockedfrombeingtracedouttothetracemodulesforemulationmode

accesses.

29-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

ADDRPARITYOVERRIDE

AddressParityOverride.Thisfield,whensettoDh,willinverttheparityscheme

selectedbythedeviceglobalparityselection.Theaddressparitycheckerwouldthen

workontheinvertedparityscheme.Bydefault,theparityschemeisthesameasthe

globaldeviceparityscheme.

Dh

Parityschemeisoppositetothedeviceglobalparityscheme.

AllOthers

Parityschemeisthesameasthedeviceglobalparityscheme.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

ADDRPARITYDISABLE

AddressParityDetectDisable.Thisfield,whensettoAh,disablestheparitychecking

fortheaddressbus.Theparitycheckingisenabledwhenthisfieldissettoanyother

value.

Note:Theapplicationmustensurethattheparityerroraddressregisteris

clearedbeforeenablingaddressparitychecking.

Ah

Addressparitycheckingisdisabled

AllOthers

Addressparitycheckingisenabled

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

ECCWREN

ECCMemoryWriteEnable.ThisbitisprovidedtopreventaccidentalwritestotheECC

memory.AwriteaccesstotheECCmemoryisallowedonlywhentheECCWRENbit

issetto1.Ifthisbitiscleared,thenanywritestoECCmemoryareignored.

Note:ReadsareallowedfromtheECCmemoryregardlessofthestateoftheECCWR

EN.

0

ECCmemorywritesaredisabled.

1

ECCmemorywritesareenabled.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

309

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlandStatusRegisterswww.ti.com

Table6-2.TCRAMModuleControlRegister(RAMCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

3-0

ECCDETECTEN

ECCDetectEnable.Thisisa4-bitkeytoenabletheECCdetectionfeatureinthe

TCRAMModule.Ifthisfieldissettoanyvalueotherthan5h,thentheTCRAMModule

startsmonitoringtheTCMeventbusandgeneratesthecorrespondingerrorstatus

flags.TheerrorstatusupdatesaredoneonlywhentheECCDETECTENfieldisnot

5h.TheECCdetectionisenabledbydefaultastheECCDETECTENdefaultvalueis

Ah.

5h

ECCdetectionisdisabled.

AllOthers

ECCdetectionisenabled.

6.7.2TCRAMModuleSingle-BitErrorCorrectionThresholdRegister(RAMTHRESHOLD)

TheRAMTHRESHOLDregister,showninFigure6-4anddescribedinTable6-3,allowstheapplicationto

configurethenumberofsingle-biterrorcorrectionsbytheSECDEDlogicinsidetheCortex-R4FCPU

beforegeneratingasingle-biterrorinterrupt.

Figure6-4.TCRAMModuleSingle-BitErrorCorrectionThresholdRegister(RAMTHRESHOLD)

[offset=04h]

31

16

Reserved

R-0

15

0

THRESHOLD

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-3.TCRAMModuleSingle-BitErrorCorrectionThresholdRegister(RAMTHRESHOLD)Field

Descriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

THRESHOLD

Single-bitErrorThresholdCount.ThisfieldcontainsthethresholdvaluefortheSingle-bitError

Correction(SEC)occurrencesbeforethesingle-biterrorinterruptisgenerated.Ifthisthreshold

issetto1thenallsingle-biterroraddressesarecaptured.Toenabletheerroroccurrence

detection,thethresholdmustbesettoanon-zerovalue.

310

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlandStatusRegisters

6.7.3TCRAMModuleSingle-BitErrorOccurrencesCounterRegister(RAMOCCUR)

TheRAMOCCURregister,showninFigure6-5anddescribedinTable6-4,indicatesthenumberof

single-biterrorcorrectionsperformedbytheSEClogicinsidetheCortex-R4FCPU.

Figure6-5.TCRAMModuleSingle-BitErrorOccurrencesCounterRegister(RAMOCCUR)[offset=

08h]

31

16

Reserved

R-0

15

0

SINGLEERROROCCURRENCES

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-4.TCRAMModuleSingle-BitErrorOccurrencesCounterRegister(RAMOCCUR)Field

Descriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

SINGLEERROR

Single-bitErrorCorrectionOccurrences.This16-bitcountercontainsthenumberof

OCCURRENCES

single-biterroroccurrences.RAMOCCURisresettozerowhenitbecomesequaltothe

THRESHOLDvaluesetintheRAMTHRESHOLDregister.Theapplicationmustclearthe

RAMOCCURregisterbywriting0x0beforesettingtheTHRESHOLDvalue.Ifthe

RAMOCCURvalueisalreadyhigherthantheprogrammedTHRESHOLDvaluethenthe

counterincrementsandwrapsaround(overflow)tozero.

Note:IftheapplicationtriestocleartheRAMOCCURregisteratthesametimeas

theTCRAMModuletriedtoupdateit,thentheTCRAMModuletakespriority.

Note:WhentheRAMTHRESHOLDregisterissetto1,thentheRAMOCCURregister

mustbeclearedwheneverasingle-biterrorcorrectionoccursinordertocount

subsequentsingle-biterrorcorrections.

6.7.4TCRAMModuleInterruptControlRegister(RAMINTCTRL)

TheRAMINTCTRLregister,showninFigure6-6anddescribedinTable6-5,enablesthegenerationofan

interrupttotheCPUwheneverthenumberofsingle-biterrorcorrections(RAMOCCUR)reachesthe

programmedthreshold(RAMTHRESHOLD).

Figure6-6.TCRAMModuleInterruptControlRegister(RAMINTCTRL)[offset=0Ch]

31

16

Reserved

R-0

15

1

0

Reserved

SERREN

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-5.TCRAMModuleInterruptControlRegister(RAMINTCTRL)FieldDescriptions

Bit

Field

Value

Description

31-15

Reserved

0

Readreturns0.Writeshavenoeffect.

0

SERREN

Single-bitErrorCorrectionInterruptEnable.Thisbit,whensetto1,enablesthegenerationof

thesingle-biterrorinterruptwhentheRAMOCCURcountreachestheprogrammed

RAMTHRESHOLD.Iftheinterruptisnotenabled,thesingle-biterrorcountercontinuestocount

byresettingbacktozerowithoutgeneratinganyerrorinterrupt.TheSERRstatusflaginthe

RAMERRSTATUSregistergetssetregardlessofwhethertheSERRinterruptisenabledornot.

0

Single-biterrorgenerationisdisabled.

1

Single-biterrorgenerationisenabled.

311

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlandStatusRegisterswww.ti.com

6.7.5TCRAMModuleErrorStatusRegister(RAMERRSTATUS)

TheRAMERRSTATUSregister,showninFigure6-7anddescribedinTable6-6,indicatesthestatusof

thevariouserrorconditionsmonitoredbytheTCRAMModule.

Figure6-7.TCRAMModuleErrorStatusRegister(RAMERRSTATUS)[offset=10h]

31

16

Reserved

R-0

15

10

9

8

Reserved

WADDRPARFAIL

RADDRPARFAIL

R-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

Reserved

DERR

ADDRCOMP

Reserved

ADDRDEC

Reserved

SERR

LOGICFAIL

FAIL

R-0

R/WP-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-6.TCRAMModuleErrorStatusRegister(RAMERRSTATUS)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

WADDRPARFAIL

ThisbitindicatesaWriteAddressParityFailure.Thisbitmustbeclearedbywriting1

toitinordertoenablethecaptureofparityerroraddressforsubsequentfailures.This

bitmustbeinaclearedstateforgenerationofanynewparityerrorinterrupt.

8

RADDRPARFAIL

ThisbitindicatesaReadAddressParityFailure.Thisbitmustbeclearedbywriting1

toitinordertoenablethecaptureofparityerroraddressforsubsequentfailures.This

bitmustbeinaclearedstateforgenerationofanynewparityerrorinterrupt.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5

DERR

Thisbitindicatesamulti-biterrordetectedbytheCortex-R4FSECDEDlogic.

4

ADDRCOMPLOGICFAIL

Addressdecodelogicelementfailed.Thisbitindicatesthattheredundantaddress

decodelogictestschemehasdetectedthatacompareelementhasmalfunctioned

duringthetestingofthelogic.Thisbithastobeclearedbywriting1toitinorderto

enablethecaptureofuncorrectableerroraddressforsubsequentfailures.Thisbithas

tobeinaclearedstateforgenerationofanewuncorrectableerrorinterrupt.Thisbit

onlygetssetinthetestmode,andhasnorelevanceinfunctionalmode.

3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

ADDRDECFAIL

Addressdecodefailed.Thisbitindicatesthatanaddresserrorinterruptwasgenerated

bytheredundantaddressdecodeandcomparelogicduetoafunctionalfailure.Thisbit

mustbeclearedbywriting1toitinordertoenablethecaptureofuncorrectableerror

addressforsubsequentfailures.Thisbithastobeinaclearedstateforgenerationofa

newaddresserrorinterrupt.

1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

SERR

SingleErrorStatus.Thisbitindicatesthatthesingle-biterrorthresholdhasbeen

reached.Thisbitissetevenifthesingle-biterrorthresholdinterruptisdisabled.This

bitmustbeclearedbywriting1toitinordertocleartheinterruptrequestandtoenable

subsequentsingle-biterrorinterruptgeneration.

312

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlandStatusRegisters

NOTE:Forequalitytest:

•Ifthecomparatormatches(notruesiliconfail),thereisnostatusbitsetforADDRCOMP

LOGICFAILorADDRDECFAIL.

•Ifthereistruesiliconmalfunction,ADDRCOMPLOGICFAIL&ADDRDECFAILwillbe

set,noUERRADDRESSiscaptured.

Forinequalitytest,thecomparevectorwillnotmatchsincenon-invertedandinvertedvalues

ofthesametestvectorarefedtothecomparator:

•Ifthereisnosiliconmalfunctiononanyofthecomparatorbits,thenonlyADDRDEC

FAILwillbeset.ThisischosensothatwecanensurethefunctionalADDRDECFAIL

statusbitdatapathcanbetested.

•Ifthereisasiliconmalfunctiononanyofthecomparatorbits,then,ADDRCOMPLOGIC

FAIL&ADDRCOMPLOGICFAILwillbeset,noUERRADDRESSiscaptured.

6.7.6TCRAMModuleSingle-BitErrorAddressRegister(RAMSERRADDR)

TheRAMSERRADDRregister,showninFigure6-8anddescribedinTable6-7,capturestheaddressfor

whichtheCortex-R4FCPUdetectedasingle-biterror.

Figure6-8.TCRAMModuleSingle-BitErrorAddressRegister(RAMSERRADDR)[offset=14h]

31

18

Reserved

R-0

17

3

2

0

SINGLEERRORADDRESS

Reserved

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table6-7.TCRAMModuleSingle-BitErrorAddressRegister(RAMSERRADDR)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17-3

SINGLEERRORADDRESS

Thisregistercapturesthebits17-3oftheaddressforwhichtheCortex-R4FCPU

detectsasingle-biterrorwhentheRAMTHRESHOLDregisterissetto1.Thelower3

bitsarealwaystiedtozerosothattheaddresscapturedisadouble-word(64-bit)

address.Thisisa64-bit-alignedaddressisstoredasanoffsetfromthebaseofthe

TCRAMorECCmemory.

Thisregistercanonlyberesetbyassertingpower-onreset,andholdsthelasterror

addressevenafterasystemreset.

2-0

Reserved

0

Readreturns0.Writeshavenoeffect.

313

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlandStatusRegisterswww.ti.com

6.7.7TCRAMModuleUncorrectableErrorAddressRegister(RAMUERRADDR)

TheRAMUERRADDRregister,showninFigure6-9anddescribedinTable6-8,capturestheaddressfor

whichtheCortex-R4FCPUdetectedamulti-biterror.

Figure6-9.TCRAMModuleUncorrectableErrorAddressRegister(RAMUERRADDR)[offset=1Ch]

31

23

22

16

Reserved

UNCORRECTABLEERRORADDRESS

R-0

R-0

15

3

2

0

UNCORRECTABLEERRORADDRESS

Reserved

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table6-8.TCRAMModuleUncorrectableErrorAddressRegister(RAMUERRADDR)Field

Descriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-3

UNCORRECTABLE

Thisregistercapturestheaddressforwhichtherewasanuncorrectableerrororan

ERRORADDRESS

addressparityerror.

TheuncorrectableerrorisindicatedbytheCortex-R4FCPU'sSECDEDlogicandthe

addressparityerrorisindicatedbytheTCRAMModule'sredundantaddressdecodeand

comparelogic.

FortheSECDEDmulti-bitordouble-bituncorrectableerrorthisregisterstoresthebits17-

3oftheTCMaccessaddress.Thelower3bits2-0arealwaysreadaszerostoindicate

thatthelatchedaddressisadouble-wordaddress.Theaddressbits31-18arereadas

zeros.Thisisa64-bit-alignedaddressisstoredasanoffsetfromthebaseoftheTCRAM

orECCmemory.

Foraredundantaddressdecodeandcomparelogicerrorthisregisterstoresthecomplete

TCMaccessaddressroundedtoadouble-wordboundary(bits22-3).Thiserrorisalso

indicatedbytheADDRDECFAILstatusflagintheRAMERRSTATUSregister.Noerror

addressisstoredasaresultofaredundantaddresslogictest.

Theregisterhastoberead-clearedtoenablefurthererroraddresscaptures.Readingthe

registerdoesnotclearitscontentsbutenablestheregistertobeupdatedwithan

uncorrectableerroraddress.

Thisregistercanonlyberesetbyassertingpower-onreset,andholdsthelasterror

addressevenafterasystemreset.

2-0

Reserved

0

Readreturns0.Writeshavenoeffect.

314

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlandStatusRegisters

6.7.8TCRAMModuleTestModeControlRegister(RAMTEST)

TheRAMTESTregister,showninFigure6-10anddescribedinTable6-9,controlsthetestmodeofthe

TCRAMModule.

Figure6-10.TCRAMModuleTestModeControlRegister(RAMTEST)[offset=30h]

31

16

Reserved

R-0

15

9

8

7

6

5

4

3

0

Reserved

TRIGGER

TESTMODE

Reserved

TESTENABLE

R-0

R/WP-0

R/WP-0

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-9.TCRAMModuleTestModeControlRegister(RAMTEST)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

TRIGGER

TestTrigger.Thisisanautoresettesttriggerusedtotesttheredundantaddressdecode

andcomparelogic.Aredundantaddressdecodetestisexecutedwhentestmodeis

enabledandthetesttriggerisappliedbywritinga1tothisbit.Thetriggerisvalidonlyif

testisenabledandthecorrectmodeisconfiguredintheTESTMODEfield,andthe

RAMERRSTATUSandRAMUERRADDRregistersareintheclearedstate.

7-6

TESTMODE

TestMode.Thisfieldselectseitherequalityofinequalitytestingschemes.

IfTESTMODEissetto2h,equalitycheckisdone.Theteststimulusstoredin

ADDRTEST_VECTregisterisfeddirectlytoboththechannelsofthecomparator.Ifthe

XORofthesetwoinputsisnotzerothenUERRinterruptisgeneratedandADDRCOMP

LOGICFAILflagissetinRAMERRSTATUSregister.

IfTESTMODEissetto1h,inequalitycheckisdone.Theteststimulusstoredin

ADDRTEST_VECTregisterisinvertedandfedintoonechannelandthenon-inverted

vectorisfedintotheotherchannel.IftheXORoftheseinputsiszerothentheUERR

interruptisgeneratedandADDRCOMPLOGICFAILflagissetinRAMERRSTATUS

register.

5-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

TESTENABLE

TestEnable.Thisisa4-bitkeytoenabletheredundantaddressdecodeandcompare

logictestscheme.Ifthetestschemeisenabledthenthecomparelogicusesthetest

vectorinputsfromtheADDRTEST_VECTregister.Thefunctionalpathcomparisonis

disabledwhentestmodeisenabled.

Ah

Testmodeisenabled.

AllOthers

Testmodeisdisabled.

NOTE:Forequalitytest:

•Ifthecomparatormatches(notruesiliconfail),thereisnostatusbitsetforADDRCOMP

LOGICFAILorADDRDECFAIL.

•Ifthereistruesiliconmalfunction,ADDRCOMPLOGICFAIL&ADDRDECFAILwillbe

set,noUERRADDRESSiscaptured.

Forinequalitytest,thecomparevectorwillnotmatchsincenon-invertedandinvertedvalues

ofthesametestvectorarefedtothecomparator:

•Ifthereisnosiliconmalfunctiononanyofthecomparatorbits,thenonlyADDRDEC

FAILwillbeset.ThisischosensothatwecanensurethefunctionalADDRDECFAIL

statusbitdatapathcanbetested.

•Ifthereisasiliconmalfunctiononanyofthecomparatorbits,then,ADDRCOMPLOGIC

FAIL&ADDRCOMPLOGICFAILwillbeset,noUERRADDRESSiscaptured.

315

SPNU499B–November2012–RevisedAugust2013

Tightly-CoupledRAM(TCRAM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlandStatusRegisterswww.ti.com

6.7.9TCRAMModuleTestModeVectorRegister(RAMADDRDECVECT)

TheRAMADDRDECVECTregister,showninFigure6-11anddescribedinTable6-10,isusedfortesting

theredundantaddressdecodeandcomparelogicoftheTCRAMModule.

Figure6-11.TCRAMModuleTestModeVectorRegister(RAMADDRDECVECT)[offset=38h]

31

27

26

25

16

Reserved

ECCSELECT

Reserved

R-0

R/WP-0

R-0

15

0

RAMCHIPSELECT

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table6-10.TCRAMModuleTestModeVectorRegister(RAMADDRDEVECT)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

ECCSELECT

ECCSelect.ThisbitisusedtostoretheECCselectvaluefortheredundantaddress

decodeandcomparelogic.Thestoredvalueispassedasteststimulusforthebuilt-intest

scheme.

25-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

RAMCHIPSELECT

RAMChipSelect.ThisfieldisusedtostoretheRAMchipselectvaluefortheredundant

addressdecodeandcomparelogic.Thestoredvalueispassedasteststimulusforthe

built-intestscheme.

6.7.10TCRAMModuleParityErrorAddressRegister(RAMPERRADDR)

TheRAMPERRADDRregister,showninFigure6-12anddescribedinTable6-11,storestheaddressfor

whichanaddress-parityerrorwasdetected.

Figure6-12.TCRAMModuleParityErrorAddressRegister(RAMPERRADDR)[offset=3Ch]

31

23

22

16

Reserved

ADDRESSPARITYERRORADDRESS

R-0

R-U

15

3

2

0

ADDRESSPARITYERRORADDRESS

Reserved

R-U

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table6-11.TCRAMModuleParityErrorAddressRegister(RAMPERRADDR)FieldDescriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-3

ADDRESSPARITY

ParityErrorAddress.Thisregisterstoresthedouble-wordboundary(bits22-3)ofthe

ERRORADDRESS

TCMaccessaddressforwhichtherewasanaddressparityerror.Thisregistermustbe

read-clearedtoenablefurthererroraddresscaptures.Readingtheregisterdoesnotclear

theregistercontentsbutenablestheregistertobeupdatedwithanewparityerror

address.Thisisa64-bit-alignedaddressisstoredasanoffsetfromthebaseofthe

TCRAMorECCmemory.

2-0

Reserved

0

Readreturns0.Writeshavenoeffect.

316

Tightly-CoupledRAM(TCRAM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter7

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

Thischapterdescribestheprogrammablebuilt-inself-test(PBIST)controllermoduleusedfortestingthe

on-chipmemoriesontheHerculesmicrocontrollers.

Topic...........................................................................................................................Page

7.1Overview........................................................................................................318

7.2RAMGroupingandAlgorithm...........................................................................319

7.3PBISTFlow.....................................................................................................320

7.4MemoryTestAlgorithmsontheOn-chipROM....................................................322

7.5PBISTControlRegisters...................................................................................324

7.6PBISTConfigurationExample...........................................................................336

317

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MemoryConfigurations,Algorithms,BackgrounsHost CPUControl InterfaceSystemandPeripheralMemoriesData Logger

PBISTController

MemoryDataPath

PBISTROM



Overviewwww.ti.com

7.1Overview

ThePBIST(ProgrammableBuilt-InSelf-Test)controllerarchitectureprovidesarun-time-programmable

memoryBISTengineforvaryinglevelsofcoverageacrossmanyembeddedmemoryinstances.

7.1.1FeaturesofPBIST

•Informationregardingon-chipmemories,memorygroupings,memorybackgroundpatternsandtest

algorithmsstoredindedicatedon-chipPBISTROM

•HostprocessorinterfacetoconfigureandstartBISTofmemories

•SupportstestingofPBISTROMitselfaswell

•Supportstestingofeachmemoryatitsmaximumaccessspeedinapplication

•Implementsintelligentclockgatingtoconservepower

NOTE:ReferthedevicedatasheetforthemaximumPBISTROMclockfrequencysupported.

7.1.2PBISTvs.ApplicationSoftware-BasedTesting

ThePBISTarchitectureconsistsofasmallcoprocessorwithadedicatedinstructionsettargeted

specificallytowardtestingmemories.ThiscoprocessorexecutestestroutinesstoredinthePBISTROM

andrunsthemonmultipleon-chipmemoryinstances.Theon-chipmemoryconfigurationinformationis

alsostoredinthePBISTROM.ThetestingisdoneinparallelforeachoftheCPUdataRAMs,whileitis

donesequentiallyfortherestofthememories.

ThePBISTControllerarchitectureofferssignificantadvantagesovertestsrunningonthemainCortex-

R4Fprocessor(applicationsoftware-basedtesting):

•EmbeddedCPUshavealongaccesspathtomemoriesoutsidethetightly-couplememorysub-system,

whilethePBISTcontrollerhasadedicatedpathtothememoriesspecificallyfortheself-test

•EmbeddedCPUsaredesignedfortheirtargeteduseandareoftennoteasilyprogrammedformemory

testalgorithms.

•ThememorytestalgorithmcodeonembeddedCPUsistypicallysignificantlylargerthanthatneeded

forPBIST.

•TheembeddedCPUissignificantlylargerthanthePBISTcontroller.

7.1.3PBISTBlockDiagram

Figure7-1illustratesthebasicPBISTblocksanditswrapperlogicforthedevice.

Figure7-1.PBISTBlockDiagram

318

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRAMGroupingandAlgorithm

7.1.3.1On-chipROM

Theon-chipROMcontainstheinformationregardingthealgorithmsandmemoriestobetested.

7.1.3.2HostProcessorInterfacetothePBISTControllerRegisters

TheCortex-R4FCPUcanselectthealgorithmandRAMgroupsforthememories'self-testfromtheon-

chipROMbasedontheapplicationrequirements.Oncetheself-testhasexecuted,theCPUcanquerythe

PBISTcontrollerregisterstoidentifyanymemoriesthatfailedtheself-testandtothentakeappropriate

nextstepsasrequiredbytheapplication'sauthor.

7.1.3.3MemoryDataPath

Thisisthereadandwritedatapathlogicbetweendifferentsystemandperipheralmemoriestightly

coupledtothePBISTmemoryinterface.ThePBISTcontrollerexecuteseachselectedalgorithmoneach

validmemorygroupsequentiallyuntilallthealgorithmsareexecuted.

NOTE:NotallalgorithmsaredesginedtorunonallRAMgroups.Ifanalgorithmisselectedtorun

onanincompatiblememory,thiswillresultinafailure.RefertoTable2-5andTable2-6for

RAMgroupingandalgorithminformation.

7.2RAMGroupingandAlgorithm

Table2-5givesthelistofRAMgroupsandtheirtypessupportedonthedevice.Table2-6mapsthe

differentalgorithmssupportedinapplicationmodefortheRAMgroupswiththebackgroundpatternsused

fortheparticularalgorithm.

NOTE:March13isthemostrecommendedalgorithmforthememoryself-test.

319

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




IssysteminYes

Setupmemories,peripheralandclocktreelike

clockbywritingPACT=0x03

SelecttheRAMgroupandalgorithmusingRAMINFOandALGOregistersProgramOVER=0x00forselftestwithoutOverride

WriteROM=0x03toenablethemicrocodeloadofthealgorithmandRAMinfogroupsfromtheonChipROM

Write0x14toDLRregistertoconfigurePBISTinROMmode

Is(MSTDONE=1)?

IsFSRF0=1?

PBISTSelftestDoneEnablepbistclocksandROMReadRAMTregforRGS/

ReadFSRDandFSRAdatalogreg.forFaildataandaddressvalues

NoYesNoYes

WaitforapproximatelyNvbusclocks.

ResetthePBISTcontrollerbywritingMSTGCR=0x0A

DisablePBISTTest

ResumePBISTselftestbywriting0x02totheSTRregister

bywritingMSTGCR=0x05

DisablepbistclocksandROM

reset=1?clockbywritingPACT=0orOVER=1forRAMINFOOverrideNoRDSinfoHCLK,VCLKperipheralandROMCLKasrequiredforthePBISTtest.andstarttheTest

EnablePBISTcontrollerbybywritingMSIENA=0x01



PBISTFlowwww.ti.com

7.3PBISTFlow

Figure7-2illustratesthememoryself-testflow.

Figure7-2.PBISTMemorySelf-TestFlowDiagram

320

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTFlow

7.3.1PBISTSequence

1.Configurethedeviceclocksourcesanddomainssothattheyarerunningattheirtargetfrequencies.

2.ProgramtheHCLKtoPBISTROMclockratiobyconfiguringtheROM_DIVfield(bits9:8)ofthe

MSTGCRregisterofthesystemmodule.Checkthedevicedatasheetforthemaximumsupported

PBISTROMclockfrequency.

3.EnablePBISTControllerbysettingbit1ofMSIENAregisterinsystemmodule.

4.EnablethePBISTself-testbywritingavalueof0x0Atobits3:0oftheMSTGCRinthesystemmodule.

5.WaitforNVBUSclockcyclesbasedontheHCLKtoPBISTROMclockratio:

N=16whenHCLK:PBISTROMclockis1:1

N=32whenHCLK:PBISTROMclockis1:2

N=64whenHCLK:PBISTROMclockis1:4

N=64whenHCLK:PBISTROMclockis1:8

6.Write3htoPACTregistertoenablethePBISTinternalclocksandROMinterfaceclock.

7.ProgramtheALGOregistertodecidewhichalgorithmfromtheinstructionROMmustbeselected(the

defaultvalueofALGOregisterisall1’s,meaningallalgorithmsareselected).Similarly,programthe

RINFOLandRINFOUregisterstoindicatewhetheraparticularRAMgroupintheinstructionROM

wouldgetexecutedornot.

NOTE:IncaseofRAMOverride(OverrideRegister(OVER)=00),theusershouldmakesurethat

onlythealgorithmsthatrunonsimilarRAMsareselected.Ifasingleportalgorithmis

selectedinROMAlgorithmMaskRegister(ALGO),theRAMInfoMaskLowerRegister

(RINFOL)andRAMInfoMaskUpperRegister(RINFOU)mustselectonlythesingleport

RAM’s.ThesameappliesfortwoportRAM’s.CheckTable2-5forinformationonthe

memorytypes.

8.ProgramOVER=1htorunPBISTself-testwithoutRAMoverride.ProgramOVER=0torunPBIST

self-testwithRAMOverride.

9.Writeavalueof3htotheROMmaskregistershouldthemicrocodefortheAlgorithmsaswellasthe

RAMgroupsloadedfromtheonchipPBISTROM.

10.WriteDLR(DataLoggerregister)with14htoconfigurethePBISTruninROMmodeandtoenablethe

configurationaccess.Thisstartsthememoryself-tests.

11.WaitforthePBISTself-testdonebypollingMSTDONEbitofMSTCGSTATregisterinSystemModule.

12.Onceself-testiscompleted,checktheFailStatusregisterFSRF0.

Incasethereisafailure(FSRF0=1h)

(a)ReadRAMTregisterwhichindicatestheRGSandRDSvaluesofthefailureRAM

(b)ReadFSRC0andFSRC1registerswhichcontainsthefailurecount

(c)ReadFSRA0andFSRA1registerswhichcontainstheaddressoffirstfailure

(d)ReadFSRDL0andFSRDL1registerswhichcontainsthefailuredata.

(e)Writeavalueof2htotheSTRregistertoresumethetest.

Incasethereisnofailure(FSRF0=0)thememoryself-testiscompleted.

(a)DisablethePBISTinternalandROMclocksbywritinga0tothePACTregister.

(b)DisablethePBISTself-testbywritingavalueof5htobits3:0oftheMSTGCRinthesystem

module

Repeatsteps2through9forsubsequentrunswithdifferentRAMgroupandalgorithmconfigurations.

13.AfterrequiredMemorytestsarecompleted,ResumeorStarttheNormalApplicationsoftware.

NOTE:Thecontentsoftheselectedmemorybeforethetestwillbecompletlylost.Usersoftware

musttakecareofdatabackupifrequired.TypicallythePBISTtestsarecarriedoutatthe

beginningofApplicationsoftware.

321

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MemoryTestAlgorithmsontheOn-chipROMwww.ti.com

NOTE:MemorytestfailinformationisreportedintermsofRGS:RDSandnotRAMGROUP.Check

Table2-5forinformationontheRGS:RDSinformationapplicabletoeachmemorybeing

tested.

7.4MemoryTestAlgorithmsontheOn-chipROM

Thissectionprovidesabriefdescriptionforsomeofthetestalgorithmsusedformemoryself-test.

1.March13N:

•March13NisthebaselinetestalgorithmforSRAMtesting.Itprovidesthehighestoverallcoverage.

Theotheralgorithmsprovideadditionalcoverageofotherwisemissedboundaryconditionsofthe

SRAMoperation.

•Theconceptbehindthegeneralmarchalgorithmistoindicate:

–Thebitcellcanbewrittenandreadasbotha1anda0.

–Thebitsaroundthebitcelldonotaffectthebitcell.

•Thebasicoperationofthemarchistoinitializethearraytoaknowpattern,thenmarchadifferent

patternthroughthememory.

•Typeoffaultsdetectedbythisalgorithm:

–Addressdecoderfaults

–Stuck-Atfaults

–Coupledfaults

–Statecouplingfaults

–Parametricfaults

–Writerecoveryfaults

–Read/writelogicfaults

2.MapColumn:

•TheMAPCOLUMNalgorithmisusedtoidentifybitlinesensitivitiesinthememoryarray.The

memoryarrayisloadedwitharowstripepatternofall1sinthefirstrowfollowedbyall0sinthe

secondrowandrepeatedthroughoutthearray.Thenthevaluesarereaddowneachcolumnon

consecutivecycles.Thepatterninmemoryisinvertedandrunthecolumnreadsagain.

•ThisparticularpatternislookingforthefollowingSRAMfailuremechanisms:

–Leakageduetoalowresistpathinabit

–AnOpeninthebitcell

–LeakageonaBITorBITNline

–Miss-balanceinthesenseamp

–Leakageinthesense

–Highresistinthesenseamp

–Failureofthepre-chargecircuitsafterreadoperations

3.Pre-Charge:

•ThePre-Chargealgorithmexercisesthepre-chargecapabilitywithintheSRAMarray.Itis

importanttospecificallytargetthisissueasitistheonlypartoftheanalogportionoftheSRAM

thatisfrequencysensitive.

•SimilartotheMAPCOLUMNalgorithm,thisalgorithmworksitswaydownthecolumnsofthe

SRAM.However,unliketheMAPCOLUMN,thisalgorithmsandwichesawritebetweentworeads

toforcetheworst-caseconditionsforthepre-chargecircuitsinthearray.

•Thistestwillfailwhenanincreaseinsystemfrequencynearstheminimumaccesstimeofthe

array,atthisboundary:

–Highvoltageshouldoperatebetterthanlowvoltage.

–Likewise,lowtemperatureshouldoperatebetterthanhightemperature.

322

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMemoryTestAlgorithmsontheOn-chipROM

4.DOWN1a:

•TheDown1patternforcestheswitchingofalldatabitsandmostaddressbitsonconsecutiveread

cycles.Thisisprimarilyaread/writetestoftheCPU/memorysubsystem.

•Theaggressivewritestargetat-speedwritefailures.

•Italsotargetsrow/columndecodeinthememoryarray.

•Targetsthesenseampsandsenseampmultiplexors.

•Memoryarrayoutputbuffers.

•Thisalgorithmoperatesasfollows:

–Load1sthalfofthememoryundertestwithonepattern.

–Load2ndhalfofthememoryundertestwiththebit-wiseinverseofthepattern.

–Alternatesequentialreadssequencesbetweenonesequencestartingatthebeginningofthe

arrayandasecondsequencestartingattheendofthearray.

–Uponcompletionofthereadback,invertthepatternsinbothhalvesofthearrayandrepeat

theabovestep.

–Performanaggressivewritesequencebyalternatingwritesbetweenthebottomhalfofthe

memoryupwardswithadatapatternandthetophalfofthememorydownwardswiththe

inversedatapattern.

–Invertthedatapatternfortheabovetwostepstoperformanothersequenceofaggressive

writes.

5.DTXN2a:

ThisalgorithmisusedtotargettheglobalcolumndecodeLogic.

323

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTControlRegisterswww.ti.com

7.5PBISTControlRegisters

PBISTcontrollerusesconfigurationregistersforprogrammingthealgorithmanditsexecution.Allthe

configurationregistersarememorymappedforaccessbytheCPUthroughthePeripheralBusinterface.

ThebaseaddressforthecontrolregistersisFFFFE400h.

NOTE:ThereisnowatchdogfunctionalityimplementedinthePBISTcontroller.Ifabadcodeis

executed,thePBISTwillrunforever.ThePBISTcontrollerdoesnotguardagainstthis

situation.

RegistersareaccessibleonlywhentheclocktoPBISTcontrollerisactive.Theclockis

activatedbyfirstwriting0x3toPACTregister.

Table7-1.PBISTRegisters

Offset

Acronym

RegisterDescription

Section

000h-15Ch

Reserved

Reservedlocations.Donotwritetotheselocations.

160h

RAMT

RAMConfigurationRegister

Section7.5.1

164h

DLR

DataloggerRegister

Section7.5.2

168h-17Ch

Reserved

Reservedlocations.Donotwritetotheselocations.

180h

PACT

PBISTActivate/ROMClockEnableRegister

Section7.5.3

184h

PBISTID

PBISTIDRegister

Section7.5.4

188h

OVER

OverrideRegister

Section7.5.5

190h

FSRF0

FailStatusFailRegister0

Section7.5.6

198h

FSRC0

FailStatusCountRegister0

Section7.5.7

19Ch

FSRC1

FailStatusCountRegister1

Section7.5.7

1A0h

FSRA0

FailStatusAddress0Register

Section7.5.8

1A4h

FSRA1

FailStatusAddress1Register

Section7.5.8

1A8h

FSRDL0

FailStatusDataRegister0

Section7.5.9

1B0h

FSRDL1

FailStatusDataRegister1

Section7.5.9

1C0h

ROM

ROMMaskRegister

Section7.5.10

1C4h

ALGO

ROMAlgorithmMaskRegister

Section7.5.11

1C8h

RINFOL

RAMInfoMaskLowerRegister

Section7.5.12

1CCh

RINFOU

RAMInfoMaskUpperRegister

Section7.5.13

324

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTControlRegisters

7.5.1RAMConfigurationRegister(RAMT)

Thisregisterisdividedintothefollowinginternalregisters,noneofwhichhaveadefaultvalueafterreset.

Figure7-3andTable7-2illustratethisregister.

Figure7-3.RAMConfigurationRegister(RAMT)[offset=0160h]

31

24

23

16

RGS

RDS

R/W-X

R/W-X

15

8

7

6

5

2

1

0

DWR

SMS

PLS

RLS

R/W-X

R/W-X

R/W-X

R/W-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-2.RAMConfigurationRegister(RAMT)FieldDescriptions

Bit

Field

Value

Description

31-24

RGS

RamGroupSelect.ReferTable2-5forinformationontheRGSvalueforeachmemory.

23-16

RDS

ReturnDataSelect.ReferTable2-5forinformationontheRDSvaluesforeachmemory.

15-8

DWR

DataWidthRegister

7-6

SMS

SenseMarginSelectRegister

5-2

PLS

PipelineLatencySelect

1-0

RLS

RAMLatencySelect

Thisregisterprovidestheinformationregardingthememorybeingcurrentlytested.IncaseofaPBIST

failure,theapplicationcanreadthisregistertoidentifytheRGS:RDSvaluesforthememorythatfailedthe

self-test.

325

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTControlRegisterswww.ti.com

7.5.2DataloggerRegister(DLR)

ThisregisterputsthePBISTcontrollerintotheappropriatecomparisonmodesfordatalogging.Figure7-4

andTable7-3illustratethisregister.

Figure7-4.DataloggerRegister(DLR)[offset=0164h]

31

16

Reserved

R-0

15

5

4

3

2

1

0

Reserved

DLR4

Rsvd.

DLR2

Reserved

R-0

R/W-0

R/W-1

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-3.DataloggerRegister(DLR)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readsreturn0.Donotchangethesebitsfromtheirdefaultvalue.

4

DLR4

Configaccess:settingthisbitallowsthehostprocessortoconfigurethePBISTcontrollerregisters

3

Reserved

1

Donotchangethisbitfromitsdefaultvalueof1.

2

DLR2

ROM-basedtesting:settingthisbitenablesthePBISTcontrollertoexecutetestalgorithmsthatare

storedinthePBISTROM.

1-0

Reserved

00

Donotchangethesebitsfromtheirdefaultvalueof00.

•DLR2:ROM-basedtestingmode

Writinga1tothisregisterstartstheROM-basedtesting.ThisregisterisusedtoinitiateROM-based

testingfromConfigandATEinterfaces.Also,sincea1inthisbitpositionmeanstheinstructionROMis

usedformemorytesting,alltheintermediateinterruptsandPBISTdonesignalaftereachmemorytestare

maskeduntilalltheselectedalgorithmsintheROMareexecutedforallRAMgroups.However,afailure

wouldstopthetestandreportthestatusimmediately.

•DLR4:Configaccessmode

Thismode,whenset,indicatestheCPUisbeingusedtoaccessPBIST.

326

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTControlRegisters

7.5.3PBISTActivate/ROMClockEnableRegister(PACT)

ThisisthefirstregisterthatneedstobeprogrammedtoactivatethePBISTcontroller.Bit[0]isusedfor

staticclockgating,andunlessa‘1’iswrittentothisbit,alltheinternalPBISTclocksareshutoff.Bit[1]is

forturningontheclockgoingtotheinstructionROM.Figure7-5andTable7-4illustratethisregister.

Figure7-5.PBISTActivate/ROMClockEnableRegister(PACT)[offset=0180h]

31

16

Reserved

R-0

15

2

1

0

Reserved

PACT1

PACT0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-4.PBISTActivate/ROMClockEnableRegister(PACT)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

PACT1

PBISTActivate

0

ClocktoonchipROMisdisabled

1

NormalPBISToperationforROMbasedtesting

0

PACT0

ROMClockEnableRegister

0

DisableinternalPBISTclocks

1

EnableinternalPBISTclocks

•PACT0

ThisbitmustbesettoturnoninternalPBISTclocks.Settingthisbitassertsaninternalsignalthatisused

astheclockgateenable.Aslongasthisbitis0,anyaccesstoPBISTwillnotgothrough,andPBISTwill

remaininanalmostzero-powermode.

•PACT1

SettingthisbitturnsontheclockgoingtotheinstructionROM.

NOTE:Thisregistermustbeprogrammedto3hduringapplicationself-test.

327

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTControlRegisterswww.ti.com

7.5.4PBISTIDRegister

FunctionalityofthisregisterisdescribedinFigure7-6andTable7-5.

Figure7-6.PBISTIDRegister[offset=184h]

31

16

Reserved

R-0

15

8

7

0

Reserved

PBISTID

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-5.PBISTIDRegisterFieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-0

PBISTID

ThisisauniqueIDassignedtoeachPBISTcontrollerinadevicewithmultiplePBISTcontrollers.

7.5.5OverrideRegister(OVER)

FunctionalityoftheregisterisdescribedinFigure7-7andTable7-6.

Figure7-7.OverrideRegister(OVER)[offset=0188h]

31

16

Reserved

R-0

15

3

2

1

0

Reserved

Reserved.

OVER0

R-0

R-0

R-0

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-6.OverrideRegister(OVER)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

Reserved

0

Reserved.Thisbitmustnotbechangedfromitsdefaultvalueof0.

1

Reserved

0

Reserved.Thisbitmustnotbechangedfromitsdefaultvalueof0.

0

OVER0

RINFOOverrideBit

0

TheRAMinforegistersRINFOLandRINFOUareusedtoselectthememoriesfortest

1

ThememoryinformationavailablefromROMwilloverridetheRAMselectionfromtheRAMinfo

registersRINFOLandRINFOU.

•OVER0

WhiledoingROM-basedtesting,eachalgorithmdownloadedfromtheROMhasamemorymask

associatedwithitthatdefinestheapplicablememorygroupsthealgorithmwillberunon.Bydefault,this

bitissetto1,whichmeansthememorymaskthatisdownloadedfromtheROMwilloverwritetheRAM

inforegisters.Theoverridebitcanberesetbywritinga0toit.Inthiscase,theapplicationcanselectthe

RAMgroupstobetestedbyconfiguringtheRAMinforegisters.

328

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTControlRegisters

NOTE:Whenthisoverridebit=0,eachalgorithmselectedinALGOregisterwillrunoneachRAM

selectedinRINFOLandRINFOUregister.Itmustbeensuredthat:

1.Onlythesametypeofmemories(singleportortwoport)areselected,and

2.OnlymemoriesthatarevalidforallalgorithmsenabledviatheALGOregister

areselected.

Iftheabovetworequirementsarenotmet,thememoryself-testwillfail.

7.5.6FailStatusFailRegister(FSRF0)

ThisregisterindicatesifaPort0failureoccurredduringamemoryself-test.Bit0getssetwhenevera

failureoccurs.FunctionalityoftheregisterisdescribedinFigure7-8andTable7-7.

Figure7-8.FailStatusFailRegister0(FSRF0)[offset=0190h]

31

16

Reserved

R-0

15

1

0

Reserved

FSRF0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-7.FailStatusFailRegister0(FSRF0)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

FSRF0

FailStatus0.ThisbitwouldbeclearedbyresetofthemoduleusingMSTGCRregisterinsystem

module.

0

NoFailureOccurred

1

IndicatesafailureonPort0

329

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTControlRegisterswww.ti.com

7.5.7FailStatusCountRegisters(FSRC0andFSRC1)

Theseregisterskeepcountofthenumberoffailuresobservedduringthememoryself-test.ThePBIST

controllerstopsexecutingthememoryself-testwheneverafailureoccursinanymemoryinstanceforany

ofthetestalgorithms.ThevalueinFSRC0/FSRC1getsincrementedbyonewheneverafailureoccurs

andgetsdecrementedbyonewhenthefailureisprocessed.FSRC0isforPort0andFSRC1isforPort1.

Figure7-9andTable7-8illustratetheFSRC0register,whileFigure7-10andTable7-9illustratethe

FSRC1register.

Figure7-9.FailStatusCount0Register(FSRC0)[offset=0198h]

31

16

Reserved

R-0

15

8

7

0

Reserved

FSRC0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-8.FailStatusCount0Register(FSRC0)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-0

FSRC0

FailStatusCount0.Indicatesthenumberoffailuresonport0.

Figure7-10.FailStatusCountRegister1(FSRC1)[offset=019Ch]

31

16

Reserved

R-0

15

8

7

0

Reserved

FSRC1

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-9.FailStatusCountRegister1(FSRC1)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-0

FSRC1

FailStatusCount1.Indicatesthenumberoffailuresonport1.

330

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTControlRegisters

7.5.8FailStatusAddressRegisters(FSRA0andFSRA1)

Theseregisterscapturethememoryaddressofthefirstfailureonport0andport1respectively.Figure7-

11andTable7-10illustratetheFSRA0register,whileFigure7-12andTable7-11illustratetheFSRA1

register.

Figure7-11.FailStatusAddress0Register(FSRA0)[offset=01A0h]

31

16

Reserved

R-0

15

0

FSRA0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-10.FailStatusAddress0Register(FSRA0)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FSRA0

FailStatusAddress0.Containstheaddressofthefirstfailure.

Figure7-12.FailStatusAddress1Register(FSRA1)[offset=01A4h]

31

16

Reserved

R-0

15

0

FSRA1

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-11.FailStatusAddress1Register(FSRA1)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FSRA1

FailStatusAddress1.Containstheaddressofthefirstfailure.

331

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTControlRegisterswww.ti.com

7.5.9FailStatusDataRegisters(FSRDL0andFSRDL1)

Theseregistersareusedtocapturethefailuredataincaseofamemoryself-testfailure.FSRDL0

correspondstoPort0,whileFSRDL1correspondstoPort1.Figure7-13andTable7-12illustratethe

FSRDL0register,whileFigure7-14andTable7-13illustratetheFSRDL1register.

Figure7-13.FailStatusDataRegister0(FSRDL0)[offset=01A8h]

31

16

FSRDL0

R-AAAAh

15

0

FSRDL0

R-AAAAh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-12.FailStatusDataRegister0(FSRDL0)FieldDescriptions

Bit

Field

Value

Description

31-0

FSRDL0

Failuredataonport0

Figure7-14.FailStatusDataRegister1(FSRDL1)[offset=01B0h]

31

16

FSRDL1

R-AAAAh

15

0

FSRDL1

R-AAAAh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-13.FailStatusDataRegister1(FSRDL1)FieldDescriptions

Bit

Field

Value

Description

31-0

FSRDL1

Failuredataonport1

332

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTControlRegisters

7.5.10ROMMaskRegister(ROM)

Thistwo-bitregistersetsappropriateROMaccessmodesforthePBISTcontroller.Thedefaultvalueis

11b.ThisregisterisillustratedinFigure7-15.ItcanbeprogrammedaccordingtoTable7-14.

Figure7-15.ROMMaskRegister(ROM)[offset=01C0h]

31

16

Reserved

R-0

15

2

1

0

Reserved

ROM

R-0

R/W-3h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-14.ROMMaskRegister(ROM)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

ROM

ROMMask

0

NoinformationisusedfromROM

1h

OnlyRAMGroupinformationfromROM

2h

OnlyAlgorithminformationfromROM

3h

BothAlgorithmandRAMinformationfromROM.Thisoptionshouldbeselectedforapplication

self-test.

7.5.11ROMAlgorithmMaskRegister(ALGO)

Thisregisterisusedtoindicatethealgorithm(s)tobeusedforthememoryself-testroutine.Eachbit

correspondstoaspecificalgorithm.Forexample,bit0controlswhetheralgorithm1isenabledornot.

Figure7-16andTable7-15illustratethisregister.

Figure7-16.ROMAlgorithmMaskRegister(ALGO)[offset=01C4h]

31

24

23

16

ALGO3

ALGO2

R/W-FFh

R/W-FFh

15

8

7

0

ALGO1

ALGO0

R/W-FFh

R/W-FFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-15.AlgorithmMaskRegister(ALGO)FieldDescriptions

Bit

Field

Value

Description

31

0

Algorithm32isnotselected

1

Selectsalgorithm32forPBISTrun

30

0

Algorithm31isnotselected

1

Selectsalgorithm31forPBISTrun

…

0

0

Algorithm1isnotselected

1

Selectsalgorithm1forPBISTrun

31-0

0

Noneofthealgorithmsareselected

333

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTControlRegisterswww.ti.com

NOTE:PleaserefertoTable2-6foravailablealgorithmsandthememoriesonwhicheachalgorithm

canberun.

7.5.12RAMInfoMaskLowerRegister(RINFOL)

ThisregisteristoselectRAMgroupstorunthealgorithmsselectedintheALGOregister.Foranalgorithm

tobeexecutedonaparticularRAMgroup,thecorrespondingbitinthisregistermustbesetto‘1’.The

defaultvalueofthisregisterisall‘1’s,whichmeansalltheRAMGroupsareselected.Figure7-17and

Table7-16illustratethisregister.

Theinformationfromthisregisterisusedonlywhenbit0inOVERregisterisnotset.

Figure7-17.RAMInfoMaskLowerRegister(RINFOL)[offset=01C8h]

31

24

23

16

RINFOL3

RINFOL2

R/W-FFh

R/W-FFh

15

8

7

0

RINFOL1

RINFOL0

R/W-FFh

R/W-FFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-16.RAMInfoMaskLowerRegister(RINFOL)FieldDescriptions

Bit

Field

Value

Description

31

0

RAMGroup32isnotselected

1

Selectsgroup32forPBISTrun

30

0

RAMGroup31isnotselected

1

SelectsRAMgroup31forPBISTrun

…

0

0

RAMGroup1isnotselected

1

SelectsRAMGroup1forPBISTrun

31-0

0

NoneoftheRAMGroups1to32areselected

NOTE:PleaserefertoTable2-5forRAMinfogroups.

334

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTControlRegisters

7.5.13RAMInfoMaskUpperRegister(RINFOU)

ThisregisteristoselectRAMgroupstorunthealgorithmsselectedintheALGOregister.Foranalgorithm

tobeexecutedonaparticularRAMgroup,thecorrespondingbitinthisregistershouldbesetto‘1’.The

defaultvalueofthisregisterisall‘1’s,whichmeansalltheRAMInfoGroupswouldbeselected.Figure7-

18andTable7-17illustratethisregister.

Figure7-18.RAMInfoMaskUpperRegister(RINFOU)[offset=01CCh]

31

24

23

16

RINFOU3

RINFOU2

R/W-FFh

R/W-FFh

15

8

7

0

RINFOU1

RINFOU0

R/W-FFh

R/W-FFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table7-17.RAMInfoMaskUpperRegister(RINFOU)FieldDescriptions

Bit

Field

Value

Description

31

0

RAMGroup64isnotselected

1

Selectsgroup64forPBISTrun

30

0

RAMGroup63isnotselected

1

SelectsRAMgroup63forPBISTrun

0

0

RAMGroup33isnotselected

1

SelectsRAMGroup33forPBISTrun

31-0

0

NoneofRAMGroups33to64areselected

335

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PBISTConfigurationExamplewww.ti.com

7.6PBISTConfigurationExample

ThefollowingexamplesassumethatthePLLislockedandselectedasclocksourcewithHCLK=

160MHzandVCLK=80MHz.

7.6.1Example1:ConfigurationofPBISTControllertoRunSelf-TestonRAMGroup3

ThisexampleexplainstheconfigurationsforrunningMarch13,Down1AandMapColumnalgorithmson

RAMGroup3(seedevicedatasheetforRAMGroupinformation).

1.ProgramtheHCLKtoPBISTROMclockratioto1:2inSystemModule.

MSTGCR[9:8]=1

2.EnablePBISTControllerinSystemModule.

MSIENA[31:0]=0x00000001

3.EnablethePBISTself-testinSystemModule.

MSTGCR[3:0]=0xA

4.Waitforatleast32VCLKcyclesinasoftwareloop.

5.EnablethePbistinternalclocksandROMinterfaceclock.

PACT=0x3

6.DisableRAMOverride.ThiswillmakethePBISTcontrollerusetheinformationprovidedbythe

applicationintheRINFOxandALGOregistersforthememoryself-test.

OVER=0x0;

7.SelecttheAlgorithm(referTable2-6).

ALGO=0x00000054(Algo3=March13N,Algo5=down1A_red,Algo7=Mapcolumnfortwo-port

RAMGroup3)

8.ProgramtheRAMgroupInfotoselectRAMGroup3(referTable2-5).

RINFOL=0x00000004(selectRAMGroup3)

RINFOU=0x00000000(sincethisdevicesupportsonly28RAMGroups)

9.SelectbothAlgorithmandRAMinformationfromonchipPBISTROM.

ROM=0x3

10.ConfigurePBISTtoruninROMModeandstartPBISTrun.

DLR=0x14

11.WaitforPBISTtesttocompletebypollingMSTDONEbitinSystemModule.

while(MSTDONE!=1);

12.Onceself-testiscompleted,checktheFailStatusregisterFSRF0.

(a)Incasethereisafailure(FSRF0=0x01):

(i)ReadRAMTregisterwhichindicatestheRGSandRDSvaluesofthefailureRAM.

(ii)ReadFSRC0andFSRC1registerswhichcontainsthefailurecount.

(iii)ReadFSRA0andFSRA1registerswhichcontainstheaddressoffirstfailure.

(iv)ReadFSRDL0andFSRDL1registerswhichcontainsthefailuredata.

(v)ResumetheTestifrequiredusingProgramControlregister(offset=0x16C)STR=2.

(b)Incasethereisnofailure(FSRF0=0x00),thememoryself-testiscompleted:

(i)DisablethePBISTinternalandROMclocks.

PACT=0

(ii)DisablethePBISTself-test.

MSTGCR[3:0]=0x5

336

ProgrammableBuilt-InSelf-Test(PBIST)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comPBISTConfigurationExample

7.6.2Example2:ConfigurationofPBISTControllertoRunSelf-TestonALLRAMGroups

ThisexampleexplainstheconfigurationsforrunningMarch13,Down1AandMapcolumnalgorithmsonall

RAMgroupsdefinedinthePBISTROM.

1.ProgramtheHCLKtoPBISTROMclockratioto1:2inSystemModule.

MSTGCR[9:8]=1

2.EnablePBISTControllerinSystemModule.

MSIENA[31:0]=0x00000001

3.EnablethePBISTself-testinSystemModule.

MSTGCR[3:0]=0xA

4.Waitforatleast32VCLKcyclesinasoftwareloop.

5.EnablethePbistinternalclocksandROMinterfaceclock.

PACT=0x3

6.EnableRAMOverride.

OVER=0x1;

7.SelecttheAlgorithmstoberun(referTable2-6).

ALGO=0x000000FC(selectMarch13N,Down1AandMapColumnalgorithmsforsingle-portandtwo-

portRAMs)

8.SelectbothAlgorithmandRAMinformationfromonchipPBISTROM.

ROM=0x3

9.ConfigurePBISTtoruninROMModeandkickoffPBISTtest.

DLR=0x14

10.WaitforPBISTtesttocompletebypollingMSTDONEbitinSystemModule.

while(MSTDONE!=1);

11.Onceself-testiscompleted,checktheFailStatusregisterFSRF0:

(a)Incasethereisafailure(FSRF0=0x01):

(i)ReadRAMTregisterwhichindicatestheRGSandRDSvaluesofthefailureRAM.

(ii)ReadFSRC0andFSRC1registerswhichcontainsthefailurecount.

(iii)ReadFSRA0andFSRA1registerswhichcontainstheaddressoffirstfailure.

(iv)ReadFSRDL0andFSRDL1registerswhichcontainsthefailuredata.

(v)ResumetheTestifrequiredusingProgramControlregister(offset=0x16C)STR=2.

(b)Incasethereisnofailure(FSRF0=0x00),thememoryself-testiscompleted:

(i)DisablethePBISTinternalandROMclocks.

PACT=0

(ii)DisablethePBISTself-test.

MSTGCR[3:0]=0x5

337

SPNU499B–November2012–RevisedAugust2013

ProgrammableBuilt-InSelf-Test(PBIST)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter8

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

ThischapterdescribesthebasicsandconfigurationoftheCPUself-testcontrollerpresentinthedevice.

Topic...........................................................................................................................Page

8.1GeneralDescription.........................................................................................339

8.2ApplicationSelf-TestFlow................................................................................341

8.3STCTestCoverageandDuration.......................................................................343

8.4STCControlRegisters......................................................................................344

8.5STCConfigurationExample..............................................................................352

338

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGeneralDescription

8.1GeneralDescription

TheCPUself-testcontroller(STC)isusedtotesttheARM-CPUcoreusingtheDeterministicLogicBuilt-in

Self-Test(LBIST)Controllerasthetestengine.Toachievebettercoveragefortheself-testofcomplex

coreslikeCortex-R4,on-chiplogicBISTisthepreferredsolution.

8.1.1CPUSelf-TestControllerFeatures

TheCPUself-testcontrollerhasthefollowingfeatures:

•Capableofrunningthecompletetestaswellasrunningafewintervalsatatime

–Abilitytocontinuefromthelastexecutedinterval(testset)aswellastheabilitytorestartfromthe

beginning(firsttestset)

–Totalof24intervalssupportedinthisdevice

•Completeisolationoftheself-testedCPUcorefromtherestofthesystemduringtheself-testrun

–Theself-testedCPUcoremasterbustransactionsignalsareconfiguredtobeinidlemodeduring

theself-testrun

–AnymasteraccesstotheCPUcoreunderself-test(example:DMAaccesstoCPUTCM)willbe

helduntillthecompletionoftheself-test

•Abilitytocapturethefailureintervalnumber

•TimeoutcounterfortheCPUself-testrunasafail-safefeature

•AbletoreadtheMISRdata(shiftedfromLBISTcontroller)ofthelastexecutedintervaloftheself-test

runfordebuggingpurposes

•STCCLKdeterminestheself-testexecutionspeed,STCclockdivider(STCCLKDIV)registerinthe

systemmoduleisusedtodivideHCLK(systemclock)togenerateSTCCLK

8.1.2STCBlockDiagram

STCmoduleprovidesaninterfacetotheLBISTcontrollerimplementedonthecore.

TheCPUSTCiscomposedoffollowingblocksoflogic:

•ROMInterface

•FSMandSequenceControl

•RegisterBlock

•PeripheralBusInterface(VBUSPInterface)

•STCBypass/ATEInterface

8.1.2.1ROMInterface

ThisblockhandlestheROMaddressandcontrolsignalgenerationtoreadtheself-testmicrocodefrom

theROM.ThetestmicrocodeandgoldensignaturevalueforeachintervalarestoredinROM.

8.1.2.1.1FSMandSequenceControl

ThisblockgeneratesthesignalsanddatatotheLBISTcontrollerbasedontheseed,test_typeandscan

chaindepth.

8.1.2.1.2ClockControl

TheCLOCKCNTRLsub-blockhandlestheinternalclockselectionandclockgenerationfortheROMand

LBISTcontroller.

8.1.2.2RegisterBlock

Thisblockhandlesthecontroloftheself-testcontroller.Thisblockcontainsvariousconfigurationand

statusregisterswhichprovidetheresultofaself-testrun.Theseregistersarememorymappedand

accessiblethroughthePeripheralBus(VBUSP)Interface.Thisblockcontrolsthereseeding(reloadingthe

existingseedofthePRPG)intheLBISTcontroller.

339

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




STCREGBLOCKDBISTCPU1

CNTRLROMInterfaceFSMandSequenceController

VBUSPInterface

STC_BYPASS/

ClockController

PCR

DBISTCNTRL

CPU2BLK1COMPCOMPBLK1

misr_outmisr_out

CCMROM

ESM

ATE   InterfaceGlobalClockControllerCpu_Reset

Test

controllerSTC(BIST’edcore)(BIST’edcore)



GeneralDescriptionwww.ti.com

8.1.2.3STCBypass/ATEInterface

Thisisaproductiontestinterface.OnlyforTIinternaluse.

8.1.2.4PeripheralBus(VBUSP)Interface

STCcontrolregistersareaccessedthroughPeripheralBus(VBUSP)Interface.Duringapplication

programming,configurationregistersareprogrammedthroughthePeripheralBusInterfacetoenableand

runtheself-testcontroller.

Figure8-1.STCBlockDiagram

340

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comApplicationSelf-TestFlow

8.2ApplicationSelf-TestFlow

ThissectiondescribestheSTCmoduleconfigurationandtheapplicationself-testflowthattheusershould

followforsuccessfulexecution.

ThefollowingtwoconfigurationsmustbepartoftheSTCinitializationcode:

•STCclockrateconfiguration,STCclockdivider(STCCLKDIV)registerinsystemmoduleisusedto

divideHCLK(systemclock)togenerateSTCCLK

•ClearSYSESRregisterbeforetriggeringanSTCtest

8.2.1STCModuleConfiguration

•ConfigurethetestintervalcountusingSTCGCR0[31:16]register.Amaximumof24intervalsare

supportedinthedevice.Theusercanrun24intervalstogetherorinslices.Ifthetestsarerunin

slices,theusersoftwarecanspecifytotheself-testcontrollerwhethertocontinuetherunfromthenext

intervalonwardsortorestartfrominterval0usingbitSTCGCR0[0].Thisbitgetsresetafterthe

completionoftheself-testrun.

•Configureself-testruntimeoutcounterpreloadregisterSTCTPR.Thisregistercontainsthetotal

numberofVBUSclockcyclesitwilltakebeforeaself-testtimeouterror(TO_ERR)willbetriggered

aftertheinitiationoftheself-testrun.

•EnableCPUself-testbywritingtheenablekeytoSTCGCR1register.

8.2.2ContextSaving

STCgeneratesaCPUresetaftercompletionofthetestregardlessofpassorfail.Theusercanrunthe

STCtestduringstartuporcandivideSTCinto24orfewerintervalsandrunthemduringnormaloperation.

IfSTCisranonlyonstartup,theusersoftwareneednotsavetheCPUcontentssincetheresetcaused

willgothroughallstartupconfigurations.UsershouldchecktheSTCGSTATregisterfortheself-test

statusbeforegoingtotheapplicationsoftware.

IfSTCisdividedintointervalsandran,usersoftwaremustsavetheCPUcontentsandreloadthemafter

theCPUresetcausedbythecompletionoftheSTCtestinterval.ThecheckforSTCstatusshouldbypass

STCruniftheresetiscausedbyanSTCruntopreventacyclicreset,i.e.,ifresetiscausedbySTCthe

secondtimethrough,thenitshouldnotberanagain.TheusershouldalsochecktheSTCGSTATregister

fortheself-teststatusbeforerestoringtheapplicationsoftware.

Followingaresomeoftheregistersthatarerequiredtobebackedupbeforeandrestoredafterself-test:

1.CPUcoreregisters(allmodesR0-R15,PC,CPSR)

2.CP15SystemControlCoprocessorregisters-MPUcontrolandconfigurationregisters,Auxiliary

ControlRegisterusedtoEnableECC,FaultStatusRegisteretc.

3.CP13CoprocessorRegisters-FPUconfigurationregisters,GeneralPurposeRegisters

4.HardwareBreakPointandwatchpointregisterslikeBVR,BSR,WVR,WSRetc.

FormoreinformationontheCPUreset,pleaserefertotheCortex-R4TechnicalReferenceManual

versionr1p3.

NOTE:CheckallresetsourceflagsintheSYSESRregisterafteraCPUBISTexecution.Ifaflagin

additiontoCPUresetisset,cleartheCPUresetflagandservicetheotherresetsources

accordingly.

8.2.3EnteringCPUIdleMode

AfterenablingtheSTCtestbywritingtheSTCenablekey,thetestistriggeredonlyaftertheCPUistaken

toidlemodebyexecutingtheCPUIdleInstructionasm(“WFI”).

8.2.4Self-TestCompletionandErrorGeneration

Attheendofeachinterval,the128bitMISRvalue(reflectedinregistersCPUx_CURMISR[3:0])fromthe

DBISTcontrollerisshiftedintotheSTC.ThisiscomparedwiththegoldenMISRvaluestoredintheROM.

341

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ConfigureSTC_ENAKeytoenableSelfTest

ProgramtheSTCGCR0registerstospecifythenumberofintervals(N),timeoutcounteretcforaselftestrun.

StartUpselftest?

ConfigureCPUinWFImode(IDLEmode)

WFI executed?CPUSelfTestexecution.CPUconfiguredintosafemode

SelfTestDone?

ReadtheSelfTestandsystemstatusregisters.RetrievestateofCPUandRegisters

NONONOYESYESYES

CPUresetasserted

andcontinueApplicationSoftware.

Store CPU state and Registers in MemorybeforestartingSTCTestConfigureSTCCLKrateusingSTCCLKDIVregisterinSYS2registerframe.



ApplicationSelf-TestFlowwww.ti.com

AttheendofaCPUself-test,theSTCcontrollerupdatesthestatusflagsintheGlobalStatusRegister

(STCGSTAT)andresetstheCPU.IncaseofaMISRmismatchoratesttimeout,anerrorisgenerated

throughtheESMmodule.TEST_ERRsignalisassertedwhenanMISRmiscompareoccursduringthe

self-test.ATO_ERRisassertedwhenatimeoutoccursduringtheself-test,meaningthetestcouldnot

completewithinthetimespecifiedinthetimeoutcounterpreloadregisterSTCTPR.However,atthe

devicelevel,thesetwoerrorsarecombinedandmappedtoasingleESMchannel.Toidentifywhicherror

occurred,usersoftwaremustchecktheglobalstatusregister(STCGSTAT)andfailstatusregister

STCFSTATintheESMinterruptserviceroutine.

Figure8-2illustratestheapplicationself-testtestflowchart,drawnbasedontheassumptionthatthe

devicehasgonethroughstartup,necessaryclocksinitializedandSYSESRregisterbitscleared.

Figure8-2.ApplicationSelf-TestFlowChart

342

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSTCTestCoverageandDuration

8.3STCTestCoverageandDuration

Thetestcoverageandnumberoftestexecutioncycles(STCCLK)foreachtestintervalwhenthedeviceis

runningatHCLK=180MHz,VCLK=90MHz,andSTCCLK=90MHzareshowninTable8-1.

Table8-1.STCTestCoverageandDuration

Intervals

TestCoverage

TestCycle

TestTime(us)

0

0

0

0

1

62.13

1365

15.17

2

70.09

2730

30.33

3

74.49

4095

45.50

4

77.28

5460

60.67

5

79.28

6825

75.83

6

80.90

8190

91.00

7

82.02

9555

106.17

8

83.10

10920

121.33

9

84.08

12285

136.50

10

84.87

13650

151.67

11

85.59

15015

166.83

12

86.11

16380

182.00

13

86.67

17745

197.17

14

87.16

19110

212.33

15

87.61

20475

227.50

16

87.98

21840

242.67

17

88.38

23205

257.83

18

88.69

24570

273.00

19

88.98

25935

288.17

20

89.28

27300

303.33

21

89.50

28665

318.50

22

89.76

30030

333.67

23

90.01

31395

348.83

24

90.21

32760

364.00

Table8-2givesthetypicalSTCexecutiontimesfor24intervalsatdifferentclockrates.

Table8-2.TypicalSTCExecutionTimes

NumberofIntervals

@HCLK=180MHz

@HCLK=100MHz

@HCLK=160MHz

VCLK=90MHz

VCLK=100MHz

VCLK=80MHz

STCCLK=90MHz

STCCLK=50MHz

STCCLK=80MHz

24

364us

655.20us

409.50us

343

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






STCControlRegisterswww.ti.com

8.4STCControlRegisters

STCcontrolregistersareaccessedthroughPeripheralBus(VBUSP)interface.Readandwriteaccessin

8,16and32bitaresupported.ThebaseaddressforthecontrolregistersisFFFFE600h.

NOTE:Insuspendmode,allregisterscanbewrittenirrespectiveofuserorprivilegemode.

Table8-3.STCControlRegisters

Offset

Acronym

RegisterDescription

Section

00

STCGCR0

STCGlobalControlRegister0

Section8.4.1

04h

STCGCR1

STCGlobalControlRegister1

Section8.4.2

08h

STCTPR

Self-TestRunTimeoutCounterPreloadRegister

Section8.4.3

0Ch

STC_CADDR

STCCurrentROMAddressRegister

Section8.4.4

10h

STCCICR

STCCurrentIntervalCountRegister

Section8.4.5

14h

STCGSTAT

Self-TestGlobalStatusRegister

Section8.4.6

18h

STCFSTAT

Self-TestFailStatusRegister

Section8.4.7

1Ch

CPU1_CURMISR3

CPU1CurrentMISRRegister

Section8.4.8

20h

CPU1_CURMISR2

CPU2CurrentMISRRegister

Section8.4.8

24h

CPU1_CURMISR1

CPU1CurrentMISRRegister

Section8.4.8

28h

CPU1_CURMISR0

CPU1CurrentMISRRegister

Section8.4.8

2Ch

CPU2_CURMISR3

CPU2CurrentMISRRegister

Section8.4.9

30h

CPU2_CURMISR2

CPU2CurrentMISRRegister

Section8.4.9

34h

CPU2_CURMISR1

CPU2CurrentMISRRegister

Section8.4.9

38h

CPU2_CURMISR0

CPU2CurrentMISRRegister

Section8.4.9

3Ch

STCSCSCR

SignatureCompareSelf-CheckRegister

Section8.4.9

344

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSTCControlRegisters

8.4.1STCGlobalControlRegister0(STCGCR0)

ThisregisterisdescribedinFigure8-3andTable8-4.

Figure8-3.STCGlobalControlRegister0(STCGCR0)[offset=00]

31

16

INTCOUNT

R/W-1

15

1

0

Reserved

RS_CNT

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table8-4.STCGlobalControlRegister0(STCGCR0)FieldDescriptions

Bit

Field

Value

Description

31-16

INTCOUNT

Numberofintervalsofself-testrun

Thisregisterspecifiesthenumberofintervalstorunfortheself-testrun.Thiscorrespondsto

thenumberofintervalstoberanfromthevaluereflectedinthecurrentintervalcounter.

15-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

RS_CNT

RestartorContinue

Thisbitspecifieswhethertocontinuetherunfromnextintervalonwardsortorestartfrom

interval0.Thisbitgetsresetafterthecompletionofaself-testrun.

0

ContinueSTCrunfromthepreviousinterval.

1

RestartSTCrunfrominterval0.

NOTE:Onapowerupresetorsystemresetthisregistergetsresettoitsdefaultvalues.

8.4.2STCGlobalControlRegister1(STCGCR1)

ThisregisterisdescribedinFigure8-4andTable8-5.

Figure8-4.STCGlobalControlRegister1(STCGCR1)[offset=04h]

31

16

Reserved

R-0

15

4

3

0

Reserved

STC_ENA

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafternPORST(poweronreset)orSystemreset

Table8-5.STCGlobalControlRegister1(STCGCR1)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

STC_ENA

Self-testrunenablekey

Ah

Self-testrunenabled.

AllOthers

Self-testrundisabled.

NOTE:Onapowerupresetorsystemresetthisregisterresetstoitsdefaultvalues.Alsothis

registerautomaticallyresetstoitsdefaultvaluesatthecompletionofaself-testrun.

345

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






STCControlRegisterswww.ti.com

8.4.3Self-TestRunTimeoutCounterPreloadRegister(STCTPR)

ThisregisterisdescribedinFigure8-5andTable8-6.

Figure8-5.Self-TestRunTimeoutCounterPreloadRegister(STCTPR)[offset=08h]

31

16

RTOD

R/WP-FFFFh

15

0

RTOD

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafternPORST(poweronreset)orSystemreset

Table8-6.Self-TestRunTimeoutCounterPreloadRegister(STCTPR)

Bit

Field

Value

Description

31-0

RTOD

Self-testtimeoutcountpreload

ThisregistercontainsthetotalnumberofVBUSclockcyclesitwilltakebeforeanself-test

timeouterror(TO_ERR)willbetriggeredaftertheinitiationoftheself-testrun.Thisisafailsafe

featuretopreventthedevicefromhangingupduetoarunawaytestduringtheself-test.

Thepreloadcountvaluegetsloadedintotheself-testtimeoutdowncounterwheneveraself-

testrunisinitiated(STC_KEYisenabled)andgetsdisabledoncompletionofaself-testrun.

NOTE:ThisregistergetsresettoitsdefaultvaluewithPoweronorsystemresetassertion.

8.4.4STCCurrentROMAddressRegister(STC_CADDR)

ThisregisterisdescribedinFigure8-6andTable8-7.

Figure8-6.STCCurrentROMAddressRegister(STC_CADDR)[offset=0Ch]

31

16

ADDR

R-0

15

0

ADDR

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafternPORST(poweronreset)orSystemreset

Table8-7.STCCurrentROMAddressRegister(STC_CADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

ADDR

CurrentROMAddress

ThisregisterreflectsthecurrentROMaddress(formicrocodeload)whichisthecurrentvalue

oftheSTCprogramcounter.

NOTE:WhentheglobalconfigurationregisterrestartbitSTCGCR0[0]issettoa1onthestartofa

self-testrun,onapowerupresetorsystemresetthisregisterresetstoallzeroes.

346

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSTCControlRegisters

8.4.5STCCurrentIntervalCountRegister(STCCICR)

ThisregisterisdescribedinFigure8-7andTable8-8.

Figure8-7.STCCurrentIntervalCountRegister(STCCICR)[offset=10h]

31

16

Reserved

R-0

15

0

N

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table8-8.STCCurrentIntervalCountRegister(STCCICR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

N

IntervalNumber

Thisspecifiesthelastexecutedintervalnumber.

NOTE:WhentheglobalconfigurationregisterrestartbitSTCGCR[0]issettoa1oronapowerup

resetthecurrentintervalcounterresetstothedefaultvalue.

8.4.6Self-TestGlobalStatusRegister(STCGSTAT)

ThisregisterisdescribedinFigure8-8andTable8-9.

Figure8-8.Self-TestGlobalStatusRegister(STCGSTAT)[offset=14h]

31

8

Reserved

R-0

2

1

0

Reserved

TEST_FAIL

TEST_DONE

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table8-9.Self-TestGlobalStatusRegister(STCGSTAT)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

TEST_FAIL

TestFail

0

Self-testrunhasnotfailed.

1

Self-testrunhasfailed.

0

TEST_DONE

TestDone

0

Notcompleted.

1

Self-testruncompleted.

Thetestdoneflagissettoa1foranyofthefollowingconditions:

1.WhentheSTCruniscompletewithoutanyfailure

2.WhenafailureoccursonaSTCrun

3.Whenatimeoutfailureoccurs

ResetisgeneratedtotheCPUonwhichtheSTCrunisbeingperformedwhenTEST_DONE

goeshigh(thetestiscompleted).

347

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






STCControlRegisterswww.ti.com

NOTE:Theabove2statusbitscanbeclearedtotheirdefaultvaluesadisabledstatetoanenabled

state.AdditionallywhentheSTC_ENAKeyiswrittenfromadisabledstatetoenabledstate

the2statusflagsgetclearedtotheirdefaultvalues.Thisregistergetsresettoitsdefault

valuewithpoweronresetassertion.

8.4.7Self-TestFailStatusRegister(STCFSTAT)

ThisregisterisdescribedinFigure8-9andTable8-10.

Figure8-9.Self-TestFailStatusRegister(STCFSTAT)[offset=18h]

31

8

Reserved

R-0

3

2

1

0

Reserved

TO_ERR

CPU2_FAIL

CPU1_FAIL

R-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafternPORST(poweronreset)orSystemreset

Table8-10.Self-TestFailStatusRegister(STCFSTAT)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TO_ERR

TimeoutError

0

Notimeouterroroccurred.

1

Self-testrunfailedduetoatimeouterror.

1

CPU2_FAIL

CPU2failureinfo

0

NoMISRmismatchforCPU2.

1

Self-testrunfailedduetoMISRmismatchforCPU2.

0

CPU1_FAIL

CPU1failureinfo

0

NoMISRmismatchforCPU1.

1

Self-testrunfailedduetoMISRmismatchforCPU1.

NOTE:Theabove3statusbitscanbeclearedtotheirdefaultvaluesonawriteof1.Additionally

whentheSTC_ENAKeyinSTCGCR1iswrittenfromadisabledstatetoanenabledstate,

the3statusbitsgetclearedtotheirdefaultvalues.Thisregistergetsresettoitsdefaultvalue

withpoweronresetassertion.

348

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSTCControlRegisters

8.4.8CPU1CurrentMISRRegister(CPU1_CURMISR[3:0])

ThisregisterisdescribedinFigure8-10throughFigure8-13andTable8-11.

Figure8-10.CPU1CurrentMISRRegister(CPU1_CURMISR3)[offset=1Ch]

31

16

MISR[31:16]

R-0

15

0

MISR[15:0]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure8-11.CPU1CurrentMISRRegister(CPU1_CURMISR2)[offset=20h]

31

16

MISR[63:48]

R-0

15

0

MISR[47:32]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure8-12.CPU1CurrentMISRRegister(CPU1_CURMISR1)[offset=24h]

31

16

MISR[95:80]

R-0

15

0

MISR[79:64]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure8-13.CPU1CurrentMISRRegister(CPU1_CURMISR0)[offset=28h]

31

16

MISR[127:112]

R-0

15

0

MISR[111:96]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table8-11.CPU1CurrentMISRRegister(CPU1_CURMISR[3:0])FieldDescriptions

Bit

Field

Value

Description

127-0

MISR

MISRdatafromCPU1

ThisregistercontainstheMISRdatafromtheCPU1forthemostrecentinterval.Thisvalueis

comparedwiththeGOLDENMISRvaluecopiedfromROM.

NOTE:Thisregistergetsresettoitsdefaultvaluewithpoweronorsystemresetassertion.

349

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






STCControlRegisterswww.ti.com

8.4.9CPU2_CURMISR[3:0](CPU2CurrentMISRRegister)

ThisregisterisdescribedinFigure8-14throughFigure8-17andTable8-12.

Figure8-14.CPU2CurrentMISRRegister(CPU2_CURMISR3)[offset=2Ch]

31

16

MISR[31:16]

R-0

15

0

MISR[15:0]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure8-15.CPU2CurrentMISRRegister(CPU2_CURMISR2)[offset=30h]

31

16

MISR[63:48]

R-0

15

0

MISR[47:32]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure8-16.CPU2CurrentMISRRegister(CPU2_CURMISR1)[offset=34h]

31

16

MISR[95:80]

R-0

15

0

MISR[79:64]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure8-17.CPU2CurrentMISRRegister(CPU2_CURMISR0)[offset=38h]

31

16

MISR[127:112]

R-0

15

0

MISR[111:96]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table8-12.CPU2CurrentMISRRegister(CPU2_CURMISR[3:0])FieldDescriptions

Bit

Field

Value

Description

127-0

MISR

MISRdatafromCPU2

ThisregistercontainstheMISRdatafromtheCPU2forthemostrecentinterval.Thisvalueis

comparedwiththeGOLDENMISRvaluecopiedfromROM.

NOTE:Thisregistergetsresettoitsdefaultvaluewithpoweronorsystemresetassertion.

350

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSTCControlRegisters

8.4.10STCSCSCR(SignatureCompareSelf-CheckRegister)

ThisregisterisdescribedinFigure8-18.ThisregisterisusedtoenabletheselfcheckfeatureoftheCPU

Self-TestController's(STC)signaturecomparelogic.SelfcheckcanonlybedonefortheSTCinterval-0

whichcanbeachievedbysettingSTCGCR0[0]to‘0’(restart)andSTCrunisexpectedtofailfor

signaturemiscompare.ToproceedwithregularCPUselftestSTCSCSCRshouldbeprogrammedto

disabletheselfcheckfeatureandSTCGCR0[0]to‘0’.Thisregistergetsresettoitsdefaultvaluewithany

systemresetassertion.

Figure8-18.SignatureCompareSelf-CheckRegister(STCSCSCR)[offset=3Ch]

31

16

Reserved

R-0

15

5

4

3

0

Reserved

FAULT

SELF_CHECK_KEY

_INS

R-0

R/WP-

R/WP-0101

0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafternPORST(poweronreset)orSystemreset

Table8-13.SignatureCompareSelf-CheckRegsiter(STCSCSCR)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

Readsreturnzeros,writeshavenoeffect

4

FAULT_INS

Enable/Disablefaultinsertion.

0

Nofaultisinserted

1

Insertstuck-at-faultinsideCPUsothatSTCsignaturecomparewillfail

3-0

SELF_CHECK_K

Signaturecomparelogicself-checkenablekey

EY

1010

Signaturecomparelogicself-checkisenabled.Thisallowsafaulttobeinsertedusingthe

FAULT_INSfield.

Anyother

Signaturecomparelogicself-checkisdisabledTheFAULT_INSfieldhasnoeffectinthiscase.

value

351

SPNU499B–November2012–RevisedAugust2013

CPUSelf-TestController(STC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






STCConfigurationExamplewww.ti.com

8.5STCConfigurationExample

ThefollowingexamplesassumethatthePLLislockedandselectedasthesystemclocksourcewith

HCLK=180MHzandVCLK=90MHz.

8.5.1Example1:Self-TestRunfor24Interval

ThisexampleexplainstheconfigurationsforrunningSTCTestformaximumTestIntervals24.

1.MaximumSTCclockratesupportat180MHzHCLKis90MHz.DivideHCLKby2toachievethis

clockrate.STCCLKDIV[26:24]registerinthesecondarysystemmoduleframeatlocation0xFFFF

E108isused.

STCCLKDIV[26:24]=1

2.ClearCPURSTstatusbitintheSystemExceptionStatusRegisterinthesystemmodule.

SYSESR[5]=1

3.ConfigurethetestintervalcountinSTCmodule.

STCGCR0[31:16]=24

4.Configureself-testruntimeoutcounterpreloadregister.

STCTPR[31:0]=0xFFFFFFFF

5.EnableCPUself-test.

STCGCR1[3:0]=0xA;

6.PerformacontextsaveofCPUstateandconfigurationregistersthatgetresetonCPUreset.

7.PuttheCPUinidlemodebyexecutingtheCPUidleinstruction.

asm(“WFI”)

8.UponCPUreset,verifytheCPURSTstatusbitintheSystemExceptionStatusRegisterisset.This

alsoverifiesthatnootherresetsoccurredduringtheself-test.

SYSESR[5]==1

9.ChecktheSTCGSTATregisterfortheself-teststatus.

CheckTEST_DONEbitbeforeevaluatingTEST_FAILbit.

IfTEST_DONE=0theself-testisnotcompleted.restarttheSTCtestbygoingtoStep5.

If(TEST_DONE=1andTEST_FAIL=1)theself-testiscompletedandFailed.

•ReadSTCFailStatusRegisterSTCFSTAT[2:0]toidentifythetypeofFailure(Timeout,CPU1fail,

CPU2fail).

Incasethereisnofailure(TEST_DONE=1andTEST_FAIL=0),theCPUself-testiscompleted

successfully.

•RecovertheCPUstatus,configurationregistersandcontinuetheapplicationsoftware.

352

CPUSelf-TestController(STC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter9

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

ThischapterdescribestheCPUcomparemoduleforCortex-R4F(CCM-R4F).Thisdeviceimplementstwo

instancesoftheCortex-R4FCPUwhicharerunninginlocksteptodetectfaultswhichmayresultin

unsafeoperatingconditions.TheCCM-R4Fdetectsfaultsandsignalsthemtoanerrorsignalingmodule

(ESM).

NOTE:Ingeneral,R4FisusedwhenreferencingtheCortexCPUusedintheHerculesfamilyof

devices;however,thefloating-pointfunctionalityisadevice-specificoptionandmaynotbe

includedinsomedevices.Consultyourdevice-specificdatasheettodeterminewhichcoreis

includedonyourspecificdevicebeingused.

Topic...........................................................................................................................Page

9.1MainFeatures.................................................................................................354

9.2BlockDiagram.................................................................................................354

9.3ModuleOperation............................................................................................355

9.4ControlRegisters............................................................................................358

353

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CPU1CPU2

2cyclesdelay

2cyclesdelay

CCM-R4Fcompare

CCM-R4FCPU1CLKCPU2CLK

compareerror

ESM(ErrorSignalingModule)Master CPUChecker CPU



MainFeatureswww.ti.com

9.1MainFeatures

Safety-criticalapplicationsrequirerun-timedetectionoffaultsintheCentralProcessingUnit(CPU).For

thispurpose,theCPUCompareModuleforCortex-R4F(CCM-R4F)comparesthecorecomparebus

outputsoftwoCortex-R4FCPUsrunningina1oo1D(one-out-of-one,withdiagnostics)lockstep

configuration.AnydifferenceinthecorecomparebusoutputsoftheCPUsisflaggedasanerror.For

diagnosticpurposes,theCCM-R4Falsoincorporatesaself-testcapabilitytoallowforboottimechecking

ofhardwarefaultswithintheCCM-R4Fitself.

ThemainfeaturesoftheCCM-R4Fare:

•run-timedetectionoffaults

•self-testcapability

•errorforcingcapability

9.2BlockDiagram

Figure9-1showstheinterconnectiondiagramoftheCCM-R4FwiththetwoCortex-R4FCPUs.Thecore

comparebusoutputsoftheCPUsarecomparedintheCCM-R4F.Toavoidcommonmodeimpacts,the

signalsoftheCPUstobecomparedaretemporallydiverse.TheoutputsignalsofthemasterCPUare

delayed2cycleswhiletheinputsignalsofcheckerCPUaredelayed2cycles.

Figure9-1.BlockDiagram

354

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

9.3ModuleOperation

TheCCM-R4FcomparesthecorecomparebusoutputsofthemasterandcheckerCortex-R4FCPUson

themicrocontrollerandsignalsanerroronanymismatch.Thiscomparisonisstarted6CPUclockcycles

aftertheCPUcomesoutofresettoensurethatCPUoutputsignalshavepropagatedtoaknownvalue

afterreset.Oncecomparisonisstarted,theCCMmodulecontinuestomonitortheoutputsoftwoCPUs

withoutanysoftwareintervention.Uponanerrorsoftwareneedstohandleit.

TheCCM-R4Fcanruninoneofthefollowingfouroperatingmodes:

1.1oo1Dlockstep

2.self-test

3.errorforcing

4.self-testerrorforcing

Theoperatingmodecanbeselectedbywritingadedicatedkeytothekeyregister(MKEY).

9.3.11oo1DLockStepMode

Thisisthedefaultmodeonstart-up.

Inlockstepmode,thecomparebusoutputsignalsofbothCPUsarecompared.AdifferenceintheCPU

comparebusoutputsisindicatedbysignallinganerrortotheESMwhichsetstheerrorflag“CCM-R4F-

compare”.

NOTE:TheCPUcompareerrorasserts“CCM-R4Fself-testerror”flagaswell.Bydoingthis,the

CPUcompareerrorhastwopaths(“CCM-R4F-compare”and“CCM-R4Fself-testerror”

flag)totheESM,sothatevenifoneofthepathsfails,theerrorisstillpropagatedtothe

ESM.

NotallinternalregistersoftheCortexR4FCPUhavefixedvaluesuponreset.Toavoidanerroneous

CCMR4Fcompareerror,theapplicationsoftwareneedstoensurethattheCPUregistersofbothCPUs

areinitializedwiththesamevaluesbeforetheregistersareused,includingfunctioncallswherethe

registervaluesarepushedontothestack.

9.3.2Self-TestMode

Inself-testmode,theCCM-R4Fchecksitselfforfaults.Duringself-test,thecompareerrormoduleoutput

signalisdeactivated.AnyfaultdetectedinsidetheCCM-R4FwillbeflaggedbyESMerror“CCM-R4F-

selftest”.

Inself-testmode,theCCM-R4Fautomaticallygeneratestestpatternstolookforanyhardwarefaults.Ifa

faultisdetected,thenaself-testerrorflagisset,aself-testerrorsignalisassertedandsenttotheESM,

andtheself-testisterminatedimmediately.Ifnofaultisfoundduringself-test,theself-testcompleteflagis

set.Inbothcases,theCCM-R4Fremainsinself-testmodeafterthetesthasbeenterminatedor

completed,andtheapplicationneedstoswitchtheCCM-R4Fmodebywritinganotherkeytothemode

keyregister(MKEY).Duringtheself-testoperation,thecompareerrorsignaloutputtotheESMisinactive

irrespectiveofthecompareresult.

TherearetwotypesofpatternsgeneratedbyCCM-R4Fduringself-testmode:

(i)CompareMatchTest

(ii)CompareMismatchTest

CCM-R4FfirstgeneratesCompareMatchTestpatterns,followedbyCompareMismatchTestpatterns.

EachtestpatternisappliedonbothCPUsignalinputsoftheCCM-R4F’scompareblockandclockedfor

onecycle.Thedurationofself-testis3615CPUclockcycles(GCLK).

NOTE:Duringself-test,bothCPUscanexecutenormally,butthecomparelogicwillnotbechecking

anyCPUsignals.Alsoduringself-test,onlythecompareunitlogicistestedandnotthe

memorymappedregistercontrolsfortheCCM-R4F.Theself-testisnotinterruptible.

355

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

9.3.2.1CompareMatchTest

DuringtheCompareMatchTest,therearefourdifferenttestpatternsgeneratedtostimulatetheCCM-

R4F.Anidenticalvectorisappliedtobothinputportsatthesametimeexpectingacomparematch.These

patternscausetheself-testlogictoexerciseeveryCPUcomparebusoutputsignalinparallel.Ifthe

compareunitproducesacomparemismatchthentheself-testerrorflagisset,theself-testerrorsignalis

generated,andtheCompareMatchTestisterminated.

ThefourtestpatternsusedfortheCompareMatchTestare:

•All1sonbothCPUsignalports

•All0sonbothCPUsignalports

•0xAsonbothCPUsignalports

•0x5sonbothCPUsignalports

Thesefourtestpatternswilltakefourclockcyclestocomplete.illustratesthesequenceofCompareMatch

Test.

Table9-1.CompareMatchTestSequence

CPU1SignalPosition

CPU2SignalPosition

Cycle

n:8

7

6

5

4

3

2

1

0

n:8

7

6

5

4

3

2

1

0

1s

1

1

1

1

1

1

1

1

1s

1

1

1

1

1

1

1

1

0

0s

0

0

0

0

0

0

0

0

0s

0

0

0

0

0

0

0

0

1

0xA

1

0

1

0

1

0

1

0

0xA

1

0

1

0

1

0

1

0

2

0x5

0

1

0

1

0

1

0

1

0x5

0

1

0

1

0

1

0

1

3

9.3.2.2CompareMismatchTest

DuringtheCompareMismatchTest,thenumberoftestpatternsisequaltotwicethenumberofCPU

outputsignalstocompareinlockstepmode.Anall1svectorisappliedtotheCCM-R4F’sCPU1input

portandthesamepatternisalsoappliedtotheCCM-R4F’sCPU2inputportbutwithonebitflipped

startingfromsignalposition0.Theun-equalvectorwillcausetheCCM-R4Ftoexpectacompare

mismatchatsignalposition0,iftheCCM-R4Flogicisworkingcorrectly.If,however,theCCM-R4Flogic

reportsacomparematch,theself-testerrorflagisset,theself-testerrorsignalisasserted,andthe

CompareMismatchTestisterminated.

ThisCompareMismatchTestalgorithmrepeatsinadominofashionwiththenextsignalpositionflipped

whileforcingallothersignalstologiclevel1.Thissequenceisrepeateduntileverysinglesignalposition

isverifiedonbothCPUsignalports.

TheCompareMismatchTestisterminatediftheCCM-R4Freportsacomparematchversustheexpected

comparemismatch.ThistestensuresthatthecompareunitisabletodetectamismatchoneveryCPU

signalbeingcompared.Table9-2illustratesthesequenceofCompareMismatchTest.Thereisnoerror

signalissenttoESMiftheexpectederrorsareseenwitheachpattern.

356

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

Table9-2.CompareMismatchTestSequence

CPU1SignalPosition

CPU2SignalPosition

Cycle

n

n-1:8

7

6

5

4

3

2

1

0

n

n-1:8

7

6

5

4

3

2

1

0

1

1

1s

1

1

1

1

1

1

1

1

1

1

1s

1

1

1

1

1

1

1

0

0

1

1

1s

1

1

1

1

1

1

1

1

1

1

1s

1

1

1

1

1

1

0

1

1

1

1

1s

1

1

1

1

1

1

1

1

1

1

1s

1

1

1

1

1

0

1

1

2

1

1

1s

1

1

1

1

1

1

1

1

1

1

1s

1

1

1

1

0

1

1

1

3

::

1

1

1s

1

1

1

1

1

1

1

1

1

0

1s

1

1

1

1

1

1

1

1

n-1

1

1

1s

1

1

1

1

1

1

1

1

0

1

1s

1

1

1

1

1

1

1

1

n

1

1

1s

1

1

1

1

1

1

1

0

1

1

1s

1

1

1

1

1

1

1

1

n+1

1

1

1s

1

1

1

1

1

1

0

1

1

1

1s

1

1

1

1

1

1

1

1

n+2

1

1

1s

1

1

1

1

1

0

1

1

1

1

1s

1

1

1

1

1

1

1

1

n+3

1

1

1s

1

1

1

1

0

1

1

1

1

1

1s

1

1

1

1

1

1

1

1

n+4

::

1

0

1s

1

1

1

1

1

1

1

1

1

1

1s

1

1

1

1

1

1

1

1

2n-1

0

1

1s

1

1

1

1

1

1

1

1

1

1

1s

1

1

1

1

1

1

1

1

2n

9.3.3ErrorForcingMode

Inerrorforcingmode,atestpatternisappliedtotheCPUrelatedinputsoftheCCM-R4Fcomparelogicto

forceanerrorinthecompareerroroutputsignalofthecompareunit.TheESMerrorflag“CCM-R4F-

compare”isexpectedaftertheerrorforcingmodecompletes.Asasideeffect,the“CCM-R4Fself-test

error”flagisalsoassertedwhenevertheCPUcompareerrorisasserted.

ErrorforcingmodeissimilartotheCompareMismatchTestoperationofself-testmodeinwhichanun-

equalvectorisappliedtotheCCM-R4FCPUsignalports.Theerrorforcingmodeforcesthecompare

mismatchtoactuallyassertthecompareerroroutputsignal.Thisensuresthatfaultsinthepathbetween

CCM-R4FandESMisdetected.

OnlyonehardcodedtestpatternisappliedintoCCM-R4Fduringerrorforcingmode.Arepeated0x5

patternisappliedtoCPU1signalportofCCM-R4Finputwhilearepeated0xApatternisappliedtothe

CPU2signalportofCCM-R4Finput.Theerrorforcingmodetakesonecycletocomplete.Hence,the

failingsignatureispresentedforoneclockcycle.Afterthat,themodeisautomaticallyswitchedtolock

stepmode.Thekeyregister(MKEY)willindicatethelockstepkeymodeonceitisswitchedtolockstep

mode.Duringtheonecyclerequiredbytheerrorforcingtest,theCPUoutputsignalsarenotcompared.

UsershouldexpecttheESMtotriggeraresponse(reporttheCCM-R4Ffail).Ifnoerrorisdetectedby

ESM,thenahardwarefaultispresent.

9.3.4Self-TestErrorForcingMode

Inself-testerrorforcingmode,anerrorisforcedattheself-testerrorsignal.Thecompareunitisstill

runninginlockstepmodeandthekeyisswitchedtolockstepafteroneclockcycle.TheESMerrorflag

“CCM-R4F-selftest”isexpectedaftertheself-testerrorforcingmodecompletes.Oncetheexpected

errorsareseen,theapplicationcancleantheerrorthroughESMmodule.

357

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

9.3.5OperationDuringCPUDebugMode

CertaindebugoperationsplacetheCPUinahaltingdebugstatewherethecodeexecutionishalted.

Becausehaltingdebugeventsareasynchronous,thereisapossibilityforthedebugrequeststocause

lossoflockstep.CCM-R4Fwilldisableupondetectionofhaltingdebugrequests.Corecompareerrorwill

notbegeneratedandflagswillnotupdate.ACPUresetisneededtoensuretheCPUsareagainin

lockstepandwillalsore-enabletheCCM-R4F.

9.4ControlRegisters

ThissectiondescribestheCCM-R4Fregisters.Eachregisterbeginsona32-bitwordboundary.The

registerssupport32-bit,16-bitand8-bitaccesses.

Table9-3.ModuleRegisters

Offset

Acronym

RegisterDescription

Section

FFFFF600h

CCMSR

CCM-R4FStatusRegister

Section9.4.1

FFFFF604h

CCMKEYR

CCM-R4FKeyRegister

Section9.4.2

358

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

9.4.1CCM-R4FStatusRegister(CCMSR)

Figure9-2.CCM-R4FStatusRegister(CCMSR)(Offset=FFFFF600h)

31

17

16

Reserved

CPME

R-0

R/WPC-0

15

9

8

7

2

1

0

Reserved

STC

Reserved

STET

STE

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=WriteinPrivilegedmodeonly;-n=valueafterreset

Table9-4.CCM-R4FStatusRegister(CCMSR)FieldDescriptions(1)

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturnzerosandwriteshavenoeffect.

16

CMPE

CompareError

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:CPUsignalsareidentical.

Write:Leavesthebitunchanged.

1

Read:CPUsignalcomparemismatch.

Write:Clearsthebit.

15-9

Reserved

Readsreturnzerosandwriteshavenoeffect.

8

STC

Self-testComplete

Note:Thisbitisalways0whennotinself-testmode.Onceset,switchingfromself-testmodeto

othermodeswillclearthisbit.

Read/WriteinUserandPrivilegedmode.

0

Read:Self-teston-goingifself-testmodeisentered.

Write:Writeshavenoeffect.

1

Read:Self-testiscomplete.

Write:Writeshavenoeffect.

7-2

Reserved

Readsreturnzerosandwriteshavenoeffect.

1

STET

Self-testErrorType

Read/WriteinUserandPrivilegedmode.

0

Read:Self-testfailedduringCompareMatchTestifSTE=1.

Write:Writeshavenoeffect.

1

Read:Self-testfailedduringCompareMismatchTestifSTE=1.

Write:Writeshavenoeffect.

0

STE

Self-testError

Note:Thisbitgetsupdatedwhentheself-testiscompleteoranerrorisdetected.

Read/WriteinUserandPrivilegedmode.

0

Read:Self-testpassed.

Write:Writeshavenoeffect.

1

Read:Self-testfailed.

Write:Writeshavenoeffect.

(1)Thecontentsofthisregistershouldbeintepretedincontextofwhattestwasselected.ThatiswhatmodeisCCMoperatingin.

359

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

9.4.2CCM-R4FKeyRegister(CCMKEYR)

Figure9-3.CCM-R4FKeyRegister(CCMKEYR)(Offset=FFFFF604h)

31

16

Reserved

R-0

15

4

3

0

Reserved

MKEY

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteinPrivilegedmodeonly;-n=valueafterreset

Table9-5.CCM-R4FKeyRegister(CCMKEYR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturntozerosandwriteshavenoeffect.

3-0

MKEY

ModeKey

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:ReturnscurrentvalueoftheMKEY.

Write:Lockstepmode.

6h

Read:ReturnscurrentvalueoftheMKEY.

Write:Self-testmode.

9h

Read:ReturnscurrentvalueoftheMKEY.

Write:ErrorForcingmode.

Fh

Read:ReturnscurrentvalueoftheMKEY.

Write:Self-testErrorForcingmode.

Note:Itisrecommendedtonotwriteanyotherkeycombinations.Invalidkeyswillresultin

switchingoperationtolockstepmode.

360

SPNU499B–November2012–RevisedAugust2013

CPUCompareModuleforCortexTM-R4F(CCM-R4F)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter10

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

ThischapterdescribestheoscillatorandPLLclocksourcepathsforthedevice.

Topic...........................................................................................................................Page

10.1Introduction....................................................................................................362

10.2QuickStart......................................................................................................363

10.3Oscillator........................................................................................................364

10.4LowPowerOscillatorandClockDetect(LPOCLKDET)........................................366

10.5PLL................................................................................................................369

10.6ControlRegisters............................................................................................377

10.7Phase-LockedLoopTheoryofOperation...........................................................381

10.8ProgrammingExample.....................................................................................384

361

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




RODNFNRffOSCINPLL´=



Introductionwww.ti.com

10.1Introduction

ThisTechnicalReferenceManualchapterprovidesanoverviewoftheoscillatorandPLLclocksource

pathsforthedevice.

TheoscillatormacrowillpassasignaldrivenintotheOSCINpintoclocksource0whichisthedefault

clocksourceonreset.WhenacrystalorresonatorwithappropriateloadcircuitryisconnectedtoOSCIN

andOSCOUT,theoscillatormacrodrivesthecrystal/resonatortogeneratetheinputwaveform.Inaddition

tobeingdirectlyusableasclocksource0,theoscillatorclockistheinputtothePLL.

Theoscillatorfrequencyiscontinuouslymonitoredbyadedicatedclockdetectcircuit.Ifthefrequencyfalls

outofafixedrange,theclockdetectswitchestheclockfromtheoscillatortoaninternallygenerated,free-

runningfrequency(fromthelowpoweroscillator(LPO)).

Thephaselockloop(PLL),acircuitinthemicrocontroller,isusedtomultiplytheinputfrequencytosome

higher(deviceoperation)frequency.Thisfrequencysynthesisisusefulforgeneratinghigherfrequencies

thancanbeconvenientlyachievedwithanexternalcrystalorresonator.Additionally,thePLLallowsthe

flexibilitytobeabletosynthesizeoneofmultiplefrequencyoptionsfromagivencrystalorresonator.

Frequencymodulationcanbesuperimposedonthesynthesizedfrequency.Themodulationprovidesa

meanstoreducetheimpactofelectromagneticradiationfromthedevice;thisreductioninmeasured

radiationcanbeusefulinsensitiveapplications.

10.1.1Features

Themainfeaturesofthesourceclockpathare:

•Theoscillatormaydriveacrystal/resonatororbedrivenfromanexternalsource

•Theclockdetectprovidescontinuousmonitoringoftheoscillatorfrequencyandprovidesanautomatic

switchovertoafree-runningclockincaseofoscillatorfailure.

•TheFM-PLLmodulecanbeoperatedineithermodulationornon-modulationmode.

•Thephase-frequencydetectorassureslocktothefundamentalreferencefrequency.

•(2)

–Configurableprescaledivider(NR)fortheinputclock

–Configurablemultiplier(NF)

–Configurablepostscaledividers(OD,R)

•ThePLLmaybeusedwithmodulationenabled.

–Configurablemodulationfrequency(NS)

–Configurablemodulationdepth(NV)

•TheslipcontrolcircuitryprovidesflexibleresponsetoaPLLfailure(slip)includingresetorautomatic

switchovertooscillator.

362

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




crystal

loadscapacitor

CLKDET

LPO

PLL2

PLL1

slip

Clocksource numbering can befoundin the device data sheet.

devicepin

devicepinosc

KELVIN_GND

OSCILLATOR



www.ti.comQuickStart

10.2QuickStart

ThepurposeofthissectionistoprovideanoverviewofhowtoconfiguretheoscillatorandPLLclock

pathsonpower-up.Moredetaileddescriptionsarepresentedinlatersections.Figure10-1showsthe

oscillatorandPLLclockpaths.

Figure10-1.ClockPathFromOscillatorThroughPLLToDevice

Whilepower-onresetisasserted(low),theoscillatorandlowpoweroscillator(LPO)areenabledand

start-upbydefault.Afterpower-onresetisreleasedtoahighlevel,theclockdetectcircuit(CLKDET)

beginstomonitortheoscillator.Iftheoscillatoriswithinavalidrange,theoscillatorbecomesthedefault

clockforthedeviceasitexitsreset;iftheoscillatorisnotwithinavalidrange,theclockdetectselectsthe

high-frequencylowpoweroscillatorasthedefaultclockforthedevice.

Thelowpoweroscillatorhasawidefrequencyrangewhichalsocreatesalargevalidwindowfortheclock

detect;inordertorefinetheclockdetectwindow,thelowpoweroscillatorcanbetrimmed.Theinitialtrim

valueisstoredinone-timeprogrammablesectionoftheflashmemory,address0xF008_01B4.Bits31:16

ofthiswordcontaina16bitvaluethatmaybeprogrammedintoLPOMONCTL(15:0)inordertoinitialize

thetrimforbothHFLPOandLFLPO.Softwareshouldreadtheinitialtrimvaluesfromflashandwrite

themtothecontrolregister.

ThePLLisdisabledbydefaultonpower-up.ThePLLcontrolregisters(PLLCTL1andPLLCTL2)mustbe

configuredtosetthedesiredoutputfrequency.Then,thesystemPLLmaybeenabled(CSDISCLR.1).

Similarly,thesecondPLLmustbeconfiguredinPLLCTL3andenabled(CSDISCLR.6).EachPLLhasa

validbitthatindicatesthePLLislocked(CLKSRnVbitintheClockSourceValidStatusRegister

(CSVSTAT)oftheSystemandPeripheralControlRegisters).

PriortoselectingthePLLclockasthesourceforaclockdomain(forexample,GCLK,HCLK,ACLKV1),

thedomainandmodulesonthedomainmustbeconfiguredtoacceptthenewfrequency.Anexampleofa

modulethatshouldbeconfiguredpriortoselectingthePLLasclocksourceforGCLKandHCLKisthe

memorywrappertoinsurethataccesstimesaremaintainedcorrectly.

363

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




crystal

loadcapacitors

OSCOUT

OSCIN

KELVIN_GND

OSCILLATOR



Oscillatorwww.ti.com

10.3Oscillator

TheclockgenerationpaththroughthePLLbeginswiththeoscillator.Theoscillatorconsistsofthree

separatepads--OSCIN,OSCOUT,andKelvin_GND(seeFigure10-2).

Figure10-2.ClockGenerationPath

Theoscillatorisresponsiblefortwoindependentfunctions:

1.Theoscillatorisresponsibleforgeneratingpositivefeedbackintheexternalcrystal/resonatorwith

appropriateloadandtankcircuitry.Atstart-up,theoscillatoramplifiesrandomnoise.Theexternal

circuitryactslikeaband-passandselectsthecrystal/resonatorfrequencytoprovideaspositive

feedbackintotheamplifier.Thepositivefeedbackincreasestheamplitudeoftheoutputwaveforminto

thecrystal/resonator(andtheloadcircuitry),andthevoltagewaveformshowsanenvelopeof

increasingamplitude.Theoscillatorcandriveacrystalfrequencythatiswithinthedatasheetrange

tc(OSC).

LookingattheinputwaveformintoOSCIN,thevoltagewaveformisanAC-coupled,filteredversionof

theOSCOUTwaveform.Theband-passfunctionalityofthecrystal/resonatorremovesanydistortion

thatmightexistontheOSCOUTwaveform,leavingasinusoidalinputwaveform.

NOTE:VendorValidationofResonators/Crystals

Thecrystalisaverytightbandpassfilterwhilearesonatorisasomewhatwiderbandpass.

Theloadcircuitrypullsthecenterfrequencyofthebandpass.

TexasInstrumentsstronglyencourageseachcustomertosubmitsamplesofthedeviceto

theresonator/crystalvendorforvalidation.Thevendorisequippedtodeterminewhatload

capacitanceswillbesttunetheirresonator/crystaltothemicrocontrollerdeviceforoptimum

start-upandoperationovertemperatureandvoltageextremes.Thevendoralsofactorsin

marginsforvariationsinthemicrocontrollerprocess.

2.Theoscillatorisalsoresponsibleforsquaring-uptheinputwaveform.Thissquaring-upconvertsthe

sinusoidintoasquarewaveatthecorelogiclevels.Theinputpathlimitstheinputfrequencyrangeas

alow-passfilterwithacutofffrequency.

Theoscillatorhasafrequencyrangethatisdeterminedbythedrivingcapabilityofexternal

crystals/resonators(feedbackpath).Ifaclockisdrivendirectlyintotheoscillator,thenthefeedback

pathisnotrelevantandthefrequencyrangeisdeterminedsolelybytheforwardpath(whichtypically

allowsahigherfrequency);thedevicecansupportinputswithinthedatasheetrangetc(OSC_Sqr).

364

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




R

OSCINOSCOUT



www.ti.comOscillator

10.3.1OscillatorImplementation

Theoscillatoroperatesat3.3VandusesaconstantcurrentsourcetodrivecurrentontotheOSCOUT

node.Aninternaltransistorshuntsthecurrent(andcurrentfromtheexternalcircuitry)toGND.This

currentsteeringdrivesthevoltagewaveformonOSCOUT.

Figure10-3.OscillatorImplementation

10.3.2OscillatorEnable

TheoscillatorisenabledasynchronouslywhennPORRSTislow.

Theoscillatorisenabledbyclearingbit0intheClockSourceDisableRegister(CSDIS)orsettingbit0in

theClockSourceDisableClearRegister(CSDISCLR)oftheSystemandPeripheralControlRegisters.

Thebitsendsastartsignaltotheoscillator.Bit0ofCSDISisclearedto0bydefaultonasystemor

power-onresetsothattheoscillatorstarts-upbydefault.Aftertheoscillatorswingsatahigh-enough

amplitudetopassaninputclockintothecoredomainandnPORRSTisreleased,1024oscillatorperiods

arecountedbeforesettingtheCLKSR0VbitintheClockSourceValidStatusRegister(CSVSTAT)ofthe

SystemandPeripheralControlRegisters.Theoscillatorgeneratesclocksource0intheglobalclock

module(GCM).

10.3.3OscillatorDisable

Theclocksources(forexample,OSC,PLL)aredisabledbysettingtheappropriatebitintheClockSource

DisableRegister(CSDIS)orsettingtheappropriatebitintheClockSourceDisableSetRegister

(CSDISSET)oftheSystemandPeripheralControlRegisters.Thesebitsallowtheclocksourcetodisable

butdonotforcethebehavioruntiltheclockisnolongerusedasthesourceforaclockdomain(for

example,GCLK,VCLK,VCLK2,RTICLK).TheCLKSR0VbitintheClockSourceValidStatusRegister

(CSVSTAT),oftheSystemandPeripheralControlRegisters,isclearedafterclockdisableisasserted

(whichoccursafterallclockdomainsarestopped).

Theoscillatordisablesignalplacestheoscillatorintoalowpowerstate,disconnectsthefeedback(bias)

resistorbetweenOSCINandOSCOUT,andOSCINisgrounded.

365

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






LowPowerOscillatorandClockDetect(LPOCLKDET)www.ti.com

10.4LowPowerOscillatorandClockDetect(LPOCLKDET)

TheLowPowerOscillator(LPO)iscomprisedoftwooscillators--HFLPOandLFLPO--inasingle

macro.Thelowpoweroscillatorandclockdetect(LPOCLKDET)usesarelaxationoscillatortogenerate

aninternalclockwhosefrequencyisNOTtightlycontrolled.Thisfrequencyisusedtomonitorthe

oscillatorinputfrequencyandisalsoavailableasanindependentclocksourceintheGCM.

TheLPOproducestwofrequencies:

•High-frequencylowpoweroscillator(HFLPO)withanominalfrequencyof10MHzandarangefrom

5.6MHzto22.6MHz;theHFLPOgeneratesclocksource5intheGCM.

•Low-frequencylowpoweroscillator(LFLPO)withanominalfrequencyof100KHz;theLFLPO

generatesclocksource4intheGCM.

Asinglecurrentsourcedrivescurrentontoacapacitor;whenthevoltageonthecapacitorexceedssome

threshold,theclocktoggles.TheLPOusesasinglecurrentsourceandthetwodifferentcomparatorsto

generatetheHFLPOandLFLPOfrequencies.TheLPOiscontrolledby4differentbitfields--

CSDIS.(5:4),HFTRIM(4:0),LFTRIM(4:0),andBIASEN.

•CSDIS.5enables/disablesthecomparatorthatgeneratesHFLPO.

•CSDIS.4enables/disablesthecomparatorthatgeneratesLFLPO.

•TheHFTRIMandLFTRIMbitfieldsvarythecurrentintothecomparatortoindependentlytrimtheHF

LPOandLFLPOfrequencies(see).

•BIASENABLE(LPOMONCTL.24)enables/disablesthecurrentsourcewhichdrivestheLPO.

10.4.1ClockDetect

TheLPOHFclockfrequencyistypicallynear10MHzbutrangesfrom5.6MHzto22.6MHz.Theclock

detectestablishesawindowfortheoscillatorby:

OSCIN>HFLPOmin/4

OSCIN/4<HFLPOmax

OSCIN<4×22.6=90.4[MHz]

OSCIN>5.6[MHz]/4=1.4[MHz]

Theclockdetectcircuitworksbycheckingforarisingedgeononeclock(oscillatororHFLPO)between

risingedgesoftheotherclock.Theresultisthatinadditiontoflaggingincorrect,repeatingfrequencies,

thecircuitalsofailsduetotransientconditions.

Thelowendoftheclockdetectwindowignoresatransientlowphaseofatleast12HFLPOcycles.

NOTE:ClockDetectionofOscillatorMUSTbeDisabledBeforeDisablingHFLPO

TheHFLPOfrequencyisthecomparisonfrequencyfortheoscillator.Theclockdetection

mustbedisabledpriortodisablingtheHFLPOfrequency.

IftheclockdetectionisNOTdisabledpriortodisablingtheHFLPO,theclockdetectcircuitry

willfailtheoscillatorastoofast(comparedtothenon-existentHFLPO).Theclockdetect

circuitrywillswitchtothenon-existentclock,leavingthedevicewithoutavalidclock.

10.4.2BehavioronOscillatorFailure

Iftheoscillatorfrequencyfails,theclockdetectssupplies:

•theHFLPOclocktoGCMclocksource0insteadoftheoscillator

•theHFLPOclocktoGCMclocksource1insteadofthePLL

TheHFLPOsignalwillbeavailableasthreedifferentclocksources:

•GCMclocksource0(replacingtheoscillator)

•GCMclocksource1(replacingthePLL)

•GCMclocksource4asHFLPO

366

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comLowPowerOscillatorandClockDetect(LPOCLKDET)

Theautomaticswitch-overfromoscillatortoHFLPOallowstheapplicationtoexecuteatareduced

frequencyandrespondtoaproblemwiththeexternalcrystal/resonator.Duringandafteranoscillator

failure,theoscillatorCLKSRnVbitintheClockSourceValidStatusRegister(CSVSTAT),oftheSystem

andPeripheralControlRegisters,issetalongwiththeOSCFAILflagintheGlobalStatusRegister

(GLBSTAT),oftheSystemandPeripheralControlRegisters.

ItisusefultoexplicitlychangetheGHVSRCregister,definingthecurrentclocksourcefor

GCLK/HCLK/VCLKdomains,totheHFLPOafteranoscillatorfailure.

Whenresetonoscillatorfailureisset,PLLCTL1.23(ROF),thedevicerespondstoanoscillatorfailureby

generatingadevicereset.

10.4.3RecoveryfromOscillatorFailure

Iftheoscillatorfails,theclockdetectswitchestheHFLPOfrequencyontotheoscillatorsourceintothe

GCM.TheOSCFAILflagintheGlobalStatusRegister(GLBSTAT),oftheSystemandPeripheralControl

Registers,isalsoset.

Theoscillatormaybere-enabled(thoughifthefailurewascausedbyahard-fault,there-enablewillfail)

throughthefollowingprocedure:

1.SwitchallclockdomainsfromtheoscillatortotheHFLPO(forexample,GHVSRCusesHFLPO,

ACLKVusesHFLPOorVCLK,...).

2.IfthePLLisused,disablethePLLbysettingtheappropriatebitintheClockSourceDisableSet

Register(CSDISSET)oftheSystemandPeripheralControlRegisters.

3.DisabletheoscillatorbysettingtheappropriatebitintheClockSourceDisableSetRegister

(CSDISSET).ThisactionresetstheclockdetectandallowstheoscillatortopropagatethroughGCM

clocksource0.

4.Re-enabletheoscillatorbysettingtheappropriatebitintheClockSourceDisableClearRegister

(CSDISCLR)oftheSystemandPeripheralControlRegisters.

5.CleartheOSCFAILflagintheGlobalStatusRegister(GLBSTAT)bywritinga1tothebit.ThePLLslip

bitsmayalsobesetonanoscillatorfailure.Thesecanalsobecleared.

6.Switchtheclockdomainsbacktotheoscillator.

7.Re-enablethePLLbysettingtheappropriatebitintheClockSourceDisableClearRegister

(CSDISCLR).

NOTE:ClockRe-EnableProcedureWillFailIfCausedbyaHardFailure

Althoughitispossibletore-enabletheoscillatorafterafailure,iftheoscillatorfailurewas

causedbyahardfault(forexample,disconnectedcrystal/resonatorterminal),there-enable

processwillfail.

10.4.4LPOCLKDETEnable

TheLPOisenabledbydefaultwhilenPORRSTislow.Duringthistime,thecurrentsourceinitializes,

holdingtherelaxationoscillatorinresetuntilinitialized.AfterthecurrentsourcereleasestheHFLPOand

theLFLPO,theseclockfrequenciesslewtotheirfinalfrequencies;thefinalfrequencymaybeachieved

whilenPORRSTisactiveorafteritsrelease.After,nPORRSTisreleased,theHFLPOValidsignalisset

32HFLPOclockcycleslater.

TheclockdetectisenabledoncetheoscillatorandHFLPOarevalid.Becauseanoscillatorfailurecould

occurfromreset,theclockdetectlogicmustprovideanoverridepath.IftheHFLPOisvalidandthe

oscillatorisnotvalid,theclockdetectcircuitrywillbecomeactive(overridingtheoscillatorinvalidsignal)

after16KLFLPOcycles(about200ms).

367

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






LowPowerOscillatorandClockDetect(LPOCLKDET)www.ti.com

10.4.5LPOCLKDETDisable

10.4.5.1DisableClockDetect

Itispossibletodisabletheclockdetectcircuitry.Forprotection,thisclockdetectdisableemploysa2-bit

key:

•RANGEDETENASSET(CLKTEST.24)mustbesetto1

•RANGEDETCTRL(CLKTEST.25)mustbeclearedto0

Inthiscase,theLPOHFandLFclocksarestillactivebuttheclockdetectcircuitryisdisabled.Theclock

detectunconditionallyswitchesGCM_CLK_SRC(0)backtotheoscillatorsocareshouldbetakento

insurethattheoscillatorisgoodbeforedisablingtheclockdetectcircuitry.

10.4.5.2DisableLPOHFandLFclocks

TheLPOmaybedisabledbyholdingtherelaxationoscillatorclocks(HFandLF)inreset.Theclock

detectmustbedisabled,andanyclockdomainsusingeitherHForLFclocksmustbeswitchedtoa

differentclocksource.TheLPOHFclockisresetbysettingCSDIS.5;CSDISSET.5isaneasywaytoset

specificbitswithoutdisturbingtherestoftheregister.TheHFLPOclockdisablesseveralHFLPOcycles

afterCSDISisset.

Similarly,theLPOLFclockisresetbysettingCSDIS.4,andinasimilarwayCSDISSET.4cansetthe

specificCSDISregisterbitwithoutusingaread-modify-writeconstruction.TheLFLPOdisablesseveral

LFLPOcyclesafterCSDISisset.

RestartingtheLPOclocksfromthisconditionisfastandisknownasawarmre-start.TheCSDISCLR

registerallowstheusertoclearCSDISbitswithoutusingaread-modify-writecode-construct.

10.4.5.3DisableLPOCurrentBias

TheLPOcurrentsourcemaybediabledaftertheclockdetectisdisabledandHFandLFclocksources

aredisabled.TurningoffthiscurrentsourceplacestheLPOCLKDETintoitslowestpowerconfiguration.

ThebiasmaybedisabledbyclearingtheBIASENABLEbit(LPOMONCTL.24).

RestartingtheLPOwhenthebiascurrenthasbeendisabledrequiresthecurrentsourcetoinitializefirst

andis,thereforeslowerthanawarmre-start;re-enablingtheLPOfromthisconditionisknownasawarm

re-start(similartowhathappensduringnPORRSTactive).

10.4.6TrimmingtheHFLPOOscillator

TheHFLPOrangevariesconsiderablyaround10MHzfromdevicetodevice.Inordertoprovidetighter

monitoringofthecrystal/resonator,itisusefultotrimtheoscillator.Duringdevicetest,atrimvalueis

writtenintotheone-timeprogrammablesectionoftheflashmemory(OTP),address0xF008_01B4.Bits

31:16ofthisOTPwordcontaina16bitvaluethatmaybeprogrammedintoLPOMONCTL(15:0)inorder

toinitializethetrimforbothHFLPOandLFLPO.

WhentrimmingtheHFLPO,itisrecommendedtostepthetrimvaluesoasnottomakealargechangeto

anyTRIMsetting.

Aftertheinitialtrim,furthertrimmingmaybedoneinLPOMONCTL,usingthedualclockcomparemodule

(seeChapter11)inordertodeterminetheresultantfrequency.Thismoduleallowsforcomparisonoftwo

clockfrequencies.OncetheHFLPOisdeterminedtobein-rangewiththeinitialHFTRIMsettingfromthe

OTP,thecrystaloscillatormaybeusedasareferenceagainstwhichtheHFLPOandLFLPOmaybe

furtheradjusted.

368

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




÷NR÷R

PLL

÷1-÷64÷1-÷256

÷1-÷32INTCLKOutputCLKPLLCLK

÷OD÷1-÷8

post-ODCLKCLKIN

÷NFfPLLCLKfCLKINNR-----------------x NF x       x1OD---------1R----=



www.ti.comPLL

10.5PLL

ThefollowingbitfieldsfromPLLCTL1andPLLCTL2configurethePLL:

•REFCLKDIV[5:0]

•PLLMUL[15:0]

•ODPLL[2:0]

•PLLDIV[4:0]

•SPR_AMOUNT[8:0]

•SPREADINGRATE[8:0]

•FMENA

ThePLLisresponsibleforsynthesizinganoutputfrequencyfromtheinputclock(fromtheoscillator);

Figure10-4showsasimpleblockdiagramofthePLL.TheFM-PLLdividesthereferenceinputforalower

frequencyinputintothePLL(fINTCLK=fCLKIN/NR).ThePLLmultipliesthisinternalfrequencybyNFtogetthe

VCOoutputclockfrequency(fOutputCLK=fINTCLK×NF).ThePLLoutputissubsequentlydividedbytwo

prescalevalues(ODandR).ThevalueofODisanintegerfrom1-8andRisanintegerfrom1–32.This

outputclock,PLLCLK,sourcesGCMclocksource1.ValidfrequenciesareshowninTable10-1while

Table10-2showshowthatencodingisgeneratedfromthePLLbitfields.

[f(post_ODCLK)andf(HCLK)aredatasheetparameters.]

Table10-1.ValidFrequencyRangesforPLL

FrequencyLimit

fCLKIN

f(OSC_Sqr)

fINTCLK

1MHz-f(OSC_Sqr)

fOutputCLK

150MHz-550MHz

fpost-ODCLK

f(post_ODCLK)

fPLLCLK

f(HCLK)

Figure10-4.OperationoftheFM-PLLmodule

369

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ModulationPeriod(1/fs)Modulation

f0-n%f0-2n%f0

Time(Ps)Frequency(MHz)Depth

RTIDIVffRTISRCVCLK´³3

1]0...2[+=ODPLLOD

1]0...8[+=SPRRATENS

2048)1]0...8[(+=SPRAMOUNTNV

256)81]0...8[]0...15[(<<++=MULMODPLLMULNF

256)81]0...15[(<<+=PLLMULNF

1]0...5[+=REFCLKDIVNR



PLLwww.ti.com

Table10-2.PLLValueEncoding

PLL

NR

(3)

Non-modulated:

(4)

Modulated:

NF

(5)

NV

(6)

NS

(7)

OD

(8)

NOTE:ODPLLchangeshouldoccurpriortoenablingasynchronousclockdomains

SincechangingtheODPLLbit-fieldcausesthePLLCLKtobegated,thesechangesto

ODPLLshouldbecompletedbeforeconfiguringaclockdomainforanasynchronousclock

source.Someclockdomains(forexample,RTICLK,AVCLK)requireafrequencyrelationship

totheVCLK.

IfthePLLisclockingVCLKanditisstoppedforsomecycles,thenthefrequencyrelationship

istemporarilyviolated.

ManyasynchronousdomainsrequirefrequencyrelationshipsbetweenVCLKandthe

asynchronousdomain.Therefore,ifthePLLclockisthesourceforGCLK,HCLKandVCLK,

thenthegatingproducesashort-termchangeinthePLLclockfrequency(andhencealso

theVCLKfrequency).Assuch,thisfrequencychangecouldviolatetherequirementsforan

asynchronousclockdomain.

10.5.1Modulation

Optionally,thefrequencycanbemodulated,thatis,acontrolledjitterisintroducedontothebaseline

frequencyofthePLL.ThismodulationmechanismisnotshowninFigure10-4.WhenthePLLisusedin

themodulatingmode,theprogrammablemodulationblockvariesthePLLfrequencyfromthebaseline

frequency(fbaseline=(fCLKIN/NR)×NF/(OD*R))tofbaseline×(1-2×Depth)inaperioddefinedby1/fs;the

modulationwaveformistriangularandshouldbeenabledafterlock.

370

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




16)1]0...8[)(1]0...8[(++SPRRATESPRAMOUNT

NSNRfTOSC´´=2mod

OutputCLKfNFNVNSf´´=D2

NFNVNSDepth´=2[%]

OutputCLKfNFNV´



www.ti.comPLL

Themodulationisdigitalandthespreadingprofileistriangular,down-spreadwhichimplies:

•themodulationwaveformiscomposedofaseriesoffrequencysteps.

•themodulationfrequencyandmodulationdeptharebothwellcontrolledduetotheirdigitalcharacter.

•theaveragefrequencyduringmodulationislowerthantheaveragefrequencypriortoenabling

modulation.Thedepthofmodulation,however,setsthenewaveragefrequency.

•themodulationfrequencymustbeselectedslowerthantheloopbandwidth.Fromapractical

perspective,NSshouldbenear20.

Themodulationfieldshaveasimplegeometricmeaning:

•themodulationstepsizeis:

(9)

•thenumberofstepspermodulationperiodis2×NS

•themodulationdepthisgivenby:

(10)

•themodulationfrequencyis:

(11)

•MULMODminimizesfrequencyoffsetwhenprogrammedas:

(12)

NOTE:ModulationshouldbeenabledafterLock

Enablemodulationafterthelockiscompleted.

10.5.2PLLOutputControl

TheoutputsfromthePLLaretheoutputclock,slipsignals,andVALID.

•RFSLIP--theRFSLIPsignalindicatesthattheOutputCLKisrunningtoofastrelativetoINTCLKand

setsaRFSLIPstatusflagintheGlobalStatusRegister(GLBSTAT)register,oftheSystemand

PeripheralControlRegisters,iftheslipsignalisactiveduringnormalPLLoperation;theRFSLIPflagis

maskedoffwhilethePLLisnotactiveandduringthePLL’slockperiod.

•FBSLIP--theFBSLIPsignalindicatesthattheOutputCLKisrunningtooslowrelativetoINTCLKand

setsaFBSLIPstatusflagintheGlobalStatusRegister(GLBSTAT)register,oftheSystemand

PeripheralControlRegisters,iftheslipsignalisactiveduringnormalPLLoperation;theFBSLIPflagis

maskedoffwhilethePLLisnotactiveandduringthePLL’slockperiod.

•PLLSlip--Logical-ORofthetwoPLLslipsignals.Typicallythissignalisusedtogeneratea

consolidatedslipsignaltothedevice(forexample,errorlogicorexceptiongeneration).Alsousedto

gateVALID.

NOTE:ClearingSlipBits

Inordertoclearanyoftheslipbits,itisnecessarytodisablethePLLfirst.

371

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






PLLwww.ti.com

•VALID--isdrivenbaseduponwhethertheoutputclock,PLLCLK,isgatedornot.However,the

VALIDsignalisdependentuponthePLLSlipsignalssothatVALIDcannotbesetifeitherslipsignalis

active.

•PLLClock--ThePLLoutputclockrunsattheprogrammedfrequency.Whenenabled,ittakessome

timetoacquiretheprogrammedfrequency(seeSection10.5.2.1).Similarly,thedisablehassome

timing/constraints(seeSection10.5.2.2).

10.5.2.1PLLEnable

AftersettingthePLLcontrolregisters,theclocksourceisenabledbyclearingtheappropriatebitinthe

ClockSourceDisableRegister(CSDIS)orsettingtheappropriatebitintheClockSourceDisableClear

Register(CSDISCLR)oftheSystemandPeripheralControlRegisters.ThebitsendsasignaltothePLL

thatstartstheprocessofenablingthePLL.

1.ThePLLcheckstomakesurethattheoscillatorisON.Ifnot,itturnstheoscillatorON.

2.ThePLLbeginsalockingprocessinwhichthePLLslewsfromastartingfrequencypointtothe

programmedfrequency.Duringthislockperiod,thePLLslipsignalsaretypicallyactive,andthePLL

masksoffthesignalsduringthisphase.Thelockphasetakesthefollowinglengthoftime:

LPOMONCTRL.16=0(OSCIN<=20MHz)

LPOMONCTRL.16=1(OSCIN>20MHz)

CountersclockedbyOSCIN/1

CountersclockedbyOSCIN/4

Lock

TLock=(127×TOSCIN)+(1024×NR×TOSCIN)

TLock=(127×4×TOSCIN)+(1024×NR×TOSCIN)

Enableclocksafter

TEnable=6×TOSCIN

TEnable=18×TOSCIN

lock

3.Afterthelockphaseiscomplete(whenlockcountersexpire),thePLLreleasestheslipsignalstothe

system.

4.Then,aftertheslipsignalsarereleasedandadelaytoenabletheclocks,theclockisreleasedtothe

systemandtheappropriateCLKSRnVbitforthePLLissetintheClockSourceValidStatusRegister

(CSVSTAT)oftheSystemandPeripheralControlRegisters.

10.5.2.2PLLDisable

Theclocksources(forexample,OSC,PLL)aredisabledbysettingtheappropriatebitintheClockSource

DisableRegister(CSDIS)orsettingtheappropriatebitintheClockSourceDisableSetRegister

(CSDISSET)oftheSystemandPeripheralControlRegisters.Thesebitallowtheclocktodisablebutdo

notforcethebehavioruntiltheclockisnolongerusedasthesourceforaclockdomain(forexample,

GCLK,VCLK,VCLK2,RTICLK).

ThePLLreceivesasignaltodisableaftertheclockisnolongerusedbyanyclockdomain.Withinthe

PLL,theclockisdisabledandtheappropriateCLKSRnVbitforthePLLintheClockSourceValidStatus

Register(CSVSTAT),oftheSystemandPeripheralControlRegisters,becomesinactive.ThenthePLLis

placedintoalowpowerstateafterthefollowinglengthoftime:

LPOMONCTRL.16=0

LPOMONCTRL.16=1

CountersclockedbyOSCIN/1

CountersclockedbyOSCIN/4

Disableclocksafter

TEnable=150×TOSCIN

TEnable=582×TOSCIN

lock

10.5.2.3OD-dividerChange

ThePLLgatestheclockiftheODPLLbit-fieldischangedwhilethePLLisactive.Theoutputclockfrom

thePLLisgatedfor3or12OSCINclockcycles.Asthepost-ODCLKisgatedinthelowphase,theoutput

clocktothedevice--PLLCLK--maybegatedinahighorlowphasethoughthetransitionisalways

glitchless.

372

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




RTIDIVffRTISRCVCLK´³3



www.ti.comPLL

LPOMONCTRL.16=0

LPOMONCTRL.16=1

CountersclockedbyOSCIN/1

CountersclockedbyOSCIN/4

ChangeODPLL

TODPLL=3×TOSCIN

TODPLL=3×4×TOSCIN

NOTE:ODPLLchangeshouldoccurpriortoenablingasynchronousclockdomains

SincechangingtheODPLLbit-fieldcausesthePLLCLKtobegated,thesechangesto

ODPLLshouldbecompletedbeforeconfiguringaclockdomainforanasynchronousclock

source.Someclockdomains(forexample,RTICLK,AVCLK)requireafrequencyrelationship

totheVCLK.

IfthePLLisclockingVCLKanditisstoppedforsomecycles,thenthefrequencyrelationship

istemporarilyviolated.

ManyasynchronousdomainsrequirefrequencyrelationshipsbetweenVCLKandthe

asynchronousdomain.Therefore,ifthePLLclockisthesourceforGCLK,HCLKandVCLK,

thenthegatingproducesashort-termchangeinthePLLclockfrequency(andhencealso

theVCLKfrequency).Assuch,thisfrequencychangecouldviolatetherequirementsforan

asynchronousclockdomain.

10.5.2.4ChangingthePLLOperatingPointWhilethePLLisActive

Oncethevalidbit(CLKSRnVbitintheClockSourceValidStatusRegister(CSVSTAT)oftheSystemand

PeripheralControlRegisters)isset,softwaremaychangevaluestothePLL.Ifthechangeofvalues

resultsinasmallpercentagechangetotheVCOfrequency(∆fOutputCLK<0.1×fOutputCLK),thenthese

changescanbedoneon-the-fly.Inthismode,thevaluesareupdatedintothePLLsynchronously,andthe

PLLre-lockstothenewvaluewithoutgatingtheclocksortheslipbits.Iftheoperatingpointchangeistoo

large,thentheslipbitswillbeset.

Conversely,ifthechangestotheVCOfrequencyarelarge,thenthePLLshouldbedisabledpriorto

changingthevalues.Typically,anychangetotheREFCLKDIVfieldorlargechangestothePLLMULfield

inthePLLControlRegister1(PLLCTL1)oftheSystemandPeripheralControlRegistersrequiresa

completedisable-and-relockstrategy.

10.5.2.5SummaryofPLLTimings

InadditiontocontrollingthelockperiodanddisablingtheclockduringanODPLLchange,thePLLalso

generatesresetdelays.Whenpower-onresetisreleased(nPORRST0-->1),thatreleaseisdelayedby

1024OSCINcyclessothatitisreleasedatthesametimethattheoscillatorvalidisasserted.Thesystem

resetreleaseisdelayedbyanadditional8oscillatorclockcycles.

Table10-3.StateMachineTimings

LPOMONCTRL.16=0

LPOMONCTRL.16=1

CountersclockedbyOSCIN/1

CountersclockedbyOSCIN/4

nPORRSTdelay

TnPORRST=1024×TOSCIN

TnPORRST=1024×TOSCIN

nRSTdelay

TnRST=1032×TOSCIN

TnRST=1032×TOSCIN

OSCvalid

TOSCVALID=1024×TOSCIN

TOSCVALID=1024×TOSCIN

Lock

TLock=(127×TOSCIN)+(1024×NR×TOSCIN)

TLock=(127×4×TOSCIN)+(1024×NR×TOSCIN)

Enableclocksafter

TEnable=6×TOSCIN

TEnable=18×TOSCIN

lock

Disableclocksafter

TEnable=150×TOSCIN

TEnable=582×TOSCIN

lock

ChangeODPLL

TODPLL=3×TOSCIN

TODPLL=3×4×TOSCIN

373

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PLLBypassCLKPLLCLKInputfromOscillatorCLKsignaltoClockControlModuleSlipDetectorBPOSBPOS

FMzPLLROSToDeviceReset

BypassonSlipResetonSlip



PLLwww.ti.com

10.5.3BehavioronPLLFail

ThePLLallowsflexibleresponsetoaPLLfailure(slip).Liketheoscillator,thePLLclockisconfiguredby

defaulttoautomaticallyswitch-overtotheoscillatorincaseofaPLLslip.(Inthiscase,theoscillator

sourcesGCMclocksource1aswellasGCMclocksource0.Also,iftheoscillatorfails,LPOHFis

sourcedtobothGCMclocksources0and1.)

ThePLLslipoutputsindicatethatthePLLisrunningeithertoofastortooslow.Theseerroroutputtoggle

whenthePLLislockingandwhenthePLLisdisabling.ThePLLblockstheseslipoutputsduringthese

times,leavingthemactiveonlywhilethePLLisactive.

AslipafterthePLLhaslockedandwhileitisactiveisanindicationofaPLLfailure.ThePLLprovides

slip-filteringwhichenhancestheflexibilityofthePLL’sresponsetofailure.Theslip-filteringcircuitsamples

theslipbasedonHFLPO.ThefilterdefinesthenumberofconsecutiveHFLPOcyclesforwhichtheslip

signalmustbeactivebeforetheslipisrecognized.ThisslipislatchedintheRFSLIPandFBSLIPstatus

flagsintheGlobalStatusRegister(GLBSTAT)registeroftheSystemandPeripheralControlRegisters.

ThePLLmayenable/disabletheautomaticswitchoveraswellastheerrorsignaling;iftheerrorsignaling

isenabled,aPLLslipmaybeconfiguredtogenerateareset.Theautomaticswitch-overandsuppression

oftheerrorsignalsarecontrolledbythebypassonslipbitfield--BPOS[1:0](PLLCTL1.(30:29)).When

BPOS[1:0]isdisabled(BPOS[1:0]=10b):

•automaticresponsetothePLLslipisprevented

•ESM/exceptionisNOTgenerated

•resetonslipisnotgeneratedregardlessofthestateoftheROSbit

•statusbitsaresetonaPLLslipindependentofBPOS[1:0]

WhenBPOS[1:0]isenabled(BPOS[1:0]=00bOR01bOR11b):

•PLLslipcausestheclocksourceintoGCMclocksource1toshiftfromthePLLtotheoscillator

•ESM/exceptionisgenerated

•resetonslipisgeneratedifROSisset

TheeffectofBPOS[1:0]onthesystemisshowninFigure10-5.

Figure10-5.PLLSlipDetectionandReset/BypassBlockDiagram

374

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




÷÷øöççèæ´´-=COUNTCLKOUTSSWCOUNTCAPTURESSWNRabsDepth____21



www.ti.comPLL

10.5.4RecoveryfromaPLLFailure

IfPLL1fails,thePLL’sslipcausestheclocksourceintoGCMclocksource1toshiftfromthePLLtothe

oscillator.TheRFSLIPorFBSLIPflagisalsosetwithintheSystemmodule.PLL1maybere-enabled

(thoughifthefailurewascausedbyahard-fault,there-enablewillfail)throughthefollowingprocedure:

1.SwitchallclockdomainsfromPLL1totheoscillator(forexample,GHVSRCusesoscillator,ACLKV

usesoscillatororVCLK,...).

2.DisablePLL1withCSDISSET.ThisactiondisablesthePLLandcausestheslipsignaltonolongerbe

driven.Validisnotreleaseduntiltheslipiscleared.

3.CleartheRFSLIPorFBSLIPflagintheSystemregisterbywritinga1tothebit.

4.Re-enablePLL1withCSDISCLR.

5.SwitchtheclockdomainsbacktoPLL1.

IfPLL2fails,thePLL’sslipcausesthevalidflagtobelocked.Thereisnoautonomouschangeofclock

sourceforPLL2.NeithertheRFSLIPorFBSLIPflagissetwithintheSystemmodule.PLL2maybere-

enabledinasimilarproceduretore-enablingPLL1(thoughifthefailurewascausedbyahard-fault,the

re-enablewillfail):

1.SwitchallclockdomainsfromPLL2totheoscillator(forexample,GHVSRCusesoscillator,ACLKV

usesoscillatororVCLK,...).

2.DisablePLL2withCSDISSET.ThisactiondisablesthePLLandcausestheslipsignaltonolongerbe

driven.Validisnotreleaseduntiltheslipiscleared.

3.ResetPLL2Validbywritinga1tobothRFSLIPandFBSLIPflagsintheSystemregister(eventhough

theyarenotsetbytheslip).

4.Re-enablePLL2withCSDISCLR.

5.SwitchtheclockdomainsbacktoPLL2.

10.5.5PLLModulationDepthMeasurement

ThePLLcontainsacircuitforestimatingthedepthofthemodulation.Thecircuitcountsclockedgesover

afixedwindowofthemodulationwaveform(SSW_CAPTURE_COUNTinSSWPLL2)andclockedges

overtheentirewaveform(SSW_CLKOUT_COUNTinSSWPLL3).Thecaptureendsafterapre-

determinednumberofclockedgesinSSW_CLKOUT_COUNTERassetinTAP_COUNTER_DIS.There

are2×NRwindowspermodulationwaveform.Theprocedureforestimatingthemodulationdepthis:

1.WhileGCLKissourcedbytheoscillatorandthePLLisenabledwithmodulation,configureSSWPLL1

asfollows:

(a)CAPTURE_WINDOW_INDEXissetequaltoNR.

(b)COUNTER_RESETisset.

(c)TAP_COUNTER_DISissettodisablethemeasurementafterSSW_CLKOUT_COUNTcaptures

thisnumberofclocks.ThemeasurementisdisabledafterthesettapissetANDthemodulation

cycleends.

(d)EnsurethatEXT_COUNTER_ENiscleared.

2.EnsurethatbothSSW_CAPTURE_COUNTandSSW_CLKOUT_COUNTarecleared(bythe

COUNTER_RESET).

3.SetCOUNTER_ENandclearCOUNTER_RESET.Thisstepreleasestheresetandenablesthe

countertobegincounting.

4.Afterawaitloop,pollforCOUNTER_READ_READYtoset.Afterthebitisset,read

SSW_CAPTURE_COUNTandSSW_CLKOUT_COUNT.

5.Computethemodulationdepthas:

(13)

375

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




COUNTCAPTURESSWCOUNTCLKOUTSSWODNRNF____=´



PLLwww.ti.com

10.5.6PLLFrequencyMeasurementCircuit

Thesamecircuitthatisusedtomeasuremodulationdepthisalsoavailabletomeasuretheaverage

frequencyofthePLL.Inthismode,thePLLoutput(beforetheR-divider)iscapturedin

SSW_CLKOUT_COUNTwhiletheoscillatoriscapturedinSSW_CAPTURE_COUNT.Theprocedurefor

usingthePLLfrequencymeasurementcircuitis:

1.WhilethePLLisenabled,setEXT_COUNTER_EN.

2.SetCOUNTER_EN.ThisbitclearsbothSSW_CAPTURE_COUNTandSSW_CLKOUT_COUNTand

thenimmediatelyenablesforcounting.

3.Waitforsomesoftwaredelayloop.

4.ClearCOUNTER_EN.WaitforCOUNTER_READ_READYtoset.Readboth

SSW_CAPTURE_COUNTandSSW_CLKOUT_COUNTandcomputetheratioofPLLmultiplication

as:

(14)

5.NotethatCAPTURE_WINDOW_INDEX,COUNTER_RESET,TAP_COUNTER_DISarenotusedin

thisprocedure

10.5.7PLL2

PLL2drivesGCMclocksource6.

ThePLLisidenticaltoPLL1,exceptmodulationisdisabledonthisinstanceofthePLL.Also,thePLL

typicallydoesnotclockthesystem,thereisnoautomaticswitchoverfeature.AnyPLLerrorcanbe

handledbytheCPU.

PLL2isprogrammedthroughPLLCTL3.

376

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

10.6ControlRegisters

Theclockmodulehastworegisters(PLLCTL1andPLLCTL2)locatedwithintheSystemandPeripheral

ControlRegisters,plusithasfourbitslocatedinotherSystemandPeripheralControlRegisters.

TheFM-PLLisoffatpower-on.TheclocksourceisenabledbyclearingtheappropriatebitintheClock

SourceDisableRegister(CSDIS)orsettingtheappropriatebitintheClockSourceDisableClearRegister

(CSDISCLR)oftheSystemandPeripheralControlRegisters.[CSDISCLRandClockSourceDisableSet

Register(CSDISSET)alsoenable/disablethePLLandoscillator(andotherclocksources).]

TheLPOCLKDETmodulegeneratestheOSCFAILflagintheGlobalStatusRegister(GLBSTAT),ofthe

SystemandPeripheralControlRegisters,ifaproblemwiththereferenceoscillatorisdetected.Theslip

signalsarealsoregisteredintheRFSLIPandFBSLIPstatusflagsintheGlobalStatusRegister

(GLBSTAT)register,oftheSystemandPeripheralControlRegisters,inordertoindicatethesourceofa

clockfailure.

TheappropriateCLKSRnVbitforthePLLissetintheClockSourceValidStatusRegister(CSVSTAT)of

theSystemandPeripheralControlRegisters.

ThefollowingsectionsdescribethePLLregistersusedinthesystemmodule.Theseregisterssupport8,

16,and32-bitwriteaccesses.Theresetvaluesfortheseregistersareconfiguredsothataninput

frequencyintherangefrom5MHzto20MHzgeneratesavalidclock.

Table10-4.PLLModuleRegisters

Offset

Acronym

RegisterDescription

Section

FFFFFF30h

CSDIS

ClockSourceDisableRegister

Section2.5.1.10

FFFFFF34h

CSDISSET

ClockSourceDisableSetRegister

Section2.5.1.11

FFFFFF38h

CSDISCLR

ClockSourceDisableClearRegister

Section2.5.1.12

FFFFFF54h

CSVSTAT

ClockSourceValidStatusRegister

Section2.5.1.19

FFFFFF70h

PLLCTL1

PLLControl1Register

Section2.5.1.25

FFFFFF74h

PLLCTL2

PLLControl2Register

Section2.5.1.26

FFFFE100h

PLLCTL3

PLLControl3Register

Section2.5.2.1

FFFFFFA0h

GPREG1

GeneralPurposeRegister

Section2.5.1.34

FFFFFFECh

GLBSTAT

GlobalStatusRegister

Section2.5.1.50

FFFFE170h

CLKSLIP

PLLClockSlipControlRegister

Section2.5.2.5

FFFFFF24h

SSWPLL1

PLLModulationDepthMeasurementControlRegister

Section10.6.1

FFFFFF28h

SSWPLL2

SSWPLLBISTControlRegister2

Section10.6.2

FFFFFF2Ch

SSWPLL3

SSWPLLBISTControlRegister3

Section10.6.3

Table10-5.LPOCLKDETModuleRegisters

Offset

Acronym

RegisterDescription

Section

FFFFFF88h

LPOMONCTL

LPO/ClockMonitorControlRegister

Section2.5.1.30

FFFFFF8Ch

CLKTEST

ClockTestRegister

Section2.5.1.31

377

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

10.6.1PLLModulationDepthMeasurementControlRegister(SSWPLL1)

Figure10-6illustratesthisregisterandTable10-6providesthebitdescriptions.

Figure10-6.SSWPLLBISTControlRegister1(SSWPLL1)[offset=24h]

31

16

Reserved

R-0

15

8

CAPTURE_WINDOW_INDEX

R/W-0

7

6

5

4

3

1

0

Reserved

COUNTER_READ_READY

COUNTER_RESET

COUNTER_EN

TAP_COUNTER_DIS

EXT_COUNTER_EN

R-0

R-0

R/W-1

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table10-6.SSWPLLBISTControlRegister1(SSWPLL1)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

CAPTURE_WINDOW_INDEX

0-FFh

ThecapturecounterpresentinthePLLwrapperwillcountthePLLclockedgeswhen

thecurrentmodulationphasecapturewindowvalueisequaltothesebits.Shouldbe

setequaltoNR.

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

COUNTER_READ_READY

Counterreadready.

IndicatesthatSSW_CAPTURE_COUNT(SSWPLL2)andSSW_CLKOUT_COUNT

(SSWPLL3)canberead.

0

CounterregistersinSSWPLL2andSSWPLL3arenotreadytoread.

1

CounterregistersinSSWPLL2andSSWPLL3arereadytoread.

5

COUNTER_RESET

Counterreset.

IfEXT_COUNTER_EN=0,COUNTER_RESETresetsSSW_CAPTURE_COUNT

(SSWPLL2)andSSW_CLKOUT_COUNT(SSWPLL3).

IfEXT_COUNTER_EN=1,thisbitisignored.

0

Noimpacttocounters

1

IftheEXT_COUNTER_ENbitis0,thencountersSSW_CAPTURE_COUNTand

SSW_CLKOUT_COUNTwillbeheldintheresetstate.

IfEXT_COUNTER_ENbitis1,thenthisbitwillbeignoredbythePLLwrapper.

4

COUNTER_EN

Counterenable.

IfEXT_COUNTER_EN=0,COUNTER_ENinitializesthemodulationdepth

measurement.(Inthismode,thedisableissettooccurautomatically.)

IfEXT_COUNTER_EN=1,thecountersareenabled/disabledwithCOUNTER_EN.

0

IfEXT_COUNTER_EN=0,COUNTER_EN=0indicatesthatthecountersare

inactive.

IfEXT_COUNTER_EN=1,COUNTER_EN=0disablesthecounters.

1

IfEXT_COUNTER_EN=0,COUNTER_EN=1indicatesthatthecountersarestill

active.

IfEXT_COUNTER_EN=1,COUNTER_EN=1enablesthecounters.

378

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table10-6.SSWPLLBISTControlRegister1(SSWPLL1)FieldDescriptions(continued)

Bit

Field

Value

Description

3-1

TAP_COUNTER_DIS

ThevalueinthisregisterisusedtoprogramaparticularbitinCLKOUTcounter.

WhenthatparticularbitinCLKOUTcounterbecomes1,thenboththeCLKOUT

counterandtheCAPTUREcounterwillstopcountingwhenEXT_COUNTER_EN=0.

WhenEXT_COUNTER_EN=1,thisbitfieldisnotused.

0

Bit16ofCLKOUTcounterisselected.Whenthisbitissetandthemodulationperiod

finishes,thecountersaredisabledandREAD_READY_FLAGisset.

1h

Bit18ofCLKOUTcounterisselected.

2h

Bit20ofCLKOUTcounterisselected.

3h

Bit22ofCLKOUTcounterisselected.

4h

Bit24ofCLKOUTcounterisselected.

5h

Bit26ofCLKOUTcounterisselected.

6h

Bit28ofCLKOUTcounterisselected.

7h

Bit30ofCLKOUTcounterisselected.

0

EXT_COUNTER_EN

0

ModulationDepthMeasurementmode

1

FrequencyMeasurementmode

10.6.2SSWPLLBISTControlRegister2(SSWPLL2)

ThisisanobservationregisterusedtologcountervalueforthecapturecounterinsidethePLLwrapper.

TheSSWPLL2registerisshowninFigure10-7anddescribedinTable10-7.

Figure10-7.SSWPLLBISTControlRegister2(SSWPLL2)[offset=28h]

31

16

SSW_CAPTURE_COUNT

R-0

15

0

SSW_CAPTURE_COUNT

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table10-7.SSWPLLBISTControlRegister2(SSWPLL2)FieldDescriptions

Bit

Field

Value

Description

31-0

SSW_CAPTURE_COUNT

0-FFFFFFFFh

Capturecount.Thisregisterreturnsthevalueofthecapturecount.

WhenEXT_COUNTER_EN=0,thiscounterincrementswithinafixedmodulation

window.

WhenEXT_COUNTER_EN=1,thiscounterincrementsbasedupontheoscillator.

379

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

10.6.3SSWPLLBISTControlRegister3(SSWPLL3)

ThisisobservationregisterusedtologcountervalueforCLKOUTcounterinsidePLLwrapper.The

SSWPLL3registerisshowninFigure10-8anddescribedinTable10-8.

Figure10-8.SSWPLLBISTControlRegister3(SSWPLL3)[offset=2Ch]

31

16

SSW_CLKOUT_COUNT

R-0

15

0

SSW_CLKOUT_COUNT

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table10-8.SSWPLLBISTControlRegister3(SSWPLL3)FieldDescriptions

Bit

Field

Value

Description

31-0

SSW_CAPTURE_COUNT

0-FFFFFFFFh

ValueofCLKoutcountregister.ThiscounterincrementsbaseduponthePLLoutput

(priortotheR-divider).

380

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




referenceInputFeedbackdivideroutputDownUpLaggingphaseLeadingphase

VCOcontrolvoltage

Interpulseslopecausedbyfiltertimeconstantandleakage

PFD

CP

LF

VCO

÷NFCLKIN

÷2÷2

÷NR

÷R

PLLCLK

÷OD

post-ODCLKINTCLK

OutputCLK

FeedbackCLK



www.ti.comPhase-LockedLoopTheoryofOperation

10.7Phase-LockedLoopTheoryofOperation

ThePLLblockconsistsofsixlogicalsub-blocks:

•Phase-FrequencyDetector(PFD)

•ChargePump(CP)

•LoopFilter(LF)

•Voltage-ControlledOscillator(VCO)

•FrequencyModulation

•SlipDetector

Figure10-9illustratesthesub-blocksinabasicPLLcircuit.TheVCOadjustsitsfrequencyuntilthetwo

signalsintothePFDhavethesamephaseandfrequency.Thefeedbackpath(fromVCOtoPFD)divides

thefrequencyofthefeedbacksignalby2×NF;thisfeedbackdividerrequirestheVCOtogeneratea

frequency2×NFtimesgreaterthantheinternalfrequency(OSCIN/NR).Intheforwardpath(fromVCOto

PLLCLK),the/2blockcreatesacleandutycycle.

Figure10-9.BasicPLLCircuit

10.7.1Phase-FrequencyDetector

Thephase-frequencydetector(PFD)comparestheinputreferencephase/frequencytothe

phase/frequencyofthefeedbackdividerandgeneratestwosignals:anuppulseandadownpulsethat

driveachargepump.Theresultingcharge,whenintegratedbythecircuitattheLFpin,providesaVCO

controlvoltage,asshowninFigure10-10.

Figure10-10.PFDTiming

381

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PFD

PF

LF

VCO

DividerCLKIN

³2³2

³NR

³R

³OD

post-ODCLKINTCLK

PLLCLK

OutputCLK

FeedbackCLKNFNVNS



Phase-LockedLoopTheoryofOperationwww.ti.com

Thewidthoftheuppulseandthedownpulsedependsonthedifferenceinphasebetweenthetwoinputs.

Forexample,whenthereferenceinputleadsthefeedbackinputby10ns,thenanuppulseof

approximately10nsisgenerated(seeFigure10-10).Ontheotherhand,whenthereferenceinputlags

thefeedbackinputby10ns,thenadownpulseofapproximately10nsisgenerated.Whenthetwoinputs

areexactlyinphase,theuppulseanddownpulsebecomeessentiallyzero-width.Thesepulsesarefedto

thechargepumpblock,whichmeterschargeintothelow-passloopfilter.

Theadvantageofaphase-frequencydetectoroveraphase-onlydetectoristhatitcannotlocktoa

harmonicorsubharmonicofthereference.Thisimportantpropertyalsoensuresthattheoutputfrequency

oftheVCOisalwaysexactly2*NFtimesthereferencefrequency.

ThereferencefeedbackfrequencyisbasedupontheVCOfrequencyandthefeedbackdivider.Fractional

multiplicationisachievedbychangingthefeedbackdividerreal-timeinordertocreatethefractional

multiplication.Asanexample,ifamultiplierof100.5isselected,thefeedbackdividerdividesby100and

101inequalproportions;inthiscase,thePLLMULbitfieldwouldbeprogrammedas99.5(0x6380).This

fractionalmultiplicationisusefulwhentryingtoachievefinalfrequenciesthatarenon-integertotheinput

frequency(forexample,afinalfrequencythatisaprimenumber).Thefractionalportionofthedivider

shouldbesmallcomparedtothemultiplierandsoitisrecommendedthatthefractionalportionrelateto

partsin16,implyingthatthelast4bitsshouldalwaysbe0.

10.7.2ChargePumpandLoopFilter

Thechargepump(CP)addorremovechargefromtheloopfilterbasedonthepulsescomingfromthe

phase-frequencydetector(PFD).

Twocomponentsofthefilteroutputsignalaresummedtogether:anintegralcomponentanda

proportionalcomponent.TheintegralcomponentmaintainsaDClevelgoingtotheVCOtosetits

frequency,andtheproportionalcomponentmakestheVCOtrackchangesinphasetominimizejitter.The

capacitorsandresistorsrequiredforthefilterareintegratedinsilicon.

10.7.3Voltage-ControlledOscillator

TheoutputfrequencyoftheVCOisproportionaltoitsinputcontrolvoltage,whichisgeneratedbythe

chargepumpviatheintegratedloopfilter.IftheVCOoscillatestooslowly,thefeedbackphasebeginsto

lagthereferencephaseatthePFD,whichincreasesthecontrolvoltageattheVCO.Conversely,ifthe

VCOoscillatestoofast,thefeedbackphasebeginstoleadthereferencephaseatthePFD,which

decreasesthecontrolvoltageattheVCO.ThesetwoactionskeeptheVCOrunningatthecorrect

frequencymultipleofthereference.

Figure10-11.PLLModulationBlockDiagram

382

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ModulationPeriod(1/fs)Modulation

ff00-n%f0+n%

Time(Ps)Frequency(MHz)Depth



www.ti.comPhase-LockedLoopTheoryofOperation

10.7.4FrequencyModulation

TheoutputclockofthePLLchangesfrequencyinacontrolledway,centeredaroundtheunmodulated

outputfrequency.ThemodulationblockdirectlymodulatestheVCOfrequencyattheloopfilter,and

createsthetriangularfrequencymodulation(seeFigure10-12).

Figure10-12.Frequencyvs.Time

383

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




16.92256220036.0]0...8[=´´=MULMOD

220036.02256]0...8[´=´==DNSNVMULMODNF

2NSNVNF´=D

2207221005.0´=´==NVNSNFNVDepth

][45][20][54][20MHzMHzNRforMHzMHzNRfCLKINCLKIN====

402³´=´sCLKINfNRfNS

NSNRffCLKINs´´º2

40³´sCLKINfNRf



ProgrammingExamplewww.ti.com

10.8ProgrammingExample

ThissectionprovidesanexampleofhowtoprogramthePLL.Fornon-modulationsettings,thePLLCTL1

andPLLCTL2settingsfrom130nmprocessdevicescanbeusedwithoutmodification.

Supposethat,usinga20MHzcrystal,theapplicationrequires:

•180MHzGCLK(andHCLK)frequency

•100kHzspreadingfrequency

•0.5%spreadingdepth

1.ChooseanNRandNSsuchthat:

•(15)

•(16)

•(17)

•(NR,NS)={(5,20),(4,25),(2,50),(1,100)}

•EitherNR=5andNS=20orNR=4andNS=25arereasonable.Anotherchoice(NR,NS)=(3,

33)ispossibleifthemodulationfrequencycanvaryfrom100KHz.

2.ChooseOutputCLKfrequencyasintegerdividerofoutputfrequencynearto330MHz.OutputCLK

frequencyshouldnotexceed550MHzorfallbelow110MHz.

Theintegervaluesfor180MHzare360MHzor540MHz.360MHzisclosetothetargetfrequencyof

330MHzandweusethisfrequency.

3.Inthiscase,eitherofthebelowequationsaresuitablechoicesforgettingto360MHz.ChooseNR=5,

NS=20andsetNF=72.

(18)

4.SelecttheoutputdividerODsothatthepost-ODCLKfrequencydoesnotexceedthemaximum

frequencyofoutputdividerR(devicespecificfrequency).Inthiscase,chooseOD=2andR=1.

5.ComputethedividervalueNVsothatNV=0.036.

(19)

6.Ifitisimportanttomaintainthesameaveragefrequencyinmodulationasinnon-modulation,eitherNF

shouldbemodifiedORprogramtheMULMODbitfield.Themodulationfieldscreateamultiplieroffset

equalto:

(20)

IfusingMULMOD[8:0],then:

(21)

(22)

MULMODwillbesetto92.

384

OscillatorandPLL

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comProgrammingExample

7.ConvertthePLLparametersintobitfieldvalues:

•NR=5impliesthatREFCLKDIV[5:0]=4

•NS=20impliesthatSPRATE[8:0]=19=0x13

•NF=72impliesthatPLLMUL[15:0]=0x4700

•OD=2impliesthatODPLL[2:0]=1

•R=1impliesthatPLLDIV[4:0]=0

•NV=0.036impliesthatSPRAMOUNT=73=0x49

•MULMOD=92=0x5C

8.Settingonlythesefields(thatis,notBPOS,ROF,orROS)yields:

PLLCTL1=0x00044700

PLLCTL2=0x04C5C249

WhenFMENAisturnedon,PLLCTL2=0x84C5C249.

TheOutputCLKiscenteredintherangefrom110MHzto550MHzat360MHz.

NF=72fallswithinthemultiplierrangefrom1-256.

ODisselectedsothatpost-ODCLKmeetsthedevicespecification.

385

SPNU499B–November2012–RevisedAugust2013

OscillatorandPLL

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter11

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

Thischapterdescribesthedual-clockcomparator(DCC)module.

Topic...........................................................................................................................Page

11.1Introduction....................................................................................................387

11.2ModuleOperation............................................................................................388

11.3ClockSourceSelectionforCounter0andCounter1.............................................392

11.4DCCControlRegisters.....................................................................................393

386

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Preload Count 0Down Counter 0

=

0

Valid 0 Down Counter

Preload Valid 0

=

0

Clock 0

Reload

Reload

Compare and Control Logic

Down Counter 1

Clock 1

Preload Count 1

Reload

SingleSequenceMode

Error (to ESM)Reload

Done (to VIM)



www.ti.comIntroduction

11.1Introduction

TheprimarypurposeofaDCCmoduleistomeasurethefrequencyofaclocksignalusingasecond

knownclocksignalasareference.Thiscapabilitycanbeusedtoensurethecorrectfrequencyrangefor

severaldifferentdeviceclocksources,therebyenhancingthesystemsafetymetrics.

11.1.1MainFeatures

ThemainfeaturesofeachoftheDCCmodulesare:

•Allowsapplicationtoensurethatafixedratioismaintainedbetweenfrequenciesoftwoclocksignals

•Supportsthedefinitionofaprogrammabletolerancewindowintermsofnumberofreferenceclock

cycles

•Supportscontinuousmonitoringwithoutrequiringapplicationintervention

•Alsosupportsasingle-sequencemodeforspotmeasurements

•Allowsselectionofclocksourceforeachofthecountersresultinginseveralspecificusecases

11.1.2BlockDiagram

Figure11-1illustratesthemainconceptoftheDCCmodule.

Figure11-1.DCCOperation

387

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

11.2ModuleOperation

AsshowninFigure11-1,theDCCcontainstwocounters–counter0andcounter1,whicharedrivenby

twosignals–clock0andclock1.Theapplicationprogramstheseedvaluesforboththesecounters.The

applicationalsoconfiguresthetolerancewindowtimebyconfiguringthevalidcounterforclock0.

Counter0andcounter1bothstartcountingsimultaneouslyoncetheDCCisenabled.Whencounter0

countsdowntozero,thisautomaticallytriggersthecountdownofthetolerancewindowcounter(valid0).

TheDCCmodulecanbeusedintwodifferentoperatingmodes:

11.2.1ContinuousMonitoringMode

Inthismode,theDCCisusedbytheapplicationtoensurethattwoclocksignalsmaintainthecorrect

frequencyratio.SupposetheapplicationwantstoensurethatthePLLoutputsignal(clocksource#1)

alwaysmaintainsafixedfrequencyrelationshipwiththemainoscillator(clocksource#0).

•Inthiscase,theapplicationcanusethemainoscillatorastheclock0signal(forcounter0andvalid0)

andthePLLoutputastheclock1(forcounter1).

•Theseedvaluesofcounter0,valid0andcounter1areselectedsuchthatiftheactualfrequenciesof

clock0andclock1areequaltotheirexpectedfrequencies,thenthecounter1willreachzeroeitherat

thesametimeascounter0orduringthecountdownofthevalid0counter.

•Ifthecounter1reacheszeroduringthecountdownofthevalid0counter,thenallthecounters

(counter0,valid0,counter1)arereloadedwiththeirinitialseedvaluesoncevalid0hasalsocounted

downtozero.

•Thissequenceofcountingdownandcheckingthencontinuesaslongasthereisnoerror,oruntilthe

DCCmoduleisdisabled.

•ThecountersalsoallgetreloadediftheapplicationresetsandrestartstheDCCmodule.

ErrorConditions:

Anerrorconditionisgeneratedbyanyoneofthefollowing:

1.Counter1countsdownto0beforeCounter0reaches0.Thismeansthatclock1isfasterthan

expected,orclock0isslowerthanexpected.Itincludesthecasewhenclock0isstuckat1or0.

2.Counter1doesnotreach0evenwhenCounter0andValid0havebothreached0.Thismeansthat

clock1isslowerthanexpected.Itincludesthecasewhenclock1isstuckat1or0.

Anyerrorfreezesthecountersfromcounting.Anapplicationmaythenreadoutthecountervalues

tohelpdeterminewhatcausedtheerror.

11.2.1.1ErrorConditions

Whileoperatingincontinuousmode,thecountersgetreloadedwiththeseedvaluesandcontinue

countingdownunderthefollowingconditions:

•Themoduleisresetorrestartedbytheapplication,OR

•Counter0,Valid0andCounter1allreach0withoutanyerror

388

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




time

Clock0

reload

Count0Counter1doesnotreach0

Clock1

Valid0

ErrorbeforeVALID0reaches0

Count100

time

Clock0

reload

Clock1mustexpire

Clock1

Valid0inthiswindow,otherwisesignalanerrorreload

Count0Count1

Error(noerror)00

Count1Count0Valid0



www.ti.comModuleOperation

Figure11-2.CounterRelationship

Figure11-3.Clock1SlowerThanClock0-ResultsinanErrorandStopsCounting

389

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




time

Clock0

reload

AnerrorsignalisgeneratedsinceCount1

Clock1

Valid0

ErrorCount1doesnotcountdownduetoaninactiveclock1

Count0Count1doesnotreach0intheValid0window.00

time

Clock0

reload

Count0Counter1reaches0before

Clock1Valid0

ErrorCounter0reaches0

Count100



ModuleOperationwww.ti.com

Figure11-4.Clock1FasterThanClock0-ResultsinanErrorandStopsCounting

Figure11-5.Clock1NotPresent-ResultsinanErrorandStopsCounting

390

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




time

Clock0

reload

Count0Counter1reaches0atthe

Clock1Valid0Errorrighttime,butsinceClock0isnotrunning,Valid0hasn’tstarted,thusanerrorisgenerated.

Count1Count0andValid0donotcountdownduetoaninactiveclock0



www.ti.comModuleOperation

Figure11-6.Clock0NotPresent-ResultsinanErrorandStopsCounting

11.2.2Single-ShotMeasurementMode

TheDCCmodulecanbeprogrammedtocountdownonetimebyenablingthesingle-shotmode.Inthis

mode,theDCCstopsoperatingwhenthedowncounter0andthevalidcounter0reach0.Alternatively,the

DCCcanbeprogrammedtostopcountingwhenthedowncounter1reaches0.

Attheendofonesequenceofcountingdowninthissingle-shotmode,theDCCgetsdisabled

automatically,whichpreventsfurthercounting.Thismodeistypicallyusedforspotmeasurmentsofthe

frequencyofasignal.Thisfrequencycouldbeanunknownfortheapplicationbeforethemeasurement.

ExampleUsageofSingle-ShotMeasurementMode:TrimmingtheHigh-FrequencyLow-Power

Oscillator

ApracticalexampleoftheusageofthespotmeasurementmodeisintrimmingtheHFLPO(clock

source#5)usingthemainoscillatorasareference.Thismeasurementsequencewouldproceedas

follows:

•Theapplicationsetsuptheseedvaluesforcounter0andvalid0forthedurationofthe

measurement.Supposethemainoscillatorfrequencyis10MHzandtheintendeddurationofthe

measurementis500µs.Theapplicationneedstoconfigureaseedvalueof5000.

•These5000countsneedtobedividedbetweenthecounter0andthevalid0counters.The

minimumvalueforthevalid0seedis4,sotheapplicationcanconfigurecounter0seedvalueas

4996andthevalid0seedvalueas4.

•SupposetheHFLPOfrequencyistrulyunknown.Inthiscasetheapplicationcanchoosethe

maximumallowedseedvalueforcounter1.Thisincreasestheprobabilityofcounter0andvalid0

countingdownwhilethecounter1hasstillnotfullycounteddowntozero.Themaximumallowed

seedvalueforcounter1is1048575.

•OncetheDCCisenabled,thecounterscounter0andcounter1bothstartcountingdownfromtheir

seedvalues.

•Whencounter0reacheszero,itautomaticallytriggersthevalid0counter.

•Whenvalid0reacheszero,ifcounter1isnotzeroaswell,anERRORstatusflagissetanda"DCC

error"issenttotheESM.Counter1isalsofrozensothatitstopscountingdownanyfurther.The

applicationcanenableaninterrupttobegeneratedfromtheESMwheneverthisDCCerroris

indicated.ReferthedevicedatasheettoidentifytheESMgroupandchannelwheretheDCCerror

isconnected.

391

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ClockSourceSelectionforCounter0andCounter1www.ti.com

•TheDCCerrorinterruptserviceroutinecanthencheckthevalueofcounter1whentheerrorwas

generated.Supposethatthecounter1nowreads1044575.Thismeansthatcounter1hascounted

1048575-1044575,or4000cycleswithinthe500µsmeasurementperiod.Thismeansthatthe

averagefrequencyoftheHFLPOoverthis500µsperiodwas4000cycles/500µs,or8MHz.

•TheapplicationthenneedstocleartheERRORstatusflagandrestarttheDCCmodulesothatitis

readyforthenextspotmeasurement.

Ifthereisnoerrorgeneratedattheendofthesequence,thentheDONEstatusflagissetandaDONE

interruptisgenerated.TheapplicationmustcleartheDONEflagbeforerestartingtheDCC.

TheconditionsthatcauseaDCCerrorareidenticalbetweenthecontinuousmonitoringmodeandthe

single-shotmeasurementmode.

ErrorConditions:

Anerrorconditionisgeneratedbyanyoneofthefollowing:

1.Counter1countsdownto0beforeCounter0reaches0.Thismeansthatclock1isfasterthan

expected,orclock0isslowerthanexpected.Itincludesthecasewhenclock0isstuckat1or0.

2.Counter1doesnotreach0evenwhenCounter0andValid0havebothreached0.Thismeansthat

clock1isslowerthanexpected.Itincludesthecasewhenclock1isstuckat1or0.

Anyerrorfreezesthecountersfromcounting.Anapplicationmaythenreadoutthecountervalues

tohelpdeterminewhatcausedtheerror.

FreezingCounterswhenCounter1ReachesZero:

TheDCCmodulealsoallowsthecounterstobefrozenwhenthecounter1reacheszero.Thisallows

oneoftheclocksourcesforcounter1tobeusedasareferenceformeasuringoneoftheclocksources

forcounter0.Theerrorconditionsarethesameasthosewhere(counter0=0andvalid0=0)definethe

conditionwhentheDCCcountersarefrozen.Thatis,anerrorisindicatedifcoutner0andvalid0

becomezerowhilecounter1isstillnon-zero.Inthiscase,however,theapplicationwouldtypicallyset

uptheseedvaluessuchthatthecounter1willbecomezerobeforecounter0.Essentiallythe

measurementperiodisdefinedbytheseedvalueofthecounter1.Notethatthisisalsoanerror

condition,andtheinterruptserviceroutinecanusethemeasurementperiodandtheactualcycles

countedbycounter1todeterminethefrequencyoftheclock0signal.

11.3ClockSourceSelectionforCounter0andCounter1

Referthedevicedatasheettoidentifytheavailableoptionsforselectingtheclocksourcesforboth

countersoftheDCCmodule.SomemicrocontrollersmayincludemultipleinstancesoftheDCCmodule.

Thiswillalsobeidentifiedinthedevicedatasheet.

Theselectionoftheclocksourcesforcounter0andcoutner1isdonebyacombinationoftheKEY,CNT0

CLKSRCandCNT1CLKSRCcontrolfieldsoftheCNT0CLKSRCandCNT1CLKSRCregisters.

392

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCCControlRegisters

11.4DCCControlRegisters

Thissectiondescribesthedual-clockcomparator(DCC)modulecontrolandstatusregisters.Theregisters

support8-bit,16-bitor32-bitwritesandarealignedonaword(32-bit)boundary.Thetableshowsaddress

offsetsfromthemodulebaseaddress.PleasereferthedevicedatasheettoidentifytheDCCmodules'

baseaddresses.

Table11-1.DCCRegisters

Offset

Acronym

RegisterDescription

Section

00

DCCGCTRL

DCCGlobalControlRegister

Section11.4.1

04h

DCCREV

DCCRevisionIdRegister

Section11.4.2

08h

DCCCNT0SEED

DCCCounter0SeedRegister

Section11.4.3

0Ch

DCCVALID0SEED

DCCValid0SeedRegister

Section11.4.4

10h

DCCCNT1SEED

DCCCounter1SeedRegister

Section11.4.5

14h

DCCSTAT

DCCStatusRegister

Section11.4.6

18h

DCCDCNT0

DCCCounter0ValueRegister

Section11.4.7

1Ch

DCCVALID0

DCCValid0ValueRegister

Section11.4.8

20h

DCCDCNT1

DCCCounter1ValueRegister

Section11.4.9

24h

DCCCNT1CLKSRC

DCCCounter1ClockSourceSelectionRegister

Section11.4.10

28h

DCCCNT0CLKSRC

DCCCounter0ClockSourceSelectionRegister

Section11.4.11

393

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCCControlRegisterswww.ti.com

11.4.1DCCGlobalControlRegister(DCCGCTRL)

Figure11-7andTable11-2describetheDCCGlobalControlregister.

Figure11-7.DCCControlRegister(DCCGCTRL)[offset=00]

31

16

Reserved

R-0

15

12

11

8

7

4

3

0

DONEINTENA

SINGLESHOT

ERRENA

DCCENA

R/WP-5h

R/WP-5h

R/WP-5h

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-2.DCCControlRegister(DCCGCTRL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-12

DONEINTENA

DoneInterruptEnable.

Anyoperationmoderead,privilegedmodewrite:

5h

NointerruptisgeneratedwhentheDONEflagissetintheDCCStatus(DCCSTAT)

register.

Others

DONEinterruptisgeneratedwhentheDONEflagissetintheDCCStatus(DCCSTAT)

register.

11-8

SINGLESHOT

Single-ShotModeEnable.

Anyoperationmoderead,privilegedmodewrite:

Ah

DCCstopscountingwhencounter0andvalid0bothreachzero.

Bh

DCCstopscountingwhencounter1reacheszero.

Others

DCCcountscontinuouslyandonlystopswhenanerroroccurs.

7-4

ERRENA

ErrorInterruptEnable.

Anyoperationmoderead,privilegedmodewrite:

5h

NointerruptisgeneratedwhentheERRflagissetintheDCCStatus(DCCSTAT)register.

Others

ERRORinterruptisgeneratedwhentheERRflagissetintheDCCStatus(DCCSTAT)

register.

3-0

DCCENA

DCCEnable.

Anyoperationmoderead,privilegedmodewrite:

5h

AllDCCcountersarestoppedanderror-checkingisdisabled.Whenanerroroccurs,the

countersstopandthisfieldissetto5hautomaticallydisablingtheDCCcounterin

hardware.

Others

Read:Countersareenabled.

Write:Loadcounterswiththeirseedvaluesandbegincounting.Itisrecommendedtowrite

Ahtoenablecounterstoprotectagainstsingle-biterrors.

394

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCCControlRegisters

11.4.2DCCRevisionIdRegister(DCCREV)

Figure11-8andTable11-3describetheDCCRevisionIdregister.

Figure11-8.DCCRevisionIdRegister(DCCREV)[offset=4h]

31

30

29

28

27

16

SCHEME

Reserved

FUNC

R-01

R-0

R-0

15

11

10

8

7

6

5

0

RTL

MAJOR

CUSTOM

MINOR

R-0

R-2h

R-0

R-4h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table11-3.DCCRevisionIdRegister(DCCREV)FieldDescriptions

Bit

Field

Value

Description

31-30

SCHEME

01

Readsreturn01,writeshavenoeffect.

29-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-16

FUNC

0

Functionalreleasenumber.Readsreturn0x000,writeshavenoeffect.

15-11

RTL

0

Designreleasenumber.Readsreturn0x00,writeshavenoeffect.

10-8

MAJOR

2h

Majorrevisionnumber.Readsreturn0x2,writeshavenoeffect.

7-6

CUSTOM

0

Customversionnumber.Readsreturn0x0,writeshavenoeffect.

5-0

MINOR

4h

Minorrevisionnumber.Readsreturn0x4,writeshavenoeffect.

11.4.3DCCCounter0SeedRegister(DCCCNT0SEED)

Figure11-9andTable11-4describetheDCCCounter0Seedregister.

Figure11-9.DCCCounter0SeedRegister(DCCCNT0SEED)[offset=8h]

31

20

19

16

Reserved

COUNT0SEED

R-0

R/WP-0

15

0

COUNT0SEED

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-4.DCCCounter0SeedRegister(DCCCNT0SEED)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-0

COUNT0SEED

SeedvalueforDCCCounter0.

ReadinanyoperatingmodereturnsthecurrentvalueofCounter0.

WritinginprivilegedmodeonlysetsthecurrentseedvalueforCounter0.

NOTE:SeedforCounter0mustbenon-zero

TheDCCmustonlybeenabledafterprogramminganon-zerovalueintheCOUNT0SEED

register.

395

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCCControlRegisterswww.ti.com

11.4.4DCCValid0SeedRegister(DCCVALID0SEED)

Figure11-10andTable11-5describetheDCCValid0Seedregister.

Figure11-10.DCCValid0SeedRegister(DCCVALID0SEED)[offset=Ch]

31

16

Reserved

R-0

15

0

VALID0SEED

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-5.DCCValid0SeedRegister(DCCVALID0SEED)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

VALID0SEED

SeedvalueforDCCValid0.ThisvaluedefinesthewindowwithinwhichtheCounter1must

reach0.Thiswindowneedstobeatleast4cycleswide.

ReadinanyoperatingmodereturnsthecurrentvalueofseedforValid0.

WritinginprivilegedmodeonlysetsthecurrentseedvalueforValid0.Writesinusermode

areignored.

NOTE:SeedforValid0mustbeatleast0x4

TheDCCmustonlybeenabledafterprogrammingavaluegreaterthanorequalto0x4in

theVALID0SEEDregister.

11.4.5DCCCounter1SeedRegister(DCCCNT1SEED)

Figure11-11andTable11-6describetheDCCCounter1Seedregister.

Figure11-11.DCCCounter1SeedRegister(DCCCNT1SEED)[offset=10h]

31

20

19

16

Reserved

COUNT1SEED

R-0

R/WP-0

15

0

COUNT1SEED

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-6.DCCCounter1SeedRegister(DCCCNT0SEED)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-0

COUNT1SEED

SeedvalueforDCCCounter1.

ReadinanyoperatingmodereturnsthecurrentvalueofseedforCounter1.

WritinginprivilegedmodeonlysetsthecurrentseedvalueforCounter1.Writesinuser

modeareignored.

NOTE:SeedforCounter0mustbenon-zero

TheDCCmustonlybeenabledafterprogramminganon-zerovalueintheCOUNT1SEED

register.

396

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCCControlRegisters

11.4.6DCCStatusRegister(DCCSTAT)

Figure11-7andTable11-2describetheDCCStatusregister.

Figure11-12.DCCStatusRegister(DCCSTAT)[offset=14h]

31

16

Reserved

R-0

15

2

1

0

Reserved

DONE

ERR

R-0

R/WPC-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-7.DCCStatusRegister(DCCSTAT)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

DONEFLG

Single-ShotSequenceDoneflag.Indicatesthatasingle-shotDCCsequenceisdonewithout

anyerror.

0

Read:Single-shotsequenceisnotdone.

Write:Writing0hasnoeffect.

1

Read:Single-shotsequenceisdonewithoutanyerror.

Write:Writing1inprivilegedmodeclearstheDONEFLG.

0

ERRFLG

Errorflag.IndicatesthataDCCerrorhasoccurred.

0

Read:DCCerrorhasnotoccurred.

Write:Writing0hasnoeffect.

1

Read:Anerrorhasoccurred.

Write:Writing1inprivilegedmodeclearstheERRFLG.

11.4.7DCCCounter0ValueRegister(DCCCNT0)

Figure11-13andTable11-8describetheDCCCounter0Valueregister.

Figure11-13.DCCCounter0ValueRegister(DCCCNT0)[offset=18h]

31

20

19

16

Reserved

COUNT0

R-0

R-0

15

0

COUNT0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table11-8.DCCCounter0SeedRegister(DCCCNT0)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-0

COUNT0

CurrentvalueofDCCCounter0.

ReadinanyoperatingmodereturnsthecurrentvalueofCounter0.

Writeshavenoeffect.

NOTE:Readsmaynotreturnexactcurrentvalueofcounter

Readingthecounter0valuewhilecountingisenabledmaynotreturntheexactvalueofthe

counter0.

397

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCCControlRegisterswww.ti.com

11.4.8DCCValid0ValueRegister(DCCVALID0)

Figure11-14andTable11-9describetheDCCValid0Valueregister.

Figure11-14.DCCValid0ValueRegister(DCCVALID0)[offset=1Ch]

31

16

Reserved

R-0

15

0

VALID0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table11-9.DCCValid0ValueRegister(DCCVALID0)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

VALID0

CurrentvalueforDCCValid0.

ReadinanyoperatingmodereturnsthecurrentvalueofValid0.

Writeshavenoeffect.

NOTE:ReadsmaynotreturnexactcurrentvalueofValid0

ReadingtheValid0valuewhilecountingisenabledmaynotreturntheexactvalueofthe

Valid0.

11.4.9DCCCounter1ValueRegister(DCCCNT1)

Figure11-15andTable11-10describetheDCCCounter1Valueregister.

Figure11-15.DCCCounter1ValueRegister(DCCCNT1)[offset=20h]

31

20

19

16

Reserved

COUNT1

R-0

R/WP-0

15

0

COUNT1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-10.DCCCounter1ValueRegister(DCCCNT1)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-0

COUNT1

CurrentvalueforDCCCounter1.

ReadinanyoperatingmodereturnsthecurrentvalueofCounter1.

Writeshavenoeffect

NOTE:Readsmaynotreturnexactcurrentvalueofcounter

Readingthecounter1valuewhilecountingisenabledmaynotreturntheexactvalueofthe

counter1.

398

Dual-ClockComparator(DCC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCCControlRegisters

11.4.10DCCCounter1ClockSourceSelectionRegister(DCCCNT1CLKSRC)

Figure11-15andTable11-10describetheDCCCounter1Valueregister.

Figure11-16.DCCCounter1ClockSourceSelectionRegister(DCCCNT1CLKSRC)[offset=24h]

31

16

Reserved

R-0

15

12

11

4

3

0

KEY

Reserved

CNT1CLKSRC

R/WP-5h

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-11.DCCCounter1ValueRegister(DCCCNT1)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-12

KEY

KeytoenableclocksourceselectionforCounter1.

Readinanyoperatingmodereturnsthecurrentvalueofthekey.

Writinginprivilegedmodesetsthekeyvalue.

Writing1010asthekeyenablestheCNT1CLKSRCfieldtodefinetheclocksourcefor

counter1.

Writinganyotherkeyvaluedisablestheclocksourceselectionforcounter1.

ReferthedevicedatasheetforavailableclocksourceoptionsandtheKEYrequiredto

enabletheseoptionsforcounter1.

11-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

CNT1CLKSRC

ClockSourceforCounter1whenKEYisprogrammedtobe0xA.

ReadinanyoperatingmodereturnsthecurrentvalueofCLKSRC.

WritesinprivilegedmodeselecttheclocksourceforCounter1.

ReferthedevicedatasheetforavailableclocksourceoptionsandtheKEYrequiredto

enabletheseoptionsforCounter1.

11.4.11DCCCounter0ClockSourceSelectionRegister(DCCCNT0CLKSRC)

Figure11-15andTable11-10describetheDCCCounter0Valueregister.

Figure11-17.DCCCounter0ClockSourceSelectionRegister(DCCCNT0CLKSRC)[offset=24h]

31

16

Reserved

R-0

15

4

3

0

Reserved

CNT0CLKSRC

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table11-12.DCCCounter0ClockSourceSelectionRegister(DCCCNT0CLKSRC)Field

Descriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

CNT0CLKSRC

ClockSourceforCounter0

ReadinanyoperatingmodereturnsthecurrentvalueofCLKSRC.

WritesinprivilegedmodeselecttheclocksourceforCounter0.

ReferthedevicedatasheetforavailableclocksourceoptionsforCounter0.

399

SPNU499B–November2012–RevisedAugust2013

Dual-ClockComparator(DCC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter12

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

Thischapterprovidesthedetailsoftheerrorsignalingmodule(ESM)whichaggregatesdeviceerrorsand

providesinternalandexternalerrorresponsebasedonerrorseverity.

Topic...........................................................................................................................Page

12.1Overview........................................................................................................401

12.2ModuleOperation............................................................................................403

12.3RecommendedProgrammingProcedure............................................................406

12.4ControlRegisters............................................................................................407

400

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




InterruptPriority

Low-PriorityInterruptHandling

High-PriorityInterruptHandling

ErrorSignalHandling

error_group1error_group2error_group3

ERROR

Device

Low-PriorityInterruptHigh-PriorityInterruptfromHardwareDiagnosticstoVIMInterruptController

InterruptEnable

ERROR

PinEnable

OutputPIN



www.ti.comOverview

12.1Overview

TheErrorSignalingModule(ESM)collectsandreportsthevariouserrorconditionsonthemicrocontroller.

Theerrorconditioniscategorizedbasedonaseveritylevel.Errorresponseisthengeneratedbasedon

thecategoryoftheerror.Possibleerrorresponsesincludealowpriorityinterrupt,highpriorityinterrupt,

andanexternalpinaction.

12.1.1FeatureList

•Upto128errorchannelsaresupported,dividedinto3differentgroups:

–64Group1(lowseverity)channelswithconfigurableinterruptgenerationandconfigurableERROR

pinbehavior

–32Group2(highseverity)channelswithpredefinedinterruptgenerationandpredefinedERRORpin

behavior

–32Group3(highseverity)channelswithnointerruptgenerationandpredefinedERRORpin

behavior.ThesechannelshavenointerruptresponseastheyarereservedforCPUbased

diagnosticswhichgenerateabortsdirectlytotheCPU.

•DedicateddeviceERRORpintosignalanexternalobserver

•ConfigurabletimebaseforERRORpinoutput

•Errorforcingcapabilityforlatentfaulttesting

12.1.2BlockDiagram

AsshowninFigure12-1,theESMchannelsaredividedintothreegroups.Group1channelsare

consideredtobelowseverity.Group1errorshaveaconfigurableinterruptresponseandconfigurable

ERRORpinbehavior.NotethattheESMStatusRegister1(ESMSR1)forerrorgroup1getsupdated,

regardlessiftheinterruptenableisactiveornot.Group2channelsareERRORhighseverity.Group2

errorsalwaysgenerateahighpriorityinterruptandanoutputontheERRORpin.Group3errorsare

reservedforhighseverityerrorsgeneratedbydiagnosticswhichhavealreadygeneratedaCPUabort

response.Becauseanabortresponseisgenerated,thereisnoneedtogenerateaninterruptresponse.

Group3errorsalwaysgenerateanERRORpinoutput.

TheESMinterruptandERRORpinbehaviorarealsosummarizedinTable12-1.

Figure12-1.BlockDiagram

NotethattheESMStatusRegister1(ESMSR1)forerror_group1getsupdated,regardlessiftheinterruptenableis

activeornot.

401

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ErrorSignal

Low-TimeCountererror_group1error_group2error_group3

ERROR

Control

Low-TimeCounterPreload

Memorymappedregisterinterface

Peripheralclock(VCLK)

CPU clock (GCLK)(

LTCP

)(

LTC

)

ERROR

PinEnableControlled by:

ESMIEPSR1

,

ESMIEPCR1ESMIEPSR4

,

ESMIEPCR4

DeviceOutputPIN

ESMEPSR

InterruptPriorityControlled by:

ESMILSR1ESMILCR1ESMILSR4ESMILCR4

Low-PriorityInterruptHandling

High-PriorityInterruptHandling

error_group1error_group2

Low-PriorityInterruptHigh-PriorityInterruptfromHardwareDiagnosticstoVIMInterruptController

InterruptEnableControlled by:

ESMIESR1ESMIECR1ESMIESR4ESMIECR4



Overviewwww.ti.com

Table12-1.ESMInterruptandERRORPinBehavior

ErrorGroup

InterruptGenerated

Interruptpriority

ERRORpinresponsegenerated

1

configurableinterrupt

configurablepriority

configurableoutputgeneration

2

interruptgenerated

highpriority

outputgenerated

3

nointerrupt

NA

outputgenerated

Figure12-2andFigure12-3showtheinterruptresponsehandlingandERRORpinresponsehandling

withregisterconfiguration.ThetotalactivetimeoftheERRORpiniscontrolledbytheLow-TimeCounter

Preloadregister(LTCP)andthekeyregister(ESMEPSR)asshowninFigure12-3.Pleasesee

Section12.2.2fordetails.

Figure12-2.InterruptResponseHandling

Figure12-3.ERRORPinResponseHandling

402

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




)1(_+´=LTCPttVCLKlowERROR



www.ti.comModuleOperation

12.2ModuleOperation

Thisdevicehas128errorchannels,dividedinto3differenterrorgroups.Pleaserefertothedevice

datasheetforESMchannelassignmentdetails.

TheESMmodulehaserrorflagsforeacherrorchannel.TheerrorstatusregistersESMSR1,ESMSR4,

ESMSR2,ESMSR3providestatusinformationonapendingerrorofGroup1(Channel0-31),Group1

(Channel32-63),Group2,andGroup3,respectively.TheESMEPSRregisterprovidesthecurrentERROR

status.Themodulealsoprovidesastatusshadowregister,ESMSSR2,whichmaintainstheerrorflagsof

Group2untilpower-onreset(PORRST)isasserted.PleaseseeSection12.2.1fordetailsoftheirbehavior

duringpoweronresetandwarmreset.

Onceanerroroccurs,theESMmodulewillsetthecorrespondingerrorflags.Inaddition,itcantriggeran

interrupt,ERRORpinoutputslowdependingontheESMsettings.OncetheERRORpinoutputslow,a

poweronresetorawriteof0x5toESMEKRisrequiredtoreleasetheESMerrorpinbacktonormalstate.

PleaseseeSection12.2.2fordetails.Theapplicationcanreadtheerrorstatusregisters(ESMSR1,

ESMSR4,ESMSR2,andESMSR3)todebugtheerror.IfanRSTistriggeredortheerrorinterrupthas

beenserved,theerrorflagofGroup2shouldbereadfromESMSSR2becausetheerrorflaginESMSR2

willbeclearedbyRST.

TheusercanalsotestthefunctionalityoftheERRORpinbyforcinganerror.PleaseseeSection12.2.3

fordetails.

12.2.1ResetBehavior

Poweronreset:

•ERRORpinbehavior

WhennPORRSTisactive,theERRORpinisinahighimpedancestate(outputdriversdisabled).

•Registerbehavior

AfterPORRST,allregistersinESMmodulewillbere-initializedtothedefaultvalue.Alltheerrorstatus

registersareclearedtozero.

Warmreset(RST):

•ERRORpinbehavior

DuringRST,theERRORpinisin“outputactive”statewithpull-downdisabled.TheERRORpin

remainsunchangedafterRST.

•Registerbehavior

AfterRST,ESMSR1,ESMSR4,ESMSSR2,ESMSR3andESMEPSRregistervaluesremainsun-

changed.SinceRSTdoesnotclearthecriticalfailureregisters,theusercanreadthoseregistersto

debugthefailuresafterRSTpingoesbacktohigh.

AfterRST,ifoneoftheflagsinESMSR1andESMSR4isset,theinterruptserviceroutinewillbe

calledoncethecorrespondinginterruptisenabled.

NOTE:ESMSR2isclearedafterRST.TheflaginESMSR2getsclearedwhenreadingthe

appropriatevectorintheESMIOFFHRoffsetregister.ReadingESMIOFFHRwillnotclearthe

ESMSR1,ESMSR4,andtheshadowregisterESMSSR2.ReadingESMIOFFLRwillalsonot

cleartheESMSR1andESMSR4.

12.2.2ERRORPinTiming

TheERRORpinisanactivelowfunction.ThestateofthepinisalsoreadablefromERRORPinStatus

Register(ESMEPSR).Awarmreset(RST)doesnotaffectthestateofthepin.Thepinisinahigh-

impedancestateduringpower-onreset.OncetheESMmoduledrivestheERRORpinlow,itremainsin

thisstateforthetimespecifiedbytheLow-TimeCounterPreloadregister(LTCPR).Basedonthetime

periodoftheperipheralclock(VCLK),thetotalactivetimeoftheERRORpincanbecalculatedas:

(23)

403

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




failure

ERROR

tERROR

_low

ERROR

pinresetrequest

failure

failure

ERROR

tERROR

_low

tERROR

_low

ERROR

pinresetrequest

failure

ERROR

tERROR

_low

ERROR

pinresetrequest

failureERROR

tERROR

_low

ERROR

pinresetrequest

failureERROR

tERROR

_low



ModuleOperationwww.ti.com

Oncethisperiodexpires,theERRORpinissettohighincasetheresetoftheERRORpinwas

requested.Thisrequestisdonebywritinganappropriatekey(0x5)tothekeyregister(ESMEKR)during

theERRORpinlowtime.Hereareafewexamples:

Example1:ESMdetectsafailureanddrivestheERRORpinlow.NoERRORpinresetisrequested.The

ERRORpincontinuesoutputtinglowuntilpoweronresetoccurs.

Figure12-4.ERRORPinTiming-Example1

Example2:ESMdetectsafailureanddrivestheERRORpinlow.AnERRORpinresetrequestis

receivedbeforetERROR_lowexpires.Inthiscase,theERRORpinissettohighimmediatelyaftertERROR_low

expires.

Figure12-5.ERRORPinTiming-Example2

Example3:ESMdetectsafailureanddrivestheERRORpinlow.AnERRORpinresetrequestis

receivedaftertERROR_lowexpires.Inthiscase,theERRORpinissettohighimmediatelyafterERRORpin

resetrequestisreceived.

Figure12-6.ERRORPinTiming-Example3

Example4:ESMdetectsafailureanddrivestheERRORpinlow.Anotherfailureoccurswithinthetime

thepinstayslow.Inthiscase,thelowtimecounterwillberesetwhentheotherfailureoccurs.Inother

words,tERROR_lowshouldbecountedfromwheneverthemostrecentfailureoccurs.

Figure12-7.ERRORPinTiming-Example4

Example5:TheresetoftheERRORpinwasrequestedbythesoftwareevenbeforethefailureoccurs.In

thiscase,theERRORpinissettohighimmediatelyaftertERROR_lowexpires.Thiscaseisnotrecommended

andshouldbeavoidedbytheapplication.

Figure12-8.ERRORPinTiming-Example5

404

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




failure

ERROR

Write“1010”to

ESMEKR

Write“0”to

ESMEKR

Write“0101”to

ESMEKR

tERROR

_low



www.ti.comModuleOperation

12.2.3ForcinganErrorCondition

Theerrorresponsegenerationmechanismistestablebysoftwarebyforcinganerrorcondition.This

allowstestingtheERRORpinfunctionality.Bywritingadedicatedkeytotheerrorforcingkeyregister

(ESMEKR),theERRORpinissettolowforthespecifiedtime.Thefollowingstepsdescribehowtoforce

anerrorcondition:

1.CheckERRORPinStatusRegister(ESMEPSR).Thisregistermustbe“1”toswitchintotheerror

forcingmode.

TheESMmodulecannotbeswitchedintotheerrorforcingmodeifafailurehasalreadybeendetected

infunctionalmode.Theapplicationcommandtoswitchtoerrorforcingmodeisignored.

2.Write“1010b”totheerrorforcingkeyregister(ESMEKR).Afterthat,theERRORpinshouldoutputlow

(errorforcemode).

OncetheapplicationputstheESMmoduleintheerrorforcingmode,theERRORpincannotindicate

thenormalerrorfunctionality.Ifafailureoccursduringthistime,itgetsstilllatchedandtheLTCis

resetandstopped.Theerroroutputpinisalreadydrivenlowonaccountoftheerrorforcingmode.

WhentheESMisforcedbacktonormalfunctionalmode,theLTCbecomesactiveandforcesthe

ERRORpinlowuntiltheexpirationoftheLTC(seeFigure12-9).

Figure12-9.ERRORPinTiming-Example6

3.Write“0000”totheerrorforcingkeyregister(ESMEKR)backtotheactivenormalmode.

IftherearenoerrorsdetectedwhiletheESMmoduleisintheerrorforcingmode,theERRORpin

goeshighimmediatelyafterexitingtheerrorforcingmode.

405

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Initialize VIM RAM. Map the ESM low priority interrupt service routine and high priority interruptservice routine to pre-defined device specific interrupt channel. (Refer to device specific datasheet.)Force error onpin to check the functionality ofpin and external monitoringdevice connected topin (ESMEKR).ERRORERRORERROR

Power up orPORRST

Enable the interrupt in VIM and CPU.Map ESM interrupt to high/low (ESM Group1 only, see registerESMILSR1,ESMILCR1, ESMILSR4, and ESMILCR4).Define ESM Low-Time Counter Preload Register ESMLTCPR to determine thepinlow time in case an error occurs.ERROR

Enable ESM interrupt and influence onpin (ESM Group1 only, see register ESMIEPSR1,ESMIEPCR1, ESMIESR1,ESMIECR1, ESMIEPSR4, ESMIEPCR4, ESMIESR4, and ESMIECR4).ERROR



RecommendedProgrammingProcedurewww.ti.com

12.3RecommendedProgrammingProcedure

Duringtheinitializationstage,theapplicationcodeshouldfollowtherecommendationsinFigure12-10to

initializetheESM.

Figure12-10.ESMInitialization

Onceanerroroccurs,itcantriggeraninterrupt,ERRORpinoutputslowdependingontheESMsettings.

OncetheERRORpinoutputslow,apoweronresetorawriteof0x5toESMEKRisrequiredtorelease

theESMbacktonormalstate.Theapplicationcanreadtheerrorstatusregisters(ESMSR1,ESMSR4,

ESMSR2,andESMSR3)todebugtheerror.IfanRSTistriggeredortheerrorinterrupthasbeenserved,

theerrorflagofGroup2shouldbereadfromESMSSR2becausetheerrorflaginESMSR2willbecleared

byRST.

406

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4ControlRegisters

ThissectiondescribestheESMregisters.Eachregisterbeginsona32-bitwordboundary.Theregisters

support32-bit,16-bitand8-bitaccesses.ThebaseaddressforthecontrolregistersisFFFFF500h.

Table12-2.ESMModuleRegisters

Address

Acronym

RegisterDescription

Section

FFFFF500h

ESMEEPAPR1

ESMEnableERRORPinAction/ResponseRegister1

Section12.4.1

FFFFF504h

ESMDEPAPR1

ESMDisableERRORPinAction/ResponseRegister1

Section12.4.2

FFFFF508h

ESMIESR1

ESMInterruptEnableSet/StatusRegister1

Section12.4.3

FFFFF50Ch

ESMIECR1

ESMInterruptEnableClear/StatusRegister1

Section12.4.4

FFFFF510h

ESMILSR1

InterruptLevelSet/StatusRegister1

Section12.4.5

FFFFF514h

ESMILCR1

InterruptLevelClear/StatusRegister1

Section12.4.6

FFFFF518h

ESMSR1

ESMStatusRegister1

Section12.4.7

FFFFF51Ch

ESMSR2

ESMStatusRegister2

Section12.4.8

FFFFF520h

ESMSR3

ESMStatusRegister3

Section12.4.9

FFFFF524h

ESMEPSR

ESMERRORPinStatusRegister

Section12.4.10

FFFFF528h

ESMIOFFHR

ESMInterruptOffsetHighRegister

Section12.4.11

FFFFF52Ch

ESMIOFFLR

ESMInterruptOffsetLowRegister

Section12.4.12

FFFFF530h

ESMLTCR

ESMLow-TimeCounterRegister

Section12.4.13

FFFFF534h

ESMLTCPR

ESMLow-TimeCounterPreloadRegister

Section12.4.14

FFFFF538h

ESMEKR

ESMErrorKeyRegister

Section12.4.15

FFFFF53Ch

ESMSSR2

ESMStatusShadowRegister2

Section12.4.16

FFFFF540h

ESMIEPSR4

ESMInfluenceERRORPinSet/StatusRegister4

Section12.4.17

FFFFF544h

ESMIEPCR4

ESMInfluenceERRORPinClear/StatusRegister4

Section12.4.18

FFFFF548h

ESMIESR4

ESMInterruptEnableSet/StatusRegister4

Section12.4.19

FFFFF54Ch

ESMIECR4

ESMInterruptEnableClear/StatusRegister4

Section12.4.20

FFFFF550h

ESMILSR4

InterruptLevelSet/StatusRegister4

Section12.4.21

FFFFF554h

ESMILCR4

InterruptLevelClear/StatusRegister4

Section12.4.22

FFFFF558h

ESMSR4

ESMStatusRegister4

Section12.4.23

407

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.1ESMEnableERRORPinAction/ResponseRegister1(ESMEEPAPR1)

ThisregisterisdedicatedforGroup1.

Figure12-11.ESMEnableERRORPinAction/ResponseRegister1(ESMEEPAPR1)[offset=FFFF

F500h]

31

16

IEPSET

R/WP-0

15

0

IEPSET

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-3.ESMEnableERRORPinAction/ResponseRegister1(ESMEEPAPR1)

FieldDescriptions

Bit

Field

Value

Description

31-0

IEPSET

EnableERRORPinAction/ResponseonGroup1.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:FailureonchannelxhasnoinfluenceonERRORpin.

Write:LeavesthebitandthecorrespondingclearbitintheESMIEPCR1registerunchanged.

1

Read:FailureonchannelxhasinfluenceonERRORpin.

Write:EnablesfailureinfluenceonERRORpinandsetsthecorrespondingclearbitinthe

ESMIEPCR1register.

12.4.2ESMDisableERRORPinAction/ResponseRegister1(ESMDEPAPR1)

ThisregisterisdedicatedforGroup1.

Figure12-12.ESMDisableERRORPinAction/ResponseRegister1(ESMDEPAPR1)[offset=FFFF

F504h]

31

16

IEPCLR

R/WP-0

15

0

IEPCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-4.ESMDisableERRORPinAction/ResponseRegister1(ESMDEPAPR1)

FieldDescriptions

Bit

Field

Value

Description

31-0

IEPCLR

DisableERRORPinAction/ResponseonGroup1.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:FailureonchannelxhasnoinfluenceonERRORpin.

Write:LeavesthebitandthecorrespondingsetbitintheESMIEPSR1registerunchanged.

1

Read:FailureonchannelxhasinfluenceonERRORpin.

Write:DisablesfailureinfluenceonERRORpinandclearsthecorrespondingsetbitinthe

ESMIEPSR1register.

408

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4.3ESMInterruptEnableSet/StatusRegister1(ESMIESR1)

ThisregisterisdedicatedforGroup1.

Figure12-13.ESMInterruptEnableSet/StatusRegister1(ESMIESR1)[offset=FFFFF508h]

31

16

INTENSET

R/WP-0

15

0

INTENSET

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-5.ESMInterruptEnableSet/StatusRegister1(ESMIESR1)FieldDescriptions

Bit

Field

Value

Description

31-0

INTENSET

SetinterruptEnable

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptisdisabled.

Write:LeavesthebitandthecorrespondingclearbitintheESMIECR1registerunchanged.

1

Read:Interruptisenabled.

Write:EnablesinterruptandsetsthecorrespondingclearbitintheESMIECR1register.

12.4.4ESMInterruptEnableClear/StatusRegister1(ESMIECR1)

ThisregisterisdedicatedforGroup1.

Figure12-14.ESMInterruptEnableClear/StatusRegister1(ESMIECR1)[offset=FFFFF50Ch]

31

16

INTENCLR

R/WP-0

15

0

INTENCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-6.ESMInterruptEnableClear/StatusRegister1(ESMIECR1)FieldDescriptions

Bit

Field

Value

Description

31-0

INTENCLR

ClearInterruptEnable

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptisdisabled.

Write:LeavesthebitandthecorrespondingsetbitintheESMIESR1registerunchanged.

1

Read:Interruptisenabled.

Write:DisablesinterruptandclearsthecorrespondingsetbitintheESMIESR1register.

409

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.5ESMInterruptLevelSet/StatusRegister1(ESMILSR1)

ThisregisterisdedicatedforGroup1.

Figure12-15.ESMInterruptLevelSet/StatusRegister1(ESMILSR1)[offset=FFFFF510h]

31

16

INTLVLSET

R/WP-0

15

0

INTLVLSET

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-7.ESMInterruptLevelSet/StatusRegister1(ESMILSR1)FieldDescriptions

Bit

Field

Value

Description

31-0

INTLVLSET

SetInterruptPriority

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptofchannelxismappedtolowlevelinterruptline.

Write:LeavesthebitandthecorrespondingclearbitintheESMILCR1registerunchanged.

1

Read:Interruptofchannelxismappedtohighlevelinterruptline.

Write:Mapsinterruptofchannelxtohighlevelinterruptlineandsetsthecorrespondingclear

bitintheESMILCR1register.

12.4.6ESMInterruptLevelClear/StatusRegister1(ESMILCR1)

ThisregisterisdedicatedforGroup1.

Figure12-16.ESMInterruptLevelClear/StatusRegister1(ESMILCR1)[offset=FFFFF514h]

31

16

INTLVLCLR

R/WP-0

15

0

INTLVLCLR

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-8.ESMInterruptLevelClear/StatusRegister1(ESMILCR1)FieldDescriptions

Bit

Field

Value

Description

31-0

INTLVLCLR

ClearInterruptPriority.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptofchannelxismappedtolowlevelinterruptline.

Write:LeavesthebitandthecorrespondingsetbitintheESMILSR1registerunchanged.

1

Read:Interruptofchannelxismappedtohighlevelinterruptline.

Write:Mapsinterruptofchannelxtolowlevelinterruptlineandclearsthecorrespondingsetbit

intheESMILSR1register.

410

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4.7ESMStatusRegister1(ESMSR1)

ThisregisterisdedicatedforGroup1.NotethattheESMSR1statusregisterwillgetupdatedifanerror

conditionoccurs,regardlessifthecorrespondinginterruptenableflagissetornot.

Figure12-17.ESMStatusRegister1(ESMSR1)[offset=FFFFF518h]

31

16

ESF

R/WPC-X/0

15

0

ESF

R/WPC-X/0

LEGEND:R/W=Read/Write;R=Read;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset/PORRST;X=Value

unchanged

Table12-9.ESMStatusRegister1(ESMSR1)FieldDescriptions

Bit

Field

Value

Description

31-0

ESF

ErrorStatusFlag.Providesstatusinformationonapendingerror.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Noerroroccurred;nointerruptispending.

Write:Leavesthebitunchanged.

1

Read:Erroroccurred;interruptispending.

Write:Clearsthebit.

Note:AfternRST,ifoneoftheseflagsaresetandthecorrespondinginterruptareenabled,the

interruptserviceroutinewillbecalled.

12.4.8ESMStatusRegister2(ESMSR2)

ThisregisterisdedicatedforGroup2.

Figure12-18.ESMStatusRegister2(ESMSR2)[offset=FFFFF51Ch]

31

16

ESF

R/WPC-0

15

0

ESF

R/WPC-0

LEGEND:R/W=Read/Write;R=Read;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-10.ESMStatusRegister2(ESMSR2)FieldDescriptions

Bit

Field

Value

Description

31-0

ESF

ErrorStatusFlag.Providesstatusinformationonapendingerror.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Noerroroccurred;nointerruptispending.

Write:Leavesthebitunchanged.

1

Read:Erroroccurred;interruptispending.

Write:Clearsthebit.ESMSSR2isnotimpactedbythisaction.

Note:Innormaloperationtheflaggetsclearedwhenreadingtheappropriatevectorinthe

ESMIOFFHRoffsetregister.ReadingESMIOFFHRwillnotcleartheESMSR1andtheshadow

registerESMSSR2.

411

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.9ESMStatusRegister3(ESMSR3)

ThisregisterisdedicatedforGroup3.

Figure12-19.ESMStatusRegister3(ESMSR3)[offset=FFFFF520h]

31

16

ESF

R/WPC-X/0

15

0

ESF

R/WPC-X/0

LEGEND:R/W=Read/Write;R=Read;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset/PORRST;X=Value

unchanged

Table12-11.ESMStatusRegister3(ESMSR3)FieldDescriptions

Bit

Field

Value

Description

31-0

ESF

ErrorStatusFlag.Providesstatusinformationonapendingerror.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Noerroroccurred.

Write:Leavesthebitunchanged.

1

Read:Erroroccurred.

Write:Clearsthebit.

12.4.10ESMERRORPinStatusRegister(ESMEPSR)

Figure12-20.ESMERRORPinStatusRegister(ESMEPSR)[offset=FFFFF524h]

31

16

Reserved

R-0

15

1

0

Reserved

EPSF

R-0

R-X/1

LEGEND:R=Readonly;-n=valueafterreset/PORRST;X=Valueunchanged

Table12-12.ESMERRORPinStatusRegister(ESMEPSR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

EPSF

ERRORPinStatusFlag.ProvidesstatusinformationfortheERRORPin.

Read/WriteinUserandPrivilegedmode.

0

Read:ERRORPinislow(active)ifanyerrorhasoccurred.

Write:Writeshavenoeffect.

1

Read:ERRORPinishighifnoerrorhasoccurred.

Write:Writeshavenoeffect.

Note:Thisflagwillbesetto1afterPORRST.ThevaluewillbeunchangedafternRST.The

ERRORpinstatusremainsun-changedduringafternRST.

412

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4.11ESMInterruptOffsetHighRegister(ESMIOFFHR)

Figure12-21.ESMInterruptOffsetHighRegister(ESMIOFFHR)[offset=FFFFF528h]

31

16

Reserved

R-0

15

7

6

0

Reserved

INTOFFH

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table12-13.ESMInterruptOffsetHighRegister(ESMIOFFHR)FieldDescriptions

Bit

Field

Value

Description

31-7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-0

INTOFFH

OffsetHighLevelInterrupt.Thisvectorgivesthechannelnumberofthehighestpending

interruptrequestforthehighlevelinterruptline.InterruptsoferrorGroup2havehigherpriority

thaninterruptsoferrorGroup1.Insideagroup,channel0hashighestpriorityandchannel31

haslowestpriority.

Userandprivilegedmode(read):

Returnsnumberofpendinginterruptwiththehighestpriorityforthehighlevelinterruptline.

0

Nopendinginterrupt.

1h

Interruptpendingforchannel0,errorGroup1.

...

20h

Interruptpendingforchannel31,errorGroup1.

21h

Interruptpendingforchannel0,errorGroup2.

...

40h

Interruptpendingforchannel31,errorGroup2.

41h

Interruptpendingforchannel32,errorGroup1.

...

60h

Interruptpendingforchannel63,errorGroup1.

Note:ReadingtheinterruptvectorwillclearthecorrespondingflagintheESMSR2register;will

notclearESMSR1andESMSSR2andtheoffsetregistergetsupdated.

Userandprivilegedmode(write):

Writeshavenoeffect.

413

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.12ESMInterruptOffsetLowRegister(ESMIOFFLR)

Figure12-22.ESMInterruptOffsetLowRegister(ESMIOFFLR)[offset=FFFFF52Ch]

31

16

Reserved

R-0

15

7

6

0

Reserved

INTOFFL

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table12-14.ESMInterruptOffsetLowRegister(ESMIOFFLR)FieldDescriptions

Bit

Field

Value

Description

31-7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-0

INTOFFL

OffsetLowLevelInterrupt.Thisvectorgivesthechannelnumberofthehighestpending

interruptrequestforthelowlevelinterruptline.Insideagroup,channel0hashighestpriority

andchannel31haslowestpriority.

Userandprivilegedmode(read):

Returnsnumberofpendinginterruptwiththehighestpriorityforthelowlevelinterruptline.

0

Nopendinginterrupt.

1h

Interruptpendingforchannel0,errorGroup1.

...

20h

Interruptpendingforchannel31,errorGroup1.

21h

Interruptpendingforchannel32,errorGroup1.

...

60h

Interruptpendingforchannel63,errorGroup1.

Note:ReadingtheinterruptvectorwillnotclearthecorrespondingflagintheESMSR1register.

Group2interruptsarefixedtothehighlevelinterruptlineonly.

Userandprivilegedmode(write):

Writeshavenoeffect.

414

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4.13ESMLow-TimeCounterRegister(ESMLTCR)

Figure12-23.ESMLow-TimeCounterRegister(ESMLTCR)[offset=FFFFF530h]

31

16

Reserved

R-0

15

0

LTC

R-3FFFh

LEGEND:R=Read;-n=valueafterreset

Table12-15.ESMLow-TimeCounterRegister(ESMLTCR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

LTC

ERRORPinLow-TimeCounter

16bitpre-loadabledown-countertocontrollow-timeofERRORpin.Thelow-timecounteris

triggeredbytheperipheralclock(VCLK).

Note:LowtimecounterissettothedefaultpreloadvalueoftheESMLTCPRinthefollowing

cases:

1.Reset(poweronresetorwarmreset)

2.Anerroroccurs

3.Userforcesanerror

12.4.14ESMLow-TimeCounterPreloadRegister(ESMLTCPR)

Figure12-24.ESMLow-TimeCounterPreloadRegister(ESMLTCPR)[offset=FFFFF534h]

31

16

Reserved

R-0

15

14

13

0

LTCP

LTCP

R/WP-0

R-1

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-16.ESMLow-TimeCounterPreloadRegister(ESMLTCPR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

LTCP

ERRORPinLow-TimeCounterPre-loadValue

16bitpre-loadvaluefortheERRORpinlow-timecounter.

Note:OnlyLTCP.15andLTCP.14areconfigurable(privilegedmodewrite).

415

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.15ESMErrorKeyRegister(ESMEKR)

Figure12-25.ESMErrorKeyRegister(ESMEKR)[offset=FFFFF538h]

31

16

Reserved

R-0

15

4

3

0

Reserved

EKEY

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-17.ESMErrorKeyRegister(ESMEKR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

EKEY

ErrorKey.ThekeytoresettheERRORpinortoforceanerrorontheERRORpin.

Userandprivilegedmode(read):

ReturnscurrentvalueoftheEKEY.

Privilegedmode(write):

0

Activatesnormalmode(recommendeddefaultmode).

Ah

ForceserroronERRORpin.

5h

TheERRORpinsettohighwhenthelowtimecounter(LTC)hascompleted;thentheEKEY

bitwillswitchbacktonormalmode(EKEY=0000)

Allothervalues

Activatesnormalmode.

12.4.16ESMStatusShadowRegister2(ESMSSR2)

ThisregisterisdedicatedforGroup2.

Figure12-26.ESMStatusShadowRegister2(ESMSSR2)[offset=FFFFF53Ch]

31

16

ESF

R/WPC-X/0

15

0

ESF

R/WPC-X/0

LEGEND:R/W=Read/Write;R=Read;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset/PORRST;X=Value

unchanged

Table12-18.ESMStatusShadowRegister2(ESMSSR2)FieldDescriptions

Bit

Field

Value

Description

31-0

ESF

ErrorStatusFlag.Shadowregisterforstatusinformationonpendingerror.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Noerroroccurred.

Write:Leavesthebitunchanged.

1

Read:Erroroccurred.

Write:Clearsthebit.ESMSR2isnotimpactedbythisaction.

Note:Errorsarestoreduntiltheyareclearedbythesoftwareoratpower-onreset(PORRST).

416

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4.17ESMInfluenceERRORPinSet/StatusRegister4(ESMIEPSR4)

ThisregisterisdedicatedforGroup1.

Figure12-27.ESMInfluenceERRORPinSet/StatusRegister4(ESMIEPSR4)[offset=FFFFF540h]

31

16

IEPSET[63:48]

R/WP-0

15

0

IEPSET[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-19.ESMInfluenceERRORPinSet/StatusRegister4(ESMIEPSR4)FieldDescriptions

Bit

Field

Value

Description

63-32

IEPSET

SetInfluenceonERRORPin

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:FailureonchannelxhasnoinfluenceonERRORpin.

Write:LeavesthebitandthecorrespondingclearbitintheESMIEPCR4registerunchanged.

1

Read:FailureonchannelxhasinfluenceonERRORpin.

Write:EnablesfailureinfluenceonERRORpinandsetsthecorrespondingclearbitinthe

ESMIEPCR4register.

12.4.18ESMInfluenceERRORPinClear/StatusRegister4(ESMIEPCR4)

ThisregisterisdedicatedforGroup1.

Figure12-28.ESMInfluenceERRORPinClear/StatusRegister4(ESMIEPCR4)[offset=FFFF

F544h]

31

16

IEPCLR[63:48]

R/WP-0

15

0

IEPCLR[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-20.ESMInfluenceERRORPinClear/StatusRegister4(ESMIEPCR4)FieldDescriptions

Bit

Field

Value

Description

63-32

IEPCLR

ClearInfluenceonERRORPin

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:FailureonchannelxhasnoinfluenceonERRORpin.

Write:LeavesthebitandthecorrespondingclearbitintheESMIEPSR4registerunchanged.

1

Read:FailureonchannelxhasinfluenceonERRORpin.

Write:DisablesfailureinfluenceonERRORpinandclearsthecorrespondingclearbitinthe

ESMIEPSR4register.

417

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.19ESMInterruptEnableSet/StatusRegister4(ESMIESR4)

ThisregisterisdedicatedforGroup1.

Figure12-29.ESMInterruptEnableSet/StatusRegister4(ESMIESR4)[offset=FFFFF548h]

31

16

INTENSET[63:48]

R/WP-0

15

0

INTENSET[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-21.ESMInterruptEnableSet/StatusRegister4(ESMIESR4)FieldDescriptions

Bit

Field

Value

Description

63-32

INTENSET

SetInterruptEnable

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptisdisabled.

Write:LeavesthebitandthecorrespondingclearbitintheESMIECR4registerunchanged.

1

Read:Interruptisenabled.

Write:EnablesinterruptandsetsthecorrespondingclearbitintheESMIECR4register.

12.4.20ESMInterruptEnableClear/StatusRegister4(ESMIECR4)

ThisregisterisdedicatedforGroup1.

Figure12-30.ESMInterruptEnableClear/StatusRegister4(ESMIECR4)[offset=FFFFF54Ch]

31

16

INTENCLR[63:48]

R/WP-0

15

0

INTENCLR[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-22.ESMInterruptEnableClear/StatusRegister4(ESMIECR4)FieldDescriptions

Bit

Field

Value

Description

63-32

INTENCLR

ClearInterruptEnable

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptisdisabled.

Write:LeavesthebitandthecorrespondingclearbitintheESMIESR4registerunchanged.

1

Read:Interruptisenabled.

Write:DisbalesinterruptandclearsthecorrespondingclearbitintheESMIESR4register.

418

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

12.4.21ESMInterruptLevelSet/StatusRegister4(ESMILSR4)

ThisregisterisdedicatedforGroup1.

Figure12-31.ESMInterruptLevelSet/StatusRegister4(ESMILSR4)[offset=FFFFF550h]

31

16

INTLVLSET[63:48]

R/WP-0

15

0

INTLVLSET[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-23.ESMInterruptLevelSet/StatusRegister4(ESMILSR4)FieldDescriptions

Bit

Field

Value

Description

63-32

INTLVLSET

SetInterruptLevel

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Read:Interruptofchannelxismappedtolowlevelinterruptline.

Write:LeavesthebitandthecorrespondingclearbitintheESMILCR4registerunchanged.

1

Read:Interruptofchannelxismappedtohighlevelinterruptline.

Write:Mapsinterruptofchannelxtohighlevelinterruptlineandsetsthecorrespondingclear

bitintheESMILCR4register.

12.4.22ESMInterruptLevelClear/StatusRegister4(ESMILCR4)

ThisregisterisdedicatedforGroup1.

Figure12-32.ESMInterruptLevelClear/StatusRegister4(ESMILCR4)[offset=FFFFF554h]

31

16

INTLVLCLR[63:48]

R/WP-0

15

0

INTLVLCLR[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table12-24.ESMInterruptLevelClear/StatusRegister4(ESMILCR4)FieldDescriptions

Bit

Field

Value

Description

63-32

INTLVLCLR

ClearInterruptLevel

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Interruptofchannelxismappedtolowlevelinterruptline.

Write:LeavesthebitandthecorrespondingsetbitintheESMILSR4registerunchanged.

1

Read:Interruptofchannelxismappedtohighlevelinterruptline.

Write:Mapsinterruptofchannelxtolowlevelinterruptlineandclearsthecorrespondingsetbit

intheESMILSR4register.

419

SPNU499B–November2012–RevisedAugust2013

ErrorSignalingModule(ESM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

12.4.23ESMStatusRegister4(ESMSR4)

ThisregisterisdedicatedforGroup1.

Figure12-33.ESMStatusRegister4(ESMSR4)[offset=FFFFF558h]

31

16

ESF[63:48]

R/WPC-X/0

15

0

ESF[47:32]

R/WPC-X/0

LEGEND:R/W=Read/Write;R=Read;C=Clear;WP=Writeinprivilegedmodeonly;-n=valueafterreset/PORRST;X=Value

unchanged

Table12-25.ESMStatusRegister4(ESMSR4)FieldDescriptions

Bit

Field

Value

Description

63-32

ESF

ErrorStatusFlag.Providesstatusinformationonapendingerror.

ReadinUserandPrivilegedmode.WriteinPrivilegedmodeonly.

0

Read:Noerroroccurred;nointerruptispending.

Write:Leavesthebitunchanged.

1

Read:Erroroccurred;interruptispending.

Write:Clearsthebit.

Note:AfterRST,ifoneoftheseflagsaresetandthecorrespondinginterruptareenabled,the

interruptserviceroutinewillbecalled.

420

ErrorSignalingModule(ESM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter13

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

Thischapterdescribesthefunctionalityofthereal-timeinterrupt(RTI)module.TheRTIisdesignedasan

operatingsystemtimertosupportarealtimeoperatingsystem(RTOS).

NOTE:ThischapterdescribesasupersetimplementationoftheRTImodulethatincludesfeatures

andfunctionalityrelatedtoDMA,FlexRay,andTimbasecontrol.Thesefeaturesare

dependentonthedevice-specificfeaturecontent.Consultyourdevice-specificdatasheetto

determinetheapplicabilityofthesefeaturestoyourdevicebeingused.

Topic...........................................................................................................................Page

13.1Overview........................................................................................................422

13.2ModuleOperation............................................................................................423

13.3ControlRegisters............................................................................................433

421

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

13.1Overview

Thereal-timeinterrupt(RTI)moduleprovidestimerfunctionalityforoperatingsystemsandfor

benchmarkingcode.TheRTImodulecanincorporateseveralcountersthatdefinethetimebasesneeded

forschedulingintheoperatingsystem.

Thetimersalsoallowyoutobenchmarkcertainareasofcodebyreadingthevaluesofthecountersatthe

beginningandtheendofthedesiredcoderangeandcalculatingthedifferencebetweenthevalues.

InadditiontheRTIprovidesamechanismtosynchronizetheoperatingsystemtotheFlexRay

communicationcycle.ClocksupervisionallowsfordetectionofissuesontheFlexRaybuswithan

automaticswitchtoaninternallygeneratedtimebasewhenafailurewiththeFlexRaytimebaseis

detected.

13.1.1Features

TheRTImodulehasthefollowingfeatures:

•Twoindependent64bitcounterblocks

•FourconfigurablecomparesforgeneratingoperatingsystemticksorDMArequests.Eacheventcan

bedrivenbyeithercounterblock0orcounterblock1.

•OnecounterblockusableforapplicationsynchronizationtoFlexRaynetworkincludingclock

supervision

•Fastenabling/disablingofevents

•Twotimestamp(capture)functionsforsystemorperipheralinterrupts,oneforeachcounterblock

•Digitalwindowedwatchdog

13.1.2IndustryStandardComplianceStatement

ThismoduleisspecificallydesignedtofulfilltherequirementsforOSEK(OffeneSystemeundderen

SchnittstellenfürdieElektronikimKraftfahrzeug,orOpenSystemsandtheCorrespondingInterfacesfor

AutomotiveElectronics)aswellasOSEK/time-compliantoperatingsystems,butisnotlimitedtoit.

422

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




fRTIFRCxfRTICLKRTICPUCx + 1----------------------------------------whenRTICPUCx0≠fRTICLK2+132--------------------whenRTICPUCx=0=

{

RTICLKRTICLKFlexRayMacrotick(NTU0)FlexRayStartofCycle(NTU1)

CounterBlock064-bitincl.FlexRayFeatureCounterBlock164-bitEvent0

VIMREQ[2]DMAREQ[12]

Event1

VIMREQ[3]DMAREQ[13]

Event2

VIMREQ[4]DMAREQ[18]

Event3

VIMREQ[5]DMAREQ[19]

32

32

32

32

32

32

CompareUnit

CaptureFeatureCaptureFeatureNTU2NTU3



www.ti.comModuleOperation

13.2ModuleOperation

Figure13-1illustratesthehighlevelblockdiagramoftheRTImodule.

TheRTImodulehastwoindependentcounterblocksforgeneratingdifferenttimebases:counterblock0

andcounterblock1.Thetwocounterblocksprovidethesamebasicfunctionality,butcounterblock0has

theadditionalfunctionalityofbeingabletoworkwiththeFlexRayMacrotick(NTU0)orStartofCycle

(NTU1)andperformclocksupervisiontodetectamissingsignal.

Acompareunitcomparesthecounterswithprogrammablevaluesandgeneratesfourindependent

interruptorDMArequestsoncomparematches.Eachofthecompareregisterscanbeprogrammedtobe

comparedtoeithercounterblock0orcounterblock1.

Thefollowingsectionsdescribetheindividualfunctionsinmoredetail.

Figure13-1.RTIBlockDiagram

13.2.1CounterOperation

Eachcounterblockconsistsofthefollowing(seeFigure13-2):

•One32-bitprescalecounter(RTIUC0orRTIUC1)

•One32-bitfreerunningcounter(RTIFRC0orRTIFRC1)

TheRTIUC0/1isdrivenbytheRTICLKandcountsupuntilthecomparevalueinthecompareupcounter

register(RTICPUC0orRTICPUC1)isreached.Whenthecomparematches,RTIFRC0/1isincremented

andRTIUC0/1isresetto0.IfRTIFRC0/1overflows,aninterruptisgeneratedtothevectoredinterrupt

manager(VIM).Theoverflowinterruptisnotintendedtogeneratethetimebasefortheoperatingsystem.

SeeSection13.2.2forthetimebasegeneration.Theupcountertogetherwiththecompareupcounter

valueprescaletheRTIclock.Theresultingformulaforthefrequencyofthefreerunningcounter

(RTIFRC0/1)is:

(24)

NOTE:SettingRTICPUCxequaltozeroisnotrecommended.DoingsowillholdtheUpCounterat

zerofortwoRTICLKcyclesafteritoverflowsfrom0xFFFFFFFFtozero.

Thecountervaluescanbedeterminedbyreadingtherespectivecounterregistersorbygeneratinga

hardwareeventwhichcapturesthecountervalueintotherespectivecaptureregister.Bothfunctionsare

describedinthefollowingsections.

423

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




310310

RTICLK

310

310

310

CAPeventsource0fromVIM

CAPeventsource1fromVIM

=

OVLINT0

ToCompareUnit

CompareUpCounter

RTICPUC0

UpCounterCaptureUpCounter

RTICAUC0

FreeRunningCounter

RTIFRC0

CaptureFreeRunningCounter

RTICAFRC0

32

32

1

32

1

1

32

32Control

RTICAPCTRL

NTU0NTU1

TimebaseControl

310UpCounterRegister

RTIUC0

310310

RTICLK

310

310

310

=

OVLINT1

ToCompareUnit

CompareUpCounter

RTICPUC1

UpCounterCaptureUpCounter

RTICAUC1

FreeRunningCounter

RTIFRC1

CaptureFreeRunningCounter

RTICAFRC1

32

32

1

32

1

32

32

310UpCounterRegister

RTIUC1

1

CounterBlock0

CounterBlock1

NTU2NTU3



ModuleOperationwww.ti.com

Figure13-2.CounterBlockDiagram

424

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ifRTICPUCy=0,ifRTIUDCPy=0,tCOMPxtRTICLKx (RTICPUCy + 1)x RTIUDCPy=tCOMPxt            xRTICLKx RTIUDCPy=tCOMPxtRTICLKx (RTICPUCy + 1) x232=(2+1)32



www.ti.comModuleOperation

13.2.1.1CounterandCaptureReadConsistency

Portionsofthedeviceinternaldatabusis32-bitswide.Iftheapplicationwantstoreadthe64-bitcounters

orthe64-bitcapturevalues,acertainorderof32-bitreadoperationsneedstobefollowed.Thisisto

preventonecounterincrementinginbetweenthetwoseparatereadoperationstobothcounters.

ReadingtheCounters

Thefreerunningcounter(RTIFRCx)mustbereadfirst.Thisprioritywillensurethatinthecyclewhenthe

CPUreadsRTIFRCx,theupcountervalueisstoredinitscounterregister(RTIUCx).Thesecondreadhas

toaccesstheupcounterregister(RTIUCx),whichthenholdsthevaluewhichcorrespondstothenumber

ofRTICLKcyclesthathaveelapsedatthetimereadingthefreerunningcounterregister(RTIFRCx).

NOTE:Theupcountersareimplementedasshadowregisters.ReadingRTIUCxwithouthaving

readRTIFRCxfirstwillreturnalwaysthesamevalue.RTIUCxwillonlybeupdatedwhen

RTIFRCxisread.

ReadingtheCaptureValues

Thefreerunningcountercaptureregister(RTICAFRCx)mustbereadfirst.Thisprioritywillensurethatin

thecyclewhentheCPUreadsRTICAFRCx,theupcountervalueisstoredinitscounterregister

(RTICAUCx).Thesecondreadhastoaccesstheupcounterregister(RTICAUCx),whichthenholdsthe

valuecapturedatthetimewhenreadingthecapturefreerunningcounterregister(RTICAFRCx).

NOTE:Thecaptureupcounterregistersareimplementedasshadowregisters.ReadingRTICAUCx

withouthavingreadRTICAFRCxfirstwillreturnalwaysthesamevalue.RTICAUCxwillonly

beupdatedwhenRTICAFRCxisread.

13.2.1.2CaptureFeature

Bothcounterblocksalsoprovideacapturefeatureonexternalevents.Twocapturesourcescantrigger

thecaptureevent.Thesourcetriggeringtheblockisconfigurable(RTICAPCTRL).Thesourcesoriginate

fromtheVectoredInterruptManager(VIM)andallowthegenerationofcaptureeventswhenaperipheral

moduleshasgeneratedaninterrupt.Anyoftheperipheralinterruptscanbeselectedasthecaptureevent

intheVIM.

Whenaneventisdetected,RTIUCxandRTIFRCxarestoredinthecaptureupcounter(RTICAUCx)and

capturefreerunningcounter(RTICAFRCx)registers.Thereadorderofthecapturedvaluesmustbethe

sameasthereadorderoftheactualcounters(seeSection13.2.1.1).

13.2.2Interrupt/DMARequests

Therearefourcompareregisters(RTICOMPy)togenerateinterruptrequeststotheVIMorDMArequests

totheDMAcontroller.Theinterruptscanbeusedtogeneratedifferenttimebasesfortheoperating

system.EachofthecompareregisterscanbeconfiguredtobecomparedtoeitherRTIFRC0orRTIFRC1.

Whenthecountervaluematchesthecomparevalue,aninterruptisgenerated.Toallowperiodic

interrupts,acertainvaluecanbeaddedtothecomparevalueinRTICOMPyautomatically.Thisvalueis

storedintheupdatecompareregister(RTIUDCPy)andwillbeaddedafteracompareismatched.The

periodofthegeneratedinterrupt/DMArequestcanbecalculatedwith:

(25)

425

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




+

INTREQy

DMAREQy

=Fromcounterblock0Fromcounterblock1

310UpdateCompare

RTIUDCP0

/

RTIUDCP1RTIUDCP2

/

RTIUDCP3

Compare

RTICOMP0

/

RTICOMP1RTICOMP2

/

RTICOMP3

310

32

Control

RTICOMPCTRL

32

32

1

Enable/Disable

RTISETINTENARTICLEARINTENA

Enable/Disable

RTISETINTENARTICLEARINTENA



ModuleOperationwww.ti.com

Figure13-3.CompareUnitBlockDiagram(showsonly1of4blocksforsimplification)

Anotherinterruptthatcanbegeneratedistheoverflowinterrupt(OVLINTx)incasetheRTIFRCxcounter

overflows.

Theinterrupts/DMArequestscanbeenabledintheRTISETINTENAregisteranddisabledinthe

RTICLEARINTENAregister.TheRTIINTFLAGregistershowsthependinginterrupts.

13.2.3RTIClocking

ThecounterblocksareclockedwithRTICLK(fordefinitionseeSection2.4.2,ClockDomains).Counter

block0canbeclockedinadditionbyeithertheFlexRayMacrotick(NTU0)ortheFlexRayStartofCycle

(NTU1).

AclocksupervisionfortheNTUxclockingschemeisimplementedtoavoidmissingoperatingsystemticks.

13.2.4SynchronizingTimerEventstoNetworkTime(NTU)

Forapplicationswhichareparticipatingonatime-triggeredcommunicationbus,itisoftenbeneficialto

synchronizetheapplicationoroperatingsystemtothenetworktime.TheRTIprovidesafeatureto

incrementFreeRunningCounter0(RTIFRC0)byaperiodicclockprovidedbythecommunicationmodule.

Inthiscasetwodifferentclockscanbechosen.OneistheFlexRaymoduleMacrotick(NTU0)andthe

otheristheStartofCycle(NTU1)informationofthesamemodule.

Theapplicationhascontroloverwhichclock(RTICLK,NTU0,NTU1)shouldbeusedforclocking

RTIFRC0.IfNTUxisused,aclocksupervisioncircuitallowstomonitorthisclockandprovidesafallback

solution,shouldtheclockbenon-functional(missing).AtoofastrunningNTUxcannotbedetected.

RTIUC0isutilizedtomonitortheNTUxsignal.Adetectionwindowcanbeprogrammedinwhichavalid

NTUclockpulseneedstooccur.Ifnopulseisdetected,theRTIautomaticallyswitchesbacktoclockthe

FreeRunningCounter0withRTIUC0.Inordertoavoidabigjitterintheoperatingticks,incaseaswitch

backtoRTIUC0happens,RTICPUC0shouldbesettoavaluesotheclockfrequencyRTIUC0outputsis

approximatelythesameastheNTUxfrequency.

426

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




time

RTICPUC0NTUxRTIUC0

RTITBLCOMPRTITBHCOMP

ActiveEdgeDetection

31                                            0

Timebase≥

NTUedgedetect

≤

TimebaseLowCompare

RTITBLCOMP

RTIUC0

31                                            0TimebaseHighCompare

RTITBHCOMP

Control

RTIGCTRL

Control

RTITBCTRL

NTU0NTU1

RTIFRC0

Control

RTITBCTRL

Incrementby1

Control

RTITBCTRL

Interrupt

TBINT



www.ti.comModuleOperation

Figure13-4.TimebaseControl

13.2.4.1DetectingClockEdges

TodetectclockedgesontheNTUxsignal,thetimebaselowcomparehastobesetlowerorequalthan

thevaluestoredintheRTICPUC0registerandthetimebasehighcomparehastobesethigherthan0

andlowerthanthetimebaselowcomparevalue.Thiseffectivelyopensawindowinwhichanedgeofthe

NTUxsignalisexpected(seeFigure13-5).Outsidethiswindow,noedgeswillbedetected.Ifnoedgewill

occurinsidethedetectionwindow,themultiplexerisswitchedtointernaltimebase.Theapplicationcan

selecttogenerateatimebaseinterrupt(TBINT)andiftheINCbitisset,alsowillautomaticallyincrement

RTIFRC0byonetocompensateforthemissedclockcycleofNTUx.Ifanedgeoccursinsidethewindow,

RTIUC0willberesettosynchronizethetwotimebases.

Inordertomaketheedgedetectionworkproperly,thevalueinRTICPUC0needstobeadaptedsothat

RTIUC0hasasimilarperiodasNTUx.

NOTE:ToensuretheNTUxsignalisproperlydetected,theNTUxperiodmustbeatleasttwiceas

longastheRTICLKperiod.

Figure13-5.ClockDetectionScheme

427

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




time

WriteTBEXT=1

ActiveedgedetectionforoneRTICPUC0+RTITBHCOMP

RTICPUC0NTUxCPUC0mightnotbematcheddependingontheNTUperiod

RTIUC0

toswitchtoext.timbase



ModuleOperationwww.ti.com

13.2.4.2SwitchingfromInternalSourcetoExternalSource

Iftheapplicationswitchesfromaninternalsourcetoanexternalsource,thetwosignalsmustbe

synchronized(seeFigure13-6).ThesynchronizationwilloccurwhentheTBEXTbitisset.RTIUC0willbe

resetandtheedgedetectioncircuitwillbeactiveforone(RTICPUC0+RTITBHCOMP)periodoruntilan

edgeisdetected.Ifthereisnopulseduringthisperiod,thesourcewillberesetfromanexternalclock

sourcetoaninternalclocksource.Ifanedgeisdetected,thewindowededgedetectionbehaviorwilltake

place.SettingtheTBEXTbitwillnotincrementfreerunningcounter0.

NOTE:Ifanexternaltimebaseisused,thenthesoftwaremustensurethattimebaselowcompare

andtimebasehighcompareareprogrammedtoavalidstatebeforeswitchingTBEXTtoan

externalsource.Thisstateisnecessarytoallowthetimebasecontrolcircuittooperate

correctly.Thefollowingconditionmustbemet:

•RTITBHCOMP<RTITBLCOMP£RTICPUC0

RTITBHCOMPmustbelowerthanRTICPUC0becauseRTIUC0willberesetifRTICPUC0is

reached.RTITBHCOMPwillrepresentthenumberofRTICLKcyclesfromRTICPUC0until

thecircuitswitchestotheinternaltimebasewhennoNTUedgeisdetected.

Ifanexternaltimebaseisused,RTIGCTRL[0]mustbesetto1(enableRTIUC0)toensure

thatthetimebasecontrolcircuitdoesnotwaitindefinitelyforanincomingsignal.

Figure13-6showsatimingexampleforthesynchronizationphasewhentheTBEXTbitisset.

Figure13-6.SwitchtoNTUx

13.2.4.3SwitchingfromExternalSourcetoInternalSource

Whentheedgedetectionisactive(TBEXT=1)andnoclockedgeofNTUxisdetectedinsidethe

programmeddetectionwindow,theRTIwillautomaticallyswitchthetimebasetoRTIUC0.Figure13-7

showsatimingexampleforamissingNTUsignal.InthecasewheretheINCbitisset,RTIFRC0will

automaticallybeincrementedbyonetocompensateforthemissedNTUpulse.

SettingTBEXT=0willalsoswitchtheclocksourceforRTIFRC0toRTIUC0.

428

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DWDpreload11                                         0

DWDdowncounter24                                         0

=0

ToRESET

DWDctrl31                                        0

DWDhardwired31                                         0code

=

RTIWDKEY15                                         0

Compare15                                          016bitoutto2

WDFiniteStateMachine

KEY[1:0]DischargeReset

Suspend

logic

RTICLK

nTRST

RTIDWDPRLDRTIDWDCTRLRTIDWDCNTR

time

RTICPUC0NTUx

UC0resetbyNTUedge

UC0resetbyCPUC0

comparematch

switchtointernaltimebase

RTIUC0

missingNTUpulse



www.ti.comModuleOperation

Figure13-7.MissingNTUxSignalExample

13.2.5DigitalWatchdog(DWD)

Thedigitalwatchdog(DWD)isanoptionalsafetydiagnosticwhichcandetectarunawayCPUand

generateeitheraresetorNMI(non-maskableinterrupt)response.ItgeneratesresetsorNMIsaftera

programmableperiod,orifnocorrectkeysequencewaswrittentotheRTIWDKEYregister.Figure13-8

illustratestheDWD.

Figure13-8.DigitalWatchdog

429

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




timeCPU

DWDDownCounteraccessto DWD00x1FFFFFFPreloadRegisterValue left

setDWDPreload

enableDWD

write E51AtoWDKEY

writeA35CtoWDKEY

writeA35CtoWDKEY

write E51AtoWDKEY

Reset/NMIshifted13bits



ModuleOperationwww.ti.com

13.2.5.1DigitalWatchdog(DWD)

TheDWDisdisabledbydefault.Ifitshouldbeused,itmustbeenabledbywritinga32-bitvalue,whichis

theinvertedvalueofthehardwiredcodeinthemodule,totheRTIDWDCTRLregister.

NOTE:OncetheDWDisenabled,itcannotbedisabledexceptbysystemresetorpoweronreset.

IfthecorrectkeysequenceiswrittentotheRTIWDKEYregister(0xE51Afollowedby0xA35C),the25-bit

DWDdowncounterisreloadedwiththeleftjustified12-bitpreloadvaluestoredinRTIDWDPRLD.Ifan

incorrectvalueiswritten,awatchdogresetorNMIwilloccurimmediately.AresetorNMIwillalsobe

generatedwhentheDWDdowncounterisdecrementedto0.

Whilethedeviceisinsuspendmode(haltingdebugmode),theDWDdowncounterkeepsthevalueithad

whenenteringsuspendmode.

TheDWDdowncounterwillbedecrementedwiththeRTICLKfrequency.

Figure13-9.DWDOperation

TheexpirationtimeoftheDWDdowncountercanbedeterminedwiththefollowingequation:

texp=(DWDPRLD+1)×213/RTICLK

where

DWDPRLD=0...4095

NOTE:CareshouldbetakentoensurethattheCPUwritetothewatchdogregisterismadeallowing

timeforthewritetopropagatetotheRTI.

13.2.5.2DigitalWindowedWatchdog(DWWD)

Inadditiontothetime-outboundaryconfigurableviathedigitalwatchdogdiscussedinSection13.2.5.1,

forenhancedsafetymetricsitisdesirabletocheckforawatchdog"pet"withinatimewindowratherthan

usingasingletimethreshold.Thisisenabledbythedigitalwindowedwatchdog(DWWD)feature.

•FunctionalBehavior

TheDWWDopensaconfigurabletimewindowinwhichthewatchdogmustbeserviced.Anyattemptto

servicethewatchdogoutsidethistimewindow,orafailuretoservicethewatchdoginthistimewindow,

willcausethewatchdogtogenerateeitheraresetoraNMItotheCPU.Thisiscontrolledbyconfiguring

theRTIWWDRXNCTRLregister.AswiththeDWD,theDWWDisdisabledafterpoweronreset.Whenthe

DWWDisconfiguredtogenerateanon-maskableinterruptonawindowviolation,thewatchdogcounter

continuestocountdown.TheNMIhandlerneedstoclearthewatchdogviolationstatusflag(s)andthen

430

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




timeCPU

DWDDownCounteraccessto DWD00x1FFFFFFPreloadRegisterValueleft shifted

setDWDPreload

enableDWD

Reset/NMI11bits

ConfigDWDWindow25%

WriteWDKeys

Preload RegisterValueleft shifted13bits

DWDcanNOTbeinthisperiod

served

OpenWindow

openwindow

openwindow

openwindow

op.win

openwindow

openwindow

openwindow

openwindow

openwindow

open window

open windowDWDDownCounter

50%window

openwindow

openwindow

25%window12.5%window

6.25%window

op.win

op.win

ow

3.125%window

ow

ow

100%window



www.ti.comModuleOperation

servicethewatchdogbywritingthecorrectsequenceinthewatchdogkeyregister.Thisservicewillcause

thewatchdogcountertogetreloadedfromthepreloadvalueandstartcountingdown.IftheNMIhandler

doesnotservicethewatchdogintime,itcouldcountdownallthewaytozeroandwraparound.IftheNMI

Handlerdoesnotservicethewatchdogintime,theNMIgetsgeneratedcontinuously,eachtimethe

countercountsto'0'.

TheDWWDusestheDigitalWatchdog(DWD)preloadregister(RTIDWDPRLD)settingtodefinetheend-

timeofthewindow.Thestart-timeofthewindowisdefinedbyawindowsizeconfiguration

register(RTIWWDSIZECTRL).

Thedefaultwindowsizeissetto100%,whichcorrespondstotheDWDfunctionalityofatime-out-only

watchdog.Thewindowsizecanbeselected(throughregisterRTIWWDSIZECTRL)fromamong100%,

50%,25%,12.5%,6.25%and3.125%asshowninFigure13-10.Thewindowwiththerespectivesizewill

beopenedbeforetheendoftheDWDexpiration.Theuserhastoservethewatchdoginthewindow.

Otherwise,aresetorNMIwillgenerate.Figure13-11showsanDWWDoperationexample(25%window).

•ConfigurationofDWWD

TheDWWDpreloadvalue(sameasDWDpreload)canonlybeconfiguredwhentheDWWDcounteris

disabled.Thewindowsizeandwatchdogreactiontoaviolationcanbeconfiguredevenafterthe

watchdoghasbeenenabled.Anychangestothewindowsizeandwatchdogreactionconfigurationswill

onlytakeeffectafterthenextservicingoftheDWWD.Thisfeaturecanbeutilizedtodynamicallyset

windowsofdifferentsizesbasedontaskexecutiontime,addingaprogramsequenceelementtothe

diagnosticwhichcanimprovefaultcoverage.

Figure13-10.DigitalWindowedWatchdogTimingExample

Figure13-11.DigitalWindowedWatchdogOperationExample(25%Window)

431

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

13.2.6LowPowerModes

Lowpowermodesallowthetradeoffofthecurrentusedduringlowpowerversusfunctionalityandfast

wakeupresponse.Alllowpowermodeshavethefollowingcharacteristics:

•CPUandsystemclocksaredisabled.

•Flashbanksandpumpareinsleepmode.

•Allperipheralmodulesareinlowpowermodesandtheclocksaredisabled(exceptionstothismay

occurandwouldbedocumentedinthespecificdevicedatasheet).

Flexibilityinenablinganddisablingclocksallowsformanydifferentlow-powermodes(seeSection2.4.3,

LowPowerModes).

TheoperationoftheRTIModuleisguaranteedinRun,DozeandSnoozemodes.InSleepmode,all

clockswillbeswitchedoffandtheRTIwillnotwork.

InDozeandSnoozemodes,theRTIisactiveandisabletowakeupthedevicewithcompare,timebase

andoverflowinterrupts.Thecompareinterruptscanbeusedtoperiodicallywakeupthedevice.The

overflowinterruptcanbeusedtonotifytheoperatingsystemthatacounteroverflowhasoccured.

CapturingeventsgeneratedbytheVectoredInterruptModule(VIM)isalsopossiblesince,inbothofthese

lowpowermodes,theperipheralmodulesareabletogenerateinterruptsthatcantriggercaptureevents.

CapturingeventswhileinSleepmodeisnotsupportedastheclocktotheRTIisnotactive.

Whenthedeviceisputintolowpowermode,theperipheralwhichisgeneratingtheexternalclockNTUis

nolongeractive,andthetimebasecontrolcircuitryhastoswitchtoaninternalclockingschemewhenit

detectsamissingclockonNTU.Thetimebaseinterruptwillwakeupthedeviceandtheapplication

softwarehastoadapttheperiodicinterruptgenerationtotheinternalclocksource.

DMAtransferswillbedisabled,andDMArequestswillnotbegeneratedafterdevicewakeupsincethe

DMAcontrollerwillbepowereddown.

NOTE:RTICLKinDozeMode

InthespecialcaseofDozeModewithPLLoff,RTICLKmighthaveadifferentperiodthan

withPLLenabledsinceRTICLKwillbederivedfromtheoscillatoroutput.Ithastobe

ensuredthattheVCLKtoRTICLKratioisatleast3:1.

13.2.7HaltingDebugModeBehaviour

Oncethesystementershaltingdebugmode,thebehavioroftheRTIdependsontheCOS(continueon

suspend)bit.Ifthebitisclearedandhaltingdebugmodeisactive,allcounterswillstopoperation.Ifthe

bitissettoone,allcounterswillbeclockednormallyandtheRTIwillworklikeinnormalmode.However,

iftheexternaltimebase(NTU)isusedandthesystemisinhaltingdebugmode,thetimebasecontrol

circuitwillswitchtointernaltimebaseonceitdetectsthemissingNTUsignalofthesuspended

communicationcontroller.ThiswillbesignaledwithanTBINTinterruptsothatsoftwarecanresynchronize

afterthedeviceexitshaltingdebugmode.

432

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3ControlRegisters

Table13-1providesasummaryoftheregisters.Theregisterssupport8-bit,16-bit,and32-bitwrites.The

offsetisrelativetotheassociatedperipheralselect.Seethefollowingsectionsfordetaileddescriptionsof

theregisters.ThebaseaddressforthecontrolregistersisFFFFFC00h.Theaddresslocationsnotlisted

arereserved.

Table13-1.RTIRegisters

Offset

Acronym

RegisterDescription

Section

00

RTIGCTRL

RTIGlobalControlRegister

Section13.3.1

04h

RTITBCTRL

RTITimebaseControlRegister

Section13.3.2

08h

RTICAPCTRL

RTICaptureControlRegister

Section13.3.3

0Ch

RTICOMPCTRL

RTICompareControlRegister

Section13.3.4

10h

RTIFRC0

RTIFreeRunningCounter0Register

Section13.3.5

14h

RTIUC0

RTIUpCounter0Register

Section13.3.6

18h

RTICPUC0

RTICompareUpCounter0Register

Section13.3.7

20h

RTICAFRC0

RTICaptureFreeRunningCounter0Register

Section13.3.8

24h

RTICAUC0

RTICaptureUpCounter0Register

Section13.3.9

30h

RTIFRC1

RTIFreeRunningCounter1Register

Section13.3.10

34h

RTIUC1

RTIUpCounter1Register

Section13.3.11

38h

RTICPUC1

RTICompareUpCounter1Register

Section13.3.12

40h

RTICAFRC1

RTICaptureFreeRunningCounter1Register

Section13.3.13

44h

RTICAUC1

RTICaptureUpCounter1Register

Section13.3.14

50h

RTICOMP0

RTICompare0Register

Section13.3.15

54h

RTIUDCP0

RTIUpdateCompare0Register

Section13.3.16

58h

RTICOMP1

RTICompare1Register

Section13.3.17

5Ch

RTIUDCP1

RTIUpdateCompare1Register

Section13.3.18

60h

RTICOMP2

RTICompare2Register

Section13.3.19

64h

RTIUDCP2

RTIUpdateCompare2Register

Section13.3.20

68h

RTICOMP3

RTICompare3Register

Section13.3.21

6Ch

RTIUDCP3

RTIUpdateCompare3Register

Section13.3.22

70h

RTITBLCOMP

RTITimebaseLowCompareRegister

Section13.3.23

74h

RTITBHCOMP

RTITimebaseHighCompareRegister

Section13.3.24

80h

RTISETINTENA

RTISetInterruptEnableRegister

Section13.3.25

84h

RTICLEARINTENA

RTIClearInterruptEnableRegister

Section13.3.26

88h

RTIINTFLAG

RTIInterruptFlagRegister

Section13.3.27

90h

RTIDWDCTRL

DigitalWatchdogControlRegister

Section13.3.28

94h

RTIDWDPRLD

DigitalWatchdogPreloadRegister

Section13.3.29

98h

RTIWDSTATUS

WatchdogStatusRegister

Section13.3.30

9Ch

RTIWDKEY

RTIWatchdogKeyRegister

Section13.3.31

A0h

RTIDWDCNTR

RTIDigitalWatchdogDownCounterRegister

Section13.3.32

A4h

RTIWWDRXNCTRL

DigitalWindowedWatchdogReactionControlRegister

Section13.3.33

A8h

RTIWWDSIZECTRL

DigitalWindowedWatchdogWindowSizeControlRegister

Section13.3.34

ACh

RTIINTCLRENABLE

RTICompareInterruptClearEnableRegister

Section13.3.35

B0h

RTICOMP0CLR

RTICompare0ClearRegister

Section13.3.36

B4h

RTICOMP1CLR

RTICompare1ClearRegister

Section13.3.37

B8h

RTICOMP2CLR

RTICompare2ClearRegister

Section13.3.38

BCh

RTICOMP3CLR

RTICompare3ClearRegister

Section13.3.39

433

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

NOTE:WritestoReservedregistersmayclearthependingRTIinterrupt.

13.3.1RTIGlobalControlRegister(RTIGCTRL)

Theglobalcontrolregisterstarts/stopsthecountersandselectsthesignalcomparedwiththetimebase

controlcircuit.ThisregisterisshowninFigure13-12anddescribedinTable13-2.

Figure13-12.RTIGlobalControlRegister(RTIGCTRL)[offset=00]

31

20

19

16

Reserved

NTUSEL

R-0

R/WP-0

15

14

2

1

0

COS

Reserved

CNT1EN

CNT0EN

R/WP-0

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-2.RTIGlobalControlRegister(RTIGCTRL)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readsreturn0.Writeshavenoeffect.

19-16

NTUSEL

SelectNTUsignal.ThesebitsdeterminewhichNTUinputsignalisusedasexternaltimebase

0h

NTU0

5h

NTU1

Ah

NTU2

Fh

NTU3

Allother

Tiedto0

values

15

COS

Continueonsuspend.Thisbitdeterminesifbothcountersarestoppedwhenthedevicegoesinto

haltingdebugmodeoriftheycontinuecounting.

0

Countersarestoppedwhileinhaltingdebugmode.

1

Countersarerunningwhileinhaltingdebugmode.

14-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1

CNT1EN

Counter1enable.Thisbitstartsandstopscounterblock1(RTIUC1andRTIFRC1).

0

Counterblock1isstopped.

1

Counterblock1isrunning.

0

CNT0EN

Counter0enable.Thisbitstartsandstopscounterblock0(RTIUC0andRTIFRC0).

0

Counterblock0isstopped.

1

Counterblock0isrunning.

NOTE:Iftheapplicationusesthetimebasecircuitforsynchronizationbetweenthecommunications

controllerandtheoperatingsystemandthedeviceentershaltingdebugmode,the

synchronizationmaybelostdependingontheCOSsettingintheRTImoduleandthehalting

debugmodebehaviorofthecommunicationscontroller.

434

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.2RTITimebaseControlRegister(RTITBCTRL)

Thetimebasecontrolregisterselectsifthefreerunningcounter0isincrementedbyRTICLKorNTU.This

registerisshowninFigure13-13anddescribedinTable13-3.

Figure13-13.RTITimebaseControlRegister(RTITBCTRL)[offset=04h]

31

8

Reserved

R-0

7

2

1

0

Reserved

INC

TBEXT

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-3.RTITimebaseControlRegister(RTITBCTRL)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1

INC

Incrementfreerunningcounter0.Thisbitdetermineswhetherthefreerunningcounter0(RTIFRC0)is

automaticallyincrementedifafailingclockontheNTUsignalisdetected.

0

RTIFRC0willnotbeincrementedonafailingexternalclock.

1

RTIFRC0willbeincrementedonafailingexternalclock.

0

TBEXT

Timebaseexternal.Thisbitselectswhetherthefreerunningcounter0(RTIFRC0)isclockedbythe

internalupcounter0(RTIUC0)orfromtheexternalsignalNTU.SettingtheTBEXTbitfrom0to1will

notincrementRTIFRC0,sinceRTIUC0isreset.

Whenthetimebasesupervisorcircuitdetectsamissingclockedge,thentheTBEXTbitisreset.

Onlythesoftwarecanselectwhethertheexternalsignalshouldbeused.

0

RTIUC0clocksRTIFRC0.

1

NTUclocksRTIFRC0.

435

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.3RTICaptureControlRegister(RTICAPCTRL)

Thecapturecontrolregistercontrolsthecapturesourceforthecounters.Thisregisterisshownin

Figure13-14anddescribedinTable13-4.

Figure13-14.RTICaptureControlRegister(RTICAPCTRL)[offset=08h]

31

8

Reserved

R-0

7

2

1

0

Reserved

CAPCNTR1

CAPCNTR0

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-4.RTICaptureControlRegister(RTICAPCTRL)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1

CAPCNTR1

Capturecounter1.Thisbitdetermineswhichexternalinterruptsourcetriggersacaptureeventof

RTIUC1andRTIFRC1.

0

CaptureofRTIUC1/RTIFRC1istriggeredbycaptureeventsource0.

1

CaptureofRTIUC1/RTIFRC1istriggeredbycaptureeventsource1.

0

CAPCNTR0

Capturecounter0.Thisbitdetermineswhichexternalinterruptsourcetriggersacaptureeventof

RTIUC0andRTIFRC0.

0

CaptureofRTIUC0/RTIFRC0istriggeredbycaptureeventsource0.

1

CaptureofRTIUC0/RTIFRC0istriggeredbycaptureeventsource1.

436

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.4RTICompareControlRegister(RTICOMPCTRL)

Thecomparecontrolregistercontrolsthesourceforthecompareregisters.Thisregisterisshownin

Figure13-15anddescribedinTable13-5.

Figure13-15.RTICompareControlRegister(RTICOMPCTRL)[offset=0Ch]

31

16

Reserved

R-0

15

13

12

11

9

8

Reserved

COMPSEL3

Reserved

COMPSEL2

R-0

R/WP-0

R-0

R/WP-0

7

5

4

3

1

0

Reserved

COMPSEL1

Reserved

COMPSEL0

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-5.RTICompareControlRegister(RTICOMPCTRL)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readsreturn0.Writeshavenoeffect.

12

COMPSEL3

Compareselect3.Thisbitdeterminesthecounterwithwhichthecomparevalueheldincompare

register3(RTICOMP3)iscompared.

0

ValuewillbecomparedwithRTIFRC0.

1

ValuewillbecomparedwithRTIFRC1.

11-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8

COMPSEL2

Compareselect2.Thisbitdeterminesthecounterwithwhichthecomparevalueheldincompare

register2(RTICOMP2)iscompared.

0

ValuewillbecomparedwithRTIFRC0.

1

ValuewillbecomparedwithRTIFRC1.

7-5

Reserved

0

Readsreturn0.Writeshavenoeffect.

4

COMPSEL1

Compareselect1.Thisbitdeterminesthecounterwithwhichthecomparevalueheldincompare

register1(RTICOMP1)iscompared.

0

ValuewillbecomparedwithRTIFRC0.

1

ValuewillbecomparedwithRTIFRC1.

3-1

Reserved

0

Readsreturn0.Writeshavenoeffect.

0

COMPSEL0

Compareselect0.Thisbitdeterminesthecounterwithwhichthecomparevalueheldincompare

register0(RTICOMP0)iscompared.

0

ValuewillbecomparedwithRTIFRC0.

1

ValuewillbecomparedwithRTIFRC1.

437

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.5RTIFreeRunningCounter0Register(RTIFRC0)

Thefreerunningcounter0registerholdsthecurrentvalueoffreerunningcounter0.Thisregisteris

showninFigure13-16anddescribedinTable13-6.

Figure13-16.RTIFreeRunningCounter0Register(RTIFRC0)[offset=10h]

31

16

FRC0

R/WP-0

15

0

FRC0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-6.RTIFreeRunningCounter0Register(RTIFRC0)FieldDescriptions

Bit

Field

Value

Description

31-0

FRC0

0-FFFFFFFFh

Freerunningcounter0.Thisregistersholdsthecurrentvalueofthefreerunningcounter0.

Areadofthiscounterreturnsthecurrentvalueofthecounter.

Thecountercanbepresetbywriting(inprivilegedmodeonly)tothisregister.Thecounter

incrementsthenfromthiswrittenvalueupwards.

Note:Ifcountersmustbepreset,theymustbedisabledintheRTIGCTRLregisterto

ensureconsistencybetweenRTIUC0andRTIFRC0.

13.3.6RTIUpCounter0Register(RTIUC0)

Theupcounter0registerholdsthecurrentvalueofprescalecounter.ThisregisterisshowninFigure13-

17anddescribedinTable13-7.

Figure13-17.RTIUpCounter0Register(RTIUC0)[offset=14h]

31

16

UC0

R/WP-0

15

0

UC0

R/WP-0

LLEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-7.RTIUpCounter0Register(RTIUC0)FieldDescriptions

Bit

Field

Value

Description

31-0

UC0

0-FFFFFFFFh

Upcounter0.Thisregisterholdsthecurrentvalueoftheupcounter0andprescalestheRTI

clock.Itwillbeonlyupdatedbyapreviousreadoffreerunningcounter0(RTIFRC0).This

methodofupdatingeffectivelygivesa64-bitreadofbothcounters,withouthavingtheproblem

ofacounterbeingupdatedbetweentwoconsecutivereadsonupcounter0(RTIUC0)andfree

runningcounter0(RTIFRC0).

AreadofthiscounterreturnsthevalueofthecounteratthetimeRTIFRC0wasread.

Awritetothiscounterpresetsitwithavalue.Thecounterthenincrementsfromthiswritten

valueupwards.

Note:Ifcountersmustbepreset,theymustbedisabledintheRTIGCTRLregistertoensure

consistencybetweenRTIUC0andRTIFRC0.

Note:IfthepresetvalueisbiggerthanthecomparevaluestoredinregisterRTICPUC0,

thenitcantakealongtimeuntilacomparematches,sinceRTIUC0hastocountupuntil

itoverflows.

438

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.7RTICompareUpCounter0Register(RTICPUC0)

Thecompareupcounter0registerholdsthevaluetobecomparedwithprescalecounter0(RTIUC0).

ThisregisterisshowninFigure13-18anddescribedinTable13-8.

Figure13-18.RTICompareUpCounter0Register(RTICPUC0)[offset=18h]

31

16

CPUC0

R/W-0

15

0

CPUC0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table13-8.RTICompareUpCounter0Register(RTICPUC0)FieldDescriptions

Bit

Field

Value

Description

31-0

CPUC0

0-FFFFFFFFh

Compareupcounter0.Thisregisterholdsthevaluethatiscomparedwiththeupcounter0.

Whenthecompareshowsamatch,thefreerunningcounter0(RTIFRC0)isincremented.

RTIUC0issetto0whenthecountervaluematchestheRTICPUC0value.Thevaluesetinthis

registerprescalestheRTIclock.

IfCPUC0=0,then

fFRC0=RTICLK/(232+1)(Notrecommended.SeenoteonEquation24)

IfCPUC0≠0,then

fFRC0=RTICLK/(RTICPUC0+1)

Areadofthisregisterreturnsthecurrentcomparevalue.

Awritetothisregister:

•IfTBEXT=0,thecomparevalueisupdated.

•IfTBEXT=1,thecomparevalueisunchanged.

13.3.8RTICaptureFreeRunningCounter0Register(RTICAFRC0)

Thecapturefreerunningcounter0registerholdsthefreerunningcounter0onexternalevents.This

registerisshowninFigure13-19anddescribedinTable13-9.

Figure13-19.RTICaptureFreeRunningCounter0Register(RTICAFRC0)[offset=20h]

31

16

CAFRC0

R-0

15

0

CAFRC0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table13-9.RTICaptureFreeRunningCounter0Register(RTICAFRC0)FieldDescriptions

Bit

Field

Value

Description

31-0

CAFRC0

0-FFFFFFFFh

Capturefreerunningcounter0.Thisregistercapturesthecurrentvalueofthefreerunning

counter0(RTIFRC0)whenaneventoccurs,controlledbytheexternalcapturecontrolblock.

AreadofthisregisterreturnsthevalueofRTIFRC0onacaptureevent.

439

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.9RTICaptureUpCounter0Register(RTICAUC0)

Thecaptureupcounter0registerholdsthecurrentvalueofprescalecounter0onexternalevents.This

registerisshowninFigure13-20anddescribedinTable13-10.

Figure13-20.RTICaptureUpCounter0Register(RTICAUC0)[offset=24]

31

16

CAUC0

R-0

15

0

CAUC0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table13-10.RTICaptureUpCounter0Register(RTICAUC0)FieldDescriptions

Bit

Field

Value

Description

31-0

CAUC0

0-FFFFFFFFh

Captureupcounter0.Thisregistercapturesthecurrentvalueoftheupcounter0(RTIUC0)

whenaneventoccurs,controlledbytheexternalcapturecontrolblock.

Note:ThereadsequencemustbethesameaswithRTIUC0andRTIFRC0.Therefore,the

RTICAFRC0registermustbereadbeforetheRTICAUC0registerisread.Thissequence

ensuresthatthevalueoftheRTICAUC0registeristhecorrespondingvaluetothe

RTICAFRC0register,evenifanothercaptureeventhappensinbetweenthetworeads.

AreadofthisregisterreturnsthevalueofRTIUC0onacaptureevent.

13.3.10RTIFreeRunningCounter1Register(RTIFRC1)

Thefreerunningcounter1registerholdsthecurrentvalueofthefreerunningcounter1.Thisregisteris

showninFigure13-21anddescribedinTable13-11.

Figure13-21.RTIFreeRunningCounter1Register(RTIFRC1)[offset=30h]

31

16

FRC1

R/WP-0

15

0

FRC1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-11.RTIFreeRunningCounter1Register(RTIFRC1)FieldDescriptions

Bit

Field

Value

Description

31-0

FRC1

0-FFFFFFFFh

Freerunningcounter1.Thisregisterholdsthecurrentvalueofthefreerunningcounter1and

willbeupdatedcontinuously.

Areadofthisregisterreturnsthecurrentvalueofthecounter.

Awritetothisregisterpresetsthecounter.Thecounterincrementsthenfromthiswrittenvalue

upwards.

Note:Ifcountersmustbepreset,theymustbedisabledintheRTIGCTRLregisterto

ensureconsistencybetweenRTIUC1andRTIFRC1.

440

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.11RTIUpCounter1Register(RTIUC1)

Theupcounter1registerholdsthecurrentvalueoftheprescalecounter1.Thisregisterisshownin

Figure13-22anddescribedinTable13-12.

Figure13-22.RTIUpCounter1Register(RTIUC1)[offset=34h]

31

16

UC1

R/WP-0

15

0

UC1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-12.RTIUpCounter1Register(RTIUC1)FieldDescriptions

Bit

Field

Value

Description

31-0

UC1

0-FFFFFFFFh

Upcounter1.Thisregisterholdsthecurrentvalueoftheupcounter1andprescalestheRTI

clock.Itwillbeonlyupdatedbyapreviousreadoffreerunningcounter1(RTIFRC1).This

methodofupdatingeffectivelygivesa64-bitreadofbothcounters,withouthavingtheproblem

ofacounterbeingupdatedbetweentwoconsecutivereadsonRTIUC1andRTIFRC1.

AreadofthisregisterwillreturnthevalueofthecounterwhentheRTIFRC1wasread.

Awritetothisregisterpresetsthecounter.Thecounterthenincrementsfromthiswrittenvalue

upwards.

Note:Ifcountersmustbepreset,theymustbedisabledintheRTIGCTRLregisterto

ensureconsistencybetweenRTIUC1andRTIFRC1.

Note:IfthepresetvalueisbiggerthanthecomparevaluestoredinregisterRTICPUC1,

thenitcantakealongtimeuntilacomparematches,sinceRTIUC1hastocountupuntil

itoverflows.

13.3.12RTICompareUpCounter1Register(RTICPUC1)

Thecompareupcounter1registerholdsthevaluecomparedwithprescalecounter1.Thisregisteris

showninFigure13-23anddescribedinTable13-13.

Figure13-23.RTICompareUpCounter1Register(RTICPUC1)[offset=38h]

31

16

CPUC1

R/WP-0

15

0

CPUC1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

441

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table13-13.RTICompareUpCounter1Register(RTICPUC1)FieldDescriptions

Bit

Field

Value

Description

31-0

CPUC1

0-FFFFFFFFh

Compareupcounter1.Thisregisterholdsthecomparevalue,whichiscomparedwiththeup

counter1.Whenthecomparematches,thefreerunningcounter1(RTIFRC1)isincremented.

TheupcounterisclearedtozerowhenthecountervaluematchestheCPUC1value.Thevalue

setinthisprescalestheRTIclockaccordingtothefollowingformula:

IfCPUC1=0,then

fFRC0=RTICLK/(232+1)(Notrecommended.SeenoteonEquation24)

IfCPUC1≠0,then

fFRC1=RTICLK/(RTICPUC1+1)

Areadofthisregisterreturnsthecurrentcomparevalue.

Awritetothisregisterupdatesthecomparevalue.

442

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.13RTICaptureFreeRunningCounter1Register(RTICAFRC1)

Thecapturefreerunningcounter1registerholdsthecurrentvalueoffreerunningcounter1onexternal

events.ThisregisterisshowninFigure13-24anddescribedinTable13-14.

Figure13-24.RTICaptureFreeRunningCounter1Register(RTICAFRC1)[offset=40h]

31

16

CAFRC1

R-0

15

0

CAFRC1

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table13-14.RTICaptureFreeRunningCounter1Register(RTICAFRC1)FieldDescriptions

Bit

Field

Value

Description

31-0

CAFRC1

0-FFFFFFFFh

Capturefreerunningcounter1.Thisregistercapturesthecurrentvalueofthefreerunning

counter1(RTIFRC1)whenaneventoccurs,controlledbytheexternalcapturecontrolblock.

AreadofthisregisterreturnsthevalueofRTIFRC1onacaptureevent.

13.3.14RTICaptureUpCounter1Register(RTICAUC1)

Thecaptureupcounter1registerholdsthecurrentvalueofprescalecounter1onexternalevents.This

registerisshowninFigure13-25anddescribedinTable13-15.

Figure13-25.RTICaptureUpCounter1Register(RTICAUC1)[offset=44h]

31

16

CAUC1

R-0

15

0

CAUC1

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table13-15.RTICaptureUpCounter1Register(RTICAUC1)FieldDescriptions

Bit

Field

Value

Description

31-0

CAUC1

0-FFFFFFFFh

Captureupcounter1.Thisregistercapturesthecurrentvalueoftheupcounter1(RTIUC1)

whenaneventoccurs,controlledbytheexternalcapturecontrolblock.

Note:TheRTICAFRC1registermustbereadbeforetheRTICAUC1registerisread.This

sequenceensuresthatthevalueoftheRTICAUC1registeristhecorrespondingvalueto

theRTICAFRC1register,evenifanothercaptureeventhappensinbetweenthetwo

reads.

AreadofthisregisterreturnsthevalueofRTIUC1onacaptureevent.

443

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.15RTICompare0Register(RTICOMP0)

Thecompare0registerholdsthevaluetobecomparedwiththecounters.Thisregisterisshownin

Figure13-26anddescribedinTable13-16.

Figure13-26.RTICompare0Register(RTICOMP0)[offset=50h]

31

16

COMP0

R/WP-0

15

0

COMP0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-16.RTICompare0Register(RTICOMP0)FieldDescriptions

Bit

Field

Value

Description

31-0

COMP0

0-FFFFFFFFh

Compare0.Thisregistersholdsavaluethatiscomparedwiththecounterselectedinthe

comparecontrollogic.IfRTIFRC0orRTIFRC1,dependingonthecounterselected,matches

thecomparevalue,aninterruptisflagged.WiththisregisteritisalsopossibletoinitiateaDMA

request.

Areadofthisregisterwillreturnthecurrentcomparevalue.

Awritetothisregister(inprivilegedmodeonly)willupdatethecompareregisterwithanew

comparevalue.

13.3.16RTIUpdateCompare0Register(RTIUDCP0)

Theupdatecompare0registerholdsthevaluetobeaddedtothecompareregister0valueonacompare

match.ThisregisterisshowninFigure13-27anddescribedinTable13-17.

Figure13-27.RTIUpdateCompare0Register(RTIUDCP0)[offset=54h]

31

16

UDCP0

R/WP-0

15

0

UDCP0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-17.RTIUpdateCompare0Register(RTIUDCP0)FieldDescriptions

Bit

Field

Value

Description

31-0

UDCP0

0-FFFFFFFFh

Updatecompare0.Thisregisterholdsavaluethatisaddedtothevalueinthecompare0

(RTICOMP0)registereachtimeacomparematches.Thisfunctionallowsperiodicinterruptsto

begeneratedwithoutsoftwareintervention.

AreadofthisregisterwillreturnthevaluetobeaddedtotheRTICOMP0registeronthenext

comparematch.

Awritetothisregisterwillprovideanewupdatevalue.

444

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.17RTICompare1Register(RTICOMP1)

Thecompare1registerholdsthevaluetobecomparedtothecounters.Thisregisterisshownin

Figure13-28anddescribedinTable13-18.

Figure13-28.RTICompare1Register(RTICOMP1)[offset=58h]

31

16

COMP1

R/WP-0

15

0

COMP1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-18.RTICompare1Register(RTICOMP1)FieldDescriptions

Bit

Field

Value

Description

31-0

COMP1

0-FFFFFFFFh

Compare1.Thisregisterholdsavaluethatiscomparedwiththecounterselectedinthe

comparecontrollogic.IfRTIFRC0orRTIFRC1,dependingonthecounterselected,matches

thiscomparevalue,aninterruptisflagged.Withthisregister,itispossibletoinitiateaDMA

request.

Areadofthisregisterwillreturnthecurrentcomparevalue.

Awritetothisregisterwillupdatethecompareregisterwithanewcomparevalue.

13.3.18RTIUpdateCompare1Register(RTIUDCP1)

Theupdatecompare1registerholdsthevaluetobeaddedtothecompareregister1valueonacompare

match.ThisregisterisshowninFigure13-29anddescribedinTable13-19.

Figure13-29.RTIUpdateCompare1Register(RTIUDCP1)[offset=5Ch]

31

16

UDCP1

R/WP-0

15

0

UDCP1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-19.RTIUpdateCompare1Register(RTIUDCP1)FieldDescriptions

Bit

Field

Value

Description

31-0

UDCP1

0-FFFFFFFFh

Updatecompare1.ThisregisterholdsavaluethatisaddedtothevalueintheRTICOMP1

registereachtimeacomparematches.Thisprocessallowsperiodicinterruptstobegenerated

withoutsoftwareintervention.

AreadofthisregisterwillreturnthevaluetobeaddedtotheRTICOMP1registeronthenext

comparematch..

Awritetothisregisterwillprovideanewupdatevalue

445

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.19RTICompare2Register(RTICOMP2)

Thecompare2registerholdsthevaluetobecomparedtothecounters.Thisregisterisshownin

Figure13-30anddescribedinTable13-20.

Figure13-30.RTICompare2Register(RTICOMP2)[offset=60h]

31

16

COMP2

R/WP-0

15

0

COMP2

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-20.RTICompare2Register(RTICOMP2)FieldDescriptions

Bit

Field

Value

Description

31-0

COMP2

0-FFFFFFFFh

Compare2.Thisregisterholdsavaluethatiscomparedwiththecounterselectedinthe

comparecontrollogic.IfRTIFRC0orRTIFRC1,dependingonthecounterselected,matches

thiscomparevalue,aninterruptisflagged.Withthisregister,itispossibletoinitiateaDMA

request.

Areadofthisregisterwillreturnthecurrentcomparevalue.

Awritetothisregister(inprivilegedmodeonly)willprovideanewcomparevalue.

13.3.20RTIUpdateCompare2Register(RTIUDCP2)

Theupdatecompare2registerholdsthevaluetobeaddedtothecompareregister2valueonacompare

match.ThisregisterisshowninFigure13-31anddescribedinTable13-21.

Figure13-31.RTIUpdateCompare2Register(RTIUDCP2)[offset=64h]

31

16

UDCP2

R/WP-0

15

0

UDCP2

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-21.RTIUpdateCompare2Register(RTIUDCP2)FieldDescriptions

Bit

Field

Value

Description

31-0

UDCP2

0-FFFFFFFFh

Updatecompare2.ThisregisterholdsavaluethatisaddedtothevalueintheRTICOMP2

registereachtimeacomparematches.Thisprocessmakesitpossibletogenerateperiodic

interruptswithoutsoftwareintervention.

AreadofthisregisterwillreturnthevaluetobeaddedtotheRTICOMP2registeronthenext

comparematch.

Awritetothisregisterwillprovideanewupdatevalue.

446

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.21RTICompare3Register(RTICOMP3)

Thecompare3registerholdsthevaluetobecomparedtothecounters.Thisregisterisshownin

Figure13-32anddescribedinTable13-22.

Figure13-32.RTICompare3Register(RTICOMP3)[offset=68h]

31

16

COMP3

R/WP-0

15

0

COMP3

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-22.RTICompare3Register(RTICOMP3)FieldDescriptions

Bit

Field

Value

Description

31-0

COMP3

0-FFFFFFFFh

Compare3.Thisregisterholdsavaluethatiscomparedwiththecounterselectedinthe

comparecontrollogic.IfRTIFRC0orRTIFRC1,dependingonthecounterselected,matches

thiscomparevalue,aninterruptisflagged.Withthisregister,itispossibletoinitiateaDMA

request.

Areadofthisregisterwillreturnthecurrentcomparevalue.

Awritetothisregisterwillprovideanewcomparevalue.

13.3.22RTIUpdateCompare3Register(RTIUDCP3)

Theupdatecompare3registerholdsthevaluetobeaddedtothecompareregister3valueonacompare

match.ThisregisterisshowninFigure13-33anddescribedinTable13-23.

Figure13-33.RTIUpdateCompare3Register(RTIUDCP3)[offset=6Ch]

31

16

UDCP3

R/WP-0

15

0

UDCP3

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-23.RTIUpdateCompare3Register(RTIUDCP3)FieldDescriptions

Bit

Field

Value

Description

31-0

UDCP3

0-FFFFFFFFh

Updatecompare3.ThisregisterholdsavaluethatisaddedtothevalueintheRTICOMP3

registereachtimeacomparematches.Thisprocessmakesitpossibletogenerateperiodic

interruptswithoutsoftwareintervention.

AreadofthisregisterwillreturnthevaluetobeaddedtotheRTICOMP3registeronthenext

comparematch.

Awritetothisregisterwillprovideanewupdatevalue.

447

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.23RTITimebaseLowCompareRegister(RTITBLCOMP)

Thetimebaselowcompareregisterholdsthevaluetoactivatetheedgedetectioncircuit.Thisregisteris

showninFigure13-34anddescribedinTable13-24.

Figure13-34.RTITimebaseLowCompareRegister(RTITBLCOMP)[offset=70h]

31

16

TBLCOMP

R/WP-0

15

0

TBLCOMP

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-24.RTITimebaseLowCompareRegister(RTITBLCOMP)FieldDescriptions

Bit

Field

Value

Description

31-0

TBLCOMP

0-FFFFFFFFh

Timebaselowcomparevalue.Thisvaluedetermineswhentheedgedetectioncircuitstarts

monitoringtheNTUsignal.ItwillbecomparedwithRTIUC0.

Areadofthisregisterwillreturnthecurrentcomparevalue.

Awritetothisregisterhasthefollowingeffects:

IfTBEXT=0:Thecomparevalueisupdated.

IfTBEXT=1:Thecomparevalueisnotchanged.

13.3.24RTITimebaseHighCompareRegister(RTITBHCOMP)

Thetimebasehighcompareregisterholdsthevaluetodeactivatetheedgedetectioncircuit.Thisregister

isshowninFigure13-35anddescribedinTable13-25.

Figure13-35.RTITimebaseHighCompareRegister(RTITBHCOMP)[offset=74h]

31

16

TBHCOMP

R/WP-0

15

0

TBHCOMP

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-25.RTITimebaseHighCompareRegister(RTITBHCOMP)FieldDescriptions

Bit

Field

Value

Description

31-0

TBHCOMP

0-FFFFFFFFh

Timebasehighcomparevalue.Thisvaluedetermineswhentheedgedetectioncircuitwillstop

monitoringtheNTUsignal.ItwillbecomparedwithRTIUC0.

RTITBHCOMPmustbelessthanRTICPUC0becauseRTIUC0willberesetwhenRTICPUC0

isreached.

Example:TheNTUedgedetectioncircuitshouldbeactive±10RTICLKcyclesaround

RTICPUC0.

•RTICPUC0=0050h

•RTITBLCOMP=0046h

•RTITBHCOMP=0009h

Areadofthisregisterwillreturnthecurrentcomparevalue.

Awritetothisregisterhasthefollowingeffects:

IfTBEXT=0:Thecomparevalueisupdated.

IfTBEXT=1:Thecomparevalueisnotchanged.

448

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.25RTISetInterruptEnableRegister(RTISETINTENA)

Thisregisterpreventsthenecessityofaread-modify-writeoperationifaparticularinterruptshouldbe

enabled.ThisregisterisshowninFigure13-36anddescribedinTable13-26.

Figure13-36.RTISetInterruptControlRegister(RTISETINTENA)[offset=80h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

SETOVL1INT

SETOVL0INT

SETTBINT

R-0

R/WP-0

R/WP-0

R/WP-0

15

12

11

10

9

8

Reserved

SETDMA3

SETDMA2

SETDMA1

SETDMA0

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

4

3

2

1

0

Reserved

SETINT3

SETINT2

SETINT1

SETINT0

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-26.RTISetInterruptControlRegister(RTISETINTENA)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturn0.Writeshavenoeffect.

18

SETOVL1INT

Setfreerunningcounter1overflowinterrupt.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

17

SETOVL0INT

Setfreerunningcounter0overflowinterrupt.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

16

SETTBINT

Settimebaseinterrupt.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

15-12

Reserved

0

Readsreturn0.Writeshavenoeffect.

11

SETDMA3

SetcompareDMArequest3.

0

Read:DMArequestisdisabled.

Write:DMArequestisunchanged.

1

ReadorWrite:DMArequestisenabled.

10

SETDMA2

SetcompareDMArequest2.

0

Read:DMArequestisdisabled.

Write:DMArequestisunchanged.

1

ReadorWrite:DMArequestisenabled.

9

SETDMA1

SetcompareDMArequest1.

0

Read:DMArequestisdisabled.

Write:DMArequestisunchanged.

1

ReadorWrite:DMArequestisenabled.

449

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table13-26.RTISetInterruptControlRegister(RTISETINTENA)FieldDescriptions(continued)

Bit

Field

Value

Description

8

SETDMA0

SetcompareDMArequest0.

0

Read:DMArequestisdisabled.

Write:DMArequestisunchanged.

1

ReadorWrite:DMArequestisenabled.

7-4

Reserved

0

Readsreturn0.Writeshavenoeffect.

3

SETINT3

Setcompareinterrupt3.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

2

SETINT2

Setcompareinterrupt2.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

1

SETINT1

Setcompareinterrupt1.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

0

SETINT0

Setcompareinterrupt0.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

ReadorWrite:Interruptisenabled.

450

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.26RTIClearInterruptEnableRegister(RTICLEARINTENA)

Thisregisterpreventsthenecessityofaread-modify-writeoperationifaparticularinterruptshouldbe

disabled.ThisregisterisshowninFigure13-37anddescribedinTable13-27.

Figure13-37.RTIClearInterruptControlRegister(RTICLEARINTENA)[offset=84h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

CLEAROVL1INT

CLEAROVL0INT

CLEARTBINT

R-0

R/WP-0

R/WP-0

R/WP-0

15

12

11

10

9

8

Reserved

CLEARDMA3

CLEARDMA2

CLEARDMA1

CLEARDMA0

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

4

3

2

1

0

Reserved

CLEARINT3

CLEARINT2

CLEARINT1

CLEARINT0

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-27.RTIClearInterruptControlRegister(RTICLEARINTENA)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturn0.Writeshavenoeffect.

18

CLEAROVL1INT

Clearfreerunningcounter1overflowinterrupt.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

17

CLEAROVL0INT

Clearfreerunningcounter0overflowinterrupt.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

16

CLEARTBINT

Cleartimebaseinterrupt.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

15-12

Reserved

0

Readsreturn0.Writeshavenoeffect.

11

CLEARDMA3

ClearcompareDMArequest3.

0

Read:DMArequestisdisabled.

Write:Correspondingbitisunchanged.

1

Read:DMArequestisenabled.

Write:DMArequestisdisabled.

10

CLEARDMA2

ClearcompareDMArequest2.

0

Read:DMArequestisdisabled.

Write:Correspondingbitisunchanged.

1

Read:DMArequestisenabled.

Write:DMArequestisdisabled.

451

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table13-27.RTIClearInterruptControlRegister(RTICLEARINTENA)FieldDescriptions(continued)

Bit

Field

Value

Description

9

CLEARDMA1

ClearcompareDMArequest1.

0

Read:DMArequestisdisabled.

Write:Correspondingbitisunchanged.

1

Read:DMArequestisenabled.

Write:DMArequestisdisabled.

8

CLEARDMA1

ClearcompareDMArequest0.

0

Read:DMArequestisdisabled.

Write:Correspondingbitisunchanged.

1

Read:DMArequestisenabled.

Write:DMArequestisdisabled.

7-4

Reserved

0

Readsreturn0.Writeshavenoeffect.

3

CLEARINT3

Clearcompareinterrupt3.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

2

CLEARINT2

Clearcompareinterrupt2.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

1

CLEARINT1

Clearcompareinterrupt1.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

0

CLEARINT0

Clearcompareinterrupt0.

0

Read:Interruptisdisabled.

Write:Correspondingbitisunchanged.

1

Read:Interruptisenabled.

Write:Interruptisdisabled.

452

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.27RTIInterruptFlagRegister(RTIINTFLAG)

ThecorrespondingflagsaresetateverycomparematchoftheRTIFRCxandRTICOMPxvalues,whether

theinterruptisenabledornot.ThisregisterisshowninFigure13-38anddescribedinTable13-28.

Figure13-38.RTIInterruptFlagRegister(RTIINTFLAG)[offset=88h]

31

19

18

17

16

Reserved

OVL1INT

OVL0INT

TBINT

R-0

R/CP-0

R/CP-0

R/CP-0

15

4

3

2

1

0

Reserved

INT3

INT2

INT1

INT0

R-0

R/CP-0

R/CP-0

R/CP-0

R/CP-0

LEGEND:R/W=Read/Write;R=Readonly;CP=Clearinpriviligedmodeonly;-n=valueafterreset

Table13-28.RTIInterruptFlagRegister(RTIINTFLAG)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturn0.Writeshavenoeffect.

18

OVL1INT

Freerunningcounter1overflowinterruptflag.Thisbitdeterminesifaninterruptispending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

17

OVL0INT

Freerunningcounter0overflowinterruptflag.Thisbitdeterminesifaninterruptispending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

16

TBINT

Timebaseinterruptflag.ThisflagissetwhentheTBEXTbitisclearedbydetectionofamissing

externalclockedge.ItwillnotbesetbyclearingTBEXTbysoftware.Itdeterminesifaninterruptis

pending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

15-4

Reserved

0

Readsreturn0.Writeshavenoeffect.

3

INT3

Interruptflag3.ThesebitsdetermineifaninterruptduetoaCompare3matchispending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

2

INT2

Interruptflag2.ThesebitsdetermineifaninterruptduetoaCompare2matchispending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

1

INT1

Interruptflag1.ThesebitsdetermineifaninterruptduetoaCompare1matchispending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

453

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table13-28.RTIInterruptFlagRegister(RTIINTFLAG)FieldDescriptions(continued)

Bit

Field

Value

Description

0

INT0

Interruptflag0.ThesebitsdetermineifaninterruptduetoaCompare0matchispending.

0

Read:Nointerruptispending.

Write:Bitisunchanged.

1

Read:Interruptispending.

Write:Bitisclearedto0.

13.3.28DigitalWatchdogControlRegister(RTIDWDCTRL)

ThesoftwarehastowritetotheDWDCTRLfieldinordertoenabletheDWD,asdescribedbelow.Once

enabled,thewatchdogcanonlybedisabledbyasystemreset.Theapplicationcannotdisablethe

watchdog.HowevershouldtheRTICLKsourcebechangedtoasourcethatisunimplementeditwillhave

thesameeffectasdisablingthewatchdog.ThisregisterisshowninFigure13-38anddescribedin

Table13-28.

Figure13-39.DigitalWatchdogControlRegister(RTIDWDCTRL)[offset=90h]

31

16

DWDCTRL

R/WP-5312h

15

0

DWDCTRL

R/WP-ACEDh

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-29.DigitalWatchdogControlRegister(RTIDWDCTRL)FieldDescriptions

Bit

Field

Value

Description

31-0

DWDCTRL

DigitalWatchdogControl.

5312ACEDh

Read:DWDcounterisdisabled.

Write:StateofDWDcounterisunchanged(staysenabledordisabled).

A98559DAh

Read:DWDcounterisenabled.

Write:DWDcounterisenabled.

Allothervalues

Read:DWDcounterstateisunchanged(enabledordisabled).

Write:StateofDWDcounterisunchanged(staysenabledordisabled).

Note:Oncetheenablevalueiswritten,allotherfuturewritesareblocked.Inotherwords,once

DWDisenabled,itcanonlybedisabledbysystemresetorpoweronreset.Howevershould

theRTICLKsourcebechangedtoasourcethatisunimplementeditwillhavethesameeffect

asdisablingthewatchdog.

454

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.29DigitalWatchdogPreloadRegister(RTIDWDPRLD)

ThisregistersetstheexpirationtimeoftheDWD.ThisregisterisshowninFigure13-38anddescribedin

Table13-28.

Figure13-40.DigitalWatchdogPreloadRegister(RTIDWDPRLD)[offset=94h]

31

16

Reserved

R-0

15

12

11

0

Reserved

DWDPRLD

R-0

R/WP-FFFh

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-30.DigitalWatchdogPreloadRegister(RTIDWDPRLD)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturn0andwriteshavenoeffect.

15-0

DWDPRLD

0-FFFh

DigitalWatchdogPreloadValue.

Read:Thecurrentpreloadvalue

Write:Setthepreloadvalue.TheDWDpreloadregistercanbeconfiguredonlywhentheDWDis

disabled.Therefore,theapplicationcanonlyconfiguretheDWDpreloadregisterbeforeitenables

theDWDdowncounter.

TheexpirationtimeoftheDWDDownCountercanbedeterminedwithfollowingequation:

texp=(DWDPRLD+1)x213/RTICLK1

where:DWDPRLD=0...4095

455

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.30WatchdogStatusRegister(RTIWDSTATUS)

ThisregisterrecordsthestatusoftheDWD.Thevaluesofthefollowingstatusbitswillnotbeaffectedby

asoftreset.Thesebitsareclearedbyapowerupreset,orbyawriteof‘1’.Thesebitscanbeusedfor

debugpurposes.ThisregisterisshowninFigure13-38anddescribedinTable13-28.

Figure13-41.WatchdogStatusRegister(RTIWDSTATUS)[offset=98h]

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

Reserved

DWWDST

ENDTIMEVIOL

STARTTIMEVIOL

KEYST

DWDST

Reserved

R-0

R/CP-x

R/CP-x

R/CP-x

R/CP-x

R/CP-x

R-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;P=Privilegemode;-n=valueafterreset

Table13-31.WatchdogStatusRegister(RTIWDSTATUS)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readsreturn0.Writeshavenoeffect.

5

DWWDST

WindowedWatchdogStatus

0

Read:Notime-windowviolationhasoccurred.

Write:Leavesthecurrentvalueunchanged.

1

Read:Time-windowviolationhasoccurred.Thewatchdoghasgeneratedeitherasystemreset

oranon-maskableinterrupttotheCPUinthiscase.

Write:Bitisclearedto0.ThiswillalsoclearallotherstatusflagsintheRTIWDSTATUS

register.Clearingofthestatusflagswilldeassertthenon-maskableinterruptgenerateddueto

violationoftheDWWD.

4

ENDTIMEVIOL

WindowedWatchdogEndTimeViolationStatus.

ThisbitindicateswhethertheWatchdogcounterexpired.

0

Read:Noend-timewindowviolationhasoccured.

Write:Leavesthecurrentvalueunchanged.

1

Read:End-timedefinedbythewindowedwatchdogconfigurationhasbeenviolated.

Write:Bitisclearedto0.

3

STARTTIMEVIOL

WindowedWatchdogStartTimeViolationStatus.

Thisbitindicateswhetherthekeyiswrittenbeforethewatchdogwindowopenedup.

0

Read:Nostart-timewindowviolationhasoccurred.

Write:Leavesthecurrentvalueunchanged.

1

Read:Start-timedefinedbythewindowedwatchdogconfigurationhasbeenviolated.

Write:Bitisclearedto0.

2

KEYST

Watchdogkeystatus.ThisbitindicatesaresetorNMIgeneratedbyawrongkeyorkey

sequencewrittentotheRTIWDKEYregister.

0

Read:Nowrongkeyorkey-sequencewritten.

Write:Bitisunchanged.

1

Read:Wrongkeyorkey-sequencewrittentoRTIWDKEYregister.

Write:Bitisclearedto0.

1

DWDST

DWDstatus.

ThisbitisequivalenttobitENDTIMEVIOL.

0

Read:NoresetorNMIwasgenerated.

Write:Bitisunchanged.

1

Read:ResetorNMIwasgenerated.

Write:Bitisclearedto0.

0

Reserved

0

Readsreturn0.Writeshavenoeffect.

456

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.31RTIWatchdogKeyRegister(RTIWDKEY)

Thisregistermustbewrittenwiththecorrectwrittenkeyvaluestoservethewatchdog.Thisregisteris

showninFigure13-42anddescribedinTable13-32.

NOTE:IthastobetakenintoaccountthatthewritetotheRTIWDKEYregistertakes3VCLKcycles.

Figure13-42.RTIWatchdogKeyRegister(RTIDWDKEY)[offset=9Ch]

31

16

Reserved

R-0

15

0

WDKEY

R/WP-A35Ch

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-32.RTIWatchdogKeyRegister(RTIDWDKEY)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturn0andwriteshavenoeffect.

15-0

WDKEY

0-FFFFh

Watchdogkey.Thesebitsprovidethekeysequencelocation.

ReadsreturnsthecurrentWDKEYvalue.

AwriteofE51AhfollowedbyA35Chintwoseparatewriteoperationsdefinesthekeysequence

andreloadstheDWD.WritinganyothervaluecausesaresetorNMI,asshowninTable13-33.

WritinganyothervaluewillcausetheWDKEYtoresettoA35Ch.

Table13-33.ExampleofaWDKEYSequence

Step

ValueWrittentoWDKEY

Result

1

A35Ch

Noaction

2

A35Ch

Noaction

3

E51Ah

WDKEYisenabledforresetorNMIbynextA35Ch.

4

E51Ah

WDKEYisenabledforresetorNMIbynextA35Ch.

5

E51Ah

WDKEYisenabledforresetorNMIbynextA35Ch.

6

A35Ch

Watchdogisreset.

7

A35Ch

Noaction

8

E51Ah

WDKEYisenabledforresetorNMIbynextA35Ch.

9

A35Ch

Watchdogisreset.

10

E51Ah

WDKEYisenabledforresetorNMIbynextA35Ch.

11

2345h

SystemresetorNMI;incorrectvaluewrittentoWDKEY.

457

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.32RTIDigitalWatchdogDownCounter(RTIDWDCNTR)

ThisregisterprovidesthecurrentvalueoftheDWDdowncounter.ThisregisterisshowninFigure13-43

anddescribedinTable13-34.

Figure13-43.RTIWatchdogDownCounterRegister(RTIDWDCNTR)[offset=A0h]

31

25

24

16

Reserved

DWDCNTR

R-0

R-1FFh

15

0

DWDCNTR

R-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table13-34.RTIWatchdogDownCounterRegister(RTIDWDCNTR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readsreturn0andwriteshavenoeffect.

24-0

DWDCNTR

0-1FFFFFFh

DWDdowncounter.

Readsreturnthecurrentcountervalue.

13.3.33DigitalWindowedWatchdogReactionControl(RTIWWDRXNCTRL)

ThisregisterselectstheDWWDreactionifthewatchdogisservicedoutsidethetimewindow.Thisregister

isshowninFigure13-44anddescribedinTable13-35.

Figure13-44.DigitalWindowedWatchdogReactionControl(RTIWWDRXNCTRL)[offset=A4h]

31

16

Reserved

R-0

15

4

3

0

Reserved

WWDRXN

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-35.DigitalWindowedWatchdogReactionControl(RTIWWDRXNCTRL)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturn0andwriteshavenoeffect.

3-0

WWDRXN

TheDWWDreaction

5h

Thewindowedwatchdogwillcausearesetifthewatchdogisservicedoutsidethetimewindow

definedbytheconfiguration,orifthewatchdogisnotservicedatall.

Ah

Thewindowedwatchdogwillgenerateanon-maskableinterrupttotheCPUifthewatchdogis

servicedoutsidethetimewindowdefinedbytheconfiguration,orifthewatchdogisnotserviced

atall.

Allothervalues

Thewindowedwatchdogwillcausearesetifthewatchdogisservicedoutsidethetimewindow

definedbytheconfiguration,orifthewatchdogisnotservicedatall.

Note:TheDWWDreactioncanbeselectedbytheapplicationevenwhentheDWWDcounteris

alreadyenabled.IfachangetotheWWDRXNismadebeforethewatchdogservicewindowis

opened,thenthechangeintheconfigurationtakeseffectimmediately.Ifachangetothe

WWDRXNismadewhenthewatchdogservicewindowisalreadyopen,thenthechangein

configurationtakeseffectonlyafterthewatchdogisserviced.

458

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.34DigitalWindowedWatchdogWindowSizeControl(RTIWWDSIZECTRL)

ThisregisterselectstheDWWDwindowsize.ThisregisterisshowninFigure13-45anddescribedin

Table13-36.

Figure13-45.DigitalWindowedWatchdogWindowSizeControl(RTIWWDSIZECTRL)[offset=A8h]

31

16

WWDSIZE

R-0000

15

0

WWDSIZE

R/WP-0005h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-36.DigitalWindowedWatchdogWindowSizeControl(RTIWWDSIZECTRL)Field

Descriptions

Bit

Field

Value

Description

31-0

WWDSIZE

0

TheDWWDwindowsize

00000005h

100%(Thefunctionalityisthesameasthestandardtime-outdigitalwatchdog.)

00000050h

50%

00000500h

25%

00005000h

12.5%

00050000h

6.25%

Allothervalues

3.125%

Note:TheDWWDwindowsizecanbeselectedbytheapplicationevenwhentheDWWD

counterisalreadyenabled.IfachangetotheWWDSIZEismadebeforethewatchdogservice

windowisopened,thenthechangeintheconfigurationtakeseffectimmediately.Ifachangeto

theWWDSIZEismadewhenthewatchdogservicewindowisalreadyopen,thenthechangein

configurationtakeseffectonlyafterthewatchdogisserviced.

459

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.35RTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)

Thisregisterenablesan"auto-clear"ofthecompareinterruptenablebitafteracompareequalevent.This

registerisshowninFigure13-46anddescribedinTable13-37.

Figure13-46.RTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)[offset=ACh]

31

28

27

24

23

20

19

16

Reserved

INTCLRENABLE3

Reserved

INTCLRENABLE2

R-0

R/WP-5h

R-0

R/WP-5h

15

12

11

8

7

4

3

0

Reserved

INTCLRENABLE1

Reserved

INTCLRENABLE0

R-0

R/WP-5h

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-37.RTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)

Bit

Field

Value

Description

31-28

Reserved

0

Readsreturn0.Writeshavenoeffect.

27-24

INTCLRENABLE3

Enablestheauto-clearfunctionalityonthecompare3interrupt.

5

Read:Auto-clearforcompare3interruptisdisabled.

PrivilegedWrite:Auto-clearforcompare3interruptbecomesdisabled

All

Read:Auto-clearforcompare3interruptisenabled.

Other

PrivilegedWrite:Auto-clearforcompare3interruptbecomesenabled

23-20

Reserved

0

Readsreturn0.Writeshavenoeffect.

19-16

INTCLRENABLE2

Enablestheauto-clearfunctionalityonthecompare2interrupt.

5

Read:Auto-clearforcompare2interruptisdisabled.

PrivilegedWrite:Auto-clearforcompare2interruptbecomesdisabled

All

Read:Auto-clearforcompare2interruptisenabled.

Other

PrivilegedWrite:Auto-clearforcompare2interruptbecomesenabled

15-12

Reserved

0

Readsreturn0.Writeshavenoeffect.

11-8

INTCLRENABLE1

Enablestheauto-clearfunctionalityonthecompare1interrupt.

5

Read:Auto-clearforcompare1interruptisdisabled.

PrivilegedWrite:Auto-clearforcompare1interruptbecomesdisabled

All

Read:Auto-clearforcompare1interruptisenabled.

Other

PrivilegedWrite:Auto-clearforcompare1interruptbecomesenabled

7-4

Reserved

0

Readsreturn0.Writeshavenoeffect.

3-0

INTCLRENABLE0

Enablestheauto-clearfunctionalityonthecompare0interrupt.

5

Read:Auto-clearforcompare0interruptisdisabled.

PrivilegedWrite:Auto-clearforcompare0interruptbecomesdisabled

All

Read:Auto-clearforcompare0interruptisenabled.

Other

PrivilegedWrite:Auto-clearforcompare0interruptbecomesenabled

460

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

13.3.36RTICompare0ClearRegister(RTICMP0CLR)

Thisregistersholdsacomparevalue,whichiscomparedwiththecounterselectedintheRTICOMPCTRL

registerSection13.3.4.IftheFreeRunningCountermatchesthecomparevalue,thecompare0interrupt

orDMArequestlineisclearedandthevalueintheRTIUDCP0registerSection13.3.16isaddedtothis

register.ThisregisterisshowninFigure13-47anddescribedinTable13-38.

Figure13-47.RTICompare0ClearRegister(RTICMP0CLR)[offset=B0h]

31

16

CMP0CLR

R/WP-0

15

0

CMP0CLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-38.RTICompare0ClearRegister(RTICMP0CLR)

Bit

Field

Value

Description

31-0

CMP0CLR

0-FFFFFFFFh

Compare0clear.Thisregistersholdsacomparevalue,whichiscomparedwiththecounter

selectedintheRTICOMPCTRLregister.IftheFreeRunningCountermatchesthecompare

value,thecompare0interruptorDMArequestlineisclearedandthevalueintheRTIUDCP0

registerSection13.3.16isaddedtothisregister.

Readsreturnthecurrentcompareclearvalue.

Aprivilegedwritetothisregisterupdatesthecompareclearvalue.

13.3.37RTICompare1ClearRegister(RTICMP1CLR)

Thisregistersholdsacomparevalue,whichiscomparedwiththecounterselectedintheRTICOMPCTRL

registerSection13.3.4.IftheFreeRunningCountermatchesthecomparevalue,thecompare0interrupt

orDMArequestlineisclearedandthevalueintheRTIUDCP1registerSection13.3.18isaddedtothis

register.ThisregisterisshowninFigure13-48anddescribedinTable13-39.

Figure13-48.RTICompare1ClearRegister(RTICMP1CLR)[offset=B4h]

31

16

CMP1CLR

R/WP-0

15

0

CMP1CLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-39.RTICompare1ClearRegister(RTICMP1CLR)

Bit

Field

Value

Description

31-0

CMP0CLR

0-FFFFFFFFh

Compare1clear.Thisregistersholdsacomparevalue,whichiscomparedwiththecounter

selectedintheRTICOMPCTRLregister.IftheFreeRunningCountermatchesthecompare

value,thecompare1interruptorDMArequestlineisclearedandthevalueintheRTIUDCP1

registerSection13.3.18isaddedtothisregister.

Readsreturnthecurrentcompareclearvalue.

Aprivilegedwritetothisregisterupdatesthecompareclearvalue.

461

SPNU499B–November2012–RevisedAugust2013

Real-TimeInterrupt(RTI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

13.3.38RTICompare2ClearRegister(RTICMP2CLR)

Thisregistersholdsacomparevalue,whichiscomparedwiththecounterselectedintheRTICOMPCTRL

registerSection13.3.4.IftheFreeRunningCountermatchesthecomparevalue,thecompare2interrupt

orDMArequestlineisclearedandthevalueintheRTIUDCP2registerSection13.3.20isaddedtothis

register.ThisregisterisshowninFigure13-49anddescribedinTable13-40.

Figure13-49.RTICompare2ClearRegister(RTICMP2CLR)[offset=B8h]

31

16

CMP2CLR

R/WP-0

15

0

CMP2CLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-40.RTICompare2ClearRegister(RTICMP2CLR)

Bit

Field

Value

Description

31-0

CMP2CLR

0-FFFFFFFFh

Compare2clear.Thisregistersholdsacomparevalue,whichiscomparedwiththecounter

selectedintheRTICOMPCTRLregister.IftheFreeRunningCountermatchesthecompare

value,thecompare2interruptorDMArequestlineisclearedandthevalueintheRTIUDCP2

registerSection13.3.20isaddedtothisregister.

Readsreturnthecurrentcompareclearvalue.

Aprivilegedwritetothisregisterupdatesthecompareclearvalue.

13.3.39RTICompare3ClearRegister(RTICMP3CLR)

Thisregistersholdsacomparevalue,whichiscomparedwiththecounterselectedintheRTICOMPCTRL

registerSection13.3.4.IftheFreeRunningCountermatchesthecomparevalue,thecompare3interrupt

orDMArequestlineisclearedandthevalueintheRTIUDCP3registerSection13.3.22isaddedtothis

register.ThisregisterisshowninFigure13-50anddescribedinTable13-41.

Figure13-50.RTICompare3ClearRegister(RTICMP3CLR)[offset=BCh]

31

16

CMP3CLR

R/WP-0

15

0

CMP3CLR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table13-41.RTICompare3ClearRegister(RTICMP3CLR)

Bit

Field

Value

Description

31-0

CMP3CLR

0-FFFFFFFFh

Compare3clear.Thisregistersholdsacomparevalue,whichiscomparedwiththecounter

selectedintheRTICOMPCTRLregister.IftheFreeRunningCountermatchesthecompare

value,thecompare3interruptorDMArequestlineisclearedandthevalueintheRTIUDCP3

registerSection13.3.22isaddedtothisregister.

Readsreturnthecurrentcompareclearvalue.

Aprivilegedwritetothisregisterupdatesthecompareclearvalue.

462

Real-TimeInterrupt(RTI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter14

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

Thischapterdescribesthecyclicredundancycheck(CRC)controllermodule.

NOTE:ThischapterdescribesasupersetimplementationoftheCRCmodulethatincludesfeatures

andfunctionalitythatrequireDMA.SincenotalldeviceshaveDMAcapability,consultyour

device-specificdatasheettodetermineapplicabilityofthesefeaturesandfunctionstoyour

devicebeingused.

Topic...........................................................................................................................Page

14.1Overview........................................................................................................464

14.2ModuleOperation............................................................................................466

14.3Example.........................................................................................................476

14.4CRCControlRegisters.....................................................................................479

463

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

14.1Overview

TheCRCcontrollerisamodulethatisusedtoperformCRC(CyclicRedundancyCheck)toverifythe

integrityofmemorysystem.Asignaturerepresentingthecontentsofthememoryisobtainedwhenthe

contentsofthememoryarereadintoCRCcontroller.TheresponsibilityofCRCcontrolleristocalculate

thesignatureforasetofdataandthencomparethecalculatedsignaturevalueagainstapre-determined

goodsignaturevalue.CRCcontrollersupportstwochannelstoperformCRCcalculationonmultiple

memoriesinparallelandcanbeusedonanymemorysystem.

14.1.1Features

TheCRCcontrolleroffers:

•Twochannelstoperformbackgroundsignatureverificationonanymemorysub-system.

•Datacompressionon8,16,32,and64bitdatasize.

•Maximum-lengthPSA(ParallelSignatureAnalysis)registerconstructedbasedon64bitprimitive

polynomial.

•EachchannelhasaCRCValueRegisterwhichcontainsthepre-determinedCRCvalue.

•UsetimedbaseeventtriggerfromtimertoinitiateDMAdatatransfer.

•Programmable20-bitpatterncounterperchanneltocountthenumberofdatapatternsfor

compression.

•Threemodesofoperation.Auto,Semi-CPUandFull-CPU.

•Foreachchannel,CRCcanbeperformedeitherbyCRCControllerorbyCPU.

•AutomaticallyperformsignatureverificationwithoutCPUinterventioninAUTOmode.

•GenerateinterrupttoCPUinSemi-CPUmodetoallowCPUtoperformsignatureverificationitself.

•GenerateCRCfailinterruptinAUTOmodeifsignatureverificationfails.

•GenerateTimeoutinterruptifCRCisnotperformedwithinthetimelimit.

•GenerateDMArequestperchanneltoinitiateCRCvaluetransfer.

•DatatracecapabilityonPeripheralBusMaster,FlashandSystemRAMdatabuses.

14.1.2BlockDiagram

Figure14-1showsablockdiagramoftheCRCcontroller.

NOTE:OnlyChannel1cansupportdatatrace.

464

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ReadDataBus(Peripheral,Flash,SystemRAM)

WriteDataPSASignatureRegisterCRCValueRegister=CRCFailInterruptCRCOverrunInterruptCRCUnderrunInterruptCRCTimeoutInterruptTrace EnableDMARequest6464ModeRegRegisterFileFSM&ControlDataSynchronizationHBSTRB[7:0]CH1_INTCH2_INTCH3_INTCH4_INTCRC_INT

RawDataRegisterBusMatrixModule

64

64

PSASector SignatureRegister

20 BitPatternCountPreload

20 BitPatternCounterCRCStatus Bit

24 BitTimeoutPreloadRegister

24 BitTimeOutCounter16 BitSectorCountPreload16 BitSectorCounterCRC InterruptGenerationLogicDMARequestLogic

Mux



www.ti.comOverview

Figure14-1.CRCControllerBlockDiagramForOneChannel

465

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

14.2ModuleOperation

14.2.1GeneralOperation

TherearetwochannelsinCRCcontrollerandforeachchannelthereisamemorymappedPSA(Parallel

SignatureAnalysis)SignatureRegisterandamemorymappedCRC(CyclicRedundancyCheck)Value

register.Amemorycanbeorganizedintomultiplesectorswitheachsectorconsistingofmultipledata

patterns.Adatapatterncanbea8,16,32,or64bitdata.CRCmoduleperformsthesignaturecalculation

andcomparesthesignaturetoapre-determinedvalue.ThePSASignatureRegistercompressesan

incomingdatapatternintoasignaturewhenitiswritten.Whenonesectorofdatapatternsarewritteninto

PSASignatureRegister,afinalsignaturecorrespondingtothesectorisobtained.CRCValueRegister

storesthepre-determinedsignaturecorrespondingtoonesectorofdatapatterns.Thecalculated

signatureandthepre-determinedsignaturearethencomparedtoeachotherforsignatureverification.To

minimizeCPU’sinvolvement,datapatternstransfercanbecarriedoutatthebackgroundofCPUusing

DMAcontroller.DMAissetuptotransferdatafrommemoryfromwhichthecontentstobeverifiedtothe

memorymappedPSASignatureRegister.WhenDMAtransfersdatatothememorymappedPSA

SignatureRegister,asignatureisgenerated.Aprogrammable20-bitdatapatterncounterisusedforeach

channeltodefinethenumberofdatapatternstocalculateforeachsector.Signatureverificationcanbe

performedautomaticallybyCRCcontrollerinAUTOmodeorbyCPUitselfinSemi-CPUorFull-CPU

mode.InAUTOmode,aselfsustainedCRCsignaturecalculationcanbeachievedwithoutanyCPU

intervention.CRCControlleralsoprovidesdatatracecapability.Channel1canperformdatatraceon

CPUdatabus.Duringdatatrace,channel1monitorsanydatabeingreadonCPUdatabusand

compressesit.Whendatatraceisenabledforchannel1,allcircuitsrelatedtoDMArequestandinterrupt

generationandcountersaredisabled.

14.2.2CRCModesofOperation

CRCControllercanoperateinAUTO,Semi-CPU,andFull-CPUmodes.

14.2.2.1AUTOMode

InAUTOmode,CRCControllerinconjunctionwithDMAcontrollercanperformCRCtotallywithoutCPU

intervention.AsustainedtransferofdatatoboththePSASignatureRegisterandCRCValueRegisterare

performedinthebackgroundofCPU.Whenamismatchisdetected,aninterruptisgeneratedtoCPU.A

16bitcurrentsectorIDregisterisprovidedtoidentifywhichsectorcausesaCRCfailure.

14.2.2.2Semi-CPUMode

InSemi-CPUmode,DMAcontrollerisalsoutilizedtoperformdatapatternstransfertoPSASignature

Register.Insteadofperformingsignatureverificationautomatically,theCRCcontrollergeneratesan

compressioncompleteinterrupttoCPUaftereachsectoriscompressed.Uponrespondingtotheinterrupt

theCPUperformsthesignatureverificationbyreadingthecalculatedsignaturestoredatthePSASector

SignatureRegisterandcompareittoapre-determinedCRCvalue.

14.2.2.3FullCPUMode

InFull-CPUmode,theCPUdoesthedatapatternstransferandsignatureverificationallbyitself.When

CPUhasenoughthroughput,itcanperformdatapatternstransferbyreadingdatafromthememory

systemtothePSASignatureRegister.Aftercertainnumberofdatapatternsarecompressed,theCPU

canreadfromthePSASignatureRegisterandcomparethecalculatedsignaturetothepre-determined

CRCsignaturevalue.InFull-CPUmode,neitherinterruptnorDMArequestisgenerated.Allcountersare

alsodisabled.

466

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Data

DQX0

DQX2

DQX1

DQX3

DQX4

DQX63

f(x)=x64+x4+x3+x+1



www.ti.comModuleOperation

14.2.3PSASignatureRegister

The64-bitPSASignatureRegisterisbasedontheprimitivepolynomial(asinthefollowingequation)to

producethemaximumlengthLFSR(LinearFeedbackShiftRegister),asshowninFigure14-2.

(26)

Figure14-2.LFSR

TheserialimplementationofLFSFhasalimitationthat,itrequires‘n’clockcyclestocalculatetheCRC

valuesforan‘n’bitdatastream.TheideaistoproducethesameCRCvalueoperatingonamulti-bitdata

stream,aswouldoccuriftheCRCwerecomputedonebitatatimeoverthewholedatastream.The

algorithminvolvesloopingtosimulatetheshifting,andconcatenatingstringstobuildtheequationsafter‘n’

shift.

TheparallelCRCcalculationbasedonthepolynomialcanbeillustratedinthefollowingHDLcode:

foriin63to0loop

NEXT_CRC_VAL(0):=CRC_VAL(63)xorDATA(i);

forjin1to63loop

casejis

when1|3|4=>

NEXT_CRC_VAL(j):=

CRC_VAL(j-1)xorCRC_VAL(63)xorDATA(i);

whenothers=>

NEXT_CRC_VAL(j):=CRC_VAL(j-1);

endcase;

endloop;

CRC_VAL:=NEXT_CRC_VAL;

endloop;

NOTE:1)Theinnerloopistocalculatethenextvalueofeachshiftregisterbitafteronecycle

2)Theouterloopistosimulate64cyclesofshifting.Theequationforeachshiftregisterbit

isthusbuiltbeforeitiscompressedintotheshiftregister.

3)MSBoftheDATAisshiftedinfirst

ThereisonePSASignatureRegisterperCRCchannel.PSASignatureRegistercanbebothreadand

written.Whenitiswritten,itcaneithercompressthedataorjustcapturethedatadependingonthestate

ofCHx_MODEbits.IfCHx_MODE=DataCapture,aseedvaluecanbeplantedinthePSASignature

Registerwithoutcompression.OthermodesotherthanDataCapturewillresultwiththedatacompressed

byPSASignatureRegisterwhenitiswritten.Eachchannelcanbeplantedwithdifferentseedvalue

beforecompressionstarts.WhenPSASignatureRegisterisread,itgivesthecalculatedsignature.

CRCControllershouldbeusedinconjunctionwiththeonchipDMAcontrollertoproduceoptimalsystem

performance.TheincomingdatapatterntoPSASignatureRegisteristypicallyinitiatedbytheDMA

master.WhenDMAisproperlysetup,itwouldreaddatafromthepre-determinedmemorysystemand

writethemtothememorymappedPSASignatureRegister.EachtimePSASignatureRegisteriswrittena

signatureisgenerated.CPUitselfcanalsoperformdatatransferbyreadingfromthememorysystemand

performwriteoperationtoPSASignatureRegisterifCPUhasenoughthroughputtohandledatapatterns

transfer.

467

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

AftersystemresetandwhenAUTOmodeisenabled,CRCControllerautomaticallygeneratesaDMA

requesttorequestthepre-determinedCRCvaluecorrespondingtothefirstsectorofmemorytobe

checked.

InAUTOmode,whenonesectorofdatapatternsiscompressed,thesignaturestoredatthePSA

SignatureRegisterisfirstcopiedtothePSASectorSignatureRegisterandPSASignatureRegisteris

thenclearedouttoallzeros.Anautomaticsignatureverificationisthenperformedbycomparingthe

signaturestoredatthePSASectorSignatureRegistertotheCRCValueRegister.Afterthecomparison

theCRCControllercangenerateaDMArequest.UponreceivingtheDMArequesttheDMAcontrollerwill

updatetheCRCValueRegisterbytransferringthenextpre-determinedsignaturevalueassociatedwith

thenextsectorofmemorysystem.IfthesignatureverificationfailsthenCRCControllercangeneratea

CRCfailinterrupt.

InFull-CPUmode,noDMArequestandinterruptaregeneratedatall.Thenumberofdatapatternstobe

compressedisdeterminedbyCPUitself.Full-CPUmodeisusefulwhenDMAcontrollerisnotavailableto

performbackgrounddatapatternstransfer.TheOScanperiodicallygenerateasoftwareinterrupttoCPU

anduseCPUtoaccomplishdatatransferandsignatureverification.

CRCControllersupportsdoubleword,word,halfwordandbyteaccesstothePSASignatureRegister.

Duringanon-doublewordwriteaccess,allunwrittenbytelanesarepaddedwithzero’sbefore

compression.NotethatcomparisonbetweenPSASectorSignatureRegisterandCRCValueRegisteris

alwaysin64bitbecauseacompressedvalueisalwaysexpressedin64bit.

ThereisasoftwareresetperchannelforPSASignatureRegister.Whenset,thePSASignatureRegister

isresettoallzeros.

PSASignatureRegisterisresettozerounderthefollowingconditions:

•Systemreset

•PSASoftwarereset

•Onesectorofdatapatternsarecompressed

14.2.4PSASectorSignatureRegister

Afteronesectorofdataiscompressed,thefinalresultingsignaturecalculatedbyPSASignatureRegister

istransferredtothePSASectorSignatureRegister.PSASignatureRegisterisareadonlyregister.

DuringSemi-CPUmode,thehostCPUshouldreadfromthePSASectorSignatureRegisterinsteadof

readingfromPSASignatureRegisterforsignatureverificationtoavoiddatacoherencyissue.ThePSA

SignatureRegistercanbeupdatedwithnewsignaturebeforethehostCPUisabletoretrieveit.

InSemi-CPUmode,noDMArequestisgenerated.Whenonesectorofdatapatternsiscompressed,CRC

controllerfirstgeneratesacompressioncompleteinterrupt.Respondingtotheinterrupt,CPUwillinthe

ISRreadthePSASectorSignatureRegisterandcompareittotheknowngoodsignatureorwritethe

signaturevaluetoanothermemorylocationtobuildasignaturefile.InSemi-CPUmode,CPUmust

performthesignatureverificationinamannertopreventanyoverruncondition.Theoverruncondition

occurswhenthecompressioncompleteinterruptisgeneratedafteronesectorofdatapatternsis

compressedandCPUhasnotreadfromthePSASectorSignatureRegistertoperformnecessary

signatureverificationbeforePSASectorSignatureRegisterisoverriddenwithanewvalue.Anoverrun

interruptcanbeenabletogeneratewhenoverrunconditionoccurs.DuringSemi-CPUmode,thehostCPU

shouldreadfromthePSASectorSignatureRegisterinsteadofreadingfromPSASignatureRegisterfor

signatureverificationtoavoiddatacoherencyissue.ThePSASignatureRegistercanbeupdatedwith

newsignaturebeforethehostCPUisabletoretrieveit.

468

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

14.2.5CRCValueRegister

AssociatedwitheachchannelthereisaCRCValueRegister.TheCRCValueRegisterstoresthepre-

determinedCRCvalue.AfteronesectorofdatapatternsiscompressedbyPSASignatureRegister,CRC

ControllercanautomaticallycomparetheresultingsignaturestoredatthePSASectorSignatureRegister

withthepre-determinedvaluestoredattheCRCValueRegisterifAUTOmodeisenabled.Ifthesignature

verificationfails,CRCControllercanbeenabledtogenerateanCRCfailinterrupt.Whenthechannelis

setupforSemi-CPUmode,CRCcontrollerfirstgeneratesacompressioncompleteinterrupttoCPU.

Uponservicingtheinterrupt,CPUwillthenreadthePSASectorSignatureRegisterandthenreadthe

correspondingCRCvaluestoredatanotherlocationandcomparethem.CPUshouldnotreadfromthe

CRCValueRegisterduringSemi-CPUorFull-CPUmodebecausetheCRCValueRegisterisnotupdated

duringthesetwomodes.

InAUTOmode,forfirstsector’ssignature,DMArequestisgeneratedwhenmodeisprogrammedto

AUTO.Forsubsequentsectors,DMArequestisgeneratedaftereachsectoriscompressed.Responding

totheDMArequest,DMAcontrollerreloadstheCRCValueRegisterforthenextsectorofmemorysystem

tobechecked.

WhenCRCValueRegisterisupdatedwithanewCRCvalue,aninternalflagissettoindicatethatCRC

ValueRegistercontainsthemostcurrentvalue.ThisflagisclearedwhenCRCcomparisonisperformed.

Eachtimeattheendofthefinaldatapatterncompressionofasector,CRCControllerfirstcheckstosee

ifthecorrespondingCRCValueRegisterhasthemostcurrentCRCvaluestoredinitbypollingtheflag.If

theflagissetthentheCRCcomparisoncanbeperformed.IftheflagisnotsetthenitmeanstheCRC

ValueRegistercontainsstaleinformation.ACRCunderruninterruptisgenerated.Whenanunderrun

conditionisdetected,signatureverificationisnotperformed.

CRCControllersupportsdoubleword,word,halfwordandbyteaccesstotheCRCValueRegister.As

notedbeforecomparisonbetweenPSASectorSignatureRegisterandCRCValueRegisterduringAUTO

modeiscarriedoutin64bit.

14.2.6RawDataRegister

Theraworun-compresseddatawrittentothePSASignatureRegisterisalsosavedintheRawData

Register.Thisregisterisreadonly.

14.2.7ExampleDMAControllerSetup

DMAcontrollerneedstobesetupproperlyineithereitherAUTOorSemi-CPUmodeasDMAcontrolleris

usedtotransferdatapatterns.HardwareoracombinationofhardwareandsoftwareDMAtriggeringare

supported.

14.2.7.1AUTOModeUsingHardwareTimerTrigger

TherearetwoDMAchannelsassociatedwitheachCRCchannelwheninAUTOmode.OneDMAchannel

issetuptotransferdatapatternsfromthesourcememorytothePSASignatureRegister.Thesecond

DMAchannelissetuptotransferthepre-determinedsignaturetotheCRCValueRegister.Thetrigger

sourceforthefirstDMAchannelcanbeeitherbyhardwareorbysoftware.AsillustratedinFigure14-3a

timercanbeusedtotriggeraDMArequesttoinitiatetransferfromthesourcememorysystemtoPSA

SignatureRegister.InAUTOmode,CRCControlleralsogeneratesDMArequestafteronesectorofdata

patternsiscompressedtoinitiatetransferofthenextCRCvaluecorrespondingtothenextsectorof

memory.ThusanewCRCvalueisalwaysupdatedintheCRCValueRegisterbyDMAsynchronizedto

eachsectorofmemory.

Ablockofmemorysystemisusuallydividedintomanysectors.Allsectorsarethesamesize.Thesector

sizeisprogrammedintheCRC_PCOUNT_REGxandthenumberofsectorsinoneblockisprogrammed

intheCRC_SCOUNT_REGxoftherespectivechannel.CRC_PCOUNT_REGxmultiplies

CRC_SCOUNT_REGxandmultipliestransfersizeofeachdatapatternshouldgivethetotalblocksizein

numberofbytes.

469

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DMAControllerCPU

DMAchannel0DMAchannel15Ch1PSASigRegCRCValueReg

Ch4CRCValueRegPSASigReg

DMAchannelpDMAchannelq.

DMARequestEventSync.

MCRCController

SWDMAReqHWDMAReq

MemorySystem

Sector1Sector2SectornSector1CRCvalue

Sector 2 CRCvalueSector n CRCvalue

oneblock

DMAControllerTimer

DMAchannel0DMAchannel15Ch1PSASigRegCRCValueReg

Ch4CRCValueRegPSASigReg

DMAchannelpDMAchannelq.

DMARequestEventSync.

MCRCController

HWDMAReqHWDMAReq

MemorySystem

Sector1Sector2SectornSector1CRCvalue

Sector 2 CRCvalueSector n CRCvalue

oneblock



ModuleOperationwww.ti.com

Thetotalsizeofthememorysystemtobeexaminedisalsoprogrammedintherespectivetransfercount

registerinsideDMAmodule.TheDMAtransfercountregisterisdividedintotwoparts.Theyareelement

countandframecount.NotethatanHWDMArequestcanbeprogrammedtotriggereitheroneframeor

oneentireblocktransfer.InFigure14-3,anHWDMArequestfromatimerisusedasatriggersourceto

initiateDMAtransfer.IfallfourCRCchannelsareactiveinAUTOmodethenatotaloffourDMArequests

wouldbegeneratedbyCRCController.

Figure14-3.AUTOModeUsingHardwareTimerTrigger

14.2.7.2AUTOModeUsingSoftwareTrigger

Thedatapatternstransfercanalsobeinitiatedbysoftware.CPUcangenerateasoftwareDMArequestto

activatetheDMAchanneltotransferdatapatternsfromsourcememorysystemtothePSASignature

Register.TogenerateasoftwareDMArequestCPUneedstosetthecorrespondingDMAchannelinthe

DMAsoftwaretriggerregister.NotethatjustonesoftwareDMArequestfromCPUisenoughtocomplete

theentiredatapatternstransferforallsectors.SeeFigure14-4foranillustration.

Figure14-4.AUTOModeWithSoftwareCPUTrigger

470

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MemorySystemDMAControllerTimer

DMAchannel0DMAchannel31Ch1PSARegCRCReg

Ch4CRCRegPSAReg

Sector1Sector2Sectorn

DMAchannelpDMAchannelq.

DMARequestEventSync.

CRCControllerHWDMAReq

oneblock



www.ti.comModuleOperation

14.2.7.3Semi-CPUModeUsingHardwareTimerTrigger

Duringsemi-CPUmode,noDMArequestisgeneratedbyCRCcontroller.Therefore,noDMAchannelis

allocatedtoupdateCRCValueRegister.CPUshouldnotreadfromCRCValueRegisterinsemi-CPU

modeasitcontainsstalevalue.Notethatnosignatureverificationisperformedatallduringthismode.

SimilartoAUTOmode,eitherbyhardwareorbysoftwareDMArequestcanbeusedasatriggerfordata

patternstransfer.Figure14-5illustratestheDMAsetupusingsemi-CPUmodewithhardwaretimertrigger.

Figure14-5.Semi-CPUModeWithHardwareTimerTrigger

Table14-1.CRCModesinWhichDMARequestandCounterLogicareActiveorInactive

Mode

DMARequest

PatternCounter

SectorCounter

TimeoutCounter

AUTO

Active

Active

Active

Active

Semi-CPU

Inactive

Active

Active

Active

Full-CPU

Inactive

Inactive

Inactive

Inactive

14.2.8PatternCountRegister

Thereisa20-bitdatapatterncounterforeveryCRCchannel.Thedatapatterncounterisadowncounter

andcanbepre-loadedwithaprogrammablevaluestoredinthePatternCountRegister.Whenthedata

patterncounterreacheszero,acompressioncompleteinterruptisgeneratedinSemi-CPUmodeandan

automaticsignatureverificationisperformedinAUTOmode.InAUTOonly,DMArequestisgeneratedto

triggertheDMAcontrollertoupdatetheCRCValueRegister.

NOTE:ThedatapatterncountshouldbedivisiblebythetotaltransfercountasprogrammedinDMA

controller.Thetotaltransfercountistheproductofelementcountandframecount.

14.2.9SectorCountRegister/CurrentSectorRegister

Eachchannelcontainsa16bitsectorcounter.Thesectorcountregisterstoresthenumberofsectors.

Sectorcounterisafreerunningcounterandisincrementedbyoneeachtimewhenonesectorofdata

patternsiscompressed.Whenthesignatureverificationfails,thecurrentvaluestoredinthesector

counterissavedintocurrentsectorregister.Ifsignatureverificationfails,CPUcanreadfromthecurrent

sectorregistertoidentifythesectorwhichcausestheCRCmismatch.ToaidandfacilitatetheCPUin

determiningthecauseofaCRCfailure,itisadvisabletousethefollowingequationduringCRCandDMA

setup:

CRCPatternCount×CRCSectorCount=DMAElementCount×DMAFrameCount

471

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

Thecurrentsectorregisterisfrozenfrombeingupdateduntilboththecurrentsectorregisterisreadand

CRCfailstatusbitisclearedbyCPU.IfCPUdoesnotrespondtotheCRCfailureinatimelymanner

beforeanothersectorproducesasignatureverificationfailure,thecurrentsectorregisterisnotupdated

withthenewsectornumber.Anoverruninterruptisgenerateinstead.Ifcurrentsectorregisterisalready

frozenwithanerroneoussectorandemulationisenteredwithSUSPENDsignalgoestohighthenthe

registerstillremainsfrozenevenitisread.

InSemi-CPUmode,thecurrentsectorregisterisusedtoindicatethesectorforwhichthecompression

completehaslasthappened.

ThecurrentsectorregisterisresetwhenthePSAsoftwareresetisenabled.

NOTE:Bothdatapatterncountandsectorcountregistersmustbegreaterthanorequaltoonefor

thecounterstocount.Afterreset,patterncountandsectorcountregistersdefaulttozero

andtheassociatedcountersareinactive.

14.2.10Interrupt

TheCRCcontrollergeneratesseveraltypesofinterruptsperchannel.Associatedwitheachinterrupt,

thereisaninterruptenablebit.NointerruptisgeneratedinFull-CPUmode.

•Compressioncompleteinterrupt

•CRCfailinterrupt

•Overruninterrupt

•Underruninterrupt

•Timeoutinterrupt

Table14-2.ModesinWhichInterruptConditionCanOccur

AUTO

Semi-CPU

Full-CPU

CompressionComplete

no

yes

no

CRCFail

yes

no

no

Overrun

yes

yes

no

Underrun

yes

no

no

Timeout

yes

yes

no

14.2.10.1CompressionCompleteInterrupt

CompressioncompleteinterruptisgeneratedinSemi-CPUmodeonly.Whenthedatapatterncounter

reacheszero,thecompressioncompleteflagissetandtheinterruptisgenerated.

14.2.10.2CRCFailInterrupt

CRCfailinterruptisgeneratedinAUTOmodeonly.Whenthesignatureverificationfails,theCRCfailflag

isset,.CPUshouldtakeactiontoaddressthefailconditionandcleartheCRCfailflagafteritresolvesthe

CRCmismatch.

14.2.10.3OverrunInterrupt

OverruninterruptisgenerateineithereitherAUTOorSemi-CPUmode.DuringAUTOmode,ifaCRCfail

isdetectedthenthecurrentsectornumberisrecordedinthecurrentsectorregister.IfCRCfailstatusbit

isnotclearedandcurrentsectorregisterisnotreadbythehostCPUbeforeanotherCRCfailisdetected

foranothersectorthenanoverruninterruptisgenerated.DuringSemi-CPUmode,whenthedatapattern

counterfinishescounting,itgeneratesacompressioncompleteinterrupt.Atthesametimethesignatureis

copiedintothePSASectorSignatureRegister.IfthehostCPUdoesnotreadthesignaturefromPSA

SectorSignatureRegisterbeforeitisupdatedagainwithanewsignaturevaluethenanoverruninterrupt

isgenerated.

472

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TimerTimescaleHWDMAreqevery10ms

Data

10

9

8

7

6

5

4

3

4

3

2

10

9

8

7

6

5

4

4

3

2

10

9

8

7

6

5

4

4

3

2

10

9

8

7

6

5

4

0 ms10 ms20 ms30 ms3 ms13 ms23 msTimeoutCounterWDpre-load

BCpre-load

WDpre-load

BCpre-load

WDpre-load

BCpre-load

WDpre-load

Note: No timeout interrupt is generated in this example sinceeach block of data patterns are compressed in 3 ms and DMAdoesinitiate a block transfer every 10 ms.WD pre-load = watchdog timeout pre-load (CRC_WDTOPLDx)BC pre-load = block complete timeout pre-load (CRC_BCTOPLDx)



www.ti.comModuleOperation

14.2.10.4UnderrunInterrupt

UnderruninterruptonlyoccursinAUTOmode.TheinterruptisgeneratedwhentheCRCValueRegisteris

notupdatedwiththecorrespondingsignaturewhenthedatapatterncounterfinishescounting.During

AUTOmode,CRCControllergeneratesDMArequesttoupdateCRCValueRegisterinsynchronizationto

thecorrespondingsectorofthememory.Signatureverfificationisalsoperformedifunderrunconditionis

detected.AndCRCfailinterruptisgeneratedatthesametimeastheunderruninterrupt.

14.2.10.5TimeoutInterrupt

Toensurethatthememorysystemisexaminedwithinapre-definedtimeframeandnolossofincoming

datathereisa24bittimeoutcounterperCRCchannel.The24bittimeoutdowncountercanbepre-

loadedwithtwodifferentpre-loadvalues,watchdogtimeoutpre-loadvalue(CRC_WDTOPLDx)andblock

completetimeoutpre-loadvalue(CRC_BCTOPLDx).Thetimeoutcounterisclockedbyaprescalerclock

whichispermanentlyrunningatdivision64ofHCLKclock.

FirstpatternofdatamustbetransferredbytheDMAbeforethetimeoutcounterexpires,Watchdog

timeoutpre-loadregister(CRC_WDTOPLDx)isusedastimeoutcounter.Blockcompletetimeoutpre-load

register(CRC_BCTOPLDx)isusedtocheckifonecompleteblockofdatapatternsarecompressedwithin

aspecifictimeframe.Thetimeoutcounterisfirstpre-loadedwithCRC_WDTOPLDxaftereitherAUTOor

Semi-CPUmodeisselectedandstartstodowncount.IfthetimeoutcounterexpiresbeforeDMAtransfers

anydatapatterntoPSASignatureRegisterthenatimeoutinterruptisgenerated.Anincomingdata

patternbeforethetimeoutcounterexpireswillautomaticallypre-loadthetimeoutcounterwith

CRC_BCTOPLDxtheblockcompletetimeoutpre-loadvalue.

Blockcompletetimeoutpre-loadvalueisusedtocheckitoneblockofdatapatternsarecompressed

withinagiventimelimit.Ifthetimeoutcounterpre-loadedwithCRC_BCTOPLDxvalueexpiresbeforeone

blockofdatapatternsarecompressedatimeoutinterruptisgenerated.Whenoneblock(patterncountx

sectorcount)ofdatapatternsarecompressedbeforethecounterhasexpired,thecounterispre-loaded

withCRC_WDTOPLDxvalueagain.Ifthetimeoutcounterispre-loadedwithzerothenthecounteris

disableandnotimeoutinterruptisgenerated.

InFigure14-6,atimergeneratesDMArequestevery10mstotriggeroneblock(patterncountxsector

count)transfer.SincewewanttomakesurethatDMAdoesstarttotransferablockevery10mswe

wouldsetthefirstpre-loadvalueto10msinCRC_WDTOPLDx.Wealsowanttomakesurethatoneblock

ofdatapatternsarecompressedwithin4ms.Withsucharequirement,wewouldsetthesecondpre-load

valueto4msinCRC_BCTOPLDxregister.

Figure14-6.TimeoutExample1

473

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TimerTimescaleHWDMAreqevery10ms

Data

10

9

8

7

6

5

4

3

4

3

2

10

9

8

7

6

5

4

3

2

1

0

4

4

3

2

10

9

8

7

6

5

4

4

3

2

10

9

0 ms10 ms20 ms30 ms3 ms15 ms25 msTimeoutCounterWDpre-load

BCpre-load

WDpre-load

BCpre-load

WDpre-load

BCpre-load

WDpre-load

timeoutinterruptWD pre-load = watchdog timeout pre-load (CRC_WDTOPLDx)BC pre-load = block complete timeout pre-load (CRC_BCTOPLDx)Note:Timeout interrupt is generated in this example since DMAcan not transfer the second block of data within 10ms timelimit and the reason may be that DMAis set up in fixed priority scheme and DMAis serving other higher priority channelsat the time before it can service the timer request.

TimerTimescaleHWDMAreqevery10ms

Data

10

9

8

7

6

5

4

3

4

3

2

1

0

10

9

8

7

6

4

3

2

1

0

10

9

8

7

6

4

3

2

1

0

10

9

8

7

6

0 ms10 ms20 ms30 ms6 ms16 ms26 msTimeoutCounterWDpre-load

BCpre-load

WDpre-load

BCpre-load

WDpre-load

BCpre-load

WDpre-load

time outinterrup

time outinterrup

time outinterrupWD pre-load = watchdog timeout pre-load (CRC_WDTOPLDx)BC pre-load = block complete timeout pre-load (CRC_BCTOPLDx)Note:Timeout interrupt is generated in this example since each block of data patterns are compressed in 6 ms and this isout of the 4ms time frame.



ModuleOperationwww.ti.com

Figure14-7.TimeoutExample2

Figure14-8.TimeoutExample3

474

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

14.2.10.6InterruptOffsetRegister

CRCControlleronlygeneratesoneinterruptrequesttointerruptmanager.Ainterruptoffsetregisteris

providedtoindicatethesourceofthependinginterruptwithhighestpriority.Table14-3showstheoffset

interruptvectoraddressofeachinterruptconditioninanascendingorderofpriority.

Table14-3.InterruptOffsetMapping

OffsetValue

InterruptCondition

0

Phantom

1h

Ch1CRCFail

2h

Ch2CRCFail

3h-8h

Reserved

9h

Ch1CompressionComplete

Ah

Ch2CompressionComplete

Bh-10h

Reserved

11h

Ch1Overrun

12h

Ch2Overrun

13h-18h

Reserved

19h

Ch1Underrun

1Ah

Ch2Underrun

1Bh-20h

Reserved

21h

Ch1Timeout

22h

Ch2Timeout

23h-24h

Reserved

14.2.10.7ErrorHandling

Whenaninterruptisgenerated,hostCPUshouldtakeappropriateactionstoidentifythesourceoferror

andrestarttherespectivechannelinDMAandCRCmodule.TorestartaCRCchannel,theusershould

performthefollowingstepsintheISR:

1.WritetosoftwareresetbitinCRC_CTRLregistertoresettherespectivePSASignatureRegister.

2.ResettheCHx_MODEbitsto“00”inCRC_CTRLregisterasDatacapturemode.

3.SettheCHx_MODEbitsinCRC_CTRLregistertodesirednewmodeagain.

4.Releasesoftwarereset.

ThehostCPUshouldusebytewritetorestarteachindividualchannel.

14.2.11CPUDataTrace

CRCchannel1canbeusedtosnoopFlash,SystemRAMandPeripheralBusMasterDatabuses.

However,atanyonepointonlyonebusissnooped.Itispossibletodisablethesnoopingofanyofthe

busesbyprogrammingCRC_BUS_SELregister.Whilesnoopingthedata,thereisapriorityscheme

implementedbetweenthebuses.PeripheralBusMasterhasthehighestpriorityfollowedbyFLash,Even

SystemRAMandOddSystemRAM.ForeachdatareadbyCPUonitsdatabusthesamedatais

compressedinthePSASignatureRegister.AwritetoPSASignatureRegisterdoesnotgetcompressed.

Therefore,itispossibletowriteaseedvalueintoPSASignatureRegisterbeforethebussnoopingtakes

place.Duringdatatracemode,allinterruptsandDMArequestlogicareinactive.Fornondoubleword

readonthedatabus,allun-selectedbytelanesarepaddedwithzeroduringcompression.

475

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Examplewww.ti.com

14.2.12PowerDownMode

CRCmodulecanbeputintopowerdownmodewhenthepowerdowncontrolbitPWDNisset.The

modulewakesupwhenthePWDNbitiscleared.WhenCRCcontrollerisinpowerdownmode,nodata

tracingalonewillhappen.However,ifCRCregistersareaccessedthendatatracehappensfromchannel

1.

14.2.13Emulation

Areadaccessfromaregisterinfunctionalmodecansometimestriggeracertaininternaleventtofollow.

Forexample,readinganinterruptoffsetregistertriggersaneventtoclearthecorrespondinginterrupt

statusflag.DuringemulationwhenSUSPENDsignalishigh,areadaccessfromanyregistershouldonly

returntheregistercontentstothebusandshouldnottriggerormaskanyeventasitwouldhavein

functionalmode.Thisistopreventdebuggerfromreadingtheinterruptoffsetregisterduringrefreshing

screenandcausethecorrespondinginterruptstatusflagtogetcleared.Timeoutcountersarestoppedto

generatetimeoutinterruptsinemulationmode.NoPeripheralMasterbuserrorshouldbegeneratedif

readingfromtheunimplementedlocations.Whenchannel1isplacedunderdatatrace,thePSASignature

RegisterdoesnotcompressanydatareadonCPUdatabuswhensuspendisactive.

14.2.14PeripheralBusInterface

CRCisaPeripheralslavemodule.Theregisterinterfaceissimilartootherperipheralmodules.CRC

supportsfollowingfeatures:

•Differentsizesofburstoperation.

•Alignedandunalignedaccesses.

•Abortisgeneratedforanyillegaladdressaccesses.

14.3Example

ThissectionillustratesseveralofthewaysinwhichtheCRCControllercanbeutilizedtoperformCRC.

14.3.1Example:AutoModeUsingTimeBasedEventTriggering

Alargememoryareawith2Mbyte(256kdoubleword)istobecheckedinthebackgroundofCPU.CRCis

tobeperformedevery1Kbyte(128doubleword).Thereforethereshouldbe2048pre-recordedCRC

values.Forillustrationpurpose,wemapchannel1CRCValueRegistertoDMAchannel1andchannel1

PSASignatureRegistertoDMAchannel2.AssumeallDMAtransfersarecarriedoutin64-bittransfer

size.

14.3.1.1DMASetup

•SetupDMAchannel1withthestartingaddressfromwhichthepre-determinedCRCvaluesare

stored.Setupthedestinationaddresstothememorymappedchannel1CRCValueRegister.Putthe

sourceaddressatpostincrementaddressingmodeandputthedestinationaddressatconstant

addressingmode.UsehardwareDMArequestforchannel1totriggeraframetransfer.

•SetupDMAchannel2withthesourceaddressfromwhichthecontentsofmemorytobeverified.Set

upthedestinationaddresstothememorymappedchannel1PSASignatureRegister.Programthe

elementtransfercountto128andtheframetransfercountto2048.Putthesourceaddressatpost

incrementaddressingmodeandputthedestinationaddressatconstantaddressmode.Usehardware

DMArequestforchannel2totriggeranentireblocktransfer.

14.3.1.2TimerSetup

Thetimercanbeanygeneralpurposetimerwhichiscapableofgeneratingatime-basedDMArequest.

•SetuptimertogenerateDMArequestassociatedwithDMAchannel2.Forexample,anOScansetup

thetimertogenerateaDMArequestevery10ms.

476

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExample

14.3.1.3CRCSetup

•Programthepatterncountto128.

•Programthesectorcountto2048.

•Forexample,wewanttheentire2Mbytestobecompressedwithin5ms.Wecanprogramtheblock

completetimeoutpre-load(CRC_BCTOPLDx)valueto15625(5ms/(1HCLKperiod×64))ifCRCis

operatingat200MHz.

•EnableAUTOmodeandallinterrupts.

AfterAUTOmodeisselected,CRCControllerautomaticallygeneratesaDMArequestonchannel1.

AroundthesametimethetimermodulealsogeneratesaDMArequestonDMAchannel2.Whenthefirst

incomingdatapatternarrivesatthePSASignatureRegister,theCRCControllerwillcompressit.After

sometime,theDMAcontrollerwouldupdatetheCRCValueRegisterwithapre-determinedvalue

matchingthecalculatedsignatureforthefirstsectorof12864bitdatapatterns.Afteronesectorofdata

patternsarecompressed,theCRCControllergenerateaCRCfailinterruptifsignaturestoredatthePSA

SectorSignatureRegisterdoesnotmatchtheCRCValueRegister.CRCControllergeneratesaDMA

requestonDMAchannel1whenonesectorofdatapatternsarecompressed.Thisroutinewillcontinue

untiltheentire2Mbyteareconsumed.Ifthetimeoutcounterreachedzerobeforetheentire2Mbytesare

compressedatimeoutinterruptisgenerated.After2MBytesaretransferred,theDMAcangeneratean

interrupttoCPU.TheentireoperationwillcontinueagainwhenDMArespondstotheDMArequestfrom

boththetimerandCRCController.TheCRCisperformedtotallywithoutanyCPUintervention.

14.3.2Example:AutoModeWithoutUsingTimeBasedTriggering

Asmallbuthighlysecuredmemoryareawith1kbytesistobecheckedinthebackgroundofCPU.CRCis

tobeperformedevery1Kbytes.Thereforethereisonlyonepre-recordedCRCvalue.Forillustration

purpose,wemapchannel1CRCValueRegistertoDMAchannel1andchannel1PSASignature

RegistertoDMAchannel2.AssumealltransferscarriedoutbyDMAarein64bittransfersize.

14.3.2.1DMASetup

•SetupDMAchannel1withthesourceaddressfromwhichthepre-determinedCRCvalueisstored.

Setupthedestinationaddresstothememorymappedchannel1CRCValueRegister.Putthesource

addressatconstantaddressingmodeandputthedestinationaddressatconstantaddressingmode.

UsehardwareDMArequestforchannel1.

•SetupDMAchannel2withthesourceaddressfromwhichthememoryareatobeverified.Setupthe

destinationaddresstothememorymappedchannel1PSASignatureRegister.Programtheelement

transfercountto128andtheframetransfercountto1.Putthesourceaddressatpostincrement

addressingmodeandputthedestinationaddressatconstantaddressmode.Generateasoftware

DMArequestonchannel2afterCRChascompleteditssetup.EnableautoinitiationforDMAchannel

2.

14.3.2.2CRCSetup

•Programthepatterncountto128.

•Programthesectorcountto1.

•Leavingthetimeoutcountregisterwiththeresetvalueofzeromeansnotimeoutinterruptisgenerated.

•EnableAUTOmodeandallinterrupts.

AfterAUTOmodeisselected,theCRCControllerautomaticallygeneratesaDMArequestonchannel1.

AtthesametimetheCPUgeneratesasoftwareDMArequestonDMAchannel2.Whenthefirst

incomingdatapatternarrivesatthePSASignatureRegister,theCRCControllerwillcompressit.After

sometime,theDMAcontrollerwouldupdatetheCRCValueRegisterwithapre-determinedvalue

matchingthecalculatedsignatureforthefirstsectorof12864bitdatapatterns.Afteronesectorofdata

patternsarecompressed,theCRCControllergeneratesaCRCfailinterruptifsignaturestoredatthePSA

SectorSignatureRegisterdoesnotmatchtheCRCValueRegister.CRCControllergeneratesaDMA

requestonDMAchannel1againafteronesectoriscompressed.After1kbytesaretransferred,theDMA

cangenerateaninterrupttoCPU.RespondingtotheDMAinterruptCPUcanrestarttheCRCroutineby

generatingasoftwareDMArequestontochannel2again.

477

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Examplewww.ti.com

14.3.3Example:Semi-CPUMode

IfDMAcontrollerisavailableinasystem,theCRCmodulecanalsooperateinsemi-CPUmode.This

meansthatCPUcanstillmakeuseoftheDMAtoperformdatapatternstransfertoCRCcontrollerinthe

background.Thedifferencebetweensemi-CPUmodeandAUTOmodeisthatCRCcontrollerdoesnot

automaticallyperformthesignatureverification.CRCcontrollersgeneratesacompressioncomplete

interrupttoCPUwhentheonesectorofdatapatternsarecompressed.CPUneedstoperformthe

signatureverificationitself.

Amemoryareawith2MbyteistobeverifiedwiththehelpoftheCPU.CRCoperationistobeperformed

every1Kbyte.Sincethereare2Mbyte(256kdoublewords)ofmemorytobecheckandwewantto

performaCRCevery1Kbyte(128doublewords)andthereforethereshouldbe2048pre-recordedCRC

values.InSemi-CPUmode,theCRCValueRegisterisnotupdatedandcontainsindeterminatedata.

14.3.3.1DMASetup

SetupDMAchannel1withthesourceaddressfromwhichthememoryareatobeverifiedaremapped.

Setupthedestinationaddresstothememorymappedchannel1PSASignatureRegister.Putthestarting

addressatpostincrementaddressingmodeandputthedestinationaddressatconstantaddressmode.

UsehardwareDMArequesttotriggeranentireblocktransferforchannel1.DisableautoinitiationforDMA

channel1.

14.3.3.2TimerSetup

ThetimercanbeanygeneralpurposetimerwhichiscapableofgeneratingatimebasedDMArequest.

SetuptimertogenerateDMArequestassociatedwithDMAchannel1.Forexample,anOScansetup

thetimertogenerateaDMArequestevery10ms.

14.3.3.3CRCSetup

•Programthepatterncountto128.

•Programthesectorcountto2048.

•Forexample,wewanttheentire2Mbytestobecompressedwithin5ms.Wecanprogramtheblock

completetimeoutpre-loadvalueto15625(5ms/(1HCLKperiod×64))ifCRCisoperatingat200

MHz.

•EnableSemi-CPUmodeandenableallinterrupts.

ThetimermodulefirstgeneratesaDMArequestonDMAchannel1whenitisenabled.Whenthefirst

incomingdatapatternarrivesatthePSASignatureRegister,theCRCcontrollerwillcompressit.Afterone

sectorofdatapatternsarecompressed,theCRCcontrollergenerateacompressioncompleteinterrupt.

UponrespondingtotheinterrupttheCPUwouldreadfromthePSASectorSignatureRegister.Itisupto

theCPUonhowtodealwiththePSAvaluejustread.Itcancompareittoaknownsignaturevalueorit

canwriteittoanothermemorylocationtobuildasignaturefileoreventransferthesignatureoutofthe

deviceviaSCIorSPI.Thisroutinewillcontinueuntiltheentire2Mbyteareconsumed.Thelatencyofthe

interruptresponsefromCPUcancauseoverruncondition.IfCPUdoesnotreadfromPSASector

SignatureRegisterbeforethePSAvalueisoverriddenwiththesignatureofthenextsectorofmemory,an

overruninterruptwillbegeneratedbyCRCcontroller.

14.3.4Example:Full-CPUMode

InasystemwithouttheavailabilityofDMAcontroller,theCRCroutinecanbeoperatedbyCPUprovided

theCPUhasenoughthroughput.CPUneedstoreadfromthememoryareafromwhichCRCistobe

performed.

Amemoryareawith2MbyteistobecheckedwiththehelpoftheCPU.CRCverificationistobe

performedevery1Kbyte.InCPUmode,theCRCValueRegisterisnotupdatedandcontains

indeterminatedata.

478

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.3.4.1CRCSetup

•Allcontrolregisterscanbeleftintheirresetstate.OnlyenableFull-CPUmode.

CPUitselfreadsfromthememoryandwritethedatatothePSASignatureRegisterinsideCRC

Controller.WhenthefirstincomingdatapatternarrivesatthePSASignatureRegister,theCRCController

willcompressit.After2MBytesdatapatternsarecompressed,CPUcanreadfromthePSASignature

Register.ItisuptotheCPUonhowtodealwiththePSAsignaturevaluejustread.Itcancompareittoa

knownsignaturevaluestoredatanothermemorylocation.

14.4CRCControlRegisters

Allregistersareinwordboundary.64,32,16,and8bitwriteaccessesaresupportedtoallregisters.

Table14-4.CRCControlRegisters

Offset

Acronym

RegisterDescription

Section

0h

CRC_CTRL0

CRCGlobalControlRegister

Section14.4.1

8h

CRC_CTRL1

CRCGlobalControlRegister1

Section14.4.2

10h

CRC_CTRL2

CRCGlobalControlRegister2

Section14.4.3

18h

CRC_INTS

CRCInterruptEnableSetRegister

Section14.4.4

20h

CRC_INTR

CRCInterruptEnableResetRegister

Section14.4.5

28h

CRC_STATUS

CRCInterruptStatusRegister

Section14.4.6

30h

CRC_INT_OFFS_ET_REG

CRCInterruptOffsetRegister

Section14.4.7

38h

CRC_BUSY

CRCBusyRegister

Section14.4.8

40h

CRC_PCOUNT_REG1

CRCChannel1PatternCounterPreloadRegister

Section14.4.9

44h

CRC_SCOUNT_REG1

CRCChannel1SectorCounterPreloadRegister

Section14.4.10

48h

CRC_CURSEC_REG1

CRCChannel1CurrentSectorRegister

Section14.4.11

4Ch

CRC_WDTOPLD1

CRCChannel1WatchdogTimeoutPreloadRegister

Section14.4.12

50h

CRC_BCTOPLD1

CRCChannel1BlockCompleteTimeoutPreloadRegister

Section14.4.13

60h

PSA_SIGREGL1

Channel1PSASignatureLowRegister

Section14.4.14

64h

PSA_SIGREGH1

Channel1PSASignatureHighRegister

Section14.4.15

68h

CRC_REGL1

Channel1CRCValueLowRegister

Section14.4.16

6Ch

CRC_REGH1

Channel1CRCValueHighRegister

Section14.4.17

70h

PSA_SECSIGREGL1

Channel1PSASectorSignatureLowRegister

Section14.4.18

74h

PSA_SECSIGREGH1

Channel1PSASectorSignatureHighRegister

Section14.4.19

78h

RAW_DATAREGL1

Channel1RawDataLowRegister

Section14.4.20

7Ch

RAW_DATAREGH1

Channel1RawDataHighRegister

Section14.4.21

80h

CRC_PCOUNT_REG2

CRCChannel2PatternCounterPreloadRegister

Section14.4.22

84h

CRC_SCOUNT_REG2

CRCChannel2SectorCounterPreloadRegister

Section14.4.23

88h

CRC_CURSEC_REG2

CRCCurrentSectorRegister2

Section14.4.24

8Ch

CRC_WDTOPLD2

CRCChannel2WatchdogTimeoutPreloadRegisterA

Section14.4.25

90h

CRC_BCTOPLD2

CRCChannel2BlockCompleteTimeoutPreloadRegisterB

Section14.4.26

A0h

PSA_SIGREGL2

Channel2PSASignatureLowRegister

Section14.4.27

A4h

PSA_SIGREGH2

Channel2PSASignatureHighRegister

Section14.4.28

A8h

CRC_REGL2

Channel2CRCValueLowRegister

Section14.4.29

ACh

CRC_REGH2

Channel2CRCValueHighRegister

Section14.4.30

B0h

PSA_SECSIGREGL2

Channel2PSASectorSignatureLowRegister

Section14.4.31

B4h

PSA_SECSIGREGH2

Channel2PSASectorSignatureHighRegister

Section14.4.32

B8h

RAW_DATAREGL2

Channel2RawDataLowRegister

Section14.4.33

BCh

RAW_DATAREGH2

Channel2RawDataHighRegister

Section14.4.34

140h

CRC_BUS_SEL

DataBusSelectionRegister

Section14.4.35

479

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.1CRCGlobalControlRegister0(CRC_CTRL0)

Figure14-9.CRCGlobalControlRegister0(CRC_CTRL0)[offset=00h]

31

16

Reserved

R-0

15

9

8

Reserved

CH2_PSA_SWREST

R-0

R/W-0

7

1

0

Reserved

CH1_PSA_SWREST

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-5.CRCGlobalControlRegister0(CRC_CTRL0)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8

CH2_PSA_SWREST

Channel2PSASoftwareReset.Whenset,thePSASignatureRegisterisresettoallzero.

Softwareresetdoesnotresetsoftwareresetbititself.Therefore,CPUisrequiredtoclear

thisbitbywritinga'0'.

0

PSASignatureRegisternotreset

1

PSASignatureRegisterreset

7-1

Reserved

0

Readsreturn0.Writeshavenoeffect.

0

CH1_PSA_SWREST

Channel1PSASoftwareReset.Whenset,thePSASignatureRegisterisresettoallzero.

Softwareresetdoesnotresetsoftwareresetbititself.Therefore,CPUisrequiredtoclear

thisbitbywritinga'0'.

0

PSASignatureRegisternotreset

1

PSASignatureRegisterreset

14.4.2CRCGlobalControlRegister(CRC_CTRL1)

Figure14-10.CRCGlobalControlRegister1(CRC_CTRL1)[offset=08h]

31

16

Reserved

R-0

15

1

0

Reserved

PWDN

R-0

RW-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-6.CRCGlobalControlRegister1(CRC_CTRL1)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturn0.Writeshavenoeffect.

0

PWDN

PowerDown.Whenset,CRCmoduleisputinpower-downmode

0

CRCisnotinpower-downmode

1

CRCisinpower-downmode

480

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.3CRCGlobalControlRegister2(CRC_CTRL2)

Figure14-11.CRCGlobalControlRegister2(CRC_CTRL2)[offset=10h]

31

16

Reserved

R-0

15

10

9

8

Reserved

CH2_MODE

R-0

R/WP-0

7

5

4

3

2

1

0

Reserved

CH1_TRACEEN

Reserved

CH1_MODE

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table14-7.CRCGlobalControlRegister2(CRC_CTRL2)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readsreturn0.Writeshavenoeffect.

9-8

CH2_MODE

Channel2ModeSelection

0

DataCapturemode.Inthismode,thePSASignatureRegisterdoesnotcompressdatawhenit

iswritten.AnydatawrittentoPSASignatureRegisterissimplycapturedbyPSASignature

Registerwithoutanycompression.ThismodecanbeusedtoplantseedvalueintothePSA

register.

1h

AUTOMode

2h

Semi-CPUMode

3h

Full-CPUMode

7-5

Reserved

0

Readsreturn0.Writeshavenoeffect.

4

CH1_TRACEEN

Channel1DataTraceEnable.Whenset,thechannelisputintodatatracemode.Thechannel

snoopsontheCPUPeripheralBusMaster,Flash,SystemRAMbusesforanyreadtransaction.

AnyreaddataonthesebusesiscompressedbythePSASignatureRegister.Whensuspendis

on,thePSASignatureRegisterdoesnotcompressanyreaddataonthesebuses.

0

DataTracedisable

1

DataTraceenable

3-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1-0

CH1_MODE

Channel1ModeSelection

0

DataCapturemode.Inthismode,thePSASignatureRegisterdoesnotcompressdatawhenit

iswritten.AnydatawrittentoPSASignatureRegisterissimplycapturedbyPSASignature

Registerwithoutanycompression.ThismodecanbeusedtoplantseedvalueintothePSA

register.

1h

AUTOMode

2h

Semi-CPUMode

3h

Full-CPUMode

481

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.4CRCInterruptEnableSetRegister(CRC_INTS)

Figure14-12.CRCInterruptEnableSetRegister(CRC_INTS)[offset=18h]

31

16

Reserved

R-0

15

13

12

11

10

9

8

Reserved

CH2_TIMEOUTENS

CH2_UNDERENS

CH2_OVERENS

CH2_CRCFAILENS

CH2_CCITENS

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

5

4

3

2

1

0

Reserved

CH1_TIMEOUTENS

CH1_UNDERENS

CH1_OVERENS

CH1_CRCFAILENS

CH1_CCITENS

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table14-8.CRCInterruptEnableSetRegister(CRC_INTS)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readsreturn0.Writeshavenoeffect.

12

CH2_TIMEOUTENS

Channel2TimeoutInterruptEnableBit.Writingaonetothisbitenablesthetimeout

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

TimeoutInterruptdisable

1

TimeoutInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

TimeoutInterruptenable

11

CH2_UNDERENS

Channel2UnderrunInterruptEnableBit.Writingaonetothisbitenablestheunderrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

UnderrunInterruptdisable

1

UnderrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

UnderrunInterruptenable

10

CH2_OVERENS

Channel2OverrunInterruptEnableBit.Writingaonetothisbitenablestheoverrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

OverrunInterruptdisable

1

OverrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

OverrunInterruptenable

482

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

Table14-8.CRCInterruptEnableSetRegister(CRC_INTS)FieldDescriptions(continued)

Bit

Field

Value

Description

9

CH2_CRCFAILENS

Channel2CRCFailInterruptEnableBit.WritingaonetothisbitenablestheCRCfail

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

CRCFailInterruptdisable

1

CRCFailInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CRCFailInterruptenable

8

CH2_CCITENS

Channel2CompressionCompleteInterruptEnableBit.Writingaonetothisbitenables

theCRCfailinterrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus

(interruptenable/disable).

UserandPrivilegedmode(read):

0

CompressionCompleteInterruptdisable

1

CompressionCompleteInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CompressionCompleteInterruptenable

7-5

Reserved

0

Readsreturn0.Writeshavenoeffect.

4

CH1_TIMEOUTENS

Channel1TimeoutInterruptEnableBit.Writingaonetothisbitenablesthetimeout

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

TimeoutInterruptdisable

1

TimeoutInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

TimeoutInterruptenable

3

CH1_UNDERENS

Channel1UnderrunInterruptEnableBit.Writingaonetothisbitenablestheunderrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

UnderrunInterruptdisable

1

UnderrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

UnderrunInterruptenable

2

CH1_OVERENS

Channel1OverrunInterruptEnableBit.Writingaonetothisbitenablestheoverrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

OverrunInterruptdisable

1

OverrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

OverrunInterruptenable

483

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

Table14-8.CRCInterruptEnableSetRegister(CRC_INTS)FieldDescriptions(continued)

Bit

Field

Value

Description

1

CH1_CRCFAILENS

Channel1CRCFailInterruptEnableBit.WritingaonetothisbitenablestheCRCfail

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

CRCFailInterruptdisable

1

CRCFailInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CRCFailInterruptenable

0

CH1_CCITENS

Channel1CompressionCompleteInterruptEnableBit.Writingaonetothisbitenables

theCRCfailinterrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus

(interruptenable/disable).

UserandPrivilegedmode(read):

0

CompressionCompleteInterruptdisable

1

CompressionCompleteInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CompressionCompleteInterruptenable

484

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.5CRCInterruptEnableResetRegister(CRC_INTR)

Figure14-13.CRCInterruptEnableResetRegister(CRC_INTR)[offset=20h]

31

16

Reserved

R-0

15

13

12

11

10

9

8

Reserved

CH2_TIMEOUTENR

CH2_UNDERENR

CH2_OVERENR

CH2_CRCFAILENR

CH2_CCITENR

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

5

4

3

2

1

0

Reserved

CH1_TIMEOUTENR

CH1_UNDERENR

CH1_OVERENR

CH1_CRCFAILENR

CH1_CCITENR

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table14-9.CRCInterruptEnableResetRegister(CRC_INTR)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readsreturn0.Writeshavenoeffect.

12

CH2_TIMEOUTENR

Channel2TimeoutInterruptEnableBit.Writingaonetothisbitdisablesthetimeout

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

TimeoutInterruptdisable

1

TimeoutInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

TimeoutInterruptdisable

11

CH2_UNDERENR

Channel2UnderrunInterruptEnableBit.Writingaonetothisbitdisablestheunderrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

UnderrunInterruptdisable

1

UnderrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

UnderrunInterruptdisable

10

CH2_OVERENR

Channel2OverrunInterruptEnableBit.Writingaonetothisbitdisablestheoverrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

OverrunInterruptdisable

1

OverrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

OverrunInterruptdisable

485

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

Table14-9.CRCInterruptEnableResetRegister(CRC_INTR)FieldDescriptions(continued)

Bit

Field

Value

Description

9

CH2_CRCFAILENR

Channel2CRCFailInterruptEnableBit.WritingaonetothisbitdisablestheCRCfail

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

CRCFailInterruptdisable

1

CRCFailInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CRCFailInterruptdisable

8

CH2_CCITENR

Channel2CompressionCompleteInterruptEnableBit.Writingaonetothisbitdisables

theCRCfailinterrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus

(interruptenable/disable).

UserandPrivilegedmode(read):

0

CompressionCompleteInterruptdisable

1

CompressionCompleteInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CompressionCompleteInterruptdisable

7-5

Reserved

0

Readsreturn0.Writeshavenoeffect.

4

CH1_TIMEOUTENR

Channel1TimeoutInterruptEnableBit.Writingaonetothisbitdisablesthetimeout

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

TimeoutInterruptdisable

1

TimeoutInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

TimeoutInterruptdisable

3

CH1_UNDERENR

Channel1UnderrunInterruptEnableBit.Writingaonetothisbitdisablestheunderrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

UnderrunInterruptdisable

1

UnderrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

UnderrunInterruptdisable

2

CH1_OVERENR

Channel1OverrunInterruptEnableBit.Writingaonetothisbitdisablestheoverrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

OverrunInterruptdisable

1

OverrunInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

OverrunInterruptdisable

486

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

Table14-9.CRCInterruptEnableResetRegister(CRC_INTR)FieldDescriptions(continued)

Bit

Field

Value

Description

1

CH1_CRCFAILENR

Channel1CRCFailInterruptEnableBit.WritingaonetothisbitdisablestheCRCfail

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

UserandPrivilegedmode(read):

0

CRCFailInterruptdisable

1

CRCFailInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CRCFailInterruptdisable

0

CH1_CCITENR

Channel1CompressionCompleteInterruptEnableBit.Writingaonetothisbitdisables

theCRCfailinterrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus

(interruptenable/disable).

UserandPrivilegedmode(read):

0

CompressionCompleteInterruptdisable

1

CompressionCompleteInterruptenable

UserandPrivilegedmode(write):

0

Hasnoeffect

1

CompressionCompleteInterruptdisable

487

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.6CRCInterruptStatusRegister(CRC_STATUS)

Figure14-14.CRCInterruptStatusRegister(CRC_STATUS)[offset=28h]

31

16

Reserved

R-0

15

13

12

11

10

9

8

Reserved

CH2_TIMEOUT

CH2_UNDER

CH2_OVER

CH2_CRCFAIL

CH2_CCIT

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

5

4

3

2

1

0

Reserved

CH1_TIMEOUT

CH1_UNDER

CH1_OVER

CH1_CRCFAIL

CH1_CCIT

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table14-10.CRCInterruptStatusRegister(CRC_STATUS)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readsreturn0.Writeshavenoeffect.

12

CH2_TIMEOUT

Channel2CRCTimeoutStatusFlag.Thisbitisclearedbywritinga'1'toitonly.Writing'0'

hasnoeffect.ThisbitissetinbothAUTOandSemi-CPUmode

0

Notimeoutinterruptisactive

1

Timeoutinterruptisactive

11

CH2_UNDER

Channel2CRCUnderrunStatusFlag.Thisbitisclearedbywritinga'1'toitonly.Writing'0'

hasnoeffect.ThisbitissetinAUTOmodeonly.

0

NoUnderrunInterruptisactive

1

UnderrunInterruptisactive

10

CH2_OVER

Channel2CRCOverrunStatusFlag.Thisbitisclearedbywritinga'1'toitonly.Writing'0'

hasnoeffect.ThisbitissetineitherAUTOorSemi-CPUmode.

0

NoOverrunInterruptisactive

1

OverrunInterruptisactive

9

CH2_CRCFAIL

Channel2CRCCompareFailStatusFlag.Thisbitisclearedbywritinga'1'toitonly.Writing

'0'hasnoeffect.ThisbitissetinAUTOmodeonly.

0

NoCRCFailInterruptisactive

1

CRCFailInterruptisactive

8

CH2_CCIT

Channel2CRCPatternCompressionCompleteStatusFlag.Thisbitisclearedbywritinga

'1'toitonly.Writing'0'hasnoeffect.ThisbitisonlysetinSemi-CPUmode.

0

Hasnoeffect

1

CompressionCompleteInterruptdisable

7-5

Reserved

0

Readsreturn0.Writeshavenoeffect.

4

CH1_TIMEOUT

Channel1CRCTimeoutStatusFlag.Writingaonetothisbitenablethetimeoutinterrupt.

Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interruptenable/disable).

0

Hasnoeffect

1

TimeoutInterruptdisable

3

CH1_UNDER

Channel1UnderrunInterruptEnableBit.Writingaonetothisbitdisabletheunderrun

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

0

Hasnoeffect

1

UnderrunInterruptdisable

2

CH1_OVER

Channel1OverrunInterruptEnableBit.Writingaonetothisbitdisabletheoverruninterrupt.

Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interruptenable/disable).

0

Hasnoeffect

1

OverrunInterruptdisable

488

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

Table14-10.CRCInterruptStatusRegister(CRC_STATUS)FieldDescriptions(continued)

Bit

Field

Value

Description

1

CH1_CRCFAIL

Channel1CRCFailInterruptEnableBit.WritingaonetothisbitdisabletheCRCfail

interrupt.Writingazerohasnoeffect.Readingfromthisbitgivesthestatus(interrupt

enable/disable).

0

Hasnoeffect

1

CRCFailInterruptdisable

0

CH1_CCIT

Channel1CRCPatternCompressionCompleteStatusFlag.Writingaonetothisbitdisable

theCompressionCompleteinterrupt.Writingazerohasnoeffect.Readingfromthisbitgives

thestatus(interruptenable/disable).

0

Hasnoeffect

1

CompressionCompleteInterruptdisable

14.4.7CRCInterruptOffset(CRC_INT_OFFSET_REG)

Figure14-15.CRCInterruptOffset(CRC_INT_OFFSET_REG)[offset=30h]

31

16

Reserved

R-0

15

8

7

0

Reserved

OFSTREG

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-11.CRCInterruptOffset(CRC_INT_OFFSET_REG)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-0

OFSTREG

CRCInterruptOffset.Thisregisterindicatesthehighestprioritypendinginterruptvectoraddress.

Readingtheoffsetregisterautomaticallyclearstherespectiveinterruptflag.

0

Phantom

1h

Ch1CRCFail

2h

Ch2CRCFail

3h-8h

Reserved

9h

Ch1CompressionComplete

Ah

Ch2CompressionComplete

Bh-10h

Reserved

11h

Ch1Overrun

12h

Ch2Overrun

13h-18h

Reserved

19h

Ch1Underrun

1Ah

Ch2Underrun

1Bh-20h

Reserved

21h

Ch1Timeout

22h

Ch2Timeout

23h-FFh

Reserved

489

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.8CRCBusyRegister(CRC_BUSY)

Figure14-16.CRCBusyRegister(CRC_BUSY)[offset=38h]

31

16

Reserved

R-0

15

9

8

7

1

0

Reserved

CH2_BUSY

Reserved

CH1_BUSY

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-12.CRCBusyRegister(CRC_BUSY)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8

CH2_BUSY

CH2_BUSY.DuringAUTOorSemi-CPUmode,thebusyflagissetwhenthefirstdatapatternof

theblockiscompressedandremainssetuntilthelastdatapatternoftheblockiscompressed.The

flagisclearedwhenthelastdatapatternoftheblockiscompressed.

7-1

Reserved

0

Readsreturn0.Writeshavenoeffect.

0

CH1_BUSY

CH1_BUSY.DuringAUTOorSemi-CPUmode,thebusyflagissetwhenthefirstdatapatternof

theblockiscompressedandremainssetuntilthelastdatapatternoftheblockiscompressed.The

flagisclearedwhenthelastdatapatternoftheblockiscompressed.

14.4.9CRCPatternCounterPreloadRegister1(CRC_PCOUNT_REG1)

Figure14-17.CRCPatternCounterPreloadRegister1(CRC_PCOUNT_REG1)[offset=40h]

31

20

19

16

Reserved

CRC_PAT_COUNT1

R-0

R/W-0

15

0

CRC_PAT_COUNT1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-13.CRCPatternCounterPreloadRegister1(CRC_PCOUNT_REG1)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readsreturn0.Writeshavenoeffect.

19-0

CRC_PAT_COUNT1

Channel1PatternCounterPreloadRegister.Thisregistercontainsthenumberofdata

patternsinonesectortobecompressedbeforeaCRCisperformed.

490

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.10CRCSectorCounterPreloadRegister1(CRC_SCOUNT_REG1)

Figure14-18.CRCSectorCounterPreloadRegister1(CRC_SCOUNT_REG1)[offset=44h]

31

16

Reserved

R-0

15

0

CRC_SEC_COUNT1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-14.CRCSectorCounterPreloadRegister1(CRC_SCOUNT_REG1)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturn0.Writeshavenoeffect.

15-0

CRC_SEC_COUNT1

Channel1SectorCounterPreloadRegister.Thisregistercontainsthenumberofsectors

inoneblockofmemory.

14.4.11CRCCurrentSectorRegister1(CRC_CURSEC_REG1)

Figure14-19.CRCCurrentSectorPreloadRegister1(CRC_CURSEC_REG1)[offset=48h]

31

16

Reserved

R-0

15

0

CRC_CURSEC1

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-15.CRCCurrentSectorRegister1(CRC_CURSEC_REG1)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturn0.Writeshavenoeffect.

15-0

CRC_CURSEC1

Channel1CurrentSectorIDRegister.InAUTOmode,thisregistercontainsthecurrent

sectornumberofwhichthesignatureverificationfails.Thesectorcounterisafreerunningup

counter.Whenasectorfails,theerroneoussectornumberisloggedintocurrentsectorID

registerandtheCRCfailinterruptisgeneratedThesectorIDregisterisfrozenuntilitisread

andtheCRCfailstatusbitisclearedbyCPU.Whileitisfrozen,itdoesnotcaptureanother

erroneoussectornumber.Whenthisconditionhappens,anoverruninterruptisgenerated

instead.OncetheregisterisreadandtheCRCfailinterruptflagiscleareditcancapturenew

erroneoussectornumber.InSemi-CPUmode,thisregisterisusedtoindicatethesector

numberforwhichthecompressioncompletehaslasthappened.

491

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.12CRCChannel1WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD1)

Figure14-20.CRCChannel1WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD1)[offset=

4Ch]

31

24

23

16

Reserved

CRC_WDTOPLD1

R-0

R/W-0

15

0

CRC_WDTOPLD1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-16.CRCChannel1WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD1)Field

Descriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturn0.Writeshavenoeffect.

23-0

CRC_WDTOPLD1

Channel1WatchdogTimeoutCounterPreloadRegister.Thisregistercontainsthenumber

ofclockcycleswithinwhichtheDMAmusttransferthenextblockofdatapatterns.InSemi-

CPUmode,thisregisterisusedtoindicatethesectornumberforwhichthecompression

completehaslasthappened.

14.4.13CRCChannel1BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD1)

Figure14-21.CRCChannel1BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD1)

[offset=50h]

31

24

23

16

Reserved

CRC_BCTOPLD1

R-0

R/W-0

15

0

CRC_BCTOPLD1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-17.CRCChannel1BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD1)Field

Descriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturn0.Writeshavenoeffect.

23-0

CRC_BCTOPLD1

Channel1BlockCompleteTimeoutCounterPreloadRegister.Thisregistercontainsthe

numberofclockcycleswithinwhichtheCRCforanentireblockneedstocompletebeforea

timeoutinterruptisgenerated.

492

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.14Channel1PSASignatureLowRegister(PSA_SIGREGL1)

Figure14-22.Channel1PSASignatureLowRegister(PSA_SIGREGL1)[offset=60h]

31

0

PSASIG1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-18.Channel1PSASignatureLowRegister(PSA_SIGREGL1)FieldDescriptions

Bit

Field

Description

31-0

PSASIG1

Channel1PSASignatureLowRegister.ThisregistercontainsthevaluestoredatPSASIG1[31:0]

register.

14.4.15Channel1PSASignatureHighRegister(PSA_SIGREGH1)

Figure14-23.Channel1PSASignatureHighRegister(PSA_SIGREGH1)[offset=64h]

31

0

PSASIG1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-19.Channel1PSASignatureHighRegister(PSA_SIGREGH1)FieldDescriptions

Bit

Field

Description

31-0

PSASIG1

Channel1PSASignatureHighRegister.ThisregistercontainsthevaluestoredatPSASIG1[63:32]

register.

14.4.16Channel1CRCValueLowRegister(CRC_REGL1)

Figure14-24.Channel1CRCValueLowRegister(CRC_REGL1)[offset=68h]

31

0

CRC1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-20.Channel1CRCValueLowRegister(CRC_REGL1)FieldDescriptions

Bit

Field

Description

31-0

CRC1

Channel1CRCValueLowRegister.Thisregistercontainsthecurrentknowngoodsignaturevalue

storedatCRC1[31:0]register.

493

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.17Channel1CRCValueHighRegister(CRC_REGH1)

Figure14-25.Channel1CRCValueHighRegister(CRC_REGH1)[offset=6Ch]

31

0

CRC1

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-21.Channel1CRCValueHighRegister(CRC_REGH1)FieldDescriptions

Bit

Field

Description

31-0

CRC1

Channel1CRCValueLowRegister.Thisregistercontainsthecurrentknowngoodsignaturevalue

storedatCRC1[63:32]register.

14.4.18Channel1PSASectorSignatureLowRegister(PSA_SECSIGREGL1)

Figure14-26.Channel1PSASectorSignatureLowRegister(PSA_SECSIGREGL1)[offset=70h]

31

0

PSASECSIG1

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-22.Channel1PSASectorSignatureLowRegister(PSA_SECSIGREGL1)Field

Descriptions

Bit

Field

Description

31-0

PSASECSIG1

Channel1PSASectorSignatureLowRegister.Thisregistercontainsthevaluestoredat

PSASECSIG1[31:0]register.

14.4.19Channel1PSASectorSignatureHighRegister(PSA_SECSIGREGH1)

Figure14-27.Channel1PSASectorSignatureHighRegister(PSA_SECSIGREGH1)[offset=74h]

31

0

PSASECSIG1

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-23.Channel1PSASectorSignatureHighRegister(PSA_SECSIGREGH1)Field

Descriptions

Bit

Field

Description

31-0

PSASECSIG1

Channel1PSASectorSignatureHighRegister.Thisregistercontainsthevaluestoredat

PSASECSIG1[63:32]register.

494

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.20Channel1RawDataLowRegister(RAW_DATAREGL1)

Figure14-28.Channel1RawDataLowRegister(RAW_DATAREGL1)[offset=78h]

31

0

RAW_DATA1

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-24.Channel1RawDataLowRegister(RAW_DATAREGL1)FieldDescriptions

Bit

Field

Description

31-0

RAW_DATA1

Channel1RawDataLowRegister.Thisregistercontainsbits31:0oftheuncompressedrawdata.

14.4.21Channel1RawDataHighRegister(RAW_DATAREGH1)

Figure14-29.Channel1RawDataHighRegister(RAW_DATAREGH1)[offset=7Ch]

31

0

RAW_DATA1

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-25.Channel1RawDataHighRegister(RAW_DATAREGH1)FieldDescriptions

Bit

Field

Description

31-0

RAW_DATA1

Channel1RawDataHighRegister.Thisregistercontainsbits63:32oftheuncompressedrawdata.

14.4.22CRCPatternCounterPreloadRegister2(CRC_PCOUNT_REG2)

Figure14-30.CRCPatternCounterPreloadRegister2(CRC_PCOUNT_REG2)[offset=80h]

31

18

19

16

Reserved

CRC_PAT_COUNT2

R-0

R/W-0

15

0

CRC_PAT_COUNT2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-26.CRCPatternCounterPreloadRegister2(CRC_PCOUNT_REG2)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readsreturn0.Writeshavenoeffect.

19-0

CRC_PAT_COUNT2

Channel2PatternCounterPreloadRegister.Thisregistercontainsthenumberofdata

patternsinonesectortobecompressedbeforeaCRCisperformed.

495

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.23CRCSectorCounterPreloadRegister2(CRC_SCOUNT_REG2)

Figure14-31.CRCSectorCounterPreloadRegister2(CRC_SCOUNT_REG2)[offset=84h]

31

16

Reserved

R-0

15

0

CRC_SEC_COUNT2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-27.CRCSectorCounterPreloadRegister2(CRC_SCOUNT_REG2)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturn0.Writeshavenoeffect.

15-0

CRC_SEC_COUNT2

Channel2SectorCounterPreloadRegister.Thisregistercontainsthenumberofsectors

inoneblockofmemory.

14.4.24CRCCurrentSectorRegister2(CRC_CURSEC_REG2)

Figure14-32.CRCCurrentSectorRegister2(CRC_CURSEC_REG2)[offset=88h]

31

16

Reserved

R-0

15

0

CRC_CURSEC2

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-28.CRCCurrentSectorRegister2(CRC_CURSEC_REG2)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturn0.Writeshavenoeffect.

15-0

CRC_CURSEC2

Channel2CurrentSectorIDRegister.InAUTOmode,thisregistercontainsthecurrent

sectornumberofwhichthesignatureverificationfails.Thesectorcounterisafreerunning

upcounter.Whenasectorfails,theerroneoussectornumberisloggedintocurrentsector

IDregisterandtheCRCfailinterruptisgeneratedThesectorIDregisterisfrozenuntilitis

readandtheCRCfailstatusbitisclearedbyCPU.Whileitisfrozen,itdoesnotcapture

anothererroneoussectornumber.Whenthisconditionhappens,anoverruninterruptis

generatedinstead.OncetheregisterisreadandtheCRCfailinterruptflagiscleareditcan

capturenewerroneoussectornumber.InSemi-CPUmode,thisregisterisusedtoindicate

thesectornumberforwhichthecompressioncompletehaslasthappened.

496

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.25CRCChannel2WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD2)

Figure14-33.CRCChannel2WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD2)[offset=

8Ch]

31

24

23

16

Reserved

CRC_WDTOPLD2

R-0

R/W-0

15

0

CRC_WDTOPLD2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-29.CRCChannel2WatchdogTimeoutPreloadRegisterA(CRC_WDTOPLD2)Field

Descriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturn0.Writeshavenoeffect.

23-0

CRC_WDTOPLD2

Channel2WatchdogTimeoutCounterPreloadRegister.Thisregistercontainsthenumber

ofclockcycleswithinwhichtheDMAmusttransferthenextblockofdatapatterns.InSemi-

CPUmode,thisregisterisusedtoindicatethesectornumberforwhichthecompression

completehaslasthappened.

14.4.26CRCChannel2BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD2)

Figure14-34.CRCChannel2BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD2)

[offset=90h]

31

24

23

16

Reserved

CRC_BCTOPLD2

R-0

R/W-0

15

0

CRC_BCTOPLD2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-30.CRCChannel2BlockCompleteTimeoutPreloadRegisterB(CRC_BCTOPLD2)Field

Descriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturn0.Writeshavenoeffect.

23-0

CRC_BCTOPLD2

Channel2BlockCompleteTimeoutCounterPreloadRegister.Thisregistercontainsthe

numberofclockcycleswithinwhichtheCRCforanentireblockneedstocompletebeforea

timeoutinterruptisgenerated.

497

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.27Channel2PSASignatureLowRegister(PSA_SIGREGL2)

Figure14-35.Channel2PSASignatureLowRegister(PSA_SIGREGL2)[offset=A0h]

31

0

PSASIG2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-31.Channel2PSASignatureLowRegister(PSA_SIGREGL2)FieldDescriptions

Bit

Field

Description

31-0

PSASIG2

Channel2PSASignatureLowRegister.ThisregistercontainsthevaluestoredatPSASIG2[31:0]

register.

14.4.28Channel2PSASignatureHighRegister(PSA_SIGREGH2)

Figure14-36.Channel2PSASignatureHighRegister(PSA_SIGREGH2)[offset=A4h]

31

0

PSASIG2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-32.Channel2PSASignatureHighRegister(PSA_SIGREGH2)FieldDescriptions

Bit

Field

Description

31-0

PSASIG2

Channel2PSASignatureHighRegister.ThisregistercontainsthevaluestoredatPSASIG2[63:32]

register.

14.4.29Channel2CRCValueLowRegister(CRC_REGL2)

Figure14-37.Channel2CRCValueLowRegister(CRC_REGL2)[offset=A8h]

31

0

CRC2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-33.Channel2CRCValueLowRegister(CRC_REGL2)FieldDescriptions

Bit

Field

Description

31-0

CRC2

Channel2CRCValueLowRegister.Thisregistercontainsthecurrentknowngoodsignaturevalue

storedatCRC2[31:0]register.

498

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.30Channel2CRCValueHighRegister(CRC_REGH2)

Figure14-38.Channel2CRCValueHighRegister(CRC_REGH2)[offset=ACh]

31

0

CRC2

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-34.Channel2CRCValueHighRegister(CRC_REGH2)FieldDescriptions

Bit

Field

Description

31-0

CRC2

Channel2CRCValueHighRegister.Thisregistercontainsthecurrentknowngoodsignaturevalue

storedatCRC2[63:32]register.

14.4.31Channel2PSASectorSignatureLowRegister(PSA_SECSIGREGL2)

Figure14-39.Channel2PSASectorSignatureLowRegister(PSA_SECSIGREGL2)[offset=B0h]

31

0

PSASECSIG2

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-35.Channel2PSASectorSignatureLowRegister(PSA_SECSIGREGL2)Field

Descriptions

Bit

Field

Description

31-0

PSASECSIG2

Channel2PSASectorSignatureLowRegister.Thisregistercontainsthevaluestoredat

PSASECSIG2[31:0]register.

14.4.32Channel2PSASectorSignatureHighRegister(PSA_SECSIGREGH2)

Figure14-40.Channel2PSASectorSignatureHighRegister(PSA_SECSIGREGH2)[offset=B4h]

31

0

PSASECSIG2

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-36.Channel2PSASectorSignatureHighRegister(PSA_SECSIGREGH2)Field

Descriptions

Bit

Field

Description

31-0

PSASECSIG2

Channel2PSASectorSignatureHighRegister.Thisregistercontainsthevaluestoredat

PSASECSIG2[63:32]register.

499

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CRCControlRegisterswww.ti.com

14.4.33Channel2RawDataLowRegister(RAW_DATAREGL2)

Figure14-41.Channel2RawDataLowRegister(RAW_DATAREGL2)[offset=B8h]

31

0

RAW_DATA2

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-37.Channel2RawDataLowRegister(RAW_DATAREGL2)FieldDescriptions

Bit

Field

Description

31-0

RAW_DATA2

Channel2RawDataLowRegister.Thisregistercontainsbits31:0oftheuncompressedrawdata..

14.4.34Channel2RawDataHighRegister(RAW_DATAREGH2)

Figure14-42.Channel2RawDataHighRegister(RAW_DATAREGH2)[offset=BCh]

31

0

RAW_DATA2

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table14-38.Channel2RawDataHighRegister(RAW_DATAREGH2)FieldDescriptions

Bit

Field

Description

31-0

RAW_DATA2

Channel2RawDataHighRegister.Thisregistercontainsbits63:32oftheuncompressedrawdata..

500

CyclicRedundancyCheck(CRC)ControllerModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCRCControlRegisters

14.4.35DataBusSelectionRegister(CRC_TRACE_BUS_SEL)

Figure14-43.DataBusSelectionRegister(CRC_TRACE_BUS_SEL)[offset=140h]

31

16

Reserved

R-0

15

3

2

1

0

Reserved

MEn

DTCMEn

ITCMEn

R-0

R/W-1

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table14-39.DataBusSelectionRegisterFieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readsreturn0.Writeshavenoeffect.

2

MEn

Enable/disablesthetracingofPeripheralBusMaster

0

TracingofPeripheralBusMasterhasbeendisabled

1

TracingofPeripheralBusMasterhasbeenenabled

1

DTCMEn

Enable/disablesthetracingofdataTCM

0

TracingofSystemOddandEvenRAMbuseshavebeendisabled

1

TracingofSystemOddandEvenRAMbuseshavebeenenabled

0

ITCMEn

Enable/disablesthetracingofinstructionTCM

0

TracingofFlashdatabushasbeendisabled

1

TracingofFlashdatabushasbeenenabled

501

SPNU499B–November2012–RevisedAugust2013

CyclicRedundancyCheck(CRC)ControllerModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter15

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

Thischapterdescribesthebehaviorofthevectoredinterruptmanager(VIM)moduleofthedevicefamily.

Topic...........................................................................................................................Page

15.1Overview........................................................................................................503

15.2DeviceLevelInterruptManagement...................................................................503

15.3InterruptHandlingInsideVIM............................................................................506

15.4InterruptVectorTable(VIMRAM)......................................................................510

15.5VIMWakeupInterrupt.......................................................................................513

15.6CaptureEventSources.....................................................................................514

15.7Examples........................................................................................................514

15.8Registers........................................................................................................517

502

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ESMADCLINSPIDCANNHET

Peripherals-GenerateInterruptRequestsINT_REQ0   INT_REQ1INT_REQ94

VIM

VBUSP

CPU

RTI

GCM

CAPEVT[1:0]

Wakeup_INT

INTTableIRQIndexFIQIndexIRQVectorFIQVectorIRQ

FIQ

IRQVectorVICPort

-InterruptPriority-InterruptMapping-InterruptEnable-InterruptGenerationConfiguration

Register   RegisterRegister   RegisterRequestRequestt(DirectHardwareVector)SpecialInterruptsCPUInterrupts



www.ti.comOverview

15.1Overview

Thevectoredinterruptmanager(VIM)provideshardwareassistanceforprioritizingandcontrollingthe

manyinterruptsourcespresentonadevice.Interruptsarecausedbyeventsoutsideofthenormalflowof

programexecution.Normally,theseeventsrequireatimelyresponsefromthecentralprocessingunit

(CPU);therefore,whenaninterruptoccurs,theCPUswitchesexecutionfromthenormalprogramflowto

aninterruptserviceroutine(ISR).

TheVIMmodulehasthefollowingfeatures:

•Supports95interruptchannels,inbothregistervectoredinterruptandhardwarevectoredinterrupt

mode.

–ProvidesIRQvectordirectlytotheCPUVICport

–ProvidesFIQ/IRQvectorthroughregisters

–Providesprogrammablepriorityandenableforinterruptrequestlines

•ProvidesadirecthardwaredispatchmechanismforfastestIRQdispatch.

•ProvidestwosoftwaredispatchmechanismsforbackwardcompatibilitywithearliergenerationofTI

processors.

–Indexinterrupt

–Registervectoredinterrupt

•Parityprotectedvectorinterrupttableagainstsofterrors.

15.2DeviceLevelInterruptManagement

AblockdiagramofdevicelevelinterrupthandlingisshowninFigure15-1.Whenaneventoccurswithina

peripheral,theperipheralmakesaninterruptrequesttotheVIM.Then,VIMprioritizestherequestsfrom

peripheralsandprovidestheaddressofthehighestinterruptserviceroutine(ISR)totheCPU.Finally,

CPUstartsexecutingtheISRinstructionsfromthataddressintheISR.Section15.2.1through

Section15.2.3provideadditionaldetailsaboutthesethreesteps.

Figure15-1.DeviceLevelInterruptBlockDiagram

503

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DeviceLevelInterruptManagementwww.ti.com

15.2.1InterruptGenerationatthePeripheral

Interruptgenerationbeginswhenaneventoccurswithinaperipheralmodule.Someexamplesofinterrupt-

capableeventsareexpirationofacounterwithinatimermodule,receiptofacharacterina

communicationsmodule,andcompletionofaconversioninananalog-to-digitalconverter(ADC)module.

Somedeviceperipheralsarecapableofrequestinginterruptsonmorethanoneinterruptrequestline.

Interruptsarenotalwaysgeneratedwhenaneventoccurs;theperipheralmustmakeaninterruptrequest

totheVIMbasedontheeventoccurrence.Typically,theperipheralcontains:

•Aninterruptflagbitforeacheventtosignifytheeventoccurrence.

•AninterruptenablebittocontrolwhethertheeventoccurrencecausesaninterruptrequesttotheVIM.

15.2.2InterruptHandlingattheCPU

TheARMCPUprovidestwovectorsforinterruptrequests—fastinterruptrequests(FIQs)andnormal

interruptrequests(IRQs).FIQsarehigherprioritythanIRQs,andFIQinterruptsmayinterruptIRQ

interrupts.

NOTE:TheFIQimplementedinCortex-R4FisNon-MaskableFastInterrupts(NMFI).OnceFIQis

enabled(byclearingFbitinCPSR),itcanNOTbedisabledbysettingFbitinCPSR.Onlya

resetoranFIQwillbeabletosettheFbitinCPSR.Byhardware,NonMaskableFIQare

notreentrant.

Afterreset(powerresetorwarmreset),bothFIQandIRQaredisabled.TheCPUmayenablethese

interruptrequestchannelsindividuallywithintheCPSR(CurrentProgramStatusRegister);CPSRbits6

and7mustbeclearedtoenabletheFIQ(bit6)andIRQ(bit7)interruptrequestsattheCPU.CPSRis

writableinprivilegemodeonly.Example15-2showshowtoenabletheIRQandFIQthroughCPSR.

WhentheCPUreceivesaninterruptrequest,theCPSRmodefieldchangestoeitherFIQorIRQmode.

WhenanIRQinterruptisreceived,theCPUdisablesotherIRQinterruptsbysettingCPSRbit7.Whenan

FIQinterruptisreceived,theCPUdisablesbothIRQandFIQinterruptsbysettingCPSRbits6and7.

Awriteof1toCPSRbit7disablestheIRQfromCPU.However,awriteof1toCPSRbit6leavesit

unchanged.Example15-2alsoshowshowtodisabletheIRQthroughCPSR.

504

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDeviceLevelInterruptManagement

15.2.3SoftwareInterruptHandlingOptions

Thedevicesupportsthreedifferentpossibilitiesforsoftwaretohandleinterrupts

1.Indexinterruptsmode(compatiblewithTMS470R1xlegacycode)

AftertheinterruptisreceivedbytheCPU,theCPUbranchesto0x18(IRQ)or0x1C(FIQ)toexecute

themainISR.ThemainISRroutinereadstheoffsetregister(IRQINDEX,FIQINDEX)todeterminethe

sourceoftheinterrupt.

ThismodeiscompatiblewiththeTMS470R1x(CIM)moduleandprovidesthesameinterruptregisters.

Thismodecouldbeusediflegacycodeneedstobereused,portingitfromtheTMS470R1xfamily.

However,importedsoftwarewillnotbenefitfromtheVIMimprovements.

Toportlegacysoftware,theinterruptvectorat0x18(IRQ)or0x1C(FIQ)onlyneedstobeabranch

statementtoasoftwareinterrupttable.Thesoftwareinterrupttablereadsthependinginterruptfroma

vectoroffsetregister(FIQINDEX[7:0]forFIQinterruptsandIRQINDEX[7:0]forIRQinterrupts).All

pendinginterruptscanbeviewedintheINTREQregister.Example15-4showshowtorespondtoFIQ

withshortlatencyinthismode.

2.Registervectoredinterrupts(automaticallyprovidevectoraddresstoapplication)

Beforeenablinginterrupts,theapplicationsoftwarealsohastoinitiatetheinterruptvectortable(VIM

RAM).

OncetheVIMreceivesaninterrupt,itloadstheaddressofISRfrominterruptvectortable,andstoreit

intotheinterruptvectorregister(IRQVECREGforIRQinterrupt,FIQVECREGforFIQinterrupt).

AftertheinterruptisreceivedbytheCPU,theCPUexecutestheinstructionplacedat0x18or0x1C

(IRQorFIQvector)toloadtheaddressofISR(interruptvector)fromtheinterruptvectorregister.

Example15-3illustratestheconfigurationfortheexceptionvectorsusingthismode.

3.Hardwarevectoredinterrupts(automaticallydispatchtoISR,IRQonly)

Beforeenablinginterrupts,theapplicationsoftwaremustinitiatetheinterruptvectortable(VIMRAM)

pointingtotheISRforeachinterruptchannel.

Aftertheinterrupt(IRQ)isreceivedbytheCPU,CPUreadstheaddressofISRdirectlyfromthe

interfacewithVIM(VICport)insteadofbranchingto0x18.TheCPUwillbranchdirectlytotheISR.

Thehardwarevectoredinterruptbehaviormustbeexplicitlyenabledbysettingthevectorenable(VE)

bitintheCP15R1register.Thisbitresetsto0,sothatthedefaultstateafterresetisbackward

compatibletoearlierARMCPU.Example15-1showshowtoenablethehardwarevectoredinterrupt.

NOTE:ThismodeisNOTavailableforFIQ.

4.Software-BasedPriorityDecodingScheme

Iftheapplicationusesasoftware-basedinterruptprioritydecodingschemeinsteadofthehardware

vectorcapabilities,thenthereisanadditionalstepwhichwasnotrequiredonearlierdevices.This

versionoftheVIMwillholdaninterruptrequestgeneratedbyaperipheral.Whenthesoftwareclears

theinterruptconditioninthesourcemodule(forexample,RTI,GIO,andsoon),thenitmustalso

performanadditionalclearoftheinterruptrequestintheVIM.Thiscanbedonebyreadingthe

IRQVECREGregisterSection15.8.14orFIQVECREGSection15.8.15register,orbywritinga‘1’to

theINTREQ(i)bitSection15.8.9intheVIM.Thisisnotnecessaryifanyofthethreepreviousmethods

areusedastheinterruptrequestbitintheVIMwillbeautomaticallyclearedwhenthevectorisread.

505

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




FIQINDEXINT_REQ0IRQ

FIQ

FIQLEVELPRIORITYENCODER

IRQLEVELPRIORITYENCODER

CHANNELMAPPING

INT_REQ1

INT_REQ2

INT_REQ94

INT_REQ93

CHAN0

INTERRUPTENABLE

CHAN1

CHAN2

CHAN94

CHAN93

INT_CHAN0

IRQ/FIQLEVEL

INT_CHAN1

INT_CHAN2

INT_CHAN94

INT_CHAN93

FIQ_CHAN0FIQ_CHAN1FIQ_CHAN2FIQ_CHAN94FIQ_CHAN93

IRQ_CHAN2IRQ_CHAN94IRQ_CHAN93

IRQINDEX

FIQVECTOR

IRQVECTOR

FIQVECREGIRQVECREG

PROGRAMMABLEINTERRUPTVECTORTABLE

PhantomVectorChannel0VectorChannel1VectorChannel94Vector

FIQINDEXIRQINDEX

TOCPUVICPort

Register

RegisterToCPUToCPU

Register

Register



InterruptHandlingInsideVIMwww.ti.com

15.3InterruptHandlingInsideVIM

AblockdiagramoftheinterrupthandlinginsideVIMisshowninFigure15-2

Figure15-2.VIMInterruptHandlingBlockDiagram

506

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




INT_REQ0

INT_REQ1

INT_REQ2

INT_REQ94

CHAN2

7

CHANMAP2[6:0]

INT_REQ0

INT_REQ1

INT_REQ2

INT_REQ94

CHAN94

7

CHANMAP94[6:0]

CHANNELMAPPING

95InterruptChannelsNOTE:CHAN0andCHAN1arehardwiredtoINT_REQ0andINT_REQ1,canNOTberemapped.



www.ti.comInterruptHandlingInsideVIM

15.3.1VIMInterruptChannelMapping

TheVIMsupport96interruptchannels(includingphantominterrupt).AblockdiagramoftheVIMinterrupt

requestsarrangementfromperipheralmodulestotheinterruptchannels,isprovidedinFigure15-3.Each

interruptchannel(CHANx)hasacorrespondingmappingregisterbitfield(CHANMAPx[6:0]).Thismapping

registerdetermineswhichinterruptchannelitmapseachVIMinterruptrequest.Withthisscheme,the

samerequestcanbemappedtomultiplechannels.AlowernumberedchannelineachFIQandIRQhas

higherpriority.TheprogrammabilityoftheVIMallowssoftwaretocontroltheinterruptpriority.

Figure15-3.VIMChannelMapping

NOTE:CHAN95

CHAN95hasnodedicatedinterruptvectortableentry.Therefore,CHAN95shallNOTbe

remappedtootherINT_REQ(INT_REQ95isreservedatdevicelevel).

Intheresetstate,theVIMmapsalloftheinterruptrequestsinthesystemtotheirrespectiveinterrupt

channels.Figure15-4showsthedefaultstatefollowingthereset.

Figure15-5showstheVIMINT2isremappedtobothChannel2and4,andINT3ismappedtochannel3.

NOTE:BymappingINT2tochannel2andchannel4,andmappingINT3tochannel3,itispossible

forthesoftwaretochangetheprioritydynamicallybychangingtheENABLEregister

(REQENASETandREQENACLR).Whenchannel2isenabled,thepriorityis:

1.INT0

2.INT1

3.INT2

4.INT3

Disablingchannel2,theprioritybecomes:

1.INT0

2.INT1

3.INT3

4.INT2

507

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CHANMAP94CHANMAP93CHANMAP4CHANMAP3CHANMAP2

CHANMAP1CHANMAP0

INT_REQ0

CHAN0

Interruptrequests(fromperipheral)

Peripheral0

Channel0Vector

0xFFF82004

I

NT_REQ1

CHAN1

Peripheral1

Channel1Vector

0xFFF82008

INT_REQ2

CHAN2

Peripheral2

Channel2Vector

0xFFF8200C

INT_REQ3

CHAN3

Peripheral3

Channel3Vector

0xFFF82010

INT_REQ4

CHAN4Peripheral4Channel4Vector

0xFFF82014

INT_REQ93

CHAN93

Peripheral93

Channel93Vector

0xFFF82178

INT_REQ94

CHAN94

Peripheral94

Channel94Vector

0xFFF8217C

Interruptchannels0xFFF82000PhantomVector

CHANMAP94CHANMAP93CHANMAP4CHANMAP3CHANMAP2

CHANMAP1CHANMAP0

INT_REQ0

CHAN0

Interruptrequests(fromperipheral)

Peripheral0

Channel0Vector

0xFFF82004

INT_REQ1

CHAN1

Peripheral1

Channel1Vector

0xFFF82008

INT_REQ2

CHAN2

Peripheral2

Channel2Vector

0xFFF8200C

INT_REQ3

CHAN3

Peripheral3

Channel3Vector

0xFFF82010

INT_REQ4

CHAN4

Peripheral4

Channel4Vector

0xFFF82014

INT_REQ93

CHAN93

Peripheral93

Channel93Vector

0xFFF82178

INT_REQ94

CHAN94

Peripheral94

Channel94Vector

0xFFF8217C

Interruptchannels0xFFF82000PhantomVector



InterruptHandlingInsideVIMwww.ti.com

Figure15-4.VIMinDefaultState

NOTE:CHAN0andCHAN1arehardwiredtoINT_REQ0andINT_REQ1,sotheycannotbe

remapped.

Figure15-5.VIMinaProgrammedState

NOTE:CHAN0andCHAN1arehardwiredtoINT_REQ0andINT_REQ1,sotheycannotbe

remapped.

508

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




INT_CHAN0INT_CHAN2INT_CHAN1INT_CHAN95

CHAN0

INTREQ.0

INTFLAGFIQ_CHAN[0]

CHAN2

INTREQ.2

INTFLAG

10FIQ_CHAN[2]IRQ_CHAN[2]

FIRQPR.2

REQENA.2

Controlledby:

REQENASET.2REQENACLR.2

CHAN1

INTREQ.1

INTFLAGFIQ_CHAN[1]

CHAN95

INTREQ.95

INTFLAG

10FIQ_CHAN[95]IRQ_CHAN[95]

FIRQPR.95

REQENA.95

Controlledby:

REQENASET.95REQENACLR.95



www.ti.comInterruptHandlingInsideVIM

15.3.2VIMInputChannelManagement

AsshowninFigure15-6,theVIMenableschannelsonachannel-by-channelbasis(intheREQENASET

andREQENACLRregisters);unusedchannelsmaybemaskedtopreventspuriousinterrupts.

NOTE:TheinterruptENABLEregisterdoesnotaffectthevalueofINTREQ.

Figure15-6.InterruptChannelManagement

Bydefault,interruptCHAN0ismappedtoESM(ErrorSignalModule)highlevelinterruptandCHAN1is

reservedforotherNMI.Forsafetyreasons,thesetwochannelsaremappedtoFIQonlyandcanNOTbe

disabledthroughENABLEregisters.

NOTE:NMIChannel

Channel0andchannel1arenotmaskablebytheREQENASET/REQENACLRbitandboth

channelareroutedexclusivelytoFIQ/NMIrequestline(FIRQPR0andFIRQPR1haveno

effect).

TheVIMprioritizesthereceivedinterruptsbaseduponaprogrammedprioritizationscheme.TheVIMcan

sendtwointerruptrequeststotheCPUsimultaneously—oneIRQandoneFIQ.Ifbothinterrupttypesare

enabledattheCPUlevel,thentheFIQhasgreaterpriorityandishandledfirst.Eachinterruptchannel,

exceptchannel0and1,canbeassignedtosendeitheranFIQorIRQrequesttotheCPU(inthe

FIRQPRregister).

TheVIMprovidesadefaultprioritizationscheme,whichsendsthelowestnumberedactivechannel(in

eachFIQandIRQclasses)totheCPU.WithintheFIQandIRQclassesofinterrupts,thelowestchannel

hasthehighestpriorityinterrupt.ThechannelnumberisprogrammablethroughregisterCHANMAPx.

509

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PhantomVectorChannel0VectorChannel1VectorChannel93VectorChannel94Vector0xFFF8217C0xFFF821780xFFF820080xFFF820040xFFF82000

Interruptvectortableaddressspace



InterruptVectorTable(VIMRAM)www.ti.com

AftertheVIMhasgeneratedthevectorcorrespondingtothehighestactiveIRQ,itupdatestheFIQINDEX

ortheIRQINDEXregister,dependingontheclassofinterrupt.Then,itaccessestheinterruptvectortable

usingthevectorvaluetofetchtheaddressofthecorrespondingISR.IftherequestisanFIQclass

interrupt,theaddressreadfromtheinterruptvectortable,iswrittentotheFIQVECREGregister.Ifthe

requestisanIRQclassinterrupt,theaddressiswrittentotheIRQVECREGregisterandputontheVIC

portoftheCPU(incaseofhardwarevectoredinterruptisenabled).

Alloftheinterruptregistersareupdatedwhenanewhighpriorityinterruptlinebecomesactive.

15.4InterruptVectorTable(VIMRAM)

InterruptvectortablestorestheaddressofISRs.Duringregistervectoredinterruptandhardwarevectored

interrupt,VIMaccessestheinterruptvectortableusingthevectorvaluetofetchtheaddressofthe

correspondingISR.

Forsafetyreasons,theinterruptvectortablehasprotectionbyparitytoindicatecorruptionduetosoft

errors.Theparityschemeisimplementedasacontinuousbackgroundcheckbasedonmemoryaccess.

Section15.4.1throughSection15.4.4describehowparityworksintheinterruptvectortable.

15.4.1InterruptVectorTableOperation

Theinterruptvectortableisorganizedin96wordsof32bits.32-bit,16-bit,and8-bitaccessesare

supported(whenparityisdisabled).Figure15-7showstheinterruptmemorymapping.Thetablebase

addressis0xFFF82000.

Figure15-7.VIMInterruptAddressMemoryMap

NOTE:Theinterruptvectortableonlyhas96entries,onephantomvectorand95interruptchannels.

Channel95doesnothaveadedicatedvectorandshallnotbeused.

Thereisonebitofparityper32-bitISRaddress.Whenawriteisperformedintotheinterruptvectortable,

theparityiscalculatedforthe32-bitwordandaparitybitiswrittenintothecorrespondingparityregionof

interruptvectortable.

NOTE:Only32-bitwrite/readaccessareallowedoninterruptvectortableifparityisrequired.Non

32-bitaccessmightresultinparityerrors.

510

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInterruptVectorTable(VIMRAM)

WhenareadoccursfromtheCPUorVIM,theVIMcalculatestheparityfromthedatacomingfromthe

interruptvectortableandcomparesittotheparitystoredinthetable.Theaccessofthedataandthe

parityisperformedinthesameclockcycle.

Iftheparitybitdoesnotmatchthecalculatedparity,aparityerrorisgeneratedandtheVIMstoresthe

addressoftheerrorintheADDERRregister.Theparityflagerror(PARFLG)isset.

NOTE:ThePARFLGregisterisonlyforbypassingtheinterruptvectortableincaseofaparityfault.

Itshouldbeusedonlytomaintaintheinterruptvectortablebypassed.Thecheckingofthe

parityfaultshouldbedoneintheerrorsignallingmodule(ESM)modulewhereallparity

errorsareflagged.

Sincetheinterruptvectortablemayhaveanerror,theFBPARERRregisterwillprovidetotheVICport,

IRQVECREGandFIQVECREG,afall-backaddresstoanISRthatcanrestoretheinterruptvectortable

content.TheFBPARERRregistershouldbesetbeforeintializingtheinterruptintheinterruptvectortable,

toavoidbranchingtoanunpredictablelocation.

ThenormaloperationisrestoredwhenthePARFLGisclearedbytheCPU.Itisrecommendedtorestore

thecontentoftheVIMbeforeclearingthePARFLG.

TheparityerrorsignalisforwardedtotheESM.

15.4.2EnablingandControllingtheVIMParity

ThepolarityofVIMparityiscontrolledbytheDEVCR1registerinthesystemmodule(address

0xFFFFFFDC).TheparityenableiscontrolledbythePARCTLregister.Afterreset,theparityisdisabled.

Paritycheckingcanbeenabledbywriting0xA(1010b)inthePARENA[3:0]bitfieldofthePARCTL

register.Thedefaultpolarityisodd.Thepolaritycanbechangedtoevenbywriting5(0101b)inthe

DEVPARSEL[3:0]bitfieldoftheDEVCR1register.

15.4.3InterruptVectorTableInitialization

Afterreset,theinterruptvectortablecontent,includingtheparitybitsisnotinitialized.Therefore,theCPU

needtoinitializealloftheinterruptaddressesintothetable,beforeenablingthecorrespondinginterrupt

channel.Ifparityisrequired,thisinitializationshouldbedoneaftertheparityfunctionalityisenabled.In

thisway,thecorrespondingparitybitwillbeautomaticallyupdated.Thisinitializationisonlyrequiredwhen

vectoredinterruptsareused,indexinterruptmanagementdoesnotneedthetabletobeinitialized.

15.4.4InterruptVectorTableParityTesting

Totesttheparitycheckingmechanism,theparityRAMallowsmanualinsertionoffaults.Thisoptionis

implementedbythetestbitinthePARCTLregister.Oncethebitisset,theparitybitsaremappedto

0xFFF82400.Afterthat,usercanforcefaultsintotheparitybits.Finally,theparityerrorcanbetriggered

byreadinginterruptvectortable(notparitybit)fromVIMorCPU.

Theinterruptvectortableparitycanalsobeverifiedbyinsertingfaultsintointerruptvectortable.Oncethe

VIMparityisdisabledinsystemmodule,usercanmodifyinterruptvectortablewithoutimpactingtheparity

bit.Afteruserre-enableinterruptvectortableparity,theparityerrorcanbetriggeredbyreadinginterrupt

vectortablefromVIMorCPU.

511

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Word0

Word1

Word 2

Word3

P03100131Read0

Read 0

P2Read0

P3Read032-bitonlyaccessible

0xFFF820000xFFF82400P1



InterruptVectorTable(VIMRAM)www.ti.com

Figure15-8.ParityBitMapping

512

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




INT_REQ0

WAKEENA.0

Controlledby:

WAKEENASET.0WAKEENACLR.0

WAKEUP0INT_REQ1

WAKEENA.1

Controlledby:

WAKEENASET.1WAKEENACLR.1

WAKEUP1INT_REQ2

WAKEENA.2

Controlledby:

WAKEENASET.2WAKEENACLR.2

WAKEUP2INT_REQ95

WAKEENA.95

Controlledby:

WAKEENASET.95WAKEENACLR.95

WAKEUP95

OR

WAKE_INT



www.ti.comVIMWakeupInterrupt

15.5VIMWakeupInterrupt

Thewakeupinterruptsareusedtocomeoutoflowpowermode(LPM).Anyinterruptrequestscanbe

usedtowakeupthedevice.Afterreset,allinterruptrequestsaresettowakeupfromLPM.However,the

VIMcanmaskunwantedinterruptlinesforwake-upbyusingtheWAKEENASETandWAKEENACLR

register.ThevalueinREQENASET/REQENACLRdoesNOTimpactthewakeupinterrupt.

AsshowninFigure15-9,theWAKEENASETandWAKEENACLRregisterswillenable/disableaninterrupt

forwake-upfromlowpowermode.Allwake-upinterruptsare“ORed”intoasinglesignalWAKE_INT

connectedtotheGlobalClockModule.

Figure15-9.DetailoftheIRQInput

513

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




7

CAPEVT0

CAPEVTSRC0[6:0]

7

CAPEVT1

CAPEVTSRC1[6:0]

INT_REQ0INT_REQ1INT_REQ94INT_REQ95INT_REQ0INT_REQ1INT_REQ94INT_REQ95ToRTIToRTI



CaptureEventSourceswww.ti.com

15.6CaptureEventSources

TheVIMcanselectanyofthe96interruptrequesttogenerateuptotwocaptureeventsforthereal-time

interrupt(RTI)module(seeFigure15-10).ThevalueinREQENASET/REQENACLRdoesNOTimpact

thecaptureevent.Tworegisters(Section15.8.16)areavailable,oneforeachcaptureeventsource.

Figure15-10.CaptureEventSources

15.7Examples

ThefollowingsectionsprovideexamplesabouttheoperationoftheVIM.

15.7.1Examples-ConfigureCPUToReceiveInterrupts

Example15-1showshowtosetthevectorenable(VE)bitintheCP15R1registertoenablethehardware

vectorinterrupt.Example15-2showshowtoenable/disabletheIRQandFIQthroughCPSR.Asa

convention,theprogramwhocallsthesesubroutinesshallpreserveregisterR1ifneeded.Example15-2

canONLYruninprivilegedmode.However,inUSERmode,theapplicationsoftwarecanforcethe

programintosoftwareinterruptbyinstruction‘SWI’.Then,inthesoftwareinterruptserviceroutine,user

canwriteregisterSPSR,whichisthecopyofCPSRinthisexceptionmode.

Example15-1.EnableHardwareVectorInterrupt(IRQOnly)

_HW_Vec_Init

MRCp15,#0,R1,c1,c0,#0

ORRR1,R1,#0x01000000;Mask0-31bitsexceptbit24inSys

;CtrlRegofCORTEX-R4

MCRp15,#0,R1,c1,c0,#0;Enablebit24

MOVPC,LR

514

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExamples

Example15-2.Enable/DisableIRQ/FIQthroughCPSR

FIQENABLE.equ0x40

IRQENABLE.equ0x80

......

_Enable_Fiq

MRSR1,CPSR

BICR1,R1,#FIQENABLE

MSRCPSR,R1

MOVPC,LR

......

_Disable_Irq

MRSR1,CPSR

ORRR1,R1,#IRQENABLE

MSRCPSR,R1

MOVPC,LR

......

_Enable_Irq

MRSR1,CPSR

BICR1,R1,#IRQENABLE

MSRCPSR,R1

MOVPC,LR

15.7.2Examples-RegisterVectorInterruptandIndexInterruptHandling

Example15-3showstheconfigurationfortheexceptionvectorsinRegisterVectorInterrupthandling.After

theinterruptisreceivedbytheCPU,theCPUbranchesto0x18(IRQ)or0x1C(FIQ).Theinstruction

placedhereshouldbeLDRPC,[PC,#-0x1B0].ThependingISRaddressiswrittenintothecorresponding

vectorregister(IRQVECREGforIRQ,FIQVECREGforFIQ).TheCPUreadsthecontentoftheregister

andbranchestotheISR.

Example15-3.ExceptionVectorConfigurationforVIMVector

.sect".intvecs"

00000000hb_RESET;RESETinterrupt

00000004hb_UNDEF_INST_INT;UNDEFINEDINSTRUCTIONinterrupt

00000008hb_SW_INT;SOFTWAREinterrupt

0000000Chb_ABORT_PREF_INT;ABORT(PREFETCH)interrupt

00000010hb_ABORT_DATA_INT;ABORT(DATA)interrupt

00000014hb#-8;Reserved

00000018hldrpc,[pc,#-0x1B0];IRQinterrupt

0000001Chldrpc,[pc,#-0x1B0];FIQinterrupt

NOTE:ProgramCounter(PC)alwayspointerstwoinstructionsbeyondthecurrentexecuted

instruction.Inthiscase,PCequalsto‘0x18or0x1C+0x08’.TheLDRinstructionloadthe

memoryat‘PC-0x1B0’,whichis‘0x18or0x1C+0x08-0x1B0=0xFFFFFE70or

0xFFFFFE74’.ThesearetheaddressofIRQVECREGandFIQVECREG,whichstorethe

pendingISRaddress.

515

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Exampleswww.ti.com

Example15-4showsafastresponsetotheFIQinterruptinIndexInterruptandcanbeappliedtoasystem

thathasmorethanonechannelassignedasaFIQ.ItisbuiltinIndexInterruptcompatiblewith

TMS470R1xlegacycode.

Example15-4.HowtoRespondtoFIQWithShortLatency

.sect".intvecs";Interruptandexceptionvectorsector

00000000hb_RESET;RESETinterrupt

00000004hb_UNDEF_INST_INT;UNDEFINEDINSTRUCTIONinterrupt

00000008hb_SW_INT;SOFTWAREinterrupt

0000000Chb_ABORT_PREF_INT;ABORT(PREFETCH)interrupt

00000010hb_ABORT_DATA_INT;ABORT(DATA)interrupt

00000014hb#-8;Reserved

00000018hb_IRQ_ENTRY_0;IRQinterrupt

;*********************************

;INTERRUPTPROCESSINGAREA

;*********************************

0000001ChldrbR8,[PC,#-0x21d];FIQINTERRUPTENTRY

;R8usedtogettheFIQindex

;withaddresspointertothe

;firstFIQbankedregister

00000020hldrPC,[PC,R8,LSL#2];Branchtotheindexedinterrupt

;routine.Theprefetch

;operationcausesthePCtobe2

;words(8bytes)aheadofthe

;currentinstruction,so

;pointingto_INT_TABLE.

00000024hnop;Requiredduetopipeline.

;=================================

00000028h_INT_TABLE;FIQINTERRUPTDISPATCH

;=================================

0000002Ch.word_FIQ_TABLE;beginningofFIQDispatch

00000030h.word_ISR1;dispatchtointerruptroutine1

00000034h.word_ISR2;dispatchtointerruptroutine2

.

.

AnotherwaytoimprovetheFIQlatencyistoassignonlyonechanneltotheFIQinterruptandtomapthe

ISRcodecorrespondingtothischanneldirectlystartingat0x1C.

NOTE:WhentheCPUisinvector-enabledmode,Example15-3andExample15-4arestillvalid.

ThedifferenceisthattheCPUwillnotreadfromthe0x18locationduringIRQinterrupt,but

willjumpdirectlytothecorrespondingISRroutine.

516

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8Registers

ThissectiondetailstheVIMmoduleregisters,summarizedinTable15-1.Adetaileddescriptionofeach

registeranditsbitsisalsoprovided.

Eachregisterbeginsonawordboundary.Allregistersare32-bit,16-bitand8-bitaccessibleforreadand

write.Writeisonlypossibleinprivilegemode.ThestartaddressoftheVIMmoduleisFFFFFE00h.The

parityrelatedVIMregistersareplacedatFFFFFDECh-~FFFFFDF8h.

Table15-1.VIMControlRegisterSummary

Offset

Acronym

RegisterDescription

Section

FFFFFDECh

PARFLG

InterruptVectorTableParityFlagRegister

Section15.8.1

FFFFFDF0h

PARCTL

InterruptVectorTableParityControlRegister

Section15.8.2

FFFFFDF4h

ADDERR

AddressParityErrorRegister

Section15.8.3

FFFFFDF8h

FBPARERR

Fall-BackAddressParityErrorRegister

Section15.8.4

FFFFFE00h

IRQINDEX

IRQIndexOffsetVectorRegister

Section15.8.6

FFFFFE04h

FIQINDEX

FIQIndexOffsetVectorRegister

Section15.8.7

FFFFFE08h-FFFFFE0Ch

Reserved

Reserved

FFFFFE1Ch

Reserved

Reserved

FFFFFE2Ch

Reserved

Reserved

FFFFFE3Ch

Reserved

Reserved

FFFFFE4Ch

Reserved

Reserved

FFFFFE5Ch

Reserved

Reserved

FFFFFE6Ch

Reserved

Reserved

FFFFFE10h

FIRQPR0

FIQ/IRQProgramControlRegister0

Section15.8.8

FFFFFE14h

FIRQPR1

FIQ/IRQProgramControlRegister1

Section15.8.8

FFFFFE18h

FIRQPR2

FIQ/IRQProgramControlRegister2

Section15.8.8

FFFFFE20h

INTREQ0

PendingInterruptReadLocationRegister0

Section15.8.9

FFFFFE24h

INTREQ1

PendingInterruptReadLocationRegister1

Section15.8.9

FFFFFE28h

INTREQ2

PendingInterruptReadLocationRegister2

Section15.8.9

FFFFFE30h

REQENASET0

InterruptEnableSetRegister0

Section15.8.10

FFFFFE34h

REQENASET1

InterruptEnableSetRegister1

Section15.8.10

FFFFFE38h

REQENASET2

InterruptEnableSetRegister2

Section15.8.10

FFFFFE40h

REQENACLR0

InterruptEnableClearRegister0

Section15.8.11

FFFFFE44h

REQENACLR1

InterruptEnableClearRegister1

Section15.8.11

FFFFFE48h

REQENACLR2

InterruptEnableClearRegister2

Section15.8.11

FFFFFE50h

WAKEENASET0

Wake-upEnableSetRegister0

Section15.8.12

FFFFFE54h

WAKEENASET1

Wake-upEnableSetRegister1

Section15.8.12

FFFFFE58h

WAKEENASET2

Wake-upEnableSetRegister2

Section15.8.12

FFFFFE60h

WAKEENACLR0

Wake-upEnableClearRegister0

Section15.8.13

FFFFFE64h

WAKEENACLR1

Wake-upEnableClearRegister1

Section15.8.13

FFFFFE68h

WAKEENACLR2

Wake-upEnableClearRegister2

Section15.8.13

FFFFFE70h

IRQVECREG

IRQInterruptVectorRegister

Section15.8.14

FFFFFE74h

FIQVECREG

FIQInterruptVectorRegister

Section15.8.15

FFFFFE78h

CAPEVT

CaptureEventRegister

Section15.8.16

FFFFFE7Ch

Reserved

Reserved

FFFFFE80h-FFFFFEDCh

CHANCTRL

VIMInterruptControlRegister

Section15.8.17

517

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.1InterruptVectorTableParityFlagRegister(PARFLG)

Figure15-11andTable15-2describethisregister.

Figure15-11.InterruptVectorTableParityFlagRegister(PARFLG)[Offset=FFFFFDECh]

31

16

Reserved

R-0

15

1

0

Reserved

PARFLG

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table15-2.InterruptVectorTableParityFlagRegister(PARFLG)FieldDescriptions

Bit

Field

Value

Description

31-15

Reserved

0

Readreturns0.Writeshavenoeffect.

0

PARFLG

ThePARFLGindicatesthataparityerrorhasbeenfoundandthattheInterruptVectorTableis

bypassed.TheresultingvectorofanyIRQ/FRQinterruptisthenthevaluecontainedinthe

FBPARERRregisteruntilthisbithasbeencleared.

0

Read:Noparityerrorhasoccurred.

Write:Awritetothisbithasnoeffect.

1

Read:AparityerrorhasoccurredandtheInterruptVectorTableisbypassed.

Write:ThePARFLGisclearedandtheinterruptvectorcanbereadfromtheInterruptVector

Table.

15.8.2InterruptVectorTableParityControlRegister(PARCTL)

Figure15-12.InterruptVectorTableParityControlRegister(PARCTL)[Offset=FFFFFDF0h]

31

16

Reserved

R-0

15

9

8

7

4

3

0

Reserved

TEST

Reserved

PARENA

R-0

R/WP-0

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table15-3.InterruptVectorTableParityControlRegister(PARCTL)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

TEST

ThisbitmapstheparitybitsintotheInterruptVectorTableframetomakethemaccessiblebythe

CPU.

0

Paritybitsarenotmemorymapped.

1

Paritybitsarememorymapped.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

PARENA

VIMparityenable.

5h

TheVIMparityisdisabled.

AllOthers

TheVIMparityisenabled.

Note:ToavoidsofterrortodisableVIMparitychecking,itisrecommendedtowriteAhto

enableparitychecking.

518

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8.3AddressParityErrorRegister(ADDERR)

Theaddressparityerrorregistergivestheaddressofthefirstparityerrorlocation.

NOTE:Nocomputationisneededwhenreadingthecompleteregistertoretrievetheaddressinthe

InterruptVectorTable.

Thisregisterwillneverberesetbyapower-onresetnoranyotherresetsource.

Figure15-13.AddressParityErrorRegister(ADDERR)[Offset=FFFFFDF4h]

31

16

InterruptVectorTableoffset

R-FFF8h

15

9

8

2

1

0

InterruptVectorTableoffset

ADDERR

Wordoffset

R-20h

R-x

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-4.AddressParityErrorRegister(PARERR)FieldDescriptions

Bit

Field

Value

Description

31-9

InterruptVectorTable

InterruptVectorTableoffset.ReadsarealwaysFFF820h;writeshavenoeffect

offset

8-2

ADDERR

Addressparityerrorregister.Thisregistergivestheaddressofthefirstencounteredparity

errorsincetheflaghasbeenclear.Subsequentparityerrorswillnotupdatethisregister

untilthePARFLGregisterhasbeencleared.

Note:ThisregisterisvalidonlywhenPARFLGisset(seeSection15.8.1).

1-0

Wordoffset

Wordoffset.Readsarealways0;writeshavenoeffect.

15.8.4Fall-BackAddressParityErrorRegister(FBPARERR)

Thisregisterprovidesafall-backaddresstotheVIMifaparityerrorhasoccurredintheInterruptVector

Table.Figure15-14andTable15-5describethisregister.

NOTE:Thisregisterwillneverberesetbyapower-onresetnoranyotherresetsource.

Figure15-14.Fall-BackAddressParityErrorRegister(FBPARERR)[Offset=FFFFFDF8h]

31

16

FBPARERR

R/WP-x

15

0

FBPARERR

R/WP-x

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;x=Indeterminate

Table15-5.FallBackAddressParityErrorRegister(FBPARERR)FieldDescriptions

Bit

Field

Value

Description

31-0

FBPARERR

0-FFFFFFFFh

Fallbackaddressparityerror.ThisregisterisusedbytheVIMiftheInterruptVectorTable

hasbeencorrupted.ThecontentsoftheIRQVECREGandFIQVECREGregisterswillreflect

thevalueprogrammedinFBPARERR.ThevalueprovidedtotheVICportwillalsoreflect

FBPARERRuntilthePARFLGregisterhasbeencleared.

ThisregisterprovidestheaddressoftheISRthatwillrestoretheintegrityoftheInterrupt

VectorTable.

519

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.5VIMOffsetVectorRegisters

TheVIMoffsetregisterprovidestheuserwiththenumericalindexvaluethatrepresentsthepending

interruptwiththehighestprecedence.TheregisterIRQINDEXholdstheindextothehighestpriorityIRQ

interrupt;theregisterFIQINDEXholdstheindextothehighestpriorityFIQinterrupt.Theindexcanbe

usedtolocatetheinterruptroutineinadispatchtable,asshowninTable15-6.

Table15-6.InterruptDispatch

IRQINDEX/FIQINDEXRegisterBitField

HighestPriorityPendingInterruptEnabled

0x00

Nointerrupt

0x01

Channel0

:

:

0x59

Channel94

0x60

Channel95

NOTE:Channel95hasnodedicatedinterruptvectortableentry.Therefore,Channel95shallNOT

beusedinapplication.

TheVIMoffsetregistersarereadonly.TheyareupdatedcontinuouslybytheVIM.Whenaninterruptis

serviced,theoffsetvectorsshowtheindexforthenexthighestpendinginterruptor0x0ifnointerruptis

pending.

520

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8.6IRQIndexOffsetVectorRegister(IRQINDEX)

TheIRQoffsetregisterprovidestheuserwiththenumericalindexvaluethatrepresentsthependingIRQ

interruptwiththehighestpriority.Figure15-15andTable15-7describethisregister.

Figure15-15.IRQIndexOffsetVectorRegister(IRQINDEX)[Offset=FFFFFE00h]

31

16

Reserved

R-0

15

8

7

0

Reserved

IRQINDEX

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-7.IRQIndexOffsetVectorRegister(IRQINDEX)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

IRQINDEX

0-FFh

IRQindexvector.TheleastsignificantbitsrepresenttheindexoftheIRQpendinginterruptwith

thehighestprecedence,asshowninTable15-6.Whennointerruptsarepending,theleast

significantbyteofIRQINDEXis0.

Note:AreadofregisterIRQINDEXorIRQVECREGwillcauseIRQINDEX/IRQVECREGto

reflecttheindex/ISRaddressforthenexthighest-prioritypendingIRQinterrupt.Incasethereis

nootherinterruptpending,theIRQINDEXwillread0x00andtheIRQVECREGregisterwillread

thephantominterruptaddress.

15.8.7FIQIndexOffsetVectorRegisters(FIQINDEX)

TheFIQINDEXregisterprovidestheuserwithanumericalindexvaluethatrepresentsthependingFIQ

interruptwiththehighestpriority.Figure15-16andTable15-8describethisregister.

Figure15-16.FIQIndexOffsetVectorRegister(FIQINDEX)[Offset=FFFFFE04h]

31

16

Reserved

R-0

15

8

7

0

Reserved

FIQINDEX

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-8.FIQIndexOffsetVectorRegister(FIQINDEX)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

FIQINDEX

0-FFh

FIQindexoffsetvector.TheleastsignificantbitsrepresenttheindexoftheFIQpending

interruptwiththehighestprecedence,asshowninTable15-6.Whennointerruptsarepending,

theleastsignificantbyteofFIQINDEXis0x00.

Note:AreadofregisterFIQINDEXorFIQVECREGwillcauseFIQINDEX/FIQVECREGto

reflecttheindex/ISRaddressforthenexthighest-prioritypendingFIQinterrupt.Incasethereis

nootherinterruptpending,theFIQINDEXwillread0x00andtheFIQVECREGregisterwillread

thephantominterruptaddress.

521

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.8FIQ/IRQProgramControlRegisters[0](FIRQPR[0])

TheFIQ/IRQprogramcontrolregisters(FIRQPR[0])determinewhetheragiveninterruptrequestwillbe

eitherFIQorIRQ.Figure15-17,Figure15-18,Figure15-19andTable15-9describetheseregisters.

NOTE:Channel0and1areFIQonly,notimpactedbythisregister.

Figure15-17.FIQ/IRQProgramControlRegister0(FIRQPR0)[offset=FFFFFE10h]

31

16

FIRQPR[31:16]

R/WP-0

15

2

1

0

FIRQPR[15:2]

Reserved

R/WP-0

R-3h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-18.FIQ/IRQProgramControlRegister1(FIRQPR1)[offset=FFFFFE14h]

31

16

FIRQPR[63:48]

R/WP-0

15

0

FIRQPR[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-19.FIQ/IRQProgramControlRegister2(FIRQPR2)[offset=FFFFFE18h]

31

16

FIRQPR[95:80]

R/WP-0

15

0

FIRQPR[79:64]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-9.FIQ/IRQProgramControlRegisters[0](FIRQPR[0])FieldDescriptions

Bit

Field

Value

Description

95-2

FIRQPR[95:2]

FIQ/IRQprogramcontrolbits.Thesebitsdeterminewhetheraninterruptrequestfroma

peripheralisoftypeFIQorIRQ.BitFIRQPRx[95:2]correspondstorequestchannel[95:2].

0

InterruptrequestisofIRQtype.

1

InterruptrequestisofFIQtype.

1-0

Reserved

3h

Readonly.Writeshavenoeffect.

522

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8.9PendingInterruptReadLocationRegisters[0](INTREQ[0])

Thependinginterruptregistergivesthependinginterruptrequests.Theregisterisupdatedeveryvbus

clockcycle.Figure15-20,Figure15-21,Figure15-22andTable15-10describethisregister.

Figure15-20.PendingInterruptReadLocationRegister0(INTREQ0)[offset=FFFFFE20h]

31

16

INTREQ[31:16]

R/WCP-0

15

0

INTREQ[15:0]

R/WCP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-21.PendingInterruptReadLocation1(INTREQ1)Register[offset=FFFFFE24h]

31

16

INTREQ[63:48]

R/WCP-0

15

0

INTREQ[47:32]

R/WCP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-22.PendingInterruptReadLocation2(INTREQ2)Register[offset=FFFFFE28h]

31

16

INTREQ[95:80]

R/WCP-0

15

0

INTREQ[79:64]

R/WCP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-10.PendingInterruptReadRegisters[0](INTREQ[0])FieldDescriptions

Bit

Field

Value

Description

95-0

INTREQ[95:0]

Pendinginterruptbits.Thesebitsdeterminewhetheraninterruptrequestispendingforthe

requestchannelbetween0and95.TheinterruptENABLEregisterdoesnotaffectthevalueof

theinterruptpendingbit.BitINTREQx[95:0]correspondstorequestchannel[95:0].

UserandPrivilegeModeread:

0

Nointerrupteventhasoccurred.

1

Aninterruptispending.

PrivilegeModewriteonly:

0

Writing0hasnoeffect.

1

Clearsthe"interruptpending"statusflag.Thiswrite-clearfunctionalityisintendedtoallow

clearingthoseinterruptswhichhavebeensignaledtoVIMbeforeenablingtheinterrupt

channel,iftheyareundesired.

523

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.10InterruptEnableSetRegisters[0](REQENASET[0])

Theinterruptregisterenableselectivelyenablesindividualrequestchannels.Figure15-23,Figure15-24,

Figure15-25andTable15-11describetheseregisters.

NOTE:Channel0and1arealwaysenabled,notimpactedbythisregister.

Figure15-23.InterruptEnableSetRegister0(REQENASET0)[offset=FFFFFE30h]

31

16

REQENASET[31:16]

R/WP-0

15

2

1

0

REQENASET[15:2]

Reserved

R/WP-0

R-3h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-24.InterruptEnableSetRegister1(REQENASET1)[offset=FFFFFE34h]

31

16

REQENASET[63:48]

R/WP-0

15

0

REQENASET[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-25.InterruptEnableSetRegister2(REQENASET2)[offset=FFFFFE38h]

31

16

REQENASET[95:80]

R/WP-0

15

0

REQENASET[79:64]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-11.InterruptEnableSetRegister[0](REQENASET[0])FieldDescriptions

Bit

Field

Value

Description

95-2

REQENASET[95:2]

Requestenablesetbits.Thisvectordetermineswhethertheinterruptrequestchannelis

enabled.BitREQENASETx[95:2]correspondstorequestchannel[95:2].

0

Read:Interruptrequestchannelisdisabled.

Write:Awriteof0hasnoeffect.

1

ReadorWrite:Theinterruptrequestchannelisenabled.

1-0

Reserved

3h

Readonly.Writeshavenoeffect.

524

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8.11InterruptEnableClearRegisters[0](REQENACLR[0])

Theinterruptregisterenableselectivelydisablesindividualrequestchannels.Figure15-26,Figure15-27,

Figure15-28andTable15-12describetheseregisters.

NOTE:Channel0and1arealwaysenabled,notimpactedbythisregister.

Figure15-26.InterruptEnableClearRegister0(REQENACLR0)[offset=FFFFFE40h]

31

16

REQENACLR[31:16]

R/WP-0

15

2

1

0

REQENACLR[15:2]

Reserved

R/WP-0

R-3h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-27.InterruptEnableClearRegister1(REQENACLR1)[offset=FFFFFE44h]

31

16

REQENACLR[63:48]

R/WP-0

15

0

REQENACLR[47:32]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-28.InterruptEnableClearRegister2(REQENACLR2)[offset=FFFFFE48h]

31

16

REQENACLR[95:80]

R/WP-0

15

0

REQENACLR[79:64]

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-12.RequestEnableClearRegister(REQENACLR)FieldDescriptions

Bit

Field

Value

Description

95-2

REQENACLR[95:2]

Requestenableclearbits.Thisvectordetermineswhethertheinterruptrequestchannelis

enabled.BitREQENACLRx[95:2]correspondstorequestchannel[95:2].

0

Read:Interruptrequestchannelisdisabled.

Write:Awriteof0hasnoeffect.

1

Read:Theinterruptrequestchannelisenabled.

Write:Theinterruptrequestchannelisdisabled.

1-0

Reserved

3h

Readonly.Writeshavenoeffect.

525

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.12Wake-UpEnableSetRegisters[0](WAKEENASET[0])

Thewake-upenableregistersselectivelyenablesindividualwake-upinterruptrequestlines.Figure15-29,

Figure15-30,Figure15-31andTable15-13describetheseregisters.

Figure15-29.Wake-UpEnableSetRegister0(WAKEENASET0)[offset=FFFFFE50h]

31

16

WAKEENASET[31:16]

R/WP-FFFFh

15

0

WAKEENASET[15:0]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-30.Wake-UpEnableSetRegister1(WAKEENASET1)[offset=FFFFFE54h]

31

16

WAKEENASET[63:48]

R/WP-FFFFh

15

0

WAKEENASET[47:32]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-31.Wake-UpEnableSetRegister2(WAKEENASET2)[offset=FFFFFE58h]

31

16

WAKEENASET[95:80]

R/WP-FFFFh

15

0

WAKEENASET[79:64]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-13.Wake-UpEnableSetRegisters[0](WAKEENASET[0])FieldDescriptions

Bit

Field

Value

Description

95-0

WAKEENASET[95:0]

Wake-upenablesetbits.Thisvectordetermineswhetherthewake-upinterruptlineis

enabled.BitWAKEENASETx[95:0]correspondstointerruptrequestchannel[95:0].

0

Read:Interruptrequestchannelisdisabled.

Write:Awriteof0hasnoeffect.

1

ReadorWrite:Theinterruptrequestchannelisenabled.

526

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8.13Wake-UpEnableClearRegisters[0](WAKEENACLR[0])

Thewake-upenableregisterselectivelydisablesindividualwake-upinterruptrequestlines.Figure15-32,

Figure15-33,Figure15-34andTable15-14describetheseregisters.

Figure15-32.Wake-UpEnableClearRegister0(WAKEENACLR0)[offset=FFFFFE60h]

31

16

WAKEENACLR[31:16]

R/WP-FFFFh

15

0

WAKEENACLR[15:0]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-33.Wake-UpEnableClearRegister1(WAKEENACLR1)[offset=FFFFFE64h]

31

16

WAKEENACLR[63:48]

R/WP-FFFFh

15

0

WAKEENACLR[47:32]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure15-34.Wake-UpEnableClearRegister2(WAKEENACLR2)[offset=FFFFFE68h]

31

16

WAKEENACLR[95:80]

R/WP-FFFFh

15

0

WAKEENACLR[79:64]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-14.Wake-UpEnableClearRegisters[0](WAKEENACLR[0])FieldDescriptions

Bit

Field

Value

Description

95-0

WAKEENACLR[95:0]

Wake-upenableclearbits.Thisvectordetermineswhetherthewake-upinterruptlineis

enabled.BitWAKEENACLRx[95:0]correspondstointerruptrequestchannel[95:0].

0

Read:Wake-upinterruptchannelisdisabled.

Write:Awriteof0hasnoeffect.

1

Read:Thewake-upinterruptchannelisenabled.

Write:Thewake-upinterruptchannelisdisabled.

527

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.14IRQInterruptVectorRegister(IRQVECREG)

TheinterruptvectorregistergivestheaddressoftheenabledandactiveIRQinterrupt.Figure15-35and

Table15-15describetheseregisters.

Figure15-35.IRQInterruptVectorRegister(IRQVECREG)[Offset=FFFFFE70h]

31

16

IRQVECREG

R-0

15

0

IRQVECREG

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table15-15.IRQInterruptVectorRegister(IRQVECREG)FieldDescriptions

Bit

Field

Value

Description

31-0

IRQVECREG

From

IRQinterruptvectorregister.ThisvectorgivestheaddressoftheISRwiththehighest

Section15.4

pendingIRQrequest.TheCPUreadstheaddressandbranchestothislocation.

Note:AreadofregisterIRQINDEXorIRQVECREGwillcauseIRQINDEX/IRQVECREGto

reflecttheindex/ISRaddressforthenexthighest-prioritypendingIRQinterrupt.Incasethere

isnootherinterruptpending,theIRQINDEXwillread0x00andtheIRQVECREGregisterwill

readthephantominterruptaddress.

15.8.15FIQInterruptVectorRegister(FIQVECREG)

TheinterruptvectorregistergivestheaddressoftheenabledandactiveFIQinterrupt.Figure15-36and

Table15-16describetheseregisters.

Figure15-36.IRQInterruptVectorRegister(FIQVECREG)[Offset=FFFFFE74h]

31

16

FIQVECREG

R-0

15

0

FIQVECREG

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;X=Unknown

Table15-16.FIQInterruptVectorRegister(FIQVECREG)FieldDescriptions

Bit

Field

Value

Description

31-0

FIQVECREG

From

FIQinterruptvectorregister.ThisvectorgivestheaddressoftheISRwiththehighest

Section15.4

pendingFIQrequest.TheCPUreadstheaddressandbranchestothislocation.

Note:AreadofregisterFIQINDEXorFIQVECREGwillcauseFIQINDEX/FIQVECREGto

reflecttheindex/ISRaddressforthenexthighest-prioritypendingFIQinterrupt.Incasethere

isnootherinterruptpending,theFIQINDEXwillread0x00andtheFIQVECREGregisterwill

readthephantominterruptaddress.

528

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

15.8.16CaptureEventRegister(CAPEVT)

Figure15-37andTable15-17describethisregister.

Figure15-37.CaptureEventRegister(CAPEVT)[Offset=FFFFFE78h]

31

23

22

16

Reserved

CAPEVTSRC1

R-U

R/W-0

15

7

6

0

Reserved

CAPEVTSRC0

R-U

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;U=Undefined;-n=valueafterreset

Table15-17.CaptureEventRegister(CAPEVT)FieldDescriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readsareindeterminateandwriteshavenoeffect.

22-16

CAPEVTSRC1

Captureeventsource1mappingcontrol.Thesebitsdeterminewhichinterruptrequestmapsto

thecaptureeventsource1oftheRTI:

0

Interruptrequest0.

1h

Interruptrequest1.

:

:

5Fh

Interruptrequest95.

15-7

Reserved

0

Readsareindeterminateandwriteshavenoeffect.

6-0

CAPEVTSRC0

Captureeventsource0mappingcontrol.Thesebitsdeterminewhichinterruptrequestmapsto

thecaptureeventsource0oftheRTI:

0

Interruptrequest0.

1h

Interruptrequest1.

:

:

5Fh

Interruptrequest95.

529

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

15.8.17VIMInterruptControlRegister[0:31](CHANCTRL[0:23])

Twentyfourinterruptcontrolregisterscontrolthe96interruptchannelsoftheVIM.Eachregistercontrols

fourinterruptchannels:eachofthemisindexedfrom0to95.Table15-18showstheorganizationofall

theregistersandtheresetvalueofeach.Eachfourfieldsoftheregisterhasbeennamedwithageneric

indexthatreferstothedetailedregisterorganization.Figure15-38andTable15-19describethese

registers.

Table15-18.InterruptControlRegistersOrganization

RegisterField

RegisterField

RegisterField

RegisterField

Register

31:24

23:16

15:8

7:0

OffsetAddress

Mnemonic

CHANMAPx0

CHANMAPx1

CHANMAPx2

CHANMAPx3

ResetValue

0xFFFFFE80

CHANCTRL0

CHANMAP0

CHANMAP1

CHANMAP2

CHANMAP3

0x00010203

0xFFFFFE84

CHANCTRL1

CHANMAP4

CHANMAP5

CHANMAP6

CHANMAP7

0x04050607

:::

:::

:::

:::

:::

:::

:::

0xFFFFFED8

CHANCTRL22

CHANMAP88

CHANMAP89

CHANMAP90

CHANMAP91

0x58595A5B

0xFFFFFEDC

CHANCTRL23

CHANMAP92

CHANMAP93

CHANMAP94

CHANMAP95

0x5C5D5E5F

NOTE:CHANMAP0andCHANMAP1arenotprogramable.CHAN0andCHAN1arehardwiredto

INT_REQ0andINT_REQ1.

DoNOTwriteanyvalueotherthan0x5FtoCHANMAP95.Channel95isreservedbecause

nointerruptvectortableentrysupportsthischannel.

Figure15-38.InterruptControlRegisters[0:31](CHANCTRL[0:23])

[Offset=FFFFFE80h-FFFFFEDCh]

31

30

24

23

22

16

Rsvd

CHANMAPx0

Rsvd

CHANMAPx1

R-U

R/W-n

R-U

R/W-n

15

14

8

7

6

0

Rsvd

CHANMAPx2

Rsvd

CHANMAPx3

R-U

R/W-n

R-U

R/W-n

LEGEND:R/W=Read/Write;R=Readonly;U=Undefined;-n=valueafterreset(seeTable15-18)

Table15-19.InterruptControlRegisters[0:31](CHANCTL[0:15]FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readsareindeterminateandwriteshavenoeffect.

30-24

CHANMAPx0

CHANMAPx0(6-0).InterruptCHANx0mappingcontrol.Thesebitsdeterminewhichinterrupt

requesttheprioritychannelCHANx0mapsto:

0

Read:Interruptrequest0mapstochannelpriorityCHANx0.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx0issetwiththeinterruptrequest.

1h

Read:Interruptrequest1mapstochannelpriorityCHANx0.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx0issetwiththeinterruptrequest.

...

...

5Fh

Read:Interruptrequest63mapstochannelpriorityCHANx0.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx0issetwiththeinterruptrequest.

23

Reserved

0

Readsareindeterminateandwriteshavenoeffect.

530

VectoredInterruptManager(VIM)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

Table15-19.InterruptControlRegisters[0:31](CHANCTL[0:15]FieldDescriptions(continued)

Bit

Field

Value

Description

22-16

CHANMAPx1

CHANMAPx1(6-0).InterruptCHANx1mappingcontrol.Thesebitsdeterminewhichinterrupt

requesttheprioritychannelCHANx1mapsto:

0

Read:Interruptrequest0mapstochannelpriorityCHANx1.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx1issetwiththeinterruptrequest.

1h

Read:Interruptrequest1mapstochannelpriorityCHANx1.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx1issetwiththeinterruptrequest.

...

...

5Fh

Read:Interruptrequest63mapstochannelpriorityCHANx1.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx1issetwiththeinterruptrequest.

15

Reserved

0

Readsareindeterminateandwriteshavenoeffect.

14-8

CHANMAPx2

CHANMAPx2(6-0).InterruptCHANx2mappingcontrol.Thesebitsdeterminewhichinterrupt

requesttheprioritychannelCHANx2mapsto:

0

Read:Interruptrequest0mapstochannelpriorityCHANx2.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx2issetwiththeinterruptrequest.

1h

Read:Interruptrequest1mapstochannelpriorityCHANx2.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx2issetwiththeinterruptrequest.

...

...

5Fh

Read:Interruptrequest63mapstochannelpriorityCHANx2.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx2issetwiththeinterruptrequest.

7

Reserved

0

Readsareindeterminateandwriteshavenoeffect.

6-0

CHANMAPx3

CHANMAPx3(6-0).InterruptCHANx3mappingcontrol.Thesebitsdeterminewhichinterrupt

requesttheprioritychannelCHANx3mapsto:

0

Read:Interruptrequest0mapstochannelpriorityCHANx3.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx3issetwiththeinterruptrequest.

1h

Read:Interruptrequest1mapstochannelpriorityCHANx3.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx3issetwiththeinterruptrequest.

...

...

5Fh

Read:Interruptrequest63mapstochannelpriorityCHANx3.

Write:ThedefaultvalueofthisbitafterresetisgiveninTable15-18.Thechannelpriority

CHANx3issetwiththeinterruptrequest.

531

SPNU499B–November2012–RevisedAugust2013

VectoredInterruptManager(VIM)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter16

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

Thischapterdescribesthedirectmemoryaccess(DMA)controller.

Topic...........................................................................................................................Page

16.1Overview........................................................................................................533

16.2ModuleOperation............................................................................................534

16.3ControlRegistersandControlPackets..............................................................551

532

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Peripheral BusDMAREQIRQ325READ BusWRITE BusRegister BankLocal RAM (with parity)FIFO BPort B



www.ti.comOverview

16.1Overview

TheDMAcontrollerisusedtotransferdatabetweentwolocationsinthememorymapinthebackground

ofCPUoperations.Typically,theDMAisusedto:

•Transferblocksofdatabetweenexternalandinternaldatamemories

•Restructureportionsofinternaldatamemory

•Continuallyserviceaperipheral

•Pageprogramsectionstointernalprogrammemory

16.1.1MainFeatures

•CPUindependentdatatransfer

•Onemasterport-PortB(64bitswide)thatinterfacesmicrocontrollersMemorySystem.

•FIFObuffer(4entriesdeepandeach64bitwide)

•ChannelcontrolinformationisstoredinRAMprotectedbyparity

•16channelswithindividualenable

•Channelchainingcapability

•32peripheralDMArequests

•HardwareandSoftwareDMArequests

•8,16,32or64-bittransactionssupported

•Multipleaddressingmodesforsource/destination(fixed,increment,offset)

•Auto-initiation

•Power-managementmode

•MemoryProtectionfortheaddressrangeDMAcanaccesswithfourconfigurablememoryregions

16.1.1.1BlockDiagram

Figure16-1givesadetailedviewoftheDMAinternalarchitecture.DMAdatareadandwriteaccess

happensthroughPortB.FIFOBis4levelsdeepand64-bitswide.32DMArequestsgointotheDMAthat

cantriggerDMAtransfers.FiveinterruptrequestlinesgooutoftheDMAtosignalthatacertaintransfer

statusisreached.RegisterbanksholdthememorymappedDMAconfigurationregisters.LocalRAM

consistsofDMAcontrolpacketsandissecuredbyparity.Alltheprogramming/configurationoftheDMA

controllerisdoneviathePeripheralbus.

Figure16-1.DMABlockDiagram

533

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Block

Element1

Element2Frame1ElementCount=2

Element3

Element4Frame2

Element5

Element 6Frame3

Element7

Element8Frame4Framecount=4DMAREQTriggerSource=blocktransfertriggeredbyDMArequest

Block

Element1

Element2Frame1ElementCount=2

Element3

Element 4Frame2

Element5

Element 6Frame3

Element7

Element8Frame4Framecount=4DMAREQDMAREQDMAREQDMAREQTriggerSource=frametransfertriggeredbyDMArequest



ModuleOperationwww.ti.com

16.2ModuleOperation

TheDMAactsasanindependentmasterintheplatformarchitecture.AllDMAmemoryandregister

accessesareperformedinusermode.IftheDMAwritestoregisterswhichareonlyaccessiblein

privilegedmode,thewritewillnotbeperformed.

TheDMAregistersanditslocalRAMcanonlybeaccessedinprivilegemode.Therefore,itisnotpossible

fortheDMAtoreprogramitself.

16.2.1MemorySpace

TheDMAcontrollermakesnodistinctionbetweenprogrammemoryanddatamemory.TheDMA

controllercantransfertoandfromanyspacewithinthe4Gbytephysicaladdressmap,byprogramming

theabsoluteaddressforthesourceanddestinationinthecontrolpacket.

16.2.2DMADataAccess

TheDMAcontrollerreferstodatainthreelevelsofgranularity:

•Element:Dependingontheprogrammeddatatype,an8-bit,16-bit,32-bit,ora64-bitvalue.Thetype

canbeindividuallyselectedforthesource(read)anddestination(write).SeeFigure16-2and

Figure16-3foranexampleoftheuseofelements.Anelementtransfercannotbeinterrupted.

•Frame:Oneormoreelementstobetransferredasaunit.Aframetransfercanbeinterruptedbetween

elementtransfers.SeeFigure16-2foranexample.

•Block:Oneormoreframestobetransferredasaunit.Eachchannelcantransferoneblockofdata

(onceormultipletimes).SeeFigure16-3foranexample.

Figure16-2.ExampleofaDMATransferUsingFrameTriggerSource

Figure16-3.ExampleofaDMATransferUsingBlockTriggerSource

16.2.3AddressingModes

TherearethreeaddressingmodessupportedbytheDMAcontrollerthatcanbesetupindependentforthe

sourceandthedestinationaddress:

•Constant--sourceand/ordestinationaddressesdonotchange.

•Postincremented--sourceand/ordestinationaddressarepost-incrementedbytheelementsize.

•Indexed--sourceand/ordestinationaddressispost-incrementedasdefinedintheElementIndex

OffsetRegister(Section16.3.2.5)andtheFrameIndexOffsetRegister(Section16.3.2.6).

Anunalignedaddresswithrespecttotheelementsizeisnotsupported.Anaddresschosenduring

transfermustbedivisiblebytheelementsize.

534

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ControlPacket0ControlPacket1ControlPacket15

CH0ASI(5–0)

CH1ASI(5–0)

CHnASI(5–0)

DMA_REQ[31:0]ChannelSel0ChannelSel1ChannelSel15



www.ti.comModuleOperation

16.2.4DMAChannelControlPackets

Thereareatotalof16controlpackets.Eachcontrolpacketisassociatedwithachannelinafixedorder.

Forexample,controlpacket0storeschannelinformationforchannel0.TheDMArequestscanbe

mappedtotheindividualchannelsasdescribedinSection16.2.7.Figure16-4illustratesthemapping

schemebetweenDMArequestsandchannels.Eachcontrolpacketcontainsninefields.Thefirstsixfields

composetheprimarycontrolpacketandareprogrammableduringDMAsetup.Thelastthreefields

composeworkingcontrolpacketandareonlyreadablebytheCPU.Theworkingcontrolpacketsareused

tosupportauto-initiation.TheorganizationofcontrolpacketsisshowninFigure16-5.

Theprimarycontrolpacketcontainschannelinformationsuchassourceaddress,destinationaddress,

transfercount,element/frameindexpointerandchannelconfiguration.Sourceaddress,destination

addressandtransfercountalsohavetheirrespectiveworkingimages.Thethreefieldsofworkingimages

composeaworkingcontrolpacketandarenotaccessibletotheCPUinwriteaccess.

ThefirsttimeaDMAchannelisselectedforatransaction,thefollowingprocessoccurs:

1.TheprimarycontrolpacketisfirstreadbytheDMAstatemachine.

2.Oncethechannelisarbitrated,thecurrentsourceaddress,destinationaddressandtransfercountare

thencopiedtotheirrespectiveworkingimages.

3.WhenthechannelisservicedagainbytheDMA,thestatemachinewillreadboththeprimarycontrol

packetandtheworkingcontrolpackettocontinuetheDMAtransactionuntiltheendofanentireblock

transfer.

Whenthesamechannelisrequestedagain,thestatemachinewillstartagainbyreadingonlytheprimary

controlpacketandthencontinuethesameprocessdescribedabove.Theusersoftwareneednotsetup

controlpacketsagainbecausethecontentsoftheprimarycontrolpacketwereneverlost.Theworking

imagesofthecontrolpacketsarereducingthesoftwareoverheadandinteractionwiththeDMAmoduleto

aminimum.

NOTE:Changingthecontentsofachannelcontrolpacketwillclearthecorrespondingpendingbit

(Section16.3.1.2)ifthechannelhasapendingstatus.Ifthecontrolpacketofanactive

channel(asindicatedinSection16.3.1.3)ischanged,thenthechannelwillstopimmediately

atanarbitrationboundary.Whenthesamechannelistriggeredagain,itwillbeginwiththe

newcontrolpacketinformation.

Figure16-4.DMARequestMappingandControlPacketOrganization

535

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




T= E•E•Fszrsztctc

FrameIndexPointer

Base + 0x000x20InitialSourceAddrChannelConfigurationInitialDestinationAddrElementIndexPointerInitialTransferCountFrameIndexPointerInitialSourceAddrChannelConfigurationCurrentSourceAddrInitialDestinationAddrElementIndexPointerCurrentDestinationAddrInitialTransferCountFrameIndexPointerCurrentTransferCount

0x30

0x800

CurrentSourceAddrCurrentSourceAddr

Reserved

ReservedReserved

CurrentDestinationAddrCurrentDestinationAddrCurrentTransferCountCurrentTransferCount0x1F00x1E00x8100x8F0

Base+0xXXXCReserved0x10PrimaryCP0PrimaryCP1PrimaryCPnnWorkingCP0WorkingCP1WorkingCPnnBase + 0XXX0Base + 0xXXX4Base + 0xXXX8Initial ScouceAddrChannel ConfigurationInitial DestinationAddrInitialTransfer CountElement Index Pointer}}}}}}



ModuleOperationwww.ti.com

Figure16-5.ControlPacketOrganizationandMemoryMap

16.2.4.1InitialSourceAddress

Thisfieldstorestheabsolute32-bitsourceaddressoftheDMAtransfer.

16.2.4.2InitialDestinationAddress

Thisfieldstorestheabsolute32-bitdestinationaddressoftheDMAtransfer.

16.2.4.3InitialTransferCount

Thetransfercountfieldiscomposedoftwoparts.Theframetransfercountvalueandtheelementtransfer

countvalue.Eachcountvalueis13bitswide.AsaSingleBlocktransfermaximumof512Mbytesofdata

canbetransferred.Elementcountandframecountareprogrammedaccordingtothesourcedata

structure.

Thetotaltransfersizeiscalculatedasstatedbelow:

(27)

where

Tsz=TotalTransferSize

Ersz=ReadElementSize

Etc=ElementTransferCount

Ftc=FrameTransferCount

NOTE:Azeroelementcountwithanon-zeroframecountoranon-zeroelementcountwithazero

framecountareallconsideredaszerototaltransfercount.NoDMAtransactionisinitiated

withanyofthecounterssetto0.

536

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

16.2.4.4ChannelConfigurationWord

Thechannelconfigurationdefinesthefollowingindividualparameters

•Readelementsize

•Writeelementsize

•Triggertype(frameorblock)

•Addressingmodeforsource

•Addressingmodefordestination

•Auto-initiationmode

•Nextcontrolpackettobetriggeredatcontrolpacketfinish(ChannelChaining)

16.2.4.5Element/FrameIndexPointer

Thereare4indexpointersthatallowthecreationofdifferenttypesofbuffersinRAMandaddress

registersinastructuredmanner:anelementindexpointerforsourceanddestinationandaframeindex

pointerforsourceanddestination.

Theelementindexpointerforsourceand/ordestinationdefinestheoffsettobeaddedaftereachelement

transfertothesourceand/ordestinationaddress.Theframeindexpointerforsourceand/ordestination

definestheoffsettobeaddedtothesourceand/ordestinationaddressaftertheelementcountreaches

zero.Theelementandframeindexpointersmustbedefinedintermsofthenumberofbytesofoffset.The

DMAcontrollerdoesnotadjusttheelement/frameindexnumberaccordingtotheelementsize.Anindex

of2meansincrementtheaddressby2andnotby16whentheelementsizeis64bits.

16.2.4.6CurrentSourceAddress

ThecurrentsourceaddressfieldcontainsthecurrentworkingsourceaddressduringaDMAtransaction.

Thecurrentsourceaddressisincrementedduringpostincrementaddressingmodeorindexingmode.

16.2.4.7CurrentDestinationAddress

ThecurrentdestinationaddressfieldcontainsthecurrentworkingdestinationaddressduringaDMA

transaction.Thecurrentdestinationaddressisincrementedduringpost-incrementaddressingmodeor

indexingmode.

16.2.4.8CurrentTransferCount

Thecurrenttransfercountstorestheremainingnumberofelementstobetransferredinablock.Itis

decrementedbyoneforeachelementreadfromthesourcelocation.

Figure16-6,Figure16-7andFigure16-8showsomeexamplesofDMAtransfers.

537

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




0x00x100x200x30E1E2E3E5E6E7E8E9E10E11E12E13E14E15E16

E4ElementIndex=16FrameIndex=4ElementSize=16bitElementCount=4FrameCount=4This example can be applied to either source ordestination indexing and assumes the following setup.f1f2f3f4

E1

E4

E7

E2

E5

E8

E3

E6

SourceDestinationDest.ElementIndex=1Dest.FrameIndex=0Dest.ElementIndex=0Dest.FrameIndex=1

E1/2

E3/4

E5/6

E1

E2

E3

E4

E5

E6

E7

E8

E1

E3

E5

E2

E4

E6

E8

E7Dest.ElementIndex=1Dest.FrameIndex=2Dest.ElementIndex=4Dest.FrameIndex=1

0x000x040x080x0C

0x00x40x00x40x00x40x0

E7/8

E1/3/5/7E2/4/6/8SourceElementIndex=12SourceFrameIndex=1Theexampleassumesthefollowingsetup.ReadElementSize=8bitWriteElementSize=8bitElementCount=2FrameCount=4f2f3f4f1



ModuleOperationwww.ti.com

Figure16-6.DMATransferExample1

Figure16-7.DMAIndexingExample1

538

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TheabovefigureillustratesthatbydefaultLowerthechannelnumber,higherthePriority.

PriorityQueueCh0Ch2Ch3Ch4...

ControlPacket0ControlPacket1ControlPacket2ControlPacket3ControlPacket4ControlPacket5ControlPacket6ControlPacket7ControlPacket8ControlPacket9ControlPacket10ControlPacket11ControlPacket12ControlPacket13ControlPacket14ControlPacket15

TriggeredChannelsORDEROFPRIORITYHighLow

0x00x40E1E2E13E4E5E16E7E8E19E10E11E22

0x80

0x200x60ElementIndex=64FrameIndex=4ElementSize=32bitElementCount=3FrameCount=8E14E17E20E23E3E6E9E12E15E18E21E23This example can be applied to either source ordestination indexing and assumes the following setup.



www.ti.comModuleOperation

Figure16-8.DMAIndexingExample2

16.2.5PriorityQueue

Usercanassignchannelsintopriorityqueuestofacilitaterequesthandlingduringarbitration.Theport

hastwopriorityqueues:ahighandalowpriorityqueue.Thequeuecanbeconfiguredtofollowafixedor

rotatingpriorityscheme.Fixedpriorityissuchthatthelowerthechannelnumber(Figure16-9),thehigher

itspriority.Rotatingpriorityisbasedonaround-robinscheme.Initially,theprioritylistissortedaccording

tothefixedpriorityscheme.Channelsassignedtothehighpriorityqueuearealwaysservicedfirst

accordingtotheselectedpriorityschemebeforechannelsinthelowpriorityqueueareserviced.Table16-

1describeshowarbitrationisperformedaccordingtodifferentpriorityschemes.

NOTE:SincetheDMAcontrollerprovidesthecapabilitytomapanyoneofthe32hardwareDMA

requestlinestoanychannel,thenumericalorderofthehardwareDMArequestdoesnot

implyanypriority.ThepriorityofeachhardwareDMArequestisprogrammedand

determinedbysoftware.

Figure16-9.FixedPriorityScheme

539

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CH2CH4CH5CH7CH1CH3CH6

CH1

CH3

CH7

CH9

CH13

CH15

CH2

CH4

CH6

CH8

CH10

CH14

inqueueinuse

Pendingtriggered

Start/Stopserving

CH2CH4CH5CH7CH1CH3CH6

CH1

CH3

CH7

CH9

CH13

CH15

CH2

CH4

CH6

CH8

CH10

CH14

inqueueinuse

CH2CH4CH5CH7CH1CH3CH6

CH1

CH3

CH7

CH9

CH13

CH15

CH2

CH4

CH6

CH8

CH10

CH14

HighqueueLowqueueFixedRotationin queuein usein queuein use



ModuleOperationwww.ti.com

Table16-1.ArbitrationAccordingtoPriorityQueuesandPrioritySchemes

Queue

PriorityScheme

Remark

Channelsareservicedinanascendingorderaccordingtothechannelnumber.

Thelowerthechannelnumber,thehigherthepriority.Achannelwillbe

arbitratedoutwheneverthereisahigherpendingchannel.Otherwiseachannel

Fixed

iscompletelyserviceduntilitstransfercountreacheszerobeforethenext

highestpendingchannelisserviced.Whenthereisnopendingchannelsleftin

Highpriority

highqueuethentheDMAswitchestoservicelowqueuechannels.

Channelsarearbitratedbyusingtheround-robinscheme.Arbitrationis

Rotating

performedwhentheFIFOisempty.Whentherearenopendingchannelsleftin

highqueuethentheDMAswitchestoservicelowqueuechannels.

Channelsareservicedinanascendingorderaccordingtothechannelnumber.

Thelowerthechannelnumberthehigherthepriority.Achannelwillbearbitrated

outwheneverthereisahigher-prioritypendingchannel.Otherwiseachannelis

Fixed

completelyserviceduntilitstransfercountreacheszero,beforethenexthighest

pendingchannelisserviced.Ifthereisapendingchannelinthehigh-priority

Lowpriority

queuewhileDMAisservicingalowqueuechannelthenDMAwillswitchbackto

servicehighqueuechannelafteranarbitrationboundary.

Channelsarearbitratedbyusinground-robinscheme.Arbitrationisperformed

Rotating

whentheFIFOisempty.

ASimplePriorityQueuesexampleinbothFixedandRotationSchemeisshowninFigure16-10.

Figure16-10.ExampleofPriorityQueues

Foroptimalsystemperformance,thehighprioritychannelsshouldbeputinfixedarbitrationschemeand

lowprioritychannelsintherotatingpriorityschemeasillustratedinFigure16-11.

540

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PortB Priority QueuehighlowCh0Ch2Ch3Ch4Ch8,Ch12fixedpriorityrotationalpriority

ControlPacket0ControlPacket1ControlPacket2ControlPacket3ControlPacket4ControlPacket5ControlPacket6ControlPacket7ControlPacket8ControlPacket9ControlPacket10ControlPacket11ControlPacket12ControlPacket13ControlPacket14ControlPacket15

1The above figure illustrates the channel assignments in a system with 16 channels.This approach can be scaled dependent on the total channels available.



www.ti.comModuleOperation

Figure16-11.ExampleChannelAssignments

16.2.6DataPackingandUnpacking

TheDMAcontrollerautomaticallyperformsthenecessarydatapackingandunpackingwhentheread

elementsizediffersfromthewriteelementsize.Datapackingisrequiredwhenthereadelementsizeis

smallerthanthewriteelementsize;dataunpackingisrequiredwhenthereadelementsizeislargerthan

thewriteelementsize.Whenthereadelementsizeisequaltothewriteelementsize,nopackingis

performedduringread,norisanyunpackingperformedduringwrite.

Figure16-12showsanexampleofdataunpackinginwhichtheDMAisusedtotransfer128transmitdata

elementstotheMibSPIFIFObuffer.Inthisexample,dataunpackingisrequiredbecausetheread

elementsizeis64whilethewriteelementsizeis16.TheDMAfirstperformsan64-bitreadfromthe

sourceintoitsFIFObuffer.Afterthe64-bitdataisreadintotheDMAFIFObuffer,itmustunpackthedata

intofour16-bitdataelementsbeforewritingouttothedestination.ThereforetheDMAwouldneedto

performfour16bitwriteoperationstothedestination.

NOTE:IntheexampleinFigure16-12,totransmitdataatthelowerbitsoftheMibSPI,bits15:0,the

destinationaddressshouldbeincrementedbyafactorof2.

NOTE:1)TheelementCount(Section16.3.2.3)refersonlytothereadelement.

2)DataunpackingdoesnotrequiretheDMArequest.OncetheDMArequestisreceived,

datafromSourceismovedintoFIFOandunpackinghappensuntiltheFIFOisempty.

3)DMAassumesthedestinationisalwaysreadyandwillperformwriteimmediately.Incase

ofdataunpackingandConstantAddressingModewrite(Section16.3.2.4(1-0)=0)the

destinationdatawillbeoverwrittenbynextdataornextdatamightbeskippedincasethe

destinationhasoverflowprotection(eg.,SCITDregister).UsershouldconfigureDMAto

avoiddataunpackingiftheDestinationisconfiguredasConstantAddressingModewriteto

avoiddataloss.

541

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Transmitbuf0Transmitbuf1Transmitbuf127Receivebuf0Receivebuf1Receivebuf127E0E1E127Control0Control1Control127Status0Status1Status127

MIBSPIFIFOorganization64-bitmemoryorganization0x00x40x400

E3E2E1E00x00x8

6303116150E124E125E126E127E4E5E6E7

Inthisexample,initializationoftheMIBSPIFIFOisillustratedandassumesthefollowingsetup:ReadElementSize=64bitWriteElementSize=16bitElementCount=32FrameCount=1SourceElementIndex=n/a,usepostincrementaddressingmodeSourceFrameIndex=n/a,usepostincrementaddressingmodeDestinationElementIndex=4DestinationFrameIndex=0



ModuleOperationwww.ti.com

Figure16-12.ExampleofDMADataUnpacking

Whenthereadelementsizeissmallerthanthewriteelementsize,theDMAcontrollerneedstoperform

datapacking.Thenumberofelementstopackisequaltotheratiobetweenthewriteelementsizeand

readelementsize.IntheexampleinFigure16-13,thereadelementsizeis16bitsandthewriteelement

sizeis64bits.TheDMAcontrollerwouldfirstpackthefirstfourelementsbyperformingfourconsecutive

16-bitreadaccessesofE0,E1,E2,andE3intothefirstwordoftheDMA'sinternalFIFO.TheDMA

controllerwouldthenperformonesingle64-bitwriteoperationtotransferthedatatothe64-bitdestination

memory.

Normally,theDMAcontrollercarriesoutbustransactionsonthebusaccordingtotheelementsize.For

example,theDMAcontrollerwouldperforma16-bitreadtransactionifthereadelementsizeis

programmedas16bits,oran8-bitwritetransactionifthewriteelementsizeisprogrammedas8bit.The

exceptioniswhenthetotaltransfersizeisasdefinedinEquation27isnotamultipleofthewriteelement

size.

542

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Transmitbuf0Transmitbuf1Transmitbuf127Receivebuf0Receivebuf1Receivebuf127E0E1E127Control0Control1Control127Status0Status1Status127MIBSPIFIFOorganization0x00x40x400

3116150

64-bitmemoryorganization

E1E0E3E20x00x8

630E126E127E124E125E6E7E4E5

Inthisexample,areadoftheMIBSPIFIFOisillustratedandassumesthefollowingsetup:ReadElementSize=16bitWriteElementSize=64bitElementCount=128FrameCount=1SourceElementIndex=4SourceFrameIndex=0DestinationElementIndex=n/a,usepostincrementaddressingmodeDestinationFrameIndex=n/a,usepostincrementaddressingmode



www.ti.comModuleOperation

Figure16-13.ExampleofDMADataPacking

Forexample,ifthereadelementsizeis8bits,theelementtransfercountisequalto9,andthewrite

elementsizeis64bit.TheDMAcontrollerwouldfirstperformeight8-bitreadtransactionsfromthe

source.Itwouldthenperforma64-bitwritetothedestination.Whenthesamechannelwinsarbitration

again,theDMAcontrollerwouldfirstperformone8-bitreadfromthesource,followedbyone8-bitwriteto

thedestination,eventhoughthewriteelementsizeis64bit.

NOTE:Sinceperipheralsareslower,itisadvisedtousedatapackingfeaturewithcautionfor

readingdatafromperipherals.ImproperusemightdelayservicingotherpendingDMA

channels.

16.2.7DMARequest

TherearethreewaystostartaDMAtransfer:

•Softwarerequest:ThetransferwillbetriggeredbywritingtoSWChannelEnableSetandStatus

Register(Section16.3.1.6).Thesoftwarerequestcantriggereitherablockoraframetransfer

dependingonwhatthetriggertype(TTYPE)bitissettointheChannelControlRegister

(Section16.3.2.4)register.

•Hardwarerequest:TheDMAcontrollercanhandleupto32DMARequestlines.Ahardwarerequest

cantriggereitheraframeorablocktransferdependentonthesettingofTTYPEcontrolbitofthe

ChannelControlRegister(Section16.3.2.4)register.

543

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

•Triggeredbyothercontrolpacket:Whenacontrolpacketfinishestheprogrammednumberof

transfersitcantriggeranotherchanneltoinitiateitstransfers.

EachtimeaDMArequestismade,eitheroneframetransferoroneblocktransfercanbechosen.An

activeDMArequestsignalwilltriggeraDMAtransaction.

TheDMAcontrollerhasatwo-levelbuffertocaptureHWrequestsperchannel.WhenaHWrequestis

generatedandthechannelisenabled,thecorrespondingbitintheDMAStatusRegister

(Section16.3.1.3)isset.Thependingregisteractsasafirst-levelbuffer.Typically,aperipheralactingasa

sourceofatransferwouldinitiateanotherrequestafteritsdataregistershavebeenreadoutbyDMA,

eventhoughthatdatahasnotbeencompletelytransferredtothedestination.IfasecondHWrequestis

generatedbytheperipheral,theDMAcontrollerhasanextrarequestbuffertocapturethissecondrequest

andserviceitafterthefirstrequestiscomplete.

NOTE:TheDMAcannotcapturemorethanthreerequestsifitsrequestbuffersarealreadyfull.If

anyrequestoccurduringthismomentDMAwilldiscardit.

TheDMAcontrolleralsosupportsamixofhardwareandsoftwarerequestsonthesamechannel.Note

thatsuchinterchangeableusagemayresultintoanoutofsyncforDMAchannelandperipheral.The

applicationneedstobecarefulastheDMAdoesnothaveabuilt-inmechansimtoprotectagainstthisloss

ofsynchronization.

Ifasoftwarerequestisgenerated,thecorrespondingbitintheChannelPendingRegister

(Section16.3.1.2)issetaccordingly.IfthependingrequestisnotcompletelyservicedbytheDMAanda

hardwarerequestisgeneratedbyaperipheralontothesamechannel,theDMAwillcaptureand

recognizethishardwarerequestintoitsrequestbuffer.

NOTE:TheDMAcontrollercannotrecognizetwosoftwarerequestsonthesamechannelifthefirst

softwarerequestisstillpending.IfsuchrequestoccurDMAwilldiscardit.Thereforetheuser

S/Wshouldcheckthependingregisterbeforeissueanewsoftwarerequest.

16.2.8Auto-Initiation

WhenAuto-initiationMode(AIM)bitofChannelControlRegister(Section16.3.2.4)registerisenabledfor

achannelandthechannelistriggeredbyasoftwarerequestforablocktransfer,thechannelwillrestart

againusingthesamechannelinformationstoredattherespectivecontrolpacketafteroneblocktransfer

iscompleted.InthecaseofHardwareRequestthechannelneedstoberetriggeredeachtimeaftera

blockiscompleteevenifauto-initiationisenabled.

16.2.9Interrupts

Eachchannelcanbeconfiguredtogenerateinterruptsonseveraltransferconditions:

•Frametransfercomplete(FTC)interrupt:aninterruptisissuedafterthelastelementofaframehas

beentransferred.

•Lastframetransferstarted(LFS)interrupt:aninterruptisissuedbeforethefirstelementofthelast

frameofablocktransferhasstarted.

•Firsthalfofblockcomplete(HBC)interrupt:aninterruptisissuedifmorethanhalfoftheblockis

transferred.

–Ifthenumberofframesnisodd,thentheHBCinterruptisgeneratedattheendoftheframewhen

(n+1)/2numberofframesareleftintheblock.

–Ifthenumberofframesniseven,thentheHBCinterruptisgeneratedattheendoftheframeafter

n/2numberofframesareleftintheblock.

•Blocktransfercomplete(BTC)interrupt:aninterruptisissuedafterthelastelementofthelastframe

hasbeentransferred.

•Buserror(BER)interrupt:aninterruptisissuedwhenDMAdetectsanerroronthebus.TheBER

interruptisconnectedtotheESMmodule.

•MemoryProtectionUniterror(MPU):aninterruptisissuedwhentheDMAdetectsthattheaccessfalls

544

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CHANNELSPECIFICINTERRUPTPARITYERRORMPUERRORERRORSIGNALINGMODULE(ESM)VECTORINTERRUPTMODULE(VIM)CPUFTCALFSAHBCABTCABERAMPUPARHighLowGROUPA



www.ti.comModuleOperation

outsideofamemoryregionprogrammedintheMPUregistersoftheDMA.TheMPUinterruptis

connectedtotheESMmodule.

•Parityerror(PAR):aninterruptisissuedwhentheDMAdetectsaparityerrorwhenreadingoneofthe

controlpackets.ThePARinterruptisconnectedtotheESMmodule.

TheDMAoutputs5interruptlinesforcontrolpackethandling,aparityinterruptandamemoryprotection

interrupt(Figure16-14).Eachtypeoftransferinterruptconditionisgroupedtogether.Forexample,all

block-transfercompleteinterruptsthatareroutedtoaportarecombined(OR'ed).Thechannelthat

causedtheinterruptisgiveninthecorrespondinginterruptchanneloffsetregister.Prioritybetween

interruptsamongthesameinterrupttypeisresolvedbyafixedpriorityscheme.Prioritybetweendifferent

interrupttypesisresolvedintheVectorInterruptManager.Figure16-15explainstheFrameTransfer

CompleteInterruptstructureindetail.

NOTE:EachChannelSpecificinterruptsinDMAmoduleareroutedtowardsGroupAorBto

supporttwodifferentCPUsindividually.FordeviceswithSingleCPUorDualCPUwhere

bothCPUsarerunningsamecodeindelayedlock-stepassafetyfeature:

GroupA-Interrupts(FTC,LFS,HBC,BTCandBER)areroutedtotheARMCPU.

GroupB-Interrupts(FTC,LFS,HBC,BTCandBER)arenotroutedout.

UsersoftwareshouldconfigureonlyGroupAinterrupts.

Figure16-14.DMAInterrupts

545

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




FTCBFameTransferComplete Ch0FTC0ABFTC31ABFameTransferComplete Ch311This figure is applicable for HBC, LFS, BTC, and BER interrupt• • •• • •



ModuleOperationwww.ti.com

Figure16-15.DetailedInterruptStructure(FrameTransferCompletePath)

16.2.10Debugging

TheDMAsupportsfourdifferentbehaviorsinsuspendmode.Thesebehaviorscanbeconfiguredbythe

useraspertheapplicationrequirement.

•ImmediatestopataDMAchannelarbitrationboundary.PleaserefertoTable16-2andTable16-3for

arbitrationboundarydefinition.

•Finishcurrentframetransferandcontinueaftersuspendends.

•Finishcurrentblocktransferandcontinueaftersuspendends.

•Ignorethesuspend.TheDMAcontinuestobeoperationalasinfunctionalmodewhendebugmodeis

active.

WhentheDMAcontrollerenterssuspendmode,itcontinuestosampleincominghardwareDMArequests,

buttheChannelPendingRegister(Section16.3.1.2)isfrozenfrombeingupdated.Afterthesuspend

ends,allnewrequeststhatwerereceivedduringsuspendmodearereflectedintheChannelPending

Register(Section16.3.1.2).

ExceptwhentheDMAcontrollerisconfiguredtoignoresuspendmode,nochannelarbitrationis

performedduringsuspendmode.Thecurrentchannelunderwhichsuspendmodewasenteredwillfinish

itsentireframeorblock-transferaftersuspendmodeends,dependinghowthedebugoptionwaschosen.

Tofacilitatedebugging,aWatchPointRegister(Section16.3.1.50)andaWatchMaskRegister

(Section16.3.1.51)areused.Thewatchpointregistertogetherwiththewatchmaskregistercanbe

configuredtowatchforauniqueaddressorarangeofaddresses.Whentheconditiontowatchistrue,the

DMAfreezesitsstateandgeneratesadebugrequestsignaltothehostCPUsothestateoftheDMAcan

beexamined.

16.2.11PowerManagement

TheDMAofferstwopower-managementmodes:runandsleep.Inrunmode,theDMAisfullyoperational.

ThesleepmodeshutsdowntheDMAifnopendingchannelsarewaitingtobeserviced.IfaDMArequest

isreceivedorasoftwarerequestisgeneratedbytheusersoftware,thentheDMAwakesupimmediately.

ThesleepmodemaybeusedtooptimizetheDMAmodulepowerconsumption.

Whenthesystemmoduleissuesagloballowpowermoderequest,theDMAwillrespondtothesystem

modulewithanacknowledgeifnoDMArequestsarepending.

546

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

NOTE:WhentheDMAisingloballowpowermode,theclockisstoppedandthereforeitcannot

detectanyDMArequest.Thedevicemustbewokenupbeforeaperipheralcangeneratea

DMArequest.

16.2.12FIFOBuffer

DMAFIFOis4levelsdeepand64-bitwide(canholdupto4x64-bitsofdata).TheyareusedforData

packingandunpacking.

TheDMAFIFOhastwostates:

•EMPTY:TheFIFOcontainsnodata.

•FULL:TheFIFOisfilledortheelementcounthasreachedzero;thereadoperationhastobestopped.

DMAchannelscanonlybeswitchedwhentheFIFOisempty.Thisalsoimpliesthatarbitrationbetween

channelsisdonewhentheFIFOisempty.

TheFIFObuffermaybebypassedthroughtheuseofthebypassfeatureintheportcontrolregister;see

PortControlRegister(Section16.3.1.47)forregisterdetails.Writing1tothisbitlimitstheFIFOdepthto

thesizeofoneelement.Thatmeansafteroneelementisreadthewriteouttothedestinationwillstart.

Thisfeatureisparticularlyusefultominimizeswitchinglatencyin-betweenchannels.Whenbypassmode

isenabled,theDMAwillperformminimalbuscyclesonAHBbus.Inaddition,thebypassfeatureallows

arbitrationbetweenchannelsthatcanbecarriedoutatasourceelementgranularity.

However,ithastobeconsideredthatwhileinbypassmode,theDMAcontrollerdoesnotmakeoptimal

useofthebusbandwidth.Sincethereadandwriteelementsizescanbedifferent,thenthenumberof

readandwritetransactionswillbedifferent.Table16-2andTable16-3showacomparisonbetweenthe

numberofreadandwritetransactionsperformedbytheDMAcontrollerfromonechanneltoanother

beforearbitrationinnon-bypassandbypassmode.

Table16-2.MaximumNumberofDMATransactionsperChannelinNon-BypassMode

Write

Element

8bit

16bit

32bit

64bit

Size

8bit

4read

4write

4read

2write

4read

1write

8read

1write

Read

16bit

2read

4write

4read

4write

4read

2write

4read

1write

Element

32bit

1read

4write

2read

4write

4read

4write

4read

2write

Size

64bit

1read

8write

1read

4write

2read

4write

4read

4write

Table16-3.MaximumNumberofDMATransactionsperChannelinBypassMode

Write

Element

8bit

16bit

32bit

64bit

Size

8bit

1read

1write

2read

1write

4read

1write

8read

1write

Read

16bit

1read

2write

1read

1write

2read

1write

4read

1write

Element

32bit

1read

4write

1read

2write

1read

1write

2read

1write

Size

64bit

1read

8write

1read

4write

1read

2write

1read

1write

16.2.13ChannelChaining

ChannelchainingisusedtotriggerasingleormultiplechannelswithoutanexternalDMArequest.Thisis

possiblebychainingonecontrolpackettoother.Chain[5:0]fieldoftheChannelControlRegister

(Section16.3.2.4)isusedtoprogramthechainingcontrolpacket.Chainedcontrolpacketsfollow

arbitrationruleswithinthependingregister.ForexampleifCH1,CH2,CH4,CH5aretriggeredtogether

andCH3ischainedwithCH1.TheorderofchannelsservicedinspiteofchainingwillbeCH1->CH2->

CH3->CH4->CH5.

547

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DMA_REQ[31:0]CH15ASI[5:0]CH14ASI[5:0]CH1ASI[5:0]CH1ASI[5:0]Ch chain0Ch Sel0Ch chain1Ch Sel1Ch chain14Ch Sel14Ch chain15Ch Sel150000PendingRegisterBit 0Bit 2Bit 14Bit 15Bit 1



ModuleOperationwww.ti.com

Inordertosetupupchannelchainfeature,theChannelControlRegister(Section16.3.2.4)registerneeds

tobeenabledforallchainedchannelsbeforetriggeringfirstDMArequest.

Figure16-16illustrateshowinternallychainedrequestisgeneratedaftercompletingtherequiredtransfers

andstoredinpendingregister.InthisexampleCH1isChainedtoCH0.WhenCH0istriggeredCH1is

capturedaspendingintheChannelPendingRegister(Section16.3.1.2)evenwhenitisnottriggered.

Figure16-16.ExampleofChannelChaining

16.2.14MemoryProtection

TheDMAcontrolleriscapableofaccesstothefulladdressrangeofthedevice.Theprotection

mechanismallowstheprotectionofuptofourmemoryregionstorestrictaccessestothoseaddress

ranges.Thiswillallowtheapplicationtoprotectcriticalapplicationdatafromunintentionallybeing

accessedbytheDMAcontroller.

16.2.14.1ProtectionMechanism

Thememoryprotectionmechanismconsistsoftheaccessprivilegeforagivenmemoryregion,thestart

andendaddressfortheregion,andnotificationofanaccessviolationfortheprotectedregion.

Eachregiontobeprotectedisconfiguredbysoftwarebywritingthestartaddressandendaddressfor

eachregionintotheDMAMemoryProtectionRegisters,DMAMPRxSandDMAMPRxE.Thedefinitionof

theseregisterscanbefoundstartingatSection16.3.1.57.Anyregioninthevalidaddressspacecanbe

protectedfrominappropriateaccesses.

Theaccessprivilegescanbesettooneoffourpermissionsettingsasshownbelow:

•Fullaccess

•Readonlyaccess

•Writeonlyaccess

•Noaccess

ThepermissionsforagivenregionareselectedbywritingtheappropriatevaluesintheDMAMemory

ProtectionControlRegister(Section16.3.1.57).

548

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




0x000000000x080000000x08003FFF

0xFFFFFFFFSystem+peripherals

Region0Region1NoaccessrestrictionsAccessrestrictionsRAM

Region2Region30xFFF78000



www.ti.comModuleOperation

NOTE:Iftheregionsdefinedbythestartandendaddressesoverlap,theregiondefinedfirstinthe

registerspacedeterminestheaccessprivilege.Forexample,ifregion0andregion1

overlap,theaccesspermissionsdefinedforregion0willtakeprecedencesinceregion0

registersarebeforeregion1.

Inacasewhereamemoryprotectionviolationoccurs,aflagwillbesetandaninterruptwillbegenerated,

ifinterruptsareenabled.TheDMAMemoryProtectionStatusRegister(Section16.3.1.58)containsthe

statusflagsforthememoryprotectionmechanism,andtheDMAMemoryProtectionControlRegister

(Section16.3.1.57)containstheinterruptenablebits.Upondetectionofthememoryprotectionviolation,

theDMAChannelthatcausedtheviolationwillbestoppedandthenextavailableDMAchannelwillbe

serviced.

Figure16-17Illustratesaprotectionmechanism.

Figure16-17.ExampleofProtectionMechanism

16.2.15ParityChecking

Paritycheckingisimplementedusingparityonaper-bytebasisforDMAControlPacketsintheRAM.

Checkingforevenoroddparitycanbeprogrammedbya4-bitkeylocatedinthesystemmodulethat

controlstheparityconfigurationonaglobalbasis.Thisensuresthatallmodulesusingparityareactingin

thesamemanner.Thedefaultsetupafterresetisoddparity.

Inaddition,paritycheckingcanbeenabledanddisabledwithinthemodulebya4-bitkey.Thekeyis

locatedintheParityControlRegister(Section16.3.1.55).

Duringareadaccess,regardlessifitwasreadbytheDMAstatemachineoranothermaster(CPU),the

parityiscalculatedbasedonthedatareadfromtheRAMandcomparedwiththegoodparityvaluestored

intheparitybits.Ifanywordfailstheparitycheck,thenaparityerrorinterruptisgenerated.Theaddress

thatgeneratedtheerrorisdetectedandiscapturedforhostsystemdebuggingintheDMAParityError

AddressRegister(Section16.3.1.56).Theaddressisfrozenfrombeingupdateduntilitisreadbythebus

master.

Additionalerrorhandlingisdependentontherequestor.

•DMAreadingfromacontrolpacketRAM:ThetransmissionrequestedbyDMArequestwillnottake

place.

•CPUreadingfromthecontrolpacketRAM:ThedatawillberetrievedbytheCPUandaparityerror

549

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

interruptwillbegenerated.

Inbothcases,thecontrolpacketwillbeleftactiveortheDMAwillbeswitchedoffdependentonthe

ERRAbitintheParityControlRegister(Section16.3.1.55).

16.2.16ParityTesting

TheparityRAMisaccessibletoallowmanuallyinsertingfaultssothattheparitycheckingfeaturecanbe

tested.TestmodeisenteredbyassertingtheTESTbitwithintheSection16.3.1.55register.Oncethebit

isset,theparitybitsaremappedtothecontrolpacketRAMstartingaddressA00h.

NOTE:Whenintestmode,noparitycheckingwillbedonewhenreadingfromparitymemory,but

paritycheckingwillbeperformedonthenormalmemory.

EachbyteinControlPacketRAMhasitsownparitybitintheControlPacketParityRAMasshownin

Table16-4,Table16-5andTable16-6.P0istheparitybitforbyte0,P1istheparitybitforbyte1andso

on.

EachbyteinthecontrolpacketRAMhasitsownparitybitinthecontrolpacketparityRAMasshownin

Table16-4andTable16-5.

Table16-4.ControlPacketRAM

Bit

31

24

23

16

15

8

7

0

Word0

Byte0

Byte1

Byte2

Byte3

Word1

Byte4

Byte5

Byte6

Byte7

Word2

Byte8

Byte9

Byte10

Byte11

Word3

Byte12

Byte13

Byte14

Byte15

Table16-5.ControlPacketRAM

Bit

127

96

95

64

63

32

31

0

Word3

Word2

Word1

Word0

Table16-6.ParityRAM

Bit

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

P15

P14

P13

P12

P11

P10

P9

P8

P7

P6

P5

P4

P3

P2

P1

P0

16.2.17InitializingRAMwithParity

Afterpowerup,theRAMcontentincludingtheparitybitcannotbeguaranteed.Toavoidparityfailures

whenreadingRAM,theRAMhastobeinitialized.TheRAMcanbeinitializedbywritingknownvaluesinto

it.Whentheknownvalueiswritten,thecorrespondingparitybitwillbeautomaticallycalculatedand

updated.

Anotherpossibilitytoinitializethememoryistoseta4-bitkeyinthesystemmodule.Thiskeytriggersthe

automaticinitializationofallRAMsonthemicrocontroller.TheRAMwillbeinitializedto0.Dependingon

theeven/oddparityselection,theparitybitwillbecalculatedaccordingly.

Toallowforparitycalculationduringinitialization,theparityfunctionalityhastobeenabledasdiscussedin

Section16.2.15.

550

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3ControlRegistersandControlPackets

ThissectiondetailstheDMAcontrolregistersandmemorymap,summarizedinTable16-7.Table16-8

summarizesthecontrolpackets.Eachregisterbeginsonawordboundary.Allregistersandcontrol

packetsareaccessiblein8,16,and32bit.ThebaseaddressforthecontrolregistersisFFFFF000h.

NOTE:TheregisterdefinitionsaregivenforafullDMAmoduleconfiguration(32channels,64

requests,2Ports,DualCPUsupport).WritesandReadsofbitspertainingtofeaturesnot

includedintheDMAimplementationasdefinedinthedevicespecificdatasheetarepossible

withouterror;however,theywillhavenoaffectondeviceoperation.

NOTE:Controlregistersandcontrolpacketshavetwodifferentbaseaddresses.

Table16-7.DMAControlRegisters

Offset

Acronym

RegisterDescription

Section

00

GCTRL

GlobalControlRegister

Section16.3.1.1

04h

PEND

ChannelPendingRegister

Section16.3.1.2

0Ch

DMASTAT

DMAStatusRegister

Section16.3.1.3

14h

HWCHENAS

HWChannelEnableSetandStatusRegister

Section16.3.1.4

1Ch

HWCHENAR

HWChannelEnableResetandStatusRegister

Section16.3.1.5

24h

SWCHENAS

SWChannelEnableSetandStatusRegister

Section16.3.1.6

2Ch

SWCHENAR

SWChannelEnableResetandStatusRegister

Section16.3.1.7

34h

CHPRIOS

ChannelPrioritySetRegister

Section16.3.1.8

3Ch

CHPRIOR

ChannelPriorityResetRegister

Section16.3.1.9

44h

GCHIENAS

GlobalChannelInterruptEnableSetRegister

Section16.3.1.10

4Ch

GCHIENAR

GlobalChannelInterruptEnableResetRegister

Section16.3.1.11

54h

DREQASI0

DMARequestAssignmentRegister0

Section16.3.1.12

58h

DREQASI1

DMARequestAssignmentRegister1

Section16.3.1.13

5Ch

DREQASI2

DMARequestAssignmentRegister2

Section16.3.1.14

60h

DREQASI3

DMARequestAssignmentRegister3

Section16.3.1.15

94h

PAR0

PortAssignmentRegister0

Section16.3.1.16

98h

PAR1

PortAssignmentRegister1

Section16.3.1.17

B4h

FTCMAP

FTCInterruptMappingRegister

Section16.3.1.18

BCh

LFSMAP

LFSInterruptMappingRegister

Section16.3.1.19

C4h

HBCMAP

HBCInterruptMappingRegister

Section16.3.1.20

CCh

BTCMAP

BTCInterruptMappingRegister

Section16.3.1.21

D4h

BERMAP

BERInterruptMappingRegister

Section16.3.1.22

DCh

FTCINTENAS

FTCInterruptEnableSet

Section16.3.1.23

E4h

FTCINTENAR

FTCInterruptEnableReset

Section16.3.1.24

ECh

LFSINTENAS

LFSInterruptEnableSet

Section16.3.1.25

F4h

LFSINTENAR

LFSInterruptEnableReset

Section16.3.1.26

FCh

HBCINTENAS

HBCInterruptEnableSet

Section16.3.1.27

104h

HBCINTENAR

HBCInterruptEnableReset

Section16.3.1.28

10Ch

BTCINTENAS

BTCInterruptEnableSet

Section16.3.1.29

114h

BTCINTENAR

BTCInterruptEnableReset

Section16.3.1.30

11Ch

GINTFLAG

GlobalInterruptFlagRegister

Section16.3.1.31

124h

FTCFLAG

FTCInterruptFlagRegister

Section16.3.1.32

12Ch

LFSFLAG

LFSInterruptFlagRegister

Section16.3.1.33

134h

HBCFLAG

HBCInterruptFlagRegister

Section16.3.1.34

13Ch

BTCFLAG

BTCInterruptFlagRegister

Section16.3.1.35

551

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

Table16-7.DMAControlRegisters(continued)

Offset

Acronym

RegisterDescription

Section

144h

BERFLAG

BERInterruptFlagRegister

Section16.3.1.36

14Ch

FTCAOFFSET

FTCAInterruptChannelOffsetRegister

Section16.3.1.37

150h

LFSAOFFSET

LFSAInterruptChannelOffsetRegister

Section16.3.1.38

154h

HBCAOFFSET

HBCAInterruptChannelOffsetRegister

Section16.3.1.39

158h

BTCAOFFSET

BTCAInterruptChannelOffsetRegister

Section16.3.1.40

15Ch

BERAOFFSET

BERAInterruptChannelOffsetRegister

Section16.3.1.41

160h

FTCBOFFSET

FTCBInterruptChannelOffsetRegister

Section16.3.1.42

164h

LFSBOFFSET

LFSBInterruptChannelOffsetRegister

Section16.3.1.43

168h

HBCBOFFSET

HBCBInterruptChannelOffsetRegister

Section16.3.1.44

16Ch

BTCBOFFSET

BTCBInterruptChannelOffsetRegister

Section16.3.1.45

170h

BERBOFFSET

BERBInterruptChannelOffsetRegister

Section16.3.1.46

178h

PTCRL

PortControlRegister

Section16.3.1.47

17Ch

RTCTRL

RAMTestControlRegister

Section16.3.1.48

180h

DCTRL

DebugControl

Section16.3.1.49

184h

WPR

WatchPointRegister

Section16.3.1.50

188h

WMR

WatchMaskRegister

Section16.3.1.51

18Ch

Reserved

Reserved

190h

Reserved

Reserved

194h

Reserved

Reserved

198h

PBACSADDR

PortBActiveChannelSourceAddressRegister

Section16.3.1.52

19Ch

PBACDADDR

PortBActiveChannelDestinationAddressRegister

Section16.3.1.53

1A0h

PBACTC

PortBActiveChannelTransferCountRegister

Section16.3.1.54

1A8h

DMAPCR

ParityControlRegister

Section16.3.1.55

1ACh

DMAPAR

DMAParityErrorAddressRegister

Section16.3.1.56

1B0h

DMAMPCTRL

DMAMemoryProtectionControlRegister

Section16.3.1.57

1B4h

DMAMPST

DMAMemoryProtectionStatusRegister

Section16.3.1.58

1B8h

DMAMPROS

DMAMemoryProtectionRegion0StartAddressRegister

Section16.3.1.59

1BCh

DMAMPROE

DMAMemoryProtectionRegion0EndAddressRegister

Section16.3.1.60

1C0h

DMAMPR1S

DMAMemoryProtectionRegion1StartAddressRegister

Section16.3.1.61

1C4h

DMAMPR1E

DMAMemoryProtectionRegion1EndAddressRegister

Section16.3.1.62

1C8h

DMAMPR2S

DMAMemoryProtectionRegion2StartAddressRegister

Section16.3.1.63

1CCh

DMAMPR2E

DMAMemoryProtectionRegion2EndAddressRegister

Section16.3.1.64

1D0h

DMAMPR3S

DMAMemoryProtectionRegion3StartAddressRegister

Section16.3.1.65

1D4h

DMAMPR3E

DMAMemoryProtectionRegion3EndAddressRegister

Section16.3.1.66

552

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

Table16-8.ControlPacketMemoryMap

Offset

Acronym

RegisterDescription

Section

PrimaryControlPacket0

00

ISADDR

InitialSourceAddressRegister

Section16.3.2.1

04h

IDADDR

InitialDestinationAddressRegister

Section16.3.2.2

08h

ITCOUNT

InitialTransferCountRegister

Section16.3.2.3

10h

CHCTRL

ChannelControlRegister

Section16.3.2.4

14h

EIOFF

ElementIndexOffsetRegister

Section16.3.2.5

18h

FIOFF

FrameIndexOffsetRegister

Section16.3.2.6

WorkingControlPacket0

800h

CSADDR

CurrentSourceAddressRegister

Section16.3.2.7

804h

CDADDR

CurrentDestinationAddressRegister

Section16.3.2.8

808h

CTCOUNT

CurrentTransferCountRegister

Section16.3.2.9

553

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1GlobalConfigurationRegisters

TheseregisterscontroltheoverallbehavioroftheDMAcontroller.

16.3.1.1GlobalControlRegister(GCTRL)

Figure16-18.GlobalControlRegister(GCTRL)[offset=00]

31

17

16

Reserved

DMA_EN

R-0

R/WP-0

15

14

13

10

9

8

Reserved

BUSBUSY

Reserved

DEBUGMODE

R-0

R-0

R-0

R/WP-0

7

1

0

Reserved

DMARES

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-9.GlobalControlRegister(GCTRL)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

DMA_EN

DMAenablebit.Theconfigurationregistersandchannelcontrolpacketsshouldbesetup

firstbeforeDMA_ENbitissettoonetopreventstatemachinesfromcarryingoutbus

transactions.IfDMA_ENbitisclearedinthemiddleofanbustransaction,thestate

machinewillstopatanarbitrationboundary.

0

TheDMAisdisabled.

1

TheDMAisenabled.

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14

BUSBUSY

ThisbitindicatesstatusofDMAexternalAHBbusstatus.

0

DMA'sexternalbusisnotbusyindatatransfers.

1

DMA'sexternalbusisbusyindatatransfers.

13-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

DEBUGMODE

DebugMode.

0

Ignoresuspend.

1h

Finishcurrentblocktransfer.

2h

Finishcurrentframetransfer.

3h

ImmediatelystopatanDMAarbitrationboundaryandcontinueaftersuspend.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

DMARES

DMAsoftwarereset

0

Softwareresetisdisabled.

1

TheDMAstatemachineandallcontrolregistersareinsoftwarereset.Controlpacketsare

notresetwhenDMAsoftwareresetisactive.

Note:IntheeventaDMAslavedoesnotrespond,theDMAmodulewillrespondtothe

softwareresetuponreachinganarbitrationboundary.

554

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.2ChannelPendingRegister(PEND)

Figure16-19.ChannelPendingRegister(PEND)[offset=04h]

31

16

Reserved

R-0

15

0

PEND

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-10.ChannelPendingRegister(PEND)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

PEND

Channelpendingregister.ReadingfromPENDgivesthechannelpendinginformationnomatterif

thechannelwasinitiatedbySWorHW.Onceset,itremainssetevenifthecorresponding

channelisdisabledviaHWCHENAorSWCHENA.Thependingbitisautomaticallyclearedforthe

followingconditions:

•Attheendofaframeorablocktransferdependingonhowthechannelistriggeredas

programmedintheTTYPEbitfieldofCHCTRL.

•Thecontrolpacketismodifiedafterthependingbitisset.

•AnAHBbuserroroccurs.

0

Thecorrespondingchannelisinactive.

1

Thecorrespondingchannelispendingandiswaitingforservice.

16.3.1.3DMAStatusRegister(DMASTAT)

Figure16-20.DMAStatusRegister(DMASTAT)[offset=0Ch]

31

16

Reserved

R-0

15

0

STCH

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-11.DMAStatusRegister(DMASTAT)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

STCH

StatusofDMAchannels.

0

Thechannelisinactive.

1

Thechannelisactive;thatis,thechanneliscurrentlyintheDMA'sexecutionqueue.

Note:ThestatusofachannelcurrentlyinDMA'sexecutionqueueremainsactiveevenifemulation

modeisenteredorDMAisdisabledviaDMA_ENbit.

555

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.4HWChannelEnableSetandStatusRegister(HWCHENAS)

Figure16-21.HWChannelEnableSetandStatusRegister(HWCHENAS)[offset=14h]

31

16

Reserved

R-0

15

0

HWCHENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-12.HWChannelEnableSetandStatusRegister(HWCHENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HWCHENA

Hardwarechannelenablebit.AnactivehardwareDMArequestcannotinitiateaDMAtransfer

unlessthecorrespondinghardwareenablebitisset.

Thecorrespondinghardwareenablebitisclearedautomaticallyforthefollowingconditions:

•Attheendofablocktransferiftheauto-initiationbitAIM(seeCHCTRL)isnotactive.

•IfanAHBbuserrorisdetectedforanactivechannel.

ReadingfromHWCHENASgivesthestatus(enabled/disabled)ofchannels0through15.

0

Thecorrespondingchannelisdisabledforhardwaretriggering.

1

Thecorrespondingchannelisenabledforhardwaretriggering.

16.3.1.5HWChannelEnableResetandStatusRegister(HWCHENAR)

Figure16-22.HWChannelEnableResetandStatusRegister(HWCHENAR)[offset=1Ch]

31

16

Reserved

R-0

15

0

HWCHDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-13.HWChannelEnableResetandStatusRegister(HWCHENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HWCHDIS

HWchanneldisablebit.

0

Read:ThecorrespondingchannelisdisabledforHWtriggering.

Write:Awriteofzerotothisbithasnoeffect.

1

Read:ThecorrespondingchannelisenabledforHWtriggering.

Write:Thecorrespondingchannelisdisabled.

556

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.6SWChannelEnableSetandStatusRegister(SWCHENAS)

Figure16-23.SWChannelEnableSetandStatusRegister(SWCHENAS)[offset=24h]

31

16

Reserved

R-0

15

0

SWCHENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-14.SWChannelEnableSetandStatusRegister(SWCHENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

SWCHENA

SWchannelenablebit.WritingaonetoabittriggersaSWrequestonthecorresponding

channeltostartaDMAtransaction.Thecorrespondingbitisautomaticallyclearedbythe

followingconditions.

•ThecorrespondingbitisclearedafteroneframetransferiftheTTYPEbitinChannelControl

Register(CHCTRL)isprogrammedforframetransfer.

•ThecorrespondingbitisclearedafteroneblocktransferifthecorrespondingTTYPEbitis

programmedforblocktransferandtheauto-initiationbitisnotenabled.

•Thecontrolpacketismodifiedafterthependingbitisset.

•ThecorrespondingbitisclearedafteroneblocktransferwhenTTYPEbitisprogrammedfor

blockstransferandifthecorrespondingbitinHWchannelenableregister(HWCHENAS)is

enabled.WhenachannelisenabledforbothHWandSW,thestatemachinewillinitiate

transfersbasedontheSWfirst.Afteroneblocktransferiscomplete,thecorrespondingbitin

theSWCHENAregisteristhencleared.ThesamechannelisservicedagainbyaHWDMA

request.

•ThecorrespondingbitisclearedifanAHBbuserrorisdetected.

ReadingfromSWCHENASgivesthestatus(enabled/disabled)ofchannels0through15.

0

ThecorrespondingchannelisnottriggeredbySWrequest.

1

ThecorrespondingchannelistriggeredbySWrequest.

557

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.7SWChannelEnableResetandStatusRegister(SWCHENAR)

Figure16-24.SWChannelEnableResetandStatusRegister(SWCHENAR)[offset=2Ch]

31

16

Reserved

R-0

15

0

SWCHDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-15.SWChannelEnableResetandStatusRegister(SWCHENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

SWCHDIS

SWchanneldisablebit.

0

Read:ThecorrespondingchannelwasnottriggeredbySW.

Write:Writingazerotothisbithasnoeffect.

1

Read:ThecorrespondingchannelwastriggeredbySW.

Write:Thecorrespondingchannelisdisabled.

16.3.1.8ChannelPrioritySetRegister(CHPRIOS)

Figure16-25.ChannelPrioritySetRegister(CHPRIOS)[offset=34h]

31

16

Reserved

R-0

15

0

CPS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-16.ChannelPrioritySetRegister(CHPRIOS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

CPS

Channelprioritysetbit.Writingaonetoabitassignsthecorrespondingchanneltothehigh

priorityqueue.

0

Read:Thecorrespondingchannelisassignedtothelowpriorityqueue.

Write:Writingazerotothisbithasnoeffect.

1

Readandwrite:Thecorrespondingchannelisassignedtohighpriorityqueue.

558

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.9ChannelPriorityResetRegister(CHPRIOR)

Figure16-26.ChannelPriorityResetRegister(CHPRIOR)[offset=3Ch]

31

16

Reserved

R-0

15

0

CPR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-17.ChannelPriorityResetRegister(CHPRIOR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

CPR

Channelpriorityresetbit.Writingaonetoabitassignstheaccordingchanneltothelowpriority

queue.

0

Read:Thecorrespondingchannelisassignedtothelowpriorityqueue.

Write:Writingazerotothisbithasnoeffect.

1

Read:Thecorrespondingchannelisassignedtothehighpriorityqueue.

Write:Thecorrespondingchannelisassignedtothelowpriorityqueue.

16.3.1.10GlobalChannelInterruptEnableSetRegister(GCHIENAS)

Figure16-27.GlobalChannelInterruptEnableSetRegister(GCHIENAS)[offset=44h]

31

16

Reserved

R-0

15

0

GCHIE

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-18.GlobalChannelInterruptEnableSetRegister(GCHIENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

GCHIE

Globalchannelinterruptenablebit.

0

Read:Thecorrespondingchannelisdisabledforinterrupt.

Write:Writingazerotothisbithasnoeffect.

1

Readandwrite:Thecorrespondingchannelisenabledforinterrupt.

559

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.11GlobalChannelInterruptEnableResetRegister(GCHIENAR)

Figure16-28.GlobalChannelInterruptEnableResetRegister(GCHIENAR)[offset=4Ch]

31

16

Reserved

R-0

15

0

GCHID

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-19.GlobalChannelInterruptEnableResetRegister(GCHIENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

GCHID

Globalchannelinterruptdisablebit.

0

Read:Thecorrespondingchannelisdisabledforinterrupt.

Write:Writingazerotothisbithasnoeffect.

1

Read:Thecorrespondingchannelisenabledforinterrupt.

Write:Thecorrespondingchannelisdisabledforinterrupt.

560

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.12DMARequestAssignmentRegister0(DREQASI0)

Figure16-29.DMARequestAssignmentRegister0(DREQASI0)[offset=54h]

31

30

29

24

23

22

21

16

Reserved

CH0ASI

Reserved

CH1ASI

R-0

R/WP-0

R-0

R/WP-1h

15

14

13

8

7

6

5

0

Reserved

CH2ASI

Reserved

CH3ASI

R-0

R/WP-2h

R-0

R/WP-3h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-20.DMARequestAssignmentRegister0(DREQASI0)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-24

CH0ASI

Channel0assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel0.

0

DMArequestline0triggerschannel0.

...

...

1Fh

DMArequestline31triggerschannel0.

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-16

CH1ASI

Channel1assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel1.

0

DMArequestline0triggerschannel1.

...

...

1Fh

DMArequestline31triggerschannel1.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

CH2ASI

Channel2assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel2.

0

DMArequestline0triggerschannel2.

...

...

1Fh

DMArequestline31triggerschannel2.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

CH3ASI

Channel3assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel3.

0

DMArequestline0triggerschannel3.

...

...

1Fh

DMArequestline31triggerschannel3.

561

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.13DMARequestAssignmentRegister1(DREQASI1)

Figure16-30.DMARequestAssignmentRegister1(DREQASI1)[offset=58h]

31

30

29

24

23

22

21

16

Reserved

CH4ASI

Reserved

CH5ASI

R-0

R/WP-4h

R-0

R/WP-5h

15

14

13

8

7

6

5

0

Reserved

CH6ASI

Reserved

CH7ASI

R-0

R/WP-6h

R-0

R/WP-7h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-21.DMARequestAssignmentRegister1(DREQASI1)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-24

CH4ASI

Channel4assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel4.

0

DMArequestline0triggerschannel4.

...

...

1Fh

DMArequestline31triggerschannel4.

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-26

CH5ASI

Channel5assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel5.

0

DMArequestline0triggerschannel5.

...

...

1Fh

DMArequestline31triggerschannel5.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

CH6ASI

Channel6assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel6.

0

DMArequestline0triggerschannel6.

...

...

1Fh

DMArequestline31triggerschannel6.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

CH7ASI

Channel7assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel7.

0

DMArequestline0triggerschannel7.

...

...

1Fh

DMArequestline31triggerschannel7.

562

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.14DMARequestAssignmentRegister2(DREQASI2)

Figure16-31.DMARequestAssignmentRegister2(DREQASI2)[offset=5Ch]

31

30

29

24

23

22

21

16

Reserved

CH8ASI

Reserved

CH9ASI

R-0

R/WP-8h

R-0

R/WP-9h

15

14

13

8

7

6

5

0

Reserved

CH10ASI

Reserved

CH11ASI

R-0

R/WP-Ah

R-0

R/WP-Bh

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-22.DMARequestAssignmentRegister2(DREQASI2)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-24

CH8ASI

Channel8assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel8.

0

DMArequestline0triggerschannel8.

...

...

1Fh

DMArequestline31triggerschannel8.

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-16

CH9ASI

Channel9assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel9.

0

DMArequestline0triggerschannel9.

...

...

1Fh

DMArequestline31triggerschannel9.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

CH10ASI

Channel10assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel10.

0

DMArequestline0triggerschannel10.

...

...

1Fh

DMArequestline31triggerschannel10.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

CH11ASI

Channel11assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel11.

0

DMArequestline0triggerschannel11.

...

...

1Fh

DMArequestline31triggerschannel11.

563

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.15DMARequestAssignmentRegister3(DREQASI3)

Figure16-32.DMARequestAssignmentRegister3(DREQASI3)[offset=60h]

31

30

29

24

23

22

21

16

Reserved

CH12ASI

Reserved

CH13ASI

R-0

R/WP-Ch

R-0

R/WP-Dh

15

14

13

8

7

6

5

0

Reserved

CH14ASI

Reserved

CH15ASI

R-0

R/WP-Eh

R-0

R/WP-Fh

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-23.DMARequestAssignmentRegister3(DREQASI3)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-24

CH12ASI

Channel12assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel12.

0

DMArequestline0triggerschannel12.

...

...

1Fh

DMArequestline31triggerschannel12.

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-16

CH13ASI

Channel13assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel13.

0

DMArequestline0triggerschannel13.

...

...

1Fh

DMArequestline31triggerschannel13.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

CH14ASI

Channel14assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel14.

0

DMArequestline0triggerschannel14.

...

...

1Fh

DMArequestline31triggerschannel14.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

CH15ASI

Channel15assignment.ThisbitfieldchoosestheDMArequestassignmentforchannel15.

0

DMArequestline0triggerschannel15.

...

...

1Fh

DMArequestline31triggerschannel15.

564

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.16PortAssignmentRegister0(PAR0)

Figure16-33.PortAssignmentRegister0(PAR0)[offset=94h]

31

30

28

27

26

24

23

22

20

19

18

16

Rsvd.

CH0PA

Rsvd.

CH1PA

Rsvd.

CH2PA

Rsvd.

CH3PA

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

15

14

12

11

10

8

7

6

4

3

2

0

Rsvd.

CH4PA

Rsvd.

CH5PA

Rsvd.

CH6PA

Rsvd.

CH7PA

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-24.PortAssignmentRegister0(PAR0)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-28

CH0PA

Thesebitfieldsdeterminetowhichportchannel0isassigned.

1xx

PortB

0xx

Reserved

27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-24

CH1PA

Thesebitfieldsdeterminetowhichportchannel1isassigned.

1xx

PortB

0xx

Reserved

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-20

CH2PA

Thesebitfieldsdeterminetowhichportchannel2isassigned.

1xx

PortB

0xx

Reserved

19

Reserved

0

Readreturns0.Writeshavenoeffect.

18-16

CH3PA

Thesebitfieldsdeterminetowhichportchannel3isassigned.

1xx

PortB

0xx

Reserved

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-12

CH4PA

Thesebitfieldsdeterminetowhichportchannel4isassigned.

1xx

PortB

0xx

Reserved

11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-8

CH5PA

Thesebitfieldsdeterminetowhichportchannel5isassigned.

1xx

PortB

0xx

Reserved

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-4

CH6PA

Thesebitfieldsdeterminetowhichportchannel6isassigned.

1xx

PortB

0xx

Reserved

3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

CH7PA

Thesebitfieldsdeterminetowhichportchannel7isassigned.

1xx

PortB

0xx

Reserved

565

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.17PortAssignmentRegister1(PAR1)

Figure16-34.PortAssignmentRegister1(PAR1)[offset=98h]

31

30

28

27

26

24

23

22

20

19

18

16

Rsvd.

CH8PA

Rsvd.

CH9PA

Rsvd.

CH10PA

Rsvd.

CH11PA

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

15

14

12

11

10

8

7

6

4

3

2

0

Rsvd.

CH12PA

Rsvd.

CH13PA

Rsvd.

CH14PA

Rsvd.

CH15PA

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-25.PortAssignmentRegister1(PAR1)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-28

CH8PA

Thesebitfieldsdeterminetowhichportchannel8isassigned.

1xx

PortB

0xx

Reserved

27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-24

CH9PA

Thesebitfieldsdeterminetowhichportchannel9isassigned.

1xx

PortB

0xx

Reserved

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-20

CH10PA

Thesebitfieldsdeterminetowhichportchannel10isassigned.

1xx

PortB

0xx

Reserved

19

Reserved

0

Readreturns0.Writeshavenoeffect.

18-16

CH11PA

Thesebitfieldsdeterminetowhichportchannel11isassigned.

1xx

PortB

0xx

Reserved

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-12

CH12PA

Thesebitfieldsdeterminetowhichportchannel12isassigned.

1xx

PortB

0xx

Reserved

11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-8

CH13PA

Thesebitfieldsdeterminetowhichportchannel13isassigned.

1xx

PortB

0xx

Reserved

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-4

CH14PA

Thesebitfieldsdeterminetowhichportchannel14isassigned.

1xx

PortB

0xx

Reserved

3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

CH15PA

Thesebitfieldsdeterminetowhichportchannel15isassigned.

1xx

PortB

0xx

Reserved

566

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.18FTCInterruptMappingRegister(FTCMAP)

NOTE:OnthisdeviceGroupBInterruptsarenotImplementedhenceusersoftwareshould

configureonlyGroupAinterrupts.

Figure16-35.FTCInterruptMappingRegister(FTCMAP)[offset=B4h]

31

16

Reserved

R-0

15

0

FTCAB

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-26.FTCInterruptMappingRegister(FTCMAP)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FTCAB

Frametransfercomplete(FTC)interrupttoGroupAorGroupB.

0

TheFTCinterruptofthecorrespondingchannelisroutedtoGroupA.

1

TheFTCinterruptofthecorrespondingchannelisroutedtoGroupB.

16.3.1.19LFSInterruptMappingRegister(LFSMAP)

NOTE:OnthisdeviceGroupBInterruptsarenotImplementedhenceusersoftwareshould

configureonlyGroupAinterrupts.

Figure16-36.LFSInterruptMappingRegister(LFSMAP)[offset=BCh]

31

16

Reserved

R-0

15

0

LFSAB

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-27.LFSInterruptMappingRegister(LFSMAP)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

LFSAB

Lastframestarted(LFS)interrupttoGroupAorGroupB.

0

TheLFSinterruptofthecorrespondingchannelisroutedtoGroupA.

1

TheLFSinterruptofthecorrespondingchannelisroutedtoGroupB.

567

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.20HBCInterruptMappingRegister(HBCMAP)

NOTE:OnthisdeviceGroupBInterruptsarenotImplementedhenceusersoftwareshould

configureonlyGroupAinterrupts.

Figure16-37.HBCInterruptMappingRegister(HBCMAP)[offset=C4h]

31

16

Reserved

R-0

15

0

HBCAB

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-28.HBCInterruptMappingRegister(HBCMAP)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HBCAB

Halfblockcomplete(HBC)interrupttoGroupAorGroupB.

0

TheHBCinterruptofthecorrespondingchannelisroutedtoGroupA.

1

TheHBCinterruptofthecorrespondingchannelisroutedtoGroupB.

16.3.1.21BTCInterruptMappingRegister(BTCMAP)

NOTE:OnthisdeviceGroupBInterruptsarenotImplementedhenceusersoftwareshould

configureonlyGroupAinterrupts.

Figure16-38.BTCInterruptMappingRegister(BTCMAP)[offset=CCh]

31

16

Reserved

R-0

15

0

BTCAB

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-29.BTCInterruptMappingRegister(BTCMAP)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BTCAB

Blocktransfercomplete(BTC)interrupttoGroupAorGroupB

0

TheBTCinterruptofthecorrespondingchannelisroutedtoGroupA.

1

TheBTCinterruptofthecorrespondingchannelisroutedtoGroupB.

568

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.22BERInterruptMappingRegister(BERMAP)

NOTE:OnthisdeviceGroupBInterruptsarenotImplementedhenceusersoftwareshould

configureonlyGroupAinterrupts.

Figure16-39.BERInterruptMappingRegister(BERMAP)[offset=D4h]

31

16

Reserved

R-0

15

0

BERAB

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-30.BERInterruptMappingRegister(BERMAP)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BERAB

Buserror(BER)interrupttoGroupAorGroupB.

0

TheBERinterruptofthecorrespondingchannelisroutedtoGroupA.

1

TheBERinterruptofthecorrespondingchannelisroutedtoGroupB.

16.3.1.23FTCInterruptEnableSet(FTCINTENAS)

Figure16-40.FTCInterruptEnableSet(FTCINTENAS)[offset=DCh]

31

16

Reserved

R-0

15

0

FTCINTENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-31.FTCInterruptEnableSet(FTCINTENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FTCINTENA

Frametransfercomplete(FTC)interruptenable.

0

Read:ThecorrespondingFTCinterruptofachannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:TheFTCinterruptofthecorrespondingchannelisenabled.

569

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.24FTCInterruptEnableReset(FTCINTENAR)

NOTE:OnthisdeviceGroupBInterruptsarenotImplementedhenceusersoftwareshould

configureonlyGroupAinterrupts.

Figure16-41.FTCInterruptEnableReset(FTCINTENAR)[offset=E4h]

31

16

Reserved

R-0

15

0

FTCINTDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-32.FTCInterruptEnableReset(FTCINTENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FTCINTDIS

Frametransfercomplete(FTC)interruptdisable.

0

Read:ThecorrespondingFTCinterruptofachannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Read:ThecorrespondingFTCinterruptofachannelisenabled.

Write:ThecorrespondingFTCinterruptisdisabled.

16.3.1.25LFSInterruptEnableSet(LFSINTENAS)

Figure16-42.LFSInterruptEnableSet(LFSINTENAS)[offset=ECh]

31

16

Reserved

R-0

15

0

LFSINTENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-33.LFSInterruptEnableSet(LFSINTENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

LFSINTENA

Lastframestarted(LFS)interruptenable.

0

Read:ThecorrespondingLFSinterruptofachannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:TheLFSinterruptofthecorrespondingchannelisdisabled.

570

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.26LFSInterruptEnableReset(LFSINTENAR)

Figure16-43.LFSInterruptEnableReset(LFSINTENAR)[offset=F4h]

31

16

Reserved

R-0

15

0

LFSINTDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-34.LFSInterruptEnableReset(LFSINTENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

LFSINTDIS

Lastframestarted(LFS)interruptdisable.

0

Read:TheLFSinterruptofthecorrespondingchannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Read:TheLFSinterruptofthecorrespondingchannelisenabled.

Write:TheLFSinterruptofthecorrespondingchannelisdisabled.

16.3.1.27HBCInterruptEnableReset(HBCINTENAS)

Figure16-44.HBCInterruptEnableSet(HBCINTENAS)[offset=FCh]

31

16

Reserved

R-0

15

0

HBCINTENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-35.HBCInterruptEnableSet(HBCINTENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HBCINTENA

Halfblockcomplete(HBC)interruptenable.

0

Read:TheHBCinterruptofthecorrespondingchannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:TheHBCinterruptofthecorrespondingchannelisenabled.

571

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.28HBCInterruptEnableReset(HBCINTENAR)

Figure16-45.HBCInterruptEnableReset(HBCINTENAR)[offset=104h]

31

16

Reserved

R-0

15

0

HBCINTDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-36.HBCInterruptEnableReset(HBCINTENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HBCINTDIS

Halfblockcomplete(HBC)interruptdisable.

0

Read:TheHBCinterruptofthecorrespondingchannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Read:TheHBCinterruptofthecorrespondingchannelisenabled.

Write:TheHBCinterruptofthecorrespondingchannelisdisabled.

16.3.1.29BTCInterruptEnableSet(BTCINTENAS)

Figure16-46.BTCInterruptEnableSet(BTCINTENAS)[offset=10Ch]

31

16

Reserved

R-0

15

0

BTCINTENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-37.BTCInterruptEnableReset(BTCINTENAS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BTCINTENA

Blocktransfercomplete(BTC)interruptenable.

0

Read:TheBTCinterruptofthecorrespondingchannelisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:TheBTCinterruptofthecorrespondingchannelisenabled.

572

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.30BTCInterruptEnableReset(BTCINTENAR)

Figure16-47.BTCInterruptEnableReset(BTCINTENAR)[offset=114h]

31

16

Reserved

R-0

15

0

BTCINTDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-38.BTCInterruptEnableReset(BTCINTENAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BTCINTDIS

Blocktransfercomplete(BTC)interurptdisable.

0

Read:TheBTCinterruptofthecorrespondingchannelisenabled.

Write:Writingazerotothisbithasnoeffect.

1

Read:TheBTCinterruptofthecorrespondingchannelisdisabled.

Write:TheBTCinterruptofthecorrespondingchannelisdisabled.

16.3.1.31GlobalInterruptFlagRegister(GINTFLAG)

Figure16-48.GlobalInterruptFlagRegister(GINTFLAG)[offset=11Ch]

31

16

Reserved

R-0

15

0

GINT

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-39.GlobalInterruptFlagRegister(GINTFLAG)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

GINT

Globalinterruptflags.AglobalinterruptflagbitisanORfunctionofFTC,LFS,HBC,BTCand

BERinterruptflags.

0

Nointerruptispendingonthecorrespondingchannel.

1

Oneormoreofthefiveinterrupttypes(FTC,LFS,HBC,BTC,orBER)ispendingonthe

correspondingchannel.

573

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.32FTCInterruptFlagRegister(FTCFLAG)

Figure16-49.FTCInterruptFlagRegister(FTCFLAG)[offset=124h]

31

16

Reserved

R-0

15

0

FTCI

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table16-40.FTCINTERRUPTFLAGRegister(FTCFLAG)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

FTCI

Frametransfercomplete(FTC)flags.

Note:Readingfromtherespectiveinterruptchanneloffsetregisteralsoclearsthe

correspondingflag(seeSection16.3.1.37andSection16.3.1.42).

Note:Thestateoftheflagbitcanbepolledevenifthecorrespondinginterruptenablebitis

cleared.

0

Read:AnFTCinterruptofthecorrespondingchannelisnotpending.

Write:Writingazerotothisbithasnoeffect.

1

Read:AnFTCinterruptofthecorrespondingchannelispending.

Write:Theflagiscleared.

16.3.1.33LFSInterruptFlagRegister(LFSFLAG)

Figure16-50.LFSInterruptFlagRegister(LFSFLAG)[offset=12Ch]

31

16

Reserved

R-0

15

0

LFSI

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table16-41.LFSInterruptFlagRegister(LFSFLAG)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

LFSI

Lastframestarted(LFS)flags.

Note:Readingfromtherespectiveinterruptchanneloffsetregisteralsoclearsthe

correspondingflag(seeSection16.3.1.38andSection16.3.1.43).

Note:Thestateoftheflagbitcanbepolledevenifthecorrespondinginterruptenablebitis

cleared.

0

Read:AnLFSinterruptofthecorrespondingchannelisnotpending.

Write:Writingazerotothisbithasnoeffect.

1

Read:AnLFSinterruptofthecorrespondingchannelispending.

Write:Theflagiscleared.

574

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.34HBCInterruptFlagRegister(HBCFLAG)

Figure16-51.HBCInterruptFlagRegister(HBCFLAG)[offset=134h]

31

16

Reserved

R-0

15

0

HBCI

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table16-42.HBCInterruptFlag(HBCFLAG)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HBCI

Halfblocktransfer(HBC)completeflags.

Note:Readingfromtherespectiveinterruptchanneloffsetregisteralsoclearsthe

correspondingflag(seeSection16.3.1.39andSection16.3.1.44).

Note:Thestateoftheflagbitcanbepolledevenifthecorrespondinginterruptenablebitis

cleared.

0

Read:AnHBCinterruptofthecorrespondingchannelisnotpending.

Write:Writingazerotothisbithasnoeffect.

1

Read:AnHBCinterruptofthecorrespondingchannelispending.

Write:Theflagiscleared.

16.3.1.35BTCInterruptFlagRegister(BTCFLAG)

Figure16-52.BTCInterruptFlagRegister(BTCFLAG)[offset=13Ch]

31

16

Reserved

R-0

15

0

BTCI

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table16-43.BTCInterruptFlagRegister(BTCFLAG)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BTCI

Blocktransfercomplete(BTC)flags.

Note:Readingfromtherespectiveinterruptchanneloffsetregisteralsoclearsthe

correspondingflag(seeSection16.3.1.40andSection16.3.1.45).

Note:Thestateoftheflagbitcanbepolledevenifthecorrespondinginterruptenablebitis

cleared.

0

Read:ABTCinterruptofthecorrespondingchannelisnotpending.

Write:Writingazerotothisbithasnoeffect.

1

Read:ABTCinterruptofthecorrespondingchannelispending.

Write:Theflagiscleared.

575

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.36BERInterruptFlagRegister(BERFLAG)

Figure16-53.BERInterruptFlagRegister(BERFLAG)[offset=144h]

31

16

Reserved

R-0

15

0

BERI

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table16-44.BERInterruptFlagRegister(BERFLAG)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BERI

Buserror(BER)flags.

Note:Readingfromtherespectiveinterruptchanneloffsetregisteralsoclearsthe

correspondingflag(seeSection16.3.1.41andSection16.3.1.46).

Note:Thestateoftheflagbitcanbepolledevenifthecorrespondinginterruptenablebitis

cleared.

0

Read:AnBERinterruptofthecorrespondingchannelisnotpending.

Write:Writingazerotothisbithasnoeffect.

1

Read:AnBERinterruptofthecorrespondingchannelispending.

Write:Theflagiscleared.

16.3.1.37FTCAInterruptChannelOffsetRegister(FTCAOFFSET)

Figure16-54.FTCAInterruptChannelOffsetRegister(FTCAOFFSET)[offset=14Ch]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

FTCA

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-45.FTCAInterruptChannelOffsetRegister(FTCAOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

FTCA

ChannelcausingFTCinterruptGroupA.Thesebitscontainthechannelnumberofthepending

interruptforGroupAifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.32)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupA.

10h

Channel15iscausingthependinginterruptGroupA.

576

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.38LFSAInterruptChannelOffsetRegister(LFSAOFFSET)

Figure16-55.LFSAInterruptChannelOffsetRegister(LFSAOFFSET)[offset=150h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

LFSA

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-46.LFSAInterruptChannelOffsetRegister(LFSAOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

LFSA

ChannelcausingLFSinterruptGroupA.Thesebitscontainthechannelnumberofthepending

interruptforGroupAifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.33)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupA.

10h

Channel15iscausingthependinginterruptGroupA.

16.3.1.39HBCAInterruptChannelOffsetRegister(HBCAOFFSET)

Figure16-56.HBCAInterruptChannelOffsetRegister(HBCAOFFSET)[offset=154h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

HBCA

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-47.HBCAInterruptChannelOffsetRegister(HBCAOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

HBCA

ChannelcausingHBCinterruptGroupA.Thesebitscontainthechannelnumberofthepending

interruptforGroupAifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.34)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupA.

10h

Channel15iscausingthependinginterruptGroupA.

577

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.40BTCAInterruptChannelOffsetRegister(BTCAOFFSET)

Figure16-57.BTCAInterruptChannelOffsetRegister(BTCAOFFSET)[offset=158h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

BTCA

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-48.BTCAInterruptChannelOffsetRegister(BTCAOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

BTCA

ChannelcausingBTCinterruptGroupA.Thesebitscontainthechannelnumberofthepending

interruptforGroupAifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.35)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupA.

10h

Channel15iscausingthependinginterruptGroupA.

16.3.1.41BERAInterruptChannelOffsetRegister(BERAOFFSET)

Figure16-58.BERAInterruptChannelOffsetRegister(BERAOFFSET)[offset=15Ch]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

BERA

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-49.BERAInterruptChannelOffsetRegister(BERAOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

BERA

ChannelcausingBERinterruptGroupA.Thesebitscontainthechannelnumberofthepending

interruptforGroupAifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.36)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupA.

10h

Channel15iscausingthependinginterruptGroupA.

578

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.42FTCBInterruptChannelOffsetRegister(FTCBOFFSET)

Figure16-59.FTCBInterruptChannelOffsetRegister(FTCBOFFSET)[offset=160h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

FTCB

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-50.FTCBInterruptChannelOffsetRegister(FTCBOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

FTCB

ChannelcausingFTCinterruptGroupB.Thesebitscontainthechannelnumberofthepending

interruptforGroupBifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.32)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupB.

10h

Channel15iscausingthependinginterruptGroupB.

16.3.1.43LFSBInterruptChannelOffsetRegister(LFSBOFFSET)

Figure16-60.LFSBInterruptChannelOffsetRegister(LFSBOFFSET)[offset=164h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

LFSB

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-51.LFSBInterruptChannelOffsetRegister(LFSBOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

LFSB

ChannelcausingLFSinterruptGroupB.Thesebitscontainthechannelnumberofthepending

interruptforGroupBifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.33)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupB.

10h

Channel15iscausingthependinginterruptGroupB.

579

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.44HBCBInterruptChannelOffsetRegister(HBCBOFFSET)

Figure16-61.HBCBInterruptChannelOffsetRegister(HBCBOFFSET)[offset=168h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

HBCB

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-52.HBCBInterruptChannelOffsetRegister(HBCBOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

HBCB

ChannelcausingHBCinterruptGroupB.Thesebitscontainthechannelnumberofthepending

interruptforGroupBifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.34)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupB.

10h

Channel15iscausingthependinginterruptGroupB.

16.3.1.45BTCBInterruptChannelOffsetRegister(BTCBOFFSET)

Figure16-62.BTCBInterruptChannelOffsetRegister(BTCBOFFSET)[offset=16Ch]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

BTCB

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-53.BTCBInterruptChannelOffsetRegister(BTCBOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

BTCB

ChannelcausingBTCinterruptGroupB.Thesebitscontainthechannelnumberofthepending

interruptforGroupBifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.35)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupB.

10h

Channel15iscausingthependinginterruptGroupB.

580

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.46BERBInterruptChannelOffsetRegister(BERBOFFSET)

Figure16-63.BERBInterruptChannelOffsetRegister(BERBOFFSET)[offset=170h]

31

16

Reserved

R-0

15

8

7

6

5

0

Reserved

sbz

sbz

BERB

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-54.BERBInterruptChannelOffsetRegister(BERBOFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

7-6

sbz

Thesebitsshouldalwaysbeprogrammedaszero.

5-0

BERB

ChannelcausingBERinterruptGroupB.Thesebitscontainthechannelnumberofthepending

interruptforGroupBifthecorrespondinginterruptenableisset.

Note:Readingthislocationclearsthecorrespondinginterruptpendingflag(see

Section16.3.1.36)withthehighestpriority.

0

Nointerruptispending.

1

Channel0iscausingthependinginterruptGroupB.

10h

Channel15iscausingthependinginterruptGroupB.

581

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.47PortControlRegister(PTCRL)

Figure16-64.PortControlRegister(PTCRL)[offset=178h]

31

25

24

Reserved

PENDB

R-0

R-0

23

19

18

17

16

Reserved

BYB

PSFRHQPB

PSFRLQPB

R-0

R/WP-0

R/WP-0

R/WP-0

15

0

Reserved

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-55.PortControlRegister(PTCRL)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

PENDB

TransferspendingforPortB.ThisflagdeterminesiftransfersareongoingonportB.Theflag

willbeclearedifnotransfersareperformed.Itcanbeusedtodetermineifthereisstilldata

transferredwhileDMA_ENissetto0inGCTCRL.Inthiscase,oncealltransfersarefinished,

theflagwillbesetto0.

0

Notransfersarepending.

1

Transfersarepending.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

BYB

BypassFIFOB.

0

FIFOBisnotbypassed.

1

FIFOBisbypassed.Writing1tothisbitlimitstheFIFOdepthtothesizeofoneelement.That

meansthatafteroneelementisread,thewrite-outtothedestinationwillbegin.Thisfeatureis

particularlyusefultominimizeswitchinglatencybetweenchannels.

Note:Thisfeaturedoesnotmakeoptimaluseofbusbandwidth.

17

PSFRHQPB

PriorityschemefixorrotateforhighpriorityqueueofPortB.

0

Fixedpriorityisused.

1

Rotationpriorityisused.

16

PSFRLQPB

PriorityschemefixorrotateforlowpriorityqueueofPortB.

0

Thefixedpriorityschemeisused.

1

Therotationpriorityschemeisused.

15-0

Reserved

0

Readreturns0.Writeshavenoeffect.

582

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.48RAMTestControl(RTCTRL)

Figure16-65.RAMTestControl(RTCTRL)[offset=17Ch]

31

16

Reserved

R-0

15

1

0

Reserved

RTC

R-0

R/WP-

0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-56.RAMTestControl(RTCTRL)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

RTC

RAMTestControl.Writingaonetothisbitopensthewriteaccesstothereservedlocationsof

controlpacketRAMasdefinedinthememorymap.

Note:Thisbitshouldbesettozeroduringnormaloperation.

0

RAMTestControlDisabled.

1

RAMTestControlEnabled..

583

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.49DebugControl(DCTRL)

Figure16-66.DebugControl(DCTRL)[offset=180h]

31

29

28

24

23

17

16

Reserved

CHNUM

Reserved

DMADBGS

R-0

R-0

R-0

R/WC-0

15

1

0

Reserved

DBGEN

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table16-57.DebugControl(DCTRL)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readreturns0.Writeshavenoeffect.

28-24

CHNUM

0-1Fh

ChannelNumber.Thisbitfieldindicatesthechannelnumberthatcausesthewatchpointto

match.

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

DMADBGS

DMAdebugstatus.Whenawatchpointissetuptowatchforauniquebusaddressorarange

ofaddressesistrueononeofthethreebusports,thentheDMAdebugstatusbitissetto1

andadebugrequestsignalisassertedtothemainCPU.TheCPUmustwritea1toclearthis

bitfortheDMAcontrollertoreleasethedebugrequestsignal.

0

Read:Nowatchpointconditionisdetected.

Write:Writingazerotothisbithasnoeffect.

1

Read:Thewatchpointconditionisdetected.

Write:Thebitiscleared.

15-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

DBGEN

DebugEnable.

Note:Thisbitcanonlybesetwhenusingadebugger.

Note:ThisbitisresetwhenTestreset(nTRST)islow.

0

Debugisdisabled.

1

Thewatchpointcheckinglogicsisenabled.

584

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.50WatchPointRegister(WPR)

Figure16-67.WatchPointRegister(WPR)[offset=184h]

31

16

WP

R/W-0

15

0

WP

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table16-58.WatchPointRegister(WPR)FieldDescriptions

Bit

Field

Value

Description

31-0

WP

0-FFFFFFFFh

Watchpoint.

Note:Thesebitscanonlybesetwhenusingadebugger.

Thisregisterisonlyresetbyatestreset(nTRST).A32-bitaddresscanbeprogrammedinto

thisregisterasawatchpoint.Thisregisterisusedwiththewatchmaskregister(WMR).

WhentheDBGENbitintheDCTRLregisterissetandauniqueaddressorarangeof

addressesaredetectedontheAHBaddressbusofPortB,adebugrequestsignalissentto

theARMCPU.Thestatemachineoftheportinwhichthewatchpointconditionistrueisfrozen.

16.3.1.51WatchMaskRegister(WMR)

Figure16-68.WatchMaskRegister(WMR)[offset=188h]

31

16

WM

R/W-0

15

0

WM

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table16-59.WatchMaskRegister(WMR)FieldDescriptions

Bit

Field

Value

Description

31-0

WM

Watchmask.

Note:Thesebitscanonlybesetwhenusingadebugger.

Thisregisterisonlyresetbyatestreset(nTRST).

0

Settingabitto0allowsthebitintheWPRregistertobeusedforaddressmatchingforawatch

point.

1

Settingabitto1intheWMRregistermasksthecorrespondingbitintheWPRregisterandis

disregardedinthecomparison.

585

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.52PortBActiveChannelSourceAddressRegister(PBACSADDR)

Figure16-69.PortBActiveChannelSourceAddressRegister(PBACDADDR)[offset=198h]

31

16

PBACSA

R-0

15

0

PBACSA

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-60.PortBActiveChannelSourceAddressRegister(PBACDADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

PBACSA

0-FFFFFFFFh

PortBActiveChannelSourceAddress.Thisregistercontainsthecurrentsourceaddressofthe

activechannelasbroadcastedinSection16.3.1.3forPortB.

16.3.1.53PortBActiveChannelDestinationAddressRegister(PBACDADDR)

Figure16-70.PortBActiveChannelDestinationAddressRegister(PBACDADDR)[offset=19Ch]

31

16

PBACDA

R-0

15

0

PBACDA

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-61.PortBActiveChannelDestinationAddressRegister(PBACDADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

PBACDA

0-FFFFFFFFh

PortBActiveChannelDestinationAddress.Thisregistercontainsthecurrentdestination

addressoftheactivechannelasbroadcastedinSection16.3.1.3forPortB.

586

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.54PortBActiveChannelTransferCountRegister(PBACTC)

Figure16-71.PortBActiveChannelTransferCountRegister(PBACTC)[offset=1A0h]

31

29

28

16

Reserved

PBFTCOUNT

R-0

R-0

15

13

12

0

Reserved

PBETCOUNT

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table16-62.PortBActiveChannelTransferCountRegister(PBACTC)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readreturns0.Writeshavenoeffect.

28-16

PBFTCOUNT

0-1FFFh

PortBactivechannelframecount.Thesebitscontainthecurrentframecountvalueofthe

activechannelasbroadcastedinSection16.3.1.3forPortB.

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-0

PBETCOUNT

0-1FFFh

PortBactivechannelelementcount.Thesebitscontainthecurrentelementcountvalueof

theactivechannelasbroadcastedinSection16.3.1.3forPortB.

587

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.55ParityControlRegister(DMAPCR)

Figure16-72.ParityControlRegister(DMAPCR)[offset=1A8h]

31

15

16

Reserved

ERRA

R-0

R/WP-

0

15

9

8

7

4

3

0

Reserved

TEST

Reserved

PARITY_ENA

R-0

R/WP-

R-0

R/WP-5h

0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-63.ParityControlRegister(DMAPCR)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

ERRA

Erroraction.

0

Ifaparityerrorisdetectedoncontrolpacketx(x=0,1,...n),thentheenable/disablestateof

controlpacketxremainsunchanged.

1

Ifaparityerrorisdetectedoncontrolpacketx(x=0,1,...n),thentheDMAcontrolleris

disabledimmediately.Ifaframeoncontrolpacketxisprocessedatthetimetheparityerroris

detected,thenremainingelementsofthisframewillnotbetransferredanymore.TheDMAwill

bedisabledregardlessofwhethertheerrorwasdetectedduringareadtothecontrolpacket

RAMperformedbytheDMAstatemachineorbyadifferentmaster.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

TEST

Whenthisbitisset,theparitybitsarememorymappedtomakethemaccessiblebytheCPU.

0

Theparitybitsarenotmemorymapped.

1

Theparitybitsarememorymapped.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

PARITY_ENA

Parityerrordetectionenable.Thisbitfieldenablesordisablestheparitycheckonread

operationsandtheparitycalculationonwriteoperations.Ifparitycheckingisenabledanda

parityerrorisdetectedtheDMA_UERRsignalisactivated.

5h

Theparitycheckisdisabled.

Allother

Theparitycheckisenabled.

values

Note:ItisrecommendedtowriteAhtoenableparitycheck,toguardagainstsofterror

fromflippingPARITY_ENAtoadisablestate.

588

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.56DMAParityErrorAddressRegister(DMAPAR)

Figure16-73.DMAParityErrorAddressRegister(DMAPAR)[offset=1ACh]

31

25

24

23

16

Reserved

EDFLAG

Reserved

R-0

R-0

R-0

15

12

11

0

Reserved

ERRORADDRESS

R-0

R-X

LEGEND:R/W=Read/Write;R=Readonly;X=Undefined;-n=valueafterreset

.

Table16-64.DMAParityErrorAddressRegister(DMAPAR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

EDFLAG

ParityErrorDetectionFlag.ThisflagindicatesifaparityerroroccuredonreadingDMA

ControlpacketRAM.

0

Read:Noerroroccured.

Write:Noeffect.

1

Read:ErrordetectedandtheaddressiscapturedinDMAPAR'sERROR_ADDRESSfield

Write:Clearsthebit.

23-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-0

ERRORADDRESS

0-FFFh

Erroraddress.ThesebitsholdtheaddressofthefirstparityerrorgeneratedintheRAM.

ThiserroraddressisfrozenfrombeingupdateduntilitisreadbytheCPU.During

emulationmodewhenSUSPENDishigh,thisaddressisfrozenevenwhenread.

Note:TheerroraddressregisterwillnotberesetbyPORRSTnorbyanyotherreset

source.

589

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.57DMAMemoryProtectionControlRegister(DMAMPCTRL)

Figure16-74.DMAMemoryProtectionControlRegister(DMAMPCTRL)[offset=1B0h]

31

29

28

27

26

25

24

Reserved

INT3AB

INT3ENA

REG3AP

REG3ENA

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

23

21

20

19

18

17

16

Reserved

INT2AB

INT2ENA

REG2AP

REG2ENA

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

13

12

11

10

9

8

Reserved

INT1AB

INT1ENA

REG1AP

REG1ENA

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

5

4

3

2

1

0

Reserved

INT0AB

INT0ENA

REG0AP

REG0ENA

R-0

R/WP-0

R/WP-0

R/WP-00

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-65.DMAMemoryProtectionControlRegister(DMAMPCTRL)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readreturns0.Writeshavenoeffect.

28

INT3AB

Interruptassignmentofregion3toGroupAorGroupB.

0

TheinterruptisroutedtotheVIM(GroupA).

1

TheinterruptisroutedtothesecondCPU(GroupB).

27

INT3ENA

Interruptenableofregion3.

0

Theinterruptisdisabled.

1

Theinterruptisenabled.

26-25

REG3AP

Region3accesspermission.Thesebitsdeterminetheaccesspermissionforregion3

0

Allaccessesareallowed.

1h

Readonlyaccessesareallowed.

2h

Writeonlyaccessesareallowed.

3h

Noaccessesareallowed.

24

REG3ENA

Region3enable.

0

Theregionisdisabled(noaddresscheckingdone).

1

Theregionisenabled(addressandaccesspermissioncheckingdone).

23-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20

INT2AB

Interruptassignmentofregion2toGroupAorGroupB.

1

TheinterruptisroutedtotheVIM(GroupA).

0

TheinterruptisroutedtothesecondCPU(GroupB).

19

INT2ENA

Interruptenableofregion2.

1

Theinterruptisdisabled.

0

Theinterruptisenabled.

18-17

REG2AP

Region2accesspermission.Thesebitsdeterminetheaccesspermissionforregion2.

0

Allaccessesareallowed.

1h

Readonlyaccessesareallowed.

2h

Writeonlyaccessesareallowed.

3h

Noaccessesareallowed.

16

REG2ENA

Region2enable.

0

Theregionisdisabled(noaddresscheckingdone).

1

Theregionisenabled(addressandaccesspermissioncheckingdone).

590

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

Table16-65.DMAMemoryProtectionControlRegister(DMAMPCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

15-13

Reserved

0

Readsreturn0.Writeshavenoeffect.

12

INT1AB

Interruptassignmentofregion1toGroupAorGroupB.

0

TheinterruptisroutedtotheVIM(GroupA).

1

TheinterruptisroutedtothesecondCPU(GroupB).

11

INT1ENA

Interruptenableofregion1.

0

Theinterruptisdisabled.

1

Theinterruptisenabled.

10-9

REG1AP

Region1accesspermission.Thesebitsdeterminetheaccesspermissionforregion3

0

Allaccessesareallowed.

1h

Readonlyaccessesareallowed.

2h

Writeonlyaccessesareallowed.

3h

Noaccessesareallowed.

8

REG1ENA

Region1enable.

0

Theregionisdisabled(noaddresscheckingdone).

1

Theregionisenabled(addressandaccesspermissioncheckingdone).

7-5

Reserved

0

Readsreturnzerosandwriteshavenoeffect.

4

INT0AB

Interruptassignmentofregion0toGroupAorGroupB.

0

TheinterruptisroutedtotheVIM(GroupA).

1

TheinterruptisroutedtotheDSPCPU(GroupB).

3

INT0ENA

Interruptenableofregion0.

0

Theinterruptisdisabled.

1

Theinterruptisenabled.

2-1

REG0AP

Region0accesspermission.Thesebitsdeterminetheaccesspermissionforregion0.

0

Allaccessesareallowed.

1h

Readonlyaccessesareallowed.

2h

Writeonlyaccessesareallowed.

3h

Noaccessesareallowed.

0

REG0ENA

Region0enable.

0

Theregionisdisabled(noaddresscheckingdone).

1

Theregionisenabled(addressandaccesspermissioncheckingdone).

591

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.58DMAMemoryProtectionStatusRegister(DMAMPST)

Figure16-75.DMAMemoryProtectionStatusRegister(DMAMPST)[offset=1B4h]

31

25

24

23

17

16

Reserved

REG3FT

Reserved

REG2FT

R-0

R/WC-0

R-0

R/WC-0

15

9

8

7

1

0

Reserved

REG1FT

Reserved

REG0FT

R-0

R/WC-0

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table16-66.DMAMemoryProtectionStatusRegister(DMAMPST)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

REG3FT

Region3fault.Thisbitdetermineswhetheranaccesspermissionviolationwasdetectedinthis

region.

0

Nofaultwasdetected.

1

Read:Afaultwasdetected.

Write:Thebitwascleared.

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

REG2FT

Region2fault.Thisbitdetermineswhetheraaccesspermissionviolationwasdetectedinthis

region.

0

Nofaultwasdetected.

1

Read:Afaultwasdetected.

Write:Thebitwascleared.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

REG1FT

Region1fault.Thisbitdetermineswhetheranaccesspermissionviolationwasdetectedinthis

region.

0

Nofaultwasdetected.

1

Read:Afaultwasdetected.

Write:Thebitwascleared.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

REG0FT

Region0fault.Thisbitdetermineswhetheraaccesspermissionviolationwasdetectedinthis

region.

0

Nofaultwasdetected.

1

Read:Afaultwasdetected.

Write:Thebitwascleared.

592

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.59DMAMemoryProtectionRegion0StartAddressRegister(DMAMPR0S)

Figure16-76.DMAMemoryProtectionRegion0StartAddressRegister(DMAMPR0S)[offset=

1B8h]

31

16

STARTADDRESS

R/WP-0

15

0

STARTADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-67.DMAMemoryProtectionRegion0StartAddressRegister(DMAMPR0S)Field

Descriptions

Bit

Field

Value

Description

31-0

STARTADDRESS

0-FFFFFFFFh

StartAddressdefinestheaddressatwhichtheregionbegins.

16.3.1.60DMAMemoryProtectionRegion0EndAddressRegister(DMAMPR0E)

Figure16-77.DMAMemoryProtectionRegion0EndAddressRegister(DMAMPR0E)[offset=

1BCh]

31

16

ENDADDRESS

R/WP-0

15

0

ENDADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-68.DMAMemoryProtectionRegion0EndAddressRegister(DMAMPR0E)]Field

Descriptions

Bit

Field

Value

Description

31-0

ENDADDRESS

0-FFFFFFFFh

EndAddressdefinestheaddressatwhichtheregionends.Theendaddressusuallyis

largerthanthestartaddressforthisregion;otherwise,theregionwillwraparoundatthe

endoftheaddressspace.

593

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.61DMAMemoryProtectionRegion1StartAddressRegister(DMAMPR1S)

Figure16-78.DMAMemoryProtectionRegion1StartAddressRegister(DMAMPR1S)[offset=

1C0h]

31

16

STARTADDRESS

R/WP-0

15

0

STARTADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-69.DMAMemoryProtectionRegion1StartAddressRegister(DMAMPR1S)Field

Descriptions

Bit

Field

Value

Description

31-0

STARTADDRESS

0-FFFFFFFFh

StartAddressdefinestheaddressatwhichtheregionbegins.

16.3.1.62DMAMemoryProtectionRegion1EndAddressRegister(DMAMPR1E)

Figure16-79.DMAMemoryProtectionRegion1EndAddressRegister(DMAMPR1E)[offset=

1C4h]

31

16

ENDADDRESS

R/WP-0

15

0

ENDADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-70.DMAMemoryProtectionRegion1EndAddressRegister(DMAMPR1E)Field

Descriptions

Bit

Field

Value

Description

31-0

ENDADDRESS

0-FFFFFFFFh

EndAddressdefinestheaddressatwhichtheregionends.Theendaddressusuallyis

largerthanthestartaddressforthisregion;otherwisetheregionwillwraparoundatthe

endoftheaddressspace.

594

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.1.63DMAMemoryProtectionRegion2StartAddressRegister(DMAMPR2S)

Figure16-80.DMAMemoryProtectionRegion2StartAddressRegister(DMAMPR2S)[offset=

1C8h]

31

16

STARTADDRESS

R/WP-0

15

0

STARTADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-71.DMAMemoryProtectionRegion2StartAddressRegister(DMAMPR2S)Field

Descriptions

Bit

Field

Value

Description

31-0

STARTADDRESS

0-FFFFFFFFh

StartAddressdefinestheaddressatwhichtheregionbegins.

16.3.1.64DMAMemoryProtectionRegion2EndAddressRegister(DMAMPR2E)

Figure16-81.DMAMemoryProtectionRegion2EndAddressRegister(DMAMPR2E)[offset=

1CCh]

31

16

ENDADDRESS

R/WP-0

15

0

ENDADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-72.DMAMemoryProtectionRegion2EndAddressRegister(DMAMPR2E)Field

Descriptions

Bit

Field

Value

Description

31-0

ENDADDRESS

0-FFFFFFFFh

EndAddressdefinestheaddressatwhichtheregionends.Theendaddressusuallyis

largerthanthestartaddressforthisregion;otherwisetheregionwillwraparoundatthe

endoftheaddressspace.

595

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.1.65DMAMemoryProtectionRegion3StartAddressRegister(DMAMPR3S)

Figure16-82.DMAMemoryProtectionRegion3StartAddressRegister(DMAMPR3S)[offset=

1D0h]

31

16

STARTADDRESS

R/WP-0

15

0

STARTADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-73.DMAMemoryProtectionRegion3StartAddressRegister(DMAMPR3S)Field

Descriptions

Bit

Field

Value

Description

31-0

STARTADDRESS

0-FFFFFFFFh

StartAddressdefinestheaddressatwhichtheregionbegins.

16.3.1.66DMAMemoryProtectionRegion3EndAddressRegister(DMAMPR3E)

Figure16-83.DMAMemoryProtectionRegion3EndAddressRegister(DMAMPR3E)[offset=

1D4h]

31

16

ENDADDRESS

R/WP-0

15

0

ENDADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table16-74.DMAMemoryProtectionRegion3EndAddressRegister(DMAMPR3E)Field

Descriptions

Bit

Field

Value

Description

31-0

ENDADDRESS

0-FFFFFFFFh

EndAddressdefinestheaddressatwhichtheregionends.Theendaddressusuallyis

largerthanthestartaddressforthisregion;otherwise,theregionwillwraparoundatthe

endoftheaddressspace.

596

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.2ChannelConfiguration

Thechannelconfigurationisdefinedbythechannelcontrolpacket:channelcontrol,transfercount,index

pointers,source/destinationaddress.

•ItisstoredinlocalRAM,whichisprotectedbyparity.

•Eachcontrolpacketcontainsatotalofninefields.

•Thefirstsixfieldsareprogrammable,whilethelastthreefieldsarereadonly.

•TheRAMisaccessiblebyqueueAandqueueBstatemachinesaswellasCPU.

•Whentherearesimultaneousaccesses,thepriorityisresolvedinafixedpriorityschemewiththeCPU

havingthehighestpriority.

Allthecontrolpacketslookthesame.Following,thereisthedetailedlayoutoftheseregistersshownfor

controlpacket0.

16.3.2.1InitialSourceAddress(ISADDR)

Figure16-84.InitialSourceAddress(ISADDR)[offset=00]

31

16

ISADDR

R/WP-X

15

0

ISADDR

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table16-75.InitialSourceAddress(ISADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

ISADDR

0-FFFFFFFFh

Initialsourceaddress.Thesebitsgivetheabsolute32-bitsourceaddress(physical).

597

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.2.2InitialDestinationAddressRegister(IDADDR)

Figure16-85.InitialDestinationAddressRegister(IDADDR)[offset=04h]

31

16

IDADDR

R/WP-X

15

0

IDADDR

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table16-76.InitialDestinationAddressRegister(IDADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

IDADDR

0-FFFFFFFFh

Initialdestinationaddress.Thesebitsgivetheabsolute32-bitdestinationaddress(physical).

16.3.2.3InitialTransferCountRegister(ITCOUNT)

Figure16-86.InitialTransferCountRegister(ITCOUNT)[offset=08h]

31

29

28

16

Reserved

IFTCOUNT

R-X

R/WP-X

15

13

12

0

Reserved

IETCOUNT

R-X

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table16-77.InitialTransferCountRegister(ITCOUNT)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readsareundefined.Writeshavenoeffect.

28-16

IFTCOUNT

0-1FFFh

Initialframetransfercount.Thesebitsdefinethenumberofframetransfers.

15-13

Reserved

0

Readsareundefined.Writeshavenoeffect.

12-0

IETCOUNT

0-1FFFh

Initialelementtransfercount.Thesebitsdefinethenumberofelementtransfers.Theblock

transfersizewillbeIETCOUNTxIFTCOUNT

.

598

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.2.4ChannelControlRegister(CHCTRL)

Figure16-87.ChannelControlRegister(CHCTRL)[offset=10h]

31

22

21

16

Reserved

CHAIN

R-X

R/WP-X

15

14

13

12

11

9

8

7

5

4

3

2

1

0

RES

WES

Reserved

TTYPE

Reserved

ADDMR

ADDMW

AIM

R/WP-X

R/WP-X

R-X

R/WP-X

R-X

R/WP-X

R/WP-X

R/WP-

X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table16-78.ChannelControlRegister(CHCTRL)FieldDescriptions

Bit

Field

Value

Description

31-22

Reserved

0

Readsareundefined.Writeshavenoeffect.

21-16

CHAIN

Nextchanneltobetriggered.Attheendoftheprogrammednumberofframes,thespecified

channelwillbetriggered.

Note:TheprogrammermustprogramtheCHAINbitsbeforeinitiatingaDMAtransfer.

0

Nochannelisselected.

1h

Channel0isselected.

4h

Channel15isselected.

4FEh

Reserved

15-14

RES

Readelementsize.

0

Theelementisbyte,8-bit.

1h

Theelementishalf-word,16-bit.

2h

Theelementisword,32-bit.

3h

Theelementisdouble-word,64-bit.

13-12

WES

Writeelementsize.

0

Theelementisbyte,8-bit.

1h

Theelementishalf-word,16-bit.

2h

Theelementisword,32-bit.

3h

Theelementisdouble-word,64-bit.

11-9

Reserved

0

Readsareundefined.Writeshavenoeffect.

8

TTYPE

Transfertype.

0

Ahardwarerequesttriggersoneframetransfer.

1

Ahardwarerequesttriggersoneblocktransfer.

7-5

Reserved

0

Readsareundefined.Writeshavenoeffect.

4-3

ADDMR

Addressingmoderead.

0

Constant

1h

Post-increment

2h

Reserved

3h

Indexed

2-1

ADDMW

Addressingmodewrite.

0

Constant

1h

Post-increment

2h

Reserved

3h

Indexed

0

AIM

Auto-initiationmode.

0

Auto-initiationmodeisdisabled.

1

Auto-initiationmodeisenabled.

599

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.2.5ElementIndexOffsetRegister(EIOFF)

Figure16-88.ElementIndexOffsetRegister(EIOFF)[offset=14h]

31

29

28

16

Reserved

EIDXD

R-X

R/WP-X

15

13

12

0

Reserved

EIDXS

R-X

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table16-79.ElementIndexOffsetRegister(EIOFF)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readsareundefined.Writeshavenoeffect.

28-16

EIDXD

0-1FFFh

Destinationaddresselementindex.Thesebitsdefinetheoffsettobeaddedtothe

destinationaddressaftereachelementtransfer.

15-13

Reserved

0

Readsareundefined.Writeshavenoeffect.

12-0

EIDXS

0-1FFFh

Sourceaddresselementindex.Thesebitsdefinetheoffsettobeaddedtothesource

addressaftereachelementtransfer.

16.3.2.6FrameIndexOffsetRegister(FIOFF)

Figure16-89.FrameIndexOffsetRegister(FIOFF)[offset=18h]

31

29

28

16

Reserved

FIDXD

R-X

R/WP-X

15

13

12

0

Reserved

FIDXS

R-X

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table16-80.FrameIndexOffsetRegister(FIOFF)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readsareundefined.Writeshavenoeffect.

28-16

FIDXD

0-1FFFh

Destinationaddressframeindex.Thesebitsdefinetheoffsettobeaddedtothedestination

addressafterelementcountreachedone.

15-13

Reserved

0

Readsareundefined.Writeshavenoeffect.

12-0

FIDXS

0-1FFFh

Sourceaddressframeindex.Thesebitsdefinetheoffsettobeaddedtothesourceaddress

afterelementcountreachedone.

600

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegistersandControlPackets

16.3.2.7CurrentSourceAddressRegister(CSADDR)

Figure16-90.CurrentSourceAddressRegister(CSADDR)[offset=800h]

31

16

CSADDR

R-X

15

0

CSADDR

R-X

LEGEND:R=Readonly;-n=valueafterreset;X=Unknown

Table16-81.CurrentSourceAddressRegister(CSADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

CSADDR

0-FFFFFFFFh

Currentsourceaddress.Thesebitscontainthecurrentworkingabsolute32-bitsource

address(physical).Thesebitsareonlyupdatedafterachannelisarbitratedoutfromthe

priorityqueue.

16.3.2.8CurrentDestinationAddressRegister(CDADDR)

Figure16-91.CurrentDestinationAddressRegister(CDADDR)[offset=804h]

31

16

CDADDR

R-X

15

0

CDADDR

R-X

LEGEND:R=Readonly;-n=valueafterreset;X=Unknown

Table16-82.CurrentDestinationAddressRegister(CDADDR)FieldDescriptions

Bit

Field

Value

Description

31-0

CDADDR

0-FFFFFFFFh

Currentdestinationaddress.Thesebitscontainthecurrentworkingabsolute32-bit

destinationaddress(physical).Thesebitsareonlyupdatedafterachannelisarbitratedout

ofthepriorityqueue.

601

SPNU499B–November2012–RevisedAugust2013

DirectMemoryAccessController(DMA)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegistersandControlPacketswww.ti.com

16.3.2.9CurrentTransferCountRegister(CTCOUNT)

Figure16-92.CurrentTransferCountRegister(CTCOUNT)[offset=808h]

31

29

28

16

Reserved

CFTCOUNT

R-X

R-X

15

13

12

0

Reserved

CETCOUNT

R-X

R-X

LEGEND:R=Readonly;-n=valueafterreset;X=Unknown

Table16-83.CurrentTransferCountRegister(CTCOUNT)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readsareundefined.Writeshavenoeffect.

28-16

CFTCOUNT

0-1FFFh

Currentframetransfercount.Returnedthecurrentremainingframecounts.

15-13

Reserved

0

Readsareundefined.Writeshavenoeffect.

12-0

CETCOUNT

0-1FFFh

Currentelementtransfercount.Thesebitsreturnthecurrentremainingelementcounts.

CTCOUNTregisterisonlyupdatedafterachannelisarbitratedoutofthepriorityqueue.

602

DirectMemoryAccessController(DMA)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter17

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

ThischapterdescribestheexternalmemoryInterface(EMIF).

Topic...........................................................................................................................Page

17.1Introduction....................................................................................................604

17.2EMIFModuleArchitecture.................................................................................606

17.3Registers........................................................................................................638

17.4ExampleConfiguration.....................................................................................650

603

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Introductionwww.ti.com

17.1Introduction

17.1.1PurposeofthePeripheral

ThisEMIFmemorycontrolleriscompliantwiththeJESD21-CSDRSDRAMmemoriesutilizinga16-bit

databus.ThepurposeofthisEMIFistoprovideameansfortheCPUtoconnecttoavarietyofexternal

devicesincluding:

•Singledatarate(SDR)SDRAM

•AsynchronousdevicesincludingNORFlashandSRAM

ThemostcommonusefortheEMIFistointerfacewithbothaflashdeviceandanSDRAMdevice

simultaneously.containsanexampleofoperatingtheEMIFinthisconfiguration.

17.1.2Features

TheEMIFincludesmanyfeaturestoenhancetheeaseandflexibilityofconnectingtoexternalSDR

SDRAMandasynchronousdevices.

17.1.2.1AsynchronousMemorySupport

EMIFsupportsasynchronous:

•SRAMmemories

•NORFlashmemories

TheEMIFdatabuswidthisupto16bitsandthereareupto22addresslines.Thereisanexternalwait

inputthatallowsslowerasynchronousmemoriestoextendthememoryaccess.TheEMIFmodule

supportsupto3chipselects(EMIF_nCS[4:2]).Eachchipselecthasthefollowingindividually

programmableatttibutes:

•DataBusWidth

•Readcycletimings:setup,hold,strobe

•Writecycletimings:setup,hold,strobe

•Busturn-aroundtime

•ExtendedWaitOptionwithProgrammableTimeout

•SelectStrobeoption

17.1.2.2SynchronousDRAMMemorySupport

TheEMIFmodulesupports16-bitSDRAMinadditiontotheasynchronousmemorieslistedin

Section17.1.2.1.IthasasingleSDRAMchipselect(EMIF_nCS[0]).SDRAMconfigurationsthatare

supportedare:

•One,TwoandFourBankSDRAMdevices

•DeviceswithEight,Nine,Ten,andElevenColumnAddress

•CASLatencyoftwoorthreeclockcycles

•16-bitDataBusWidth

•3.3VLVCMOSInterface

Additionally,theEMIFsupportsplacingtheSDRAMinSelf-RefreshandPowerdownmodes.Self-refresh

modeallowstheSDRAMtobeputinalow-powerstatewhilestillretainingmemorycontents;sincethe

SDRAMwillcontinuetorefreshitselfevenwithoutclocksfromthemicrocontroller.Powerdownmode

achievesevenlowerpower,exceptthemicrocontrollermustperiodicallywakeupandissuerefreshesif

dataretentionisrequired.

NotethattheEMIFmoduledoesnotsupportMobileSDRAMdevices.

604

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_nCS[0]EMIF_nCASEMIF_nRASEMIF_CLKEMIF_CKEEMIF_nCS[5:2]EMIF_nOEEMIF_WAITEMIF_nWEEMIF_BA[1:0]EMIF_nDQM[x:0]EMIF_D[x:0]EMIF_A[x:0]

EMIF

CPUEDMAMasterPeripherals

SDRAMinterfaceAsynchronousinterfaceShared SDRAMand asynchronousinterfaceEMIF_A_RW



www.ti.comIntroduction

17.1.3FunctionalBlockDiagram

Figure17-1illustratestheconnectionsbetweentheEMIFanditsinternalrequesters,alongwiththe

externalEMIFpins.Section17.2.2containsadescriptionoftheentitiesinternaltotheSoCthatcansend

requeststotheEMIF,alongwiththeirprioritization.Section17.2.3describestheEMIFexternalpinsand

summarizestheirpurposewheninterfacingwithSDRAMandasynchronousdevices.

Figure17-1.EMIFFunctionalBlockDiagram

605

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2EMIFModuleArchitecture

ThissectionprovidesdetailsaboutthearchitectureandoperationoftheEMIF.Both,SDRAMand

asynchronousInterfacearecovered,alongwithothersystem-relatedissuessuchasclockcontrol.

17.2.1EMIFClockControl

TheEMIFclockisoutputontheEMIF_CLKpinandshouldbeusedwheninterfacingtoexternalSDRAM

devices.TheEMIFmodulegetstheVCLK3clockdomainastheinput.Thisclockdomainisrunningathalf

thefrequencyofthemainoscillatorbydefault,thatis,between2.5MHzto10MHz.TheVCLK3frequency

isdivideddownfromtheHCLKdomainfrequencybyaprogrammabledivider(/1to/16).Referthe

Architecturechapterofthedevicetechnicalreferencemanualformoreinformationonconfiguringthe

VCLK3domainfrequency.

17.2.2EMIFRequests

DifferentsourceswithintheSoCcanmakerequeststotheEMIF.Theserequestsconsistofaccessesto

SDRAMmemory,asynchronousmemory,andEMIFregisters.TheEMIFcanprocessonlyonerequestat

atime.ThereforeahighperformancecrossbarswitchexistswithintheSoCtoprovideprioritizedrequests

fromthedifferentsourcestotheEMIF.Thesourcesare:

1.CPU

2.DMA

3.Othermasterperipherals

Ifarequestissubmittedfromtwoormoresourcessimultaneously,thecrossbarswitchwillforwardthe

highestpriorityrequesttotheEMIFfirst.Uponcompletionofarequest,thecrossbarswitchagain

evaluatesthependingrequestsandforwardsthehighestprioritypendingrequesttotheEMIF.

WhentheEMIFreceivesarequest,itmayormaynotbeimmediatelyprocessed.Insomecases,the

EMIFwillperformoneormoreautorefreshcyclesbeforeprocessingtherequest.Fordetailsonthe

EMIF'sinternalarbitrationbetweenperformingrequestsandperformingautorefreshcycles,see

Section17.2.13.

17.2.3EMIFSignalDescriptions

ThissectiondescribesthefunctionofeachoftheEMIFsignals.

Table17-1.EMIFPinsUsedtoAccessBothSDRAMandAsynchronousMemories

Pins(s)

I/O

Description

EMIF_D[15:0]

I/O

EMIFdatabus.

EMIF_A[21:0]

O

EMIFaddressbus.

WheninterfacingtoanSDRAMdevice,thesepinsareprimarilyusedtoprovidetherowand

columnaddresstotheSDRAM.Themappingfromtheinternalprogramaddresstotheexternal

valuesplacedonthesepinscanbefoundinTable17-13.EMIF_A[10]isalsousedduringthe

PREcommandtoselectwhichbankstodeactivate.

Wheninterfacingtoanasynchronousdevice,thesepinsareusedinconjunctionwiththe

EMIF_BApinstoformtheaddressthatissenttothedevice.Themappingfromtheinternal

programaddresstotheexternalvaluesplacedonthesepinscanbefoundinSection17.2.6.1.

EMIF_BA[1:0]

O

EMIFbankaddress.

WheninterfacingtoanSDRAMdevice,thesepinsareusedtoprovidethebankaddressinputsto

theSDRAM.Themappingfromtheinternalprogramaddresstotheexternalvaluesplacedon

thesepinscanbefoundinTable17-13.

Wheninterfacingtoanasynchronousdevice,thesepinsareusedinconjunctionwiththeEMIF_A

pinstoformtheaddressthatissenttothedevice.Themappingfromtheinternalprogram

addresstotheexternalvaluesplacedonthesepinscanbefoundinSection17.2.6.1.

EMIF_nDQM[1:0]

O

Active-lowbyteenables.

WheninterfacingtoSDRAM,thesepinsareconnectedtotheDQMpinsoftheSDRAMto

individuallyenable/disableeachofthebytesinadataaccess.

Wheninterfacingtoanasynchronousdevice,thesepinsareconnectedtobyteenables.See

Section17.2.6fordetails.

606

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

Table17-1.EMIFPinsUsedtoAccessBothSDRAMandAsynchronousMemories(continued)

Pins(s)

I/O

Description

EMIF_nWE

O

Active-lowwriteenable.

WheninterfacingtoSDRAM,thispinisconnectedtothenWEpinoftheSDRAMandisusedto

sendcommandstothedevice.

Wheninterfacingtoanasynchronousdevice,thispinprovidesasignalwhichisactive-lowduring

thestrobeperiodofanasynchronouswriteaccesscycle.

Table17-2.EMIFPinsSpecifictoSDRAM

Pin(s)

I/O

Description

EMIF_nCS[0]

O

Active-lowchipenablepinforSDRAMdevices.

Thispinisconnectedtothechip-selectpinoftheattachedSDRAMdeviceandisusedfor

enabling/disablingcommands.Bydefault,theEMIFkeepsthisSDRAMchipselectactive,evenif

theEMIFisnotinterfacedwithanSDRAMdevice.Thispinisdeactivatedwhenaccessingthe

asynchronousmemorybankandisreactivatedoncompletionoftheasynchronousassess.

EMIF_nRAS

O

Active-lowrowaddressstrobepin.

ThispinisconnectedtothenRASpinoftheattachedSDRAMdeviceandisusedforsending

commandstothedevice.

EMIF_nCAS

O

Active-lowcolumnaddressstrobepin.

ThispinisconnectedtothenCASpinoftheattachedSDRAMdeviceandisusedforsending

commandstothedevice.

EMIF_CKE

O

Clockenablepin.

ThispinisconnectedtotheCKEpinoftheattachedSDRAMdeviceandisusedforissuingthe

SELFREFRESHcommandwhichplacesthedeviceinselfrefreshmode.SeeSection17.2.5.7

fordetails.

EMIF_CLK

O

SDRAMclockpin.

ThispinisconnectedtotheCLKpinoftheattachedSDRAMdevice.SeeSection17.2.1for

detailsontheclocksignal.

Table17-3.EMIFPinsSpecifictoAsynchronousMemory

Pin(s)

I/O

Description

EMIF_nCS[4:2]

O

Active-lowchipenablepinsforasynchronousdevices.

Thesepinsaremeanttobeconnectedtothechip-selectpinsoftheattachedasynchronous

device.Thesepinsareactiveonlyduringaccessestotheasynchronousmemory.

EMIF_nWAIT

I

Waitinputwithprogrammablepolarity.

Aconnectedasynchronousdevicecanextendthestrobeperiodofanaccesscyclebyasserting

theEMIF_nWAITinputtotheEMIFasdescribedinSection17.2.6.6.Toenablethisfunctionality,

theEWbitintheasynchronous1configurationregister(CE2CFG)mustbesetto1.Inaddition,

theWP0bitinCE2CFGmustbeconfiguredtodefinethepolarityoftheEMIF_nWAITpin.

EMIF_nOE

O

Active-lowpinenableforasynchronousdevices.

Thispinprovidesasignalwhichisactive-lowduringthestrobeperiodofanasynchronousread

accesscycle.

EMIF_RnW

O

EMIFasynchronousread/writecontrol.

Thispinstayshighduringreadsandstayslowduringwrites(samedurationasCS).

17.2.4EMIFSignalMultiplexingControl

SeveralEMIFsignalsaremultiplexedwithotherfunctionsonthismicrocontroller.PleaserefertotheI/O

MultiplexingModulechapterofthetechnicalreferencemanualformoreinformationonhowtoenablethe

outputoftheseEMIFsignals.

607

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.5SDRAMControllerandInterface

TheEMIFcangluelesslyinterfacetomoststandardSDRSDRAMdevicesandsupportssuchfeaturesas

selfrefreshmodeandprioritizedrefresh.Inaddition,itprovidesflexibilitythroughprogrammable

parameterssuchastherefreshrate,CASlatency,andmanySDRAMtimingparameters.Thefollowing

sectionsincludedetailsonhowtoInterfaceandproperlyconfiguretheEMIFtoperformreadandwrite

operationstoexternallyconnectedSDRSDRAMdevices.Also,providesadetailedexampleofinterfacing

theEMIFtoacommonSDRAMdevice.

17.2.5.1SDRAMCommands

TheEMIFsupportstheSDRAMcommandsdescribedinTable17-4.Table17-5showsthetruthtablefor

theSDRAMcommands,andanexampletimingwaveformofthePREcommandisshowninFigure17-2.

EMIF_A[10]ispulledlowinthisexampletodeactivateonlythebankspecifiedbytheEMIF_BApins.

Table17-4.EMIFSDRAMCommands

Command

Function

PRE

Precharge.DependingonthevalueofEMIF_A[10],thePREcommandeitherdeactivatestheopenrowinall

banks(EMIF_A[10]=1)oronlythebankspecifiedbytheEMIF_BA[1:0]pins(EMIF_A[10]=0).

ACTV

Activate.TheACTVcommandactivatestheselectedrowinaparticularbankforthecurrentaccess.

READ

Read.TheREADcommandoutputsthestartingcolumnaddressandsignalstheSDRAMtobegintheburstread

operation.AddressEMIF_A[10]isalwayspulledlowtoavoidautoprecharge.Thisallowsforbetterbank

interleavingperformance.

WRT

Write.TheWRTcommandoutputsthestartingcolumnaddressandsignalstheSDRAMtobegintheburstwrite

operation.AddressEMIF_A[10]isalwayspulledlowtoavoidautoprecharge.Thisallowsforbetterbank

interleavingperformance.

BT

Burstterminate.TheBTcommandisusedtotruncatethecurrentreadorwriteburstrequest.

LMR

Loadmoderegister.TheLMRcommandsetsthemoderegisteroftheattachedSDRAMdevicesandisonly

issuedduringtheSDRAMinitializationsequencedescribedinSection17.2.5.4.

REFR

Autorefresh.TheREFRcommandsignalstheSDRAMtoperformanautorefreshaccordingtoitsinternal

address.

SLFR

Selfrefresh.TheselfrefreshcommandplacestheSDRAMintoselfrefreshmode,duringwhichitprovidesitsown

clocksignalandautorefreshcycles.

NOP

Nooperation.TheNOPcommandisissuedduringallcyclesinwhichoneoftheabovecommandsisnotissued.

Table17-5.TruthTableforSDRAMCommands

SDRAMPins:

CKE

nCS

nRAS

nCAS

nWE

BA[1:0]

A[12:11]

A[10]

A[9:0]

EMIFPins:

EMIF_CKE

EMIF_nCS[0]

EMIF_nRAS

EMIF_nCAS

EMIF_nWE

EMIF_BA[1:0]

EMIF_A[12:11]

EMIF_A[10]

EMIF_A[9:0]

PRE

H

L

L

H

L

Bank/X

X

L/H

X

ACTV

H

L

L

H

H

Bank

Row

Row

Row

READ

H

L

H

L

H

Bank

Column

L

Column

WRT

H

L

H

L

L

Bank

Column

L

Column

BT

H

L

H

H

L

X

X

X

X

LMR

H

L

L

L

L

X

Mode

Mode

Mode

REFR

H

L

L

L

H

X

X

X

X

SLFR

L

L

L

L

H

X

X

X

X

NOP

H

L

H

H

H

X

X

X

X

608

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_nCS[0]EMIF_nCASEMIF_nRASEMIF_nWEEMIF_CLKEMIF_CKEEMIF_BA[1:0]EMIF_A[11:0]EMIF_nDQM[0]EMIF_nDQM[1]EMIF_D[15:0]

EMIF

nCEnCASnRASnWECLKCKEBA[1:0]A[11:0]LDQMUDQMDQ[15:0]

SDRAM2M x 16x 4 bank

PRE

EMIF_CLKEMIF_nCS[0]EMIF_BAEMIF_AEMIF_nRASEMIF_nCASEMIF_nWEBankEMIF_A[10]=0

EMIF_nDQM



www.ti.comEMIFModuleArchitecture

Figure17-2.TimingWaveformofSDRAMPRECommand

17.2.5.2InterfacingtoSDRAM

TheEMIFsupportsagluelessinterfacetoSDRAMdeviceswiththefollowingcharacteristics:

•Pre-chargebitisA[10]

•Thenumberofcolumnaddressbitsis8,9,10,or11.

•Thenumberofrowaddressbitsis13,14,15,or16.

•Thenumberofinternalbanksis1,2,or4.

Figure17-3showsaninterfacebetweentheEMIFanda2M×16×4bankSDRAMdevice,and

Figure17-4showsaninterfacebetweentheEMIFanda512K×16×2bankSDRAMdevice.Fordevices

supporting16-bitinterface,refertoTable17-6forlistofcommonly-supportedSDRAMdevicesandthe

requiredconnectionsfortheaddresspins.

Figure17-3.EMIFto2M×16×4bankSDRAMInterface

609

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_nCS[0]EMIF_nCASEMIF_nRASEMIF_nWEEMIF_CLKEMIF_CKEEMIF_BA[0]EMIF_A[10:0]EMIF_nDQM[0]EMIF_nDQM[1]EMIF_D[15:0]

EMIF

nCEnCASnRASnWECLKCKEBA[0]A[10:0]LDQMUDQMDQ[15:0]

SDRAM512 x 16x 2 bank



EMIFModuleArchitecturewww.ti.com

Figure17-4.EMIFto512K×16×2bankSDRAMInterface

Table17-6.16-bitEMIFAddressPinConnections

SDRAMSize

Width

Banks

Device

AddressPins

16Mbits

×16

2

SDRAM

A[10:0]

EMIF

EMIF_A[10:0]

64Mbits

×16

4

SDRAM

A[11:0]

EMIF

EMIF_A[11:0]

128Mbits

×16

4

SDRAM

A[11:0]

EMIF

EMIF_A[11:0]

256Mbits

x16

4

SDRAM

A[12:0]

EMIF

EMIF_A[12:0]

512Mbits

x16

4

SDRAM

A[12:0]

EMIF

EMIF_A[12:0]

610

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

17.2.5.3SDRAMConfigurationRegisters

TheoperationoftheEMIF'sSDRAMinterfaceiscontrolledbyprogrammingtheappropriateconfiguration

registers.Thissectiondescribesthepurposeandfunctionofeachconfigurationregister,butSection17.3

shouldbereferredforamoredetaileddescriptionofeachregister,includingthedefaultregistersvalues

andbit-fieldpositions.Thefollowingtableslistthefoursuchconfigurationregisters,alongwitha

descriptionofeachoftheirprogrammablefields.

NOTE:Writingtoanyofthefields:NM,CL,IBANK,andPAGESIZEintheSDRAMconfiguration

register(SDCR)causestheEMIFtoabandonwhateveritiscurrentlydoingandtriggerthe

SDRAMinitializationproceduredescribedinSection17.2.5.4.

Table17-7.DescriptionoftheSDRAMConfigurationRegister(SDCR)

Parameter

Description

SR

ThisbitcontrolsenteringandexitingoftheSelf-Refreshmode.Thefieldshouldbewrittenusingabyte-

writetotheupperbyteofSDCRtoavoidtriggeringtheSDRAMinitializationsequence.

PD

ThisbitcontrolsenteringandexitingofthePowerdownmode.Thefieldshouldbewrittenusingabyte-

writetotheupperbyteofSDCRtoavoidtriggeringtheSDRAMinitializationsequence.IfbothSRand

PDbitsareset,theEMIFwillgointoSelfRefresh.

PDWR

PerformrefreshesduringPowerDown.Writinga1tothisbitwillcausetheEMIFtoexitthepowerdown

stateandissueanAUTOREFRESHcommandeverytimeRefreshMaylevelisset.Thefieldshouldbe

writtenusingabyte-writetotheupperbyteofSDCRtoavoidtriggeringtheSDRAMinitialization

sequence.ThisbitshouldbesetalongwithPDwhenenteringpower-downmode.

NM

NarrowMode.ThisbitdefinesthewidthofthedatabusbetweentheEMIFandtheattachedSDRAM

device.Whensetto1,thedatabusissetto16-bits.Whensetto0,thedatabusissetto32-bits.This

bitmustalwaysbesetto1.

CL

CASlatency.ThisfielddefinesthenumberofclockcyclesbetweenwhenanSDRAMissuesaREAD

commandandwhenthefirstpieceofdataappearsonthebus.Thevalueinthisfieldissenttothe

attachedSDRAMdeviceviatheLOADMODEREGISTERcommandduringtheSDRAMinitialization

procedureasdescribedinSection17.2.5.4.Only,valuesof2h(CASlatency=2)and3h(CASlatency=

3)aresupportedandshouldbewrittentothisfield.A1mustbesimultaneouslywrittentothe

BIT11_9LOCKbitfieldofSDCRinordertowritetotheCLbitfield.

IBANK

NumberofInternalSDRAMBanks.ThisfielddefinesthenumberofbanksinsidetheattachedSDRAM

devicesinthefollowingway:

•WhenIBANK=0,1internalbankisused

•WhenIBANK=1h,2internalbanksareused

•WhenIBANK=2h,4internalbanksareused

ThisfieldvalueaffectsthemappingoflogicaladdressestoSDRAMrow,column,andbankaddresses.

SeeSection17.2.5.11fordetails.

PAGESIZE

PageSize.ThisfielddefinestheinternalpagesizeoftheattachedSDRAMdevicesinthefollowingway:

•WhenPAGESIZE=0,256-wordpagesareused

•WhenPAGESIZE=1h,512-wordpagesareused

•WhenPAGESIZE=2h,1024-wordpagesareused

•WhenPAGESIZE=3h,2048-wordpagesareused

ThisfieldvalueaffectsthemappingoflogicaladdressestoSDRAMrow,column,andbankaddresses.

SeeSection17.2.5.11fordetails.

Table17-8.DescriptionoftheSDRAMRefreshControlRegister(SDRCR)

Parameter

Description

RR

RefreshRate.ThisfieldcontrolstherateatwhichattachedSDRAMdeviceswillberefreshed.The

followingequationcanbeusedtodeterminetherequiredvalueofRRforanSDRAMdevice:

•RR=fEMIF_CLK/(RequiredSDRAMRefreshRate)

MoreinformationabouttheoperationoftheSDRAMrefreshcontrollercanbefoundinSection17.2.5.6.

611

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

Table17-9.DescriptionoftheSDRAMTimingRegister(SDTIMR)

Parameter

Description

T_RFC

SDRAMTimingParameters.ThesefieldsconfiguretheEMIFtocomplywiththeACtiming

requirementsoftheattachedSDRAMdevices.ThisallowstheEMIFtoavoidviolatingSDRAMtiming

T_RP

constraintsandtomoreefficientlyscheduleitsoperations.Moredetailsabouteachoftheseparameters

T_RCD

canbefoundintheregisterdescriptioninSection17.3.6.Theseparametersshouldbesettosatisfythe

correspondingtimingrequirementsfoundintheSDRAM'sdatasheet.

T_WR

T_RAS

T_RC

T_RRD

Table17-10.DescriptionoftheSDRAMSelfRefreshExitTimingRegister(SDSRETR)

Parameter

Description

T_XS

SelfRefreshExitParameter.TheT_XSfieldofthisregisterinformstheEMIFabouttheminimum

numberofEMIF_CLKcyclesrequiredbetweenexitingSelfRefreshandissuinganycommand.This

parametershouldbesettosatisfythetXSRvaluefortheattachedSDRAMdevice.

17.2.5.4SDRAMAuto-InitializationSequence

TheEMIFautomaticallyperformsanSDRAMinitializationsequence,regardlessofwhetheritisinterfaced

toanSDRAMdevice,wheneitherofthefollowingtwoeventsoccur:

•TheEMIFcomesoutofreset.NomemoryaccessestotheSDRAMandAsynchronousinterfacesare

performeduntilthisauto-initializationiscomplete.

•AwriteisperformedtoanyofthethreeleastsignificantbytesoftheSDRAMconfigurationregister

(SDCR)

AnSDRAMinitializationsequenceconsistsofthefollowingsteps:

1.IftheinitializationsequenceisactivatedbyawritetoSDCR,andifanyoftheSDRAMbanksareopen,

theEMIFissuesaPREcommandwithEMIF_A[10]heldhightoindicateallbanks.Thisisdonesothat

themaximumACTVtoPREtimingforanSDRAMisnotviolated.

2.TheEMIFdrivesEMIF_CKEhighandbeginscontinuouslyissuingNOPcommandsuntileightSDRAM

refreshintervalshaveelapsed.AnSDRAMrefreshintervalisequaltothevalueoftheRRfieldof

SDRAMrefreshcontrolregister(SDRCR),dividedbythefrequencyofEMIF_CLK(RR/fEMIF_CLK).This

stepisusedtoavoidviolatingthePower-upconstraintofmostSDRAMdevicesthatrequires200μs

(sometimes100μs)betweenreceivingstableVddandCLKandtheissuingofaPREcommand.

DependingonthefrequencyofEMIF_CLK,thisstepmayormaynotbesufficienttoavoidviolatingthe

SDRAMconstraint.SeeSection17.2.5.5formoreinformation.

3.Aftertherefreshintervalshaveelapsed,theEMIFissuesaPREcommandwithEMIF_A[10]heldhigh

toindicateallbanks.

4.TheEMIFissueseightAUTOREFRESHcommands.

5.TheEMIFissuestheLMRcommandwiththeEMIF_A[9:0]pinssetasdescribedinTable17-11.

6.Finally,theEMIFperformsarefreshcycle,whichconsistsofthefollowingsteps:

(a)IssuingaPREcommandwithEMIF_A[10]heldhighifanybanksareopen

(b)IssuinganREFcommand

612

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

Table17-11.SDRAMLOADMODEREGISTERCommand

EMIF_A[9:7]

EMIF_A[6:4]

EMIF_A[3]

EMIF_A[2:0]

0(Writeburstsare

ThesebitscontroltheCASlatencyofthe

0(SequentialBurst

Thesebitscontroltheburstlengthofthe

oftheprogrammed

SDRAMandaresetaccordingtoCLfield

Type.Interleaved

SDRAMandaresetaccordingtotheNM

burstlengthin

intheSDRAMconfigurationregister

BurstTypenot

fieldintheSDRAMconfigurationregister

EMIF_A[2:0])

(SDCR)asfollows:

supported)

(SDCR)asfollows:

•IfCL=2,EMIF_A[6:4]=2h

•IfNM=0,EMIF_A[2:0]=2h

(CASlatency=2)

(BurstLength=4)

•IfCL=3,EMIF_A[6:4]=3h

•IfNM=1,EMIF_A[2:0]=3h

(CASlatency=3)

(BurstLength=8)

17.2.5.5SDRAMConfigurationProcedure

TherearetwodifferentSDRAMconfigurationprocedures.AlthoughEMIFautomaticallyperformsthe

SDRAMinitializationsequencedescribedinSection17.2.5.4whencomingoutofreset,itisrecommended

tofollowoneoftheprocedureslistedbelowbeforeperforminganyEMIFmemoryrequests.ProcedureA

shouldbefollowedifitisdeterminedthattheSDRAMPower-upconstraintwasnotviolatedduringthe

SDRAMAuto-InitializationSequencedetailedinSection17.2.5.4oncomingoutofReset.TheSDRAM

Power-upconstraintspecifiesthat200μs(sometimes100μs)shouldexistbetweenreceivingstableVdd

andCLKandtheissuingofaPREcommand.ProcedureBshouldbefollowediftheSDRAMPower-up

constraintwasviolated.The200μs(100μs)SDRAMPower-upconstraintwillbeviolatedifthefrequency

ofEMIF_CLKisgreaterthan50MHz(100MHzfor100μsSDRAMpower-upconstraint)duringSDRAM

Auto-InitializationSequence.ProcedureBshouldbefollowedifthereisanydoubtthatthePower-up

constraintwasnotmet.

ProcedureA—FollowingistheproceduretobefollowediftheSDRAMPower-upconstraintwasNOT

violated:

1.PlacetheSDRAMintoSelf-RefreshModebysettingtheSRbitofSDCRto1.Abyte-writetotheupper

byteofSDCRshouldbeusedtoavoidrestartingtheSDRAMAuto-InitializationSequencedescribedin

Section17.2.5.4.TheSDRAMshouldbeplacedintoSelf-Refreshmodewhenchangingthefrequency

ofEMIF_CLKtoavoidincurringthe200μsPower-upconstraintagain.

2.ConfigurethedesiredEMIF_CLKclockfrequency.Thefrequencyofthememoryclockmustmeetthe

timingrequirementsintheSDRAMmanufacturer'sdocumentationandthetiminglimitationsshownin

theelectricalspecificationsofthedevicedatasheet.

3.RemovetheSDRAMfromSelf-RefreshModebyclearingtheSRbitofSDCRto0.Abyte-writetothe

upperbyteofSDCRshouldbeusedtoavoidrestartingtheSDRAMAuto-InitializationSequence

describedinSection17.2.5.4.

4.ProgramSDTIMRandSDSRETRtosatisfythetimingrequirementsfortheattachedSDRAMdevice.

ThetimingparametersshouldbetakenfromtheSDRAMdatasheet.

5.ProgramtheRRfieldofSDRCRtomatchthatoftheattacheddevice'srefreshinterval.See

Section17.2.5.6.1detailsondeterminingtheappropriatevalue.

6.ProgramSDCRtomatchthecharacteristicsoftheattachedSDRAMdevice.Thiswillcausetheauto-

initializationsequenceinSection17.2.5.4tobere-run.Thissecondinitializationgenerallytakesmuch

lesstimeduetotheincreasedfrequencyofEMIF_CLK.

ProcedureB—FollowingistheproceduretobefollowediftheSDRAMPower-upconstraintwas

violated:

1.ConfigurethedesiredEMIF_CLKclockfrequency.Thefrequencyofthememoryclockmustmeetthe

timingrequirementsintheSDRAMmanufacturer'sdocumentationandthetiminglimitationsshownin

theelectricalspecificationsofthedevicedatasheet.

2.ProgramSDTIMRandSDSRETRtosatisfythetimingrequirementsfortheattachedSDRAMdevice.

ThetimingparametersshouldbetakenfromtheSDRAMdatasheet.

3.ProgramtheRRfieldofSDRCRsuchthatthefollowingequationissatisfied:(RR×8)/(fEMIF_CLK)>

200μs(sometimes100μs).Forexample,anEMIF_CLKfrequencyof100MHzwouldrequiresetting

RRto2501(9C5h)orhighertomeeta200μsconstraint.

613

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

4.ProgramSDCRtomatchthecharacteristicsoftheattachedSDRAMdevice.Thiswillcausetheauto-

initializationsequenceinSection17.2.5.4tobere-runwiththenewvalueofRR.

5.PerformareadfromtheSDRAMtoassurethatstep5ofthisprocedurewilloccuraftertheinitialization

processhascompleted.Alternatively,waitfor200μsinsteadofperformingaread.

6.Finally,programtheRRfieldtomatchthatoftheattacheddevice'srefreshinterval.See

Section17.2.5.6.1detailsondeterminingtheappropriatevalue.

Afterfollowingtheaboveprocedure,theEMIFisreadytoperformaccessestotheattachedSDRAM

device.SeeforanexampleofconfiguringtheSDRAMinterface.

17.2.5.6EMIFRefreshController

AnSDRAMdevicerequiresthateachofitsrowsberefreshedataminimumrequiredrate.TheEMIFcan

meetthisconstraintbyperformingautorefreshcyclesatorabovethisrequiredrate.Anautorefreshcycle

consistsofissuingaPREcommandtoallbanksoftheSDRAMdevicefollowedbyissuingaREFR

command.ToinformtheEMIFoftherequiredrateforperformingautorefreshcycles,theRRfieldofthe

SDRAMrefreshcontrolregister(SDRCR)mustbeprogrammed.TheEMIFwillusethisvaluealongwith

twointernalcounterstoautomaticallyperformautorefreshcyclesattherequiredrate.Theautorefresh

cyclescannotbedisabled,eveniftheEMIFisnotinterfacedwithanSDRAM.Theremainderofthis

sectiondetailstheEMIF'srefreshschemeandprovidesanexamplefordeterminingtheappropriatevalue

toplaceintheRRfieldofSDRCR.

Thetwocountersusedtoperformauto-refreshcyclesarea13-bitrefreshintervalcounteranda4-bit

refreshbacklogcounter.AtresetanduponwritingtotheRRfield,therefreshintervalcounterisloaded

withthevaluefromRRfieldandbeginsdecrementing,byone,eachEMIFclockcycle.Whentherefresh

intervalcounterreacheszero,thefollowingactionsoccur:

•TherefreshintervalcounterisreloadedwiththevaluefromtheRRfieldandrestartsdecrementing.

•The4-bitrefreshbacklogcounterincrementsunlessithasalreadyreacheditsmaximumvalue.

TherefreshbacklogcounterrecordsthenumberofautorefreshcyclesthattheEMIFcurrentlyhas

outstanding.Thiscounterisdecrementedbyoneeachtimeanautorefreshcycleisperformedand

incrementedbyoneeachtimetherefreshintervalcounterexpires.Therefreshbacklogcountersaturates

atthevaluesof0000band1111b.TheEMIFusestherefreshbacklogcountertodeterminetheurgency

withwhichanautorefreshcycleshouldbeperformed.Thefourlevelsofurgencyaredescribedin

Table17-12.Thisrefreshschemeallowstherequiredrefreshestobeperformedwithminimalimpacton

accessrequests.

Table17-12.RefreshUrgencyLevels

RefreshBacklog

UrgencyLevel

CounterRange

ActionTaken

RefreshMay

1-3

Anauto-refreshcycleisperformedonlyiftheEMIFhasnorequestspendingandnone

oftheSDRAMbanksareopen.

RefreshRelease

4-7

Anauto-refreshcycleisperformediftheEMIFhasnorequestspending,regardlessof

whetheranySDRAMbanksareopen.

RefreshNeed

8-11

Anauto-refreshcycleisperformedatthecompletionofthecurrentaccessunless

therearereadrequestspending.

RefreshMust

12-15

Multipleauto-refreshcyclesareperformedatthecompletionofthecurrentaccess

untiltheRefreshReleaseurgencylevelisreached.Atthatpoint,theEMIFcanbegin

servicinganynewreadorwriterequests.

614

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

17.2.5.6.1DeterminingtheAppropriateValuefortheRRField

ThevaluethatshouldbeprogrammedintotheRRfieldofSDRCRcanbecalculatedbyusingthe

frequencyoftheEMIF_CLKsignal(fEMIF_CLK)andtherequiredrefreshrateoftheSDRAM(fRefresh).The

followingformulacanbeused:

RR=fEMIF_CLK/fRefresh

TheSDRAMdatasheetoftencommunicatestherequiredSDRAMRefreshRateintermsofthenumberof

REFRcommandsrequiredinagiventimeinterval.TherequiredSDRAMRefreshRateintheformula

abovecanthereforebecalculatedbydividingthenumberofrequiredcyclespertimeinterval(ncycles)by

thetimeintervalgiveninthedatasheet(tRefreshPeriod):

fRefresh=ncycles/tRefreshPeriod

Combiningtheseformulas,thevaluethatshouldbeprogrammedintotheRRfieldcanbecomputedas:

RR=fEMIF_CLK×tRefreshPeriod/ncycles

ThefollowingexampleillustratescalculatingthevalueofRR.Giventhat:

•fEMIF_CLK=100MHz(frequencyoftheEMIFclock)

•tRefreshPeriod=64ms(requiredrefreshintervaloftheSDRAM)

•ncycles=8192(numberofcyclesinarefreshintervalfortheSDRAM)

RRcanbecalculatedas:

RR=100MHz×64ms/8192

RR=781.25

RR=782cycles=30Ehcycles

17.2.5.7Self-RefreshMode

TheEMIFcanbeprogrammedtoentertheself-refreshstatebysettingtheSRbitofSDCRto1.Thiswill

causetheEMIFtoissuetheSLFRcommandaftercompletinganyoutstandingSDRAMaccessrequests

andclearingtherefreshbacklogcounterbyperformingoneormoreautorefreshcycles.Thisplacesthe

attachedSDRAMdeviceintoself-refreshmodeinwhichitconsumesaminimalamountofpowerwhile

performingitsownrefreshcycles.TheSRbitshouldbesetandclearedusingabyte-writetotheupper

byteoftheSDRAMconfigurationregister(SDCR)toavoidtriggeringtheSDRAMinitializationsequence.

Whileintheself-refreshstate,theEMIFcontinuestoserviceasynchronousbankrequestsandregister

accessesasnormal,withonecaveat.TheEMIFwillnotparkthedatabusfollowingareadto

asynchronousmemorywhileintheself-refreshstate.Instead,theEMIFtri-statesthedatabus.Therefore,

itisnotrecommendedtoperformasynchronousreadoperationswhiletheEMIFisintheself-refreshstate,

inordertopreventfloatinginputsonthedatabus.Moreinformationaboutdatabusparkingcanbefound

inSection17.2.7.

TheEMIFwillexitfromtheself-refreshstateifeitherofthefollowingeventsoccur:

•TheSRbitofSDCRisclearedto0.

•AnSDRAMaccessesisrequested.

TheEMIFexitsfromtheself-refreshstatebydrivingEMIF_CKEhighandperforminganautorefresh

cycle.

TheattachedSDRAMdeviceshouldalsobeplacedintoSelf-RefreshModewhenchangingthefrequency

ofEMIF_CLK.IfthefrequencyofEMIF_CLKchangeswhiletheSDRAMisnotinSelf-RefreshMode,

ProcedureBinSection17.2.5.5shouldbefollowedtoreinitializethedevice.

615

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.5.8PowerDownMode

Tosupportlow-powermodes,theEMIFcanberequestedtoissueaPOWERDOWNcommandtothe

SDRAMbysettingthePDbitintheSDRAMconfigurationregister(SDCR).Whenthisbitisset,theEMIF

willcontinuenormaloperationuntilalloutstandingmemoryaccessrequestshavebeenservicedandthe

SDRAMrefreshbacklog(ifthereisone)hasbeencleared.AtthispointtheEMIFwillenterthepower-

downstate.Uponenteringthisstate,theEMIFwillissueaPOWERDOWNcommand(sameasaNOP

commandbutdrivingEMIF_CKElowonthesamecycle).TheEMIFthenmaintainsEMIF_CKElowuntilit

exitsthepower-downstate.

SincetheEMIFservicestherefreshbacklogbeforeitentersthepower-downstate,allinternalbanksof

theSDRAMareclosed(precharged)priortoissuingthePOWERDOWNcommand.Therefore,theEMIF

onlysupportsPrechargePowerDown.TheEMIFdoesnotsupportActivePowerDown,whereinternal

banksoftheSDRAMareopen(active)beforethePOWERDOWNcommandisissued.

Duringthepower-downstate,theEMIFservicestheSDRAM,asynchronousmemory,andregister

accessesasnormal,returningtothepower-downstateuponcompletion.

ThePDWRbitinSDCRindicateswhethertheEMIFshouldperformrefreshesinpower-downstate.Ifthe

PDWRbitisset,theEMIFexitsthepower-downstateeverytimetheRefreshMustlevelisset,performs

AUTOREFRESHcommandstotheSDRAM,andreturnsbacktothepower-downstate.Thisevenly

distributestherefreshestotheSDRAMinpower-downstate.IfthePDWRbitisnotset,theEMIFdoes

notperformanyrefreshestotheSDRAM.Therefore,thedataintegrityoftheSDRAMisnotassuredupon

powerdownexitifthePDWRbitisnotset.

IfthePDbitisclearedwhileinthepower-downstate,theEMIFwillcomeoutofthepower-downstate.

TheEMIF:

•DrivesEMIF_CKEhigh.

•Entersitsidlestate.

616

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLKEMIF_nCS[0]EMIF_nDQMEMIF_BAEMIF_AEMIF_DEMIF_nRASEMIF_nCASEMIF_nWEBankRowColD1D2D3D4

ACTV

READ

CL=3

D5D6D7D8



www.ti.comEMIFModuleArchitecture

17.2.5.9SDRAMReadOperation

WhentheEMIFreceivesareadrequesttoSDRAMfromoneoftherequesterslistedinSection17.2.2,it

performsoneormorereadaccesscycles.AreadaccesscyclebeginswiththeissuingoftheACTV

commandtoselectthedesiredbankandrowoftheSDRAMdevice.Aftertherowhasbeenopened,the

EMIFproceedstoissueaREADcommandwhilespecifyingthedesiredbankandcolumnaddress.

EMIF_A[10]isheldlowduringtheREADcommandtoavoidauto-precharging.TheREADcommand

signalstheSDRAMdevicetostartburstingdatafromthespecifiedaddresswhiletheEMIFissuesNOP

commands.FollowingaREADcommand,theCLfieldoftheSDRAMconfigurationregister(SDCR)

defineshowmanydelaycycleswillbepresentbeforethereaddataappearsonthedatabus.Thisis

referredtoastheCASlatency.

Figure17-5showsthesignalwaveformsforabasicSDRAMreadoperationinwhichaburstofdatais

readfromasinglepage.WhentheEMIFSDRAMinterfaceisconfiguredto16bitbysettingtheNMbitof

theSDRAMconfigurationregister(SDCR)to1,aburstsizeofeightisused.Figure17-5showsaburst

sizeofeight.

TheEMIFwilltruncateaseriesofburstingdataiftheremainingaddressesoftheburstarenotrequiredto

completetherequest.TheEMIFcantruncatetheburstinthreeways:

•ByissuinganotherREADtothesamepageinthesamebank.

•ByissuingaPREcommandinordertoprepareforaccessingadifferentpageofthesamebank.

•ByissuingaBTcommandinordertoprepareforaccessingapageinadifferentbank.

Figure17-5.TimingWaveformforBasicSDRAMReadOperation

Severalotherpinsarealsoactiveduringareadaccess.TheEMIF_nDQM[1:0]pinsaredrivenlowduring

theREADcommandsandarekeptlowduringtheNOPcommandsthatcorrespondtotheburstrequest.

ThestateoftheotherEMIFpinsduringeachcommandcanbefoundinTable17-5.

TheEMIFschedulesitscommandsbasedonthetiminginformationthatisprovidedtoitintheSDRAM

timingregister(SDTIMR).Thevaluesforthetimingparametersinthisregistershouldbechosentosatisfy

thetimingrequirementslistedintheSDRAMdatasheet.TheEMIFusesthistiminginformationtoavoid

violatinganytimingconstraintsrelatedtoissuingcommands.Thisiscommonlyaccomplishedbyinserting

NOPcommandsbetweenvariouscommandsduringanaccess.Refertotheregisterdescriptionof

SDTIMRinSection17.3.6formoredetailsonthevarioustimingparameters.

617

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLKEMIF_nCS[0]EMIF_BAEMIF_AEMIF_DEMIF_nRASEMIF_nCASEMIF_nWEBankRowColumnD1D2D3D4

ACTV

WRT

EMIF_nDQM

D5D6D7D8



EMIFModuleArchitecturewww.ti.com

17.2.5.10SDRAMWriteOperations

WhentheEMIFreceivesawriterequesttoSDRAMfromoneoftherequesterslistedinSection17.2.2,it

performsoneormorewrite-accesscycles.Awrite-accesscyclebeginswiththeissuingoftheACTV

commandtoselectthedesiredbankandrowoftheSDRAMdevice.Aftertherowhasbeenopened,the

EMIFproceedstoissueaWRTcommandwhilespecifyingthedesiredbankandcolumnaddress.

EMIF_A[10]isheldlowduringtheWRTcommandtoavoidauto-precharging.TheWRTcommandsignals

theSDRAMdevicetostartwritingaburstofdatatothespecifiedaddresswhiletheEMIFissuesNOP

commands.TheassociatedwritedatawillbeplacedonthedatabusinthecycleconcurrentwiththeWRT

commandandwithsubsequentburstcontinuationNOPcommands.

Figure17-6showsthesignalwaveformsforabasicSDRAMwriteoperationinwhichaburstofdatais

readfromasinglepage.WhentheEMIFSDRAMinterfaceisconfiguredto16-bitbysettingtheNMbitof

theSDRAMconfigurationregister(SDCR)to1,aburstsizeofeightisused.Figure17-6showsaburst

sizeofeight.

Figure17-6.TimingWaveformforBasicSDRAMWriteOperation

TheEMIFwilltruncateaseriesofburstingdataiftheremainingaddressesoftheburstarenotpartofthe

writerequest.TheEMIFcantruncatetheburstinthreeways:

•ByissuinganotherWRTtothesamepage

•ByissuingaPREcommandinordertoprepareforaccessingadifferentpageofthesamebank

•ByissuingaBTcommandinordertoprepareforaccessingapageinadifferentbank

Severalotherpinsarealsoactiveduringawriteaccess.TheEMIF_nDQM[1:0]pinsaredriventoselect

whichbytesofthedatawordwillbewrittentotheSDRAMdevice.Theyarealsousedtomaskoutentire

undesireddatawordsduringaburstaccess.ThestateoftheotherEMIFpinsduringeachcommandcan

befoundinTable17-5.

TheEMIFschedulesitscommandsbasedonthetiminginformationthatisprovidedtoitintheSDRAM

timingregister(SDTIMR).Thevaluesforthetimingparametersinthisregistershouldbechosentosatisfy

thetimingrequirementslistedintheSDRAMdatasheet.TheEMIFusesthistiminginformationtoavoid

violatinganytimingconstraintsrelatedtoissuingcommands.Thisiscommonlyaccomplishedbyinserting

NOPcommandsduringvariouscyclesofanaccess.RefertotheregisterdescriptionofSDTIMRin

Section17.3.6formoredetailsonthevarioustimingparameters.

618

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

17.2.5.11MappingfromLogicalAddresstoEMIFPins

WhentheEMIFreceivesanSDRAMaccessrequest,itmustconverttheaddressoftheaccessintothe

appropriatesignalstosendtotheSDRAMdevice.Thedetailsofthisaddressmappingareshownin

Table17-13for16-bitoperation.UsingthesettingsoftheIBANKandPAGESIZEfieldsoftheSDRAM

configurationregister(SDCR),theEMIFdetermineswhichbitsofthelogicaladdresswillbemappedto

theSDRAMrow,column,andbankaddresses.

Asthelogicaladdressisincrementedbyonehalfword(16-bitoperation),thecolumnaddressislikewise

incrementedbyoneuntilapageboundaryisreached.Whenthelogicaladdressincrementsacrossa

pageboundary,theEMIFmovesintothesamepageinthenextbankoftheattacheddeviceby

incrementingthebankaddressEMIF_BAandresettingthecolumnaddress.Thepageintheprevious

bankisleftopenuntilitisnecessarytocloseit.ThismethodoftraversalthroughtheSDRAMbankshelps

maximizethenumberofopenbanksinsideoftheSDRAMandresultsinanefficientuseofthedevice.

Thereisnolimitationonthenumberofbanksthatcanbeopenatonetime,butonlyonepagewithina

bankcanbeopenatatime.

TheEMIFusestheEMIF_nDQM[1:0]pinsduringaWRTcommandtomaskoutselectedbytesorentire

words.TheEMIF_nDQM[1:0]pinsarealwayslowduringaREADcommand.

Table17-13.MappingfromLogicalAddresstoEMIFPinsfor16-bitSDRAM

LogicalAddress

IBANK

PAGESIZE

31:27

26

25

24

23

22

21:14

13

12

11

10

9

8:1

0

0

0

-

RowAddress

ColAddress

EMIF_nDQM[0]

EMIF_BA[0

1

0

-

RowAddress

ColAddress

EMIF_nDQM[0]

]

2

0

-

RowAddress

EMIF_BA[1:0]

ColAddress

EMIF_nDQM[0]

0

1

-

RowAddress

ColumnAddress

EMIF_nDQM[0]

EMIF_BA[0

1

1

-

RowAddress

ColumnAddress

EMIF_nDQM[0]

]

2

1

-

RowAddress

EMIF_BA[1:0]

ColumnAddress

EMIF_nDQM[0]

0

2

-

RowAddress

ColumnAddress

EMIF_nDQM[0]

EMIF_BA[0

1

2

-

RowAddress

ColumnAddress

EMIF_nDQM[0]

]

2

2

-

RowAddress

EMIF_BA[1:0]

ColumnAddress

EMIF_nDQM[0]

0

3

-

RowAddress

ColumnAddress

EMIF_nDQM[0]

EMIF_BA[0

1

3

-

RowAddress

ColumnAddress

EMIF_nDQM[0]

]

2

3

-

RowAddress

EMIF_BA[1:0]

ColumnAddress

EMIF_nDQM[0]

NOTE:TheupperbitoftheRowAddressisusedonlywhenaddressing256-Mbitand512-Mbit

SDRAMmemories.

619

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_nCS[n]EMIF_nWEEMIF_nOEEMIF_WAITEMIF_BA[1:0]EMIF_D[x:0]EMIF_nDQM[x:0]EMIF_A[x:0]

EMIF



EMIFModuleArchitecturewww.ti.com

17.2.6AsynchronousControllerandInterface

TheEMIFeasilyinterfacestoavarietyofasynchronousdevicesincludingNORFlash,NANDFlash,and

SRAM.Itcanbeoperatedintwomajormodes(seeTable17-14):

•NormalMode

•SelectStrobeMode

Table17-14.NormalModevs.SelectStrobeMode

Mode

FunctionofEMIF_nDQMpins

OperationofEMIF_nCS[4:2]

NormalMode

Byteenables

Activeduringtheentireasynchronousaccesscycle

SelectStrobeMode

Byteenables

Activeonlyduringthestrobeperiodofanaccesscycle

ThefirstmodeofoperationisNormalMode,inwhichtheEMIF_nDQMpinsoftheEMIFfunctionasbyte

enables.Inthismode,theEMIF_nCS[4:2]pinsbehavesastypicalchipselectsignals,remainingactivefor

thedurationoftheasynchronousaccess.SeeSection17.2.6.1foranexampleinterfacewithmultiple8-bit

devices.

ThesecondmodeofoperationisSelectStrobeMode,inwhichtheEMIF_nCS[4:2]pinsactasastrobe,

activeonlyduringthestrobeperiodofanaccess.Inthismode,theEMIF_nDQMpinsoftheEMIFfunction

asstandardbyteenablesforreadsandwrites.Asummaryofthedifferencesbetweenthetwomodesof

operationareshowninTable17-14.RefertoSection17.2.6.4forthedetailsofasynchronousoperations

inNormalMode,andtoSection17.2.6.5forthedetailsofasynchronousoperationsinSelectStrobe

Mode.TheEMIFhardwaredefaultstoNormalMode,butcanbemanuallyswitchedtoSelectStrobeMode

bysettingtheSSbitintheasynchronousm(m=1,2,3,or4)configurationregister(CEnCFG)(n=2,3,

or4).Throughoutthechapter,mcanholdthevalues1,2,3or4;andncanholdthevalues2,3,or4.

TheEMIFalsoprovidesconfigurablecycletimingparametersandanExtendedWaitModethatallowsthe

connecteddevicetoextendthestrobeperiodofanaccesscycle.Thefollowingsectionsdescribethe

featuresrelatedtointerfacingwithexternalasynchronousdevices.

17.2.6.1InterfacingtoAsynchronousMemory

Figure17-7showstheEMIF'sexternalpinsusedininterfacingwithanasynchronousdevice.In

EMIF_nCS[n],n=2,3,or4.

Figure17-7.EMIFAsynchronousInterface

620

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_nDQM[1:0]

DQ[15:0]asynchronousBE[1:0]

EMIF_nWEEMIF_D[15:0]EMIF_nCS[n]EMIFnWE

nCEdevice16−bit

EMIF_D[7:0]EMIF_A[x:0]EMIF_BA[1:0]DQ[7:0]A[(x+2):2]A[1:0]

EMIF

8−bitasynchronousmemorya) EMIF to 8-bit memory interfaceEMIF_D[15:0]EMIF_A[x:0]EMIF_BA[1]DQ[15:0]A[(x+1):1]A[0]

EMIF

16−bit asynchronousmemoryb) EMIF to 16-bit memory interface



www.ti.comEMIFModuleArchitecture

OfspecialnoteistheconnectionbetweentheEMIFandtheexternaldevice'saddressbus.TheEMIF

addresspinEMIF_A[0]alwaysprovidestheleastsignificantbitofa32-bitwordaddress.Therefore,when

interfacingtoa16-bitor8-bitasynchronousdevice,theEMIF_BA[1]andEMIF_BA[0]pinsprovidethe

least-significantbitsofthehalfwordorbyteaddress,respectively.Additionally,whentheEMIFinterfaces

toa16-bitasynchronousdevice,theEMIF_BA[0]pincanserveastheupperaddresslineEMIF_A[22].

Figure17-8andFigure17-9showthemappingbetweentheEMIFandtheconnecteddevice'sdataand

addresspinsforvariousprogrammeddatabuswidths.Thedatabuswidthmaybeconfiguredinthe

asynchronousnconfigurationregister(CEnCFG).

Figure17-9showsacommoninterfacebetweentheEMIFandexternalasynchronousmemory.Figure17-

9showsaninterfacebetweentheEMIFandanexternalmemorywithbyteenables.TheEMIFshouldbe

operatedineitherNormalModeorSelectStrobeModewhenusingthisinterface,sothattheEMIF_nDQM

signalsoperateasbyteenables.

Figure17-8.EMIFto8-bit/16-bitMemoryInterface

Figure17-9.CommonAsynchronousInterface

621

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.6.2AccessingLargerAsynchronousMemories

Thedevicehas22dedicatedEMIFaddresslines.Ifadevicesuchasalargeasynchronousflashneedsto

beattachedtotheEMIF,thenGPIOpinsmaybeusedtocontroltheflashdevice’supperaddresslines.

17.2.6.3ConfiguringtheEMIFforAsynchronousAccesses

TheoperationoftheEMIF'sasynchronousinterfacecanbeconfiguredbyprogrammingtheappropriate

registerfields.TheresetvalueandbitpositionforeachregisterfieldcanbefoundinSection17.3.The

followingtableslisttheregisterfieldsthatcanbeprogrammedanddescribethepurposeofeachfield.

Theseregisterscanbeprogrammedpriortoaccessingtheexternalmemory,andthetransferfollowinga

writetotheseregisterswillusethenewconfiguration.

Table17-15.DescriptionoftheAsynchronousmConfigurationRegister(CEnCFG)

Parameter

Description

SS

SelectStrobemode.ThisbitselectstheEMIF'smodeofoperationinthefollowingway:

•SS=0selectsNormalMode

–EMIF_nDQMpinsfunctionasbyteenables

–EMIF_nCS[4:2]activefordurationofaccess

•SS=1selectsSelectStrobeMode

–EMIF_nDQMpinsfunctionasbyteenables

–EMIF_nCS[4:2]actsasastrobe.

EW

ExtendedWaitModeenable.

•EW=0disablesExtendedWaitMode

•EW=1enablesExtendedWaitMode

Whensetto1,theEMIFenablesitsExtendedWaitModeinwhichthestrobewidthofanaccess

cyclecanbeextendedinresponsetotheassertionoftheEMIF_nWAITpin.TheWPnbitinthe

asynchronouswaitcycleconfigurationregister(AWCC)controlstopolarityofEMIF_nWAITpin.

SeeSection17.2.6.6formoredetailsonthismodeofoperation.

W_SETUP/R_SETUP

Read/Writesetupwidths.

ThesefieldsdefinethenumberofEMIFclockcyclesofsetuptimefortheaddresspins(EMIF_A

andEMIF_BA),byteenables(EMIF_nDQM),andasynchronouschipenable(EMIF_nCS[4:2])

beforethereadstrobepin(EMIF_nOE)orwritestrobepin(EMIF_nWE)falls,minusonecycle.

Forwrites,theW_SETUPfieldalsodefinesthesetuptimeforthedatapins(EMIF_D).Referto

thedatasheetoftheexternalasynchronousdevicetodeterminetheappropriatesettingforthis

field.

W_STROBE/R_STROBE

Read/Writestrobewidths.

ThesefieldsdefinethenumberofEMIFclockcyclesbetweenthefallingandrisingoftheread

strobepin(EMIF_nOE)orwritestrobepin(EMIF_nWE),minusonecycle.IfExtendedWaitMode

isenabledbysettingtheEWfieldintheasynchronousnconfigurationregister(CEnCFG),these

fieldsmustbesettoavaluegreaterthanzero.Refertothedatasheetoftheexternal

asynchronousdevicetodeterminetheappropriatesettingforthisfield.

W_HOLD/R_HOLD

Read/Writeholdwidths.

ThesefieldsdefinethenumberofEMIFclockcyclesofholdtimefortheaddresspins(EMIF_A

andEMIF_BA),byteenables(EMIF_nDQM),andasynchronouschipenable(EMIF_nCS[4:2])

afterthereadstrobepin(EMIF_nOE)orwritestrobepin(EMIF_nWE)rises,minusonecycle.For

writes,theW_HOLDfieldalsodefinestheholdtimeforthedatapins(EMIF_D).Refertothe

datasheetoftheexternalasynchronousdevicetodeterminetheappropriatesettingforthisfield.

TA

Minimumturnaroundtime.

ThisfielddefinestheminimumnumberofEMIFclockcyclesbetweenasynchronousreadsand

writes,minusonecycle.Thepurposeofthisfeatureistoavoidcontentiononthebus.Thevalue

writtentothisfieldalsodeterminesthenumberofcyclesthatwillbeinsertedbetween

asynchronousaccessesandSDRAMaccesses.Refertothedatasheetoftheexternal

asynchronousdevicetodeterminetheappropriatesettingforthisfield.

622

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

Table17-15.DescriptionoftheAsynchronousmConfigurationRegister(CEnCFG)(continued)

Parameter

Description

ASIZE

AsynchronousDeviceBusWidth.

Thisfielddeterminesthedatabuswidthoftheasynchronousinterfaceinthefollowingway:

•ASIZE=0selectsan8-bitbus

•ASIZE=1selectsa16-bitbus

TheconfigurationofASIZEdeterminesthefunctionoftheEMIF_AandEMIF_BApinsas

describedinSection17.2.6.1.Thisfieldalsodeterminesthenumberofexternalaccesses

requiredtofulfillarequestgeneratedbyoneofthesourcesmentionedinSection17.2.2.For

example,arequestfora32-bitwordwouldrequirefourexternalaccesswhenASIZE=0.Referto

thedatasheetoftheexternalasynchronousdevicetodeterminetheappropriatesettingforthis

field.

Table17-16.DescriptionoftheAsynchronousWaitCycleConfigurationRegister(AWCC)

Parameter

Description

WPn

EM_WAITPolarity.

•WPn=0selectsactive-lowpolarity

•WPn=1selectsactive-highpolarity

Whensetto1,theEMIFwillwaitiftheEMIF_nWAITpinishigh.Whenclearedto0,theEMIFwill

waitiftheEMIF_nWAITpinislow.TheEMIFmusthavetheExtendedWaitModeenabledforthe

EMIF_nWAITpintoaffectthewidthofthestrobeperiod.

MAX_EXT_WAIT

MaximumExtendedWaitCycles.

ThisfieldconfiguresthenumberofEMIFclockcyclestheEMIFwillwaitfortheEMIF_nWAITpin

tobedeactivatedduringthestrobeperiodofanaccesscycle.ThemaximumnumberofEMIF

clockcyclesitwillwaitisdeterminedbythefollowingformula:

MaximumExtendedWaitCycles=(MAX_EXT_WAIT+1)×16

IftheEMIF_nWAITpinisnotdeactivatedwithinthetimespecifiedbythisfield,theEMIFresumes

theaccesscycle,registeringwhateverdataisonthebusandproceedingtotheholdperiodofthe

accesscycle.ThissituationisreferredtoasanAsynchronousTimeout.AnAsynchronous

Timeoutgeneratesaninterrupt,ifithasbeenenabledintheEMIFinterruptmasksetregister

(INTMSKSET).RefertoSection17.2.9.1formoreinformationabouttheEMIFinterrupts.

623

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

Table17-17.DescriptionoftheEMIFInterruptMaskSetRegister(INTMSKSET)

Parameter

Description

WR_MASK_SET

WaitRiseMaskSet.

Writinga1enablesaninterrupttobegeneratedwhenarisingedgeonEMIF_nWAIToccurswhile

inNANDFlashMode

AT_MASK_SET

AsynchronousTimeoutMaskSet.

Writinga1tothisbitenablesaninterrupttobegeneratedwhenanAsynchronousTimeout

occurs.

Table17-18.DescriptionoftheEMIFInterruptMastClearRegister(INTMSKCLR)

Parameter

Description

WR_MASK_CLR

WaitRiseMaskClear.

Writinga1tothisbitdisablestheinterrupt,clearingtheWR_MASK_SETbitintheEMIFinterrupt

masksetregister(INTMSKSET).

AT_MASK_CLR

AsynchronousTimeoutMaskClear.

Writinga1tothisbitpreventsaninterruptfrombeinggeneratedwhenanAsynchronousTimeout

occurs.

17.2.6.4ReadandWriteOperationsinNormalMode

NormalModeistheasynchronousinterface'sdefaultmodeofoperation.ItisselectedwhentheSSbitin

theasynchronousnconfigurationregister(CEnCFG)isclearedto0.Inthismode,theEMIF_nDQMpins

operateasbyteenables.Section17.2.6.4.1andSection17.2.6.4.2explainthedetailsofreadandwrite

operationswhileinNormalMode.

17.2.6.4.1AsynchronousReadOperations(NormalMode)

NOTE:Duringanentireasynchronousreadoperation,theEMIF_nWEpinisdrivenhigh.

AnasynchronousreadisperformedwhenanyoftherequestersmentionedinSection17.2.2requesta

readfromtheattachedasynchronousmemory.Aftertherequestisreceived,areadoperationisinitiated

onceitbecomestheEMIF'shighestprioritytask,accordingtothepriorityschemedetailedin

Section17.2.13.Intheeventthatthereadrequestcannotbeservicedbyasingleaccesscycletothe

externaldevice,multipleaccesscycleswillbeperformedbytheEMIFuntiltheentirerequestisfulfilled.

ThedetailsofanasynchronousreadoperationinNormalModearedescribedinTable17-19.Also,

Figure17-10showsanexampletimingdiagramofabasicreadoperation.

Table17-19.AsynchronousReadOperationinNormalMode

TimeInterval

PinActivityinNormalMode

Turn-around

OncethereadoperationbecomesthehighestprioritytaskfortheEMIF,theEMIFwaitsfortheprogrammed

period

numberofturn-aroundcyclesbeforeproceedingtothesetupperiodoftheoperation.Thenumberofwaitcyclesis

takendirectlyfromtheTAfieldoftheasynchronousnconfigurationregister(CEnCFG).Therearetwoexceptions

tothisrule:

•Ifthecurrentreadoperationwasdirectlyproceededbyanotherreadoperation,noturnaroundcyclesare

inserted.

•IfthecurrentreadoperationwasdirectlyproceededbyawriteoperationandtheTAfieldhasbeencleared

to0,oneturn-aroundcyclewillbeinserted.

AftertheEMIFhaswaitedfortheturnaroundcyclestocomplete,itagaincheckstomakesurethattheread

operationisstillitshighestprioritytask.Ifso,theEMIFproceedstothesetupperiodoftheoperation.Ifitisno

longerthehighestprioritytask,theEMIFterminatestheoperation.

624

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLKEMIF_nCS[n]EMIF_nDQMEMIF_A/EMIF_BAEMIF_DEMIF_nOEEMIF_nWE

Setup

Strobe

Hold

2

3

2Address

Data

Byte enable



www.ti.comEMIFModuleArchitecture

Table17-19.AsynchronousReadOperationinNormalMode(continued)

TimeInterval

PinActivityinNormalMode

Startofthe

Thefollowingactionsoccuratthestartofthesetupperiod:

setupperiod

•Thesetup,strobe,andholdvaluesaresetaccordingtotheR_SETUP,R_STROBE,andR_HOLDvaluesin

CEnCFG.

•TheaddresspinsEMIF_AandEMIF_BAbecomevalidandcarrythevaluesdescribedinSection17.2.6.1.

•EMIF_nCS[4:2]fallstoenabletheexternaldevice(ifnotalreadylowfromapreviousoperation)

Strobeperiod

Thefollowingactionsoccurduringthestrobeperiodofareadoperation:

1.EMIF_nOEfallsatthestartofthestrobeperiod

2.Ontherisingedgeoftheclockwhichisconcurrentwiththeendofthestrobeperiod:

•EMIF_nOErises

•ThedataontheEMIF_DbusissampledbytheEMIF.

InFigure17-10,EMIF_nWAITisinactive.IfEMIF_nWAITisinsteadactivated,thestrobeperiodcanbeextended

bytheexternaldevicetogiveitmoretimetoprovidethedata.Section17.2.6.6containsmoredetailsonusingthe

EMIF_nWAITpin.

Endofthehold

Attheendoftheholdperiod:

period

•TheaddresspinsEMIF_AandEMIF_BAbecomeinvalid

•EMIF_nCS[4:2]rises(ifnomoreoperationsarerequiredtocompletethecurrentrequest)

EMIFmayberequiredtoissueadditionalreadoperationstoadevicewithasmalldatabuswidthinorderto

completeanentirewordaccess.Inthiscase,theEMIFimmediatelyre-entersthesetupperiodtobeginanother

operationwithoutincurringtheturn-roundcycledelay.Thesetup,strobe,andholdvaluesarenotupdatedinthis

case.Iftheentirewordaccesshasbeencompleted,theEMIFreturnstoitspreviousstateunlessanother

asynchronousrequesthasbeensubmittedandiscurrentlythehighestprioritytask.Ifthisisthecase,theEMIF

insteadentersdirectlyintotheturnaroundperiodforthependingreadorwriteoperation.

Figure17-10.TimingWaveformofanAsynchronousReadCycleinNormalMode

625

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.6.4.2AsynchronousWriteOperations(NormalMode)

NOTE:Duringanentireasynchronouswriteoperation,theEMIF_nOEpinisdrivenhigh.

AnasynchronouswriteisperformedwhenanyoftherequestersmentionedinSection17.2.2requesta

writetomemoryintheasynchronousbankoftheEMIF.Aftertherequestisreceived,awriteoperationis

initiatedonceitbecomestheEMIF'shighestprioritytask,accordingtothepriorityschemedetailedin

Section17.2.13.Intheeventthatthewriterequestcannotbeservicedbyasingleaccesscycletothe

externaldevice,multipleaccesscycleswillbeperformedbytheEMIFuntiltheentirerequestisfulfilled.

ThedetailsofanasynchronouswriteoperationinNormalModearedescribedinTable17-20.Also,

Figure17-11showsanexampletimingdiagramofabasicwriteoperation.

Table17-20.AsynchronousWriteOperationinNormalMode

TimeInterval

PinActivityinNormalMode

Turnaround

OncethewriteoperationbecomesthehighestprioritytaskfortheEMIF,theEMIFwaitsfortheprogrammed

period

numberofturn-aroundcyclesbeforeproceedingtothesetupperiodoftheoperation.Thenumberofwaitcyclesis

takendirectlyfromtheTAfieldoftheasynchronousnconfigurationregister(CEnCFG).Therearetwoexceptions

tothisrule:

•Ifthecurrentwriteoperationwasdirectlyproceededbyanotherwriteoperation,noturn-aroundcyclesare

inserted.

•IfthecurrentwriteoperationwasdirectlyproceededbyareadoperationandtheTAfieldhasbeencleared

to0,oneturnaroundcyclewillbeinserted.

AftertheEMIFhaswaitedfortheturn-aroundcyclestocomplete,itagaincheckstomakesurethatthewrite

operationisstillitshighestprioritytask.Ifso,theEMIFproceedstothesetupperiodoftheoperation.Ifitisno

longerthehighestprioritytask,theEMIFterminatestheoperation.

Startofthe

Thefollowingactionsoccuratthestartofthesetupperiod:

setupperiod

•Thesetup,strobe,andholdvaluesaresetaccordingtotheW_SETUP,W_STROBE,andW_HOLDvalues

inCEnCFG.

•TheaddresspinsEMIF_AandEMIF_BAandthedatapinsEMIF_Dbecomevalid.TheEMIF_Aand

EMIF_BApinscarrythevaluesdescribedinSection17.2.6.1.

•EMIF_nCS[4:2]fallstoenabletheexternaldevice(ifnotalreadylowfromapreviousoperation).

Strobeperiod

Thefollowingactionsoccuratthestartofthestrobeperiodofawriteoperation:

1.EMIF_nWEfalls

2.TheEMIF_nDQMpinsbecomevalidasbyteenables.

Thefollowingactionsoccurontherisingedgeoftheclockwhichisconcurrentwiththeendofthestrobeperiod:

1.EMIF_nWErises

2.TheEMIF_nDQMpinsdeactivate

InFigure17-11,EMIF_nWAITisinactive.IfEMIF_nWAITisinsteadactivated,thestrobeperiodcanbeextended

bytheexternaldevicetogiveitmoretimetoacceptthedata.Section17.2.6.6containsmoredetailsonusingthe

EMIF_nWAITpin.

Endofthehold

Attheendoftheholdperiod:

period

•TheaddresspinsEMIF_AandEMIF_BAbecomeinvalid

•Thedatapinsbecomeinvalid

•EMIF_nCS[n](n=2,3,or4)rises(ifnomoreoperationsarerequiredtocompletethecurrentrequest)

TheEMIFmayberequiredtoissueadditionalwriteoperationstoadevicewithasmalldatabuswidthinorderto

completeanentirewordaccess.Inthiscase,theEMIFimmediatelyre-entersthesetupperiodtobeginanother

operationwithoutincurringtheturnaroundcycledelay.Thesetup,strobe,andholdvaluesarenotupdatedinthis

case.Iftheentirewordaccesshasbeencompleted,theEMIFreturnstoitspreviousstateunlessanother

asynchronousrequesthasbeensubmittedandiscurrentlythehighestprioritytask.Ifthisisthecase,theEMIF

insteadentersdirectlyintotheturnaroundperiodforthependingreadorwriteoperation.

626

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLKEMIF_nCS[n]EMIF_nDQMEMIF_A/EMIF_BAEMIF_DEMIF_nOEEMIF_nWE

Setup

Strobe

Hold

2

3

2Address

Data

Address

Byte enable



www.ti.comEMIFModuleArchitecture

Figure17-11.TimingWaveformofanAsynchronousWriteCycleinNormalMode

627

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.6.5ReadandWriteOperationinSelectStrobeMode

SelectStrobeModeistheEMIF'ssecondmodeofoperation.ItisselectedwhentheSSbitofthe

asynchronousnconfigurationregister(CEnCFG)issetto1.Inthismode,theEMIF_nDQMpinsoperate

asbyteenablesandtheEMIF_nCS[n](n=2,3,or4)pinisonlyactiveduringthestrobeperiodofan

accesscycle.Section17.2.6.4.1andSection17.2.6.4.2explainthedetailsofreadandwriteoperations

whileinSelectStrobeMode.

17.2.6.5.1AsynchronousReadOperations(SelectStrobeMode)

NOTE:Duringtheentiretyofanasynchronousreadoperation,theEMIF_nWEpinisdrivenhigh.

AnasynchronousreadisperformedwhenanyoftherequestersmentionedinSection17.2.2requesta

readfromtheattachedasynchronousmemory.Aftertherequestisreceived,areadoperationisinitiated

onceitbecomestheEMIF'shighestprioritytask,accordingtothepriorityschemedetailedin

Section17.2.13.Intheeventthatthereadrequestcannotbeservicedbyasingleaccesscycletothe

externaldevice,multipleaccesscycleswillbeperformedbytheEMIFuntiltheentirerequestisfulfilled.

ThedetailsofanasynchronousreadoperationinSelectStrobeModearedescribedinTable17-21.Also,

Figure17-12showsanexampletimingdiagramofabasicreadoperation.

Table17-21.AsynchronousReadOperationinSelectStrobeMode

TimeInterval

PinActivityinSelectStrobeMode

Turnaround

OncethereadoperationbecomesthehighestprioritytaskfortheEMIF,theEMIFwaitsfortheprogrammed

period

numberofturn-aroundcyclesbeforeproceedingtothesetupperiodoftheoperation.Thenumberofwaitcyclesis

takendirectlyfromtheTAfieldoftheasynchronousnconfigurationregister(CEnCFG).Therearetwoexceptions

tothisrule:

•Ifthecurrentreadoperationwasdirectlyproceededbyanotherreadoperation,noturn-aroundcyclesare

inserted.

•IfthecurrentreadoperationwasdirectlyproceededbyawriteoperationandtheTAfieldhasbeencleared

to0,oneturn-aroundcyclewillbeinserted.

AftertheEMIFhaswaitedfortheturn-aroundcyclestocomplete,itagaincheckstomakesurethattheread

operationisstillitshighestprioritytask.Ifso,theEMIFproceedstothesetupperiodoftheoperation.Ifitisno

longerthehighestprioritytask,theEMIFterminatestheoperation.

Startofthe

Thefollowingactionsoccuratthestartofthesetupperiod:

setupperiod

•Thesetup,strobe,andholdvaluesaresetaccordingtotheR_SETUP,R_STROBE,andR_HOLDvaluesin

CEnCFG.

•TheaddresspinsEMIF_AandEMIF_BAbecomevalidandcarrythevaluesdescribedinSection17.2.6.1.

•TheEMIF_nDQMpinsbecomevalidasbyteenables.

Strobeperiod

Thefollowingactionsoccurduringthestrobeperiodofareadoperation:

1.EMIF_nCS[n](n=2,3,or4)andEMIF_nOEfallatthestartofthestrobeperiod

2.Ontherisingedgeoftheclockwhichisconcurrentwiththeendofthestrobeperiod:

•EMIF_nCS[n](n=2,3,or4)andEMIF_nOErise

•ThedataontheEMIF_DbusissampledbytheEMIF.

InFigure17-12,EMIF_nWAITisinactive.IfEMIF_nWAITisinsteadactivated,thestrobeperiodcanbeextended

bytheexternaldevicetogiveitmoretimetoprovidethedata.Section17.2.6.6containsmoredetailsonusingthe

EMIF_nWAITpin.

Endofthehold

Attheendoftheholdperiod:

period

•TheaddresspinsEMIF_AandEMIF_BAbecomeinvalid

•TheEMIF_nDQMpinsbecomeinvalid

TheEMIFmayberequiredtoissueadditionalreadoperationstoadevicewithasmalldatabuswidthinorderto

completeanentirewordaccess.Inthiscase,theEMIFimmediatelyre-entersthesetupperiodtobeginanother

operationwithoutincurringtheturnaroundcycledelay.Thesetup,strobe,andholdvaluesarenotupdatedinthis

case.Iftheentirewordaccesshasbeencompleted,theEMIFreturnstoitspreviousstateunlessanother

asynchronousrequesthasbeensubmittedandiscurrentlythehighestprioritytask.Ifthisisthecase,theEMIF

insteadentersdirectlyintotheturnaroundperiodforthependingreadorwriteoperation.

628

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLKEMIF_nCS[n]EMIF_nDQMEMIF_A/EMIF_BAEMIF_DEMIF_nOEEMIF_nWE

Setup

Strobe

Hold

2

3

2Byte enablesAddressData



www.ti.comEMIFModuleArchitecture

Figure17-12.TimingWaveformofanAsynchronousReadCycleinSelectStrobeMode

629

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.6.5.2AsynchronousWriteOperations(SelectStrobeMode)

NOTE:Duringtheentiretyofanasynchronouswriteoperation,theEMIF_nOEpinisdrivenhigh.

AnasynchronouswriteisperformedwhenanyoftherequestersmentionedinSection17.2.2requesta

writetomemoryintheasynchronousbankoftheEMIF.Aftertherequestisreceived,awriteoperationis

initiatedonceitbecomestheEMIF'shighestprioritytask,accordingtothepriorityschemedetailedin

Section17.2.13.Intheeventthatthewriterequestcannotbeservicedbyasingleaccesscycletothe

externaldevice,multipleaccesscycleswillbeperformedbytheEMIFuntiltheentirerequestisfulfilled.

ThedetailsofanasynchronouswriteoperationinSelectStrobeModearedescribedinTable17-22.Also,

Figure17-13showsanexampletimingdiagramofabasicwriteoperation.

Table17-22.AsynchronousWriteOperationinSelectStrobeMode

TimeInterval

PinActivityinSelectStrobeMode

Turnaround

OncethewriteoperationbecomesthehighestprioritytaskfortheEMIF,theEMIFwaitsfortheprogrammed

period

numberofturnaroundcyclesbeforeproceedingtothesetupperiodoftheoperation.Thenumberofwaitcyclesis

takendirectlyfromtheTAfieldoftheasynchronousnconfigurationregister(CEnCFG).Therearetwoexceptions

tothisrule:

•Ifthecurrentwriteoperationwasdirectlyproceededbyanotherwriteoperation,noturn-aroundcyclesare

inserted.

•IfthecurrentwriteoperationwasdirectlyproceededbyareadoperationandtheTAfieldhasbeencleared

to0,oneturnaroundcyclewillbeinserted.

AftertheEMIFhaswaitedfortheturnaroundcyclestocomplete,itagaincheckstomakesurethatthewrite

operationisstillitshighestprioritytask.Ifso,theEMIFproceedstothesetupperiodoftheoperation.Ifitisno

longerthehighestprioritytask,theEMIFterminatestheoperation.

Startofthe

Thefollowingactionsoccuratthestartofthesetupperiod:

setupperiod

•Thesetup,strobe,andholdvaluesaresetaccordingtotheW_SETUP,W_STROBE,andW_HOLDvalues

inCEnCFG.

•TheaddresspinsEMIF_AandEMIF_BAandthedatapinsEMIF_Dbecomevalid.TheEMIF_Aand

EMIF_BApinscarrythevaluesdescribedinSection17.2.6.1.

•TheEMIF_nDQMpinsbecomeactiveasbyteenables.

Strobeperiod

Thefollowingactionsoccuratthestartofthestrobeperiodofawriteoperation:

•EMIF_nCS[n](n=2,3,or4)andEMIF_nWEfall

Thefollowingactionsoccurontherisingedgeoftheclockwhichisconcurrentwiththeendofthestrobeperiod:

•EMIF_nCS[n](n=2,3,or4)andEMIF_nWErise

InFigure17-13,EMIF_nWAITisinactive.IfEMIF_nWAITisinsteadactivated,thestrobeperiodcanbeextended

bytheexternaldevicetogiveitmoretimetoacceptthedata.Section17.2.6.6containsmoredetailsonusingthe

EMIF_nWAITpin.

Endofthehold

Attheendoftheholdperiod:

period

•TheaddresspinsEMIF_AandEMIF_BAbecomeinvalid

•Thedatapinsbecomeinvalid

•TheEMIF_nDQMpinsbecomeinvalid

TheEMIFmayberequiredtoissueadditionalwriteoperationstoadevicewithasmalldatabuswidthinorderto

completeanentirewordaccess.Inthiscase,theEMIFimmediatelyre-entersthesetupperiodtobeginanother

operationwithoutincurringtheturnaroundcycledelay.Thesetup,strobe,andholdvaluesarenotupdatedinthis

case.Iftheentirewordaccesshasbeencompleted,theEMIFreturnstoitspreviousstateunlessanother

asynchronousrequesthasbeensubmittedandiscurrentlythehighestprioritytask.Ifthisisthecase,theEMIF

insteadentersdirectlyintotheturn-aroundperiodforthependingreadorwriteoperation.

630

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLKEMIF_nCS[n]EMIF_nDQMEMIF_A/EMIF_BAEMIF_DEMIF_nOEEMIF_nWE

Setup

Strobe

Hold

2

3

2Byte enablesAddressData



www.ti.comEMIFModuleArchitecture

Figure17-13.TimingWaveformofanAsynchronousWriteCycleinSelectStrobeMode

17.2.6.6ExtendedWaitModeandtheEMIF_nWAITPin

TheEMIFsupportstheExtendWaitMode.Thisisamodeinwhichtheexternalasynchronousdevicemay

assertcontroloverthelengthofthestrobeperiod.TheExtendedWaitModecanbeenteredbysettingthe

EWbitintheasynchronousnconfigurationregister(CEnCFG)(n=2,3,or4).Whenthisbitisset,the

EMIFmonitorstheEMIF_nWAITpintodetermineiftheattacheddevicewishestoextendthestrobe

periodofthecurrentaccesscyclebeyondtheprogrammednumberofclockcycles.

WhentheEMIFdetectsthattheEMIF_nWAITpinhasbeenasserted,itwillbegininsertingextrastrobe

cyclesintotheoperationuntiltheEMIF_nWAITpinisdeactivatedbytheexternaldevice.TheEMIFwill

thenreturntothelastcycleoftheprogrammedstrobeperiodandtheoperationwillproceedasusualfrom

thispoint.Pleaserefertothedevicedatamanualfordetailsonthetimingrequirementsofthe

EMIF_nWAITsignal.

TheEMIF_nWAITpincannotbeusedtoextendthestrobeperiodindefinitely.Theprogrammable

MAX_EXT_WAITfieldintheasynchronouswaitcycleconfigurationregister(AWCC)determinesthe

maximumnumberofEMIF_CLKcyclesthestrobeperiodmaybeextendedbeyondtheprogrammed

length.Whenthecounterexpires,theEMIFproceedstotheholdperiodoftheoperationregardlessofthe

stateoftheEMIF_nWAITpin.TheEMIFcanalsogenerateaninterruptuponexpirationofthiscounter.

SeeSection17.2.9.1fordetailsonenablingthisinterrupt.

FortheEMIFtofunctionproperlyintheExtendedWaitmode,theWPnbitofAWCCmustbeprogrammed

tomatchthepolarityoftheEMIF_nWAITpin.Initsresetstateof1,theEMIFwillinsertwaitcycleswhen

theEMIF_nWAITpinissampledhigh.Whensetto0,theEMIFwillinsertwaitcyclesonlywhen

EMIF_nWAITissampledlow.Thisprogrammabilityallowsforagluelessconnectiontolargervarietyof

asynchronousdevices.

Finally,arestrictionisplacedonthestrobeperiodtimingparameterswhenoperatinginExtendedWait

mode.Specifically,thesumoftheW_SETUPandW_STROBEfieldsmustbegreaterthan4,andthesum

oftheR_SETUPandR_STROBEfieldsmustbegreaterthan4fortheEMIFtorecognizethe

EMIF_nWAITpinhasbeenasserted.TheW_SETUP,W_STROBE,R_SETUP,andR_STROBEfieldsare

inCEnCFG.

631

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIF_CLK

Setup

Strobe

pg_delay

pg_delay

pg_delay

Hold

EMIF_nCS[n]EMIF_nDQMEMIF_A/EMIF_BAA0A1A2A3

D0

D1

D2

D3

EMIF_D

EMIF_nOE

EMIF_nWE



EMIFModuleArchitecturewww.ti.com

17.2.6.7NORFlashPageMode

EMIFsupportsPagemodereadsforNORFlashonitsasynchronousmemorychipselects.Thismodecan

beenabledbywritinga1totheCSn_PG_MD_EN(n=2,3,or4)fieldinthePageModeControlregister

forthechipselectinconsideration.WheneverPageModeforreadsisenabledforaparticularchipselect,

thepagesizeforthedeviceconnectedmustalsobeprogrammedintheCSn_PG_SIZEfieldofthePage

ModeControlregister.Theaddresschangetovalidreaddataavailabletimingmustbeprogrammedinthe

CSn_PG_DELfieldofthePageControlregister.Allotherasynchronousmemorytimingsmustbe

programmedintheasynchronousconfigurationregister(CEnCFG).SeeFigure17-14forreadin

asynchronouspagemode.

NOTE:TheExtendedWaitmodeandtheSelectStrobemodemustbedisabledwhenusingthe

asynchronousinterfaceinPagemode.

Figure17-14.AsynchronousReadinPageMode

17.2.7DataBusParking

TheEMIFalwaysdrivesthedatabustothepreviouswritedatavaluewhenitisidle.Thisfeatureiscalled

databusparking.OnlywhentheEMIFissuesareadcommandtotheexternalmemorydoesitstop

drivingthedatabus.AftertheEMIFlatchesthelastreaddata,itimmediatelyparksthedatabusagain.

Theoneexceptiontothisbehavioroccursafterperforminganasynchronousreadoperationwhilethe

EMIFisintheself-refreshstate.Inthissituation,thereadoperationisnotfollowedbytheEMIFparking

thedatabus.Instead,theEMIFtri-statesthedatabus.Therefore,itisnotrecommendedtoperform

asynchronousreadoperationswhiletheEMIFisintheself-refreshstate,inordertopreventfloatinginputs

onthedatabus.Externalpull-ups,suchas10kΩresistors,shouldbeplacedonthe16EMIFdatabus

pins(whichdonothaveinternalpull-ups)ifitisrequiredtoperformreadsinthissituation.Theprecise

resistorvalueshouldbechosensothattheworstcasecombinedoff-stateleakagecurrentsdonotcause

thevoltagelevelsontheassociatedpinstodropbelowthehigh-levelinputvoltagerequirement.

Forinformationabouttheself-refreshstate,seeSection17.2.5.7.

632

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

17.2.8ResetandInitializationConsiderations

TheEMIFmemorycontrollerhastwoactive-lowresetsignals,CHIP_RST_nandMOD_G_RST_n.Both

theseresetsignalsaredrivenbythedevicesystemresetsignal.Thisdevicedoesnotoffertheflexibilityto

resetjusttheEMIFstatemachinewithoutalsoresettingtheEMIFcontroller'smemory-mappedregisters.

Assoonasthedevicesystemresetisreleased(drivenHigh),theEMIFmemorycontrollerimmediately

beginsitsinitializationsequence.CommandanddatastoredintheEMIFmemorycontrollerFIFOsare

lost.RefertheArchitecturechapterofthetecnicalreferencemanual(TRM)formoreinformationon

conditionsthatcancauseadevicesystemresettobeasserted.

Whensystemresetisreleased,theEMIFautomaticallybeginsrunningtheSDRAMinitializationsequence

describedinSection17.2.5.4.Eventhoughtheinitializationprocedureisautomatic,aspecialprocedure,

foundinSection17.2.5.5muststillbefollowed.

17.2.9InterruptSupport

TheEMIFsupportsasingleinterrupttotheCPU.Section17.2.9.1detailsthegenerationandinternal

maskingofEMIFinterrupts.

17.2.9.1InterruptEvents

TherearethreeconditionsthatmaycausetheEMIFtogenerateaninterrupttotheCPU.Theseconditions

are:

•ArisingedgeontheEMIF_nWAITsignal(waitriseinterrupt)

•Anasynchronoustimeout

•Usageofunsupportedaddressingmode(linetrapinterrupt)

ThewaitriseinterruptoccurswhenarisingedgeisdetectedonEMIF_nWAITsignal.Thisinterrupt

generationisnotaffectedbytheWPnbitintheasynchronouswaitcycleconfigurationregister(AWCC).

Theasynchronoustimeoutinterruptconditionoccurswhentheattachedasynchronousdevicefailsto

deasserttheEMIF_nWAITpinwithinthenumberofcyclesdefinedbytheMAX_EXT_WAITbitinAWCC

(thishappensonlyinextendedwaitmode).EMIFsupportsonlylinearincrementingandcachelinewrap

addressingmodes.Ifanaccessrequestforanunsupportedaddressingmodeisreceived,theEMIFwill

settheLTbitintheEMIFinterruptrawregister(INTRAW)andtreattherequestasalinearincrementing

request.

Onlywhentheinterruptisenabledbysettingtheappropriatebit

(WR_MASK_SET/AT_MASK_SET/LT_MASK_SET)intheEMIFinterruptmasksetregister(INTMSKSET)

to1,willtheinterruptbesenttotheCPU.Onceenabled,theinterruptmaybedisabledbywritinga1to

thecorrespondingbitintheEMIFinterruptmaskclearregister(INTMSKCLR).Thebitfieldsinboththe

INTMSKSETandINTMSKCLRmaybeusedtoindicatewhethertheinterruptisenabled.Whenthe

interruptisenabled,thecorrespondingbitfieldinboththeINTMSKSETandINTMSKCLRwillhavea

valueof1;whentheinterruptisdisabled,thecorrespondingbitfieldwillhaveavalueof0.

TheEMIFinterruptrawregister(INTRAW)andtheEMIFinterruptmaskregister(INTMSK)indicatethe

statusofeachinterrupt.Theappropriatebit(WR/AT/LT)inINTRAWissetwhentheinterruptcondition

occurs,whetherornottheinterrupthasbeenenabled.However,theappropriatebit

(WR_MASKED/AT_MASKED/LT_MASKED)inINTMSKissetonlywhentheinterruptconditionoccurs

andtheinterruptisenabled.Writinga1tothebitinINTRAWclearstheINTRAWbitaswellasthe

correspondingbitinINTMSK.Table17-23containsabriefsummaryoftheinterruptstatusandcontrolbit

fields.SeeSection17.3forcompletedetailsontheregisterfields.

633

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

Table17-23.InterruptMonitorandControlBitFields

RegisterName

BitName

Description

EMIFinterruptrawregister

WR

ThisbitissetwhenanrisingedgeontheEMIF_nWAITsignaloccurs.

(INTRAW)

Writinga1clearstheWRbitaswellastheWR_MASKEDbitin

INTMSK.

AT

Thisbitissetwhenanasynchronoustimeoutoccurs.Writinga1clears

theATbitaswellastheAT_MASKEDbitinINTMSK.

LT

Thisbitissetwhenanunsupportedaddressingmodeisused.Writinga

1clearsLTbitaswellastheLT_MASKEDbitinINTMSK.

EMIFinterruptmaskregister

WR_MASKED

ThisbitissetonlywhenarisingedgeontheEMIF_nWAITsignaloccurs

(INTMSK)

andtheinterrupthasbeenenabledbywritinga1tothe

WR_MASK_SETbitinINTMSKSET.

AT_MASKED

Thisbitissetonlywhenanasynchronoustimeoutoccursandthe

interrupthasbeenenabledbywritinga1totheAT_MASK_SETbitin

INTMSKSET.

LT_MASKED

Thisbitissetonlywhenlinetrapinterruptoccursandtheinterrupthas

beenenabledbywritinga1totheLT_MASK_SETbitinINTMSKSET.

EMIFinterruptmasksetregister

WR_MASK_SET

Writinga1tothisbitenablesthewaitriseinterrupt.

(INTMSKSET)

AT_MASK_SET

Writinga1tothisbitenablestheasynchronoustimeoutinterrupt.

LT_MASK_SET

Writinga1tothisbitenablesthelinetrapinterrupt.

EMIFinterruptmaskclearregister

WR_MASK_CLR

Writinga1tothisbitdisablesthewaitriseinterrupt.

(INTMSKCLR)

AT_MASK_CLR

Writinga1tothisbitdisablestheasynchronoustimeoutinterrupt.

LT_MASK_CLR

Writinga1tothisbitdisablesthelinetrapinterrupt.

17.2.10DMAEventSupport

EMIFmemorycontrollerisaDMAslaveperipheralandthereforedoesnotgenerateDMAevents.Data

readandwriterequestsmaybemadedirectly,bymastersandtheDMA.

17.2.11EMIFSignalMultiplexing

FordetailsonEMIFsignalmultiplexing,seetheI/OMultiplexingModulechapterofthetechnicalreference

manual.

17.2.12MemoryMap

Forinformationdescribingthedevicememory-map,seeyourdevice-specificdatasheet.

634

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

17.2.13PriorityandArbitration

Section17.2.2describestheexternalprioritizationandarbitrationamongrequestsfromdifferentsources

withinthemicrocontroller.Theresultofthisexternalarbitrationisthatonlyonerequestispresentedtothe

EMIFatatime.OncetheEMIFcompletesarequest,theexternalarbiterthenprovidestheEMIFwiththe

nextpendingrequest.

Internally,theEMIFundertakesmemorydevicetransactionsaccordingtoastrictpriorityscheme.The

highestpriorityeventsare:

•Adevicereset.

•AwritetoanyofthethreeleastsignificantbytesoftheSDRAMconfigurationregister(SDCR).

EitheroftheseeventswillcausetheEMIFtoimmediatelycommenceitsinitializationsequenceas

describedinSection17.2.5.4.

OncetheEMIFhascompleteditsinitializationsequence,itperformsmemorytransactionsaccordingtothe

followingpriorityscheme(highestprioritylistedfirst):

1.IftheEMIF'sbacklogrefreshcounterisattheRefreshMusturgencylevel,theEMIFperformsmultiple

SDRAMautorefreshcyclesuntiltheRefreshReleaseurgencylevelisreached.

2.IfanSDRAMorasynchronousreadhasbeenrequested,theEMIFperformsareadoperation.

3.IftheEMIF'sbacklogrefreshcounterisattheRefreshNeedurgencylevel,theEMIFperformsan

SDRAMautorefreshcycle.

4.IfanSDRAMorasynchronouswritehasbeenrequested,theEMIFperformsawriteoperation.

5.IftheEMIF'sbacklogrefreshcounterisattheRefreshMayorRefreshReleaseurgencylevel,the

EMIFperformsanSDRAMautorefreshcycle.

6.IfthevalueoftheSRbitinSDCRhasbeensetto1,theEMIFwillentertheself-refreshstateas

describedinSection17.2.5.7.

Aftertakingoneoftheactionslistedabove,theEMIFthenreturnstothetopoftheprioritylisttodetermine

itsnextaction.

BecausetheEMIFdoesnotissueauto-refreshcycleswhenintheself-refreshstate,theabovepriority

schemedoesnotapplywheninthisstate.SeeSection17.2.5.7fordetailsontheoperationoftheEMIF

whenintheself-refreshstate.

635

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMIFModuleArchitecturewww.ti.com

17.2.14SystemConsiderations

ThissectiondescribesvarioussystemconsiderationstokeepinmindwhenoperatingtheEMIF.

17.2.14.1AsynchronousRequestTimes

InasystemthatinterfacestobothSDRAMandasynchronousmemory,theasynchronousrequestsmust

nottakelongerthanthesmallerofthefollowingtwovalues:

•tRAS(typically120μs)-toavoidviolatingthemaximumtimeallowedbetweenissuinganACTVand

PREcommandtotheSDRAM.

•tRefreshRate×11(typically15.7μs×11=172.7μs)-toavoidrefreshviolationsontheSDRAM.

Thelengthofanasynchronousrequestiscontrolledbymultiplefactors,theprimaryfactorbeingthe

numberofaccesscyclesrequiredtocompletetherequest.Forexample,anasynchronousrequestfor

4byteswillrequirefouraccesscyclesusingan8-bitdatabusandonlytwoaccesscycleusinga16-bit

databus.ThemaximumrequestsizethattheEMIFcanbesentis16words,thereforethemaximum

numberofaccesscyclespermemoryrequestis64whentheEMIFisconfiguredwithan8-bitdata

bus.Thelengthoftheindividualaccesscyclesthatmakeuptheasynchronousrequestisdetermined

bytheprogrammedsetup,strobe,hold,andturnaroundvalues,butcanalsobeextendedwiththe

assertionoftheEMIF_nWAITinputsignaluptoaprogrammedmaximumlimit.Itisuptotheuserto

makesurethatanentireasynchronousrequestdoesnotexceedthetimingvalueslistedabovewhen

alsointerfacingtoanSDRAMdevice.Thiscanbedonebylimitingtheasynchronoustiming

parameters.

17.2.14.2InterfacetoExternalPeripheralorFIFOMemory

IfEMIFisusedtointerfacetoanexternalperipheralorFIFOlogic(e.g.UHPI),itisrecommendedtouse

thehostCPU'sMemoryProtectionUnit(MPU)todefinethisexternalmemoryrangeasaregionthatis

eitherstrongly-orderedorofdevicetype.

17.2.14.3InterfacetoExternalSDRAM

IfEMIFisusedtointerfacetoanexternalSDRAM,itisrecommendedtoburstasmuchaspossibleto

normalmemorytoimprovetheinterfacebandwidth.

636

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMIFModuleArchitecture

17.2.15PowerManagement

PowerdissipationfromtheEMIFmemorycontrollermaybemanagedbyfollowingmethods:

•Self-refreshmode

•Power-downmode

•Gatinginputclockstothemoduleoff

GatinginputclocksofftotheEMIFmemorycontrollerachieveshigherpowersavingswhencomparedto

thepowersavingsofself-refreshorpowerdownmode.TheinputclockVCLK3canbeturnedoffthrough

theuseoftheGlobalClockModule(GCM).Beforegatingclocksoff,theEMIFmemorycontrollermust

placetheSDRSDRAMmemoryinself-refreshmode.Iftheexternalmemoryrequiresacontinuousclock,

theVCLK3clockdomainmustnotbeturnedoffbecausethismayresultindatacorruption.Seethe

followingsubsectionsfortheproperprocedurestofollowwhenstoppingtheEMIFmemorycontroller

clocks.

17.2.15.1PowerManagementUsingSelf-RefreshMode

TheEMIFcanbeplacedintoaself-refreshstateinordertoplacetheattachedSDRAMdevicesintoself-

refreshmode,whichconsumeslesspowerformostSDRAMdevices.Inthisstate,theattachedSDRAM

deviceusesaninternalclocktoperformitsownautorefreshcycles.Thismaintainsthevalidityofthedata

intheSDRAMwithouttheneedforanyexternalcommands.RefertoSection17.2.5.7formoredetailson

placingtheEMIFintotheself-refreshstate.

17.2.15.2PowerManagementUsingPowerDownMode

Inthepowerdownmode,EMIFdrivesEMIF_CKElowtolowerthepowerconsumption.EMIF_CKEgoes

highwhenthereisaneedtosendrefresh(REFR)commands,afterwhichEMIF_CKEisagaindrivenlow.

EMIF_CKEremainslowuntilanyrequestarrives.RefertoSection17.2.5.8formoredetailsonplacing

EMIFinpowerdownmode.

17.2.16EmulationConsiderations

EMIFmemorycontrollerremainsfullyfunctionalduringemulationhaltsinordertoallowemulationaccess

toexternalmemory.

637

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

17.3Registers

Theexternalmemoryinterface(EMIF)iscontrolledbyprogrammingitsinternalmemory-mappedregisters

(MMRs).Table17-24liststhememory-mappedregistersfortheEMIF.

NOTE:AllEMIFMMRs,exceptSDCR,supportonlyword(32-bit)accesses.Performingabyte(8-

bit)orhalfword(16-bit)writetotheseregistersresultsinundefinedbehavior.TheSDCRis

bytewritabletoallowthesettingoftheSR,PDandPDWRbitswithouttriggeringthe

SDRAMinitializationsequence.

TheEMIFregistersmustalwaysbeaccessedusing32-bitaccesses(unlessotherwisespecifiedinthis

chapter).Thebaseaddressofthememory-mappedregistersofEMIFisFCFFE800h.

Table17-24.ExternalMemoryInterface(EMIF)Registers

Offset

Acronym

RegisterDescription

Section

00h

MIDR

ModuleIDRegister

Section17.3.1

04h

AWCC

AsynchronousWaitCycleConfigurationRegister

Section17.3.2

08h

SDCR

SDRAMConfigurationRegister

Section17.3.3

0Ch

SDRCR

SDRAMRefreshControlRegister

Section17.3.4

10h

CE2CFG

Asynchronous1ConfigurationRegister

Section17.3.5

14h

CE3CFG

Asynchronous2ConfigurationRegister

Section17.3.5

18h

CE4CFG

Asynchronous3ConfigurationRegister

Section17.3.5

1Ch

CE5CFG

Asynchronous4ConfigurationRegister

Section17.3.5

20h

SDTIMR

SDRAMTimingRegister

Section17.3.6

3Ch

SDSRETR

SDRAMSelfRefreshExitTimingRegister

Section17.3.7

40h

INTRAW

EMIFInterruptRawRegister

Section17.3.8

44h

INTMSK

EMIFInterruptMaskRegister

Section17.3.9

48h

INTMSKSET

EMIFInterruptMaskSetRegister

Section17.3.10

4Ch

INTMSKCLR

EMIFInterruptMaskClearRegister

Section17.3.11

68h

PMCR

PageModeControlRegister

Section17.3.12

17.3.1ModuleIDRegister(MIDR)

Thisisaread-onlyregisterindicatingthemoduleIDoftheEMIF.TheMIDRisshowninFigure17-15and

describedinTable17-25.

Figure17-15.ModuleIDRegister(MIDR)[offset=00]

31

0

REV

R-x

LEGEND:R=Readonly;-n=valueafterreset

Table17-25.ModuleIDRegister(MIDR)FieldDescriptions

Bit

Field

Value

Description

31-0

REV

x

ModuleIDofEMIF.Seethedevice-specificdatamanual.

638

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

17.3.2AsynchronousWaitCycleConfigurationRegister(AWCC)

Theasynchronouswaitcycleconfigurationregister(AWCC)isusedtoconfiguretheparametersfor

extendedwaitcycles.BoththepolarityoftheEMIF_nWAITpin(s)andthemaximumallowablenumberof

extendedwaitcyclescanbeconfigured.TheAWCCisshowninFigure17-16anddescribedinTable17-

26.NotalldevicessupportbothEMIF_nWAIT[1]andEMIF_nWAIT[0],seethedevice-specificdata

manualtodeterminesupportoneachdevice.

NOTE:TheEWbitintheasynchronousnconfigurationregister(CEnCFG)mustbesettoallowfor

theinsertionofextendedwaitcycles.

Figure17-16.AsynchronousWaitCycleConfigurationRegister(AWCCR)[offset=04h]

31

30

29

28

27

24

23

22

21

20

19

18

17

16

Reserved

WP1

WP0

Reserved

CS5_WAIT

CS4_WAIT

CS3_WAIT

CS2_WAIT

R-3h

R/W-1

R/W-1

R-0

R/W-0

R/W-0

R/W-0

R/W-0

15

8

7

0

Reserved

MAX_EXT_WAIT

R-0

R/W-80h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table17-26.AsynchronousWaitCycleConfigurationRegister(AWCCR)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

3h

Reserved

29

WP1

EMIF_nWAIT[1]polaritybit.ThisbitdefinesthepolarityoftheEMIF_nWAIT[1]pin.

0

InsertwaitcyclesifEMIF_nWAIT[1]pinislow.

1

InsertwaitcyclesifEMIF_nWAIT[1]pinishigh.

28

WP0

EMIF_nWAIT[0]polaritybit.ThisbitdefinesthepolarityoftheEMIF_nWAIT[0]pin.

0

InsertwaitcyclesifEMIF_nWAIT[0]pinislow.

1

InsertwaitcyclesifEMIF_nWAIT[0]pinishigh.

27-24

Reserved

0

Reserved

23-22

CS5_WAIT

0-3h

ChipSelect5WAITsignalselection.ThissignaldetermineswhichEMIF_nWAIT[n]signalwill

beusedformemoryaccessestochipselect5memoryspace.Thisdevicedoesnotsupport

chipselect5,soanyvaluewrittentothisfieldhasnoeffect.

21-20

CS4_WAIT

0-3h

ChipSelect4WAITsignalselection.ThissignaldetermineswhichEMIF_nWAIT[n]signalwill

beusedformemoryaccessestochipselect4memoryspace.

0

EMIF_nWAIT[0]pinisusedtocontrolexternalwaitstates.

1h

EMIF_nWAIT[1]pinisusedtocontrolexternalwaitstates.

2h-3h

Reserved

19-18

CS3_WAIT

0-3h

ChipSelect3WAITsignalselection.ThissignaldetermineswhichEMIF_nWAIT[n]signalwill

beusedformemoryaccessestochipselect3memoryspace.

0

EMIF_nWAIT[0]pinisusedtocontrolexternalwaitstates.

1h

EMIF_nWAIT[1]pinisusedtocontrolexternalwaitstates.

2h-3h

Reserved

17-16

CS2_WAIT

0-3h

ChipSelect2WAITsignalselection.ThissignaldetermineswhichEMIF_nWAIT[n]signalwill

beusedformemoryaccessestochipselect2memoryspace.

0

EMIF_nWAIT[0]pinisusedtocontrolexternalwaitstates..

1h

EMIF_nWAIT[1]pinisusedtocontrolexternalwaitstates.

2h-3h

Reserved

15-8

Reserved

0

Reserved

7-0

MAX_EXT_WAIT

0-FFh

Maximumextendedwaitcycles.TheEMIFwillwaitforamaximumof(MAX_EXT_WAIT+1)×

16clockcyclesbeforeitstopsinsertingasynchronouswaitcyclesandproceedstothehold

periodoftheaccess.

639

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

17.3.3SDRAMConfigurationRegister(SDCR)

TheSDRAMconfigurationregister(SDCR)isusedtoconfigurevariousparametersoftheSDRAM

controllersuchasthenumberofinternalbanks,theinternalpagesize,andtheCASlatencytomatch

thoseoftheattachedSDRAMdevice.Inaddition,thisregisterisusedtoputtheattachedSDRAMdevice

intoSelf-Refreshmode.TheSDCRisshowninFigure17-17anddescribedinTable17-27.

NOTE:WritingtothelowerthreebytesofthisregisterwillcausetheEMIFtostarttheSDRAM

initializationsequencedescribedinSection17.2.5.4.

Figure17-17.SDRAMConfigurationRegister(SDCR)[offset=08h]

31

30

29

28

24

SR

PD

PDWR

Reserved

R/W-0

R/W-0

R/W-0

R-0

23

16

Reserved

R-0

15

14

13

12

11

9

8

Reserved

NM(A)

Reserved

CL

BIT11_9LOCK

R-0

R/W-0

R-0

R/W-3h

R/W-0

7

6

4

3

2

0

Reserved

IBANK

Reserved

PAGESIZE

R-0

R/W-2h

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

A.TheNMbitmustbesetto1iftheEMIFonyourdeviceonlyhas16databuspins.

Table17-27.SDRAMConfigurationRegister(SDCR)FieldDescriptions

Bit

Field

Value

Description

31

SR

Self-Refreshmodebit.ThisbitcontrolsenteringandexitingoftheSelf-Refreshmodedescribedin

Section17.2.5.7.Thefieldshouldbewrittenusingabyte-writetotheupperbyteofSDCRtoavoid

triggeringtheSDRAMinitializationsequence.

0

Writinga0tothisbitwillcauseconnectedSDRAMdevicesandtheEMIFtoexittheSelf-Refresh

mode.

1

Writinga1tothisbitwillcauseconnectedSDRAMdevicesandtheEMIFtoentertheSelf-Refresh

mode.

30

PD

PowerDownbit.Thisbitcontrolsenteringandexitingofthepower-downmode.Thefieldshouldbe

writtenusingabyte-writetotheupperbyteofSDCRtoavoidtriggeringtheSDRAMinitialization

sequence.IfbothSRandPDbitsareset,theEMIFwillgointoSelfRefresh.

0

Writinga0tothisbitwillcauseconnectedSDRAMdevicesandtheEMIFtoexitthepower-down

mode.

1

Writinga1tothisbitwillcauseconnectedSDRAMdevicesandtheEMIFtoenterthepower-down

mode.

29

PDWR

Performrefreshesduringpowerdown.Writinga1tothisbitwillcauseEMIFtoexitpower-down

stateandissueandAUTOREFRESHcommandeverytimeRefreshMaylevelisset.

28-15

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

14

NM

Narrowmodebit.Thisbitdefineswhethera16-or32-bit-wideSDRAMisconnectedtotheEMIF.

Thisbitfieldmustalwaysbesetto1.WritingtothisfieldtriggerstheSDRAMinitialization

sequence.

0

32-bitSDRAMdatabusisused.

1

16-bitSDRAMdatabusisused.

13-12

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

640

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

Table17-27.SDRAMConfigurationRegister(SDCR)FieldDescriptions(continued)

Bit

Field

Value

Description

11-9

CL

0-7h

CASLatency.ThisfielddefinestheCASlatencytobeusedwhenaccessingconnectedSDRAM

devices.A1mustbesimultaneouslywrittentotheBIT11_9LOCKbitfieldofthisregisterinorderto

writetotheCLbitfield.WritingtothisfieldtriggerstheSDRAMinitializationsequence.

0-1h

Reserved

2h

CASlatency=2EMIF_CLKcycles

3h

CASlatency=3EMIF_CLKcycles

4h-7h

Reserved

8

BIT11_9LOCK

Bits11to9lock.CLcanonlybewrittenifBIT11_9LOCKissimultaneouslywrittenwitha1.

BIT11_9LOCKisalwaysreadas0.WritingtothisfieldtriggerstheSDRAMinitializationsequence.

0

CLcannotbewritten.

1

CLcanbewritten.

7

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

6-4

IBANK

0-7h

InternalSDRAMBanksize.ThisfielddefinesnumberofbanksinsidetheconnectedSDRAM

devices.WritingtothisfieldtriggerstheSDRAMinitializationsequence.

0

1bankSDRAMdevices.

1

2bankSDRAMdevices.

2

4bankSDRAMdevices.

3h-7h

Reserved.

3

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

2-0

PAGESIZE

0-7h

PageSize.ThisfielddefinestheinternalpagesizeofconnectedSDRAMdevices.Writingtothis

fieldtriggerstheSDRAMinitializationsequence.

0

8columnaddressbits(256elementsperrow)

1h

9columnaddressbits(512elementsperrow)

2h

10columnaddressbits(1024elementsperrow)

3h

11columnaddressbits(2048elementsperrow)

4h-7h

Reserved

17.3.4SDRAMRefreshControlRegister(SDRCR)

TheSDRAMrefreshcontrolregister(SDRCR)isusedtoconfiguretherateatwhichconnectedSDRAM

deviceswillbeautomaticallyrefreshedbytheEMIF.RefertoSection17.2.5.6ontherefreshcontrollerfor

moredetails.TheSDRCRisshowninFigure17-18anddescribedinTable17-28.

Figure17-18.SDRAMRefreshControlRegister(SDRCR)[offset=0Ch]

31

16

Reserved

R-0

15

13

12

0

Reserved

RR

R-0

R/W-4E2h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table17-28.SDRAMRefreshControlRegister(SDRCR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

12-0

RR

0-1FFFh

RefreshRate.ThisfieldisusedtodefinetheSDRAMrefreshperiodintermsofEMIF_CLKcycles.

Writingavalue<0x0020tothisfieldwillcauseittobeloadedwith(2×T_RFC)+1valuefromthe

SDRAMtimingregister(SDTIMR).

641

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

17.3.5AsynchronousnConfigurationRegisters(CE2CFG-CE5CFG)

Theasynchronousnconfigurationregisters(CE2CFG,CE3CFG,CE4CFG,andCE5CFG)areusedto

configuretheshapingoftheaddressandcontrolsignalsduringanaccesstoasynchronousmemory

connectedtoCS2,CS3,CS4,andCS5,respectively.CS5isnotavailableonthisdevice.Itisalsousedto

programthewidthofasynchronousInterfacendtoselectfromvariousmodesofoperation.Thisregister

canbewrittenpriortoanytransfer,andanyasynchronoustransferfollowingthewritewillusethenew

configuration.TheCEnCFGisshowninFigure17-19anddescribedinTable17-29.

Figure17-19.AsynchronousnConfigurationRegister(CEnCFG)[offset=10h-1Ch]

31

30

29

26

25

24

SS

EW(A)

W_SETUP

W_STROBE(B)

R/W-0

R/W-0

R/W-Fh

R/W-3Fh

23

20

19

17

16

W_STROBE(B)

W_HOLD

R_SETUP

R/W-3Fh

R/W-7h

R/W-Fh

15

13

12

7

6

4

3

2

1

0

R_SETUP

R_STROBE(B)

R_HOLD

TA

ASIZE

R/W-Fh

R/W-3Fh

R/W-7h

R/W-3h

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

A.TheEWbitmustbeclearedto0whenoperatinginNANDFlashmode.

B.Thisbitfieldmustbeclearedto0iftheEMIFonyourdevicedoesnothaveanEMIF_nWAITpin.

Table17-29.AsynchronousnConfigurationRegister(CEnCFG)FieldDescriptions

Bit

Field

Value

Description

31

SS

SelectStrobebit.ThisbitdefineswhethertheasynchronousinterfaceoperatesinNormalModeor

SelectStrobeMode.SeeSection17.2.6fordetailsonthetwomodesofoperation.

0

NormalModeenabled.

1

SelectStrobeModeenabled.

30

EW

ExtendWaitbit.Thisbitdefineswhetherextendedwaitcycleswillbeenabled.SeeSection17.2.6.6on

extendedwaitcyclesfordetails.Thisbitfieldmustbesetto0iftheEMIFonyourdevicedoesnothave

anEMIF_nWAITpin.

0

Extendedwaitcyclesdisabled.

1

Extendedwaitcyclesenabled.

29-26

W_SETUP

0-Fh

WritesetupwidthinEMIF_CLKcycles,minusonecycle.SeeSection17.2.6.3fordetails.

25-20

W_STROBE

0-3Fh

WritestrobewidthinEMIF_CLKcycles,minusonecycle.SeeSection17.2.6.3fordetails.

19-17

W_HOLD

0-7h

WriteholdwidthinEMIF_CLKcycles,minusonecycle.SeeSection17.2.6.3fordetails.

16-13

R_SETUP

0-Fh

ReadsetupwidthinEMIF_CLKcycles,minusonecycle.SeeSection17.2.6.3fordetails.

12-7

R_STROBE

0-3Fh

ReadstrobewidthinEMIF_CLKcycles,minusonecycle.SeeSection17.2.6.3fordetails.

6-4

R_HOLD

0-7h

ReadholdwidthinEMIF_CLKcycles,minusonecycle.SeeSection17.2.6.3fordetails.

3-2

TA

0-3h

MinimumTurn-Aroundtime.ThisfielddefinestheminimumnumberofEMIF_CLKcyclesbetweenreads

andwrites,minusonecycle.SeeSection17.2.6.3fordetails.

1-0

ASIZE

0-3h

AsynchronousDataBusWidth.Thisfielddefinesthewidthoftheasynchronousdevice'sdatabus.

0

8-bitdatabus

1h

16-bitdatabus

2h-3h

Reserved

642

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

17.3.6SDRAMTimingRegister(SDTIMR)

TheSDRAMtimingregister(SDTIMR)isusedtoprogrammanyoftheSDRAMtimingparameters.

ConsulttheSDRAMdatasheetforinformationontheappropriatevaluestoprogramintoeachfield.The

SDTIMRisshowninFigure17-20anddescribedinTable17-30.

Figure17-20.SDRAMTimingRegister(SDTIMR)[offset=20h]

31

27

26

24

23

22

20

19

18

16

T_RFC

T_RP

Rsvd

T_RCD

Rsvd

T_WR

R/W-8h

R/W-2h

R-0

R/W-2h

R-0

R/W-1h

15

12

11

8

7

6

4

3

0

T_RAS

T_RC

Rsvd

T_RRD

Reserved

R/W-5h

R/W-8h

R-0

R/W-1h

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table17-30.SDRAMTimingRegister(SDTIMR)FieldDescriptions

Bit

Field

Value

Description

31-27

T_RFC

0-1Fh

SpecifiestheTrfcvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKcyclesfrom

Refresh(REFR)toRefresh(REFR),minus1:

T_RFC=(Trfc/tEMIF_CLK)-1

26-24

T_RP

0-7h

SpecifiestheTrpvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKcyclesfrom

Precharge(PRE)toActivate(ACTV)orRefresh(REFR)command,minus1:

T_RP=(Trp/tEMIF_CLK)-1

23

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethedefault

valueof0.

22-20

T_RCD

0-7h

SpecifiestheTrcdvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKcyclesfrom

Active(ACTV)toRead(READ)orWrite(WRT),minus1:

T_RCD=(Trcd/tEMIF_CLK)-1

19

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethedefault

valueof0.

18-16

T_WR

0-7h

SpecifiestheTwrvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKcyclesfrom

lastWrite(WRT)toPrecharge(PRE),minus1:

T_WR=(Twr/tEMIF_CLK)-1

15-12

T_RAS

0-Fh

SpecifiestheTrasvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKclockcycles

fromActivate(ACTV)toPrecharge(PRE),minus1:

T_RAS=(Tras/tEMIF_CLK)-1

11-8

T_RC

0-Fh

SpecifiestheTrcvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKclockcycles

fromActivate(ACTV)toActivate(ACTV),minus1:

T_RC=(Trc/tEMIF_CLK)-1

7

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethedefault

valueof0.

6-4

T_RRD

0-7h

SpecifiestheTrrdvalueoftheSDRAM.ThisdefinestheminimumnumberofEMIF_CLKclockcycles

fromActivate(ACTV)toActivate(ACTV)foradifferentbank,minus1:

T_RRD=(Trrd/tEMIF_CLK)-1

3-0

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethedefault

valueof0.

643

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

17.3.7SDRAMSelfRefreshExitTimingRegister(SDSRETR)

TheSDRAMselfrefreshexittimingregister(SDSRETR)isusedtoprogramtheamountoftimebetween

whentheSDRAMexitsSelf-RefreshmodeandwhentheEMIFissuesanothercommand.TheSDSRETR

isshowninFigure17-21anddescribedinTable17-31.

Figure17-21.SDRAMSelfRefreshExitTimingRegister(SDSRETR)[offset=3Ch]

31

16

Reserved

R-0

15

5

4

0

Reserved

T_XS

R-0

R/W-9h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table17-31.SDRAMSelfRefreshExitTimingRegister(SDSRETR)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.

4-0

T_XS

0-1Fh

ThisfieldspecifiestheminimumnumberofECLKOUTcyclesfromSelf-Refreshexittoanycommand,

minusone.

T_XS=Txsr/tEMIF_CLK-1

644

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

17.3.8EMIFInterruptRawRegister(INTRAW)

TheEMIFinterruptrawregister(INTRAW)isusedtomonitorandcleartheEMIF’shardware-generated

AsynchronousTimeoutInterrupt.TheATbitinthisregisterwillbesetwhenanAsynchronousTimeout

occursregardlessofthestatusoftheEMIFinterruptmasksetregister(INTMSKSET)andEMIFinterrupt

maskclearregister(INTMSKCLR).Writinga1tothisbitwillclearit.TheEMIFonsomedevicesdoesnot

havetheEMIF_nWAITpin;therefore,theseregistersandfieldsarereservedonthosedevices.The

INTRAWisshowninFigure17-22anddescribedinTable17-32.

Figure17-22.EMIFInterruptRawRegister(INTRAW)[offset=40h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

WR

LT

AT

R-0

R/W1C-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writing0hasnoeffect);-n=valueafterreset

Table17-32.EMIFInterruptRawRegister(INTRAW)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethedefault

valueof0.

2

WR

WaitRise.Thisbitissetto1byhardwaretoindicatethatarisingedgeontheEMIF_nWAITpinhas

occurred.

0

IndicatesthatarisingedgehasnotoccurredontheEMIF_nWAITpin.Writinga0hasnoeffect.

1

IndicatesthatarisingedgehasoccurredontheEMIF_nWAITpin.Writinga1willclearthisbitandthe

WR_MASKEDbitintheEMIFinterruptmaskedregister(INTMSK).

1

LT

LineTrap.Setto1byhardwaretoindicateillegalmemoryaccesstypeorinvalidcachelinesize.

0

Writinga0hasnoeffect.

1

Indicatesthatalinetraphasoccurred.Writinga1willclearthisbitaswellastheLT_MASKEDbitin

theEMIFinterruptmaskedregister(INTMSK).

0

AT

AsynchronousTimeout.Thisbitissetto1byhardwaretoindicatethatduringanextended

asynchronousmemoryaccesscycle,theEMIF_nWAITpindidnotgoinactivewithinthenumberof

cyclesdefinedbytheMAX_EXT_WAITfieldintheasynchronouswaitcycleconfigurationregister

(AWCC).

0

IndicatesthatanAsynchronousTimeouthasnotoccurred.Writinga0hasnoeffect.

1

IndicatesthatanAsynchronousTimeouthasoccurred.Writinga1willclearthisbitaswellasthe

AT_MASKEDbitintheEMIFinterruptmaskedregister(INTMSK).

645

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

17.3.9EMIFInterruptMaskedRegister(INTMSK)

LiketheEMIFinterruptrawregister(INTRAW),theEMIFinterruptmaskedregister(INTMSK)isusedto

monitorandclearthestatusoftheEMIF’shardware-generatedAsynchronousTimeoutInterrupt.Themain

differencebetweenthetworegistersisthatwhentheAT_MASKEDbitinthisregisterisset,anactive-high

pulsewillbesenttotheCPUinterruptcontroller.Also,theAT_MASKEDbitfieldinINTMSKisonlysetto

1iftheassociatedinterrupthasbeenenabledintheEMIFinterruptmasksetregister(INTMSKSET).The

EMIFonsomedevicesdoesnothavetheEMIF_nWAITpin,therefore,theseregistersandfieldsare

reservedonthosedevices.TheINTMSKisshowninFigure17-23anddescribedinTable17-33.

Figure17-23.EMIFInterruptMaskRegister(INTMSK)[offset=44h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

WR_MASKED

LT_MASKED

AT_MASKED

R-0

R/W1C-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writing0hasnoeffect);-n=valueafterreset

Table17-33.EMIFInterruptMaskRegister(INTMSK)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

2

WR_MASKED

WaitRiseMasked.Thisbitissetto1byhardwaretoindicatearisingedgehasoccurredonthe

EMIF_nWAITpin,providedthattheWR_MASK_SETbitissetto1intheEMIFinterruptmaskset

register(INTMSKSET).

0

Indicatesthatawaitriseinterrupthasnotbeengenerated.Writinga0hasnoeffect.

1

Indicatesthatawaitriseinterrupthasbeengenerated.Writinga1willclearthisbitandtheWRbit

intheEMIFinterruptrawregister(INTRAW).

1

LT_MASKED

MaskedLineTrap.Setto1byhardwaretoindicateillegalmemoryaccesstypeorinvalidcacheline

size,onlyiftheLT_MASK_SETbitintheEMIFinterruptmasksetregister(INTMSKSET)issetto1.

0

Writinga0hasnoeffect.

1

Writinga1willclearthisbitaswellastheLTbitintheEMIFinterruptrawregister(INTRAW).

0

AT_MASKED

AsynchronousTimeoutMasked.Thisbitissetto1byhardwaretoindicatethatduringanextended

asynchronousmemoryaccesscycle,theEMIF_nWAITpindidnotgoinactivewithinthenumberof

cyclesdefinedbytheMAX_EXT_WAITfieldintheasynchronouswaitcycleconfigurationregister

(AWCC),providedthattheAT_MASK_SETbitissetto1intheEMIFinterruptmasksetregister

(INTMSKSET).

0

IndicatesthatanAsynchronousTimeoutInterrupthasnotbeengenerated.Writinga0hasno

effect.

1

IndicatesthatanAsynchronousTimeoutInterrupthasbeengenerated.Writinga1willclearthisbit

aswellastheATbitintheEMIFinterruptrawregister(INTRAW).

646

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

17.3.10EMIFInterruptMaskSetRegister(INTMSKSET)

TheEMIFinterruptmasksetregister(INTMSKSET)isusedtoenabletheAsynchronousTimeout

Interrupt.Ifreadas1,theAT_MASKEDbitintheEMIFinterruptmaskedregister(INTMSK)willbesetand

aninterruptwillbegeneratedwhenanAsynchronousTimeoutoccurs.Ifreadas0,theAT_MASKEDbit

willalwaysread0andnointerruptwillbegeneratedwhenanAsynchronousTimeoutoccurs.Writinga1

totheAT_MASK_SETbitenablestheAsynchronousTimeoutInterrupt.TheEMIFonsomedevicesdoes

nothavetheEMIF_nWAITpin;therefore,theseregistersandfieldsarereservedonthosedevices.The

INTMSKSETisshowninFigure17-24anddescribedinTable17-34.

Figure17-24.EMIFInterruptMaskSetRegister(INTMSKSET)[offset=48h]

31

16

Reserved

R-0

15

3

2

1

0

Reserved

WR_MASK_SET

Reserved

AT_MASK_SET

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table17-34.EMIFInterruptMaskSetRegister(INTMSKSET)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

2

WR_MASK_SET

WaitRiseMaskSet.ThisbitdetermineswhetherornotthewaitriseInterruptisenabled.Writinga

1tothisbitsetsthisbit,setstheWR_MASK_CLRbitintheEMIFinterruptmaskclearregister

(INTMSKCLR),andenablesthewaitriseinterrupt.Toclearthisbit,a1mustbewrittentothe

WR_MASK_CLRbitinINTMSKCLR.

0

Indicatesthatthewaitriseinterruptisdisabled.Writinga0hasnoeffect.

1

Indicatesthatthewaitriseinterruptisenabled.Writinga1setsthisbitandtheWR_MASK_CLRbit

intheEMIFinterruptmaskclearregister(INTMSKCLR).

1

LT_MASK_SET

MasksetforLT_MASKEDbitintheEMIFinterruptmaskregister(INTMSK).

0

Indicatesthatthelinetrapinterruptisdisabled.Writinga0hasnoeffect.

1

Indicatesthatthelinetrapinterruptisenabled.Writinga1setsthisbitandtheLT_MASK_CLRbit

intheEMIFinterruptmaskclearregister(INTMSKCLR).

0

AT_MASK_SET

AsynchronousTimeoutMaskSet.ThisbitdetermineswhetherornottheAsynchronousTimeout

Interruptisenabled.Writinga1tothisbitsetsthisbit,setstheAT_MASK_CLRbitintheEMIF

interruptmaskclearregister(INTMSKCLR),andenablestheAsynchronousTimeoutInterrupt.To

clearthisbit,a1mustbewrittentotheAT_MASK_CLRbitoftheEMIFinterruptmaskclear

register(INTMSKCLR).

0

IndicatesthattheAsynchronousTimeoutInterruptisdisabled.Writinga0hasnoeffect.

1

IndicatesthattheAsynchronousTimeoutInterruptisenabled.Writinga1setsthisbitandthe

AT_MASK_CLRbitintheEMIFinterruptmaskclearregister(INTMSKCLR).

647

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Registerswww.ti.com

17.3.11EMIFInterruptMaskClearRegister(INTMSKCLR)

TheEMIFinterruptmaskclearregister(INTMSKCLR)isusedtodisabletheAsynchronousTimeout

Interrupt.Ifreadas1,theAT_MASKEDbitintheEMIFinterruptmaskedregister(INTMSK)willbesetand

aninterruptwillbegeneratedwhenanAsynchronousTimeoutoccurs.Ifreadas0,theAT_MASKEDbit

willalwaysread0andnointerruptwillbegeneratedwhenanAsynchronousTimeoutoccurs.Writinga1

totheAT_MASK_CLRbitdisablestheAsynchronousTimeoutInterrupt.TheEMIFonsomedevicesdoes

nothavetheEMIF_nWAITpin,therefore,theseregistersandfieldsarereservedonthosedevices.The

INTMSKCLRisshowninFigure17-25anddescribedinTable17-35.

Figure17-25.EMIFInterruptMaskClearRegister(INTMSKCLR)[offset=4Ch]

31

16

Reserved

R-0

15

3

2

1

0

Reserved

WR_MASK_CLR

Reserved

AT_MASK_CLR

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table17-35.EMIFInterruptMaskClearRegister(INTMSKCLR)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved.Thereservedbitlocationisalwaysreadas0.Ifwritingtothisfield,alwayswritethe

defaultvalueof0.

2

WR_MASK_CLR

WaitRiseMaskClear.Thisbitdetermineswhetherornotthewaitriseinterruptisenabled.Writing

a1tothisbitclearsthisbit,clearstheWR_MASK_SETbitintheEMIFinterruptmasksetregister

(INTMSKSET),anddisablesthewaitriseinterrupt.Tosetthisbit,a1mustbewrittentothe

WR_MASK_SETbitinINTMSKSET.

0

Indicatesthatthewaitriseinterruptisdisabled.Writinga0hasnoeffect.

1

Indicatesthatthewaitriseinterruptisenabled.Writinga1clearsthisbitandtheWR_MASK_SET

bitintheEMIFinterruptmasksetregister(INTMSKSET).

1

LT_MASK_CLR

LinetrapMaskClear.Thisbitdetermineswhetherornotthelinetrapinterruptisenabled.Writinga

1tothisbitclearsthisbit,clearstheLT_MASK_SETbitintheEMIFinterruptmasksetregister

(INTMSKSET),anddisablesthelinetrapinterrupt.Tosetthisbit,a1mustbewrittentothe

LT_MASK_SETbitinINTMSKSET.

0

Indicatesthatthelinetrapinterruptisdisabled.Writinga0hasnoeffect.

1

Indicatesthatthelinetrapinterruptisenabled.Writinga1clearsthisbitandtheLT_MASK_SETbit

intheEMIFinterruptmasksetregister(INTMSKSET).

0

AT_MASK_CLR

AsynchronousTimeoutMaskClear.ThisbitdetermineswhetherornottheAsynchronousTimeout

Interruptisenabled.Writinga1tothisbitclearsthisbit,clearstheAT_MASK_SETbitintheEMIF

interruptmasksetregister(INTMSKSET),anddisablestheAsynchronousTimeoutInterrupt.Toset

thisbit,a1mustbewrittentotheAT_MASK_SETbitoftheEMIFinterruptmasksetregister

(INTMSKSET).

0

IndicatesthattheAsynchronousTimeoutInterruptisdisabled.Writinga0hasnoeffect.

1

IndicatesthattheAsynchronousTimeoutInterruptisenabled.Writinga1clearsthisbitandthe

AT_MASK_SETbitintheEMIFinterruptmasksetregister(INTMSKSET).

648

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comRegisters

17.3.12PageModeControlRegister(PMCR)

Thepagemodecontrolregister(PMCR)isshowninFigure17-26anddescribedinTable17-36.This

registerisconfiguredwhenusingNORFlashpagemode.

Figure17-26.PageModeControlRegister(PMCR)[offset=68h]

31

26

25

24

CS5_PG_DEL

CS5_PG_SIZE

CS5_PG_MD_EN

R/W-3Fh

R/W-0

R/W-0

23

18

17

16

CS4_PG_DEL

CS4_PG_SIZE

CS4_PG_MD_EN

R/W-3Fh

R/W-0

R/W-0

15

10

9

8

CS3_PG_DEL

CS3_PG_SIZE

CS3_PG_MD_EN

R/W-3Fh

R/W-0

R/W-0

7

2

1

0

CS2_PG_DEL

CS2_PG_SIZE

CS2_PG_MD_EN

R/W-3Fh

R/W-0

R/W-0

LEGEND:R/W=Read/Write;-n=valueafterreset

Table17-36.PageModeControlRegister(PMCR)FieldDescriptions

Bit

Field

Value

Description

31-26

CS5_PG_DEL

1-3Fh

PageaccessdelayforNORFlashconnectedonCS5.CS5isnotavailableonthisdevice.

25

CS5_PG_SIZE

PageSizeforNORFlashconnectedonCS5.CS5isnotavailableonthisdevice.

24

CS5_PG_MD_EN

PageModeenableforNORFlashconnectedonCS5.CS5isnotavailableonthisdevice.

23-18

CS4_PG_DEL

1-3Fh

PageaccessdelayforNORFlashconnectedonCS4.NumberofEMIF_CLKcyclesrequiredfor

thepagereaddatatobevalid,minusonecycle.Thisvaluemustnotbeclearedto0.

17

CS4_PG_SIZE

PageSizeforNORFlashconnectedonCS4.

0

Pagesizeis4words

1

Pagesizeis8words

16

CS4_PG_MD_EN

PageModeenableforNORFlashconnectedonCS4.

0

Pagemodedisabledforthischipselect

1

Pagemodeenabledforthischipselect

15-10

CS3_PG_DEL

1-3Fh

PageaccessdelayforNORFlashconnectedonCS3.NumberofEMIF_CLKcyclesrequiredfor

thepagereaddatatobevalid,minusonecycle.Thisvaluemustnotbeclearedto0.

9

CS3_PG_SIZE

PageSizeforNORFlashconnectedonCS3.

0

Pagesizeis4words

1

Pagesizeis8words

8

CS3_PG_MD_EN

PageModeenableforNORFlashconnectedonCS3.

0

Pagemodedisabledforthischipselect

1

Pagemodeenabledforthischipselect

7-2

CS2_PG_DEL

1-3Fh

PageaccessdelayforNORFlashconnectedonCS2.NumberofEMIF_CLKcyclesrequiredfor

thepagereaddatatobevalid,minusonecycle.Thisvaluemustnotbeclearedto0.

1

CS2_PG_SIZE

PageSizeforNORFlashconnectedonCS2.

0

Pagesizeis4words

1

Pagesizeis8words

0

CS2_PG_MD_EN

PageModeenableforNORFlashconnectedonCS2.

0

Pagemodedisabledforthischipselect

1

Pagemodeenabledforthischipselect

649

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ExampleConfigurationwww.ti.com

17.4ExampleConfiguration

ThissectionpresentsanexampleofinterfacingtheEMIFtobothanSDRSDRAMdeviceandan

asynchronousflashdevice.

17.4.1HardwareInterface

Figure17-27showsthehardwareinterfacebetweentheEMIF,aSamsungK4S641632H-TC(L)7064Mb

SDRAMdevice,andtwoSHARPLH28F800BJE-PTTL908MbFlashmemory.Theconnectionbetween

theEMIFandtheSDRAMisstraightforward,buttheconnectionbetweentheEMIFandtheflashdeserves

adetailedlook.

Theaddressinputsfortheflashareprovidedbythreesources.TheA[18:0]addressinputsareprovided

byacombinationoftheEMIF_AandEMIF_BApinsaccordingtoSection17.2.6.1.RD/nBYsignalfrom

oneflashisconnectedtoEMIF_nWAITpinofEMIF.

Finally,thisexampleconfigurationconnectstheEMIF_nWEpintothenWEinputoftheflashandoperates

theEMIFinSelectStrobeMode.

17.4.2SoftwareConfiguration

ThefollowingsectionsdescribehowtoconfiguretheEMIFregistersandbitfieldstointerfacetheEMIF

withtheSamsungK4S641632H-TC(L)70SDRAMandtheSHARPLH28F800BJE-PTTL908MbFlash

memory.

17.4.2.1ConfiguringtheSDRAMInterface

ThissectiondescribeshowtoconfiguretheEMIFtointerfacewiththeSamsungK4S641632H-TC(L)70

SDRAMwithaclockfrequencyoffEMIF_CLK=100MHz.ProcedureAdescribedinSection17.2.5.5is

followedwhichassumesthattheSDRAMpower-uptimingconstraintweremetduringtheSDRAMAuto-

InitializationsequenceafterReset.

17.4.2.1.1PLLProgrammingfortheEMIFtoK4S641632H-TC(L)70Interface

Thedeviceglobalclockmodule(GCM)shouldfirstbeprogrammedtoselectthedesiredEMIF_CLK

frequency.Beforedoingthis,theSDRAMshouldbeplacedinSelf-RefreshModebysettingtheSRbitin

theSDRAMconfigurationregister(SDCR).TheSRbitshouldbesetusingabyte-writetotheupperbyte

oftheSDCRtoavoidtriggeringtheSDRAMInitializationSequence.TheEMIF_CLKfrequencycannow

beconfiguredtothedesiredvaluebyselectingtheappropriateclocksourcefortheVCLK3domain.Once

theVCLK3domainfrequencyhasbeenconfigured,removetheSDRAMfromSelf-Refreshbyclearingthe

SRbitinSDCR,againwithabyte-write.

Table17-37.SRFieldValueFortheEMIFtoK4S641632H-TC(L)70Interface

Field

Value

Purpose

SR

1then0

ToplacetheEMIFintotheselfrefreshstate

650

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMIFEMIF_nCS[0]EMIF_nCASEMIF_nRASEMIF_nWEEMIF_CLKEMIF_nCKEEMIF_nBA[1]EMIF_nBA[0]EMIF_nA[11:0]EMIF_nDQM[0]EMIF_nDQM[1]EMIF_D[15:0]EMIF_nCS[2]EMIF_nCS[3]EMIF_nOEEMIF_WAITGPIO (1 pin)EMIF_A[18:13]nRESETResetSDRAM1M x 16x 4 banknCEnCASnRASnWECLKCKEBA[1]BA[0]A[11:0]LDQMUDQMDQ[15:0]FLASH512k x 16A[0]A[12:1]DQ[15:0]nCEnWEnOEnRESETA[18:13]RY/BY

nBYTE0nBYTE1

FLASH512k x 16A[0]A[12:1]DQ[15:0]nCEnWEnOEnRESETA[18:13]RY/BY

nBYTE0nBYTE1



www.ti.comExampleConfiguration

Figure17-27.ExampleConfigurationInterface

651

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ExampleConfigurationwww.ti.com

17.4.2.1.2SDRAMTimingRegister(SDTIMR)SettingsfortheEMIFtoK4S641632H-TC(L)70Interface

ThefieldsoftheSDRAMtimingregister(SDTIMR)shouldbeprogrammedfirstasdescribedinTable17-

38tosatisfytherequiredtimingparametersfortheK4S641632H-TC(L)70.Basedonthesecalculations,a

valueof61114610hshouldbewrittentoSDTIMR.Figure17-28showsagraphicaldescriptionofhow

SDTIMRshouldbeprogrammed.

Table17-38.SDTIMRFieldCalculationsfortheEMIFtoK4S641632H-TC(L)70Interface

ValuefromK4S641632H-TC(L)70

ValueCalculatedfor

FieldName

Formula

Datasheet

Field

T_RFC

T_RFC>=(tRFC×fEMIF_CLK)-1

tRC=68ns(min)(1)

6

T_RP

T_RP>=(tRP×fEMIF_CLK)-1

tRP=20ns(min)

1

T_RCD

T_RCD>=(tRCD×fEMIF_CLK)-1

tRCD=20ns(min)

1

T_WR

T_WR>=(tWR×fEMIF_CLK)-1

tRDL=2CLK=20ns(min)(2)

1

T_RAS

T_RAS>=(tRAS×fEMIF_CLK)-1

tRAS=49ns(min)

4

T_RC

T_RC>=(tRC×fEMIF_CLK)-1

tRC=68ns(min)

6

T_RRD

T_RRD>=(tRRD×fEMIF_CLK)-1

tRRD=14ns(min)

1

(1)TheSamsungdatasheetdoesnotspecifyatRFCvalue.Instead,SamsungspecifiestRCastheminimumautorefreshperiod.

(2)TheSamsungdatasheetdoesnotspecifyatWRvalue.Instead,SamsungspecifiestRDLaslastdataintorowprechargeminimum

delay.

Figure17-28.SDRAMTimingRegister(SDTIMR)

31

27

26

24

23

22

20

19

18

16

00110

001

0

001

0

001

T_RFC

T_RP

Rsvd

T_RCD

Rsvd

T_WR

15

12

11

8

7

6

4

3

0

0100

0110

0

001

0000

T_RAS

T_RC

Rsvd

T_RRD

Reserved

652

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExampleConfiguration

17.4.2.1.3SDRAMSelfRefreshExitTimingRegister(SDSRETR)SettingsfortheEMIFtoK4S641632H-

TC(L)70Interface

TheSDRAMselfrefreshexittimingregister(SDSRETR)shouldbeprogrammedsecondtosatisfythetXSR

timingrequirementfromtheK4S641632H-TC(L)70datasheet.Table17-39showsthecalculationofthe

propervaluetoprogramintotheT_XSfieldofthisregister.Basedonthiscalculation,avalueof6hshould

bewrittentoSDSRETR.Figure17-29showshowSDSRETRshouldbeprogrammed.

Table17-39.RRCalculationfortheEMIFtoK4S641632H-TC(L)70Interface

ValuefromK4S641632H-TC(L)70

ValueCalculatedfor

FieldName

Formula

Datasheet

Field

T_XS

T_XS>=(tXSR×fEMIF_CLK)-1

tRC=68ns(min)(1)

6

(1)TheSamsungdatasheetdoesnotspecifyatXSRvalue.Instead,SamsungspecifiestRCastheminimumrequiredtimeafterCKE

goinghightocompleteselfrefreshexit.

Figure17-29.SDRAMSelfRefreshExitTimingRegister(SDSRETR)

31

16

0000000000000000

Reserved

15

5

4

0

00000000000

00110

Reserved

T_XS

17.4.2.1.4SDRAMRefreshControlRegister(SDRCR)SettingsfortheEMIFtoK4S641632H-TC(L)70

Interface

TheSDRAMrefreshcontrolregister(SDRCR)shouldnextbeprogrammedtosatisfytherequiredrefresh

rateoftheK4S641632H-TC(L)70.Table17-40showsthecalculationofthepropervaluetoprograminto

theRRfieldofthisregister.Basedonthiscalculation,avalueof61AhshouldbewrittentoSDRCR.

Figure17-30showshowSDRCRshouldbeprogrammed.

Table17-40.RRCalculationfortheEMIFtoK4S641632H-TC(L)70Interface

FieldName

Formula

Values

ValueCalculatedforField

RR

RR≤fEMIF_CLK×tRefreshPeriod

FromSDRAMdatasheet:tRefreshPeriod

RR=1562cycles=61Ahcycles

/ncycles

=64ms;ncycles=4096EMIFclock

rate:fEMIF_CLK=100MHz

Figure17-30.SDRAMRefreshControlRegister(SDRCR)

31

19

18

16

0000000000000

000

Reserved

Reserved

15

13

12

0

000

0011000011010(61Ah)

Reserved

RR

653

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ExampleConfigurationwww.ti.com

17.4.2.1.5SDRAMConfigurationRegister(SDCR)SettingsfortheEMIFtoK4S641632H-TC(L)70

Interface

Finally,thefieldsoftheSDRAMconfigurationregister(SDCR)shouldbeprogrammedasdescribedin

Table17-37toproperlyinterfacewiththeK4S641632H-TC(L)70device.Basedonthesesettings,avalue

of4720hshouldbewrittentoSDCR.Figure17-31showshowSDCRshouldbeprogrammed.TheEMIFis

nowreadytoperformreadandwriteaccessestotheSDRAM.

Table17-41.SDCRFieldValuesFortheEMIFtoK4S641632H-TC(L)70Interface

Field

Value

Purpose

SR

0

ToavoidplacingtheEMIFintotheselfrefreshstate

NM

1

ToconfiguretheEMIFfora16-bitdatabus

CL

011b

ToselectaCASlatencyof3

BIT11_9LOCK

1

ToallowtheCLfieldtobewritten

IBANK

010b

Toselect4internalSDRAMbanks

PAGESIZE

0

Toselectapagesizeof256words

Figure17-31.SDRAMConfigurationRegister(SDCR)

31

30

29

28

24

0

0

0

00000

SR

Reserved

Reserved

Reserved

23

18

17

16

000000

0

0

Reserved

Reserved

Reserved

15

14

13

12

11

9

8

0

1

0

0

011

1

Reserved

NM

Reserved

Reserved

CL

BIT11_9LOCK

7

6

4

3

2

0

0

010

0

000

Reserved

IBANK

Reserved

PAGESIZE

654

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Setup

Strobe

Hold

TA

tD

tD

tELQV

tH

tSU

tEHQZ

Data

EMIF_CLKEMIF_nCS[n]EMIF_A/EMIF_BAEMIF_DEMIF_nOE



www.ti.comExampleConfiguration

17.4.2.2ConfiguringtheFlashInterface

ThissectiondescribeshowtoconfiguretheEMIFtointerfacewiththetwoofSHARPLH28F800BJE-

PTTL908MbFlashmemorywithaclockfrequencyoffEMIF_CLK=100MHz.Theexampleassumesthatone

flashisconnectedtoEMIF_nCS2andtheothertoEMIF_nCS3.

17.4.2.2.1Asynchronous1ConfigurationRegister(CE2CFG)SettingsfortheEMIFtoLH28F800BJE-

PTTL90Interface

Theasynchronous1configurationregister(CE2CFG)andasynchronous2configurationregister

(CE3CFG)aretheonlyregistersthatisnecessarytoprogramforthisasynchronousinterface(assuming

thatoneFlashisconnectedtoEMIF_nCS[2]andtheothertoEMIF_nCS[3].TheSSbit(inbothregisters)

shouldbesetto1toenableSelectStrobeModeandtheASIZEfield(inbothregisters)shouldbesetto1

toselecta16-bitinterface.TheotherfieldsinthisregistercontroltheshapingoftheEMIFsignals,andthe

propervaluescanbedeterminedbyreferringtotheACCharacteristicsintheFlashdatasheetandthe

devicedatasheet.Basedonthefollowingcalculations,avalueof886225BDhshouldbewrittento

CE2CFG.Table17-42andTable17-43showthepertinentACCharacteristicsforreadsandwritestothe

Flashdevice,andFigure17-32andFigure17-33showtheassociatedtimingwaveforms.Finally,

Figure17-34showsprogrammingtheCEnCFG(n=2,3)withthecalculatedvalues.

Table17-42.ACCharacteristicsforaReadAccess

ACCharacteristic

Device

Definition

Min

Max

Unit

tSU

EMIF

Setuptime,readEMIF_DbeforeEMIF_CLK

6.5

ns

high

tH

EMIF

Dataholdtime,readEMIF_DafterEMIF_CLK

1

ns

high

tD

EMIF

Outputdelaytime,EMIF_CLKhightooutput

7

ns

signalvalid

tELQV

Flash

nCEtoOutputDelay

90

ns

tEHQZ

Flash

nCEHightoOutputinHighImpedance

55

ns

Table17-43.ACCharacteristicsforaWriteAccess

ACCharacteristic

Device

Definition

Min

Max

Unit

tAVAV

Flash

WriteCycleTime

90

ns

tELEH

Flash

nCEPulseWidthLow

50

ns

tEHEL

Flash

nCEPulseWidthHigh(notshownin

30

ns

Figure17-33)

Figure17-32.LH28F800BJE-PTTL90toEMIFReadTimingWaveforms

655

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Setup

Strobe

Hold

tAVAV

tELEH

DataAddressEMIF_CLKEMIF_nCS[n]EMIF_A/EMIF_BAEMIF_DEMIF_nWE



ExampleConfigurationwww.ti.com

Figure17-33.LH28F800BJE-PTTL90toEMIFWriteTimingWaveforms

TheR_STROBEfieldshouldbesettomeetthefollowingequation:

R_STROBE>=(tD+tELQV+tSU)×fEMIF_CLK-1

R_STROBE>=(7ns+90ns+6.5ns)×100MHz-1

R_STROBE>=9.35

R_STROBE=10

TheR_HOLDfieldmustbelargeenoughtosatisfytheEMIFDataholdtime,tH:

R_HOLD>=tH×fEMIF_CLK-1

R_HOLD>=1ns×100MHz-1

R_HOLD>=-0.9

TheR_HOLDfieldmustalsocombinewiththeTAfieldtosatisfytheFlash'snCEHightoOutputinHigh

Impedancetime,tEHQZ:

R_HOLD+TA>=(tD+tEHQZ)×fEMIF_CLK-2

R_HOLD+TA>=(7ns+55ns)×100MHz-2

R_HOLD+TA>=4.2

ThelargestvaluethatcanbeprogrammedintotheTAfieldis3h,thereforethefollowingvaluescanbe

used:

R_HOLD=2

TA=3

ForWrites,theW_STROBEfieldshouldbesettosatisfytheFlash'snCEPulseWidthconstraint,tELEH:

W_STROBE>=tELEH×fEMIF_CLK-1

W_STROBE>=50ns×100MHz-1

W_STROBE>=4

656

ExternalMemoryInterface(EMIF)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExampleConfiguration

TheW_SETUPandW_HOLDfieldsshouldcombinetosatisfytheFlash'snCEPulseWidthHigh

constraint,tEHEL,whenperformingback-to-backwrites:

W_SETUP+W_HOLD>=tEHEL×fEMIF_CLK-2

W_SETUP+W_HOLD>=30ns×100MHz-2

W_SETUP+W_HOLD>=1

Inaddition,theentireWriteaccesslengthmustsatisfytheFlash'sminimumWriteCycleTime,tAVAV:

W_SETUP+W_STROBE+W_HOLD>=tAVAV×fEMIF_CLK-3

W_SETUP+W_STROBE+W_HOLD>=90ns×100MHz-3

W_SETUP+W_STROBE+W_HOLD>=6

SolvingtheaboveequationsfortheWritefieldsresultsinthefollowingpossiblesolution:

W_SETUP=1

W_STROBE=5

W_HOLD=0

Addinga10ns(1cycle)margintoeachoftheperiods(excludingTAwhichisalreadyatitsmaximum)in

thisexampleproducesthefollowingrecommendedvalues:

W_SETUP=2h

W_STROBE=6h

W_HOLD=1h

R_SETUP=1h

R_STROBE=Bh

R_HOLD=3h

TA=3h

Figure17-34.AsynchronousmConfigurationRegister(m=1,2)(CEnCFG(n=2,3))

31

30

29

26

25

24

1

0

0010

00

SS

EW

W_SETUP

W_STROBE

23

20

19

17

16

0110

001

0

W_STROBE

W_HOLD

R_SETUP

15

13

12

7

6

4

3

2

1

0

001

001011

011

11

01

R_SETUP

R_STROBE

R_HOLD

TA

ASIZE

657

SPNU499B–November2012–RevisedAugust2013

ExternalMemoryInterface(EMIF)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter18

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

Thischapterdescribestheparameteroverlaymodule(POM).

Topic...........................................................................................................................Page

18.1Introduction....................................................................................................659

18.2ModuleOperation............................................................................................660

18.3ControlRegisters............................................................................................661

658

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Wrapper

AddressData

POM

Address

Data

EMIFSCR

ProgramMemoryExternalMemory(overlay)ext.Mem BusInternalRAM



www.ti.comIntroduction

18.1Introduction

Inmanyapplicationsitisimportanttobeabletochangecertainparametersintheprogramwithouthaving

tore-flashthedeviceandimmediatelytestthesechangeseitherinahardware-in-the-loopsimulationorin

arealenvironment.

ThePOMprovidesamechanismtoredirectaccessestonon-volatilememoryintoavolatilememory

internalorexternaltothedevice.ThedatarequestedbytheCPUwillbefetchedfromtheoverlaymemory

insteadofthemainnon-volatilememory.Theoverlaymemorycanbeaccesseddirectlybyothermasters

inthesystemtoprovideaneasyupdatepathofthestoreddata.Othermasterscanbeforexamplethe

mainCPU,DMA,orJTAG.

18.1.1MainFeatures

•Redirectsprogrammemoryaccessestointernalorexternalmemory(overlaymemory)

•Upto8MByteofexternaloverlaymemory

•Providesupto32programmablememoryregionstoreplacenon-volatilememory

–Programmableregionstartaddress

–Programmableregionsize(64Bytesupto256kBytesinpowerof2steps)

18.1.2BlockDiagram

Figure18-1.SystemOverlayBlockDiagram

659

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ProgramMemory

OverlayMemory

64Byte0x00001000

1kByte0x00024400

1kByte0x00000000

64Byte0x00000400



ModuleOperationwww.ti.com

18.2ModuleOperation

ThePOMhasupto32programmableregions.WhenevertheCPUrequestsdatafromthenon-volatile

memorywhichaddressfallsintooneoftheprogrammedregions,thePOMwillrequestthedatafromthe

overlaymemory.Waitstateswillbeautomaticallyinserteduntilthedataisavailablefromtheoverlay

memory.Thisensuresthattheoverlaymemoryhasthesame(inthecasethatthelatencyfromoverlay

memoryislessthantheprogrammemorylatency)orsloweraccesstimethantheprogrammemory.

ThePOMdoesnotprovideafeaturetowriteintotheoverlaymemory.Thewritehastobeperformed

directlytothememorymappedaddressspaceoftheoverlaymemory.

Whenthemoduleisdisabled,noredirectionofaccesswillbeperformed.

NOTE:TheoverlayfeatureisnotavailableforanyotherbusmastersotherthanthemainCPU.Any

attempttoaccessoverlaidmemoryviathePOMbyanyotherbusmasterwouldresultina

deadlocksituation(systemhang).Otherbusmastersneedtoaccessthetargetinternalor

externalmemorydirectly.

18.2.1DecodeRegions

Thereare32decoderegions.Regionsaredefinedbyastartaddressandaregionsize.Thestartaddress

is23bitswidetocoverthemaximum8MByteaddressspacedefinedforprogrammemory.Theregion

sizerangesfrom64Bytesto256kByteswithastepsizeofpowerof2.Ifaregionsizeof0isselected,

theregionisdisabled.Tosupportoverlaymemorywhichhasnotthesamesizeastheprogrammemory,

anoverlaystartaddresswhichis23bitswide,canbespecified.Thesizeoftheoverlayregionisthesame

astheprogrammemoryregion.Thestartaddressofbothprogrammemoryandoverlaymemoryregion

havetobeamultipleoftheprogrammedregionsize.Whentheaddressoftheaccessfallsintooneofthe

programmedregions,thePOMwillstartrequestingthedatafromtheoverlaymemoryaddress,basedon

theoverlaystartaddress.Iftheaddressfallsintomultipleoverlappingregions,theregionwiththelowest

numberhashighestpriorityandonlyonereadrequestfromoverlaymemorywillbeinitiated.Thisavoids

thatregionswiththesameprogrammemoryaddress,butdifferentoverlaymemoryaddresses,request

differentdata.

Figure18-2.RegionDefinitionExample

18.2.2BusErrorsonAccessesviaPOM

IncaseareadbythePOMcannotbecompletedwithin32HCLKcyclesduetoothertransactionsongoing

orduetootherbuserrors,atimeoutmechanismisimplemented.Thistimeoutmechanismisdisabledby

defaultandmustbeenabledbywriting0xAtothe"EnableTimeout"(ETO)fieldofthePOMglobalcontrol

register(POMGLBCTRL,address=0xFFA04000).

AnabortisgeneratedtothehostCPUwhenthistimeoutoccurs.ThehostCPUrespondsbyeithertaking

theprefetchabortorthedataabortexceptionsdependingonthenatureoftheaccessthatcausedthe

timeout.

660

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

TheaborthandlercancheckiftheTOflagissetinthePOMmodule'sflagregister(POMFLG,address=

0xFFA0400C).Ifthisflagisset,thentheapplicationcanassumethatthetimeoutiscausedbythePOM

accessnotcompleting.Thisflagmustbeclearedsothatanyfurtherabortsarenotmisinterpretedas

havingbeencausedbytimeoutonaPOMaccess.

18.3ControlRegisters

Table18-1liststheParameterOverlayModuleregisters.Theregisterssupportonly32-bitwrites.The

offsetisrelativetotheassociatedperipheralselect.

Table18-1.POMRegisters

Address

Acronym

RegisterDescription

Section

FFA04000

POMGLBCTRL

POMGlobalControlRegister

Section18.3.1

FFA04004h

POMREV

POMRevisionID

Section18.3.2

FFA04008h

POMCLKCTRL

POMClockGateControlRegister

Section18.3.3

FFA0400Ch

POMFLG

POMStatusRegister

Section18.3.4

FFA04200h,

POMPROGSTARTx

POMProgramRegionStartAddressRegisterx

Section18.3.5

FFA04210h,...,

FFA043F0h

FFA04204h,

POMOVLSTARTx

POMOverlayRegionStartAddressRegisterx

Section18.3.6

FFA04214h,...,

FFA043F4h

FFA04208h,

POMREGSIZEx

POMRegionSizeRegisterx

Section18.3.7

FFA04218h,...,

FFA043F8h

FFA04F00h

POMITCTRL

POMIntegrationControlRegister

Section18.3.8

FFA04FA0h

POMCLAIMSET

POMClaimSetRegister

Section18.3.9

FFA04FA4h

POMCLAIMCLR

POMClaimClearRegister

Section18.3.10

FFA04FB0h

POMLOCKACCESS

POMLockAccessRegister

Section18.3.11

FFA04FB4h

POMLOCKSTATUS

POMLockStatusRegister

Section18.3.12

FFA04FB8h

POMAUTHSTATUS

POMAuthenticationStatusRegister

Section18.3.13

FFA04FC8h

POMDEVID

POMDeviceIDRegister

Section18.3.14

FFA04FCCh

POMDEVTYPE

POMDeviceTypeRegister

Section18.3.15

FFA04FD0h

POMPERIPHERALID4

POMPeripheralID4Register

Section18.3.16

FFA04FD4h

POMPERIPHERALID5

POMPeripheralID5Register

Section18.3.17

FFA04FD8h

POMPERIPHERALID6

POMPeripheralID6Register

Section18.3.18

FFA04FDCh

POMPERIPHERALID7

POMPeripheralID7Register

Section18.3.19

FFA04FE0h

POMPERIPHERALID0

POMPeripheralID0Register

Section18.3.20

FFA04FE4h

POMPERIPHERALID1

POMPeripheralID1Register

Section18.3.21

FFA04FE8h

POMPERIPHERALID2

POMPeripheralID2Register

Section18.3.22

FFA04FECh

POMPERIPHERALID3

POMPeripheralID3Register

Section18.3.23

FFA04FF0h

POMCOMPONENTID0

POMComponentID0Register

Section18.3.24

FFA04FF4h

POMCOMPONENTID1

POMComponentID1Register

Section18.3.25

FFA04FF8h

POMCOMPONENTID2

POMComponentID2Register

Section18.3.26

FFA04FFCh

POMCOMPONENTID3

POMComponentID3Register

Section18.3.27

661

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.1POMGlobalControlRegister(POMGLBCTRL)

ThisregistercontainsakeytoenablethePOMmodule.Logicremainsresetuntilthiskeyisset.

Figure18-3.POMGlobalControlRegister(POMGLBCTRL)[address=FFA04000h]

31

23

22

16

OTADDR

Reserved

R/WP-60h

R-0

15

12

11

8

7

4

3

0

Reserved

ETO

Reserved

ON/OFF

R-0

R/WP-5h

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-2.POMGlobalControlRegister(POMGLBCTRL)FieldDescriptions

Bit

Field

Value

Description

31-23

OTADDR

60h

OverlaytargetAddress.

Thesebitsdeterminetheupperaddressbitsofthetargetoverlayaddress.Writingadifferent

valuetothisfieldwillsteerthePOMaccesstoadifferentlocationinthe4GBaddressspace.

Theapplicationmustensurethattheoverlaymemoryaddresspointstoavalidinternalor

externalmemorylocation.

22-12

Reserved

0

Readsreturnzeros,writeshavenoeffect.

11-8

ETO

EnableTimeout.RefertoSection18.2.2formoredetailsonthetimeouterror.

Ah

Timeoutforbustransactionsisenabled.

Allothervalues

Timeoutforbustransactionsisdisabled.Thetimeoutisdisabledbydefault.

7-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3-0

ON/OFF

TurnfunctionalityofPOMonoroff.

Ah

POMisfunctional.

Allothervalues

POMisheldinreset.

NOTE:Thekeyshouldbewrittento5h,toavoidsinglebitflipsinadvertentlyturningonthe

module.

662

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.2POMRevisionID(POMREV)

ThisregistercontainstherevisionIDofthePOMmodule.

Figure18-4.POMRevisionID(POMREV)[address=FFA04004h]

31

30

29

28

27

16

SCHEME

Reserved

FUNC

R-1h

R-0

R-A03h

15

11

10

8

7

6

5

0

RTL

MAJOR

CUSTOM

MINOR

R-0

R-1h

R-0

R-8h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-3.POMRevisionID(POMREV)FieldDescriptions

Bit

Field

Value

Description

31-30

SCHEME

1h

UsedtodistinguishbetweendifferentIDschemes.

29-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-16

FUNC

A03h

IndicatestheSWcompatiblemodulefamily

15-11

RTL

0

RTLversionnumber

10-8

MAJOR

1h

Majorrevisionnumber

7-6

CUSTOM

0

Indicatesadevicespecificimplementation

5-0

MINOR

8h

Minorrevisionnumber

18.3.3POMClockGateControlRegister(POMCLKCTRL)

ThisregisterisforTIinternaluseonly.

Figure18-5.POMClockGateControlRegister[address=FFA04008h]

31

16

Reserved

R-0

15

0

Reserved

CLKGATEOFF

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-4.POMClockGateControlRegister(POMCLKCTRL)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

CLKGATEOFF

0

Donotmodifythisbit.Leaveitinitsresetstate.ModifyingthebitwhilethePOMmoduleis

switchedoncanresultinunexpectedbehavior.

663

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.4POMStatusRegister(POMFLG)

ThisregisterprovidesPOMstatusinformation.

Figure18-6.POMStatusRegister[address=FFA0400Ch]

31

16

Reserved

R-0

15

0

Reserved

TO

R-0

R/CP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-5.POMStatusRegister(POMFLG)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

TO

Timeout.

ThisflagsignalsatimeoutconditiononthelastCPUreadaccessthroughthePOM.Thisflagisonly

updatedwhenthePOMmoduleisenabled(ON/OFF=Ah).

0

Notimeoutoccurred.Writinga0hasnoeffect.

1

Timeoutoccurred.Thisflagcanbeclearedbywritinga1toit.

664

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.5POMProgramRegionStartAddressRegisterx(POMPROGSTARTx)

Thisregistercontainsthestartaddressoftheregioninprogrammemory.xgoesfrom0to31,sinceupto

32regionscanbedefined.

Figure18-7.POMProgramRegionStartRegisterx(POMPROGSTARTx)[address=FFA04200h,

FFA04210h,...,FFA043F0h]

31

23

22

16

Reserved

STARTADDRESS

R-0

R/WP-0

15

0

STARTADDRESS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-6.POMProgramRegionStartAddressRegisterx(POMPROGSTARTx)FieldDescriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-0

STARTADDRESS

Definesthestartaddressoftheprogrammemoryregion.Thestartaddresshastobea

multipleoftheregionsize.

NOTE:Iftheregionstartaddressisprogrammedtoanon-regionsizeboundary,theregionwill

beginatthenextlowerregionsizeboundary.

18.3.6POMOverlayRegionStartAddressRegisterx(POMOVLSTARTx)

Thisregistercontainsthestartaddressoftheregioninoverlaymemory.xgoesfrom0to31,sinceupto

32regionscanbedefined.

Figure18-8.POMOverlayRegionStartRegisterx(POMOVLSTARTx)[address=FFA04204h,

FFA04214h,...,FFA043F4h]

31

23

22

16

Reserved

STARTADDRESS

R-0

R/W-0

15

0

STARTADDRESS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-7.POMOverlayRegionStartAddressRegisterx(POMOVLSTARTx)FieldDescriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-0

STARTADDRESS

Definesthestartaddressoftheoverlaymemoryregion.Thestartaddresshastobea

multipleoftheregionsize.

NOTE:Iftheregionstartaddressisprogrammedtoanon-regionsizeboundary,theregionwill

beginatthenextlowerregionsizeboundary.

665

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.7POMRegionSizeRegisterx(POMREGSIZEx)

Thisregistercontainstheregionsizeforbothprogrammemoryandoverlaymemory.xgoesfrom0to31,

sinceupto32regionscanbedefined.

Figure18-9.POMRegionSizeRegisterx(POMREGSIZEx)[address=FFA04208h,FFA04218h,...,

FFA043F8h]

31

16

Reserved

R-0

15

4

3

0

Reserved

SIZE

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-8.POMRegionSizeRegisterx(POMREGSIZEx)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

SIZE

Regionsize

0

Regiondisabled

1h

64Bytes

2h

128Bytes

Dh

256kBytes

Eh-Fh

Reserved

NOTE:Iftheregionisenabledbywritinganon-zerovaluetotheSIZEbitfield,itwilltakesome

numberofVCLKcyclesuntilthewritetakeseffect.Ifduringthistimeanaccesstothe

programmedregionistakingplaceandthePOMisalreadyenabledinthePOMGLBCTRL

register,iteitherdecodestheprevioussettingoftheSIZEfieldortheaccesswillbedirected

totheprogrammemorywhentheregionwasdisabled.

18.3.8POMIntegrationControlRegister(POMITCTRL)

ThisisaCoreSightregisterandisfordebugpurposeonly.Theintegrationfunctionalityisnot

implemented.Theregisterreads00000000.

Figure18-10.POMIntegrationControlRegister(POMITCTRL)[address=FFA04F00h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-9.POMIntegrationControlRegister(POMITCTRL)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

666

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.9POMClaimSetRegister(POMCLAIMSET)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregisterallowsdifferentmasterstoclaim

thecontrolforthePOMmodule.ThereisnocontrolfunctionalityforPOMregisteraccessesimplemented.

Theonlyfunctionalityofthesebitsistoindicatethatanothermasteriscontrollingthemodule.

Figure18-11.POMClaimSetRegister(POMCLAIMSET)[address=FFA04FA0h]

31

16

Reserved

R-0

15

2

1

0

Reserved

SET1

SET0

R-0

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-10.POMClaimSetRegister(POMCLAIMSET)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SET1

Themoduleisclaimed

0

Read:Thisclaimtagbitisnotimplemented

Write:noeffect

1

Read:Thisclaimtagisimplemented

Write:Setclaimtag

0

SET0

Themoduleisclaimed

0

Read:Thisclaimtagbitisnotimplemented

Write:noeffect

1

Read:Thisclaimtagisimplemented

Write:Setclaimtag

667

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.10POMClaimClearRegister(POMCLAIMCLR)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregisterallowsdifferentmasterstoclaim

thecontrolforthePOMmodule.ThereisnocontrolfunctionalityforPOMregisteraccessesimplemented.

Theonlyfunctionalityofthesebitsistoindicatethatanothermasteriscontrollingthemodule.

Figure18-12.POMClaimClearRegister(POMCLAIMCLR)[address=FFA04FA4h]

31

16

Reserved

R-0

15

2

1

0

Reserved

CLR1

CLR0

R-0

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-11.POMClaimClearRegister(POMCLAIMCLR)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

CLR1

Themoduleisclaimed

Read:Currentclaimtagvalue

0

Write:noeffect

1

Write:Clearclaimtag

0

CLR0

Themoduleisclaimed

Read:Currentclaimtagvalue

0

Write:noeffect

1

Write:Clearclaimtag

668

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.11POMLockAccessRegister(POMLOCKACCESS)

ThisisaCoreSightregisterandisfordebugpurposeonly.Theregisterreads00000000.

Figure18-13.POMLockAccessRegister(POMLOCKACCESS)[address=FFA04FB0h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-12.POMLockAccessRegister(POMLOCKACCESS)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

18.3.12POMLockStatusRegister(POMLOCKSTATUS)

ThisisaCoreSightregisterandisfordebugpurposeonly.Theregisterreads00000000.

Figure18-14.POMLockStatusRegister(POMLOCKSTATUS)[address=FFA04FB4h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-13.POMLockStatusRegister(POMLOCKSTATUS)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

18.3.13POMAuthenticationStatusRegister(POMAUTHSTATUS)

ThisisaCoreSightregisterandisfordebugpurposeonly.Theregisterreads00000000.

Figure18-15.POMAuthenticationStatusRegister(POMAUTHSTATUS)[address=FFA04FB8h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-14.POMAuthenticationStatusRegister(POMAUTHSTATUS)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

669

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.14POMDeviceIDRegister(POMDEVID)

ThisisaCoreSightregisterandisfordebugpurposeonly.Theregisterreads00000000.

Figure18-16.POMDeviceIDRegister(POMDEVID)[address=FFA04FC8h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-15.POMDeviceIDRegister(POMDEVID)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

18.3.15POMDeviceTypeRegister(POMDEVTYPE)

ThisisaCoreSightregisterandisfordebugpurposeonly.ThedevicetyperegisterdefinestheCoreSight

moduleclass.

Figure18-17.POMDeviceTypeRegister(POMDEVTYPE)[address=FFA04FCCh]

31

16

Reserved

R-0

15

8

7

4

3

0

Reserved

SubType

MajorType

R-0

R-0

R-4h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-16.POMDeviceTypeRegister(POMDEVTYPE)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-4

SubType

0

Other

3-0

MajorType

4h

DebugControl

670

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.16POMPeripheralID4Register(POMPERIPHERALID4)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregistershowstheperipheralidentification

oftheCoreSightcomponent.

Figure18-18.POMPeripheralID4Register(POMPERIPHERALID4)[address=FFA04FD0h]

31

16

Reserved

R-0

15

8

7

4

3

0

Reserved

4KBCount

JEP106ContinuationCode

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-17.POMPeripheralID4Register(POMPERIPHERALID4)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-4

4KBCount

0

Only4KBimplemented

3-0

JEPContinuation

0

JEP106Code

Code

18.3.17POMPeripheralID5Register(POMPERIPHERALID5)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregisterreads00000000.

Figure18-19.POMPeripheralID5Register(POMPERIPHERALID5)[address=FFA04FD4h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-18.POMPeripheralID5Register(POMPERIPHERALID5)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

671

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.18POMPeripheralID6Register(POMPERIPHERALID6)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregisterreads00000000.

Figure18-20.POMPeripheralID6Register(POMPERIPHERALID6)[address=FFA04FD8h]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-19.POMPeripheralID6Register(POMPERIPHERALID6)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

18.3.19POMPeripheralID7Register(POMPERIPHERALID7)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregisterreads00000000.

Figure18-21.POMPeripheralID7Register(POMPERIPHERALID7)[address=FFA04FDCh]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-20.POMPeripheralID7Register(POMPERIPHERALID7)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

672

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.20POMPeripheralID0Register(POMPERIPHERALID0)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregistershowstheperipheralidentification

oftheCoreSightcomponent.

Figure18-22.POMPeripheralID0Register(POMPERIPHERALID0)[address=FFA04FE0h]

31

16

Reserved

R-0

15

8

7

0

Reserved

PartNumber

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-21.POMPeripheralID0Register(POMPERIPHERALID0)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

PartNumber

0

Reads0,sincePOMREVdefinesthemodule

18.3.21POMPeripheralID1Register(POMPERIPHERALID1)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregistershowstheperipheralidentification

oftheCoreSightcomponent.

Figure18-23.POMPeripheralID1Register(POMPERIPHERALID1)[address=FFA04FE4]

31

16

Reserved

R-0

15

8

7

4

3

0

Reserved

JEP106IdentityCode

PartNumber

R-0

R-7h

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-22.POMPeripheralID1Register(POMPERIPHERALID1)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-4

JEP106Identity

7h

PartofTIJEDECnumber

Code

3-0

PartNumber

0

Reads0,sincePOMREVdefinesthemodule

673

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.22POMPeripheralID2Register(POMPERIPHERALID2)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregistershowstheperipheralidentification

oftheCoreSightcomponent.

Figure18-24.POMPeripheralID2Register(POMPERIPHERALID2)[address=FFA04FE8h]

31

16

Reserved

R-0

15

8

7

4

3

2

0

Reserved

Revision

JEDEC

JEP106IdentityCode

R-0

R-0

R-1h

R-1h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-23.POMPeripheralID2Register(POMPERIPHERALID2)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-4

Revision

0

Reads0,sincePOMREVdefinesthemodule

3

JEDEC

1h

IndicatesJEDECassignedvalue

2-0

JEP106Identity

1h

JEDEC+JEP106IdentityCode(POMPERIPHERALID2)+JEP106IdentityCode

Code

(POMPERIPHERALID1)formTIJEDECIDof97h

18.3.23POMPeripheralID3Register(POMPERIPHERALID3)

ThisisaCoreSightregisterandisfordebugpurposeonly.Thisregisterreads00000000.

Figure18-25.POMPeripheralID3Register(POMPERIPHERALID3)[address=FFA04FECh]

31

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table18-24.POMPeripheralID3Register(POMPERIPHERALID3)FieldDescriptions

Bit

Field

Value

Description

31-0

Reserved

0

Readreturns0.Writeshavenoeffect.

674

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

18.3.24POMComponentID0Register(POMCOMPONENTID0)

ThisisaCoreSightregisterandisfordebugpurposeonly.

Figure18-26.POMComponentID0Register(POMCOMPONENTID0)[address=FFA04FF0h]

31

16

Reserved

R-0

15

8

7

0

Reserved

Preamble

R-0

R-Dh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-25.POMComponentID0Register(POMCOMPONENTID0)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

Preamble

Dh

Preamble

18.3.25POMComponentID1Register(POMCOMPONENTID1)

ThisisaCoreSightregisterandisfordebugpurposeonly.

Figure18-27.POMComponentID1Register(POMCPOMPONENTID1)[address=FFA04FF4h]

31

16

Reserved

R-0

15

8

7

4

3

0

Reserved

ComponentClass

Preamble

R-0

R-9h

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-26.POMComponentID1Register(POMCOMPONENTID1)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-4

ComponentClass

9h

CoreSightComponent

3-0

Preamble

0

Preamble

675

SPNU499B–November2012–RevisedAugust2013

ParameterOverlayModule(POM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

18.3.26POMComponentID2Register(POMCOMPONENTID2)

ThisisaCoreSightregisterandisfordebugpurposeonly.

Figure18-28.POMComponentID2Register(POMCPOMPONENTID2)[address=FFA04FF8h]

31

16

Reserved

R-0

15

8

7

0

Reserved

Preamble

R-0

R-5h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-27.POMComponentID2Register(POMCOMPONENTID2)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

Preamble

5h

Preamble

18.3.27POMComponentID3Register(POMCOMPONENTID3)

ThisisaCoreSightregisterandisfordebugpurposeonly.

Figure18-29.POMComponentID3Register(POMCPOMPONENTID3)[address=FFA04FFCh]

31

16

Reserved

R-0

15

8

7

0

Reserved

Preamble

R-0

R-B1h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table18-28.POMComponentID3Register(POMCOMPONENTID3)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

Preamble

B1h

Preamble

676

ParameterOverlayModule(POM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter19

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

Thischapterdescribestheanalogtodigitalconverter(ADC)module.

Topic...........................................................................................................................Page

19.1Overview........................................................................................................678

19.2Introduction....................................................................................................679

19.3BasicFeaturesandUsageoftheADC................................................................682

19.4AdvancedConversionGroupConfigurationOptions...........................................688

19.5ADCModuleBasicInterrupts............................................................................692

19.6ADCModuleDMARequests..............................................................................693

19.7ADCMagnitudeThresholdInterrupts.................................................................694

19.8ADCSpecialModes.........................................................................................695

19.9ADCResults’RAMSpecialFeatures..................................................................702

19.10ADEVTPinGeneralPurposeI/OFunctionality...................................................704

19.11ADCControlRegisters....................................................................................706

677

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




AD2EVT

AD1IN[7:0]AD1EVTADSIN[23:8]

ADC112 BitADC112 BitCPUInterface

VCCADVSSADADREFHIADREFLO



Overviewwww.ti.com

19.1Overview

Themicrocontrollerincludestwo12-bitADCmodules.

ThemainfeaturesofeachoftheADCmodulesare:

•Selectable10-bitor12-bitresolution

•Successive-approximation-registerarchitecture

•Threeconversiongroups–Group1,Group2andEventGroup

•Allthreeconversiongroupscanbeconfiguredtobehardware-triggered;group1andgroup2canalso

betriggeredbysoftware

•Conversionresultsarestoredina64-wordmemory(SRAM)

–These64wordsaredividedbetweenthethreeconversiongroupsandareconfigurablebysoftware

–AccessestotheconversionresultRAMareprotectedbyparity

•FlexibleoptionsforgeneratingDMArequestsfortransferringconversionresults

•Multichannelconversionsperformedinascendingorder,onechannelatatime

•Singleorcontinuousconversionmodes

•Embeddedself-testlogicforinputchannelfailuremode(open/short)detection

•Embeddedcalibrationlogicforoffseterrorcorrection

•EnhancedPower-downmode

•Externaleventpin(ADEVT)totriggerconversions

–ADEVTisalsoprogrammableasgeneral-purposeI/O

•Eighthardwareeventstotriggerconversions

Thetwoinstancesofthe12-bitADCmodulesonthemicrocontrollershare16analoginputchannels.The

connectionsareshowninFigure19-1.

Figure19-1.ChannelAssignmentsofTwoADCCores

•ADC1supports24channels

•ADC2supports16channels,allofwhicharesharedwithADC1

•Thereferencevoltages,aswellasoperatingsupplyandground,aresharedbetweenthetwoADC

cores.

678

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ADIN23ADIN0

Self-TestandCalibrationCell

24–1InputMultiplexor10/12-bitAnalog-to-DigitalSuccessiveApproximationConverter

SequencerandADCResults’MemoryInterfaceControllerADCResults’Memory10/12-bitVBUSInterfaceforAccesstoADCRegistersAIN

ADREFHIADREFLOVCCADVSSADControlSignalsEndOfConversionResult

VBUSP



www.ti.comIntroduction

19.2Introduction

Thissectionpresentsabrieffunctionaldescriptionoftheanalog-to-digitalconverter(ADC)module.

Figure19-2illustratesthecomponentsoftheADCmodule.

Figure19-2.ADCBlockDiagram

679

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DigitalResult4096x(InputVoltage-AD)REFLO(AD-AD)REFHIREFLO---------------------------------------------------------------------------------------0.5–=

DigitalResult1024x (InputVoltage -AD)REFLOAD-ADREFHIREFLO---------------------------------------------------------------------------------------0.5–=



Introductionwww.ti.com

19.2.1InputMultiplexor

Theinputmultiplexor(MUX)connectstheselectedinputchanneltotheAINinputoftheADCcore.The

ADC1modulesupportsupto24inputsasshowninFigure19-2.TheADC2modulesupportsupto16

inputs.Thesequencerselectsthechanneltobeconverted.

19.2.2Self-TestandCalibrationCell

TheADCincludesspecifichardwarethatallowsasoftwarealgorithmtodetectopen/shortonanADC

analoginput.ItalsoallowstheapplicationprogramtocalibratetheADC.AlsoseeSection19.8.1and

Section19.8.2.

19.2.3Analog-to-DigitalConverterCore

TheADCcoreisacombinationvoltagescaling,chargeredistributionSuccessiveApproximationRegister

(SAR)basedanalog-to-digitalconverter.Thecorecanbeconfiguredforoperationin10-bitresolution

(default)or12-bitresolution.Thisiscontrolledbythesequencerlogic.Thisselectionappliestoall

conversionsperformedbytheADCmodule.Itisnotpossibletoconvertsomechannelswitha12-bit

resolutionandsomewitha10-bitresolution.

Asingleconversionfromananaloginputtoadigitalconversionresultoccursintwodistinctperiods:

•SamplingPeriod:

–ThesequencergeneratesaSTARTsignaltotheADCcoretosignalthestartofthesampling

period.

–Theanaloginputsignalissampleddirectlyontotheswitchedcapacitorarrayduringthisperiod,

providinganinherentsample-and-holdfunction.

–ThesamplingperiodendsonefullADCLKafterthefallingedgeoftheSTARTsignal.

–Thesequencercancontrolthesamplingperioddurationbyconfiguringtheconversiongroup’s

sampletimecontrolregister(ADEVSAMP,ADG1SAMP,ADG2SAMP).Thisregistercontrolsthe

timeforwhichtheSTARTsignalstayshigh.

•ConversionPeriod:

–TheconversionperiodstartsonefullADCLKafterthefallingedgeofSTART.

–OnebitoftheconversionresultisoutputoneachrisingedgeofADCLKintheconversionperiod,

startingwiththemost-significantbitfirst.

–Theconversionperiodis12ADCLKcyclesincaseofa12-bitADC,andis10ADCLKcyclesin

caseofa10-bitADC.

–TheADCcoregeneratesanEnd-Of-Conversion(EOC)signaltothesequencerattheendofthe

conversionperiod.Atthistimethecomplete12-,or10-bitconversionresultisavailable.

–ThesequencercapturestheADCcoreconversionresultoutputassoonasEOCisdrivenHigh.

Theanalogconversionrangeisdeterminedbythereferencevoltages:ADREFHIandADREFLO.ADREFHIisthe

topreferencevoltageandisthemaximumanalogvoltagethatcanbeconverted.Ananaloginputvoltage

equaltoADREFHIresultsinanoutputcodeof0x3FFfor10-bitresolutionand0xFFFfor12-bitresolution.

ADREFLOisthebottomreferencevoltageandistheminimumanalogvoltagethatcanbeconverted.

ApplyinganinputequaltoADREFLOresultsinanoutputcodeof0x000.BothADREFHIandADREFLOmustbe

chosennottoexceedtheanalogpowersupplies:VCCADandVSSADrespectively.Inputvoltagesbetween

ADREFHIandADREFLOproduceaconversionresultgivenby(Equation28)for10-bitresolutionand

(Equation29)for12-bitresolution.

(28)

(29)

680

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroduction

19.2.4Sequencer

ThesequencercoordinatestheoperationsoftheADC,includingtheinputmultiplexor,theADCcore,and

theresultmemory.Inaddition,thelogicofthesequencersetsthestatusregisterflagswhenthe

conversionisongoing,stopped,orfinished.

Allthefeaturesofthesequencerarediscussedindetailinthefollowingsectionsofthisdocument.

19.2.5ConversionGroups

Severalapplicationsrequiregroupsofchannelstobeconvertedusingasingletriggersourceforexample.

Therecouldalsobesomegroupsofchannelsidentifiedwhichrequireaspecificsettingoftheacquisition

time.TheADCmodulesupportsthreeconversiongroupsforthispurpose–Group1,Group2andthe

EventGroup.

Anyoftheavailableanaloginputchannelscanbeassignedtoanyoftheconversiongroups.Thisalso

allowsaparticularchanneltoberepeatedlysampledbyselectingitinmultiplegroups.Thereisan

inherentpriorityschemeusedwhenmultipleconversiongroupsaretriggeredatonce.TheEventGroupis

thehighest-priority,followedbytheGroup1andthentheGroup2.

TheEventGroupisalwayshardwareevent-triggered.Group1andGroup2aresoftware-triggeredby

defaultandcanbeconfiguredtobehardware-,orevent-triggeredaswell.Thetriggeringofconversionsin

eachgroupisdiscussedinSection19.3.6.

Eachconversiongrouphasaseparatesetofcontrolregistersto:

•Selecttheinputchannelstobeconverted

•Configurethemodeofconversion:singleconversionsequenceorcontinuousconversions

•Configuretheinputchannelsamplingtime

•Configuretheinterruptand/orDMArequestgenerationconditions

681

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






BasicFeaturesandUsageoftheADCwww.ti.com

19.3BasicFeaturesandUsageoftheADC

ThissectiondescribestheusageofthebasicfeaturesoftheADCmodule.

19.3.1HowtoSelectBetween12-bitand10-bitResolutions

The10/12-BITfieldoftheADCOperatingModeControlRegister(ADOPMODECR)configurestheADCto

bein10-bitor12-bitresolutionmode.

•If10/12-BIT=0,themoduleisin10-bitresolutionmode.Thisisthedefaultmodeofoperation.

•If10/12-BIT=1,themoduleisin12-bitresolutionmode.

19.3.2HowtoSetUptheADCLKSpeed

TheADCsequencergeneratestheclockfortheADCcore,ADCLK.TheADCcoreusestheADCLK

signalforitstiming.TheADCLKisgeneratedbydividingdowntheinputclocktotheADCmodule,which

istheVBUSPinterfaceclock,VCLK.A5-bitfield(PS)intheADCClockControlRegister(ADCLOCKCR)

isusedtodividedowntheVCLKby1upto32.TheADCLKvalidfrequencyrangeisspecifiedinthe

devicedatasheet.

fADCLK=fVCLK/(PS+1)

ThemaximumfrequencyforADCLKisspecifiedinthedevicedatasheet.

19.3.3HowtoSetUptheInputChannelAcquisitionTime

ThesignalacquisitiontimeforeachgroupisseparatelyconfigurableusingtheADG1SAMP[11:0],

ADG2SAMP[11:0],andADEVSAMP[11:0]registers.

TheacquisitiontimeisspecifiedintermsofADCLKcyclesandrangesfromaminimumof2ADCLK

cyclestoamaximumof4098ADCLKcycles.

Forexample,Group1acquisitiontime,tACQG1=G1SAMP[11:0]+2,inADCLKcycles.

Theminimumacquisitiontimeisspecifiedinthedevicedatasheet.Thistimealsodependsonthe

impedanceofthecircuitconnectedtotheanaloginputchannelbeingconverted.

19.3.4HowtoSelectanInputChannelforConversion

TheADCmoduleneedstobeenabledfirstbeforeselectinganinputchannelforconversion.TheADC

modulecanbeenabledbysettingtheADCENbitintheADCOperatingModeControlRegister

(ADOPMODECR).Multipleinputchannelscanbeselectedforconversionineachgroup.Onlyoneinput

channelisconvertedatatime.Thechannelstobeconvertedareconfiguredinoneormoreofthethree

conversiongroups’channelselectionregisters.ChannelstobeconvertedinGroup1areconfiguredinthe

Group1Channel-SelectRegister(ADG1SEL),thosetobeconvertedinGroup2areconfiguredinthe

Group2Channel-SelectRegister(ADG2SEL),andthosetobeconvertedintheEventGroupare

configuredintheEventGroupChannel-SelectRegister(ADEVSEL).

19.3.5HowtoSelectBetweenSingleConversionSequenceorContinuousConversions

Eachgrouphasitsownmodecontrolregister.TheCONVMODEfieldofthesecontrolregistersallowthe

applicationtoselectbetweenasingleconversionsequenceorcontinuousconversionmode.

NOTE:Selectingcontinuousconversionmodeforallthreegroups

Allthreeconversiongroupscannotbeconfiguredtobeinacontinuousconversionmode.If

theapplicationconfiguresthegroupmodecontrolregisterstoenablecontinuousconversion

modeforallthreegroups,thentheGroup2willbeautomaticallybeconfiguredtobeina

singleconversionsequencemode.

Withconversionsongoingincontinuousconversionmode,iftheCONVMODEfieldofagroupiscleared,

thenthatgroupswitchestothesingleconversionsequencemode.Conversionsforthisgroupwillstop

onceallchannelsselectedforthatgrouphavebeenconverted.

682

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comBasicFeaturesandUsageoftheADC

19.3.6HowtoStartaConversion

TheconversiongroupsGroup1andGroup2aresoftware-triggeredbydefault.Aconversioninthese

groupscanbestartedjustbywritingthedesiredchannelstotherespectiveChannel-SelectRegisters.For

example,inordertoconvertchannels0,1,2,and3inGroup1andchannels8,9,10,and11inGroup2,

theapplicationjusthastowrite0x0000000FtoADG1SELand0x00000F00toADG2SEL.TheADC

modulewillstartbyservicingthegroupthatwastriggeredfirst,Group1inthisexample.

Theconversionsforallgroupsareperformedinascendingorderofthechannelnumber.FortheGroup1

theconversionswillbeperformedintheorder:channel0first,followedbychannel1,thenchannel2,and

thenchannel3.TheGroup2conversionswillbeperformedintheorder:channels8,9,10,and11.

TheEventGroupisonlyhardware-triggered.Thereareuptoeighthardwareeventtriggersourcesdefined

fortheADCmodule.Checkthedevicedatasheetforacompletelistingoftheseeighthardwaretrigger

options.

ThetriggersourcetobeusedneedstobeconfiguredintheADEVSRCregister.Similarregistersalso

existfortheGroup1andGroup2asthesecanalsobeconfiguredtobeevent-triggered.

Thepolarityoftheeventtriggerisalsoconfigurable,withafallingedgebeingthedefault.

AnEventGroupconversionstartswhenatleastonechannelisselectedforconversioninthisgroup,and

whenthedefinedeventtriggeroccurs.

Ifanyconversiongroupisconfiguredtobeinacontinuousconversionmode,thenitneedstoonlybe

triggeredonce.Allthechannelsselectedforconversioninthatgroupwillbeconvertedrepeatedly.

19.3.7HowtoKnowWhentheGroupConversionisCompleted

Eachconversiongrouphasastatusflagtoindicatewhenitsconversionhasended.SeeADEVSR,

ADG1SRandADG2SR.Thisbitissetwhenaconversionsequenceforagroupends.Thisbitdoesis

alwayssetifagroupisconfiguredforcontinuousconversions.

19.3.8HowResultsareStoredintheResults’Memory

TheADCstorestheconversionresultsinthreeseparatememoryregionsintheADCResults’RAM,one

regionforeachgroup.Eachmemoryregionisastackofbuffers,witheachbuffercapableofholdingone

conversionresult.ThenumberofbuffersallocatedforeachgroupisprogrammedbyconfiguringtheADC

moduleregistersADBNDCRandADBNDEND.

ADBNDCRcontainstwo9-bitpointersBNDAandBNDB.BNDA,BNDBandBNDENDareusedto

partitionthetotalmemoryavailableintothreememoryregionsasshowninFigure19-3.BothBNDAand

BNDBarepointersreferencedfromthestartoftheresults’memory.BNDAspecifiesthenumberofbuffers

allocatedfortheEventGroupconversionresultsinunitsoftwobuffers;BNDBspecifiesthenumberof

buffersallocatedfortheEventGroupplusGroup1inunitsoftwobuffers.PleaserefertoSection19.11.23

formoredetailsonconfiguringtheADCresults’memory.

ADBNDENDcontainsa3-bitfieldcalledBNDENDthatconfiguresthetotalmemoryavailable.TheADC

modulecansupportupto1024buffers.Thedevicesupportsamaximumof64buffersforboththeADC

modules.

683

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BNDEND

BNDA

BNDB0x00EventMemoryDepthGroup1MemoryDepthGroup2MemoryDepth

Total Memory Depth



BasicFeaturesandUsageoftheADCwww.ti.com

Figure19-3.FIFOImplementation

•NumberofbuffersforEventGroup=2xBNDA

•NumberofbuffersforGroup1=2x(BNDB–BNDA)

•NumberofbuffersforGroup2=Totalnumberofbuffers–2xBNDB

19.3.9HowtoReadtheResultsfromtheResults’Memory

TheCPUcanreadtheconversionresultsinoneoftwoways:

a)ByusingtheconversionresultsmemoryasaFIFOqueue,or

b)Byaccessingtheconversionresultsmemorydirectly

19.3.9.1ReadingConversionResultsfromaFIFO

Theconversionresultsforeachgroupcanbeaccessedviaarangeofaddressesprovidedtofacilitatethe

useoftheARMCortex-R4CPU’sLoad-Multiple(LDM)instruction.AsinglereadperformedusingtheLDR

instructioncanalsobeusedtoreadoutasingleconversionresult.Theresultsarereadoutfromthe

group’smemoryregionasaFIFOqueuebyreadingfromanylocationinsidethisaddressrange.The

conversionresultthatgotstoredfirstgetsreadfirst.Aresultthatisreadfromthememoryinthismethod

isremovedfromthememory.Forexample,areadfromanyaddressintherangeADEVBUFFER(offset

0x90to0xAF)pullsoutoneconversionresultfromtheEventGroupmemory.

Figure19-4.FormatofConversionResultReadfromFIFO,12-bitADC

31

30

29

28

27

26

25

24

23

22

21

20

19

18

17

16

OffsetAddress

Register

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

EV

EV_CHID

Reserved

0x90to0xAF

EMPTY

ADEVBUFFER

Reserved

EV_DR

G1

G2_CHID

Reserved

0xB0to0xCF

EMPTY

ADG1BUFFER

Reserved

G1_DR

G2

G2_CHID

Reserved

0xD0to0xEF

EMPTY

ADG2BUFFER

Reserved

G2_DR

684

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Conversionword0Conversionword1Conversionword2Conversionword62Conversionword630xFF3E00FC0xFF3E01F80xFF3E00080xFF3E00040xFF3E0000

ADC10xFF3A00FC0xFF3A01F80xFF3A00080xFF3A00040xFF3A0000

ADC2



www.ti.comBasicFeaturesandUsageoftheADC

Figure19-5.FormatofConversionResultReadfromFIFO,10-bitADC

31

30

29

28

27

26

25

24

23

22

21

20

19

18

17

16

OffsetAddress

Register

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

0x90to0xAF

EV

EV_CHID

EV_DR

ADEVBUFFER

EMPTY

0xB0to0xCF

EV

G1_CHID

G1_DR

ADG1BUFFER

EMPTY

0xD0to0xEF

EV

G2_CHID

G2_DR

ADG2BUFFER

EMPTY

Optiontoreadchannelidalongwithconversionresult:

Theapplicationhasanoptiontoreadthechannelidalongwiththeconversionresult.Thisiscontrolledby

theCHIDfieldofthegroup’smodecontrolregister.Iftheoptiontoreadthechannelidisnotselected,the

channelidfieldoftheconversionresultreadsaszeros.

ProtectionagainstreadingfromemptyFIFO:

Thereisalsoahardwaremechanismtoprotecttheapplicationfromreadingpastthenumberofnew

conversionresultsheldintheFIFO.OnceallavailableconversionresultshavebeenreadoutoftheFIFO

bytheapplication,asubsequentreadfromtheFIFOcausesthemechanismtoindicatethattheFIFOis

emptybysettingtheEMPTYfield.

Debug/EmulationSupport:

Fordebugpurposes,eachconversiongroupalsoprovidesanaddressthattheapplicationcanreadfrom

forextractingthegroup’sconversionresults.However,nostatusflagsforaconversiongroupareaffected

byreadingfromtheseemulationbufferaddresses.Forexample,readingfromADEVEMUBUFFER(offset

0xF0)returnsthenextresultintheEventGroupbufferbutdoesnotactuallyremovethatresultfromthe

bufferorchangetheamountofdataheldinthebuffer.

19.3.9.2ReadingConversionResultsDirectlyfromtheConversionResults’Memory

Theconversionresultmemoryispartofthedevice’smemorymap.ThebaseaddressfortheADC1result

memoryis0xFF3E0000,whilethatfortheADC2resultmemoryis0xFF3A0000.

Figure19-6.ADCMemoryMapping

Theapplicationcanidentifytheaddressrangesforeachofthethreememoryregionsforthethree

conversiongroupsafterperformingthesegmentationasdescribedinSection19.3.8.Itisuptothe

applicationtoreadthedesiredresultsfromthethreeconversiongroups.Theformatsoftheconversion

resultswhenreadingfromRAMdirectlyareshownbelow.

685

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BNDABNDB

Channel0Channel1Channel2Channel0Channel1Channel2

Channel 4Channel7Channel8Channel4Channel7Channel8

Channel3Channel5Channel6Channel3Channel5Channel6.........EVRAMADDRG1RAMADDRG2 RAMADDRBNDEND0x00

Event Group MemoryGroup 1 MemoryGroup 2 Memory



BasicFeaturesandUsageoftheADCwww.ti.com

Figure19-7.FormatofConversionResultDirectlyReadfromADCRAM,12-bitADC

ADC

Reserved

channelid[4]

RAM

channelid[3–0]

12-bitconversionresult

address

Figure19-8.FormatofConversionResultDirectlyReadfromADCRAM,10-bitADC

ADC

Reserved

RAM

Rsvd.

channelid[4–0]

10-bitconversionresult

address

NotethatthereisnoEMPTYfieldtoprotecttheapplicationfromreadingdatathathasbeenpreviously

read.

Eachgroupdoeshaveaseparateregisterwhichholdstheaddressinthegroup’sresultmemorywhere

theADCwillwritethenextconversionresult.ThesearetheADEVRAMWRADDR,ADG1RAMWRADDR

andADG2RAMWRADDRregisters.Theapplicationcanusethisinformationtocalculatehowmanyvalid

conversionresultsareavailabletoberead.

BenefitofreadingconversionresultsdirectlyfromADCRAM:

Theapplicationdoesnothavetoreadoutconversionresultssequentiallyasinthecaseofreadingfroma

FIFO.Asaresult,theapplicationcanselectivelyreadtheconversionresultsforanyparticularinput

channelofinterestwithouthavingtoreadotherchannels’conversionresults.

19.3.9.3Example

Supposethatchannels0,1,and2areselectedforconversionintheEventGroup,channels4,7,and8

areselectedforconversioningroup1,andchannels3,5,and6areselectedforconversioningroup2.

Theconversionresultswillgetstoredinthethreememoryregionsasshownbelow:

Figure19-9.ConversionResultsStorage

686

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comBasicFeaturesandUsageoftheADC

SupposethattheCPUwantstoreadouttheresultsfortheEventGroupfromaFIFOqueue.TheCPU

needstoreadfromanyaddressintherangeADEVBUFFER(offset0x90to0xAF)multipletimes,ordoa

“loadmultiple”fromthisrangeofaddresses.ThiswillcausetheADCtoreturntheresultsforchannel0,

thenchannel1,thenchannel2,thenchannel0,andsoonforeachreadaccesstothisaddressrange.

Nowsupposethattheapplicationwantstoreadouttheresultsforthegroup1fromtheRAMdirectly.The

conversionresultsforthegroup1areaccessiblestartingfromaddressADCRAMBaseAddress+BNDA.

Also,itisknownthatthefirstresultatthisaddressisfortheinputchannel4,thenextoneisforinput

channel7,andsoon.Sotheapplicationcanselectivelyreadtheconversionresultsforonlyonechannelif

sodesired.

19.3.10HowtoStopaConversion

Agroup’sconversioncanbestoppedbyclearingthegroup’schannelselectregister.

19.3.11ExampleSequenceforBasicConfigurationofADCModule

ThefollowingsequenceisnecessarytoconfiguretheADCtoconvertchannels0,2,4,and8insingle-

conversionmodeusingGroup1:

1.Write0totheResetControlRegister(ADRSTCR)toreleasethemodulefromtheresetstate

2.Write1totheADCENbitoftheOperatingModeControlRegister(ADOPMODECR)toenablethe

ADCstatemachine

3.ConfiguretheADCLKfrequencybyprogrammingthedesireddividerintotheClockControlRegister

(ADCLOCKCR)

4.Configuretheacquisitiontimeforthegroupthatistobeused.Forexample,configuretheGroup1

SamplingTimeControlRegister(ADG1SAMP)tosettheacquisitiontimeforGroup1.

5.SelectthechannelsthatneedtobeconvertedinGroup1bywritingtotheGroup1ChannelSelect

Register(ADG1SEL).Inthisexample,avalueof0x115needstobewrittentoADG1SELinorderto

selectchannels0,2,4,and8forconversioninGroup1.

•TheADCsequencerwillstarttheGroup1conversionsassoonasthewritetotheADG1SEL

registeriscompleted.

6.WaitfortheGP1ENDbittobesetintheGroup1ConversionStatusRegister(ADG1SR).Thisbitgets

setwhenallthechannelsselectedforconversioninGroup1areconvertedandtheresultsarestoredin

theGroup1memory.

7.ReadtheconversionresultsbyreadingfromtheGroup1FIFOaccesslocation(ADG1BUFFER)orby

readingdirectlyfromtheGroup1results’memory.

687

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






AdvancedConversionGroupConfigurationOptionswww.ti.com

19.4AdvancedConversionGroupConfigurationOptions

ThebelowTable19-1showstheoperatingmodecontrolregistersandthestatusregistersforeachofthe

threeconversiongroups.Theregisteraddressesshownareoffsetsfromthebaseaddress.TheADC1

registerframebaseaddressis0xFFF7C000andtheADC2registerframebaseaddressis0xFFF7C200.

Table19-1.ADCGroups’OperatingModeControlandStatusRegisters

31

30

29

28

27

26

25

24

23

22

21

20

19

18

17

16

OffsetAddress

Register

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

No

Reset

Reserved

On

ChnSel

0x010

ADEVMODECR

OVR

EV

EV

EV

EVMO

FRZ

Reserved

EV_DATA_FMT

Reserved

Rsvd.

CHID

RAM

8BIT

DE

EV

IGN

No

Reset

Reserved

On

ChnSel

0x014

ADG1MODECR

OVR

G1

G1

G1HW

G1

G1MO

FRZ

Reserved

G1_DATA_FMT

Reserved

CHID

RAM

TRIG

8BIT

DE

G1

IGN

No

Reset

Reserved

On

ChnSel

0x018

ADG2MODECR

OVR

G2

G2

G2HW

G2

G2MO

FRZ

Reserved

G2_DATA_FMT

Reserved

CHID

RAM

TRIG

8BIT

DE

G2

IGN

Reserved

EV

0x06

MEM

EV

EV

EV

CADEVSR

Reserved

EMPT

BUSY

STOP

END

Y

Reserved

G1

0x070

MEM

G1

G1

G1

ADG1SR

Reserved

EMPT

BUSY

STOP

END

Y

Reserved

G2

0x074

MEM

G2

G2

G2

ADG2SR

Reserved

EMPT

BUSY

STOP

END

Y

Thefollowingsectionsdescribeeachofthesegroupconfigurationoptionsseparately.

19.4.1GroupTriggerOptions

TheGroup1andGroup2operatingmodecontrolregistershaveanextracontrolbit:HWTRIG.Thisbit

configuresthegrouptobehardwareevent-triggeredinsteadofsoftware-triggered,whichisthedefault.

Whenagroupisconfiguredtobeevent-triggered,thegroupconversionstartswhenatleastonechannel

isselectedforconversioninthisgroup,andwhenthedefinedeventtriggeroccurs.Theeventtrigger

sourceisdefinedforeachgroupintheADEVSRC,ADG1SRCandtheADG2SRCregisters.Theactual

connectionsusedastheeventtriggersourcesaredefinedinthedevicedatasheetforboththeADC

modules.

19.4.2SingleorContinuousConversionModes

TheEVMODE,G1MODE,andG2MODEbitsareusedtoselectbetweeneithersingleorcontinuous

conversionmodeforeachofthethreegroups.

688

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comAdvancedConversionGroupConfigurationOptions

19.4.2.1SingleConversionMode

Aconversiongroupconfiguredtobeinsingle-conversionmodegetsservicedonlyoncebytheADCfor

eachgrouptrigger.ThetriggercanbeasoftwaretriggerasinthecaseofGroup1andGroup2bydefault,

oritcouldbeahardwareeventtriggerasinthecaseoftheEventGrouporGroup1orGroup2.

Theentireconversionsequence,fromtheacceptanceofthegroupconversionrequesttotheendofthe

lastchannel’sconversion,isflaggedforeachgroupbythecorrespondingBUSYbitinthatgroup’sstatus

register.Aftersingle-conversionmodeisstarted,theBUSYbitisreadas1untiltheconversionofthelast

channeliscomplete.TheENDbitforthegroupissetonceallthechannelsinthatgroupareconverted.

Forexample,saychannels0,2,4,and6areselectedforconversioninGroup1insingle-conversion

mode.WhentheGroup1getsserviced,theADCwillstartconversionforchannel0,thenchannel2,then

channel4,andthenchannel6.ItwillthenstopservicingtheGroup1,settheGP1ENDstatusbit,andlook

toservicetheEventGrouportheGroup2,ifrequired.

19.4.2.2ContinuousConversionMode

Aconversiongroupconfiguredtobeincontinuous-conversionmodegetsservicedbytheADC

continuously.Thegroupstillneedstobetriggeredappropriatelyforthefirstconversiontostart.The

conversionsareperformedcontinuouslythereafter.

Theentireconversionsequence,fromtheacceptanceofthegroupconversionrequesttotheendofthe

lastchannel’sconversion,isflaggedforeachgroupbythecorrespondingBUSYbitinthatgroup’sstatus

register.Aftercontinuous-conversionmodeisstarted,theBUSYbitisreadas1aslongasthe

continuous-conversionmodeforthisgroupisselected.

Asanexample,saythechannels0,2,4,and6areselectedforconversioninGroup1,nowincontinuous-

conversionmode.WhentheGroup1getsserviced,theADCwillcompleteconversionsforchannels0,2,4

and6,andthenlooktoservicetheEventGrouportheGroup2.OnceitisdoneservicingtheEventGroup

ortheGroup2,itwillreturntoservicetheGroup1again.TheGroup1doesnotneedtobetriggeredagain

fortherepeatedconversion.

NOTE:Configuringallconversiongroupsincontinuousconversionmode

Allthethreegroupscannotoperateincontinuous-conversionmodeatthesametime.Ifthe

applicationprogramconfiguresallthreegroupstobeincontinuous-conversionmode,the

Group2isautomaticallyresettosingle-conversionmode,andtheG2MODEbitinthe

ADG2MODECRregisterisclearedtoreflectthesingle-conversionmodeofGroup2.

19.4.3ConversionGroupFreezeCapability

TheADCmodulehasaninherentpriorityorderbetweenthethreeconversiongroups.Thisgrouppriority

determinestheorderofconversionincasemultiplegroupsaretriggered.Thepriorityofconversions

betweenthethreegroupsindescendingorderis:

1.EventGroup

2.Group1

3.Group2

Examplesofconversiongrouppriority:

•IfanEventGroupconversionisongoinginsingleconversionsequencemodeandGroup2andGroup1

conversionsarerequested,thentheADCwillfinishconversionofchannelsselectedinEventGroup,

thenswitchovertoconvertingchannelsselectedinGroup1,andthenconvertchannelsselectedin

Group2.

•IfGroup1conversionsareongoingincontinuousconversionmodeandGroup2conversionis

requested,thentheADCwillcompleteconvertingthecurrentchannelforGroup1andswitchoverto

convertingchannelsselectedinGroup2.ThenewconversionrequestforGroup2hasahigherpriority

thanthependingcontinuousconversionrequestforGroup1.

689

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






AdvancedConversionGroupConfigurationOptionswww.ti.com

Theconversiongroupfreezecapabilityallowstheapplicationtooverridethisdefaultprioritybetweenthe

conversiongroups.EnablingthefreezecapabilityallowstheADCtofreezeahigher-priorityconversion

group’sconversionswheneverthereisarequestforconversioninanother(lower-priority)group.

Forexample,settingtheFRZEVbitintheADEVMODECRregisterwillallowtheADCtofreezeongoing

EventGroupconversionswheneverthereisapendingrequest,oranewrequestforaGroup1orGroup2

conversion.TheconversionsfortheEventGroupwillbefrozenaslongastheGroup1orGroup2

conversionsareactive.OncetheGroup1orGroup2conversionsarecompleted,theEventGroup

conversionsstartfromwheretheywerefrozen.

Whileagroup’sconversionsarefrozen,thegroup’sSTOPstatusbitisset.Thisbitisclearedoncethe

group’sconversionsarerestarted.

19.4.4ConversionGroupMemoryOverrunOption

AnoverrunconditionoccurswhentheADCmoduletriestostoremoreconversionresultstoagroup’s

results’memorywhichisalreadyfull.Inthiscase,theADCallowstwooptions.

IftheOVRRAMIGNbitinthegroup’soperatingmodecontrolregister(ADEVMODECR,ADG1MODECR,

ADG1MODECR)isset,thentheADCmoduleignoresthecontentsofthegroup’sresults’memoryand

wrapsaroundtooverwritethememorywiththeresultsofnewconversions.

IftheOVRRAMIGNbitisnotset,thentheapplicationprogramhastoreadoutthegroup’sresults’

memoryuponanoverruncondition;onlythencantheADCcontinuetowritenewresultstothememory.

19.4.5ResponseonWritingNon-ZeroValuetoConversionGroup’sChannelSelect

Register

Iftheapplicationwritesanon-zerovaluetoagroup’schannelselectregisterwhilethatgroup’s

conversionsarealreadybeingserviced,thenthatgroup’sconversionswillberestartedwiththenew

configurationprogrammedinthechannelselectregisters.

ThefollowingrulesapplyintermsoftheeffectontheADCconversionsequence:

•Ifthenewconversionrequestcomesfromthesamegroupastheongoingconversion,thenthe

ongoingconversionwillbestoppedinwhicheverstageitisin,andthenewsequenceofconversions

willbestarted.

•Ifthenewconversionrequestcomesfromaseparategroup,thentheongoingchannel’sconversion

willbecompletedbeforestartingthenewsequenceofconversions.

Thefollowingrulesapplyintermsoftheeffectonthegroup’sresultsmemory:

•Ifagroupconversionisongoingorisfrozen,writinganon-zerovaluetothegroup’schannelselect

registerwillalsoresetitsresultsFIFO.ThisdoesnotclearthecontentsoftheresultsFIFO;onlythe

ADCmoduleisallowedtooverwritetheFIFO’scontentswithnewconversionresultsstartingfromthe

firstlocation.

•Ifthegroupconversioniscompleted(CONV<GRP>ENDflagisset),orthegroupisnotbeingused,

thenwritinganon-zerovaluetothegroup’schannelselectregisterwilleitherberesetornot

dependingonthevalueoftheNoResetOnChnSelbitforthatgroup(ADEVMODECR,ADG1MODECR,

ADG1MODECR).

–IftheNoResetOnChnSelbitis0,thenthegroup’sFIFOwillbereset.

–IftheNoResetOnChnSelbitis1,thenthegroup’sFIFOwillnotbereset.

690

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comAdvancedConversionGroupConfigurationOptions

19.4.6ConversionResultSizeonReading:8-bit,10-bitor12-bit

Someapplicationsdonotneedthefull12-bitresolutionoftheADCmodulesonthedeviceandcanwork

with8-bitor10-bitconversionresults.

19.4.6.1ADCConfiguredin12-bitResolution

ThemodecontrolregisterforeachconversiongroupcontainsafieldcalledDATA_FMT,whichdefinesthe

formatoftheconversionresultreadoutoftheresultRAM,whenaccessedasaFIFO.

TheDATA_FMTfieldisencodedasfollows:

•IfDATA_FMT=00,thecomplete12-bitconversionresultisreadoutoftheFIFO.

•IfDATA_FMT=01,the12-bitconversionresultisright-shiftedby2andtheresulting10-bitresultis

readoutoftheFIFO.

•IfDATA_FMT=10,the12-bitconversionresultisright-shiftedby4andtheresulting8-bitresultisread

outoftheFIFO.

Thiscontrolfieldisnoteffectivewhentheapplicationchoosestoaccesstheconversionresultmemory

directly.Inthatcase,theapplicationcanchoosetomaskoffthenumberofbitsasrequired.

19.4.6.2ADCConfiguredin10-bitResolution

TheDATA_FMTfieldisnoteffectiveinthismodeandtheapplicationhasthechoicetoreadeitherthefull

10-bitconversionresultoran8-bitconversionresult.Thisiscontrolledbythe8BITfieldofthegroup’s

operatingmodecontrolregister.

•If8BIT=0,thecomplete10-bitconversionresultisreadoutoftheFIFO.

•If8BIT=1,the10-bitconversionresultisright-shiftedby2andtheresulting8-bitresultisreadoutof

theFIFO.

19.4.7OptiontoReadGroupChannelIdAlongwithConversionResult

TheADCmoduleallowstheapplicationprogramtoalsoreadouttheanaloginputchannelnumberalong

withitsconversionresult.ThiscapabilityisenabledbysettingtheCHIDbitinthegroup’soperatingmode

controlregister.

IftheCHIDbitisnotset,thebits[14-10]areforcedto00000whentheconversionresultsarereadout

fromthegroup’sresults’FIFO.

IftheCHIDbitisset,thebits[14-10]inthegroup’sresults’memorycontaintheinputchannelnumberto

whichtheconversionresultbelongs.

NOTE:ActualStorageofChannelId

RegardlessofwhethertheCHIDbitissetornot,thechannelnumberisalwaysstoredin

thememoryalongwiththeconversionresult.TheCHIDbitonlyaffectswhetherthechannel

numberisavailablewiththeconversionresultwhenthegroup’smemoryisread.

Therefore,theCHIDbitforagroupcanbechangeddynamicallywithoutaffectingthat

group’songoingconversions.

691

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCModuleBasicInterruptswww.ti.com

19.5ADCModuleBasicInterrupts

ThissectiondescribesthebasicinterruptsgeneratedbytheADCmodule.

19.5.1GroupConversionEndInterrupt

TheADCmodulesetsthegroup’sconversionendflag(EVEND,G1END,orG2END)inthatgroup’s

interruptflagregister(ADEVINTFLG,ADG1INTFLG,ADG2INTFLG)whenallthechannelsselectedfor

conversioninthatgroupareconverted.Thiscausesagroupconversionendinterrupttobegeneratedif

thisinterruptisenabledbysettingthegroup’sENDINTENcontrolbit(EVENDINTEN,G1ENDINTEN,

orG2ENDINTEN).

Thisinterruptcanbeeasilyusedforconversiongroupsconfiguredtobeinthesingle-conversionmode.

Theapplicationprogramcanreadouttheconversionresults,changethegroup’sconfigurationif

necessary,andrestarttheconversionsbytriggeringthegroupfromwithintheinterruptserviceroutine.

Forgroupsconfiguredtobeincontinuousconversionmode,thisinterruptconditionisnotpracticalasthe

conversionsarealwaysinprogress.Inthiscase,theGroupMemoryThresholdInterruptismorepractical

astheapplicationcanallowaprogrammablenumberofconversionresultstoaccumulatebefore

interruptingtheCPU.

19.5.2GroupMemoryThresholdInterrupt

TheADCmodulehastheabilitytogenerateaninterruptforafixednumberofconversionsforeachgroup.

Agroupmemorythresholdregisterdetermineshowmanyconversionresultsmustbeinagroup’smemory

regionbeforetheCPUisinterrupted.ThisfeaturecanbeusedtosignificantlyreducetheCPUloadwhen

usinginterruptsforreadingtheconversionresults.

Thegroup’sthresholdregisterneedstobeconfiguredbeforethegroupconversionsaretriggered.This

thresholdregistervaluebehaveslikeadown-counter,whichdecrementseachtimetheADCwritesa

conversionresulttothisgroup’smemory.Thiscounterisincrementedeachtimetheapplicationprogram

readsaconversionresultfromtheresults’memorybyaccessingtheFIFOqueue.Simultaneousread(by

applicationprogram)andwrite(byADCmodule)operationsfromthegroup’sresults’memoryleavethe

thresholdcounterunchanged.

Thethresholdcountercandecrementpast0andbecomenegative.Italwaysincrementsbacktoits

originalvaluewhenthememoryregionisemptied.Todeterminehowmanysamplesareinthememory

regionatagivenmoment,thethresholdcountercanbesubtractedfromtheoriginallyconfiguredthreshold

count.

Wheneverthethresholdcountertransitionsfrom+1to0,itsetsthegroup’sthresholdinterruptflag,and

theCPUisinterruptedifthegroup’sthresholdinterruptisenabled.TheCPUisexpectedtoclearthe

interruptflagafterreadingtheconversionresultsfromthememory.

Theinterruptflagisnotsetwhenthethresholdcounterstaysat0ortransitionsfrom-1to0.

19.5.3GroupMemoryOverrunInterrupt

AninterruptcanbegeneratedforeachgroupifthenumberofADCconversionsforthatgroupexceedthe

numberofbuffersallocatedforthatconversiongroup.Theapplicationprogramcanchoosetoreadoutall

theconversionresultsusingtheCPUortheDMA.Alternatively,theapplicationprogramcansetthe

group’sOVRRAMIGNbitandallowtheADCmoduletooverwritethegroup’sresults’memorycontents

withnewconversionresults.

692

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCModuleDMARequests

19.6ADCModuleDMARequests

ThissectiondescribesthecapabilitiesoftheADCmoduletotakeadvantageofthePlatformDMA

controllermodule.TheADCmodulecangenerateaDMArequestundertwoconditions:

19.6.1DMARequestforEachConversionResultWrittentotheResults’Memory

Inthismode,theADCmodulewillgeneratethefirstDMArequestassoonasaconversionresultgets

writtentothegroup’sresults’memory.Subsequentwritestotheresults’memorywillcauseDMArequests

tobegenerated.ThismodeallowsasmalleramountofADCresults’memorytosufficeforanapplication.

ThisDMArequestgenerationisenabledbysettingthegroup’sDMAENbitinthegroup’sDMAcontrol

register.TheBLOCKXFERbitinthisregistermustbeleftcleared(default)ifaDMArequestisdesiredto

begeneratedfornewresultsgettingwrittentotheresults’memory.

19.6.2DMARequestforaFixedNumberofConversionResults

Thismodeisenabledbysettingboththegroup’sDMAENandthegroup’sBLOCKXFERbitsinthe

group’sDMAcontrolregisters.

Inthismode,aDMArequestwillbegeneratedforaspecifiednumberofconversionresultsbeing

availableinthegroup’sresults’memory.Thenumberofconversionresultsdesiredareconfiguredusing

thegroup’sBLOCKSfieldinthecontrolregisters.

Forexample,iftheBLOCKcountisconfiguredfor10,thenADCmodulewillgenerateaDMArequestat

theendof10thconversion.DMAcontrollershouldcompletereadingout10databeforenextsetof10

conversionscomplete.

NOTE:UsageofBlockDMAtransferswithThresholdInterrupts

ItisnotrecommendedtoenabletheblockDMAtransfersforagroupatthesametimeasthe

groupthresholdinterrupt.Thegroup’sBLOCKSfieldisessentiallythesameasthegroup’s

THRESHOLDfieldinthegroup’sinterruptcontrolregisterdescribedinSection19.5.2.

693

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCMagnitudeThresholdInterruptswww.ti.com

19.7ADCMagnitudeThresholdInterrupts

TheADCallowsuptothreemagnitudethresholdinterruptstobegenerated.Thecomparisonparameters

areprogrammedviatheMagnitudeThresholdControlRegister(ADMAGINTxCR).

19.7.1MagnitudeThresholdInterruptConfiguration

Thefollowingfieldsareconfigurableforeachofthethreeavailablemagnitudethresholdinterrupts:

1.CHN/THRCOMP:Specifieswhethertocomparetwochannels’conversionresults,ortocomparea

channel’sconversionresulttoaprogrammablethresholdvalue.Avalueof0willselectthe

programmablethresholdtobecompared,andavalueof1willselecttheconversionresultofthe

channelidentifiedbytheCOMPCHIDfieldtobecompared.

2.MAGCHID:Specifiesthechannelnumberfrom0to23whoseconversionresultneedstobe

monitored.

3.COMPCHID:Specifiesthechannelnumberfrom0to23whoselastconversionresultisusedforthe

comparisonwiththeconversionresultofthechannelbeingmonitored.

4.MAGTHRESHOLD:Specifiesthevalueforcomparisonwiththeconversionresultofthechannel

identifiedbytheMAGCHIDfield.

5.CMPGE/LT:SpecifieswhethertheconversionresultofthechannelidentifiedbyMAGCHIDis

comparedtobe“greaterthanorequalto”,or“lessthan”thereferencevalue.Thereferencevaluecan

betheconversionresultofanotherchannelidentifiedbytheCOMPCHIDfield,oritcouldbea

thresholdvaluespecifiedintheMAGTHRESHOLDfield.Avalueof0intheCMPGE/LTfieldindicates

a“lessthan”comparisonandavalueof1indicatesa“greaterthanorequalto”comparison.

19.7.2MagnitudeThresholdInterruptComparisonMaskConfiguration

Thereisalsoaseparatecomparisonmaskregister(ADMAGINTxMASK)foreachofthethreemagnitude

thresholdinterrupts.Thisregisterisusedtospecifythebitsthataremaskedoffforthesakeofthe

comparison.Forexample,thelower4bitsoftheconversionresultcanbemaskedoffbywriting0xftothe

interruptcomparisonmaskregister,allowingagrosscomparisontobemade.Bydefault,thefull10/12-bit

conversionresultsarecompared.

19.7.3MagnitudeThresholdInterruptEnable/DisableControl

Eachofthethreemagnitudeinterruptsalsohaveseparateinterruptenableset(ADMAGTHRINTENASET)

andclear(ADMAGTHRINTENACLR)registers.Theseareusedtorespectivelyenableanddisablethat

particularmagnitudethresholdinterruptfrombeinggenerated.Toenableamagnitudethresholdinterrupt,

writea1tothecorrespondingbitoftheinterruptenablesetregister.Conversely,todisableamagnitude

thresholdinterrupt,writea1tothecorrespondingbitoftheinterruptenableclearregister.

19.7.4MagnitudeThresholdInterruptFlags

ThereisaseparateMagnitudeInterruptFlagregister(ADMAGINTFLG)thatholdstheflagsforthesethree

interrupts.Thisflaggetssetwheneverthecomparisonconditionforthecorrespondinginterruptismet.A

magnitudethresholdinterruptisgeneratedifthecorrespondingflagissetinsidetheflagregister,andthe

interruptgenerationisenabled.Thisflagcanbeclearedbywritinga1totheflagorbyreadingfromthe

interruptoffsetregisterincaseofthisinterruptbeingthecurrenthighest-prioritypendinginterrupt.

19.7.5MagnitudeThresholdInterruptOffsetRegister

Itispossibletohavemultiplemagnitudethresholdinterruptspendingatthesametime.Themagnitude

thresholdinterruptoffsetregister(ADMAGINTOFF)holdstheindexofthecurrentlypendinghighest

prioritymagnitudethresholdinterrupt.Themagnitudethresholdinterrupt1hasthehighestprioritywhile

themagnitudethresholdinterrupt3hasthelowestpriority.Thisisaread-onlyregisterandreturnszerosif

noneofthemagnitudethresholdinterruptsarepending.Writestothisregisterhavenoeffect.

Areadfromthisregisterupdatestheregistertothenexthighest-prioritypendingmagnitudethreshold

interrupt.Thisreadalsoclearsthecorrespondingflagfromthemagnitudethresholdinterruptflagregister.

However,areadfromthemagnitudethresholdinterruptoffsetregisterinemulationmodedoesnotaffect

theinterruptflagregisterortheinterruptoffsetregister.

694

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ADIN0ADIN31

Self-testandcalibration

ADREFLOADREFHI

Vin

R2R1

S4S1S2S3

S5

ADCCore

ADDRx.16,9:0ADCALR.9:0CALR

MUX

R1~5KR2~7K



www.ti.comADCSpecialModes

19.8ADCSpecialModes

TheADCmodulesupportssomespecialmodesfordiagnosticsandpowersavingpurposes.

19.8.1ADCErrorCalibrationMode

Theapplicationprogramcanactivateacalibrationsequenceanytimeself-testmodeisdisabled(SELF

TEST=0).Thiscalibrationsequenceincludestheconversionofanembeddedcalibrationreference

voltagefollowedbythecalculationofanoffseterrorcorrectionvalue.

NOTE:DisableSelf-TestModeBeforeCalibration

Toavoiderrorsduringthecalibrationoperation,self-testmodemustnotbeenabledduringa

calibrationsequence.Inaddition,toensureaccurateresults,calibratetheADCinan

environmentwithminimumnoise.

CalibrationmodeisenabledbysettingtheCALENbit(ADCALCR.0).Theapplicationneedstoensure

thatnoconversiongroupisbeingservicedwhenthecalibrationmodeisenabled.

Figure19-10.Self-TestandCalibrationLogic

TheinputmultiplexorgetsdisabledandonlythereferencevoltageisconnectedtotheADCcoreinput.

SwitchS5ofFigure19-10isopened.Inaddition,thedigitalresultissuedfromaconversionisoutputfrom

theADCcoretothecalibrationandoffseterrorcorrectionregister,ADCALR.TheADCresults’memoryis

notaffectedbythecalibrationconversion.

Whencalibrationmodeisdisabled,theADCcanbeconfiguredfornormalconversions.

19.8.1.1CalibrationConversion

ThecalibrationconversionalsoneedstomeettheminimumsamplingtimespecificationfortheADC.This

valueistypically1us.TheEventGroupsampletimeregister(ADEVSAMP)isusedtospecifythenumber

ofADCLKcyclesforthecalibrationconversion.

TheBRIDGEENandHILObits(ADCALCR.9:8)controlthevoltagetothecalibrationreferencedevice

showninFigure19-12.ThepositionsoftheswitchesincalibrationmodearelistedinTable19-2.

695

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCSpecialModeswww.ti.com

Table19-2.CalibrationReferenceVoltages†(1)

CALEN

BRIDGEEN

HILO

S1

S2

S3

S4

S5

ReferenceVoltage

1

0

0

1

0

1

0

0

(ADREFHI*R1+ADREFLO*R2)/(R1+R2)

1

0

1

0

1

0

1

0

(ADREFLO*R1+ADREFHI*R2)/(R1+R2)

1

1

0

0

1

1

0

0

ADREFLO

1

1

1

1

0

0

1

0

ADREFHI

0

X

X

0

0

0

0

1

Vin

(1)Thestateoftheswitchesinthistableassumesthatself-testmodeisnotenabled.

WhenCALST(ADCALCR.16)isset,acalibrationconversionisstarted.Thevoltagesourceselectedvia

thebitsBRIDGEENandHILOisconvertedonce(singleconversionmode)andthedigitalresultis

returnedtothecalibrationandcorrectionregister,ADCALR,whereitcanbereadbytheCPU.TheCAL

STbitactsasaflagandmustbepolledbytheCPU.Itisheldsetduringtheconversionprocessand

automaticallyclearstoindicatetheendofthereferencevoltageconversion.

NOTE:NoInterruptforendofcalibration

TheADCdoesnotgenerateaninterrupttosignaltheendofthecalibrationconversion.The

applicationmustpolltheCALSTbittodeterminetheendofthecalibrationconversion.

AftertheCALSTbitissetbytheapplicationprogram,itcanonlyberesetbytheendoftheongoing

conversiongeneratedbytheADCcore.Ifthecalibrationconversionisinterrupted(CALENbitiscleared),

theCALSTbitisheldat1untilanewcalibrationconversionhasbeensetandcompleted.Settingthe

CALSTbitwhilecalibrationisdisabled(CALEN=0)hasnoeffect;however,inthissituation,settingCAL

ENimmediatelystartsacalibrationconversion.WhenthecalibrationconversionisinterruptedbyanADC

enable(ADCEN=0,CALEN=1,andCALST=1),anewconversionisautomaticallyrestartedassoon

astheADCenablebitisreleased(ADCEN=1).

19.8.1.2CalibrationandOffsetErrorCorrectionSequences

ThenumberofmeasurementsandthesourcetomeasureforanADCcalibrationareapplication

dependent.TheCALSTbitmustbesetforeachcalibrationsourcetobemeasured.Whilecalibration

modeisenabled,anyavailablecalibrationsourcescanbeconvertedaccordingtotheBRIDGEENand

HILObits(seeTable19-2).Thedigitalresultsofthecalibrationmeasurementsshouldbereadfrom

ADCALRbytheapplicationaftereachreferenceconversionsothatacorrectionvaluecanbecomputed

andwrittenbackintoADCALR.

Whentheapplicationhasthenecessarycalibrationdata,itshouldcomputetheoffseterrorcorrection

valueandloaditintothecalibrationandcorrectionregister,ADCALR.AftertheCALENbitiscleared,

normalconversionmoderestarts,continuingfromwhereitwasfrozen,butwiththeadditionofself-

correctiondata.

Innormalmode,theself-correctionsystemaddsthecorrectionvaluestoredinADCALRtoeachdigital

resultbeforeitiswrittentotherespectivegroup’sFIFO.

Thebasiccalibrationroutineisasfollows:

1.EnablecalibrationviaCALEN(ADCALCR.0).

2.SelectthevoltagesourceviaBRIDGEENandHILO(ADCALCR.9:8).

3.StarttheconversionwithCALST(ADCALCR.16).

4.WaitforCALSTtogoto0.

5.GettheresultsfromADCALRandsavetomemory.

6.Looptostep2untilthecalibrationconversiondataiscollectedforthedesiredreferencevoltages.

7.Computetheerrorcorrectionvalueusingcalibrationdatasavedinmemory.

8.LoadtheADCALRregisterwiththe2scomplementofthecomputederrorcorrectionvalue.

9.Disablecalibrationmode.

696

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCSpecialModes

Atthispoint,theADCcanbeconfiguredfornormaloperation,anditcorrectseachdigitalresultwiththe

errorcorrectionvalueloadedinADCALR.

NOTE:PreventADCCalibrationDataFromBeingOverwritten

Incalibrationmode,theconversionresultiswrittentoADCALRwhichoverwritesany

previouscalibrationdata;therefore,theADCALRregistermustbereadbeforeanew

conversionisstarted.

Fornocorrection,avalueof0x0000mustbewrittentoADCALR.Innoncalibrationmode,theADCALR

registercanbereadandwritten.AnyvaluewrittentoADCALRinnormalmode(CALEN=0)isaddedto

eachdigitalresultfromtheADCcore.

19.8.1.3Mid-PointCalibration

BecauseofitsconnectionstotheADC’sreferencevoltage(VrefHi,VrefLo),theprecisionofthecalibration

referenceisvoltageindependent.Ontheotherhand,theaccuracyoftheswitchedbridgeresistor(R1&

R2)reliesonthemanufacturingprocessdeviation.Consequently,themid-pointvoltage’saccuracycanbe

affectedduetotheimperfectionsinthetworesistors(expectedmismatcherrorisaround1.5%).

Theswitchedreferencevoltagedevicehasbeenspeciallydesignedtosupportadifferentialmeasurement

ofitsmid-pointvoltage.Thisensurestheaccuracyofthemid-pointreference,andhencetheefficiencyof

thecalibration.

Thedifferentialmid-pointcalibrationissoftwarecontrolled;thealgorithm(voltagesourcemeasurements

andassociatedcalculation)isinsertedwithinthecalibrationsoftwaremoduleincludedintheapplication

program.

Thebasicdifferentialmid-pointcalibrationflowisillustratedhereafter:

1.TheapplicationprogramconnectsthevoltageVrefHitoR1andVrefLotoR2,(BRIDGE_EN=0,

HILO=0),launchesaconversionoftheinputvoltageV(cal1),andstoresthedigitalresultD(cal1)into

thememory.

2.ThentheapplicationprogramswitchesthevoltageVrefHitoR2andVrefLotoR1(BRIDGE_EN=0,

HILO=1),convertsthisnewinputvoltageV(cal2)andagainstorestheissueddigitalresultD(cal2)into

thememory.

3.Theactualvalueoftherealmiddlepointisobtainedbycomputingtheaverageofthesetworesults.

[D(cal1)+D(cal2)]/2;Figure19-11summarizesthemid-pointcalibrationflow.

697

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




3FF

R

Vin

V(cal1)

V(cal1)=[VREFHI*R1+VREFLO*R2]/(R1+R2)V(cal2)=[VREFLO*R1+VREFHI*R2]/(R1+R2)[V(cal1)+V(cal2)]/2=(VrefHi-VrefLo)/2DigitalCode(hex)D(cal1)D(cal)D(cal2)[D(cal1)+D(cal2)]/2=D(cal)*Real10-bitADC’sTheoreticalTransferFunctionVrefHiVrefLoV(cal2)*TheRealfunctionshownisastraightlinebetweentheendspointsoftherealstaircasecharacteristic.TheTheoreticaltransferfunctionisforreferenceonly.straightlineTransferFunction

CPU

MEMORY

D(cal1)D(cal2)(VrefHi-VrefLo)/2

FS



ADCSpecialModeswww.ti.com

Figure19-11.Mid-pointValueCalculation

19.8.2ADCSelf-TestMode

TheADCmodulesupportsaself-testmodewhichcanbeusedtodetectanopenorashortontheADC

inputchannels.Self-testmodeisenabledbysettingtheSELFTESTbit(ADCALCR.24).Anyconversion

type(continuousorsingleconversion,freezeenabledornon-freezeenabled,interruptsenabledor

disabled)canbeperformedinthismode.

Innormalmode,settingtheself-testmodewhileaconversionsequenceisinprocesscancorruptthe

currentchannelconversionresults.However,thenextchannelinthesequenceisconvertedcorrectly

duringtheadditionalself-testcycle.Thelogicassociatedwithbothself-testandcalibrationisshownin

Figure19-12.

698

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ADIN0ADIN31

Self-testandcalibration

ADREFLOADREFHI

Vin

R2R1

S4S1S2S3

S5

ADCCore

ADDRx.16,9:0ADCALR.9:0CALR

MUX

R1~5KR2~7K



www.ti.comADCSpecialModes

Figure19-12.Self-TestandCalibrationLogic

Inself-testmode,atestvoltagedefinedbytheHILObit(ADCALCR.8)isprovidedtotheADCcoreinput

througharesistor(seeTable19-3).Tochangethetestsource,thisbitcanbetoggledbeforeanysingle

conversionmoderequest.Changingthisbitwhileaconversionisinprogresscancorrupttheresultsifthe

sourceswitchesduringtheacquisitionperiod.

PleasenotethattheswitchS5shownintheabovefigureisonlyforthepurposeofexplainingtheself-test

sequence.Thereisnophysicalswitch.

Table19-3.Self-TestReferenceVoltages†(1)

SELFTST

HILO

S1

S2

S3

S4

S5

ReferenceVoltage

1

0

0

1

1

0

1

ADREFLOviaR1||R2connectedtoVin

1

1

1

0

0

1

1

ADREFHIviaR1||R2connectedtoVin

0

X

0

0

0

0

1

Vin

(1)SwitchesrefertoFigure19-12.

Conversionsinself-testmodearestartedjustastheyareinthenormaloperatingmode(see

Section19.3.6).Theconversionstartsaccordingtotheconfigurationsetinthethreemodecontrol

registers(ADEVMODECR,ADG1MODECR,ADG2MODECR)andthesamplingtimecontrolregisters

(ADEVSAMP,ADG1SAMP,ADG2SAMP).Theacquisitiontimeforeachconversioninself-testmodeis

extendedtotwicethenormalconfiguredacquisitiontime.Theselectedreferencevoltageandtheinput

voltagefromtheADINxinputchannelarebothconnectedtotheADCinternalsamplingcapacitor

throughoutthisextendedacquisitionperiod.Figure19-13showstheself-testmodetimingwhenthe

ADREFLOischosenasthereferencevoltagefortheself-testmodeconversion.Italsoassumesan

externalcapacitorconnectedtotheADCinputchannel.

699

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Start

Tsamp1ADREFLO+ADINx

Sample time innormal operation modeSampletimedoubledinself-testmodeConversionoflastvaluesampledAD_Core_In

ADREFHIADREFLOADREFLO+ADINx

timeExt.Input

dischargeofext.capchargingofext.cap

Tsamp2



ADCSpecialModeswww.ti.com

Figure19-13.TimingforSelf-TestMode

19.8.2.1UseofSelf-TestModetoDetermineOpen/ShortonADCInputChannels

ThefollowingsequenceneedstobeusedtodeducetheADCpinstatus:

•ConvertthechannelwithselftestenabledandwiththereferencevoltageasVreflo.Storethe

conversionresult,sayVd.

•ConvertthechannelwithselftestenabledandwiththereferencevoltageasVrefhi.Storethe

conversionresult,sayVu.

•Convertthechannelwithselftestdisabled.Storetheconversionresult,sayVn.

Theresultscanbeinterpretedusingthefollowingtable.

Table19-4.DeterminationofADCInputChannelCondition

NormalConversion

Self-testConversionResult,

Self-testConversionResult,

Result,Vn

Vu

Vd

PinCondition

Vn

Vn<Vu<ADREFHI

ADREFLO<Vd<Vn

Good

ADREFHI

ADREFHI

approx.ADREFHI

ShortedtoADREFHI

ADREFLO

approx.ADREFLO

ADREFLO

ShortedtoADREFLO

Unknown

ADREFHI

ADREFLO

Open

19.8.3ADCPower-DownMode

ThisisaninactivemodeinwhichtheclockstotheADCmodulearestoppedleavingthemoduleinastatic

state.TheclocktotheADCcore(ADCLK)isstoppedwhenevertherearenoongoingconversions.Thisis

theclock-gatingimplementationrequirement.Also,theADCmoduleplacestheADCcoreintothepower

downmodesuchthatthereisminimalcurrentdrawnfromtheADCoperatingandreferencesupplies.

19.8.3.1PoweringDownJustTheADCCore

TheADCcorecanbeindividuallypowereddownwithoutstoppingtheclockstotheADCmodule.Thiscan

bedonebysettingthePOWERDOWNbitoftheADCOperatingModeControlRegister

(ADOPMODECR.3).WheneveraconversionisrequiredthePOWERDOWNbitmustbecleared,anda

minimumtimetd(PU-ADV),(seethespecificdevicedatasheetforactualvalue)hastobeallowedbefore

startinganewconversion.Thiswaitmustbeimplementedintheapplicationsoftware.

700

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




StartTdischargeVrefloSamplingtimeTsampADINxSamplecapdischargetimeConversionoflastvaluesampled



www.ti.comADCSpecialModes

19.8.3.2EnhancedPower-DownMode

AbitintheADCoperatingmodecontrolregister,IDLEPWRDN(ADOPMODECR.4)enablesthe

enhancedpower-downmodeoftheADC.

Oncethisbitisset,theADCmodulewillpowerdowntheADCcorewhenevertherearenomoreongoing

orpendingADCconversions.TheADCcorewillbepowereddownregardlessofthestateofthe

POWERDOWNbit(ADOPMODECR.3).

TheADCmodulereleasestheADCcorefrompowerdownmodeassoonasanewconversionis

requested.TheADClogicstatemachinethenhastowaitforatleasttd(PU-ADV)(seethedevicedatasheet

foractualvalue)beforestartinganewconversion.TheIDLEPWRDNbitwillremainsetatalltimes.The

logicstatemachinecanusethisbittodeterminethatitneedstowaitforaprogrammablenumberofVCLK

cyclesbeforeitallowstheinputchanneltobesampled.ThistimeisconfiguredbytheADCPowerUp

DelayControlregister(ADPWRUPDLYCTRL).

IfIDLEPWRDNisnotset,theADCmoduledoesnotwaitforanyadditionaldelaybeforesamplingthe

inputchannelandtheapplicationsoftwarehastotakeaccountofthisrequireddelay.

19.8.3.3ManagingClockstotheADCModule

TheclocktotheADCmodulecanbeturnedoffviatheappropriatePeripheralCentralResource(PCR)

controllerPSPWRDNSETregister(checkthespecificdevicedatasheettoidentifytheregisterandthebit

tobeset).Ifaconversionisongoingwhenthisbitisset,theADCmodulewillwaituntilthecurrent

conversioncompletesbeforeallowingtheADCmoduleclocktobestopped.

19.8.4ADCSampleCapacitorDischargeMode

ThismodeallowsthechargeontheADCcore’sinternalsamplingcapacitortobedischargedbefore

startingthesamplingphaseofthenextchannel.

Figure19-14.TimingforSampleCapacitorDischargeMode

TheADCSampleCapDischargeModeisenabledbysettingtheSAMPDISENbitofthegroup’s

ADSAMPDISENregister.Adischargeperiodforthesamplingcapacitorisaddedbeforethesampling

periodforeachchannelasshowninFigure19-14.Thedurationofthisdischargeperiodisconfigurablevia

thecorrespondinggroup’sSAMPDISCYCfieldintheADSAMPDISENregister.Thedischargetimeis

specifiedintermsofnumberofADCLKcycles.

Duringthesamplecapacitordischargeperiod,theVREFLOreferencevoltageisconnectedtotheinput

voltageterminaloftheADCcore.Thisallowsanychargecollectedonthesamplingcapacitorfromthe

previousconversiontobedischargedtoground.TheVREFLOreferencevoltageisusuallyconnectedto

ground.

701

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCResults’RAMSpecialFeatureswww.ti.com

19.9ADCResults’RAMSpecialFeatures

ThefollowingsectionsdescribesomeofthespecialfeaturessupportedbytheADCmoduletoenhance

theresults’RAMtestabilityandintegrity.

19.9.1ADCResults’RAMAuto-Initialization

TheADCmoduleallowstheapplicationtoauto-initializetheADCresults’RAMtoallzeros.The

applicationmustensurethattheADCmoduleisnotinanyoftheconversionmodesbeforetriggeringoff

theauto-initializationprocess.

Theauto-initializationsequenceisasfollows:

1.Enabletheglobalhardwarememoryinitializationkeybyprogrammingavalueof1010tothebits[3-0]

oftheMINITGCRregisteroftheSystemmodule.

2.SetthecontrolbitfortheADCresults’RAMintheMSINENASystemmoduleregister.Thebit8ofthe

MSINENAregisterisusedtocontroltheinitializationoftheADC1results’RAM,whilebit14controls

theinitializationoftheADC2results’RAM.Thisstartstheinitializationprocess.TheBUFINITACTIVE

flagintheADCmoduleADBNDENDregisterwillgetsettoreflectthattheinitializationisongoing.

3.Whenthememoryinitializationiscompleted,thecorrespondingstatusbitintheMINISTATregisterwill

beset.Also,theBUFINITACTIVEflagwillgetcleared.

19.9.2ADCResults’RAMTestMode

InthedefinedconversionmodesoftheADC,theapplicationcanonlyreadfromtheADCresults’RAM.

OnlytheADCmoduleisallowedtowritetotheresults’RAM.Aspecialtestmodeisdefinedtoallowthe

applicationtoalsowriteintotheADCresults’RAM-thismodeistheADCResults’RAMTestMode.Only

32-bitreadsandwritesareallowedtotheADCresults’RAMinthistestmode.

NOTE:ContentiononaccesstoADCResults’RAM

TheADCmodulecannothandleacontentionbetweentheapplicationwritetotheresults’

RAMandtheADCwritingaconversionresulttotheresults’RAM.Theapplicationmust

ensurethattheADCisnotlikelytowriteanewconversionresulttotheresults’RAMwhen

theADCResults’RAMTestModeisenabled.

TheADCResults’RAMTestModeisenabledbysettingtheRAMTESTENbitintheADCOPMODECR.

19.9.3ADCResults’RAMParity

ThebelowshowstheADCResults’RAMparitycontrolregisters.

Paritycheckingisimplementedusingparityonaper-halfwordbasisfortheADCRAM.Thatis,thereis

oneparitybitfor16bitsoftheADCRAM.ThepolarityoftheADCRAMparityiscontrolledbythe

DEVCR1registerinthesystemmodule(address=0xFFFFFFDC).Theparitycheckingisenabledbythe

ADPARCRregister.Afterreset,theparitycheckingisdisabledandmustbeenabledifparityprotectionis

required.

Duringareadaccess,theparityiscalculatedbasedonthedatareadfromtheADCRAMandcompared

withthegoodparityvaluestoredintheparitybits.IfanywordfailstheparitycheckthentheADC

generatesanerrorsignalhookeduptotheErrorSignalingModule(ESM).TheADCRAMaddresswhich

generatedtheparityerroriscapturedforhostsystemdebugging,andisfrozenfrombeingupdateduntilit

isreadbytheapplication.

TestingtheParityCheckingMechanism:

Totesttheparitycheckingmechanismitself,theparityRAMismadewritablebytheCPUinaspecialtest

mode.ThisisdonebyacontrolbitcalledTESTintheADPARCRregister.Oncethisbitisset,theparity

bitsaremappedtoanaddressstartingatanaddressoffsetof4KBfromthebaseaddressoftheADC

RAM.SeeFigure19-15.TheCPUcannowmanuallyinsertparityerrors.NotethattheADCRAMonly

supports32-bitaccesses.

702

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Conversionword0Conversionword1Conversionword2Conversionword62Conversionword630xFF3E00FC0xFF3E01F80xFF3E00080xFF3E00040xFF3E0000

ADC10xFF3A00FC0xFF3A01F80xFF3A00080xFF3A00040xFF3A0000

ADC2BASEADDRESS

Reserved0xFF3A10000xFF3E1000ParityBits



www.ti.comADCResults’RAMSpecialFeatures

Figure19-15.ADCMemoryMapinParityTestMode

703

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Outputenable

Dataout

Datain

Pullcontroldisable

PullselectADxEVT

Pullcontrollogicpin



ADEVTPinGeneralPurposeI/OFunctionalitywww.ti.com

19.10ADEVTPinGeneralPurposeI/OFunctionality

TheAD1EVTpinforADC1andAD2EVTpinforADC2canbeconfiguredasgeneral-purposeI/Osignals.

ThefollowingsectionsdescribethedifferentwaysinwhichtheapplicationcanconfiguretheADxEVT

pins.

19.10.1GPIOFunctionality

Figure19-16illustratestheGPIOfunctionalityoftheADxEVTpin.

Figure19-16.GPIOFunctionalityofADxEVT

Oncethedevicepower-onresetisreleased,theADCmodulecontrolsthestateoftheADxEVTpin.

•Pullcontrol:Thepullcontrolcaneitherbeenabledordisabledbydefault(whilesystemresetisactive

andafteritisreleased).Theactualdefaultstateofthepullcontrolisspecifiedinthedevicedatasheet.

TheapplicationcanenablepullcontrolbyclearingthePDIS(pullcontroldisable)bitinthe

ADEVTPDISregister.Inthiscase,ifthePSEL(pullselect)bitintheADEVTPSELregisterisset,the

pinwillhaveapull-up.IfthePSELbitiscleared,thepinwillhaveapull-down.IfthePDISbitissetin

thecontrolregister,thereisnopull-uporpull-downonthepin.

NOTE:PullBehaviorwhenADxEVTisconfiguredasoutput

IftheADxEVTpinisconfiguredasoutput,thenthepullsaredisabledautomatically.Ifthepin

isconfiguredasinput,thepullsareenabledordisableddependingonbitPDISinthepull

disableregisterADEVTPDIS.

•Outputbuffer:TheADxEVTpincanbedrivenasanoutputpiniftheADEVTDIRbitissetinthepin

directioncontrolregister.

•Open-Drainfeature:TheopendrainoutputcapabilityisenabledviatheADEVTPDRcontrolregister.

TheADxEVTpinmustbealsoconfiguredtobeanoutputpinforthismode.

–Theoutputbufferisenabledifalowsignalisbeingdrivenontothepin.

–Theoutputbufferisdisabledifahighsignalisbeingdrivenontothepin.

704

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADEVTPinGeneralPurposeI/OFunctionality

19.10.2Summary

ThebehavioroftheoutputbufferandthepullcontrolissummarizedinTable19-5.Theinputbufferforthe

ADxEVTpinsareenabledoncethedevicepower-onresetisreleased.

Table19-5.OutputBufferandPullControlBehaviorforADxEVTasGPIOPins(1)

SystemReset

PinDirection

PullDisable

PullSelect(PSEL)

Active?

(DIR)(2)

(PDIS)(3)

(4)

PullControl

OutputBuffer

Yes

X

X

X

Enabled

Disabled

No

0

0

0

Pulldown

Disabled

No

0

0

1

Pullup

Disabled

No

0

1

0

Disabled

Disabled

No

0

1

1

Disabled

Disabled

No

1

X

X

Disabled

Enabled

(1)X=Don’tcare

(2)DIR=0forinput,1foroutput

(3)PULDIS=0forenablingpullcontrol,1fordisablingpullcontrol

(4)PULSEL=0forpull-downfunctionality,1forpull-upfunctionality

705

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11ADCControlRegisters

AllregistersintheADCmoduleare32-bit,word-aligned;8-bit,16-bitand32-bitaccessesareallowed.

Theapplicationmustensurethatthereservedbitsarealwayswrittenas0toensuresoftwarecompatibility

tofuturerevisionsofthemodule.Thetablebelowshowsregisteraddressoffsetsfromthebaseaddressof

theADCmodules.ThebaseaddressofADC1registersisFFF7C000h,andthebaseaddressofADC2

registersisFFF7C200h.

Table19-6.ADCRegistersSummary

Offset

Acronym

RegisterDescription

Section

00

ADRSTCR

ADCResetControlRegister

Section19.11.1

04h

ADOPMODECR

ADCOperatingModeControlRegister

Section19.11.2

08h

ADCLOCKCR

ADCClockControlRegister

Section19.11.3

0Ch

ADCALCR

ADCCalibrationModeControlRegister

Section19.11.4

10h

ADEVMODECR

ADCEventGroupOperatingModeControlRegister

Section19.11.5

14h

ADG1MODECR

ADCGroup1OperatingModeControlRegister

Section19.11.6

18h

ADG2MODECR

ADCGroup2OperatingModeControlRegister

Section19.11.7

1Ch

ADEVSRC

ADCTriggerSourceSelectRegister

Section19.11.8

20h

ADG1SRC

ADCGroup1TriggerSourceSelectRegister

Section19.11.9

24h

ADG2SRC

ADCGroup2TriggerSourceSelectRegister

Section19.11.10

28h

ADEVINTENA

ADCEventInterruptEnableControlRegister

Section19.11.11

2Ch

ADG1INTENA

ADCGroup1InterruptEnableControlRegister

Section19.11.12

30h

ADG2INTENA

ADCGroup2InterruptEnableControlRegister

Section19.11.13

34h

ADEVINTFLG

ADCEventGroupInterruptFlagRegister

Section19.11.14

38h

ADG1INTFLG

ADCGroup1InterruptFlagRegister

Section19.11.15

3Ch

ADG2INTFLG

ADCGroup2InterruptFlagRegister

Section19.11.16

40h

ADEVTHRINTCR

ADCEventGroupThresholdInterruptControlRegister

Section19.11.17

44h

ADG1THRINTCR

ADCGroup1ThresholdInterruptControlRegister

Section19.11.18

48h

ADG2THRINTCR

ADCGroup2ThresholdInterruptControlRegister

Section19.11.19

4Ch

ADEVDMACR

ADCEventGroupDMAControlRegister

Section19.11.20

50h

ADG1DMACR

ADCGroup1DMAControlRegister

Section19.11.21

54h

ADG2DMACR

ADCGroup2DMAControlRegister

Section19.11.22

58h

ADBNDCR

ADCResultsMemoryConfigurationRegister

Section19.11.23

5Ch

ADBNDEND

ADCResultsMemorySizeConfigurationRegister

Section19.11.24

60h

ADEVSAMP

ADCEventGroupSamplingTimeConfigurationRegister

Section19.11.25

64h

ADG1SAMP

ADCGroup1SamplingTimeConfigurationRegister()

Section19.11.26

68h

ADG2SAMP

ADCGroup2SamplingTimeConfigurationRegister

Section19.11.27

6Ch

ADEVSR

ADCEventGroupStatusRegister

Section19.11.28

70h

ADG1SR

ADCGroup1StatusRegister

Section19.11.29

74h

ADG2SR

ADCGroup2StatusRegister

Section19.11.30

78h

ADEVSEL

ADCEventGroupChannelSelectRegister

Section19.11.31

7Ch

ADG1SEL

ADCGroup1ChannelSelectRegister

Section19.11.32

80h

ADG2SEL

ADCGroup2ChannelSelectRegister

Section19.11.33

84h

ADCALR

ADCCalibrationandErrorOffsetCorrectionRegister

Section19.11.34

88h

ADSMSTATE

ADCStateMachineStatusRegister

Section19.11.35

8Ch

ADLASTCONV

ADCChannelLastConversionValueRegister

Section19.11.36

90h-AFh

ADEVBUFFER

ADCEventGroupResultsFIFORegister

Section19.11.37

B0h-CFh

ADG1BUFFER

ADCGroup1ResultsFIFORegister

Section19.11.38

D0h-EFh

ADG2BUFFER

ADCGroup2ResultsFIFORegister

Section19.11.39

F0h

ADEVEMUBUFFER

ADCEventGroupResultsEmulationFIFORegister

Section19.11.40

F4h

ADG1EMUBUFFER

ADCGroup1ResultsEmulationFIFORegister

Section19.11.41

706

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

Table19-6.ADCRegistersSummary(continued)

Offset

Acronym

RegisterDescription

Section

F8h

ADG2EMUBUFFER

ADCGroup2ResultsEmulationFIFORegister

Section19.11.42

FCh

ADEVTDIR

ADCADEVTPinDirectionControlRegister

Section19.11.43

100h

ADEVTOUT

ADCADEVTPinOutputValueControlRegister

Section19.11.44

104h

ADEVTIN

ADCADEVTPinInputValueRegister

Section19.11.45

108h

ADEVTSET

ADCADEVTPinSetRegister

Section19.11.46

10Ch

ADEVTCLR

ADCADEVTPinClearRegister

Section19.11.47

110h

ADEVTPDR

ADCADEVTPinOpenDrainEnableRegister

Section19.11.48

114h

ADEVTPDIS

ADCADEVTPinPullControlDisableRegister

Section19.11.49

118h

ADEVTPSEL

ADCADEVTPinPullControlSelectRegister

Section19.11.50

11Ch

ADEVSAMPDISEN

ADCEventGroupSampleCapDischargeControlRegister

Section19.11.51

120h

ADG1SAMPDISEN

ADCGroup1SampleCapDischargeControlRegister

Section19.11.52

124h

ADG2SAMPDISEN

ADCGroup2SampleCapDischargeControlRegister

Section19.11.53

128h-138h

ADMAGINTxCR

ADCMagnitudeCompareInterruptControlRegister

Section19.11.54

12Ch-13Ch

ADMAGxMASK

ADCMagnitudeCompareMaskRegister

Section19.11.55

158h

ADMAGINTENASET

ADCMagnitudeCompareInterruptEnableSetRegister

Section19.11.56

15Ch

ADMAGINTENACLR

ADCMagnitudeCompareInterruptEnableClearRegister

Section19.11.57

160h

ADMAGINTFLG

ADCMagnitudeCompareInterruptFlagRegister

Section19.11.58

164h

ADMAGINTOFF

ADCMagnitudeCompareInterruptOffsetRegister

Section19.11.59

168h

ADEVFIFORESETCR

ADCEventGroupFIFOResetControlRegister

Section19.11.60

16Ch

ADG1FIFORESETCR

ADCGroup1FIFOResetControlRegister

Section19.11.61

170h

ADG2FIFORESETCR

ADCGroup2FIFOResetControlRegister

Section19.11.62

174h

ADEVRAMWRADDR

ADCEventGroupRAMWriteAddressRegister

Section19.11.63

178h

ADG1RAMWRADDR

ADCGroup1RAMWriteAddressRegister

Section19.11.64

17Ch

ADG2RAMWRADDR

ADCGroup2RAMWriteAddressRegister

Section19.11.65

180h

ADPARCR

ADCParityControlRegister

Section19.11.66

184h

ADPARADDR

ADCParityErrorAddressRegister

Section19.11.67

188h

ADPWRUPDLYCTRL

ADCPower-UpDelayControlRegister

Section19.11.68

707

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.1ADCResetControlRegister(ADRSTCR)

Figure19-17andTable19-7describetheADRSTCRregister.

Figure19-17.ADCResetControlRegister(ADRSTCR)[offset=00]

31

1

0

Reserved

RESET

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table19-7.ADCResetControlRegister(ADRSTCR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

RESET

ThisbitisusedtoresettheADCinternalstatemachinesandcontrol/statusregisters.Thisreset

stateishelduntilthisbitiscleared.Readinallmodes,writeinprivilegedmode.

0

Moduleisreleasedfromtheresetstate.

1

Allthemodule'sinternalstatemachinesandthecontrol/statusregistersarereset.

19.11.2ADCOperatingModeControlRegister(ADOPMODECR)

Figure19-18andTable19-8describetheADOPMODECRregister.

Figure19-18.ADCOperatingModeControlRegister(ADOPMODECR)[offset=04]

31

30

25

24

10/12BIT

Reserved

COS

R/W-0

R-0

RW-0

23

21

20

17

16

Reserved

CHNTESTEN

RAMTESTEN

R-0

R/W-Ah

R/W-0

15

9

8

Reserved

POWERDOWN

R-0

RW-0

7

5

4

3

1

0

Reserved

IDLEPWRDN

Reserved

ADCEN

R-0

R/W-0

R-0

RW-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-8.ADCOperatingModeControlRegister(ADOPMODECR)FieldDescriptions

Bit

Field

Value

Description

31

10/12BIT

ThisbitcontrolstheresolutionoftheADCcore.Italsoaffectsthesizeoftheconversion

resultsstoredintheresults’RAM.

Anyoperationmoderead/write:

0

TheADCcoreanddigitallogicareconfiguredtobein10-bitresolution.Thisisthedefault

modeofoperation.

1

TheADCcoreanddigitallogicareconfiguredtobein12-bitresolution.

30-25

Reserved

0

Readreturns0.Writeshavenoeffect.

708

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

Table19-8.ADCOperatingModeControlRegister(ADOPMODECR)FieldDescriptions(continued)

Bit

Field

Value

Description

24

COS

Thisbitaffectsemulationoperationonly.ItdefineswhethertheADCcoreclock(ADCLK)is

immediatelyhaltedwhentheemulationsystementerssuspendmodeorifitshouldcontinue

operatingnormally.

Note:IfCOS=0whentheADCmoduleenterstheemulationmode,thentheaccuracyof

theconversionresultscanbeaffecteddependingonhowlongthemodulestaysinthe

emulationmode.

Anyoperationmoderead/write:

0

ADCmodulehaltsallongoingconversionsimmediatelyafteremulationmodeisentered.

1

ADCmodulecontinuesallongoingconversionsaspertheconfigurationsofthethree

conversiongroups.

23-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20-17

CHNTESTEN

Enabletheinputchannels’impedancemeasurementmode.

ThismodeisreservedforusebyTI.

Anyoperationmoderead/write:

Ah

Inputimpedancemeasurementmodeisdisabled.

5h

Inputimpedancemeasurementmodeisenabled.

other

Inputimpedancemeasurementmodeisdisabled.

16

RAMTESTEN

EnabletheADCResults’RAMTestMode.

PleaserefertoSection19.9.2formoredetails.

Anyoperationmoderead/write:

0

ADCRAMTestModeisdisabled.TheapplicationcannotwritetotheADCRAMbytheCPU

ortheDMA.

1

ADCRAMTestModeisenabled.TheapplicationcandirectlywritetotheADCRAMbythe

CPUortheDMA.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

POWERDOWN

ADCPowerDown.ThisbitpowersdownonlytheADCcore;thedigitallogicinthe

sequencerstaysactive.Toreleasethecorefrompowerdownmode,thisbitmustbe

cleared.Ifaconversionisongoing,theADCmodulewillwaituntilthecurrentconversionis

completedbeforepoweringdowntheADCcore.

AlsoreferSection19.11.68,ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL).

Anyoperationmoderead/write:

0

ThestateoftheADCcoreiscontrolledbytheIDLEPWRDNbit,orbyaglobalpowerdown

modeentry.

1

ADCcoreisinthepower-downstate.

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

IDLEPWRDN

ADCPowerDownWhenIdle.Whenthisbitisset,theADCmodulewillautomaticallypower

downtheADCcorewhenevertherearenoconversionsongoingorpending.Thisisthe

enhancedpowerdownmode.

AlsoreferSection19.11.68,ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL).

Anyoperationmoderead/write:

0

TheADCstaysinthenormaloperatingmodeevenifnoconversionsareongoingor

pending.ThepowerdownstateisenteredonlybyconfiguringthePOWERDOWNbitorvia

aglobalpowerdownmodeentry.

1

Enhancedpowerdownmodeisenabled.

3-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ADCEN

ADCEnable.ThisbitmustbesettoallowtheADCmoduletobeconfiguredtoperformany

conversions.

Anyoperationmoderead/write:

0

NoADCconversionscanoccur.Theinputchannelselectregisters:ADEVSEL,ADG1SEL,

andADG2SELareheldattheirresetvalues.

1

ADCconversionscannowproceedasconfigured.

709

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.3ADCClockControlRegister(ADCLOCKCR)

Figure19-19andTable19-9describetheADCLOCKCRregister.

Figure19-19.ADCClockControlRegister(ADCLOCKCR)[offset=08h]

31

5

4

0

Reserved

PS

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-9.ADCClockControlRegister(ADCLOCKCR)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readsreturnzeros,writeshavenoeffect.

4-0

PS

0-1Fh

ADCClockPrescaler.ThesebitsdefinetheprescalervaluefortheADCcoreclock(ADCLK).The

ADCLKisgeneratedbydividingdowntheinputbusclock(VCLK)totheADCmodule.

Note:ThesupportedrangefortheADCclockfrequencyisspecifiedinthedevicedatasheet.The

ADCclockprescalermustbeconfiguredtomeetthisdatasheetspecification.

Anyoperationmoderead/write:

tC(ADCLK)=tC(VCLK)*(PS[4:0]+1),

wheretC(ADCLK)istheperiodoftheADCLK,

andtC(VCLK)istheperiodoftheVCLK.

19.11.4ADCCalibrationModeControlRegister(ADCALCR)

Figure19-20andTable19-10describetheADCALCRregister.

Figure19-20.ADCCalibrationModeControlRegister(ADCALCR)[offset=0Ch]

31

25

24

Reserved

SELF_TEST

R-0

RW-0

23

17

16

Reserved

CAL_ST

R-0

R/S-0

15

10

9

8

Reserved

BRIDGE_EN

HILO

R-0

RW-0

RW-0

7

1

0

Reserved

CAL_EN

R-0

RW-0

LEGEND:R/W=Read/Write;R=Readonly;S=Set;-n=valueafterreset

Table19-10.ADCCalibrationModeControlRegister(ADCALCR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

SELFTEST

ADCSelfTestEnable.WhenthisbitisSet,eitherADREFHIorADREFLOisconnectedthrougha

resistortotheselectedinputchannel.Thedesiredconversionmodeisconfiguredinthegroup

modecontrolregisters.FormoredetailsontheADCSelfTestMode,pleasereferto

Section19.8.2.

Anyoperationmoderead/write:

0

ADCSelfTestmodeisdisabled.

1

ADCSelfTestmodeisenabled.

710

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

Table19-10.ADCCalibrationModeControlRegister(ADCALCR)FieldDescriptions(continued)

Bit

Field

Value

Description

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

CALST

ADCCalibrationConversionStart.SettingtheCALSTbitwhiletheCALENbitissetstarts

conversionoftheselectedreferencevoltage.TheADCmoduleusesthesampletimeconfiguredin

theEventGroupsampletimeconfigurationregister(ADEVSAMP)forthecalibrationconversion.

Anyoperationmode:

1

Read:Calibrationconversionisinprogress.

Write:ADCmodulestartscalibrationconversion.

0

Read:Calibrationconversionhascompleted,orhasnotyetbeenstarted.

Write:Writing0tothisbithasnoeffect.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

BRIDGEEN

BridgeEnable.WhensetwiththeHILObit,BRIDGEENallowsareferencevoltagetobe

convertedincalibrationmode.Table19-2definesthefourdifferentreferencevoltagesthatcanbe

selected.

8

HILO

ADCSelfTestmodeandCalibrationModeReferenceSourceSelection.

IntheADCSelfTestmode,thisbitdefinesthetestvoltagetobecombinedthrougharesistorwith

theselectedinputpinvoltage.ReferSection19.8.2fordetailsontheADCSelfTestMode.

IntheADCCalibrationMode,thisbitdefinesthereferencesourcepolarity.ReferSection19.8.1for

detailsontheADCCalibrationMode.

IntheADCmodule’snormaloperatingmode,thisbithasnoeffect.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

CALEN

ADCCalibrationEnable.WhenthisbitisSet,theinputchannelmultiplexorisdisconnectedandthe

calibrationreferencevoltageisconnectedtotheADCcoreinput.Thecalibrationreferencevoltage

isselectedbythecombinationoftheBRIDGEENandHILO.Theactualconversionofthis

referencevoltagestartswhentheCALSTbitisset.IftheCALSTbitisalreadysetwhentheCAL

ENbitisset,thenthecalibrationconversionisimmediatelystarted.

PleaserefertoSection19.8.1formoredetailsontheADCcalibrationmode.

Anyoperationmoderead/write:

0

Calibrationmodeisdisabled.

1

Calibrationmodeisenabled.

711

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.5ADCEventGroupOperatingModeControlRegister(ADEVMODECR)

ADCEventGroupOperatingModeControlRegister(ADEVMODECR)isshowninFigure19-21and

describedinTable19-11.

Figure19-21.ADCEventGroupOperatingModeControlRegister(ADEVMODECR)[offset=10h]

31

24

Reserved

R-0

23

17

16

NoReseton

Reserved

ChnSel

R-0

R/W-0

15

10

9

8

Reserved

EVDATAFMT

R-0

R/W-0

7

6

5

4

3

2

1

0

Reserved

EVCHID

OVREVRAMIGN

Reserved

EV8BIT

EVMODE

FRZEV

R-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-11.ADCEventGroupOperatingModeControlRegister(ADEVMODECR)

FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturnzeros,writeshavenoeffect.

16

NoResetonChnSel

NoEventGroupResultsMemoryResetonNewChannelSelect.

Thisbitdetermineswhethertheeventgroupresults’RAMisresetwheneveranon-zerovalueis

writtentotheeventgroupchannelselectregister.

Anyoperationmoderead/write:

0

EventgroupresultsRAMisresetwhenanon-zerovalueiswrittentoeventgroupchannel

selectregister,evenifeventgroupconversionsarecompleted.

1

EventgroupresultsRAMisnotresetwhenanon-zerovalueiswrittentoeventgroupchannel

selectregister,andeventgroupconversionsarecompleted.

Iftheeventgroupconversionsareongoing(activeorfrozen),thenwritinganon-zerovalueto

theeventgroupchannelselectregisterwillalwaysresettheeventgroupresultsRAM.

15-10

Reserved

0

Readsreturnzeros,writeshavenoeffect.

9-8

EVDATAFMT

EventGroupReadDataFormat.

ThisfieldisonlyapplicablewhentheADCmoduleisconfiguredtobeinthe12-bitresolution

mode.Thisfieldisreservedwhenthemoduleisconfiguredasa10-bitADCmodule.

ThisfielddeterminestheformatinwhichtheconversionresultsarereadoutoftheEventgroup

resultsRAMwhenusingtheFIFOinterface,thatis,whenreadingfromtheADEVBUFFERor

ADEVEMUBUFFERlocations.

Anyoperationmoderead/write:

0

Conversionresultsarereadoutinfull12-bitformat.Thisisthedefaultmode.

1h

Conversionresultsarereadoutin10-bitformat.Bits11–2ofthe12-bitconversionresultare

returnedasthe10-bitconversionresult.

2h

Conversionresultsarereadoutin8-bitformat.Bits11–4ofthe12-bitconversionresultare

returnedasthe8-bitconversionresult.

3h

Reserved.Thefull12-bitconversionresultisreturnedifprogrammed.

7-6

Reserved

0

Readsreturnzeros,writeshavenoeffect.

712

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

Table19-11.ADCEventGroupOperatingModeControlRegister(ADEVMODECR)

FieldDescriptions(continued)

Bit

Field

Value

Description

5

EVCHID

EnableChannelIdfortheEventGroupconversionresultstoberead.Thisbitonlyaffectsthe

“readfromFIFO”mode.TheADCalwaysstoresthechannelidintheresultsRAM.Any16-bit

readperformedinthe“readfromRAM”modewillreturnthe5-bitchannelidalongwiththe10-

bitconversionresult.

Anyoperationmoderead/write:

0

Bits14-10,thechannelidfield,ofthedatareadfromtheEventGroupresults’FIFOisreadas

00000b.

1

Bits14-10,thechannelidfield,ofthedatareadfromtheEventGroupresults’FIFOcontains

thenumberoftheADCanaloginputtowhichtheconversionresultbelongs.

4

OVREVRAMIGN

ThisbitallowstheADCmoduletooverwritethecontentsoftheEventGroupresultsmemory

underanoverruncondition.

Anyoperationmoderead/write:

0

TheADCcannotoverwritethecontentsoftheEventGroupresultsmemory.Whenanoverrun

ofthismemoryoccurs,thesoftwareneedstoreadoutallthecontentsofthismemorybefore

theADCisabletowriteanewconversionresultfortheEventGroup.

1

WhenanoverrunoftheEventGroupresultsmemoryoccurs,theADCproceedstooverwrite

thecontentswithanynewconversionresultsfortheEventGroup,startingwiththefirstlocation

inthismemory.

3

Reserved

0

Readsreturnzeros,writeshavenoeffect.

2

EVSBIT

EventGroup8-bitresultmode.ThisbitallowstheEventGroupconversionresultstoberead

outinan8-bitformat.Thisbitonlyappliestothe“readfromFIFO”mode.Thelower2bitsofthe

10-bitconversionresultarediscardedandtheupper8bitsareshiftedrighttwoplacestoform

the8-bitconversionresult.

Anyoperationmoderead/write:

0

TheEventGroupconversionresultisreadoutasa10-bitvalueinthe“readfromEventGroup

FIFO”mode.

1

TheEventGroupconversionresultisreadoutasan8-bitvalueinthe“readfromEventGroup

FIFO”mode.

1

EVMODE

EventGroupConversionMode.Thisbitdefineswhethertheinputchannelsselectedfor

conversionintheEventGroupareconvertedonlyoncepertrigger,orarecontinuously

converted.

Anyoperationmoderead/write:

0

ThechannelsselectedforconversionintheEventGroupareconvertedonlyoncewhenthe

selectedeventtriggerconditionoccurs.

1

ThechannelsselectedforconversionintheEventGroupareconvertedcontinuouslywhenthe

selectedeventtriggerconditionoccurs.

0

FRZEV

EventGroupFreezeEnable.ThisbitallowsanEventGroupconversionsequencetobefrozen

ifaGroup1oraGroup2conversionisrequested.TheEventGroupconversioniskeptfrozen

untiltheGroup1orGroup2conversionisactive,andcontinuesfromwhereitwasfrozenonce

theGroup1orGroup2conversionsarecompleted.

WhiletheEventGroupconversionisfrozen,theEVSTOPstatusflagintheADEVSTregister

indicatesthattheEventGroupconversionshavestopped.ThisbitgetsclearedwhentheEvent

Groupconversionsresume.

Anyoperationmoderead/write:

0

EventGroupconversionscannotbefrozen.Allthechannelsselectedforconversioninthe

EventGroupareconvertedbeforetheADCcanswitchovertoservicinganyotherconversion

group.

1

EventGroupconversionsarefrozenwheneverthereisarequestforconversionfromGroup1or

Group2.

713

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.6ADCGroup1OperatingModeControlRegister(ADG1MODECR)

ADCGroup1OperatingModeControlRegister(ADG1MODECR)isshowninFigure19-22anddescribed

inTable19-12.

Figure19-22.ADCGroup1OperatingModeControlRegister(ADG1MODECR)[offset=14h]

31

24

Reserved

R-0

23

17

16

NoReseton

Reserved

ChnSel

R-0

R/W-0

15

10

9

8

Reserved

G1DATAFMT

R-0

R/W-0

7

6

5

4

3

2

1

0

Reserved

G1CHID

OVRG1RAMIGN

G1HWTRIG

G18BIT

G1MODE

FRZG1

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-12.ADCGroup1OperatingModeControlRegister(ADG1MODECR)

FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturnzeros,writeshavenoeffect.

16

NoResetonChnSel

NoGroup1ResultsMemoryResetonNewChannelSelect.

Thisbitdetermineswhetherthegroup1results’RAMisresetwheneveranon-zerovalueis

writtentothegroup1channelselectregister.

Anyoperationmoderead/write:

0

Group1resultsRAMisresetwhenanon-zerovalueiswrittentogroup1channelselectregister,

evenifgroup1conversionsarecompleted.

1

Group1resultsRAMisnotresetwhenanon-zerovalueiswrittentogroup1channelselect

register,andgroup1conversionsarecompleted.

Ifthegroup1conversionsareongoing(activeorfrozen),thenwritinganonzerovaluetothe

group1channelselectregisterwillalwaysresetthegroup1resultsRAM.

15-10

Reserved

0

Readsreturnzeros,writeshavenoeffect.

9-8

G1DATAFMT

Group1ReadDataFormat.

ThisfieldisonlyapplicablewhentheADCmoduleisconfiguredtobeinthe12-bitresolution

mode.Thisfieldisreservedwhenthemoduleisconfiguredasa10-bitADCmodule.

Thisfielddeterminestheformatinwhichtheconversionresultsarereadoutofthegroup1

resultsRAMwhenusingtheFIFOinterface,thatis,whenreadingfromtheADG1BUFFERor

ADG1EMUBUFFERlocations.

Anyoperationmoderead/write:

0

Conversionresultsarereadoutinfull12-bitformat.Thisisthedefaultmode.

1h

Conversionresultsarereadoutin10-bitformat.Bits11–2ofthe12-bitconversionresultare

returnedasthe10-bitconversionresult.

2h

Conversionresultsarereadoutin8-bitformat.Bits11–4ofthe12-bitconversionresultare

returnedasthe8-bitconversionresult.

3h

Reserved.Thefull12-bitconversionresultisreturnedifprogrammed.

7-6

Reserved

0

Readsreturnzeros,writeshavenoeffect.

714

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

Table19-12.ADCGroup1OperatingModeControlRegister(ADG1MODECR)

FieldDescriptions(continued)

Bit

Field

Value

Description

5

G1CHID

EnableChannelIdfortheGroup1conversionresultstoberead.Thisbitonlyaffectsthe“read

fromFIFO”mode.TheADCalwaysstoresthechannelidintheresultsRAM.Any16-bitread

performedinthe“readfromRAM”modewillreturnthe5-bitchannelidalongwiththe10-bit

conversionresult.

Anyoperationmoderead/write:

0

Bits14-10,thechannelidfield,ofthedatareadfromtheGroup1results’FIFOisreadas

00000b.

1

Bits14-10,thechannelidfield,ofthedatareadfromtheGroup1results’FIFOcontainsthe

numberoftheADCanaloginputtowhichtheconversionresultbelongs.

4

OVRG1RAMIGN

ThisbitallowstheADCmoduletooverwritethecontentsoftheGroup1resultsmemoryunder

anoverruncondition.

Anyoperationmoderead/write:

0

TheADCcannotoverwritethecontentsoftheGroup1resultsmemory.Whenanoverrunofthis

memoryoccurs,thesoftwareneedstoreadoutallthecontentsofthismemorybeforetheADC

isabletowriteanewconversionresultfortheGroup1.

1

WhenanoverrunoftheGroup1resultsmemoryoccurs,theADCproceedstooverwritethe

contentswithanynewconversionresultsfortheGroup1,startingwiththefirstlocationinthis

memory.

3

G1HWTRIG

Group1HardwareTriggered.ThisbitallowstheGroup1tobehardwaretriggered.TheGroup1

issoftwaretriggeredbydefault.Formoredetailsonhowtotriggeraconversiongroup,please

refertoSection19.3.6.

Anyoperationmoderead/write:

0

TheGroup1issoftware-triggered.AGroup1conversionstartswhenevertheGroup1channel

selectregister(ADG1SEL)iswrittenwithanon-zerovalue.

1

TheGroup1ishardware-triggered.AGroup1conversionstartswhenevertheGroup1channel

selectregisterhasanon-zerovalue,andthespecifiedhardwaretriggeroccurs.Thehardware

triggerfortheGroup1isspecifiedintheGroup1TriggerSourceregister(ADG1SRC).

2

G1SBIT

Group18-bitresultmode.

ThisfieldisonlyapplicablewhentheADCmoduleisconfiguredtobeinthe10-bitresolution

mode.Thisfieldisreservedwhenthemoduleisconfiguredasa12-bitADCmodule.

ThisbitallowstheGroup1conversionresultstobereadoutinan8-bitformat.Thisbitonly

appliestothe“readfromFIFO”mode.Thelower2bitsofthe10-bitconversionresultare

discardedandtheupper8bitsareshiftedrighttwoplacestoformthe8-bitconversionresult.

Anyoperationmoderead/write:

0

TheGroup1conversionresultisreadoutasa10-bitvalueinthe“readfromGroup1FIFO”

mode.

1

TheGroup1conversionresultisreadoutasan8-bitvalueinthe“readfromGroup1FIFO”

mode.

1

G1MODE

Group1ConversionMode.Thisbitdefineswhethertheinputchannelsselectedforconversion

intheGroup1areconvertedonlyonce,orarecontinuouslyconverted.

Anyoperationmoderead/write:

0

ThechannelsselectedforconversionintheGroup1areconvertedonlyonce.

1

ThechannelsselectedforconversionintheGroup1areconvertedcontinuously.

0

FRZG1

Group1FreezeEnable.ThisbitallowsaGroup1conversionsequencetobefrozenifanEvent

GrouporaGroup2conversionisrequested.TheGroup1conversioniskeptfrozenuntilthe

EventGrouporGroup2conversionisactive,andcontinuesfromwhereitwasfrozenoncethe

EventGrouporGroup2conversionsarecompleted.

WhiletheGroup1conversionisfrozen,theG1STOPstatusflagintheADG1STregister

indicatesthattheGroup1conversionshavestopped.ThisbitgetsclearedwhentheGroup1

conversionsresume.

Anyoperationmoderead/write:

0

Group1conversionscannotbefrozen.AllthechannelsselectedforconversionintheGroup1

areconvertedbeforetheADCcanswitchovertoservicinganyotherconversiongroup.

1

Group1conversionsarefrozenwheneverthereisarequestforconversionfromEventGroupor

Group2.

715

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.7ADCGroup2OperatingModeControlRegister(ADG2MODECR)

ADCGroup2OperatingModeControlRegister(ADG2MODECR)isshowninFigure19-23anddescribed

inTable19-13.

Figure19-23.ADCGroup2OperatingModeControlRegister(ADG2MODECR)[offset=18h]

31

24

Reserved

R-0

23

16

NoReseton

Reserved

ChnSel

R-0

R/W-0

15

10

9

8

Reserved

G2DATAFMT

R-0

R/W-0

7

6

5

4

3

2

1

0

Reserved

G2CHID

OVRG2RAMIGN

G2HWTRIG

G2SBIT

G2MODE

FRZEV

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-13.ADCGroup2OperatingModeControlRegister(ADG2MODECR)

FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturnzeros,writeshavenoeffect.

16

NoResetonChnSel

NoGroup2ResultsMemoryResetonNewChannelSelect.

Thisbitdetermineswhetherthegroup2results’RAMisresetwheneveranon-zerovalueis

writtentothegroup2channelselectregister.

Anyoperationmoderead/write:

0

Group2resultsRAMisresetwhenanon-zerovalueiswrittentogroup2channelselectregister,

evenifgroup2conversionsarecompleted.

1

Group2resultsRAMisnotresetwhenanon-zerovalueiswrittentogroup2channelselect

register,andgroup2conversionsarecompleted.

Ifthegroup2conversionsareongoing(activeorfrozen),thenwritinganonzerovaluetothe

group2channelselectregisterwillalwaysresetthegroup2resultsRAM.

15-10

Reserved

0

Readsreturnzeros,writeshavenoeffect.

9-8

G2DATAFMT

Group2ReadDataFormat.

ThisfieldisonlyapplicablewhentheADCmoduleisconfiguredtobeinthe12-bitresolution

mode.Thisfieldisreservedwhenthemoduleisconfiguredasa10-bitADCmodule.

Thisfielddeterminestheformatinwhichtheconversionresultsarereadoutofthegroup1

resultsRAMwhenusingtheFIFOinterface,thatis,whenreadingfromtheADG2BUFFERor

ADG2EMUBUFFERlocations.

Anyoperationmoderead/write:

0

Conversionresultsarereadoutinfull12-bitformat.Thisisthedefaultmode.

1h

Conversionresultsarereadoutin10-bitformat.Bits11–2ofthe12-bitconversionresultare

returnedasthe10-bitconversionresult.

2h

Conversionresultsarereadoutin8-bitformat.Bits11–4ofthe12-bitconversionresultare

returnedasthe8-bitconversionresult.

3h

Reserved.Thefull12-bitconversionresultisreturnedifprogrammed.

7-6

Reserved

0

Readsreturnzeros,writeshavenoeffect.

716

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

Table19-13.ADCGroup2OperatingModeControlRegister(ADG2MODECR)

FieldDescriptions(continued)

Bit

Field

Value

Description

5

G2CHID

EnableChannelIdfortheGroup2conversionresultstoberead.Thisbitonlyaffectsthe“read

fromFIFO”mode.TheADCalwaysstoresthechannelidintheresultsRAM.Any16-bitread

performedinthe“readfromRAM”modewillreturnthe5-bitchannelidalongwiththe10-bit

conversionresult.

Anyoperationmoderead/write:

0

Bits14-10,thechannelidfield,ofthedatareadfromtheGroup2results’FIFOisreadas

00000b.

1

Bits14-10,thechannelidfield,ofthedatareadfromtheGroup2results’FIFOcontainsthe

numberoftheADCanaloginputtowhichtheconversionresultbelongs.

4

OVRG2RAMIGN

ThisbitallowstheADCmoduletooverwritethecontentsoftheGroup2resultsmemoryunder

anoverruncondition.

Anyoperationmoderead/write:

0

TheADCcannotoverwritethecontentsoftheGroup2resultsmemory.Whenanoverrunofthis

memoryoccurs,thesoftwareneedstoreadoutallthecontentsofthismemorybeforetheADC

isabletowriteanewconversionresultfortheGroup2.

1

WhenanoverrunoftheGroup2resultsmemoryoccurs,theADCproceedstooverwritethe

contentswithanynewconversionresultsfortheGroup2,startingwiththefirstlocationinthis

memory.

3

G2HWTRIG

Group2HardwareTriggered.ThisbitallowstheGroup2tobehardwaretriggered.TheGroup2

issoftwaretriggeredbydefault.Formoredetailsonhowtotriggeraconversiongroup,please

refertoSection19.3.6.

Anyoperationmoderead/write:

0

TheGroup2issoftware-triggered.AGroup2conversionstartswhenevertheGroup2channel

selectregister(ADG2SEL)iswrittenwithanon-zerovalue.

1

TheGroup2ishardware-triggered.AGroup2conversionstartswhenevertheGroup2channel

selectregisterhasanon-zerovalue,andthespecifiedhardwaretriggeroccurs.Thehardware

triggerfortheGroup2isspecifiedintheGroup2TriggerSourceregister(ADG2SRC).

2

G2SBIT

Group28-bitresultmode.

ThisfieldisonlyapplicablewhentheADCmoduleisconfiguredtobeinthe10-bitresolution

mode.Thisfieldisreservedwhenthemoduleisconfiguredasa12-bitADCmodule.

ThisbitallowstheGroup2conversionresultstobereadoutinan8-bitformat.Thisbitonly

appliestothe“readfromFIFO”mode.Thelower2bitsofthe10-bitconversionresultare

discardedandtheupper8bitsareshiftedrighttwoplacestoformthe8-bitconversionresult.

Anyoperationmoderead/write:

0

TheGroup2conversionresultisreadoutasa10-bitvalueinthe“readfromGroup2FIFO”

mode.

1

TheGroup2conversionresultisreadoutasan8-bitvalueinthe“readfromGroup2FIFO”

mode.

1

G2MODE

Group2ConversionMode.Thisbitdefineswhethertheinputchannelsselectedforconversion

intheGroup2areconvertedonlyonce,orarecontinuouslyconverted.

Anyoperationmoderead/write:

0

ThechannelsselectedforconversionintheGroup2areconvertedonlyonce.

1

ThechannelsselectedforconversionintheGroup2areconvertedcontinuously.

0

FRZG2

Group2FreezeEnable.ThisbitallowsaGroup2conversionsequencetobefrozenifanEvent

GrouporaGroup1conversionisrequested.TheGroup2conversioniskeptfrozenuntilthe

EventGrouporGroup1conversionisactive,andcontinuesfromwhereitwasfrozenoncethe

EventGrouporGroup1conversionsarecompleted.

WhiletheGroup2conversionisfrozen,theG2STOPstatusflagintheADG2STregister

indicatesthattheGroup2conversionshavestopped.ThisbitgetsclearedwhentheGroup2

conversionsresume.

Anyoperationmoderead/write:

0

Group2conversionscannotbefrozen.AllthechannelsselectedforconversionintheGroup2

areconvertedbeforetheADCcanswitchovertoservicinganyotherconversiongroup.

1

Group2conversionsarefrozenwheneverthereisarequestforconversionfromEventGroupor

Group1.

717

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.8ADCEventGroupTriggerSourceSelectRegister(ADEVSRC)

ADCEventGroupTriggerSourceSelectRegister(ADEVSRC)isshowninFigure19-24anddescribedin

Table19-14.

Figure19-24.ADCEventGroupTriggerSourceSelectRegister(ADEVSRC)[offset=1Ch]

31

8

Reserved

R-0

7

5

4

3

2

0

Reserved

EVEDGBOTH

EVEDGSEL

EVSRC

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-14.ADCEventGroupTriggerSourceSelectRegister(ADEVSRC)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readsreturnzeros,writeshavenoeffect.

4

EVEDGBOTH

EVGroupTriggerEdgePolaritySelect.Thisbitconfigurestheeventgrouptobetriggeredonboth

risingandfallingedgedetectedontheselectedtriggersource.

Anyoperationmoderead/write:

0

TheconversionistriggeredonlyupondetectinganedgedefinedbytheEVEDGESELbit.

1

Theconversionistriggeredupondetectingeitherarisingorfallingedge.

3

EVEDGSEL

EventGroupTriggerEdgePolaritySelect.Thisbitdeterminesthepolarityofthetransitiononthe

selectedsourcethattriggerstheEventGroupconversion.

Anyoperationmoderead/write:

0

Ahigh-to-lowtransitionontheselectedsourcewilltriggertheEventGroupconversion.

1

Alow-to-hightransitionontheselectedsourcewilltriggertheEventGroupconversion.

2-0

EVSRC

EventGroupTriggerSource.

Anyoperationmoderead/write:

0-7h

TheADCmoduleallowsatriggersourcetobeselectedfortheEventGroupfromuptoeight

options.Theseoptionsaredevice-specificandthedevicespecificationmustbereferredtoidentify

theactualtriggersources.

718

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.9ADCGroup1TriggerSourceSelectRegister(ADG1SRC)

ADCGroup1TriggerSourceSelectRegister(ADG1SRC)isshowninFigure19-25anddescribedin

Table19-15.

Figure19-25.ADCGroup1TriggerSourceSelectRegister(ADG1SRC)[offset=20h]

31

8

Reserved

R-0

7

5

4

3

2

0

Reserved

G1EDGBOTH

G1EDGSEL

G1SRC

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-15.ADCGroup1TriggerSourceSelectRegister(ADG1SRC)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readsreturnzeros,writeshavenoeffect.

4

GIEDGBOTH

Group1TriggerEdgePolaritySelect.Thisbitconfiguresthegroup1tobetriggeredonbothrising

andfallingedgedetectedontheselectedtriggersource.

Anyoperationmoderead/write:

0

TheconversionistriggeredonlyupondetectinganedgedefinedbytheG1EDGESELbit.

1

Theconversionistriggeredupondetectingeitherarisingorfallingedge.

3

G1EDGSEL

Group1TriggerEdgePolaritySelect.Thisbitdeterminesthepolarityofthetransitiononthe

selectedsourcethattriggerstheGroup1conversion.

Anyoperationmoderead/write:

0

Ahigh-to-lowtransitionontheselectedsourcewilltriggertheGroup1conversion.

1

Alow-to-hightransitionontheselectedsourcewilltriggertheGroup1conversion.

2-0

G1SRC

Group1TriggerSource.

Anyoperationmoderead/write:

0-7h

TheADCmoduleallowsatriggersourcetobeselectedfortheGroup1fromuptoeightoptions.

Theseoptionsaredevice-specificandthedevicespecificationmustbereferredtoidentifythe

actualtriggersources.

719

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.10ADCGroup2TriggerSourceSelectRegister(ADG2SRC)

ADCGroup2TriggerSourceSelectRegister(ADG2SRC)isshowninFigure19-26anddescribedin

Table19-16.

Figure19-26.ADCGroup2TriggerSourceSelectRegister(ADG2SRC)[offset=24h]

31

8

Reserved

R-0

7

5

4

3

2

0

Reserved

G2EDGBOTH

G2EDGSEL

G2SRC

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-16.ADCGroup2TriggerSourceSelectRegister(ADG2SRC)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readsreturnzeros,writeshavenoeffect.

4

G2EDGBOTH

Group2TriggerEdgePolaritySelect.Thisbitconfiguresthegroup2tobetriggeredonbothrising

andfallingedgedetectedontheselectedtriggersource.

Anyoperationmoderead/write:

0

TheconversionistriggeredonlyupondetectinganedgedefinedbytheG2EDGESELbit.

1

Theconversionistriggeredupondetectingeitherarisingorfallingedge.

3

G2EDGSEL

Group2TriggerEdgePolaritySelect.Thisbitdeterminesthepolarityofthetransitiononthe

selectedsourcethattriggerstheGroup2conversion.

Anyoperationmoderead/write:

0

Ahigh-to-lowtransitionontheselectedsourcewilltriggertheGroup2conversion.

1

Alow-to-hightransitionontheselectedsourcewilltriggertheGroup2conversion.

2-0

G2SRC

Group2TriggerSource.

Anyoperationmoderead/write:

0-7h

TheADCmoduleallowsatriggersourcetobeselectedfortheGroup2fromuptoeightoptions.

Theseoptionsaredevice-specificandthedevicespecificationmustbereferredtoidentifythe

actualtriggersources.

720

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.11ADCEventInterruptEnableControlRegister(ADEVINTENA)

ADCEventGroupInterruptEnableControlRegister(ADEVINTENA)isshowninFigure19-27and

describedinTable19-17.

Figure19-27.ADCEventGroupInterruptEnableControlRegister(ADEVINTENA)[offset=28h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

EVENDINTEN

Reserved

EVOVRINTEN

EVTHRINTEN

R-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-17.ADCEventGroupInterruptEnableControlRegister(ADEVINTENA)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

EVENDINTEN

EventGroupConversionEndInterruptEnable.PleaserefertoSection19.5.1formoredetailson

theconversionendinterrupts.

Anyoperationmoderead/write:

0

NointerruptisgeneratedwhenconversionofallthechannelsselectedforconversionintheEvent

Groupisdone.

1

AnEventGroupconversionendinterruptisgeneratedwhenconversionofallthechannelsselected

forconversionintheEventGroupisdone.

2

Reserved

0

Readsreturnzeros,writeshavenoeffect.

1

EVOVRINTEN

EventGroupMemoryOverrunInterruptEnable.AmemoryoverrunoccurswhentheADCtriesto

writeanewconversionresulttotheEventGroupresultsmemorywhichisalreadyfull.Formore

detailsontheoverruninterruptspleaserefertoSection19.5.3.

Anyoperationmoderead/write:

0

NointerruptisgeneratedifanEventGroupmemoryoverrunoccurs.

1

AnEventGroupmemoryoverruninterruptisgeneratedifanEventGroupmemoryoverrun

conditionoccurs.

0

EVTHRINTEN

EventGroupThresholdInterruptEnable.AnEventGroupthresholdinterruptoccurswhenthe

programmedEventGroupthresholdcountercountsdowntozero.PleaserefertoSection19.5.2for

moredetails.

Anyoperationmoderead/write:

0

NointerruptisgeneratediftheEventGroupthresholdcounterreacheszero.

1

AnEventGroupthresholdinterruptisgeneratediftheEventGroupthresholdcounterreacheszero.

721

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.12ADCGroup1InterruptEnableControlRegister(ADG1INTENA)

ADCGroup1InterruptEnableControlRegister(ADG1INTENA)isshowninFigure19-28anddescribedin

Table19-18.

Figure19-28.ADCGroup1InterruptEnableControlRegister(ADG1INTENA)[offset=2Ch]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

G1ENDINTEN

Reserved

G1OVRINTEN

G1THRINTEN

R-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-18.ADCGroup1InterruptEnableControlRegister(ADG1INTENA)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

G1ENDINTEN

Group1ConversionEndInterruptEnable.PleaserefertoSection19.5.1formoredetailsonthe

conversionendinterrupts.

Anyoperationmoderead/write:

0

NointerruptisgeneratedwhenconversionofallthechannelsselectedforconversionintheGroup1

isdone.

1

AGroup1conversionendinterruptisgeneratedwhenconversionofallthechannelsselectedfor

conversionintheGroup1isdone.

2

Reserved

0

Readsreturnzeros,writeshavenoeffect.

1

G1OVRINTEN

Group1MemoryOverrunInterruptEnable.AmemoryoverrunoccurswhentheADCtriestowritea

newconversionresulttotheGroup1resultsmemorywhichisalreadyfull.Formoredetailsonthe

overruninterruptspleaserefertoSection19.5.3.

Anyoperationmoderead/write:

0

NointerruptisgeneratedifaGroup1memoryoverrunoccurs.

1

AGroup1memoryoverruninterruptisgeneratedifaGroup1memoryoverrunconditionoccurs.

0

G1THRINTEN

Group1ThresholdInterruptEnable.AGroup1thresholdinterruptoccurswhentheprogrammed

Group1thresholdcountercountsdowntozero.PleaserefertoSection19.5.2formoredetails.

Anyoperationmoderead/write:

0

NointerruptisgeneratediftheGroup1thresholdcounterreacheszero.

1

AGroup1thresholdinterruptisgeneratediftheGroup1thresholdcounterreacheszero.

722

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.13ADCGroup2InterruptEnableControlRegister(ADG2INTENA)

ADCGroup2InterruptEnableControlRegister(ADG2INTENA)isshowninFigure19-29anddescribedin

Table19-19.

Figure19-29.ADCGroup2InterruptEnableControlRegister(ADG2INTENA)[offset=30h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

G2ENDINTEN

Reserved

G2OVRINTEN

G2THRINTEN

R-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-19.ADCGroup2InterruptEnableControlRegister(ADG2INTENA)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

G2ENDINTEN

Group2ConversionEndInterruptEnable.PleaserefertoSection19.5.1formoredetailsonthe

conversionendinterrupts.

Anyoperationmoderead/write:

0

NointerruptisgeneratedwhenconversionofallthechannelsselectedforconversionintheGroup2

isdone.

1

AGroup2conversionendinterruptisgeneratedwhenconversionofallthechannelsselectedfor

conversionintheGroup2isdone.

2

Reserved

0

Readsreturnzeros,writeshavenoeffect.

1

G2OVRINTEN

Group2MemoryOverrunInterruptEnable.AmemoryoverrunoccurswhentheADCtriestowritea

newconversionresulttotheGroup2resultsmemorywhichisalreadyfull.Formoredetailsonthe

overruninterruptspleaserefertoSection19.5.3.

Anyoperationmoderead/write:

0

NointerruptisgeneratedifaGroup2memoryoverrunoccurs.

1

AGroup2memoryoverruninterruptisgeneratedifaGroup2memoryoverrunconditionoccurs.

0

G2THRINTEN

Group2ThresholdInterruptEnable.AGroup2thresholdinterruptoccurswhentheprogrammed

Group2thresholdcountercountsdowntozero.PleaserefertoSection19.5.2formoredetails.

Anyoperationmoderead/write:

0

NointerruptisgeneratediftheGroup2thresholdcounterreacheszero.

1

AGroup2thresholdinterruptisgeneratediftheGroup2thresholdcounterreacheszero.

723

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.14ADCEventGroupInterruptFlagRegister(ADEVINTFLG)

ADCEventGroupInterruptEnableControlRegister(ADEVINTENA)isshowninFigure19-30and

describedinTable19-20.

Figure19-30.ADCEventGroupInterruptFlagRegister(ADEVINTFLG)[offset=34h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

EVEND

EVMEMEMPTY

EVMEMOVERRUN

EVTHRINTFLG

R-0

R/C-0

R-1

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table19-20.ADCEventGroupInterruptFlagRegister(ADEVINTFLG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

EVEND

EventGroupConversionEnd.ThisbitwillbesetonlyiftheEventGroupconversionsare

configuredtobeinthesingle-conversionmode.

Anyoperationmoderead:

0

AllthechannelsselectedforconversionintheEventGrouphavenotyetbeenconverted.

1

AllthechannelsselectedforconversionintheEventGrouphavebeenconverted.AnEvent

Groupconversionendinterruptisgenerated,ifenabled,whenthisbitgetsset.

Thisbitcanbeclearedbyanyoneofthefollowingways:

•Bywritinga'1'tothisbit

•Bywritinga'1'totheEventGroupstatusregisterbit0(EVEND)

•ByreadingoneconversionresultfromtheEventGroupresults’memoryinthe“readfrom

FIFO”mode

•BywritinganewsetofchannelstotheEventGroupchannelselectregister

2

EVMEMEMPTY

EventGroupResultsMemoryEmpty.Thisisaread-onlybit;writeshavenoeffect.Itisnota

sourceofaninterruptfromtheADCmodule.

Anyoperationmoderead:

0

TheEventGroupresultsmemoryisnotempty.

1

TheEventGroupresultsmemoryisempty.

1

EVMEMOVERRUN

EventGroupMemoryOverrun.Thisisaread-onlybit;writeshavenoeffect.

Anyoperationmoderead:

0

EventGroupresultsmemoryhasnotoverrun.

1

EventGroupresultsmemoryhasoverrun.

0

EVTHRINTFLG

EventGroupThresholdInterruptFlag.

Anyoperationmoderead:

0

ThenumberofconversionscompletedfortheEventGroupissmallerthanthethreshold

programmedintheEventGroupinterruptthresholdregister.

1

ThenumberofconversionscompletedfortheEventGroupisequaltoorgreaterthanthe

thresholdprogrammedintheEventGroupinterruptthresholdregister.

Thisbitcanbeclearedbywritinga'1';writinga'0'hasnoeffect.

724

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.15ADCGroup1InterruptFlagRegister(ADG1INTFLG)

ADCGroup1InterruptFlagRegister(ADG1INTFLG)isshowninFigure19-31anddescribedinTable19-

21.

Figure19-31.ADCGroup1InterruptFlagRegister(ADG1INTFLG)[offset=38h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

G1END

G1MEMEMPTY

G1MEMOVERRUN

G1THRINTFLG

R-0

R/C-0

R-1

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table19-21.ADCGroup1InterruptFlagRegister(ADG1INTFLG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

G1END

Group1ConversionEnd.ThisbitwillbesetonlyiftheGroup1conversionsareconfiguredtobe

inthesingle-conversionmode.

Anyoperationmoderead:

0

AllthechannelsselectedforconversionintheGroup1havenotyetbeenconverted.

1

AllthechannelsselectedforconversionintheGroup1havebeenconverted.AGroup1

conversionendinterruptisgenerated,ifenabled,whenthisbitgetsset.

Thisbitcanbeclearedbyanyoneofthefollowingways:

•Bywritinga'1'tothisbit

•Bywritinga'1'totheGroup1statusregisterbit0(G1END)

•ByreadingoneconversionresultfromtheGroup1results’memoryinthe“readfromFIFO”

mode

•BywritinganewsetofchannelstotheGroup1channelselectregister

2

G1MEMEMPTY

Group1ResultsMemoryEmpty.Thisisaread-onlybit;writeshavenoeffect.Itisnotasource

ofaninterruptfromtheADCmodule.

Anyoperationmoderead:

0

TheGroup1resultsmemoryisnotempty.

1

TheGroup1resultsmemoryisempty.

1

G1MEMOVERRUN

Group1MemoryOverrun.Thisisaread-onlybit;writeshavenoeffect.

Anyoperationmoderead:

0

Group1resultsmemoryhasnotoverrun.

1

Group1resultsmemoryhasoverrun.

0

G1THRINTFLG

Group1ThresholdInterruptFlag.

Anyoperationmoderead:

0

ThenumberofconversionscompletedfortheGroup1issmallerthanthethreshold

programmedintheGroup1interruptthresholdregister.

1

ThenumberofconversionscompletedfortheGroup1isequaltoorgreaterthanthethreshold

programmedintheGroup1interruptthresholdregister.

Thisbitcanbeclearedbywritinga'1';writinga'0'hasnoeffect.

725

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.16ADCGroup2InterruptFlagRegister(ADG2INTFLG)

ADCGroup2InterruptFlagRegister(ADG2INTFLG)isshowninFigure19-32anddescribedinTable19-

22.

Figure19-32.ADCGroup2InterruptFlagRegister(ADG2INTFLG)[offset=3Ch]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

G2END

G2MEMEMPTY

G2MEMOVERRUN

G2THRINTFLG

R-0

R/C-0

R-1

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table19-22.ADCGroup2InterruptFlagRegister(ADG2INTFLG)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

G2END

Group2ConversionEnd.ThisbitwillbesetonlyiftheGroup2conversionsareconfiguredtobe

inthesingle-conversionmode.

Anyoperationmoderead:

0

AllthechannelsselectedforconversionintheGroup2havenotyetbeenconverted.

1

AllthechannelsselectedforconversionintheGroup2havebeenconverted.AGroup2

conversionendinterruptisgenerated,ifenabled,whenthisbitgetsset.

Thisbitcanbeclearedbyanyoneofthefollowingways:

•Bywritinga'1'tothisbit

•Bywritinga'1'totheGroup2statusregisterbit0(G2END)

•ByreadingoneconversionresultfromtheGroup2results’memoryinthe“readfromFIFO”

mode

•BywritinganewsetofchannelstotheGroup2channelselectregister

2

G2MEMEMPTY

Group2ResultsMemoryEmpty.Thisisaread-onlybit;writeshavenoeffect.Itisnotasource

ofaninterruptfromtheADCmodule.

Anyoperationmoderead:

0

TheGroup2resultsmemoryisnotempty.

1

TheGroup2resultsmemoryisempty.

1

G2MEMOVERRUN

Group2MemoryOverrun.Thisisaread-onlybit;writeshavenoeffect.

Anyoperationmoderead:

0

Group2resultsmemoryhasnotoverrun.

1

Group2resultsmemoryhasoverrun.

0

G2THRINTFLG

Group2ThresholdInterruptFlag.

Anyoperationmoderead:

0

ThenumberofconversionscompletedfortheGroup2issmallerthanthethreshold

programmedintheGroup2interruptthresholdregister.

1

ThenumberofconversionscompletedfortheGroup2isequaltoorgreaterthanthethreshold

programmedintheGroup2interruptthresholdregister.

Thisbitcanbeclearedbywritinga'1';writinga'0'hasnoeffect.

726

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.17ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR)

ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR)isshowninFigure19-33and

describedinTable19-23.

Figure19-33.ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR)[offset=

40h]

31

16

15

9

8

0

Reserved

SignExtension

EVTHR

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-23.ADCEventGroupThresholdInterruptControlRegister(ADEVTHRINTCR)Field

Descriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-9

SignExtension

Thesebitsalwaysreadthesameasthebit8ofthisregister.

8-0

EVTHR

EventGroupThresholdCounter.

BeforeADCconversionsbeginontheEventGroup,thisfieldisinitializedtothenumberof

conversionresultsthattheEventGroupmemoryshouldcontainbeforeinterruptingtheCPU.This

counterdecrementswhentheADCmodulewritesanewconversionresulttotheEventGroup

results’memory.ThecounterincrementsforeachreadofaconversionresultfromtheEventGroup

results’memoryinthe“readfromFIFO”mode.Thethresholdcounterisnotaffectedforadirect

readfromtheEventGroupresults’memory.Also,asimultaneousADCwriteandaCPU/DMAread

fromtheEventGroupFIFOwillleavethethresholdcounterunchanged.IncaseofanEventGroup

Results’memoryoverruncondition,ifnewconversionresultsarenotallowedtooverwritethe

existingmemorycontents,thentheEventGroupthresholdcounterisnotdecremented.

PleaserefertoSection19.5.2formoredetailsonthethresholdinterrupts.

19.11.18ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR)

ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR)isshowninFigure19-34and

describedinTable19-24.

Figure19-34.ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR)[offset=44h]

31

16

15

9

8

0

Reserved

SignExtension

G1THR

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-24.ADCGroup1ThresholdInterruptControlRegister(ADG1THRINTCR)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-9

SignExtension

Thesebitsalwaysreadthesameasthebit8ofthisregister.

8-0

G1THR

Group1ThresholdCounter.

BeforeADCconversionsbeginontheGroup1,thisfieldisinitializedtothenumberofconversion

resultsthattheGroup1memoryshouldcontainbeforeinterruptingtheCPU.Thiscounter

decrementswhentheADCmodulewritesanewconversionresulttotheGroup1results’memory.

ThecounterincrementsforeachreadofaconversionresultfromtheGroup1results’memoryinthe

“readfromFIFO”mode.Thethresholdcounterisnotaffectedforadirectreadfromthegroup1

results’memory.Also,asimultaneousADCwriteandaCPU/DMAreadfromtheGroup1FIFOwill

leavethethresholdcounterunchanged.IncaseofanGroup1Results’memoryoverruncondition,if

newconversionresultsarenotallowedtooverwritetheexistingmemorycontents,thentheGroup1

thresholdcounterisnotdecremented.

PleaserefertoSection19.5.2formoredetailsonthethresholdinterrupts.

727

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.19ADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR)

TheADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR)isshowninFigure19-35and

describedinTable19-25.

Figure19-35.ADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR)[offset=48h]

31

16

15

9

8

0

Reserved

SignExtension

G2THR

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-25.ADCGroup2ThresholdInterruptControlRegister(ADG2THRINTCR)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-9

SignExtension

Thesebitsalwaysreadthesameasthebit8ofthisregister.

8-0

G2THR

Group2ThresholdCounter.

BeforeADCconversionsbeginontheGroup2,thisfieldisinitializedtothenumberofconversion

resultsthattheGroup2memoryshouldcontainbeforeinterruptingtheCPU.Thiscounter

decrementswhentheADCmodulewritesanewconversionresulttotheGroup2results’memory.

ThecounterincrementsforeachreadofaconversionresultfromtheGroup2results’memoryinthe

“readfromFIFO”mode.Thethresholdcounterisnotaffectedforadirectreadfromthegroup2

results’memory.Also,asimultaneousADCwriteandaCPU/DMAreadfromtheGroup2FIFOwill

leavethethresholdcounterunchanged.IncaseofanGroup2Results’memoryoverruncondition,if

newconversionresultsarenotallowedtooverwritetheexistingmemorycontents,thentheGrou21

thresholdcounterisnotdecremented.

PleaserefertoSection19.5.2formoredetailsonthethresholdinterrupts.

728

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.20ADCEventGroupDMAControlRegister(ADEVDMACR)

ADCEventGroupDMAControlRegister(ADEVDMACR)isshowninFigure19-36anddescribedin

Table19-26.

Figure19-36.ADCEventGroupDMAControlRegister(ADEVDMACR)[offset=4Ch]

31

25

24

16

Reserved

EVBLOCKS

R-0

R/W-0

15

8

Reserved

R-0

7

4

3

2

1

0

Reserved

DMAEVEND

EVBLKXFER

Reserved

EVDMAEN

R-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-26.ADCEventGroupDMAControlRegister(ADEVDMACR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readsreturnzeros,writeshavenoeffect.

24-16

EVBLOCKS

NumberofEventGroupResultbufferstobetransferredusingDMAiftheADCmoduleis

configuredtogenerateaDMArequest.IftheEventGroupisconfiguredtousetheblock

transfermodeoftheDMAmodule,thentheADCmodulegeneratesaDMArequestafterthe

EventGroupresults’memoryaccumulatesEVBLOCKSnumberofconversionresults.

ThisfeatureisdesignedtobeusedinplaceofthethresholdinterruptfortheEventGroup.Asa

result,theEVTHRfieldoftheEventGroupInterruptThresholdControlRegisterandtheEV

BLOCKSfieldoftheEventGroupDMAControlRegisterarethesame.

Anyoperationmoderead/write:

0

NoDMAtransferoccursevenifEVBLKXFERissetto'1'.

1h-1FFh

OneDMArequestisgeneratediftheEVBLKXFERissetto‘1’andthespecifiednumberof

EventGroupconversionresultshavebeenaccumulated.

15-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

DMAEVEND

EventGroupConversionEndDMATransferEnable.

Anyoperationmoderead:

ADCmodulegeneratesaDMArequestforeachwritetotheEventgroupresultsRAMifEV

DMAENisset.

ADCmodulegeneratesaDMArequestwhentheADChascompletedtheconversionsforall

channelsselectedforconversionintheeventgroup.

2

EVBLKXFER

EventGroupBlockDMATransferEnable.

Anyoperationmoderead:

0

ADCmodulegeneratesaDMArequestforeachwritetotheEventGroupmemoryifEVDMA

ENisset.

1

ADCmodulegeneratesaDMArequestwhentheADChaswrittenEVBLOCKSnumberof

buffersintotheEventGroupmemory.

IfEVBLKXFERbitissetto'1',EVDMAENbitisignoredandDMArequestswillbegenerated

everytimetheThresholdCounterreaches'0'fromacountvalueof1.

1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

EVDMAEN

EventGroupDMATransferEnable.

Anyoperationmoderead:

0

ADCmoduledoesnotgenerateaDMArequestwhenitwritestheconversionresulttothe

EventGroupmemory.

1

ADCmodulegeneratesaDMAtransferwhentheADChaswrittentotheEventGroupmemory.

TheEVBLKXFERbitmustbeclearedto‘0’forthisDMArequesttobegenerated.

729

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.21ADCGroup1DMAControlRegister(ADG1DMACR)

ADCGroup1DMAControlRegister(ADG1DMACR)isshowninFigure19-37anddescribedinTable19-

27.

Figure19-37.ADCGroup1DMAControlRegister(ADG1DMACR)[offset=50h]

31

25

24

16

Reserved

G1BLOCKS

R-0

R/W-0

15

8

Reserved

R-0

7

4

3

2

1

0

Reserved

DMAG1END

G1BLKXFER

Reserved

G1DMAEN

R-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-27.ADCGroup1DMAControlRegister(ADG1DMACR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readsreturnzeros,writeshavenoeffect.

24-16

G1BLOCKS

NumberofGroup1ResultbufferstobetransferredusingDMAiftheADCmoduleisconfigured

togenerateaDMArequest.IftheGroup1isconfiguredtousetheblocktransfermodeofthe

DMAmodule,thentheADCmodulegeneratesaDMArequestaftertheGroup1results’

memoryaccumulatesG1BLOCKSnumberofconversionresults.

ThisfeatureisdesignedtobeusedinplaceofthethresholdinterruptfortheGroup1.Asa

result,theG1THRfieldoftheGroup1InterruptThresholdControlRegisterandtheG1

BLOCKSfieldoftheGroup1DMAControlRegisterarethesame.

Anyoperationmoderead/write:

0

NoDMAtransferoccursevenifG1BLKXFERissetto'1'.

1h-1FFh

OneDMArequestisgeneratediftheG1BLKXFERissetto‘1’andthespecifiednumberof

Group1conversionresultshavebeenaccumulated.

15-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

DMAG1END

Group1ConversionEndDMATransferEnable.

Anyoperationmoderead:

ADCmodulegeneratesaDMArequestforeachwritetothegroup1resultsRAMifG1DMAEN

isset.

ADCmodulegeneratesaDMArequestwhentheADChascompletedtheconversionsforall

channelsselectedforconversioninthegroup1.

2

G1BLKXFER

Group1BlockDMATransferEnable.

Anyoperationmoderead:

0

ADCmodulegeneratesaDMArequestforeachwritetotheGroup1memoryifG1DMAENis

set.

1

ADCmodulegeneratesaDMArequestwhentheADChaswrittenG1BLOCKSnumberof

buffersintotheGroup1memory.

IfG1BLKXFERbitissetto'1',G1DMAENbitisignoredandDMArequestswillbegenerated

everytimetheThresholdCounterreaches'0'fromacountvalueof1.

1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

G1DMAEN

Group1DMATransferEnable.

Anyoperationmoderead:

0

ADCmoduledoesnotgenerateaDMArequestwhenitwritestheconversionresulttothe

Group1memory.

1

ADCmodulegeneratesaDMAtransferwhentheADChaswrittentotheGroup1memory.The

G1BLKXFERbitmustbeclearedto‘0’forthisDMArequesttobegenerated.

730

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.22ADCGroup2DMAControlRegister(ADG2DMACR)

ADCGroup2DMAControlRegister(ADG2DMACR)isshowninFigure19-38anddescribedinTable19-

28.

Figure19-38.ADCGroup2DMAControlRegister(ADG2DMACR)[offset=54h]

31

25

24

16

Reserved

G2BLOCKS

R-0

R/W-0

15

8

Reserved

R-0

7

4

3

2

1

0

Reserved

DMAG2END

G2BLKXFER

Reserved

G2DMAEN

R-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-28.ADCGroup2DMAControlRegister(ADG2DMACR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readsreturnzeros,writeshavenoeffect.

24-16

G2BLOCKS

NumberofGroup2ResultbufferstobetransferredusingDMAiftheADCmoduleisconfigured

togenerateaDMArequest.IftheGroup2isconfiguredtousetheblocktransfermodeofthe

DMAmodule,thentheADCmodulegeneratesaDMArequestaftertheGroup2results’

memoryaccumulatesG2BLOCKSnumberofconversionresults.

ThisfeatureisdesignedtobeusedinplaceofthethresholdinterruptfortheGroup2.Asa

result,theG2THRfieldoftheGroup2InterruptThresholdControlRegisterandtheG2

BLOCKSfieldoftheGroup2DMAControlRegisterarethesame.

Anyoperationmoderead/write:

0

NoDMAtransferoccursevenifG2BLKXFERissetto'1'.

1h-1FFh

OneDMArequestisgeneratediftheG2BLKXFERissetto‘1’andthespecifiednumberof

Group2conversionresultshavebeenaccumulated.

15-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

DMAG2END

Group2ConversionEndDMATransferEnable.

Anyoperationmoderead:

ADCmodulegeneratesaDMArequestforeachwritetothegroup2resultsRAMifG2DMAEN

isset.

ADCmodulegeneratesaDMArequestwhentheADChascompletedtheconversionsforall

channelsselectedforconversioninthegroup2.

2

G2BLKXFER

Group2BlockDMATransferEnable.

Anyoperationmoderead:

0

ADCmodulegeneratesaDMArequestforeachwritetotheGroup2memoryifG2DMAENis

set.

1

ADCmodulegeneratesaDMArequestwhentheADChaswrittenG2BLOCKSnumberof

buffersintotheGroup2memory.

IfG2BLKXFERbitissetto'1',G2DMAENbitisignoredandDMArequestswillbegenerated

everytimetheThresholdCounterreaches'0'fromacountvalueof1.

1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

G2DMAEN

Group2DMATransferEnable.

Anyoperationmoderead:

0

ADCmoduledoesnotgenerateaDMArequestwhenitwritestheconversionresulttothe

Group2memory.

1

ADCmodulegeneratesaDMAtransferwhentheADChaswrittentotheGroup2memory.The

G2BLKXFERbitmustbeclearedto‘0’forthisDMArequesttobegenerated.

731

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.23ADCResultsMemoryConfigurationRegister(ADBNDCR)

ADCResultsMemoryConfigurationRegister(ADBNDCR)[offset=0x58]isshowninFigure19-39and

describedinTable19-29.

Figure19-39.ADCResultsMemoryConfigurationRegister(ADBNDCR)[offset=58h]

31

25

24

16

15

9

8

0

Reserved

BNDA

Reserved

BNDB

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-29.ADCResultsMemoryConfigurationRegister(ADBNDCR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readsreturnzeros,writeshavenoeffect.

24-16

BNDA

BufferBoundaryA.ThesebitsdeterminethememoryavailablefortheEventGroupconversion

results.Thememoryavailableisspecifiedintermsofpairsofresultbuffers.

Anyoperationmoderead/write:

0

EventGroupconversionsarenotrequired.IfEventGroupconversionsareperformedwiththe

BNDAvalueofzero,thentheEventGroupmemorysizewilldefaultto1024words.Forproper

usageoftheADCresultsmemory,configuretheBNDAvaluetobenon-zeroandlowerthanthe

BNDBvalue.

0-1FFh

Atotalof(2*BNDA)buffersareavailableintheADCresultsmemoryforstoringEventGroup

conversionresults.

15-9

Reserved

0

Readsreturnzeros,writeshavenoeffect.

8-0

BNDB

BufferBoundaryB.ThesebitsspecifythenumberofbuffersallocatedfortheEventGroupplusthe

numberofbuffersallocatedfortheGroup1.ThenumberofbufferpairsallocatedforstoringGroup1

conversionresultscanbedeterminedbysubtractingBNDAfromBNDB.Asaresult,BNDBmust

alwaysbespecifiedasgreaterthanorequaltoBNDA.

Anyoperationmoderead/write:

0

EventGroupaswellasGroup1conversionsarenotrequired.

0-1FFh

Atotalof2*(BNDB-BNDA)buffersareavailableintheADCresultsmemoryforstoringGroup1

conversionresults.

PleaserefertoSection19.3.8forfurtherdetailsonhowtheconversionresultsarestoredintheADC

results’RAM.

732

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.24ADCResultsMemorySizeConfigurationRegister(ADBNDEND)

ADCResultsMemorySizeConfigurationRegister(ADBNDEND)isshowninFigure19-40anddescribed

inTable19-30.

Figure19-40.ADCResultsMemorySizeConfigurationRegister(ADBNDEND)[offset=5Ch]

31

17

16

15

3

2

0

Reserved

BUFINITACTIVE

Reserved

BNDEND

R-0

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-30.ADCResultsMemorySizeConfigurationRegister(ADBNDEND)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturnzeros,writeshavenoeffect.

16

BUFINITACTIVE

ADCResultsMemoryAuto-initializationStatus.

Anyoperationmoderead/write:

0

ADCResultsMemoryiscurrentlynotbeinginitialized,andtheADCisavailable.Ifthisbitis

readas'0'aftertriggeringanauto-initializationoftheADCresultsmemory,thentheADC

resultsmemoryhasbeencompletelyinitializedtozeros.Fordevicesrequiringparitychecking

ontheADCresultsmemory,theparitybitintheresultsmemorywillalsobeinitializedaccording

totheparitypolarity.Theparitypolarityaswellastheauto-initializationprocessiscontrolledby

theSystemmodule.PleaserefertoChapter2formoredetails.

1

ADCresultsmemoryisbeinginitialized,andtheADCisnotavailableforconversion.

15-3

Reserved

0

Readsreturnzeros,writeshavenoeffect.

2-0

BNDEND

BufferBoundaryEnd.Thesebitsspecifythetotalnumberofmemorybuffersavailablefor

storingtheADCconversionresults.Thesebitsshouldbeprogrammedtomatchthenumberof

ADCconversionresultbuffersrequiredtobeusedfortheapplication.

Anyoperationmoderead/write:

0

16wordsavailableforstoringADCconversionresults.

1h

32wordsavailableforstoringADCconversionresults.

2h

64wordsavailableforstoringADCconversionresults.Thisisthemaximumconfiguration

allowedsincethedevicesupports64bufferseachforADC1aswellasADC2.

4h-7h

Reserved.Thesecombinationsmustnotbeused.

733

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.25ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)

ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)isshowninFigure19-41and

describedinTable19-31.

Figure19-41.ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)[offset=60h]

31

12

11

0

Reserved

EVACQ

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-31.ADCEventGroupSamplingTimeConfigurationRegister(ADEVSAMP)

FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readsreturnzeros,writeshavenoeffect.

11-0

EVACQ

EventGroupAcquisitionTime.Thesebitsdefinethesamplingwindow(SW)fortheEventGroup

conversions.

SW=EVACQ+2intermsofADCLKcycles.

Therearetwofactorsthatdeterminetheminimumsamplingwindowvaluerequired:

First,theADCmoduledesignrequiresthatSW>=3ADCLKcycles.

Second,theADCinputimpedancenecessitatesacertainminimumsamplingtime.Thisneedstobe

guaranteedbyconfiguringtheEVACQvalueproperlyconsideringthefrequencyoftheADCLK

signal.Pleaserefertothedevicedatasheettodeterminetheminimumsamplingtimeforthis

device.

19.11.26ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP)

ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP)isshowninFigure19-42and

describedinTable19-32.

Figure19-42.ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP)[offset=64h]

31

12

11

0

Reserved

G1ACQ

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-32.ADCGroup1SamplingTimeConfigurationRegister(ADG1SAMP)

FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readsreturnzeros,writeshavenoeffect.

11-0

G1ACQ

Group1AcquisitionTime.Thesebitsdefinethesamplingwindow(SW)fortheGroup1conversions.

SW=G1ACQ+2intermsofADCLKcycles.

Therearetwofactorsthatdeterminetheminimumsamplingwindowvaluerequired:

First,theADCmoduledesignrequiresthatSW>=3ADCLKcycles.

Second,theADCinputimpedancenecessitatesacertainminimumsamplingtime.Thisneedstobe

guaranteedbyconfiguringtheG1ACQvalueproperlyconsideringthefrequencyoftheADCLK

signal.Pleaserefertothedevicedatasheettodeterminetheminimumsamplingtimeforthis

device.

734

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.27ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP)

ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP)isshowninFigure19-43and

describedinTable19-33.

Figure19-43.ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP)[offset=68h]

31

12

11

0

Reserved

G2ACQ

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-33.ADCGroup2SamplingTimeConfigurationRegister(ADG2SAMP)

FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readsreturnzeros,writeshavenoeffect.

11-0

G2ACQ

Group2AcquisitionTime.Thesebitsdefinethesamplingwindow(SW)fortheGroup2conversions.

SW=G2ACQ+2intermsofADCLKcycles.

Therearetwofactorsthatdeterminetheminimumsamplingwindowvaluerequired:

First,theADCmoduledesignrequiresthatSW>=3ADCLKcycles.

Second,theADCinputimpedancenecessitatesacertainminimumsamplingtime.Thisneedstobe

guaranteedbyconfiguringtheG2ACQvalueproperlyconsideringthefrequencyoftheADCLK

signal.Pleaserefertothedevicedatasheettodeterminetheminimumsamplingtimeforthis

device.

735

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.28ADCEventGroupStatusRegister(ADEVSR)

ADCEventGroupStatusRegister(ADEVSR)isshowninFigure19-44anddescribedinTable19-34.

Figure19-44.ADCEventGroupStatusRegister(ADEVSR)[offset=6Ch]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

EVMEMEMPTY

EVBUSY

EVSTOP

EVEND

R-0

R-1

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-34.ADCEventGroupStatusRegister(ADEVSR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

EVMEMEMPTY

EventGroupResultsMemoryEmpty.Thisbitcanbeeffectivelyusedonlywhentheconversion

resultsarereadoutoftheEventGroupresultsmemoryinthe"readfromFIFO"mode.

Anyoperationmoderead:

0

TheEventGroupresultsmemoryhasvalidconversionresults.

1

TheEventGroupresultsmemoryisempty,ordoesnotcontainanyunreadconversionresults.

2

EVBUSY

EventGroupConversionBusy.

Anyoperationmoderead:

0

EventGroupconversionsareneitherinprogressnorfrozen.

1

EventGroupconversionsareeitherinprogress,orarefrozenforservicingsomeothergroup.This

bitwillalwaysbesetwhentheEventGroupisconfiguredtobeinthecontinuousconversionmode.

1

EVSTOP

EventGroupConversionStopped.

Anyoperationmoderead:

0

EventGroupconversionsarenotcurrentlyfrozen.

1

EventGroupconversionsarecurrentlyfrozen.

0

EVEND

EventGroupConversionsEnded.

Anyoperationmoderead:

0

EventGroupconversionshaveeithernotbeenstartedorhavenotyetcompletedsincethelasttime

thisstatusbitwascleared.

1

TheconversionforallthechannelsselectedintheEventGrouphascompleted.Thisbitcanbe

clearedunderthefollowingconditions:

•ByreadingaconversionresultfromtheEventGroupresultsmemoryinthe"readfromFIFO"

mode.

•BywritinganewvaluetotheEventGroupchannelselectregisterADEVSEL.

•Bywritinga'1'tothisbit.

•BydisablingtheADCmodulebyclearingtheADCENbit.

736

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.29ADCGroup1StatusRegister(ADG1SR)

ADCGroup1StatusRegister(ADG1SR)isshowninFigure19-45anddescribedinTable19-35.

Figure19-45.ADCGroup1StatusRegister(ADG1SR)[offset=70h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

G1MEMEMPTY

G1BUSY

G1STOP

G1END

R-0

R-1

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-35.ADCGroup1StatusRegister(ADG1SR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

G1MEMEMPTY

Group1ResultsMemoryEmpty.Thisbitcanbeeffectivelyusedonlywhentheconversionresults

arereadoutoftheGroup1resultsmemoryinthe"readfromFIFO"mode.

Anyoperationmoderead:

0

TheGroup1resultsmemoryhasvalidconversionresults.

1

TheGroup1resultsmemoryisempty,ordoesnotcontainanyunreadconversionresults.

2

G1BUSY

Group1ConversionBusy.

Anyoperationmoderead:

0

Group1conversionsareneitherinprogressnorfrozen.

1

Group1conversionsareeitherinprogress,orarefrozenforservicingsomeothergroup.Thisbit

willalwaysbesetwhentheGroup1isconfiguredtobeinthecontinuousconversionmode.

1

G1STOP

Group1ConversionStopped.

Anyoperationmoderead:

0

Group1conversionsarenotcurrentlyfrozen.

1

Group1conversionsarecurrentlyfrozen.

0

G1END

Group1ConversionsEnded.

Anyoperationmoderead:

0

Group1conversionshaveeithernotbeenstartedorhavenotyetcompletedsincethelasttimethis

statusbitwascleared.

1

TheconversionforallthechannelsselectedintheGroup1hascompleted.Thisbitcanbecleared

underthefollowingconditions:

•ByreadingaconversionresultfromtheGroup1resultsmemoryinthe"readfromFIFO"mode.

•BywritinganewvaluetotheGroup1channelselectregisterADG1SEL.

•Bywritinga'1'tothisbit.

•BydisablingtheADCmodulebyclearingtheADCENbit.

737

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.30ADCGroup2StatusRegister(ADG2SR)

ADCGroup2StatusRegister(ADG2SR)isshowninFigure19-46anddescribedinTable19-36.

Figure19-46.ADCGroup2StatusRegister(ADG2SR)[offset=74h]

31

8

Reserved

R-0

7

4

3

2

1

0

Reserved

G2MEMEMPTY

G2BUSY

G2STOP

G2END

R-0

R-1

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-36.ADCGroup2StatusRegister(ADG2SR)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3

G2MEMEMPTY

Group2ResultsMemoryEmpty.Thisbitcanbeeffectivelyusedonlywhentheconversionresults

arereadoutoftheGroup2resultsmemoryinthe"readfromFIFO"mode.

Anyoperationmoderead:

0

TheGroup2resultsmemoryhasvalidconversionresults.

1

TheGroup2resultsmemoryisempty,ordoesnotcontainanyunreadconversionresults.

2

G2BUSY

Group2ConversionBusy.

Anyoperationmoderead:

0

Group2conversionsareneitherinprogressnorfrozen.

1

Group2conversionsareeitherinprogress,orarefrozenforservicingsomeothergroup.Thisbit

willalwaysbesetwhentheGroup2isconfiguredtobeinthecontinuousconversionmode.

1

G2STOP

Group2ConversionStopped.

Anyoperationmoderead:

0

Group2conversionsarenotcurrentlyfrozen.

1

Group2conversionsarecurrentlyfrozen.

0

G2END

Group2ConversionsEnded.

Anyoperationmoderead:

0

Group2conversionshaveeithernotbeenstartedorhavenotyetcompletedsincethelasttimethis

statusbitwascleared.

1

TheconversionforallthechannelsselectedintheGroup2hascompleted.Thisbitcanbecleared

underthefollowingconditions:

•ByreadingaconversionresultfromtheGroup2resultsmemoryinthe"readfromFIFO"mode.

•BywritinganewvaluetotheGroup2channelselectregisterADG2SEL.

•Bywritinga'1'tothisbit.

•BydisablingtheADCmodulebyclearingtheADCENbit.

738

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.31ADCEventGroupChannelSelectRegister(ADEVSEL)

ADCEventGroupChannelSelectRegister(ADEVSEL)isshowninFigure19-47anddescribedin

Table19-37.

Figure19-47.ADCEventGroupChannelSelectRegister(ADEVSEL)[offset=78h]

31

24

23

0

Reserved

VSEL

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-37.ADCEventGroupChannelSelectRegister(ADEVSEL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-0

EVSEL

EventGroupchannelsselected.

Anyoperationmoderead/write:

0

NoADCinputchannelisselectedforconversionintheEventGroup.

Non-zero

Thechannelsmarkedbythebitpositionsthataresetto‘1’willbeconvertedinascending

orderwhentheEventGroupistriggered.

NOTE:ClearingADEVSELDuringaConversion

Writing0x0000toADEVSELstopstheEventGroupconversions.Thisdoesnotcausethe

ADCEventGroupresultsMemorypointerortheEventGroupThresholdRegistertobe

reset.

NOTE:WritingANon-ZeroValueToADEVSELDuringaConversion

WritinganewvaluetoADEVSELwhileaChannelinEventGroupisbeingconvertedresults

inanewconversionsequencestartingimmediatelywiththehighestprioritychannelinthe

newADEVSELselection.ThisalsocausestheADCEventGroupResultsMemorypointerto

beresetsothatthememoryallocatedforstoringtheEventGroupconversionresultsgets

overwritten.Careshouldbetakentore-programthecorrespondingInterruptThreshold

CounterorDMAThresholdCounteragainsothatcorrectnumberofconversionshappen

beforeaThresholdinterruptorBlockDMArequestisgenerated.

ADC1supportsupto24channelsandADC2supportsupto16channelsonthemicrocontroller.

739

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.32ADCGroup1ChannelSelectRegister(ADG1SEL)

ADCGroup1ChannelSelectRegister(ADG1SEL)isshowninFigure19-48anddescribedinTable19-38.

Figure19-48.ADCGroup1ChannelSelectRegister(ADG1SEL)[offset=7Ch]

31

24

23

0

Reserved

G1SEL

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-38.ADCGroup1ChannelSelectRegister(ADG1SEL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-0

G1SEL

Group1channelsselected.

Anyoperationmoderead/write:

0

NoADCinputchannelisselectedforconversionintheGroup1.

Non-zero

Thechannelsmarkedbythebitpositionsthataresetto‘1’willbeconvertedinascending

orderwhentheGroup1istriggered.

NOTE:ClearingADG1SELDuringaConversion

Writing0x0000toADG1SELstopstheGroup1conversions.ThisdoesnotcausetheADC

Group1ResultsMemorypointerortheGroup1ThresholdRegistertobereset.

NOTE:WritingANon-ZeroValueToADG1SELDuringaConversion

WritinganewvaluetoADG1SELwhileaChannelinGroup1isbeingconvertedresultsina

newconversionsequencestartingimmediatelywiththehighestprioritychannelinthenew

ADG1SELselection.ThisalsocausestheADCGroup1ResultsMemorypointertobereset

sothatthememoryallocatedforstoringtheGroup1conversionresultsgetsoverwritten.

Careshouldbetakentore-programthecorrespondingInterruptThresholdCounterorDMA

ThresholdCounteragainsothatcorrectnumberofconversionshappenbeforeaThreshold

interruptorBlockDMArequestisgenerated.

ADC1supportsupto24channelsandADC2supportsupto16channelsonthemicrocontroller.

740

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.33ADCGroup2ChannelSelectRegister(ADG2SEL)

ADCGroup2ChannelSelectRegister(ADG2SEL)isshowninFigure19-49anddescribedinTable19-39.

Figure19-49.ADCGroup2ChannelSelectRegister(ADG2SEL)[offset=80h]

31

24

23

0

Reserved

G2SEL

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-39.ADCGroup2ChannelSelectRegister(ADG2SEL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-0

G2SEL

Group2channelsselected.

Anyoperationmoderead/write:

0

NoADCinputchannelisselectedforconversionintheGroup2.

Non-zero

Thechannelsmarkedbythebitpositionsthataresetto‘1’willbeconvertedinascending

orderwhentheGroup2istriggered.

NOTE:ClearingADG2SELDuringaConversion

Writing0x0000toADG2SELstopstheGroup2conversions.ThisdoesnotcausetheADC

Group2ResultsMemorypointerortheGroup2ThresholdRegistertobereset.

NOTE:WritingANon-ZeroValueToADG2SELDuringaConversion

WritinganewvaluetoADG2SELwhileaChannelinGroup2isbeingconvertedresultsina

newconversionsequencestartingimmediatelywiththehighestprioritychannelinthenew

ADG2SELselection.ThisalsocausestheADCGroup2ResultsMemorypointertobereset

sothatthememoryallocatedforstoringtheGroup2conversionresultsgetsoverwritten.

Careshouldbetakentore-programthecorrespondingInterruptThresholdCounterorDMA

ThresholdCounteragainsothatcorrectnumberofconversionshappenbeforeaThreshold

interruptorBlockDMArequestisgenerated.

ADC1supportsupto24channelsandADC2supportsupto16channelsonthemicrocontroller.

741

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.34ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)

ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)isshowninFigure19-50anddescribed

inTable19-40.

Figure19-50.ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)[offset=84h]

31

12

11

0

Reserved

ADCALR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-40.ADCCalibrationandErrorOffsetCorrectionRegister(ADCALR)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readsreturnzeros,writeshavenoeffect.

11-0

ADCALR

0-FFFh

ADCCalibrationResultandOffsetErrorCorrectionValue.

TheactualsizeoftheADCALRfieldis12or10bitsdependingonwhethertheADCisconfigured

tohavea12-,or10-bitresolutionrespectively.

TheADCmodulewritestheresultsofthecalibrationconversionstothisregister.Theapplicationis

requiredtousetheseconversionresultsanddeterminetheADCoffseterror.Theapplicationcan

thencomputethecorrectionfortheoffseterrorandthiscorrectionvalueneedstobewrittenbackto

theADCALRregisterinthe2'scomplementform.

Duringnormalconversion(whencalibrationisdisabled),theADCALRregistercontentsare

automaticallyaddedtoeachdigitaloutputfromtheADCcorebeforeitisstoredintheADCresults

memory.Formoredetailsonerrorcalibration,pleaserefertoSection19.8.1.

19.11.35ADCStateMachineStatusRegister(ADSMSTATE)

Figure19-51andTable19-41describetheADSMSTATEregister.

Figure19-51.ADCStateMachineStatusRegister(ADSMSTATE)[offset=88h]

31

4

3

0

Reserved

SMSTATE

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-41.ADCStateMachineStatusRegister(ADSMSTATE)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3-0

SMSTATE

ADCStateMachineCurrentState.

ThesebitsreflectthecurrentstateofthestatemachineandarereservedforusebyTIfordebug

purposes.

742

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.36ADCChannelLastConversionValueRegister(ADLASTCONV)

ADCChannelLastConversionValueRegister(ADLASTCONV)isshowninFigure19-52anddescribedin

Table19-42.

Figure19-52.ADCChannelLastConversionValueRegister(ADLASTCONV)[offset=8Ch]

31

24

23

0

Reserved

LASTCONV

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Table19-42.ADCChannelLastConversionValueRegister(ADLASTCONV)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturnzeros,writeshavenoeffect.

23-0

LASTCONV

ADCInputChannel'sLastConvertedValue.

Thisregisterindicateswhetherthelastconvertedvalueforaparticularinputchannelwasloweror

higherthanthemid-pointofthereferencevoltage.Inotherwords,thisregisteractsasadigital

inputregisterandcanbereadbytheapplicationtodeterminethedigitallevelattheinputpins.

Thisdataisonlyvalidforaninputchannelifithasbeenconvertedatleastonce.

Anyoperationmodereadforeachbitofthisregister:

0

Alevellowerthanthemidpointreferencevoltagewasmeasuredatthelastconversionforthis

channel.

1

Alevelhigherthanthemidpointreferencevoltagewasmeasuredatthelastconversionforthis

channel.

743

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.37ADCEventGroupResults'FIFORegister(ADEVBUFFER)

ADCEventGroupResults'FIFORegister(ADEVBUFFER)isshowninFigure19-53anddescribedin

Table19-43.Asshown,theformatofthedatareadfromtheADEVBUFFERlocationsisdifferentbased

onwhethertheADCmoduleisconfiguredtobea12-bitora10-bitADCmodule.

Figure19-53.12-bitADCEventGroupResults'FIFORegister(ADEVBUFFER)[offset=90h-AFh]

31

30

21

20

16

EVEMPTY

Reserved

EVCHID

R-1

R-0

R-0

15

12

11

0

Reserved

EVDR

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Figure19-54.10-bitADCEventGroupResults'FIFORegister(ADEVBUFFER)[offset=90h-AFh]

31

16

Reserved

R-0

15

14

10

9

0

EVEMPTY

EVCHID

EVDR

R-1

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Table19-43.ADCEventGroupResults'FIFORegister(ADEVBUFFER)FieldDescriptions

Field

Value

Description

Reserved

0

Readsreturnzeros,writeshavenoeffect.

EVEMPTY

EventGroupFIFOEmpty.Thisbitisapplicableonlywhenthe"readfromFIFO"modeisusedforreading

theEventGroupconversionresults.

Anyoperationmoderead:

0

ThedataintheEVDRfieldofthisbufferisvalid.

1

ThedataintheEVDRfieldofthisbufferisnotvalidandtherearenovaliddataintheEventGroupresults

memory.

EVCHID

EventGroupChannelId.Thesebitsarealsoapplicableonlywhenthe"readfromFIFO"modeisusedfor

readingtheEventGroupconversionresults.

Anyoperationmoderead:

0

TheconversionresultintheEVDRfieldofthisbufferisfromtheADCinputchannel0,orthechannelid

modeisdisabledintheEventGroupmodecontrolregister(ADEVMODECR).

1h-17h

TheconversionresultintheEVDRfieldofthisbufferisfromtheADCinputchannelnumberdenotedby

theEVCHIDfield.

EVDR

EventGroupDigitalConversionResult.

TheEventGroupresults’FIFOlocationisaliasedeighttimes,sothatanyword-alignedreadfromthe

addressrange0x90to0xAFresultsinoneconversionresulttobereadfromtheEventGroupresults’

memory.ThisallowstheARMLDMIAinstructiontoreadoutupto8conversionresultsfromtheEvent

Groupresults’memorywithjustoneinstruction.

744

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.38ADCGroup1ResultsFIFORegister(ADG1BUFFER)

ADCGroup1ResultsFIFORegister(ADG1BUFFER)isshowninFigure19-55anddescribedinTable19-

44.Asshown,theformatofthedatareadfromtheADG1BUFFERlocationsisdifferentbasedon

whethertheADCmoduleisconfiguredtobea12-bitora10-bitADCmodule.

Figure19-55.12-bitADCGroup1ResultsFIFORegister(ADG1BUFFER)[offset=B0h-CFh]

31

30

21

20

16

G1EMPTY

Reserved

G1CHID

R-1

R-0

R-0

15

12

11

0

Reserved

G1DR

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Figure19-56.10-bitADCGroup1Results'FIFORegister(ADG1BUFFER)[offset=B0h-CFh]

31

16

Reserved

R-0

15

14

10

9

0

EVEMPTY

EVCHID

EVDR

R-1

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Table19-44.ADCGroup1ResultsFIFORegister(ADG1BUFFER)FieldDescriptions

Field

Value

Description

Reserved

0

Readsreturnzeros,writeshavenoeffect.

G1EMPTY

Group1FIFOEmpty.Thisbitisapplicableonlywhenthe"readfromFIFO"modeisusedforreadingthe

Group1conversionresults.

Anyoperationmoderead:

0

ThedataintheG1DRfieldofthisbufferisvalid.

1

ThedataintheG1DRfieldofthisbufferisnotvalidandtherearenovaliddataintheGroup1results

memory.

G1CHID

Group1ChannelId.Thesebitsarealsoapplicableonlywhenthe"readfromFIFO"modeisusedfor

readingtheGroup1conversionresults.

Anyoperationmoderead:

0

TheconversionresultintheG1DRfieldofthisbufferisfromtheADCinputchannel0,orthechannelid

modeisdisabledintheGroup1modecontrolregister(ADG1MODECR).

1h-17h

TheconversionresultintheG1DRfieldofthisbufferisfromtheADCinputchannelnumberdenotedby

theG1CHIDfield.

G1DR

Group1DigitalConversionResult.

TheGroup1results’FIFOlocationisaliasedeighttimes,sothatanyword-alignedreadfromtheaddress

range0xB0to0xCFresultsinoneconversionresulttobereadfromtheGroup1results’memory.This

allowstheARMLDMIAinstructiontoreadoutupto8conversionresultsfromtheGroup1results’memory

withjustoneinstruction.

745

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.39ADCGroup2ResultsFIFORegister(ADG2BUFFER)

ADCGroup2ResultsFIFORegister(ADG2BUFFER)isshowninFigure19-57anddescribedinTable19-

45.Asshown,theformatofthedatareadfromtheADG2BUFFERlocationsisdifferentbasedon

whethertheADCmoduleisconfiguredtobea12-bitora10-bitADCmodule.

Figure19-57.12-bitADCGroup2ResultsFIFORegister(ADG2BUFFER)[offset=D0h-EFh]

31

30

21

20

16

G2EMPTY

Reserved

G2CHID

R-1

R-0

R-0

15

12

11

0

Reserved

G2DR

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Figure19-58.10-bitADCGroup2Results'FIFORegister(ADG2BUFFER)[offset=D0h-EFh]

31

16

Reserved

R-0

15

14

10

9

0

EVEMPTY

EVCHID

EVDR

R-1

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Table19-45.ADCGroup2ResultsFIFORegister(ADG2BUFFER)FieldDescriptions

Field

Value

Description

Reserved

0

Readsreturnzeros,writeshavenoeffect.

G2EMPTY

Group2FIFOEmpty.Thisbitisapplicableonlywhenthe"readfromFIFO"modeisusedforreadingthe

Group2conversionresults.

Anyoperationmoderead:

0

ThedataintheG2DRfieldofthisbufferisvalid.

1

ThedataintheG2DRfieldofthisbufferisnotvalidandtherearenovaliddataintheGroup2results

memory.

G2CHID

Group2ChannelId.Thesebitsarealsoapplicableonlywhenthe"readfromFIFO"modeisusedfor

readingtheGroup2conversionresults.

Anyoperationmoderead:

0

TheconversionresultintheG2DRfieldofthisbufferisfromtheADCinputchannel0,orthechannelid

modeisdisabledintheGroup2modecontrolregister(ADG2MODECR).

1h-17h

TheconversionresultintheG2DRfieldofthisbufferisfromtheADCinputchannelnumberdenotedby

theG2CHIDfield.

G2DR

Group2DigitalConversionResult.

TheGroup2results’FIFOlocationisaliasedeighttimes,sothatanyword-alignedreadfromtheaddress

range0xD0to0xEFresultsinoneconversionresulttobereadfromtheGroup2results’memory.This

allowstheARMLDMIAinstructiontoreadoutupto8conversionresultsfromtheGroup2results’memory

withjustoneinstruction.

746

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.40ADCEventGroupResultsEmulationFIFORegister(ADEVEMUBUFFER)

AreadfromthislocationalsogivesoutoneconversionresultfromtheEventGroupresults’memoryalong

withthe“EVEMPTY”statusbitandtheoptionalchannelid.However,thisreadwillnotaffectanyofthe

statusflagsintheEventGroupinterruptflagregisterortheEventGroupstatusregister.Thisregisteris

usefulfordebuggers.TheoffsetadressforthisregisterisF0h.

19.11.41ADCGroup1ResultsEmulationFIFORegister(ADG1EMUBUFFER)

AreadfromthislocationalsogivesoutoneconversionresultfromtheGroup1results’memoryalongwith

the“G1EMPTY”statusbitandtheoptionalchannelid.However,thisreadwillnotaffectanyofthestatus

flagsintheGroup1interruptflagregisterortheGroup1statusregister.Thisregisterisusefulfor

debuggers.TheoffsetadressforthisregisterisF4h.

19.11.42ADCGroup2ResultsEmulationFIFORegister(ADG2EMUBUFFER)

AreadfromthislocationalsogivesoutoneconversionresultfromtheGroup2results’memoryalongwith

the“G2EMPTY”statusbitandtheoptionalchannelid.However,thisreadwillnotaffectanyofthestatus

flagsintheGroup2interruptflagregisterortheGroup2statusregister.Thisregisterisusefulfor

debuggers.TheoffsetadressforthisregisterisF8h.

19.11.43ADCADEVTPinDirectionControlRegister(ADEVTDIR)

ADCADEVTPinDirectionControlRegister(ADEVTDIR)isshowninFigure19-59anddescribedin

Table19-46.

Figure19-59.ADCADEVTPinDirectionControlRegister(ADEVTDIR)[offset=FCh]

31

1

0

Reserved

ADEVTDIR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-46.ADCADEVTPinDirectionControlRegister(ADEVTDIR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTDIR

ADEVTPinDirection.

Anyoperatingmoderead/write:

0

ADEVTisaninputpin;theoutputbufferisdisabled.

1

ADEVTisanoutputpin;theoutputbufferisenabled.

747

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.44ADCADEVTPinOutputValueControlRegister(ADEVTOUT)

ADCADEVTPinOutputValueControlRegister(ADEVTOUT)isshowninFigure19-60anddescribedin

Table19-47.

Figure19-60.ADCADEVTPinOutputValueControlRegister(ADEVTOUT)[offset=100h]

31

1

0

Reserved

ADEVTOUT

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-47.ADCADEVTPinOutputValueControlRegister(ADEVTOUT)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTOUT

ADEVTPinOutputValue.ThisbitdeterminesthelogicleveltobeoutputtotheADEVTpinwhen

thepinisconfiguredtobeanoutputpin.

Anyoperatingmoderead/write:

0

OutputlogicLOWontheADEVTpin.

1

OutputlogicHIGHontheADEVTpin.

19.11.45ADCADEVTPinInputValueRegister(ADEVTIN)

ADCADEVTPinInputValueRegister(ADEVTIN)isshowninFigure19-61anddescribedinTable19-48.

Figure19-61.ADCADEVTPinInputValueRegister(ADEVTIN)[offset=104h]

31

1

0

Reserved

ADEVTIN

R-0

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Table19-48.ADCADEVTPinInputValueRegister(ADEVTIN)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTIN

ADEVTPinInputValue.Thisisaread-onlybitwhichreflectsthelogiclevelontheADEVTpin.

Anyoperatingmoderead:

0

LogicLOWpresentontheADEVTpin.

1

LogicHIGHpresentontheADEVTpin.

748

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.46ADCADEVTPinSetRegister(ADEVTSET)

ADCADEVTPinSetRegister(ADEVTSET)isshowninFigure19-62anddescribedinTable19-49.

Figure19-62.ADCADEVTPinSetRegister(ADEVTSET)[offset=108h]

31

1

0

Reserved

ADEVTSET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-49.ADCADEVTPinSetRegister(ADEVTSET)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTSET

ADEVTPinSet.ThisbitdrivestheoutputoftheADEVTpinhigh.Areadfromthisbitalways

returnsthecurrentstateoftheADEVTpin.

Anyoperatingmoderead/write:

0

OutputvalueontheADEVTpinisunchanged.

1

OutputlogicHIGHontheADEVTpin,ifthepinisconfiguredtobeanoutputpin.

19.11.47ADCADEVTPinClearRegister(ADEVTCLR)

ADCADEVTPinClearRegister(ADEVTCLR)isshowninFigure19-63anddescribedinTable19-50.

Figure19-63.ADCADEVTPinClearRegister(ADEVTCLR)[offset=10Ch]

31

1

0

Reserved

ADEVTCLR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-50.ADCADEVTPinClearRegister(ADEVTCLR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTCLR

ADEVTPinClear.AreadfromthisbitalwaysreturnsthecurrentstateoftheADEVTpin.

Anyoperatingmoderead/write:

0

OutputvalueontheADEVTpinisunchanged.

1

OutputlogicLOWontheADEVTpin,ifthepinisconfiguredtobeanoutputpin.

749

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.48ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)

ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)isshowninFigure19-64anddescribedin

Table19-51.

Figure19-64.ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)[offset=110h]

31

1

0

Reserved

ADEVTPDR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-51.ADCADEVTPinOpenDrainEnableRegister(ADEVTPDR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTPDR

ADEVTPinOpenDrainEnable.Thisbitenablestheopen-draincapabilityfortheADEVTpinifitis

configuredtobeanoutputandalogicHIGHisbeingdrivenontothepin.

Anyoperatingmoderead/write:

0

OutputvalueontheADEVTpinislogicHIGH.

1

TheADEVTpinistristated.

19.11.49ADCADEVTPinPullControlDisableRegister(ADEVTPDIS)

ADCADEVTPinPullControlDisableRegister(ADEVTPDIS)isshowninFigure19-65anddescribedin

Table19-52.

Figure19-65.ADCADEVTPinPullControlDisableRegister(ADEVTPDIS)[offset=114h]

31

1

0

Reserved

ADEVTPDIS

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-52.ADCADEVTPinPullControlDisableRegister(ADEVTPDIS)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTPDIS

ADEVTPinPullControlDisable.ThisbitenablesordisablesthepullcontrolontheADEVTpinifit

isconfiguredtobeaninputpin.

Anyoperatingmoderead/write:

0

PullonADEVTpinisenabled.

1

PullonADEVTpinisdisabled.

750

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.50ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)

ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)isshowninFigure19-66anddescribedin

Table19-53.

Figure19-66.ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)[offset=118h]

31

1

0

Reserved

ADEVTPSEL

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-53.ADCADEVTPinPullControlSelectRegister(ADEVTPSEL)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

ADEVTPSEL

ADEVTPinPullControlSelect.Thisbitselectsapull-downorpull-upontheADEVTpinifitis

configuredtobeaninputpin.

Anyoperatingmoderead/write:

0

PulldownisselectedonADEVTpin.

1

PullupisselectedonADEVTpin.

19.11.51ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)

ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)isshowninFigure19-67

anddescribedinTable19-54.

Figure19-67.ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)

[offset=11Ch]

31

16

Reserved

R-0

15

8

7

1

0

EVSAMPDISCYC

Reserved

EVSAMPDISEN

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-54.ADCEventGroupSampleCapDischargeControlRegister(ADEVSAMPDISEN)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-8

EVSAMPDISCYC

EventGroupsamplecapdischargecycles.ThesebitsspecifythedurationintermsofADCLK

cyclesforwhichtheADCinternalsamplingcapacitorisallowedtodischargebeforesampling

theinputchannelvoltage.

7-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

EVSAMPDISEN

EventGroupsamplecapdischargeenable.

Anyoperationmoderead/write:

0

EventGroupsamplecapdischargemodeisdisabled.

1

EventGroupsamplecapdischargemodeisenabled.TheADCinternalsamplingcapacitoris

connectedtotheVREFLOreferencevoltageforadurationspecifiedbytheEVSAMPDISCYC

field.AfterthisdischargetimehasexpiredtheselectedADCinputchannelissampledand

convertednormallybasedontheEventGroupsettings.

751

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.52ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)

ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)isshowninFigure19-68and

describedinTable19-55.

Figure19-68.ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)

[offset=120h]

31

16

Reserved

R-0

15

8

7

1

0

G1SAMPDISCYC

Reserved

G1SAMPDISEN

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-55.ADCGroup1SampleCapDischargeControlRegister(ADG1SAMPDISEN)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-8

G1SAMPDISCYC

Group1samplecapdischargecycles.ThesebitsspecifythedurationintermsofADCLKcycles

forwhichtheADCinternalsamplingcapacitorisallowedtodischargebeforesamplingtheinput

channelvoltage.

7-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

G1SAMPDISEN

Group1samplecapdischargeenable.

Anyoperationmoderead/write:

0

Group1samplecapdischargemodeisdisabled.

1

Group1samplecapdischargemodeisenabled.TheADCinternalsamplingcapacitoris

connectedtotheVREFLOreferencevoltageforadurationspecifiedbytheG1SAMPDISCYC

field.AfterthisdischargetimehasexpiredtheselectedADCinputchannelissampledand

convertednormallybasedontheGroup1settings.

752

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.53ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)

ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)isshowninFigure19-69and

describedinTable19-56.

Figure19-69.ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)

[offset=124h]

31

16

Reserved

R-0

15

8

7

1

0

G2_SAMP_DIS_CYC

Reserved

G2SAMPDISEN

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-56.ADCGroup2SampleCapDischargeControlRegister(ADG2SAMPDISEN)

FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15-8

G2SAMPDISCYC

Group2samplecapdischargecycles.ThesebitsspecifythedurationintermsofADCLKcycles

forwhichtheADCinternalsamplingcapacitorisallowedtodischargebeforesamplingtheinput

channelvoltage.

7-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

G2SAMPDISEN

Group2samplecapdischargeenable.

Anyoperationmoderead/write:

0

Group2samplecapdischargemodeisdisabled.

1

Group2samplecapdischargemodeisenabled.TheADCinternalsamplingcapacitoris

connectedtotheVREFLOreferencevoltageforadurationspecifiedbytheG2SAMPDISCYC

field.AfterthisdischargetimehasexpiredtheselectedADCinputchannelissampledand

convertednormallybasedontheGroup2settings.

753

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.54ADCMagnitudeCompareInterruptControlRegisters(ADMAGINTxCR)

Figure19-70andTable19-57describetheADMAGINTxCRregisters.TheADCmodulesupportsupto

threemagnitudecompareinterrupts.Theseregistersareatoffsetaddresses128h,130h,and138h.

Figure19-70.ADCMagnitudeCompareInterruptControlRegisters(ADMAGINTxCR)

[offset=128h-138h]

31

30

26

25

16

Rsvd

MAGCHIDx

MAGTHRx

R-0

R/W-0

R/W-0

15

13

12

8

Reserved

COMPCHIDx

R-0

R/W-0

7

2

1

0

Reserved

CHN/THRCOMPx

CMPGE/LTx

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-57.ADCMagnitudeCompareInterruptControlRegisters(ADMAGINTxCR)

FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readsreturnzeros,writeshavenoeffect.

30-26

MAGCHIDx

Thesebitsspecifythechannelnumberfrom0to31forwhichtheconversionresultneedstobe

monitoredbytheADC.

25-16

MAGTHRx

Thesebitsspecifythe10-bitcomparevaluewhichtheADCwilluseforthecomparisonwiththe

MAGCHIDxchannel'sconversionresult.

15-16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

12-8

COMPCHIDx

Thesebitsspecifythechannelnumberfrom0to31whoselastconversionresultiscompared

withtheMAGCHIDxchannel'sconversionresult.

7-2

Reserved

0

Readsreturnzeros,writeshavenoeffect.

1

CHN/THRCOMPx

ChannelORThresholdcomparison.

Anyoperationmoderead/write:

0

TheADCmodulewillcomparetheMAGCHIDxchannel'sconversionresultwiththefixed

thresholdvaluespecifiedbytheMAGTHRxfield

1

TheADCmodulewillcomparetheMAGCHIDxchannel'sconversionresultwiththelast

conversionresultfortheCOMPCHIDxchannel.

BoththeMAGCHIDxandtheCOMPCHIDxchannelmusthavebeenconvertedatleastonce

fortheADCtoperformthecomparison.

0

CMPGE/LTx

"Greaterthanorequalto"OR"Lessthan"comparisonoperator.

Anyoperationmoderead/write:

0

TheADCmodulewillcheckiftheconversionresultislowerthanthereferencevalue(fixed

thresholdorCOMPCHIDxconversionresult).

1

TheADCmodulewillcheckiftheconversionresultisgreaterthanorequaltothereference

value(fixedthresholdorCOMPCHIDxconversionresult).

754

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.55ADCMagnitudeCompareInterruptxMaskRegister(ADMAGINTxMASK)

Figure19-71anddescribedinTable19-58describetheADMAGINTxMASKregisters.Therearethree

suchregistersforthethreemagnitudecompareinterrupts.Thesearelocatedataddressoffsets12Ch,

134h,and13Ch.

Figure19-71.ADCMagnitudeCompareMaskRegister(ADMAGINTxMASK)

[offset=12Ch-13Ch]

31

10

9

0

Reserved

MAGINTxMASK

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-58.ADCMagnitudeCompareMaskRegister(ADMAGINTxMASK)

FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readsreturnzeros,writeshavenoeffect.

9-0

MAGINTxMASK

Thesebitsspecifythemaskforthecomparisoninordertogeneratethemagnitudecompare

interrupt#x.

Anyoperationmoderead/write:

0

TheADCmodulewillnotmaskthecorrespondingbitforthecomparison.

1

TheADCmodulewillmaskthecorrespondingbitforthecomparison.

19.11.56ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)

ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)isshowninFigure19-72

anddescribedinTable19-59.

Figure19-72.ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)

[offset=158h]

31

3

2

0

Reserved

MAGINTENASET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-59.ADCMagnitudeCompareInterruptEnableSetRegister(ADMAGINTENASET)

FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readsreturnzeros,writeshavenoeffect.

2-0

MAGINTENASET

Eachofthesethreebits,whenset,enablethecorrespondingmagnitudecompareinterrupt.

Anyoperationmoderead/writeforeachbit:

0

Theenablestatusofthecorrespondingmagnitudecompareinterruptisleftunchanged.

1

Thecorrespondingmagnitudecompareinterruptisenabled.

755

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.57ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)

ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)isshowninFigure19-73

anddescribedinTable19-60.

Figure19-73.ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)

[offset=15Ch]

31

3

2

0

Reserved

MAGINTENACLR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-60.ADCMagnitudeCompareInterruptEnableClearRegister(ADMAGINTENACLR)

FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readsreturnzeros,writeshavenoeffect.

2-0

MAGINTENACLR

Eachofthesethreebits,whenset,enablethecorrespondingmagnitudecompareinterrupt.

Anyoperationmoderead/writeforeachbit:

0

Theenablestatusofthecorrespondingmagnitudecompareinterruptisleftunchanged.

1

Thecorrespondingmagnitudecompareinterruptisdisabled.

19.11.58ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)

ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)isshowninFigure19-74and

describedinTable19-61.

Figure19-74.ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)

[offset=160h]

31

3

2

0

Reserved

MAGINTFLG

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-61.ADCMagnitudeCompareInterruptFlagRegister(ADMAGINTFLG)

FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readsreturnzeros,writeshavenoeffect.

2-0

MAGINTFLG

MagnitudeCompareInterruptFlags.Thesebitscanbepolledbytheapplicationtodetermineifthe

magnitudecompareshavebeenevaluatedastrue.Whenamagnitudecompareinterruptflagisset,

thecorrespondingmagnitudecompareinterruptwillbegeneratedifenabled.

Anyoperationmode,foreachbit:

0

Read:Theconditionforthecorrespondingmagnitudethresholdinterruptwasfalse.

Write:Thecorrespondingflagisleftunchanged.

1

Read:Theconditionforthecorrespondingmagnitudethresholdinterruptwastrue.

Write:Thecorrespondingflagiscleared.Theflagcanalsobeclearedbyreadingfromthe

magnitudecompareinterruptoffsetregister.

756

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.59ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF)

ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF)isshowninFigure19-75and

describedinTable19-62.

Figure19-75.ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF)[offset=164h]

31

4

3

0

Reserved

MAGINTOFF

R-0

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table19-62.ADCMagnitudeCompareInterruptOffsetRegister(ADMAGINTOFF)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3-0

MAGINTOFF

MagnitudeCompareInterruptOffset.Thisfieldindexesthecurrentlyhighest-prioritymagnitude

compareinterrupt.Interrupt1hasthehighestpriorityandinterrupt3hasthelowestpriorityamong

themagnitudecompareinterrupts.

Writestothesebitshavenoeffect.Areadfromthisregisterclearsthisregisteraswellasthe

correspondingmagnitudecompareinterruptflagintheADMAGINTFLGregister.However,aread

fromthisregisterinemulationmodedoesnotaffectthisregisterortheinterruptstatusflags.

Anyoperationmoderead:

0

Nomagnitudecompareinterruptispending.

1h

Magnitudecompareinterrupt#1ispending.

2h

Magnitudecompareinterrupt#2ispending.

3h

Magnitudecompareinterrupt#3ispending.

4h-Fh

Reserved.Thesecombinationsdonotoccur.

19.11.60ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)

ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)isshowninFigure19-76and

describedinTable19-63.

Figure19-76.ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)[offset=168h]

31

1

0

Reserved

EVFIFORESET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-63.ADCEventGroupFIFOResetControlRegister(ADEVFIFORESETCR)

FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

EVFIFORESET

ADCEventGroupFIFOReset.Theapplicationcansetthisbitincaseofanoverruncondition.This

allowstheADCmoduletooverwritethecontentsoftheEventGroupresultsmemorystartingfrom

thefirstlocation.

Whenthisbitissetto'1',theADCmoduleresetsitsinternalEventGroupresultsmemorypointers.

Thenthisbitautomaticallygetscleared,sothattheADCmoduleallowstheEventGroupresults

memorytobeoverwrittenonlyonceeachtimethisbitissetto'1'.Asaresult,theEVFIFORESET

bitwillalwaysbereadasa'0'.

TheEVFIFORESETbitwillonlyhavethedesiredeffectwhentheEventGroupresultsmemoryis

inanoverruncondition.Itmustbeusedwhenthedataalreadyavailableintheresultsmemorycan

bediscarded.

IftheapplicationneedstheEventGroupmemorytoalwaysbeoverwrittenwiththelatestavailable

conversionresults,thentheOVREVRAMIGNbitintheEventGroupoperatingmodecontrol

register(ADEVMODECR)needstobesetto'1'.

757

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.61ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR)

ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR)isshowninFigure19-77and

describedinTable19-64.

Figure19-77.ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR)[offset=16Ch]

31

1

0

Reserved

G1FIFORESET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-64.ADCGroup1FIFOResetControlRegister(ADG1FIFORESETCR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

G1FIFORESET

0-1

ADCGroup1FIFOReset.Theapplicationcansetthisbitincaseofanoverruncondition.This

allowstheADCmoduletooverwritethecontentsoftheGroup1resultsmemorystartingfromthe

firstlocation.

Whenthisbitissetto'1',theADCmoduleresetsitsinternalGroup1resultsmemorypointers.Then

thisbitautomaticallygetscleared,sothattheADCmoduleallowstheGroup1resultsmemorytobe

overwrittenonlyonceeachtimethisbitissetto'1'.Asaresult,theG1FIFORESETbitwillalways

bereadasa'0'.

TheG1FIFORESETbitwillonlyhavethedesiredeffectwhentheGroup1resultsmemoryisinan

overruncondition.Itmustbeusedwhenthedataalreadyavailableintheresultsmemorycanbe

discarded.

IftheapplicationneedstheGroup1memorytoalwaysbeoverwrittenwiththelatestavailable

conversionresults,thentheOVRG1RAMIGNbitintheGroup1operatingmodecontrolregister

(ADG1MODECR)needstobesetto'1'.

19.11.62ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR)

ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR)isshowninFigure19-78and

describedinTable19-65.

Figure19-78.ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR)[offset=170h]

31

1

0

Reserved

G2FIFORESET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-65.ADCGroup2FIFOResetControlRegister(ADG2FIFORESETCR)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readsreturnzeros,writeshavenoeffect.

0

G2FIFORESET

0-1

ADCGroup2FIFOReset.Theapplicationcansetthisbitincaseofanoverruncondition.This

allowstheADCmoduletooverwritethecontentsoftheGroup2resultsmemorystartingfromthe

firstlocation.

Whenthisbitissetto'1',theADCmoduleresetsitsinternalGroup2resultsmemorypointers.Then

thisbitautomaticallygetscleared,sothattheADCmoduleallowstheGroup2resultsmemorytobe

overwrittenonlyonceeachtimethisbitissetto'1'.Asaresult,theG2FIFORESETbitwillalways

bereadasa'0'.

TheG2FIFORESETbitwillonlyhavethedesiredeffectwhentheGroup2resultsmemoryisinan

overruncondition.Itmustbeusedwhenthedataalreadyavailableintheresultsmemorycanbe

discarded.

IftheapplicationneedstheGroup2memorytoalwaysbeoverwrittenwiththelatestavailable

conversionresults,thentheOVRG2RAMIGNbitintheGroup2operatingmodecontrolregister

(ADG2MODECR)needstobesetto'1'.

758

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.63ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)

ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)isshowninFigure19-79and

describedinTable19-66.

Figure19-79.ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)[offset=174h]

31

9

8

0

Reserved

EVRAMADDR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-66.ADCEventGroupRAMWriteAddressRegister(ADEVRAMWRADDR)

FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturnzeros,writeshavenoeffect.

8-0

EVRAMADDR

EventGroupresultsmemorywritepointer.Thisfieldshowstheaddressofthelocationwherethe

nextEventGroupconversionresultwillbestored.Thisisspecifiedintermsofthebuffernumber.

TheapplicationcanreadthisregistertodeterminethenumberofvalidEventGroupconversion

resultsavailableuntilthattime.

19.11.64ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR)

ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR)isshowninFigure19-80anddescribed

inTable19-67.

Figure19-80.ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR)[offset=178h]

31

9

8

0

Reserved

G1RAMADDR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-67.ADCGroup1RAMWriteAddressRegister(ADG1RAMWRADDR)

FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturnzeros,writeshavenoeffect.

8-0

G1RAMADDR

Group1resultsmemorywritepointer.Thisfieldshowstheaddressofthelocationwherethenext

Group1conversionresultwillbestored.Thisisspecifiedintermsofthebuffernumber.

TheapplicationcanreadthisregistertodeterminethenumberofvalidGroup1conversionresults

availableuntilthattime.

759

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ADCControlRegisterswww.ti.com

19.11.65ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR)

ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR)isshowninFigure19-81anddescribed

inTable19-68.

Figure19-81.ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR)[offset=17Ch]

31

9

8

0

Reserved

G2RAMADDR

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-68.ADCGroup2RAMWriteAddressRegister(ADG2RAMWRADDR)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturnzeros,writeshavenoeffect.

8-0

G2RAMADDR

Group2resultsmemorywritepointer.Thisfieldshowstheaddressofthelocationwherethenext

Group2conversionresultwillbestored.Thisisspecifiedintermsofthebuffernumber.

TheapplicationcanreadthisregistertodeterminethenumberofvalidGroup2conversionresults

availableuntilthattime.

19.11.66ADCParityControlRegister(ADPARCR)

ADCParityControlRegister(ADPARCR)isshowninFigure19-82anddescribedinTable19-69.

Figure19-82.ADCParityControlRegister(ADPARCR)[offset=180h]

31

16

Reserved

R-0

15

9

8

7

4

3

0

Reserved

TEST

Reserved

PARITYENA

R-0

R/WP-

R-0

R/WP-5h

0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table19-69.ADCParityControlRegister(ADPARCR)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturnzeros,writeshavenoeffect.

8

TEST

ThisbitmapstheparitybitsintotheADCresults'RAMframesothattheapplicationcanaccess

them.

Anyoperationmoderead,privilegedmodewrite:

0

Theparitybitsarenotmemory-mapped.

1

Theparitybitsarememorymapped.

7-4

Reserved

0

Readsreturnzeros,writeshavenoeffect.

3-0

PARITYENA

Enable/disableparitychecking.Thesebitsenable/disabletheparitycheckonreadoperationsand

theparitycalculationonwriteoperationstotheADCresultsmemory.

IfparitycheckingisenabledandaparityerrorisdetectedtheADCmodulesendsaparityerror

signaltotheSystemmodule.

Anyoperationmoderead,privilegedmodewrite:

5h

Paritycheckisdisabled.

Any

Paritycheckisenabled.

other

760

AnalogToDigitalConverter(ADC)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comADCControlRegisters

19.11.67ADCParityErrorAddressRegister(ADPARADDR)

ADCParityErrorAddressRegister(ADPARADDR)isshowninFigure19-83anddescribedinTable19-70.

Figure19-83.ADCParityErrorAddressRegister(ADPARADDR)[offset=184h]

31

16

Reserved

R-0

15

12

11

2

1

0

Reserved

ERRORADDRESS

Reserved

R-0

R-U

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-U=valueafterresetisunknown

Table19-70.ADCParityErrorAddressRegister(ADPARADDR)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readsreturnzeros,writeshavenoeffect.

11-2

ERRORADDRESS

ThesebitsholdtheaddressofthefirstparityerrorgeneratedintheADCresults'RAM.This

erroraddressisfrozenfrombeingupdateduntilitisreadbytheapplication.Inemulationmode,

thisaddressismaintainedfrozenevenwhenread.

1-0

Reserved

0

Readsreturnzeros,writeshavenoeffect.Reading[11:0]providesthe32-bitalignedaddress.

19.11.68ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL)

Figure19-84andTable19-71describetheADPWRDLYCTRLregister.

Figure19-84.ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL)[offset=188h]

31

10

9

0

Reserved

PWRUPDLY

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table19-71.ADCPower-UpDelayControlRegister(ADPWRUPDLYCTRL)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readsreturnzeros,writeshavenoeffect.

9-0

PWRUPDLY

ThisregisterdefinesthenumberofVCLKcyclesthattheADCstatemachinehastowaitafter

releasingtheADCcorefrompowerdownbeforestartinganewconversion.Pleasereferto

Section19.8.3formoredetails.

761

SPNU499B–November2012–RevisedAugust2013

AnalogToDigitalConverter(ADC)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter20

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

ThischapterprovidesageneraldescriptionoftheHigh-EndTimer(N2HET).TheN2HETisasoftware-

controlledtimerwithadedicatedspecializedtimermicromachineandasetof30instructions.TheN2HET

micromachineisconnectedtoaportofupto32input/output(I/O)pins.

NOTE:ThischapterdescribesasupersetimplementationoftheN2HETmodulethatincludes

featuresandfunctionalitythatrequireDMA.SincenotalldeviceshaveDMAcapability,

consultyourdevice-specificdatasheettodeterminetheapplicabilityofthesefeaturesand

functionstoyourdevicebeingused.

Topic...........................................................................................................................Page

20.1Features.........................................................................................................763

20.2N2HETFunctionalDescription..........................................................................768

20.3AngleFunctions..............................................................................................797

20.4N2HETControlRegisters..................................................................................801

20.5InstructionSet.................................................................................................827

762

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFeatures

20.1Features

•Programmabletimerforinputandoutputtimingfunctions

•Reducedinstructionset(30instructions)fordedicatedtimeandanglefunctions

•Uptomaximumof12896-bitwordsofinstructionRAMprotectedbyparity.Checkyourdatasheetfor

theactualnumberofwordsimplemented.

•Userdefinedconfigurationof25-bitvirtualcountersfortimer,eventcountersandanglecounters

•7-bithardwarecountersforeachpinallowupto32-bitresolutioninconjunctionwiththe25-bitvirtual

counters

•Upto32pinsusableforinputsignalmeasurementsoroutputsignalgeneration

•Programmablesuppressionfilterforeachinputpinwithadjustablesuppressionwindow

•LowCPUoverheadandinterruptload

•EfficientdatatransfertoorfromtheCPUmemorywithdedicatedHigh-End-TimerTransferUnit(HTU)

orDMA

•Diagnosticcapabilitieswithdifferentloopbackmechanismsandpinstatusreadbackfunctionality

•HardwareAngleGenerator(HWAG)-(moreinformationwillbeavailableinfutureUser’sGuide

Revision)

20.1.1Overview

TheN2HETisafifth-generationTexasInstruments(TI)advancedintelligenttimermodule.Itprovidesan

enhancedfeaturesetcomparedtopreviousgenerations.

Thistimermoduleprovidessophisticatedtimingfunctionsforreal-timeapplicationssuchasengine

managementormotorcontrol.Thehighresolutionhardwarechannelsallowgreateraccuracyforwidely

usedtimingfunctionssuchasperiodandpulsemeasurements,outputcompare,andPWMs.

Thereducedinstructionset,basedmostlyonverysimple,butcomprehensiveinstructions,improvesthe

definitionanddevelopmentcycletimeofanapplicationanditsderivatives.TheN2HETbreakpointfeature,

combinedwithvariousstopcapabilities,makestheN2HETsoftwareapplicationeasytodebug.

20.1.1.1MajorAdvantages

InadditiontoclassictimefunctionssuchasinputcaptureormultiplePWMs,higher-leveltimefunctions

canbeeasilyimplementedinthetimerprogrammainloop.Higher-leveltimefunctionsincludeangle

drivenwaveforms,angle-andtime-drivenpulses,andinputpulsewidthmodulation(PWM)dutycycle

measurement.

Becauseofthesehigh-levelfunctions,dataexchangeswiththeCPUarelimitedtothefundamental

parametersoftheapplication(periods,pulsewidths,anglevalues,etc.);andthereal-timeconstraintsfor

parametercommunicationaredramaticallyminimized;forexample,fewinterruptsarerequiredand

asynchronousparameterupdatesareallowed.

Thereducedinstructionsetandsimpleexecutionflowcontrolmakeitsimpleandeasytodevelopand

modifyprograms.SimplealgorithmscanembedtheentireflowcontrolinsidetheN2HETprogramitself.

MorecomplexalgorithmscantakeadvantageoftheCPUaccesstotheN2HETRAM.Withthis,theCPU

programcanmakecalculationsandcanmodifythetimerprogramflowbychangingthedataandcontrol

fieldsoftheN2HETRAM.CPUaccesstotheN2HETRAMalsoimprovesthedebuganddevelopmentof

timerprograms.TheCPUprogramcanstoptheN2HETandviewthecontentsoftheprogram,control,

anddatafieldsthatresideintheN2HETRAM.

Finally,themodularstructureprovidesmaximumflexibilitytoaddressawiderangeofapplications.The

timerresolutioncanbeselectedfromtwocascadedprescalerstoadjusttheloopresolutionandHR

clocks.The32I/Opinscanprovideanycombinationofinput,periodorpulsecapture,andoutput

compare,includinghighresolutionforeachchannel.

763

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Featureswww.ti.com

20.1.1.2TimerModuleStructureandExecution

Thetimerconsistsofaspecializedmicromachinethatoperatesareducedinstructionset.Two25-bit

registersandthree32-bitregistersareavailabletomanipulateinformationsuchastime,eventcounts,and

anglevalues.Systemperformanceisimprovedbyawideinstructionformat(96bits)thatallowsthe

N2HETtofetchtheinstructionaloperationcodeanddatainonesystemcycle,thusincreasingthespeed

atwhichdatacanbeprocessed.ThetypicaloperationsperformedintheALUareadditions(count),

compares,andmagnitudecompares(higherorsame).

Eachinstructionismadeupofa32-bitprogramfield,a32-bitcontrolfieldanda32-bitdatafield.The

N2HETexecutionunitfetchesthecomplete96-bitinstructioninonecycleandexecutesit.Allinstructions

includea9-bitfieldforspecifyingtheaddressofthenextinstructiontobeexecuted.Someinstructions

alsoincludea9-bitconditionaladdress,whichisusedasthenextaddresswheneveraparticularcondition

istrue.ThismakescontrollingtheflowofanN2HETprograminexpensive;inmanycasesaseparate

branchinstructionisnotrequired.

TheinterfacetothehostCPUisbasedonbothcommunicationmemoryandcontrolregisters.The

communicationmemoryincludestimerinstructions(programanddata).Thismemoryistypicallyinitialized

bytheCPUorDMAafterresetbeforethetimerstartsexecution.Oncethetimerprogramisloadedinto

thememory,theCPUstartsthetimerexecution,andtypicallydataparametersarethenreadorwritten

intothetimermemory.Thecontrolregistersincludebitsforselectingtimerclock,configuringI/Opins,and

controllingthetimermodule.

Theprogrammerimplementstimerfunctionsbycombininginstructionsinspecificsequences.For

instance,asinglecount(CNT)instructionimplementsatimer.AsimplePWMgeneratorcanbe

implementedwithatwoinstructionsequence:CNTandcompare(ECMPorMCMP).Acomplextime

functionmayincludemanyinstructionsinthesequence.Thetotaltimerprogramisasetofinstructions

executedsequentially,oneaftertheother.Reachingtheend,theprogrammustrolltothefirstinstruction

sothatitbehavesasaloop.Thetimeforalooptoexecuteisreferredtoasaloopresolutionclockcycle

orloopresolutionperiod(LRP).WhentheN2HETrollsovertothefirstinstruction,thetimerwaitsforthe

loopresolutionclocktorestarttheexecutionofthelooptoensurethatonlyoneloopisexecutedforeach

loopresolutionclock.

ThelongestpaththroughanN2HETprogrammustbecompletedwithintheloopresolutionclock(LRP).

Otherwise,theprogramwillexecuteunpredictablybecausesomeinstructionswillnotbeexecutedeach

timethroughtheloop.Thiseffectcreatesastronglinkbetweentheaccuracyofthetimerfunctionsandthe

numberoffunctions(thenumberofinstructions)thetimercanperform.Highresolution(HR)hardware

timerextensionsareavailableforeachoftheN2HETpinstohelpovercomethislimitation.

Thehighresolutionhardwaretimersoperatefromthehighresolutionclock,whichmaybeconfiguredfor

frequencymultiplesbetween2and128timestheloopresolutionclockfrequency.Thisextendingthe

resolutionoftimereventsandmeasurementswellbeyondwhatispossiblewithonlyloopresolution

instructions.

MostofthecommonlyusedN2HETinstructionscanoperateeitheratloopresolutionorhighresolution;

withtherestrictionthatforeachpinatmostonehighresolutioninstructioncanbeexecutedperloop

resolutionperiod.

Certaininstructions(MOV32,ADM32,...)canmodifythedatafieldsofotherinstructions.Thisfeature

enablestheN2HETprogramtoimplementdoublebufferingoncaptureandcomparefunctions.For

example,anECMPcompareinstructioncanbefollowedbyaMOV32instructionthatisconditionally

executedwhentheECMPinstructionmatches.ThehostCPUcanupdatethenextcomparevalueby

writingasynchronouslytothedatafieldoftheMOV32instructioninsteadofwritingdirectlytothedatafield

oftheECMPinstruction.Thecopyfromthebuffer(MOV32datafield)tothecompareregister(ECMPdata

field)willoccurwhentheMOV32instructionisactuallyexecutedwhichoccursaftertheECMPinstruction

matchesitscurrentcomparevalue.Thisisthesamebehaviorasonewouldexpectfromadoublebuffered

hardwarecompareregister.

764

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFeatures

Otherinstructions(MOV64,RADM64)canmodifyboththecontrolanddatafieldsofotherinstructions.

ThisallowstheN2HETtoimplementtogglefunctionality.Forexample,anECMPinstructioncanbe

followedbyapairofMOV64instructions.TheMOV64instructionupdatesthedatafieldoftheECMP

instructiontoimplementthedoublebufferingbehavior.ButitalsoupdatesthecontrolfieldoftheECMP

instructionwhichallowsittochangethingslikepinactionandtheconditionaladdress.IfoneMOV64

instructionconfigurestheECMPpinactiontoSETwhilethesecondchangesittoCLEAR,andthetwo

MOV64instructionsupdatetheconditionaladdresstopointtoeachother,thenasingleECMPinstruction

canbeusedtotoggleapineachtimethecomparematchoccurs.

20.1.1.3Performance

Mostinstructionsexecuteinonecycle,butafewtaketwoorthreecycles.

TheN2HETcangeneratemanycomplexoutputwaveformswithoutCPUinterrupts.Wherespecial

algorithmsareneededfollowingaspecificevent(forexample,missingteethorashort/longinputsignal),a

minimalnumberofinterruptstotheCPUareneededfreeingtheCPUforothertasks.

20.1.1.4N2HETComparedtoNHET

N2HETEnhancementsfromNHETinclude:

•Eightnewinstructions:ADD,ADC,SUB,SBB,AND,OR,XOR,RCNT

•FullsetofALUflagsCarry(C),Negative(N),Zero(Z),Overflow(V)

•Branchinstruction(BR)extendedtosupportsignedandunsignedarithmeticcomparisonconditions

•Twoadditional32-bittemporaryworkingregistersR,S.

•NewHETANDregisterforAND-SharingofHighResolutionstructurebetweenpairsofpins

•ImprovedhighresolutionPCNTinstruction

20.1.1.5NHETandN2HETComparedtoHET

ComparedtotheHETmodule,theN2HETcontainsalloftheenhancementsdescribedinSection20.1.1.4

plusthefollowingadditionalenhancements:

•NewInterruptEnableSetandClearregisters

•CapabilitytogeneraterequeststotheDMAmoduleortheHETTransferUnit(HTU)includingnew

RequestEnableSetandClearregisters

•NHETRAMparityerrordetection

•Suppressionfiltersforeachofthe32I/Ochannelandcontrolregistertoconfigurethelimiting

frequencyandcounterclock

•Enhancededgedetectionhardwarethatdoesnotrelyonthepreviousbitfieldinthecontrolwordof

theNHETinstruction.

•Thenext,conditionalandremoteaddressesareextendedfrom8to9bits

•Theloopresolutiondatafieldsareextendedfrom20to25bits

•Thehighresolutiondatafieldsareextendedfrom5to7bits

•Instructionswithanadequateconditionareabletospecifythenumberoftherequestline,which

triggerseithertheHETTransferUnit(HTU)ortheDMAmodule

•TheCNTinstructionprovidesabit,whichallowstoconfigureeitheranequalcomparisonoragreater

orequalcomparisonwhencomparingtheselectedregistervaluewiththeMax-value

•TheMOV32instructionprovidesanewbit.IfsettoonetheMOV32willonlyperformthemove,when

theZ-flagisset.IfsettozerotheMOV32willperformthemovewheneveritisexecuted(independent

onthestateoftheZ-flag)

•ThereisanewinstructionWCAPE,whichisacombinationofatimestampandanedgecounter

•NewOpenDrain,PullDisable,andPullSelectregisters

765

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Featureswww.ti.com

20.1.1.6InstructionsFeatures

TheN2HEThasthefollowinginstructionsfeatures:

•N2HETusesaRISC-basedspecializedtimermicromachinetocarryoutasetof30instructions

•InstructionsareimplementedinaVeryLongInstructionWord(VLIW)format(96bitswide)

•TheN2HETprogramexecutionisself-drivenbyexternalorinternalevents,branchingtospecial

routinesbasedoninputedgesoroutputcompares

•Instructionspointtothenextinstructionexecuted,eliminatingtheneedforaprogramcounter

•Severalinstructionscanchangetheprogramflowbasedoninternalorexternalconditions

20.1.1.7ProgramUsage

TheN2HETinstructions/programcanbeassembledwiththeN2HETassembler.Theassemblergenerates

aC-structurewhichcanbeincludedintothemainapplicationprogram.Theapplicationhastocopythe

contentofthestructureintotheN2HETRAM,setupnecessaryregistersandstarttheN2HETprogram

execution.InadditiontotheC-structure,theassemblergeneratesalsoaheaderfilewhichmakesiteasy

forthemainapplicationtoaccessthedifferentinstructionsandchangeforexamplethedutycycleofa

PWMorreadoutthecapturedvalueofaspecificsignaledge.

20.1.2BlockDiagram

TheN2HETmodule(seeFigure20-1)comprisesfourseparatecomponents:

•Hostinterface

•N2HETRAM

•Specializedtimermicromachine

•I/Ocontrol(theN2HETisattachedtoanI/Oportofupto32pins)

766

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




AddressDecode

PeripheralbusRegisterAOFFONProgramRAMinternalmulti-N2HETsyncSlaveMaster

HETGCR.16HETGCR.0

32ALUCompareToVIM

HETOFF2.7:0HETOFF1.7:0HETDOUT.31:0HETDSET.31:0

RegisterRRegisterB

HETDCLR.31:0HETFLG.31:0HETDIN.31:0

Priority1Priority2

ToVIM

32

HETDIR.31:0

Rotate/ShiftbyN

HETADDR.8:0HETPRY.31:0

HRblock

HET[31:0]

ControlRAMDataRAM

IgnoreSuspend

HETGCR.17

Stop

ShadowRegisters

ShadowRegistersHighResolutionprescaler

HETPFR.5:0

Loopresolutionprescaler

HETPFR.10:8

RegisterS

RegisterT

HRclock(toIOPINCONTROL)

HRclock

CURRENTINSTRUCTIONHOSTINTERFACENHETRAMSPECIALIZEDTIMERMICROMACHINEI/OPINCONTROLPROGRAM FIELDCONTROLFIELDDATAFIELD



www.ti.comFeatures

Figure20-1.N2HETBlockDiagram

767

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Cont.

RegisterAOffOn

HETGCR.17

Stop

HETGCR.0

32BitALUCompareToVIM

HETOFF2.7:0HETOFF1.7:0

RegisterRRegisterB

HETFLG.31:0

SpecializedtimermicromachinePriority1Priority2

ToVIM

Rotate/ShiftByN

HETADDR.8:0HETPRY.31:0

FromN2HETRAMToI/OControl

RegisterTRegisterS

CURRENTINSTRUCTIONPROGRAMFIELDCONTROLFIELDDATAFIELD



N2HETFunctionalDescriptionwww.ti.com

20.2N2HETFunctionalDescription

TheN2HETcontainsRAMintowhichN2HETcodeisloaded.TheN2HETcodeisrunbythespecialized

timermicromachine.ThehostinterfaceandI/OcontrolprovideaninterfacetotheCPUandexternalpins

respectively.

20.2.1SpecializedTimerMicromachine

TheN2HEThasitsowninstructionset,detailedinSection20.5.1.Thetimermicromachinereadseach

instructionfromtheN2HETRAM.Theprogramandcontrolfieldscontaintheinstructionsforhowthe

specializedtimermicromachineexecutesthecommand.Formostinstructions,thedatafieldstoresthe

informationthatneedstobemanipulated.

ThespecializedtimermicromachineexecutestheinstructionsstoredintheN2HETRAMsequentially.The

N2HETprogramexecutionisself-drivenbyexternalorinternalevents.Thismeansthatinputedgesor

outputcomparesmayforcetheprogramtobranchtospecialroutinesusingaconditionaladdress.

Figure20-2showssomeofthemajoroperationsthattheN2HETcancarryout,namelycompares,

captures,anglefunctions,additions,andshifts.TheN2HETcontainsfiveregisters(A,B,R,S,andT)

usedtoholdcompareorcountervaluesandareusedbytheN2HETinstructions.Datamaybetakenfrom

theregistersorthedatafieldformanipulation;likewise,thedatamaybereturnedtotheregistersorthe

datafield.

Figure20-2.SpecializedTimerMicromachine

768

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Programloop

Nextprogramaddress=00h

1234N1234Timeslot

LoopResolutionPeriod=LRPVCLK2LoopRes.clockInstructions

HighRes.clock

...

...



www.ti.comN2HETFunctionalDescription

20.2.1.1TimeSlotsandResolutionLoop

Eachinstructionrequiresaspecificnumberofcyclesortimeslotstoexecute.Theresolutionspecifiedin

theprescalerbitfieldsdeterminesthetimeraccuracy.Allinputcaptures,eventcounts,andoutput

comparesareexecutedonceineachresolutionloop.HRcapturesandcomparesarepossible(upto

N2HETclockaccuracy)ontheHRI/Opins.FormoreinformationabouttheHRI/Ostructure,see

Section20.2.5.

20.2.1.2ProgramLoopTime

Theprogramlooptimeisthesumofallcyclesusedforinstructionexecution.Thistimemayvaryfromone

looptoanotheriftheN2HETprogramincludesconditionallyexecutedinstructions.

Thetimerprogramrestartsoneveryresolutionloop.ThestartaddressisfixedatN2HETRAMaddress

00h.Thelongestpaththroughaprogrammustfitwithinoneloopresolutionperiodtoguaranteecomplete

accuracy.

Thelastinstructionofaprogrammustbranchbacktothefixedstartaddress(nextprogramaddress=

00h).WhenanN2HETprogrambranchesbacktoaddress00hbeforetheendofaloopresolutionperiod,

theN2HETdetectsthisandpausesinstructionexecutionuntilthebeginningofthenextloopresolution

period.

Thetimingdiagrambelowillustratestheprogramflowexecution.

Figure20-3.ProgramFlowTimings

20.2.1.3InstructionExecutionSequence

TheexecutionofaN2HETprogrambeginswiththefirstoccurrenceoftheloopresolutionclock,afterthe

N2HETisturnedon.Atthefirstandsubsequentoccurrencesoftheloopresolution,theinstructionat

locationaddress00hisprefetched.Theprogramexecutionbeginsattheoccurrenceoftheloopresolution

clockandcontinuesexecutingtheinstructionsuntiltheprogrambranchesto00hlocation.Theinstruction

isprefetchedatlocation00handexecutionflagisreset.TheN2HETpausesinstructionexecutionuntilthe

occurrenceoftheloopresolutionclockandresumesnormalexecution.

N2HETprogramsmustbewrittensothattheycompleteexecutionandreturntoaddress00hbeforethe

occurrenceofthenextloopresolutionclock.IftheN2HETprogramexceedsthisexecutiontimelimit,then

aprogramoverflowconditionoccursasdescribedinSection20.2.1.4.

20.2.1.4ProgramOverflowCondition

Ifthenumberoftimeslotsusedinaprogramloopexceedsthenumberavailabletimeslotsinoneloop

resolution,thetimersetstheprogramoverflowinterruptflaglocatedintheHETEXC2register.Tomaintain

synchronizationoftheI/Os,thisconditionshouldneverbeallowedtooccurinanormaloperation.The

HETEXC2.PRGMOVRFLFLAGflagprovidesamechansimforcheckingthattheconditiondoesnotoccur

duringthedebugandvalidationphases.

769

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




LoopResolutionclockN2HETProgramProgramOverflow(HETEXC2

Address

0

1

2

3

7

8

A

B

0

1

2

3

7

8

9

A

0

1

2

C

B

NoOverflow.Programreturnstoaddress0beforestartofnextloop

Overflow.Programdidnotreturntoaddress0beforestartofnextloop..PRGMOVRFLFLAG)



N2HETFunctionalDescriptionwww.ti.com

AsFigure20-4illustrates,whenaprogramoverflowoccurs,thecurrentlyexecutingN2HETprogram

sequenceisinterruptedandrestartedatN2HETaddress0forthebeginningofthenextloopresolution

clockperiod.Also,HETEXC2.PRGMOVRFLFLAGisset.

Iftheinstructionthatcausedtheoverflow(instructionataddress0xCinFigure20-4)hasanypinactions

selected,thesepinactionswillnotbeperformed.Howeverotheractionsoftheinstructionincluding

registerandRAMupdateswillstillbeperformed.

Figure20-4.UseoftheOverflowInterruptFlag(HETEXC2)

20.2.1.5ArchitecturalRestrictionsonN2HETPrograms

CertainarchitecturalrestrictionsapplytoN2HETprograms:

1.ThesizeofanN2HETprogrammustbegreaterthanoneinstruction.

2.Anextrawaitstateisincurredbyanyinstructionthatmodifiesafieldinthenextinstructiontobe

executed.

3.Onlyoneinstruction(usinghighresolution)isallowedperhighresolutionpin.

4.Consecutivebreakpointsarenotsupported.Instructionswithbreakpointsmusthaveatleasta

distanceoftwoinstructions(forexample,ataddresses1,3,5,7,andsoon,assumingtheprogram

executeslinearly)

NOTE:WhileitwouldbeunusualtocodeanN2HETprogramthatisonlyoneinstructionlong,itis

trivialtomodifysuchaprogramtomeettherequirementofrestriction1.Simplyadda

secondinstructiontotheprogram,whichmaybeasimplebranchtozero.

Toenforcerestriction3,thehighresolutionpinstructuresrespondonlytothefirstinstruction

thatisexecutedmatchingtheirpinnumberwithhr_lr=HIGH,regardlessofwhetherornotthe

en_pin_actionfieldisON.Subsequentinstructionsareignoredbythehighresolutionpin

structurefortheremainderoftheloopresolutionperiod.

20.2.1.6Multi-ResolutionScheme

TheN2HEThasthecapabilitytovirtuallyextendthecounterwidthbyexecutinginstructionsonlyonce

everyNloopresolutionperiods.Thisdecreasesthetimerresolution,butextendsthecounterrangewhich

maybeusefulwhengeneratingormeasuringslowsignals.Figure20-5illustrateshowamulti-resoluton

schememaybeimplementedinanN2HETprogram.AnunconditionalBranchinstructionandanindex

sequence,usingaMOV64instructionineachlowresolutionloop,isrequiredtocontrolthisparticular

programflow.

NOTE:HRinstructionsmustbeplacedinthemain(fullresolution)looptoensureproperoperation.

770

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Instructionswithfullresolution(2Ps)Branchon012Instructionswithlowerresolution(6Ps)Instructionswithlowerresolution(6Ps)Instructionswithlowerresolution(6Ps)Changeconditional

conditionaladdressaddressChangeconditionaladdressChangeconditionaladdress



www.ti.comN2HETFunctionalDescription

Figure20-5.Multi-ResolutionOperationFlowExample

20.2.1.7DebugCapability

TheN2HETsupportsbreakpointstoallowyoutomoreeasilydebugyourN2HETprogram.Figure20-6

providesanillustrationofthebreakpointmechanism.

ThestepstoenableanN2HETbreakpointare:

1.MakesurethedevicenTRSTpinishigh,sinceN2HETbreakpointsaredisabledwheneverthispinis

low.(NormallythisishandledautomaticallywhenaJTAGdebuggerisattached).

2.AttachaJTAGdebuggerandconnecttothedevicethathasbeenalreadyprogrammedwiththe

N2HETcodethatneedstodebugged.(downloadingtoon-chipflashisoutsidethescopeofthis

section).

3.ExecutetheCPUprogramatleastuntilthepointwheretheN2HETprogramRAMhasbeeninitialized

bytheCPU.

4.OpenamemorywindowintheN2HETregisters.

5.MakesureNHETEXC2.DEBUGSTATUSFLAGiscleared.

6.OpenamemorywindowontheN2HETRAM

7.Setbit22intheprogramfieldoftheinstruction(s)onwhichyouwishtobreak.Notethatthisinstruction

willbeexecutedbeforetheN2HETishalted-slightlydifferentfromhowCPUbreakpointsbehave.

8.MakesuretheCPUandN2HETarerunning,iftheyarehaltedthenrestarttheCPUthroughtheJTAG

emulator(N2HETwillstartwhentheCPUstarts).

9.BoththeCPUandN2HETwillhaltwhenbreakpointisreached.

WhentheN2HETishalted,itsstatemachinesarefrozenbutalloftheN2HETcontrolregisterscanbe

accessedthroughtheJTAGemulatorinterface.

ThecurrentN2HETinstructionaddresscanbeinspectedbyreadingtheHETADDRregister;thisshould

bepointingtotheinstructionthatcausedthebreakpoint.

771

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Devicetestmodeenable

DebugrequesttoCPUDebugmodecontrolDebugstatusbitN2HETRAMBreakpointbit(P22)

(nTRST)nTRSTsignal=0:FunctionalmodenTRSTsignal=1:Test/Debugmode

DebugackfromCPU



N2HETFunctionalDescriptionwww.ti.com

TheN2HETinternalworkingregisters(A,B,R,S,T)arenotdirectlyvisiblethroughtheJTAGemulator

interface.Ifthecontentoftheseregistersneedstobeinspected,itisbesttoaddaninstructionlike

MOV32whichcopiestheregistervaluetotheN2HETRAM.ThisRAMlocationcanbeinspectedwhenthe

N2HEThalts.

TorestartexecutionofboththeCPUandtheN2HETfromthehaltedstate:

1.ClearNHETEXC2.DEBUGSTATUSFLAG.

2.Clearbit22intheprogramfieldoftheinstructiononwhichthebreakpointwasreached.

3.RestarttheCPUthroughthenormalJTAGemulatorprocedure(‘Run’or‘Go’).TheN2HETwill

automaticallystartexecutingwhenitseesthattheCPUhasexitedthedebugstate.

Figure20-6.DebugControlConfiguration

NOTE:Consecutivebreakpointsarenotsupported.Instructionswithbreakpointsmusthaveat

leastadistanceoftwoinstructions(forexample,atN2HETaddresses1,3,5,7,andsoon)

20.2.2N2HETRAMOrganization

TheN2HETRAMisorganizedintotwosections.ThefirstcontainstheN2HETprogramitself.Thesecond

containsparityprotectonbitsfortheN2HETprogram.

EachN2HETinstructionis96-bitswidebutalignedtoa128-bitboundary.Instructionsconsistofthree32-

bitfields:Program,Control,andData.Instructionsareseparatedbyafourthunimplementedaddressto

forcealignmentto128-bitboundaries.

TheintegrityoftheN2HETprogramcanbeprotectedbyParity.Parityprotectionisenabledthroughthe

N2HETParityControlRegister(HETPCR).

Table20-1showsthebaseaddressesforN2HETRAMandN2HETParityRAM.

Table20-1.N2HETRAMBaseAddresses

N2HET1BaseAddress

N2HET2BaseAddress

Memory

0xFF46_0000

0xFF44_0000

N2HETInstructionRAM(Program/Control/Data)

0xFF46_2000

0xFF44_2000

N2HETParityRAM

772

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETFunctionalDescription

20.2.2.1N2HETRAMBanking

BecausetheCPUmustmakeupdatestotheN2HETRAMwhiletheN2HETisexecuting,forexampleto

updatethedutycyclevalueofaPWM,itisimportanttounderstandhowtheN2HETRAMorganization

facilitatessimultaneousaccessesbyboththeHOSTCPUandtheN2HET.

TheN2HETRAMisimplementedas4banksof96-bitwidetwoportRAM.Thismeansthatthereatotalof

8portsavailable;fourreadandfourwrite.NormallytheN2HETwilluseuptotwooftheseportsatatime.

OnereadportisusedtoallowtheN2HETtoprefetchthenextN2HETinstructionwhileawriteportmay

beusedtoupdatethedataorcontrolfieldsthathavechangedasaresultofexecutingthecurrent

instruction.

N2HETaccessestoitsowninternalRAMaregivenpriorityoveraccessesfromanexternalhost(CPUor

DMA),thismakesN2HETprogramexecutiondeterministicwhichisacriticalrequirementforatimer.

MostN2HETinstructionsexecuteinasinglecycle.CaseswhereawaitstateimpactstheN2HETprogram

executiontimeare:

•ThecurrentN2HETinstructionwritesdatabacktothenextN2HETintheexecutionsequence.

•TheexternalhostreadsfromanN2HETinstructionwheretheautomaticread-clearoptionisset,while

theN2HETisexecutingfrom/onthesameaddress(SeeSection20.2.4.3).

Exceptforthecaseofautomaticread-clear,theexternalhostisstalledwhenthehostandN2HEThavea

bankconflict.Howeverthiswilltypicallyonlyresultinastallofonecycle,duetotheN2HETbankordering

whichisorganizedontheN2HETAddressleastsignificantbitboundaries(SeeTable20-2).

AssumingmostoftheN2HETprogramexecuteslinearlythroughtheN2HETAddressspace;ifabank

conflictdoesexistitisusuallyresolvedinthenextcycleastheN2HETprogrammovestothenextbank.

N2HETprogrammersshouldavoidwritingaprogramthataccessesthesamebankofN2HETRAMon

everycycle,asthiscouldlocktheexternalhostoutoftheN2HETmemorycompletely.

Table20-2describestheN2HETmemorymap,asviewedbytheN2HETaswellasfromthememory

spaceofthehostCPUandDMA.

Table20-2.N2HETRAMBankStructure

N2HETAddress

HostCPUorDMAAddressSpace

ProgramField

ControlField

DataField

Reserved

N2HETRAM

Instruction

Address

Address

Address

Address

Bank

000h

XX0000h

XX0004h

XX0008h

XX000Ch

A

001h

XX0010h

XX0014h

XX0018h

XX001Ch

B

002h

XX0020h

XX0024h

XX0028h

XX002Ch

C

003h

XX0030h

XX0034h

XX0038h

XX003Ch

D

004h

XX0040h

XX0044h

XX0048h

XX004Ch

A

:

:

:

:

:

:

03Fh

XX03F0h

XX03F4h

XX03F8h

XX03FCh

D

040h

XX0400h

XX0404h

XX0408h

XX040Ch

A

:

:

:

:

:

:

1FFh

XX1FF0h

XX1FF4h

XX1FF8h

XX1FFCh

D

NOTE:Theexternalhostinterfacesupportsanyaccesssizeforreads,butonly32-bitwrites

totheN2HETRAMaresupported.Reservedaddressesshouldnotbeaccessed,the

resultofdoingsoisindeterminate.

20.2.2.2ParityChecking

TheN2HETmodulecandetectparityerrorsinN2HETRAM.AsdescribedinSection20.2.2theN2HET

allows32-bitwritesonly.ThereforeN2HETRAMparitycheckingisimplementedusingoneparitybitper

32-bitfieldinN2HETRAM.

773

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETFunctionalDescriptionwww.ti.com

EvenoroddparityselectionforN2HETparitydetectioncanbeconfiguredinthesystemmodule.Parity

calculationandcheckingcanbeenabled/disabledbya4-bitkeyinHETPCR.

DuringareadaccesstotheN2HETRAM,theparityiscalculatedbasedonthedatareadfromtheRAM

andcomparedwiththegoodparityvaluestoredintheparitybits.Theparitycheckisperformedwhenthe

N2HETexecutionunitmakesareadaccesstoN2HETRAM,butalsowhenadifferentmaster(for

example,CPU,HTU,DMA)performsthereadaccess.Ifany32-bit-wordfailstheparitycheckthenan

errorissignaledtotheESMmodule.TheN2HETaddress,whichgeneratedtheerrorisdetectedandis

capturedinHETPARforhostsystemdebugging.Theaddressisfrozenfrombeingupdateduntilitisread

bythebusmaster.

TheN2HETexecutionunitreadstheinstructions,whichare96-bitwide.Theycontaintheprogram-,

control-anddata-fieldwherebyeachis32-bitwide.SowhenfetchingN2HETinstructionsparitychecking

isperformedonthreewordsinparallel.

Ifaparityerrorisdetectedintwoormorewordsinthesamecyclethenonlyoneaddress(wordatthe

loweraddress)iscaptured.ThecapturedN2HETaddressisalwaysalignedtoa32-bitwordboundary.

Duringdebug,paritycheckingisstillperformedonaccessesoriginatingfromtheon-chiphostCPUand

DMA.However,parityerrorsthataredetectedduringanaccessinitiatedbythedebuggeritselfare

ignored.

20.2.2.3ParityErrorDetectionActions

DetectionofaN2HETparityerrorcausesthefollowingactions:

1.AnerrorissignaledtotheESMmodule.

2.TheParityAddressRegister(HETPAR)isloadedwiththeaddressofthefaultyN2HETfield.

3.N2HETexecutionimmediatelystops.(Theinstructionthattriggeredtheparityerrorisnotexecuted.)

4.TheTurn-On/Off-BitintheN2HETGlobalConfigurationRegister(HETGCR)isautomaticallycleared.

5.AllN2HETinternalflagsarecleared.

6.AllN2HETpinsselectedbyN2HETParityPinRegister(HETPPR)enterapredefinedsafestate.

7.RegisterHETDOUTisalsoupdatedtoreflectchangesinpinstateduetoHETPPR.

ThesafestateforN2HETpinsselectedthroughtheHETPPRregisterdependsonhowthepinis

configuredintheHETDIR,HETPDR,andHETPSLregisters.Table20-3explainshowthesafestateis

determined.

Table20-3.PinSafeStateUponParityErrorDetection

SafeState

HETDIR

HETPDR

HETPSL

DriveLow

1

0

0

DriveHigh

1

0

1

HighImpedance

1

1

x

20.2.2.4TestingParityDetectionLogic

Totesttheparitydetectionlogic,theparityRAMhastobemadeaccessibletotheCPUinordertoallowa

diagnosticprogramtoinsertparityerrors.ThecontrolregisterbitHETPCR.TESTmustbesetinorderto

maketheparityRAMaccessible.OnceHETPCR.TESTisset,theparitybitsareaccessibleasdescribed

inTable20-4.

Table20-4.N2HETParityBitMapping

Address

Address

Bits

N2HET1

N2HET2

[31:1]

[0]

0xFF46_2000

0xFF44_2000

Reads0,Writeshavenoeffect

Instruction0ProgramFieldParityBit

0xFF46_2004

0xFF44_2004

Reads0,Writeshavenoeffect

Instruction0ControlFieldParityBit

0xFF46_2008

0xFF44_2008

Reads0,Writeshavenoeffect

Instruction0DataFieldParityBit

0xFF46_200C

0xFF44_200C

Reads0,Writeshavenoeffect

Read0

774

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HRprescaler

Loopresolutionprescaler(3bits)(6bits)

VCLK2Loopresolutionclock

HRclock



www.ti.comN2HETFunctionalDescription

Table20-4.N2HETParityBitMapping(continued)

Address

Address

Bits

N2HET1

N2HET2

[31:1]

[0]

0xFF46_2010

0xFF44_2010

Reads0,Writeshavenoeffect

Instruction1ProgramFieldParityBit

....

....

...

...

Each32-bitN2HETfieldhasitsownparitybitintheN2HETParityRAMasshowninTable20-4.There

arenoparitybitsforthereservedfields,sincethereisnophysicalN2HETRAMforthesefields.

20.2.2.5InitializationofParityRAM

Afterdevicepowerup,theN2HETRAMcontentsincludingtheparitybitscannotbeguaranteed.Inorder

toavoidfalseparityfailuresduetotherandomstateinwhichRAMpowersup,theRAMhastobe

initialized.

BeforeinitializingtheN2HETRAM,enabletheN2HETparitylogicbywritingtoHETPCR.Thenthe

N2HETInstructionRAMshouldbeinitialized.Withparityenabled,theN2HETparityRAMwillbeinitialized

automaticallybyN2HETatthesametimethattheN2HETinstructionRAMisinitializedbytheCPU.Note

thatloadingtheN2HETprogramwithparityenabledisalsoeffective.

AnotherpossibilitytoinitializetheN2HETmemoryanditsparitybitsis,tousethesystemmoduletostart

theautomaticinitializationofallRAMsonthemicrocontroller.TheRAMswillbeinitializedto‘0’.

Dependingontheeven/oddparityselection,theparitybitwillbecalculatedaccordingly.

20.2.3TimeBase

AllN2HETtimingsarederivedfromVCLK2(seeFigure20-7).InternallyN2HETinstructionsexecuteat

theVCLK2rate;butthetimerloopclockandthehigh-resolutionhardwaretimerclockcanbescaleddown

fromVCLK2.Twoprescalersareavailabletoadjustthetimerloopresolutionclockfortheprogramloop,

andthehighresolution(HR)clockfortheHRI/Ocounters.

•TimeSlots:Thenumberofcyclesavailableforinstructionexecutionperloop.TimeSlotsisthe

numberofVCLK2cyclesinaLoopResolutionClock.

•HighResolutionClock:Thehighresolutionclockisthesmallesttimeincrementwithwhichapincan

changeit’sstateorcanbemeasuredinthecaseofinputsignals.A6-bitprescalerdividingVCLK2by

auser-definedHRprescaledividerate(hr)storedinthe6-bitHRprescalefactorcode(HETPFR).See

Table20-5.

•LoopResolutionClock:Theloopresolutionclockdefinesthetimebaseforexecutingallinstructions

inaN2HETprogram.Sinceinstructionscanbeconditionallyexecuted,thelongestpaththroughthe

N2HETprogrammustfitintooneloopresolutionclockperiod(LRP).A3-bitprescalerdividingtheHR

clockbyauser-definedloop-resolutionprescaledividerate(lr)storedinthe3-bitloop-resolution

prescalefactorcode(HETPFR).SeeTable20-5.

Figure20-7.PrescalerConfiguration

Thefollowingabbreviationsandrelationsareusedinthisdocument:

1.hr:highresolutionprescalefactor(1,2,3,4,...,63,64)

2.lr:loopresolutionprescalefactor(1,2,4,8,16,32,64,128)

3.ts:Timeslots(cycles)availableforinstructionexecutionperloop.ts=hrxlr

4.HRP=highresolutionclockperiodHRP=hr·TVCLK2(ns)

5.LRP=loopresolutionclockperiodLRP=lr·HRP(ns)

775

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




hr = 2HRPhrVCLK2--------------------232MHz------------------===lr =128lr x HRP= 128 x 62.5ns = 8sμts = hr x lr = 2 x 128 = 256hr = 2, lr = 128HETPFR[31:0] = 0x0000070162.5ns



N2HETFunctionalDescriptionwww.ti.com

Theloopresolutionperiod(LRP)mustbeselectedtobelargerthanthenumberofTimeslots(VCLK2

cycles)requiredtocompletetheworst-caseexecutionpaththroughtheN2HETprogram.Otherwisea

programoverflowconditionmayoccur(seeSection20.2.1.4).Becauseoftherelationshipoftimeslotsto

thehrandlrprescalersasdescribedinitem3above,increasingeitherhrorlrincreasesthenumberof

timeslotsavailableforprogramexecution.However,lrwouldtypicallybeincreasedfirst,sinceincreasing

hrresultsinadecreaseintimerresolutionsinceitreducestheclocktotheHighResolutionIOstructures.

ThedividerateshrandlrcanbedefinedintheHETPFRregister.Table20-5liststhebitfieldencodings

fortheprescaleoptions.

Table20-5.PrescaleFactorRegisterEncoding

LRPFC-LoopResolution

HRPFC-HighResolution

HETPFR[10:8]

PrescaleFactorlr

HETPFR[5:0]

PrescaleFactorhr

000

/1

000000

/1

001

/2

000001

/2

010

/4

000010

/3

011

/8

000011

/4

100

/16

:::::

:

101

/32

111101

/62

110

/64

111110

/63

111

/128

111111

/64

20.2.3.1DeterminingLoopResolution

Asanexample,consideranapplicationthatrequireshighresolutionofHRP=62.5ns,andloopresolution

ofLRP=8μs,andneedsatleast250timeslotsfortheN2HETapplicationprogram.

AssumingVCLK2=32MHz,thefollowingshowswhichdivide-byratesandwhichvalueinthePrescale

FactorRegister(HETPFR)isrequiredfortheaboverequirements:

(30)

Intheexampleabove,iftheloopresolutionperiodneedstodecreasefrom8μsto4μs,thenonly128

timeslotswillbeavailableforprogramexecution.Theprogrammayneedtoberestructuredassuggested

inSection20.2.1.6,Multi-ResolutionScheme.

20.2.3.2The7-BitHRDataField

TheinstructionexecutionexamplesofECMP(Section20.2.5.9),MCMP(Section20.2.5.10),PCNT

(Section20.2.5.12),PWCNT(Section20.2.5.11),andWCAP(Section20.2.5.13)showthatthe7-bitHR

datafieldcangenerateormeasurehighresolutiondelays(HRdelay)relativetothestartofanLRPwithin

oneN2HETloopLRP.Thelastsectionshowedthat:

LRP=lr×HRP

Therearelrhighresolutionclockperiods(HRP)withintheN2HETloopresolutionclockperiod(LRP).Iflr

=128thentheHRdelaycanrangefrom0to127HRPclockswithinLRPandall7bitsoftheHRdatafield

areneeded.Insteadofbeinglimitedtomeasuringandtriggeringeventsbasedontheloopresolutionclock

period(LRP)theHRextensionallowsmeasurementsandeventstobedescribedintermsfractionsofan

LRP(downto1/128ofanLRP).TheonlylimitationisthatamaximumofoneHRdelaycanbespecified

perpinduringeachloopresolutionperiod.

776

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETFunctionalDescription

Table20-6showswhichbitsoftheHRdatafieldarenotusedbythehighresolutionIOstructuresiflris

lessthan128.Inthiscasethenon-relevantbits(LSBs)oftheHRdatafieldswillbeoneofthefollowing:

•Writtenas0forHRcapture(forPCNT,WCAP)

•Orinterpretedas0forHRcompare(forECMP,MCMP.PWCNT)

Table20-6.Interpretationofthe7-BitHRDataField

BitsoftheHRdatafield(1)

LoopResolution

Prescaledividerate(lr)

D[6]

D[5]

D[4]

D[3]

D[2]

D[1]

D[0]

HRPCyclesdelayrange

1

XXXXXXX

0

2

1/2

XXXXXX

0to1

4

1/2

1/4

XXXXX

0to3

8

1/2

1/4

1/8

XXXX

0to7

16

1/2

1/4

1/8

1/16

XXX

0to15

32

1/2

1/4

1/8

1/16

1/32

XX

0to31

64

1/2

1/4

1/8

1/16

1/32

1/64

X

0to63

128

1/2

1/4

1/8

1/16

1/32

1/64

1/128

0to127

(1)X=Non-relevantbit(treatedas'0')

20.2.3.2.1Example:

PrescaleFactorRegister(HETPFR)=0x0300

—>lr=8—>LRP=8·HRP

Assumption:HRdatafield=0x50=1010000b

lr=8—>BitsD[3:0]areignored—>HRdelay=101b=5HRPs

orbyusingthecalculationwithweightfactors:

HRDelay

=lr·(D[6]·1/2+D[5]·1/4+D[4]·1/8+D[3]·1/16+D[2]·1/32+D[1]·1/64+D[0]·1/128)

=8·(1·1/2+0·1/4+1·1/8+0·1/16+0·1/32+0·1/64+0·1/128)

=5HRPs

20.2.4HostInterface

Thehostinterfacecontrolsallcommunicationsbetweentimer-RAMandmastersaccessingtheN2HET

RAM.Itincludesfollowingcomponents:

20.2.4.1HostAccessestoN2HETRAM

ThehostinterfacesupportsthefollowingtypesofaccessestoN2HETRAM:

•Readaccessesof8,16,or32bits

•Readaccessesof64-bitsthatfollowtheshadowregistersequencedescribedinSection20.2.4.2.

•Writeaccessesof32bits

Writesof8or16bitstoN2HETRAMbyanexternalhostarenotsupported.

20.2.4.264-bitReadAccess

TheconsecutivereadofacontrolfieldCF(n)andadatafieldDF(n)ofthesameinstruction(n)performed

bythesamemaster(forexample,CPU,DMA,oranyothermaster)isalwaysdoneasasimultaneous64-

bitreadaccess.ThismeansthatatthesametimeCF(n)isread,DF(n)isloadedinashadowregister.So

thesecondaccesswillreadDF(n)fromtheshadowregisterinsteadoftheN2HETRAM.

777

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETFunctionalDescriptionwww.ti.com

Ingenerala64-bitreadaccessofonemastercouldbeinterruptedbya64-bitreadaccessofanother

master.Atotalofthreeshadowregistersareavailable.Thereforeuptothreemasterscanperform64-bit

readsinaninterleavedmanner(Master1CF,Master2CF,Master3CF,Master1DF,Master2DF,Master3

DF).

Ifallthreeshadowregistersareactivatedanda4thmasterperformsaCForDFreaditwillresultinan

addresserrorandtheRAMaccesswillnothappen.Otheraccesstypesbyafourthmaster(readsfromthe

PFfieldorwritestoanyofthefields)willoccurbecausetheseaccesstypesdonotrequireanavailable

shadowregisterresourcetocomplete.

20.2.4.3AutomaticReadClearFeature

TheN2HETprovidesafeatureallowingtoautomaticallyclearthedatafieldimmediatelyafterthedatafield

isreadbytheexternalhostCPU(orDMA).Thisfeatureisimplementedviathecontrolbit,whichis

locatedinthecontrolfield(bitC26).Thisisastaticbitthatcanbeusedbyanyinstruction,andspecifiedin

theN2HETprogrambyaddingtheoption(control=ON)totheN2HETinstruction.Theautomaticread

clearfeatureworksforboth32and64bitreadsthatfollowthesequencedescribedinSection20.2.4.2.

WhenthehostCPUreadsthedatafieldofthatinstruction,thecurrentdatavalueisreturnedtothehost

CPUbutthefieldisclearedautomaticallyasasideeffectoftheread.Incasethemasterreadsdatafrom

aninstructioncurrentlyexecuting,anynewcaptureresultisstoredandthistakespriorityoverthe

automaticreadclearfeature,sothatthenewcaptureresultisnotlost.

Asanexampleofwheretheautomaticreadclearfeatureisuseful,considerthePCNTinstruction.Ifthis

instructionisconfiguredforautomaticreadclear,thenwhenthehostCPUreadsthePCNTdatafielditwill

beclearedautomatically.ThehostCPUcanthenpollthePCNTdatafieldagain,andaslongasthefield

returnsavalueofzerothehostCPUprogramknowsanewcaptureeventhasnotoccurred.Ifthedata

fieldwerenotcleared,itwouldbeimpossibleforthehostCPUtodeterminewhetherthedatafieldholds

datafromthepreviouscaptureevent,orifithappenstobedatafromanewcaptureeventwiththesame

value.

20.2.4.4EmulationMode

Emulationmode,usedbythesoftwaredebugger,isspecifiedintheglobalconfigurationregister.When

thehostCPUdebuggerhitsabreakpoint,theCPUsendsasuspendsignaltothemodules.Twomodesof

operationareprovided:suspendandignoresuspend.

•Suspend

Whenasuspendisissued,thetimeroperationstopsattheendofthecurrenttimerinstruction.However,

theCPUaccessestothetimerRAMorcontrolregistersarefreelyexecuted.

•Ignoresuspend

ThetimerRAMignoresthesuspendsignalandoperatesrealtimeasnormal.

20.2.4.5Power-Down

Aftersettingtheturn-offbitintheGlobalConfigurationRegister(HETGCR),itisrequiredtodelayuntilthe

endofthetimerprogramloopbeforeputtingtheN2HETinpower-downmode.Thiscanbedoneby

waitinguntiltheN2HETCurrentAddress(HETADDR)becomeszero,beforedisablingtheN2HETclock

sourceinthedevice’sGlobalClockModule(GCM).

20.2.5I/OControl

TheN2HEThasupto32pins.Refertodevicespecificdatasheetsforinformationconcerningthenumber

ofN2HETIOavailable.AlloftheN2HETpinsavailableareprogrammableaseitherinputsoroutputs.

These32I/OshaveanidenticalstructureconnectedtopinsHET[31]toHET[0].SeeFigure20-8foran

illustrationoftheI/Ocontrol.Inadditionall32I/OshaveaspecialHRstructurebasedontheHRclock.

ThisstructureallowsanyN2HETinstructiontouseanyoftheseI/Oswithanaccuracyofeitherloop

resolutionorhighresolutionaccuracy.

778

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Timerdatain

HET[x]

LoopResolutionClock

Timerdataout

HETDIRHETDINHETDOUTHETDSETHETDCLR

HighResolutionStructure



www.ti.comN2HETFunctionalDescription

Figure20-8.I/OControl

PinsN2HET[31]toN2HET[0]canbeusedbytheCPUasgeneralpurposeinputsoroutputsusingthe

N2HETDataInputRegister(HETDIN)forreadingandN2HETDataOutputRegister(HETDOUT),N2HET

DataSetRegister(HETDSET)orN2HETDataClearRegister(HETDCLR)forwriting,dependingonthe

typeofactiontoperform.TheN2HETpinsusedasgeneralpurposeinputsaresampledoneachVCLK2

period.

20.2.5.1UsingGeneralPurposeI/ODataSetandClearRegisters

TheN2HETDataClearRegister(HETDCLR)andN2HETDataSetRegister(HETDSET)canbeusedto

minimizethenumberofaccessestotheperipheraltomodifytheoutputregisterandoutputpins.Whenthe

applicationneedstosetortoresetsomeN2HETpinspinswithoutchangingthevalueoftheotherspins,

thefirstpossibilityistoreadN2HETDataOutputRegister(HETDOUT),modifythecontent(AND,OR,

etc.),andwritetheresultintoN2HETDataOutputRegister(HETDOUT).However,thisread-modify-write

sequencecouldbeinterruptedbyadifferentfunctionmodifyingthesameregisterwhichwillresultina

datacoherencyproblem.

UsingtheN2HETDataSetRegister(HETDSET)orN2HETDataClearRegister(HETDCLR),the

applicationprogrammustwritethemaskvalue(samemaskvalueforthefirstoption)totheregistertoset

orresetthedesiredpins.Anybitswrittenas0toHETDSETandHETDCLRareleftunchanged,which

avoidsthepossiblecoherencyproblemoftheread-modify-writeapproach.

CodingExample(Cprogram):Setpinsusingthe2methods.

unsignedintMASK;/*Variablethatcontentthebitmask*/

volatileunsignedint*HETDOUT,*HETDSET;/*PointertoHETregisters*/

...

*HETDOUT=*HETDOUT|MASK;/*Read-modify-writeofHETDOUT*/

*HETDSET=MASK;/*SetthepinwithoutreadingHETDOUT*/

20.2.5.2LoopResolutionStructure

TheN2HETusesthepinsN2HET[31:0]asinputand/oroutputbythewayoftheinstructionset.Actually,

eachpincouldmonitortheN2HETprogramorcouldbemonitoredbytheN2HETprogram.Byusingthe

I/OregisteroftheN2HET,theCPUisabletointeractwiththeN2HETprogramflow.

Whenanaction(setorreset)istakenonapinbytheN2HETprogram,theN2HETwillmodifythepinat

therisingedgeofthenextloopresolutionclock.

WhenaneventoccursonaN2HETI/Opin,itistakenintoaccountatthenextrisingedgeoftheloop

resolutionclock.

ThestructureofeachpinisshowninFigure20-9.

779

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




40123401

01

0

VCLK2HRClockLRClockInstructionCounterPinHET[0]Z-Flag

LRP

HRP25-bitECMPmatch

PinactioninnextloopresolutioncycleCNTresetsSetsZ-Flag

OppositePinactioninnext loop resolutioncycle11111

100000

Timerdatain

HET[x]

LoopResolutionClock

Timerdataout

HETDIRHETDINHETDOUTHETDSETHETDCLR



N2HETFunctionalDescriptionwww.ti.com

Figure20-9.N2HETLoopResolutionStructureforEachBit

TheexampleinFigure20-10showsasimplePWMgenerationwithloopresolutionaccuracy.The

correspondingprogramis:

HETPFR[31:0]register=0x201-->lr=4andhr=2-->ts=8

N2HETProgram:

L00CNT{next=L01,reg=A,irq=OFF,max=4}

L01ECMP{next=L00,cond_addr=L00,hr_lr=LOW,en_pin_action=ON,pin=0,

action=PULSEHI,reg=A,irq=OFF,data=1,hr_data=0x0}

;25bitcomparevalueis1andthe7-bitHRcomparevalueis0

TheCNTandECMPinstructionsareexecutedonceeachloopresolutioncycle.WhentheCNTinstruction

isexecuted,thespecifiedregister(A)andtheCNTinstructiondatafieldarebothincrementedbyone.

NexttheECMPisexecutedandthedatafieldoftheECMPiscomparedwiththespecifiedregister(A).If

bothvaluesmatch,thenthepinaction(PULSEHIinthiscase)willbeperformedinthenextloopresolution

cycle.TheCNTcontinuesincrementingeachloopresolutioncycle.Whenthedatafieldoverflows(max+

1),thentheZ-flagissetbytheCNTinstruction.Inthenextloopresolutioncycle,theZ-flagisevaluated

andtheoppositepinactionisperformedifitisset.TheZ-flagwillonlybeactiveforoneloopresolution

cycle.

Figure20-10.LoopResolutionInstructionExecutionExample

780

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HRcontrollogicHRflagsHRup/downcounter(7bits)HRregister

TimerdatainHRprescaledriverHRcomparedataResolutionclock

Timer data in

HET[x]Timerdataout

>LoopResolutionClock

HETDIRHETDINHETDSETHETDOUTHETDCLR

{HRStructureOnePerPin



www.ti.comN2HETFunctionalDescription

20.2.5.3HighResolutionStructure

All32I/OsprovidetheHRstructurebasedontheHRclock.TheHRclockfrequencyisprogrammed

throughthePrescaleFactorRegister(HETPFR).InadditiontothestandardI/Ostructure,allpinshaveHR

hardwaresothatthesepinscanbeusedasHRinputcaptures(usingtheHRinstructionsPCNTor

WCAP)orHRoutputcompares(usingtheHRinstructionsECMP,MCMPorPWCNT).

AllfiveHRinstructions(PCNT,WCAP,ECMP,MCMPandPWCNT)haveadedicatedhr_lrbit(high

resolution/lowresolution;programfieldbit8)allowingoperationeitherinHRmodeorinstandard

resolutionmodebyignoringtheHRfield.Bydefault,thehr_lrbitvalueis0whichimpliesHRoperation

mode.However,settingthisbittooneallowstheuseofseveralHRinstructionsonasingleHRpin.Only

oneinstructionisallowedtooperateinHRmode(bitclearedto0),buttheotherinstructionscanbeused

instandardresolutionmode(bitsetto1).

20.2.5.4HRBlockDiagram

EachtimeanHRinstructionisexecutedonagivenpin,theHRstructureforthatpinisprogrammed

(whichHRfunctiontoperformandonwhichedgesitshouldtakeanaction)withtheinformationgivenby

theinstruction.TheHRstructureforeachpindecodesthepinselectfieldoftheinstructionandprograms

itsHRstructureifitmatches.

NOTE:ForeachN2HETpin,onlyoneinstructionspecifyingahighresolutionoperation(hr_lr=HIGH)

isallowedtoexecuteperloopresolutionperiod.Thisincludesanyinstructionswhere

(hr_lr=HIGH)but(en_pin_action=OFF).

Thefirsthighresolutioninstructionthatexecutesandspecifiesaparticularpinlocksout

subsequenthighresolutioninstructionsfromoperatingonthesamepinuntiltheendfothe

currentloopresolutionperiod.

Figure20-11.HRI/OArchitecture

781

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HET[0]

HET[1]

001

HETXOR0HETXOR0

N2HETHR0

N2HETHR1

HET[0]HET[1]

N2HETHR0N2HETHR101

HRshare1/0



N2HETFunctionalDescriptionwww.ti.com

20.2.5.5HRStructuresSharing(Input)

TheHRShareControlRegister(HETHRSH)allowstwoHRstructurestosharethesamepinforinput

captureonly.Ifthesebitsareset,theHRstructuresNandN+1areconnectedtopinN.Inthisstructure,

pinN+1remainsavailableforgeneralpurposeinput/output.SeeFigure20-12.

Figure20-12.ExampleofHRStructureSharingforN2HETPins0/1

ThefollowingprogramgivesanexamplehowtheHRsharefeature(HET[0]HRstructureandHET[1]HR

structureshared)canbeusedforthePCNTinstruction:

L00PCNT{next=L01,type=rise2fall,pin=0}

L01PCNT{next=L00,type=fall2rise,pin=1}

TheHET[1]HRstructureisalsoconnectedtotheHET[0]pin.TheL00_PCNTdatafieldisabletocapture

ahighpulseandtheL01_PCNTcapturesalowpulseonthesamepin(N2HET[0]pin).

20.2.5.6AND/XOR-sharedHRStructure(Output)

UsuallytheN2HETdesignallowsonlyoneHRstructuretogenerateHRedgesonapinconfiguredas

outputpin.TheHETXORregisterallowsalogicalXORoftheoutputsignalsoftwoconsecutiveHR

structuresN(even)andN+1(odd).SeeFigure20-13.Inthisway,itispossibletogeneratepulsessmaller

thantheloopresolutionclocksincebothedgescanbegeneratedbytwoindependentHRstructures.This

isespeciallyrequiredforsymmetricalPWM.SeeFigure20-14.

ThehardwareprovidesaXORgatethatisconnectedtotheoutputsoftheHRstructureoftwo

consecutivepins.Inthisstructure,pinN+1remainsavailableforgeneralpurposeinput/output.

Figure20-13.XOR-sharedHRI/O

782

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HET[0]

HR0HR1Asymmetricalcounter(CNT)Symmetricalcounter(notinHET)



www.ti.comN2HETFunctionalDescription

ThefollowingN2HETprogramgivesanexampleforonechannelofthesymmetricalPWM.Thegenerated

timingisgiveninFigure20-14.

MAXC.equ22

A_.equ0;HRstructureHR0

B_.equ1;HRstructureHR1

CNCNT{next=EA,reg=A,max=MAXC}

EAECMP{next=EB,cond_addr=MA,hr_lr=HIGH,en_pin_action=ON,pin=A_,

action=PULSELO,reg=A,data=17,hr_data=115}

MAMOV32{next=EB,remote=EA,type=IMTOREG&REM,reg=NONE,data=17,hr_data=19}

EBECMP{next=CN,cond_addr=MB,hr_lr=HIGH,en_pin_action=ON,pin=B_,

action=PULSELO,reg=A,data=5,hr_data=13}

MBMOV32{next=CN,remote=EB,type=IMTOREG&REM,reg=NONE,data=5,hr_data=13}

N2HETSettingsandoutputsignalcalculationforthisexampleprogram:

•PinHET[0]andHET[1]areXOR-shared.

•HETPFR[31:0]register=0x700:lr=128,hr=1,timeslotsts=128

•PWMperiod(determinedbyCNT_maxfield)=(22+1)·LRP=2944HRP

•Lengthofhighpulseof(HET[0]XORHET[1])=

LH=(17·LRP+115·HRP)-(5·LRP+13·HRP)

Withlr=128thereisLRP=128·HRP,so

LH=(2291-653)·HRP=1638HRP

•Dutycycle=DC=LH/PWM_period=1638HRP/(2944·HRP)=55.6%

Figure20-14graphicallyshowstheimplementationoftheXOR-sharedfeature.Thefirst2waveforms

(symmetricalcounterandCNT)showasymmetriccounterandasymmetriccounter.Thesymmetric

counterisshownonlytohighlighttheaxisofsymmetryandisnotimplementedintheN2HET.The

asymmetriccounter,whichisimplementedwithaCNTinstruction,needstobesettotheperiodofthe

symmetriccounter.Thenexttwowaveforms(HR[0]andHR[1])showtheoutputoftheHRstructures,

whicharetheinputsfortheXORgatetocreatethePWMoutputonpinHET[0].Noticethatthepulsesof

signalHET[0]arecenteredabouttheaxisofsymmetry.

Figure20-14.SymmetricalPWMwithXOR-sharingOutput

783

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




N2HETHR0

HET[0]

001

HETAND0HETAND0

N2HETHR1

HET[1]



N2HETFunctionalDescriptionwww.ti.com

Asanalternative,HRstructuresmaybesharedusingalogicalANDfunctiontocombinetheeffectsofthe

pinstructures.TheHETANDallowssharingtwoconsecutiveHRstructuresN(even)andN+1(odd).See

Figure20-15.Inthisstructure,pinN+1remainsavailableforgeneralpurposeinput/output.

NOTE:SettingboththeHETANDbitandHETXORbitsatthesametimeforagivenpairofN2HET

pinsisnotsupported,mustbeavoidedbytheapplicationprogram.

Figure20-15.AND-sharedHRI/O

20.2.5.7LoopBackMode

TheloopbackfeaturecanbeusedbytheapplicationtomonitoranN2HEToutputsignal.Forexample,if

aPWMisgeneratedbyHRstructure0,thenaPCNTinstructionassignedtoHRstructure1canmeasure

backthepulselengthorperiodsofthePWMoutputsignal.

LoopbackmodeisactivatedbetweentwohighresolutionstructuresbysettingLBPSEL[x]to‘1’inthe

HETLBPSELRegisterforthecorrespondingstructurepair.Thedirectionoftheloopbackbetweenthetwo

structuresinthestructurepairisdeterminedbythevalueofLBPDIR[x]intheHETLBPDIRRegister.

Forexample,ifbitLBPSEL[0]issetto‘1’,thenHRstructures0and1willbeinternallyconnectedinloop

backmode.IfbitLBPDIR[0]issetto‘0’thenstructure0willbetheinputandstructure1willbetheoutput.

DigitalLoopback

DigitalloopbackmodeisenabledbysettingLBPTYPE[x]to‘0’intheHETLBPSELRegisterforthe

correspondingstructurepairs.Indigitalloopbackmode,thestructurepairsareconnecteddirectlyandthe

outputbuffersarebypassed.Therefore,theloopbackvalueswillNOTbeseenonthecorrespondingpins.

Figure20-16belowshowsanexampleofdigitalloopbackbetweenstructuresHR0andHR1.LBSEL[0]

hasbeensetto‘1’toenableloopbackbetweenthetwostructures.LBTYPE[0]hasbeensetto‘0’toselect

digitalmodefortheloopbackpair.TheLPBDIR[0]valuewilldeterminethedirectionoftheloopbackby

selectingwhichoftheHRblocksisoutput,andwhichisinput.Theboldlinesshowthedigitalloopback

path.

784

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HR0HR1

X

X

OutputBuffer

OutputBuffer

LBPDIR[0]valuedetermineswhichHRblockisinputandwhichisoutput

LBSEL[0]valuedetermineswhetherornotloopbackisenabledforthesetwoblocksPin0Pin1LoopbackvaluesWILLbeseenonthepinsinAnalogLoopbackMode

HR0HR1

X

X

OutputBuffer

OutputBuffer

Pin0Pin1LoopbackvalueswillNOTbeseenonthepinsinDigitalLoopbackMode

LBPDIR[0]valuedetermineswhichHRblockisinputandwhichisoutput

LBSEL[0]valuedetermineswhetherornotloopbackisenabledforthesetwoblocks



www.ti.comN2HETFunctionalDescription

Figure20-16.HR0toHR1DigitalLoopbackLogic:LBTYPE[0]=‘0’

AnalogLoopback

AnalogloopbackmodeisenabledbysettingLBPTYPE[x]to‘1’intheHETLBPSELRegisterforthe

correspondingstructurepairs.Inanalogloopbackmode,thestructurepairsareconnectedoutsideofthe

outputbuffers.Therefore,theloopbackvaluesWILLbeseenonthecorrespondingpins.Figure20-17

belowshowsanexampleofanalogloopbackbetweenstructuresHR0andHR1.LBSEL[0]hasbeensetto

‘1’toenableloopbackbetweenthetwostructures.LBTYPE[0]hasbeensetto‘1’toselectanalogmode

fortheloopbackpair.TheLPBDIR[0]valuewilldeterminethedirectionoftheloopbackbyselectingwhich

oftheHRblocksisoutput,andwhichisinput.Theboldlinesshowtheanalogloopbackpath.

Figure20-17.HR0toHR1AnalogLoopBackLogic:LBTYPE[0]=‘1’

Note:

•TheloopbackdirectioncanbeselectedindependentoftheHETDIRregistersetting.

•ThepinwhichisnotdrivenbytheN2HEToutputpinactionscanstillbeusedasnormalGIOpin.

20.2.5.8EdgeDetectionInputTiming

ThereareseveraltimingrequirementsforinputsignalsinordertobecapturedcorrectlybyN2HET.

Figure20-18illustratestheserequirements,withminandmaxvaluesdescribedinTable20-7(Loop

Resolution)andTable20-8(HighResolution).

785

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




N2HETx3

4

2

1



N2HETFunctionalDescriptionwww.ti.com

Figure20-18.N2HETInputEdgeDetection

Table20-7.EdgeDetectionInputTimingforLoopResolutionInstructions

Parameter#

Description

min

max

1

InputSignalPeriod,risingedgetorisingedge

>2(hr)(lr)tc(VCLK2)

2

InputSignalPeriod,fallingedgetofallingedge

<225(hr)(lr)tc(VCLK2)

3

InputSignal,highphase

>(hr)(lr)tc(VCLK2)

4

InputSignal,highphase

Table20-8.EdgeDetectionInputTimingforHighResolutionInstructions

Parameter#

Description

min

max

1

InputSignalPeriod,risingedgetorisingedge

>(hr)(lr)tc(VCLK2)

2

InputSignalPeriod,fallingedgetofallingedge

<225(hr)(lr)tc(VCLK2)

3

InputSignal,highphase

>2(hr)tc(VCLK2)

4

InputSignal,highphase

ThesearetheN2HETarchitecturallimitations.Actuallimitationswillbeslightlydifferentduetoonchip

routingandIObufferdelays,usuallybyseveralnanoseconds.Besuretoconsultthedevicedatasheetfor

actualtimingsthatapplytothatdevice.Also,certaindevicesplaceadditionalrestrictionsonwhichpins

supportthehighresolutiontimingsofTable20-8,ifpresenttheseadditionallimitationswillalsobecalled

outinthedevicedatasheet.

NotethatthemaxlimitinTable20-7andTable20-8isbasedonthecounterrangeofasingleN2HET

instruction.ThemaxvaluecouldbeextendedbyemployinganadditionalN2HETinstructiontokeeptrack

ofcounteroverflowsoftheinputcounter/captureinstruction.

20.2.5.9PWMGenerationExample1(inHRMode)

ThefollowingexampleshowshowanECMPinstructionworksinhighresolutionmode.Theexample

assumesaVCLK2of32MHzandthefollowingvaluesfortheprescaledividerates(hrandlr),numberof

timeslots(ts),highandloopresolutionperiod(HRPandLRP):

hr=2,lr=4,ts=hr·lr=8

HRP=hr/VCLK2=2/32MHz=62.5ns

LRP=(hr·lr)/VCLK2=8/32MHz=250ns

Withts=8thereareeighttimeslotsavailablefortheprogramexecution,whichinthiscasewillconsistof

oneCNTandoneECMPinstructionasshownbelow.ThedatafieldoftheECMPinstructionisthe32-bit

comparevalue,wherebythelower7bitsrepresentthehighresolutioncomparefield.

Whenthe25-bit(loopresolution)comparematches,theHRcomparevaluewillbeloadedfromthe7lower

bitsoftheinstructiondatafieldtotheHRcounter.Atthenextloopresolutionclock,theHRcounterwill

countdownattheHRclockfrequencyandperformthepinactionwhenitreacheszero.

786

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




0210

01

01

01

01

01

01

01

VCLK2HRClockLRClockInstructionLRCounterPinHET[0]Z-Flag

LRP

HRP25-bitECMPmatch

Pinactioninnextloopresolutioncycle+highresolutiondelayCNTresetsSetsZ-Flag

OppositePinactioninnextloopresolutioncycle

40123401HRCounter

HRdelay



www.ti.comN2HETFunctionalDescription

IntheexampleillustratedbyFigure20-19the25-bitcomparevalueisoneandthe7-bitHRcompare

valueistwo.AccordingtoSection20.2.3.2,dependingontheloopresolutiondividerate(lr),onlycertain

bitsofthe7-bitHRcomparevaluearevalid.Inthisexampleonlytheupper2bits(D[6:5])aretakeninto

account.Theexampleprogrambelowhasasettingofhr_data=100000b.Shiftingthisvaluerightby5

bits,resultsin10bwhichequalsthetwoHRclockcyclesdelaymentionedabove.

Figure20-19.ECMPExecutionTimings

HETPFR[31:0]register=0x201-->lr=4andhr=2-->ts=8

N2HETProgram:

L00CNT{next=L01,reg=A,irq=OFF,max=4}

L01ECMP{next=L00,cond_addr=L00,hr_lr=HIGH,en_pin_action=ON,pin=0,

action=PULSEHI,reg=A,irq=OFF,data=1,hr_data=0x40}

;25bitcomparevalueis1andthe7-bitHRcomparevalueis2

;(Becauseoflr=4theD[4:0]ofthe7-bitHRfieldareignored)

NOTE:ECMPOppositeActions

ECMPoppositepinactionsarealwayssynchronizedtotheloopresolutionclock.

ChangingthedutycycleofaPWMgeneratedbyanECMPinstruction,canleadtoamissingpulseifthe

datafieldoftheinstructionisupdateddirectly.Thiscanhappenwhenitischangedfromahighvaluetoa

lowervaluewhiletheCNTinstructionhasalreadypassedthenewupdatedlowervalue.Toavoidthisa

synchronousdutycycleupdatecanbeperformedwiththeuseofanadditionalinstruction(MOV32).This

instructionisonlyexecutedwhenthecompareoftheECMPmatches.Forthisthecond_addroftheECMP

needstopointtotheMOV32.OnexecutionoftheMOV32,itmovesitsdatafieldintothedatafieldofthe

ECMP.TheupdateofthedutycyclehastobemadetotheMOV32datafieldinsteadoftheECMPdata

field.

787

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HRclockECMPPinactionOppositepinactionLRclockLRclockHRclockPWCNTPinactionOppositepinaction



N2HETFunctionalDescriptionwww.ti.com

20.2.5.10PWMGenerationExample2(inHRMode)

TheMCMPinstructioncanalsobeusedinHRmode.Inthiscaseoperationisexactlythesameasforthe

ECMPinstructionexceptthatthe25-bitlowresolutionisnowtheresultofamagnitudecompare(greater

orequal)ratherthananequalitycompare.Whenthe25-bit(loopresolution)magnitudecomparematches,

theHRcomparevaluewillbeloadedfromthe7lowerbitsoftheinstructiondatafieldtotheHRcounter.

Atthenextloopresolutionclock,theHRcounterwillcountdownattheHRclockfrequencyandperform

thepinactionwhenitreacheszero.

TheMCMPinstructionavoidsthemissingpulseproblemoftheECMPinstruction(seepreviousexample),

howeverthedutycycleofthesignalmightnotbeexactforonePWMperiod.ThebenefitoftheMCMPis

thatitavoidsaddinganotherinstructiontodothedutycycleupdatesynchronously.

20.2.5.11PulseGenerationExample(inHRMode)

ThePWCNTinstructionmayalsobeusedinHRmodetogeneratepulseoutputswithHRwidth.It

generatesasinglepulsewhenthedatafieldoftheinstructionisnon-zero.Itremainsattheoppositepin

actionwhenthedatafieldiszero.

ThePWCNTinstructionoperatesconverselytotheECMPinstruction.SeeFigure20-20.ForPWCNT,the

oppositepinactionissynchronouswiththeHRclockandforECMPthepinactionissynchronouswiththe

HRclock.ThePWCNTpinactionissynchronouswiththeloopresolutionclock.

Figure20-20.High/LowResolutionModesforECMPandPWCNT

20.2.5.12PulseMeasurementExample(inHRMode)

ThePCNTinstructioncapturesHRmeasurementofthehigh/lowpulsetimeorperiodsoftheinput.As

showninFigure20-21,atmarker(1)theinputgoesHIGHandtheHRcounterimmediatelybeginsto

count.Thecounterincrementsandrollsoveruntilthefallingedgeontheinputpin,whereitcapturesthe

countervalueintotheHRcaptureregister(marker(2)).ThePCNTinstructionbeginscountingwhenthe

synchronizedinputsignalgoesHIGHandcapturesboththe25-bitdatafieldandtheHRcaptureregister

intoRAMwhenthesynchronizedinputfalls(marker(3)).

NOTE:TheHRcapturevaluewrittenintoRAMisshiftedappropriatelydependingontheloop

resolutionprescaledividerate(lr).(SeealsoSection20.2.3.2,“The7-bitHRdatafield”)

Figure20-21showswhathappenswhenthecaptureedgearrivesaftertheHRcounteroverflows.This

causestheincrementedvaluetobecapturedbythePCNTinstruction.

788

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HRclockLoopresclockPCNTCFHRcounterHRcapt.regPCNTDFInputpinInputpinsync’d

X012

0

1

2

3

0

1

2

3

0

0

X3

X1

1

2

3

HRclockLoopresclockPCNTCFHRcounterHRcapt.regPCNTDFInputpinInputpinsync’d

X012

0

1

2

3

0

1

2

3

0

0

X1

X2

1

2

3



www.ti.comN2HETFunctionalDescription

Figure20-21.PCNTInstructionTiming(WithCaptureEdgeAfterHRCounterOverflow)

Figure20-22showswhathappenswhenthecaptureedgearrivesbeforetheHRcounteroverflows.This

causesthenon-incrementedvaluetobecapturedbythePCNTinstruction.

Figure20-22.PCNTInstructionTiming(WithCaptureEdgeBeforeHRCounterOverflow)

20.2.5.13WCAPExecutionExample(inHRMode)

TheHRcapabilityisenabledforWCAP,ifitshr_lrbitiszero.InthiscasetheHRcounterisalways

enabledandissynchronizedwiththeresolutionloop.Whenthespecifiededgeisdetected,thecurrent

valueoftheHRcounteriscapturedintheHRcaptureregisterandwrittenintotheRAMafterthenext

WCAPexecution.TheWCAPinstructioneffectivelytimestampsthefreerunningtimersavedinaregister

(forexample,registerAshowninFigure20-23).

789

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Outputenable

Dataout

Datain

Pullcontroldisable

PullselectN2HETpin

Pullcontrollogic

Inputenable

HRclockLoopresclockHRcounterHRcapt.regWCAPDFInputpinHET[0]

0

1

2

3

0

1

2

3

0

X2

X4

Instruction

CNT

WCAP

CNT

WCAP

CNT

WCAP

CNT

WCAP

CNT

WCAP

CNT

WCAP

0Aregister

1

2

3

4

5

6

1

2

3

0

1

2

3

0

1

2

3

0

1

23WCAP

Previousbit0x0240captured to WCAPDF[31:0]

LRP

HRP

sync’dtoVCLK2InputpinHET[0]sampledbyLRP



N2HETFunctionalDescriptionwww.ti.com

Figure20-23.WCAPInstructionTiming

HETPFR_register=0x0200-->lr=4,hr=1,ts=4

N2HETProgram:

L00CNT{reg=A,max=01ffffffh}

L01WCAP{next=L00,cond_addr=L00,hr_lr=high,reg=A,event=FALL,pin=0,

data=0}

Intheexample,theWCAPisconfiguredtocapturethecounterwhenafallingedgeoccurs.TheWCAP

datafield(WCAP_DF)isupdatedintheloopsucceedingtheloopinwhichtheedgeoccurred.TheWCAP

instructionevaluatesanedgebycomparingitsPreviousbitwiththesync’dinputsignal.InFigure20-23,

thecurrentvalueofthecounter(4)iscapturedtoWCAP_DF[31:7]andthevalueoftheHRcapture

register(2)istransferredtothevalidbits(accordingthelrprescaler)ofWCAP_DF[6:0].Therefore,inthe

example0x0240iscapturedinWCAP_DF[31:0].

20.2.5.14I/OPullControlFeature

Figure20-24.I/OBlockDiagramIncludingPullControlLogic

790

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETFunctionalDescription

Thefollowingapplyifthedeviceisunderreset:

•Pullcontrol:Theresetpullcontrolonthepinsisenabledandapulldownisconfigured.

•Inputbuffer:Theinputbufferisenabled.

•Outputbuffer:Theoutputbufferisdisabled.

Thefollowingapplyifthedeviceisoutofreset:

•Pullcontrol:ThepullcontrolisenabledbyclearingthecorrespondingbitintheN2HETPullDisable

Register(HETPULDIS).Inthiscase,ifthecorrespondingbitintheN2HETPullSelectRegister

(HETPSL)isset,thepinwillhaveapull-up;ifthebitintheN2HETPullSelectRegister(HETPSL)is

cleared,thepinwillhaveapull-down.IfthebitintheN2HETPullDisableRegister(HETPULDIS)is

set,thereisnopull-uporpull-downonthepin.

•Inputbuffer:TheinputbufferisdisabledonlyifthepindirectionissettoinputANDthepullcontrolis

disabledANDpulldownisselectedasthepullbias.Inallothercases,theinputbufferisenabled.

NOTE:Thepull-disablelogicdependsonthepindirection.Ifthepinisconfiguredasoutput,then

thepullsaredisabledautomatically.Ifthepinisconfiguredasinput,thepullsareenabledor

disableddependingonthepulldisableregisterbit.

•Outputbuffer:ApincanbedrivenasanoutputpinifthecorrespondingbitintheN2HETDirection

Register(HETDIR)issetANDtheopen-drainfeature(N2HETOpenDrainRegister(HETPDR))isnot

enabled.SeeSection20.2.5.15,Open-DrainFeatureformoredetails.

Thebehavioroftheinputbuffer,outputbuffer,andthepullcontrolissummarizedinTable20-9.Whenan

inputbufferisdisabled,itappearsasalogiclowtoon-chiplogic.

Table20-9.InputBuffer,OutputBufferandPullControlBehavior(1)

Device

Pin

under

Direction

PullDisable

PullSelect

Reset?

(DIR)

(PULDIS)

(PULSEL)

PullControl

OutputBuffer

InputBuffer

Yes

X

X

X

Device-andmodule-specific

Disabled

Disabled

No

0

0

0

Pulldown

Disabled

Enabled

No

0

0

1

Pullup

Disabled

Enabled

No

0

1

0

Disabled

Disabled

Disabled

No

0

1

1

Disabled

Disabled

Enabled

No

1

X

X

Disabled

Enabled

Enabled

(1)X=Don’tcare

20.2.5.15Open-DrainFeature

Thefollowingapplyiftheopen-drainfeatureisenabledonapin,thatis,thecorrespondingbitinthe

N2HETOpenDrainRegister(HETPDR)isset

•Outputbufferisenabledifalowsignalisbeingdriveninternallytothepin.

•Theoutputbufferisdisabledifahighsignalisbeingdriveninternallytothepin.

20.2.5.16N2HETPinDisableFeature

Thisfeatureisprovidedforthesafeoperationofsystemssuchaspowerconvertersandmotordrives.It

canbeusedtoinformthemonitoringsoftwareofmotordriveabnormalitiessuchasover-voltage,over-

current,andexcessivetemperaturerise.

791

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




N2HETpin

10

tootherN2HETpinstructures

N2HETpinenablenDISpin*

*nDISpinrealizedbyGIOA[5](N2HET1)andGIOB[2](N2HET2)AB

HETPINDISHETDIRHETDINHETDOUT



N2HETFunctionalDescriptionwww.ti.com

Figure20-25.N2HETPinDisableFeatureDiagram

Thefollowingtruth-tableshowstheconditionsfortheoutputbuffertobeenabled/disabled.

Table20-10.N2HETPinDisableFeature

HETPINDIS.x

nDISPin(Input)

HETPINENA(HETGCR.24)

HETDIR.x

OutputBuffer

0

X

X

0

Disabled

0

X

X

1

Enabled

1

0

X

0

Disabled

1

0

X

1

Disabled

1

1

X

0

Disabled

1

1

0

1

Disabled

1

1

1

1

Enabled

AninterruptcapabledeviceI/OpincansharethesamepinastheN2HETnDISsignal.NormallyGIOA[5]

servesasnDISforN2HET1andGIOB[2]asnDISforN2HET2.Checkthedevicedatasheetfortheactual

implementation.SharingapinwithaGIOpinthatisInterruptcapableallowstheN2HETnDISinputto

alsogenerateaninterrupttotheCPU.AnactivelowlevelonnDISisintendedtosignalanabnormal

situationasdescribedabove.AllN2HETpins,whichareselectedwiththeN2HETPinDisableRegister

(HETPINDIS),willbeputinthehigh-impedancestatebyhardwareimmediatelyafterthenDISsignalis

pulledlow.AtthistimeaCPUinterruptisissued,ifitisenabledintheGIOpinlogic.

ThebitHETPINENAisautomaticallyclearedinthefailureconditionandthisstateremainsaslongasthe

softwareexplicitlysetsthebitagain.Thestepstodothisare:

•Softwaredetects,byreadingtheHETDINregisteroftheGIOpin,thatthelevelonnDISisinactive

(high).

•SoftwaresetsbitHETPINENAtodeactivatethehighimpedancestateofthepins.

20.2.6SuppressionFilters

EachN2HETpinisequippedwithasuppressionfilter.Ifthepinisconfiguredasaninputitenablestofilter

outpulsesshorterthanaprogrammableduration.Eachfilterconsistsofa10-bitdowncounter,which

startscountingataprogrammablepreloadedvalueandisdecrementedusingtheVCLK2clock.

•Thecounterstartscountingwhenthefilterinputsignalhastheoppositestateofthefilteroutputsignal.

Theoutputsignalispresettothesameinputsignalstateafterreset,inordertoensureproper

operationafterdevicereset.

•Oncethecounterreacheszerowithoutdetectinganoppositepinstateonthefilteroutputsignal,the

outputsignalissettotheoppositestate.

•Whenthecounterdetectsanoppositepinactiononthefilterinputsignalbeforereachingzero,the

counterisloadedwithit'spreloadvalueandtheoppositepinactiononthefilteroutputsignaldoesnot

792

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




FilterinputFilteroutputCounter

0

FilterinputFilteroutputCounterpreloadvalue

0



www.ti.comN2HETFunctionalDescription

takeplace.Thecounterresumesatthepreloadvalueuntilitdetectsanoppositepinactiononthe

inputsignalagain.

•Thereforethefilteroutputsignalisdelayedcomparedtothefilterinputsignal.Theamountofdelay

dependsonthecounterclockfrequency(VCLK2)andtheprogrammedpreloadvalue.

•Theaccuracyoftheoutputsignalis+/-thecounterclockfrequency.

Figure20-26.SuppressionFilterCounterOperation

Thefollowingtablegivesexamplesfora100MHzVCLK2frequency.

Table20-11.PulseLengthExamplesforSuppressionFilter

Divider

Possiblevaluesforthesuppressedpulselength/frequencyresultingfromthe

CCDIV

VCLK2

programmable10bitpreloadvalue(0,1,..,1023)

1

100.0MHz

10ns,20ns,…,10.22µs,10.23µs

50MHz,25MHz,…,48.924kHz,48.876kHz

25MHz,12.5MHz,…,24.462kHz,24.414

2

50.0MHz

20ns,40ns,…,20.44µs,20.48µs

kHz

16.7MHz,8.3MHz,…,16.308kHz,16.292

3

33.3MHz

30ns,60ns,…,30.66µs,30.69µs

kHz

20.2.7InterruptsandExceptions

N2HETinterruptscanbegeneratedbyanyinstructionthathasaninterruptenablebitinitsinstruction

format.Whentheinterruptconditioninaninstructionistrueandtheinterruptenablebitofthatinstruction

issetaninterruptflagisthensetintheN2HETInterruptFlagRegister(HETFLG).Theaddresscodefor

thisflagisdeterminedbythefiveLSBsofthecurrenttimerprogramaddress.TheflagintheN2HET

InterruptFlagRegister(HETFLG)issetevenifthecorrespondingbitintheN2HETInterruptEnableSet

Register(HETINTENAS)iszero.TogenerateaninterruptthecorrespondingbitintheN2HETInterrupt

EnableSetRegister(HETINTENAS)mustbeone.IntheN2HETinterruptserviceroutine,themainCPU

mustfirstdeterminewhichsourceinsidetheN2HETcreatedtheinterruptrequest.Thisoperationis

accelleratedbytheN2HETOffsetIndexPriorityLevel1Register(HETOFF1)orN2HETOffsetIndex

PriorityLevel2Register(HETOFF2)whichautomaticallyprovidethenumberofthehighestprioritysource

withineachprioritylevel.ReadingtheoffsetregisterwillautomaticallyclearthecorrespondingN2HET

interruptflagwhichcreatedtherequest.However,iftheoffsetregistersarenotusedbytheN2HET

interruptserviceroutine,theflagshouldbeclearedexplicitlybytheCPUoncetheinterrupthasbeen

serviced.

Table20-12.InterruptSourcesandCorrespondingOffsetValuesinRegistersHETOFFx

SourceNo.

OffsetValue

nointerrupt

0

Instruction0,32,64...

1

Instruction1,33,65...

2

:

:

Instruction31,63,95...

32

ProgramOverflow

33

APCNTunderflow:

34

APCNToverflow

35

793

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




5LSBaddresscode000005LSBaddresscode11111InterruptenableInterruptconditionInterruptconditionInterruptenableInterruptFlag0InterruptFlag31



N2HETFunctionalDescriptionwww.ti.com

TheinstructionscapableofgeneratinginterruptsarelistedinTable20-51.

Figure20-27.InterruptFunctionalityonInstructionLevel

Eachinterruptsourceisassociatedwithaprioritylevel(level1orlevel2).Whenmultipleinterruptswith

thesamepriorityleveloccurduringthesameloopresolutionthelowestflagbitisservicedfirst.

InadditiontotheinterruptsgeneratedbytheinstructionstheN2HETcangeneratethreeadditional

exceptions:

•Programoverflow

•APCNTunderflow(seeSection20.3.1.2)

•APCNToverflow(seeSection20.3.1.3)

20.2.8HardwarePriorityScheme:

Iftwoormoresoftwareinterruptsarependingonthesameprioritylevel,theoffsetvaluewillshowtheone

withthehighestpriority.Theinterruptwiththehighestpriorityistheonewiththeloweroffsetvalue.This

schemeishard-wiredintheoffsetencoder.SeeFigure20-28.

794

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Offsetindexencoderforlevel2priority

HETinterruptpriority2offsetvectorPriority1globalinterruptrequestPriority2globalinterruptrequestOffsetindexencoderforlevel1priorityHETinterruptpriority1offsetvector

ToVectoredInterruptManager

PLbit0SW Intflag0PLbit1SW Intflag1PLbit23SW Intflag23PLbit24SW Intflag24PLbit31SW Intflag31PLbit34ExcIntEn2ExcIntflag2



www.ti.comN2HETFunctionalDescription

Figure20-28.InterruptFlag/PriorityLevelArchitecture

795

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HTUDCP[0]DCP[1]DCP[2]DCP[3]DCP[4]DCP[5]DCP[6]DCP[7]

DMADMAREQ[20]DMAREQ[21]DMAREQ[24]DMAREQ[25]

N2HETDMAREQ[0]HTUREQ[0]DMAREQ[1]HTUREQ[1]DMAREQ[2]HTUREQ[2]DMAREQ[3]HTUREQ[3]DMAREQ[4]HTUREQ[4]DMAREQ[5]HTUREQ[5]DMAREQ[6]HTUREQ[6]DMAREQ[7]HTUREQ[7]



N2HETFunctionalDescriptionwww.ti.com

20.2.9N2HETRequeststoDMAandHTU

AsdescribedinSection20.5.3themajorityoftheN2HETinstructionsareabletogenerateatransfer

requesttotheHighEndTimerTransferUnit(HTU)and/ortotheDMAmodulewhenaninstruction-specific

conditionistrue.OneN2HETinstructioncanselectoneof8requestlinesbyprogrammingthe“reqnum”

parameter(seeSection20.5.3).The“request”fieldinaninstructionisusedtoenable,disable,orto

generateaquietrequest(seeSection20.5.2)ontheselectedrequestline.Quietrequestscanbeusedby

theHTU,butnotbytheDMA.ForquietrequestpleaserefertotheHTUusersguide.

TheconfigurationoftheN2HETRequestDestinationSelectRegister(HETREQDS)bitsdeterminesifa

requestlinetriggersanHTU-DCP,aDMAchannelorboth.Thismeanstheregisterbitswilldetermine

whetheranN2HETinstructiontriggersDMAREQ[x],HTUREQ[x]orbothsignals(showninFigure20-29).

Therequestlinenumberxcorrespondstothe“reqnum”parameterusedintheinstruction.

Figure20-29.RequestLineAssignmentExample

796

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




P(n)P(n-1)P(n-1)

KKcountsHET[2]ext. ref.signalAPCNTperiodcounterSCNTstepcounterACNTanglegenerator

P(n-1)

K



www.ti.comAngleFunctions

20.3AngleFunctions

Enginemanagementsystemsrequireanangle-referencedtimebasetosynchronizesignalstotheengine

toothedwheel.TheN2HEThasamethodtoprovidesuchatimebaseforlow-endenginesystems.The

referenceiscreatedbytheN2HETusingthreededicatedinstructionswithfractionalanglestepsequalto

/8,/16,/32,/64.

20.3.1SoftwareAngleGenerator

TheN2HETprovidesthreespecializedcountinstructionstogenerateananglereferencedtimebase

synchronizedtoanexternalreferencesignal(thetoothedwheelsignal)thatdefinesangularreference

points.

Thetimebaseisusedtogeneratefractionalanglestepsbetweenthereferencepoints.ThestepwidthK

(=8,16,32,or64)programmedbytheuserdefinestheangleaccuracyofthetimebase.Thesefractional

stepsarethenaccumulatedinananglecountertoformtheabsoluteanglevalue.

Thefirstcounter,APCNT,incrementedoneachloopresolutionclockmeasurestheperiodsP(n)ofthe

externalsignal.ThesecondcounterSCNTcountsbystepKuptothepreviousperiodvalueP(n-1),

measuredbyAPCNT,andthenrecycles.TheresultingperiodofSCNTisthefractionP(n-1)/K.Thethird

counterACNTaccumulatesthefractionsgeneratedbySCNT.

Figure20-30illustratesthebasicoperationofAPCNT,SCNT,andACNT.

AN2HETtimerprogramcanonlyhaveoneanglegenerator.

Figure20-30.OperationofN2HETCountInstructions

Duetostepping,thefinalcountofSCNTdoesnotusuallyexactlymatchthetargetvalueP(n-1).

Figure20-31illustrateshowSCNTcompensatesforthisfeaturebystartingeachcyclewiththeremainder

(finalcount-target)ofthepreviouscycle.

797

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




P(n)P(n+1)HET[2]ext.ref.signalAPCNTperiodcounterSCNTstepcounterACNTanglegenerator

DecelerationAcceleration

ACFAcceleration

K-101201201flag

DCFDecelerationflagK-1

N1=N0+nK-P(n-1)N1+KN1+2KFinalCount=N1+mKFinalCount=N0+nK

EEN2=N1+mK-P(n-1)

Target=P(n-1)SCNTstepcounterN0N0+KN0+2KN0+3K



AngleFunctionswww.ti.com

Figure20-31.SCNTCountOperation

ACNTdetectsperiodvariationsoftheexternalsignalmeasuredbyAPCNTandcompensatesrelated

countingerrors.Aperiodincreaseisflaggedinthedecelerationflag.Aperioddecreaseisflaggedinthe

accelerationflag.Ifnovariationisflagged,ACNTincrementsthecountervalueeachtimeSCNTreaches

itstarget.Ifaccelerationisdetected,ACNTincrementsthecountervalueoneachtimerresolution(fast

mode).Ifdecelerationisdetected,ACNTisstopped.Figure20-32illustrateshowthecompensationsfor

accelerationanddecelerationoperate.

Figure20-32.ACNTPeriodVariationCompensations

20.3.1.1Singularities

Singularities(gaps,inthiscase,frommissingteethinatoothedwheel)intheexternalreferencesignal

canbemasked.Thestartandendofsingularitiesaredefinedbygapstartandgapendvaluesspecifiedin

SCNTandACNT.WhenACNTreachesgapstartorgapend,itsets/resetsthegapflag.

Whilethegapflagisset,newperiodsoftheexternalreferencesignalareignoredforanglecomputation.

SCNTusesthelastperiodmeasuredbyAPCNTjustbeforegapstart.

Figure20-33andFigure20-34illustratethebehavioroftheanglegeneratorduringagapaftera

decelerationoraccelerationoftheN2HET.

798

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HET[2]ext.ref.signalAPCNTperiodcounterACFAccel.flagACNTanglegenerator

Singularity

GPFGapflag

GapEndGapStart

HET[2]ext.ref.signalAPCNTperiodcounterDCFDecelflagACNTanglegenerator

Singularity

GPFGapflag

GapEndGapStart



www.ti.comAngleFunctions

Figure20-33.N2HETTimingsAssociatedwiththeGapFlag(ACNTDeceleration)7

Figure20-34.N2HETTimingsAssociatedwiththeGapFlag(ACNTAcceleration)

799

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






AngleFunctionswww.ti.com

20.3.1.2APCNTUnderflow

ThefastestvalidexternalsignalAPCNTcanacceptmustsatisfythefollowingcondition:

StepWidthK<PeriodMin.Resolution(LRP)

Thisconditionfixesthemaximumpossiblestepwidthoncetheminimumperiodandtheresolutionofan

applicationarespecified.

Ifaperiodvalueaccidentallyfallsbelowtheminimumallowed,APCNTstopsthecaptureoftheseperiods

andsetstheAPCNTunderflowinterruptflaglocatedintheexceptionsinterruptcontrolregister.Insucha

situation,SCNTandACNTcontinuetobeexecutedusingthelastvalidperiodcapturedbyAPCNT.

20.3.1.3APCNTOverflow

TheslowestvalidexternalsignalAPCNTcanmeasuremustsatisfythefollowingcondition:

PeriodMaxResolution<33554431

Whenthislimitisreached(APCNTCountequalsall1’s),APCNTstaysatamaximumcount(stops

counting).APCNTremainsinthispositionuntilthenextspecifiedcaptureedgeisdetectedontheselected

pinandsetstheAPCNToverflowinterruptflaglocatedintheexceptionsinterruptcontrolregister.Inthis

situation,SCNTandACNTcontinuetobeexecutedusingthemaximumAPCNTperiodcount.

800

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4N2HETControlRegisters

Table20-13summarizesalltheN2HETregisters.Thebaseaddressforthecontrolregistersis

FFF7B800hforN2HET1andFFF7B900hforN2HET2.

Table20-13.N2HETRegisters

Offset

Acronym

RegisterDescription

Section

00

HETGCR

GlobalConfigurationRegister

Section20.4.1

04h

HETPFR

PrescaleFactorRegister

Section20.4.2

08h

HETADDR

NHETCurrentAddressRegister

Section20.4.3

0Ch

HETOFF1

OffsetIndexPriorityLevel1Register

Section20.4.4

10h

HETOFF2

OffsetIndexPriorityLevel2Register

Section20.4.5

14h

HETINTENAS

InterruptEnableSetRegister

Section20.4.6

18h

HETINTENAC

InterruptEnableClearRegister

Section20.4.7

1Ch

HETEXC1

ExceptionControlRegister1

Section20.4.8

20h

HETEXC2

ExceptionControlRegister2

Section20.4.9

24h

HETPRY

InterruptPriorityRegister

Section20.4.10

28h

HETFLG

InterruptFlagRegister

Section20.4.11

2Ch

HETAND

ANDShareControlRegister

Section20.4.12

34h

HETHRSH

HRShareControlRegister

Section20.4.13

38h

HETXOR

HRXOR-ShareControlRegister

Section20.4.14

3Ch

HETREQENS

RequestEnableSetRegister

Section20.4.15

40h

HETREQENC

RequestEnableClearRegister

Section20.4.16

44h

HETREQDS

RequestDestinationSelectRegister

Section20.4.17

4Ch

HETDIR

NHETDirectionRegister

Section20.4.18

50h

HETDIN

NHETDataInputRegister

Section20.4.19

54h

HETDOUT

NHETDataOutputRegister

Section20.4.20

58h

HETDSET

NHETDataSetRegister

Section20.4.21

5Ch

HETDCLR

NHETDataClearRegister

Section20.4.22

60h

HETPDR

NHETOpenDrainRegister

Section20.4.23

64h

HETPULDIS

NHETPullDisableRegister

Section20.4.24

68h

HETPSL

NHETPullSelectRegister

Section20.4.25

74h

HETPCR

ParityControlRegister

Section20.4.26

78h

HETPAR

ParityAddressRegister

Section20.4.27

7Ch

HETPPR

ParityPinRegister

Section20.4.28

80h

HETSFPRLD

SuppressionFilterPreloadRegister

Section20.4.29

84h

HETSFENA

SuppressionFilterEnableRegister

Section20.4.30

8Ch

HETLBPSEL

LoopBackPairSelectRegister

Section20.4.31

90h

HETLBPDIR

LoopBackPairDirectionRegister

Section20.4.32

94h

HETPINDIS

NHETPinDisableRegister

Section20.4.33

801

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.1GlobalConfigurationRegister(HETGCR)

N2HET1:offset=FFF7B800h;N2HET2:offset=FFF7B900h

Figure20-35.GlobalConfigurationRegister(HETGCR)

31

25

24

23

22

21

20

19

18

17

16

Reserved

HETPINENA

Rsvd.

MP

Reserved

PPF

IS

CMS

R-0

R/W-1

R-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

15

1

0

Reserved

TO

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-14.GlobalConfigurationRegister(HETGCR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

HETPINENA

EnablestheoutputbuffersofthepinstructuresdependingonthevalueofnDISandDIR.x

whenPINDIS.xisset.

Note:ThisbitwillautomaticallygetclearedwhennDISpin(inputport)valueis"0".

0

Noaffectonthepinoutputbufferstructure.

1

EnablesthepinoutputbufferstructurewhenDIR=output,PINDIS.xissetandnDIS=1.

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-21

MP

MasterPriority

TheNHETcanprioritizemasteraccessestoN2HETRAMbetweentheHETTransferUnitand

anotherarbiter,whichoutputstheaccessofoneoftheremainingmasters.TheMPbitsallow

thefollowingselections:

0

TheHTUhaslowerprioritytoaccesstheN2HETRAMthanthearbiteroutput.

1h

TheHTUhashigherprioritytoaccesstheN2HETRAMthanthearbiteroutput.

2h

TheHTUandthearbiteroutputusearoundrobinschemetoaccesstheN2HETRAM.

3h

Reserved

20-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

PPF

ProtectProgramFields

ThePPFbittogetherwiththeTurnOn/Offbit(TO)allowstoprotecttheprogramfieldsofall

instructionsinN2HETRAM.

0(TO=0)

Allmasterscanreadandwritetheprogramfields.

0(TO=1)

Allmasterscanreadandwritetheprogramfields.

1(TO=0)

Allmasterscanreadandwritetheprogramfields.

1(TO=1)

Theprogramfieldsarereadablebutnotwritableforallmasters,whichcouldaccesstheN2HET

RAM.PossiblemastersaretheCPU,HTU,DMAandasecondaryCPU(ifavailable).Writes

initiatedbythesemastersarediscarded.

17

IS

IgnoreSuspend

WhenIgnoreSuspend=0,thetimeroperationisstoppedonsuspend(thecurrenttimer

instructioniscompleted).TimerRAMcanbefreelyaccessedduringsuspend.Whensetto1,

thesuspendisignoredandtheN2HETcontinuesoperating.

0

N2HETstopswheninsuspendmode.

1

N2HETignoressuspendmodeandcontinuesoperation.

16

CMS

Clk_master/slave

Thisbitisusedtosynchronizemulti-N2HETs.Ifset(N2HETismaster),theN2HEToutputsa

signaltosynchronizetheprescalersoftheslaveN2HET.Bydefault,thisbitisreset,which

meansaslaveconfiguration.

Note:Thisbitmustbesettoone(1)forsingle-N2HETconfiguration.

0

N2HETisconfiguredasaslave.

1

N2HETisconfiguredasamaster.

15-1

Reserved

0

Readreturns0.Writeshavenoeffect.

802

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

Table20-14.GlobalConfigurationRegister(HETGCR)FieldDescriptions(continued)

Bit

Field

Value

Description

0

TO

TurnOn/Off

WhenTO=0,thetimerprogramstopsexecuting.Turn-offisautomaticallydelayeduntilthe

currenttimerprogramloopiscompleted.Turn-offdoesnotaffectthecontentofthetimerRAM,

ALUregisters,orcontrolregisters.Turn-offresetsallflags.

TOdoesnotaffectthestateofthepins.Youmustset/resetthetimerpinswhentheyareturned

off,orre-initializethetimerRAMandcontrolregistersbeforeareset.Afteradevicereset,the

timeristurnedoffbydefault.

WhenTO=1,timerprogramexecutionstartssynchronouslytotheLoopclock.Incaseof

multipleN2HETsconfiguration,theslaveN2HETsarewaitingfortheloopclocktocomefrom

themasterbeforestartingexecution.Then,thetimeraddresspointsautomaticallyaddress00h

(correspondingtoprogramstart).

0

N2HETisOFF.

1

N2HETisON.

20.4.2PrescaleFactorRegister(HETPFR)

N2HET1:offset=FFF7B804h;N2HET2:offset=FFF7B904h

Figure20-36.PrescaleFactorRegister(HETPFR)

31

17

16

Reserved

R-0

15

11

10

8

7

6

5

0

Reserved

LRPFC

Reserved

HRPFC

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table20-15.PrescaleFactorRegister(HETPFR)FieldDescriptions

Bit

Field

Value

Description

31-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-8

LRPFC

LoopResolutionPre-scaleFactorCode

LRPFCdeterminestheloopresolutionprescaledividerate(lr).SeeTable20-5.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

HRPFC

HighResolutionPre-scaleFactorCode

HRPFCdeterminesthehighresolutionprescaledividerate(hr).SeeTable20-5.

803

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.3N2HETCurrentAddressRegister(HETADDR)

N2HET1:offset=FFF7B808h;N2HET2:offset=FFF7B908h

Figure20-37.N2HETCurrentAddress(HETADDR)

31

16

Reserved

R-0

15

9

8

0

Reserved

HETADDR

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-16.N2HETCurrentAddress(HETADDR)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8-0

HETADDR

N2HETCurrentAddress

Read:ReturnsthecurrentN2HETprogramaddress.

Write:Writeshavenoeffect.

20.4.4OffsetIndexPriorityLevel1Register(HETOFF1)

N2HET1:offset=FFF7B80Ch;N2HET2:offset=FFF7B90Ch

Figure20-38.OffsetIndexPriorityLevel1Register(HETOFF1)

31

16

Reserved

R-0

15

6

5

0

Reserved

OFFSET1

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-17.OffsetIndexPriorityLevel1Register(HETOFF1)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

OFFSET1

HETOFF1[5:0]indexesthecurrentlypendinghigh-priorityinterrupt.Offsetvaluesandsourcesarelisted

belowandtheinterruptencodingformatispresentedinTable20-18.

Read:ReadofthesebitsdeterminesthependingN2HETinterrupt.

Write:Writeshavenoeffect.

Note:Inanyreadoperationmode,thecorrespondingflag(intheHETFLG)isalsocleared.InEmulation

modethecorrespondingflagisnotcleared.

804

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

Table20-18.InterruptOffsetEncodingFormat

SourceNo.

OffsetValue

Nointerrupt

0

Instruction0,32,64...

1

Instruction1,33,65...

2

:

:

Instruction31,63,95...

32

ProgramOverflow

33

APCNTUnderflow

34

APCNTOverflow

35

20.4.5OffsetIndexPriorityLevel2Register(HETOFF2)

N2HET1:offset=FFF7B810h;N2HET2:offset=FFF7B910h

Figure20-39.OffsetIndexPriorityLevel2Register(HETOFF2)

31

16

Reserved

R-0

15

6

5

0

Reserved

OFFSET2

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-19.OffsetIndexPriorityLevel2Register(HETOFF2)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

OFFSET2

HETOFF2[5:0]indexesthecurrentlypendinglow-priorityinterrupt.Offsetvaluesandsources

arelistedaboveandtheinterruptencodingformatispresentedinTable20-18.

Read:ReadofthesebitsdeterminesthependingN2HETinterrupt.

Write:Writeshavenoeffect.

Note:Inanyreadoperationmode,thecorrespondingflag(intheHETFLG)isalsocleared.In

Emulationmodethecorrespondingflagisnotcleared.

805

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.6InterruptEnableSetRegister(HETINTENAS)

N2HET1:offset=FFF7B814h;N2HET2:offset=FFF7B914h

Figure20-40.InterruptEnableSetRegister(HETINTENAS)

31

16

HETINTENAS

R/W-0

15

0

HETINTENAS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-20.InterruptEnableSetRegister(HETINTENAS)FieldDescriptions

Bit

Field

Value

Description

31-0

HETINTENAS

InterruptEnableSetbits.HETINTENASisreadableandwritableinanyoperationmode.

WritingaonetobitxenablestheinterruptsoftheN2HETinstructionsatN2HETaddresses

x+0,x+32,x+64...GeneratinganinterruptrequirestosetbitxinHETINTENASandtoenable

theinterruptbitinoneoftheinstructionsataddressesx+0,x+32,x+64...Toavoidambiguity

onlyoneoftheinstructionsx+0,x+32,x+64...shouldhavetheinterruptenablebit(insidethe

instruction)set.WritingazerotoHETINTENAShasnoeffect.

WhenreadingfromHETINTENASbitxgivestheinformation,ifN2HETinstructionsx+0,x+32,

x+64...havetheinterruptenabledordisabled.

0

Read:Interruptisdisabled.

Write:Writeshavenoeffect.

1

Read:Interruptisenabled.

Write:Interruptwillbeenabled.

20.4.7InterruptEnableClearRegister(HETINTENAC)

N2HET1:offset=FFF7B818h;N2HET2:offset=FFF7B918h

Figure20-41.InterruptEnableClear(HETINTENAC)

31

16

HETINTENAC

R/W-0

15

0

HETINTENAC

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-21.NHETInterruptEnableClear(HETINTENAC)FieldDescriptions

Bit

Field

Value

Description

31-0

HETINTENAC

InterruptEnableClearbits.HETINTENACisreadableandwritableinanyoperationmode.

WritingaonetobitxdisablestheinterruptsoftheN2HETinstructionsatN2HETaddresses

x+0,x+32,x+64...(SeealsodescriptioninTable20-20).WritingazerotoHETINTENAChasno

effect.

WhenreadingfromHETINTENACbitxgivestheinformation,ifN2HETinstructionsx+0,x+32,

x+64...havetheinterruptenabledordisabled.

0

Read:Interruptisdisabled.

Write:Writeshavenoeffect.

1

Read:Interruptisenabled.

Write:Interruptwillbeenabled.

806

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.8ExceptionControlRegister1(HETEXC1)

N2HET1:offset=FFF7B81Ch;N2HET2:offset=FFF7B91Ch

Figure20-42.ExceptionControlRegister(HETEXC1)

31

25

24

Reserved

APCNTOVRFLENA

R-0

R/W-0

23

17

16

Reserved

APCNTUNRFLENA

R-0

R/W-0

15

9

8

Reserved

PRGMOVRFLENA

R-0

R/W-0

7

3

2

1

0

Reserved

APCNTOVRFLPRY

APCNTUNRFLPRY

PRGMOVRFLPRY

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-22.ExceptionControlRegister1(HETEXC1)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readreturns0.Writeshavenoeffect.

24

APCNTOVRFLENA

APCNTOverflowEnable

0

APCNToverflowexceptionisnotenabled.

1

EnablestheAPCNToverflowexception.

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

APCNTUNRFLENA

APCNTUnderflowEnable

0

APCNTunderflowexceptionisnotenabled.

1

EnablestheAPCNTunderflowexception.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

PRGMOVRFLENA

ProgramOverflowEnable

0

Theprogramoverflowexceptionisnotenabled.

1

Enablestheprogramoverflowexception.

7-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

APCNTOVRFLPRY

APCNTOverflowExceptionInterruptPriority

0

Exceptionprioritylevel2

1

Exceptionprioritylevel1

1

APCNTUNRFLPRY

APCNTUnderflowExceptionInterruptPriority

0

Exceptionprioritylevel2

1

Exceptionprioritylevel1

0

PRGMOVRFLPRY

ProgramOverflowExceptionInterruptPriority

0

Exceptionprioritylevel2

1

Exceptionprioritylevel1

807

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.9ExceptionControlRegister2(HETEXC2)

N2HET1:offset=FFF7B820h;N2HET2:offset=FFF7B920h

Figure20-43.ExceptionControlRegister2(HETEXC2)

31

16

Reserved

R-0

15

9

8

Reserved

DEBUGSTATUSFLAG

R-0

R/WC-0

7

3

2

1

0

Reserved

APCNTOVRFLFLAG

APCNTUNRFLFLAG

PRGMOVRFLFLAG

R-0

R/WC-0

R/WC-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table20-23.ExceptionControlRegister2(HETEXC2)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DEBUGSTATUSFLAG

DebugStatusFlag.

ThisflagissetwhenN2HEThasstoppedatabreakpoint.Alsogeneratesadebug

requesttohalttheARMCPU.

0

Read:N2HETiseitherrunning,orstopped,flagclearedbutnotyetrestarted.

Write:Noeffect.

1

Read:N2HETisstoppedatabreakpoint.

Write:Clearsthebit.TorestartN2HETclearthisbitandthenrestarttheARMCPU.The

N2HETandARMCPUwillstartsynchronously.

7-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

APCNTOVRFLFLAG

APCNTOverflowFlag

0

Read:Exceptionhasnotoccurredsincetheflagwascleared.

Write:Noeffect.

1

Read:Exceptionhasoccurredsincetheflagwascleared.

Write:Clearsthebit.

1

APCNTUNDFLFLAG

APCNTUnderflowFlag

0

Read:Exceptionhasnotoccurredsincetheflagwascleared.

Write:Noeffect.

1

Read:Exceptionhasoccurredsincetheflagwascleared.

Write:Clearsthebit.

0

PRGMOVERFLFLAG

ProgramOverflowFlag

0

Read:Exceptionhasnotoccurredsincetheflagwascleared.

Write:Noeffect.

1

Read:Exceptionhasoccurredsincetheflagwascleared

Write:Clearsthebit.

808

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.10InterruptPriorityRegister(HETPRY)

N2HET1:offset=FFF7B824h;N2HET2:offset=FFF7B924h

Figure20-44.InterruptPriorityRegister(HETPRY)

31

16

HETPRY

R/WP-0

15

0

HETPRY

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table20-24.InterruptPriorityRegister(HETPRY)FieldDescriptions

Bit

Field

Value

Description

31-0

HETPRY

HETInterruptPriorityLevelbits

Usedtoselectthepriorityofanyofthe32potentialinterruptsourcescomingfromN2HET

instructions.

0

Interruptprioritylevel2.

1

Interruptprioritylevel1.

20.4.11InterruptFlagRegister(HETFLG)

N2HET1:offset=FFF7B828h;N2HET2:offset=FFF7B928h

Figure20-45.InterruptFlagRegister(HETFLG)

31

16

HETFLAG

R/WC-0

15

0

HETFLAG

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset;X=Unknown

Table20-25.InterruptFlagRegister(HETFLG)FieldDescriptions

Bit

Field

Value

Description

31-0

HETFLAG

InterruptFlagRegisterBits

Bitxissetwhenaninterruptconditionhasoccurredononeoftheinstructionsx+0,x+32,

x+64....Theflagpositionx(intheregister)isdecodedfromthefiveLSBsoftheinstruction

addressthatgeneratedtheinterrupt.Thehardwarewillsettheflagonlyiftheinterruptenable

bit(inthecorrespondinginstruction)isset.TheflagwillbesetevenifbitxintheInterrupt

EnableSetRegister(HETINTENAS)isnotenabled.EnablingbitxinHETINTENASisrequired

ifaninterruptshouldbegenerated.

Clearingtheflagcanbedonebywritingaonetotheflag.Alternativelyreadingthe

correspondingOffsetIndexPriorityLevel1Register(HETOFF1)orOffsetIndexPriorityLevel2

Register(HETOFF2)willautomaticallycleartheflag.

0

Read:NoN2HETinstructionwithaninterrupthasbeenreachedsincetheflagwascleared.

Write:Noeffect.

1

Read:AN2HETinstructionwithaninterrupthasbeenreachedsincetheflagwascleared.

Write:Clearsthebit.

809

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.12ANDShareControlRegister(HETAND)

N2HET1:offset=FFF7B82Ch;N2HET2:offset=FFF7B92Ch

Figure20-46.ANDShareControlRegister(HETAND)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

ANDSHARE31/30

ANDSHARE29/28

ANDSHARE27/26

ANDSHARE25/24

ANDSHARE23/22

ANDSHARE21/20

ANDSHARE19/18

ANDSHARE17/16

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

ANDSHARE15/14

ANDSHARE13/12

ANDSHARE11/10

ANDSHARE9/8

ANDSHARE7/6

ANDSHARE5/4

ANDSHARE3/2

ANDSHARE1/0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-26.ANDShareControlRegister(HETAND)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

ANDSHARE

ANDShareEnable

n+1/n

EnabletheANDsharingofthesamepinfortwoHRstructures.Forexample,ifbitANDSHARE

1/0isset,thepinHET[0]willthenbecommandedbyalogicalANDofbothHRstructures0and

1.

Note:IfHRANDSHAREbitsareused,pinsnotconnectedtoHRstructures(theoddnumber

pinineachpair)canbeaccessedasgeneralinputs/outputs.

0

HROutputofHET[n+1]andHET[n]arenotANDshared

1

HROutputofHET[n+1]andHET[n]areANDsharedontopinHET[n]

810

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.13HRShareControlRegister(HETHRSH)

N2HET1:offset=FFF7B834h;N2HET2:offset=FFF7B934h

Figure20-47.HRShareControlRegister(HETHRSH)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

HRSHARE31/30

HRSHARE29/28

HRSHARE27/26

HRSHARE25/24

HRSHARE23/22

HRSHARE21/20

HRSHARE19/18

HRSHARE17/16

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

HRSHARE15/14

HRSHARE13/12

HRSHARE11/10

HRSHARE9/8

HRSHARE7/6

HRSHARE5/4

HRSHARE3/2

HRSHARE1/0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-27.HRShareControlRegister(HETHRSH)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

HRSHARE

HRShareBits

n+1/n

EnablestheshareofthesamepinfortwoHRstructures.Forexample,ifbitHRshare1/0is

set,thepinHET[0]willthenbeconnectedtobothHRinputstructures0and1.

Note:IfHRsharebitsareused,pinsnotconnectedtoHRstructures(theoddnumberpinin

eachpair)canbeaccessedasgeneralinputs/outputs.

0

HRInputofHET[n+1]andHET[n]arenotshared.

1

HRInputofHET[n+1]andHET[n]areshared;bothmeasurepinHET[n]

811

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.14XORShareControlRegister(HETXOR)

N2HET1:offset=FFF7B838h;N2HET2:offset=FFF7B938h

Figure20-48.XORShareControlRegister(HETXOR)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

XORSHARE31/30

XORSHARE29/28

XORSHARE27/26

XORSHARE25/24

XORSHARE23/22

XORSHARE21/20

XORSHARE19/18

XORSHARE17/16

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

XORSHARE15/14

XORSHARE13/12

XORSHARE11/10

XORSHARE9/8

XORSHARE7/6

XORSHARE5/4

XORSHARE3/2

XORSHARE1/0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-28.XORShareControlRegister(HETXOR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

XORSHARE

XORShareEnable

n+1/n

EnabletheXOR-shareofthesamepinfortwooutputHRstructures.Forexample,ifbitXOR

SHARE1/0isset,thepinHET[0]willthenbecommandedbyalogicalXORofbothHR

structures0and1.

Note:IfXORsharebitsareused,pinsnotconnectedtoHRstructures(theoddnumberpinin

eachpair)canbeaccessedasgeneralinputs/outputs.

0

HROutputofHET[n+1]andHET[n]arenotXORshared

1

HROutputofHET[n+1]andHET[n]areXORsharedontopinHET[n]

812

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.15RequestEnableSetRegister(HETREQENS)

N2HET1:offset=FFF7B83Ch;N2HET2:offset=FFF7B93Ch

Figure20-49.RequestEnableSetRegister(HETREQENS)

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

REQENA7

REQENA6

REQENA5

REQENA4

REQENA3

REQENA2

REQENA1

REQENA0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-29.RequestEnableSetRegister(HETREQENS)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

REQENAn

RequestEnableBits

0

Read:Returnstheinformationthatrequestlinenisdisabled.

Write:Writinga0hasnoeffect.

1

Read:Returnstheinformationthatrequestlinenisenabled.

Write:Writinga1tobitnenablestheN2HETrequestlinen.

Note:TherequestlinecantriggeraDMAcontrolpacket(DMAchannel),anHTUdoublecontrol

packet(DCP)orbothsimultaneously.TheHETREQDSregisterdeterminestowhichmodule(s)

theN2HETrequestlinenisassigned.

Note:Adisabledrequestlinedoesnotmemorizeoldrequests.Sotherearenopending

requeststoserviceafterenablingrequestlinen.

20.4.16RequestEnableClearRegister(HETREQENC)

N2HET1:offset=FFF7B840h;N2HET2:offset=FFF7B940h

Figure20-50.RequestEnableClearRegister(HETREQENC)

31

8

Reserved

R-0

7

6

5

4

3

2

1

0

REQDIS7

REQDIS6

REQDIS5

REQDIS4

REQDIS3

REQDIS2

REQDIS1

REQDIS0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-30.RequestEnableClearRegister(HETREQENC)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

REQDISn

RequestDisableBits

0

Read:Returnstheinformationthatrequestlinenisdisabled.

Write:Writinga0hasnoeffect.

1

Read:Returnstheinformationthatrequestlinenisenabled.

Write:Writinga1tobitndisablestheN2HETrequestlinen.

813

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.17RequestDestinationSelectRegister(HETREQDS)

N2HET1:offset=FFF7B844h;N2HET2:offset=FFF7B944h

Figure20-51.RequestDestinationSelectRegister(HETREQDS)[offset=FFF7B844h]

31

24

23

22

21

20

19

18

17

16

Reserved

TDBS7

TDBS6

TDBS5

TDBS4

TDBS3

TDBS2

TDBS1

TDBS0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

15

8

7

6

5

4

3

2

1

0

Reserved

TDS7

TDS6

TDS5

TDS4

TDS3

TDS2

TDS1

TDS0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-31.RequestDestinationSelectRegister(HETREQDS)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-16

TDBSn

HTU,DMAorBothSelectBits

0

N2HETrequestlinenisassignedtothemodulespecifiedbyTDSbitn.

1

N2HETrequestlinenisassignedtobothDMAandHTU.TDSbitnisignoredinthiscase.

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

TDSn

HTUorDMASelectBits

Note:ItmustbeensuredintheN2HETprogram,thatonerequestlineistriggeredbyonlyone

N2HETinstruction.

0

N2HETrequestlinenisassignedtoHTU(TDBSbitniszero).

1

N2HETrequestlinenisassignedtoDMA(TDBSbitniszero).

NOTE:Pleaserefertothedevicedatasheethoweachofthe8N2HETrequestlinesareconnected

tothesemodules.SeealsoSection20.2.9.

814

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.18NHETDirectionRegister(HETDIR)

N2HET1:offset=FFF7B84Ch;N2HET2:offset=FFF7B94Ch

Figure20-52.N2HETDirectionRegister(HETDIR)

31

16

HETDIR

R/W-0

15

0

HETDIR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-32.N2HETDirectionRegister(HETDIR)FieldDescriptions

Bit

Field

Value

Description

31-0

HETDIRn

DatadirectionofNHETpins

0

PinHET[n]isaninput(anditsoutputbufferistristated)

1

PinHET[n]isanoutput

NOTE:Table20-9showshowtheregisterbitsofDIR,PULDISandPULSELareaffectingthe

N2HETpins.

815

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.19N2HETDataInputRegister(HETDIN)

N2HET1:offset=FFF7B850h;N2HET2:offset=FFF7B950h

Figure20-53.N2HETDataInputRegister(HETDIN)

31

16

HETDIN

R-x

15

0

HETDIN

R-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;

Table20-33.N2HETDataInputRegister(HETDIN)FieldDescriptions

Bit

Field

Value

Description

31-0

HETDINn

Datainput.Thisbitdisplaysthelogicstateofthepin.

0

PinHET[n]isatlogiclow(0)

1

PinHET[n]isatlogichigh(1)

20.4.20N2HETDataOutputRegister(HETDOUT)

N2HET1:offset=FFF7B854h;N2HET2:offset=FFF7B954h

Figure20-54.N2HETDataOutputRegister(HETDOUT)

31

16

HETDOUT

R/W-0

15

0

HETDOUT

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-34.N2HETDataOutputRegister(HETDOUT)FieldDescriptions

Bit

Field

Value

Description

31-0

HETDOUTn

Dataoutwrite.Writestothisbitwillonlytakeeffectwhenthepinisconfiguredasanoutput.

Thecurrentlogicstateofthepinwillbedisplayedbythisbitevenwhenthepinstateischanged

bywritingtoHETDSETorHETDCLR.

0

PinHET[n]isatlogiclow(0).

1

PinHET[n]isatlogichigh(1)iftheHETPDR[n]bit=0ortheoutputisinhighimpedancestate

iftheHETPDR[n]bit=1

816

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.21NHETDataSetRegister(HETDSET)

N2HET1:offset=FFF7B858h;N2HET2:offset=FFF7B958h

Figure20-55.N2HETDataSetRegister(HETDSET)

31

16

HETDSET

R/WS-0

15

0

HETDSET

R/WS-0

LEGEND:R/W=Read/Write;R=Readonly;S=Set;-n=valueafterreset

Table20-35.N2HETDataSetRegister(HETDSET)FieldDescriptions

Bit

Field

Value

Description

31-0

HETDSETn

ThisregisterallowsbitsofHETDOUTtobesetwhileavoidingthepitfallsofareadmodify-write

sequenceinamultitaskingenvironment.

Bitswrittenasalogic1setthesamebitintheHETDOUTregister;whilebitswrittenaslogic0

leavethesamebitinHETDOUTunchanged.Readsfromthisaddressreturnthevalueofthe

HETDOUTregister.

0

Write:HETDOUT[n]isunchanged.

1

Write:HETDOUT[n]isset.

20.4.22N2HETDataClearRegister(HETDCLR)

N2HET1:offset=FFF7B85Ch;N2HET2:offset=FFF7B95Ch

Figure20-56.N2HETDataClearRegister(HETDCLR)

31

16

HETDCLR

R/WC-0

15

0

HETDCLR

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table20-36.N2HETDataClearRegister(HETDCLR)FieldDescriptions

Bit

Field

Value

Description

31-0

HETDCLRn

ThisregisterallowsbitsofHETDOUTtobeclearedwhileavoidingthepitfallsofaread-modify-

writesequenceinamultitaskingenvironment.

Bitswrittenasalogic1clearthesamebitintheHETDOUTregister;whilebitswrittenaslogic0

leavethesamebitinHETDOUTunchanged.Readsfromthisaddressreturnthevalueofthe

HETDOUTregister.

0

Write:HETDOUT[n]isunchanged.

1

Write:HETDOUT[n]iscleared.

817

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.23N2HETOpenDrainRegister(HETPDR)

Valuesinthisregisterenableordisabletheopendraincapabilityofthedatapins.

N2HET1:offset=FFF7B860h;N2HET2:offset=FFF7B960h

Figure20-57.N2HETOpenDrainRegister(HETPDR)

31

16

HETPDR

R/W-0

15

0

HETPDR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-37.N2HETOpenDrainRegister(HETPDR)FieldDescriptions

Bit

Field

Value

Description

31-0

HETPDRn

OpendraincontrolforHET[n]pins

0

Thepinisconfiguredinpush/pullmode.

1

Thepinisconfiguredinopendrainmode.TheHETDOUTregistercontrolsthestateofthe

outputbuffer:

HETDOUT[n]=0TheoutputbufferofpinHET[n]isdrivenlow.

HETDOUT[n]=1TheoutputbufferofpinHET[n]istristated.

20.4.24N2HETPullDisableRegister(HETPULDIS)

Valuesinthisregisterenableordisablethepull-up/-downfunctionalityofthepins.

N2HET1:offset=FFF7B864h;N2HET2:offset=FFF7B964h

Figure20-58.N2HETPullDisableRegister(HETPULDIS)

31

16

HETPULDIS

R/W-n

15

0

HETPULDIS

R/W-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;nisdevicedependent,seedevicespecificdatasheet

Table20-38.N2HETPullDisableRegister(HETPULDIS)FieldDescriptions

Bit

Field

Value

Description

31-0

HETPULDISn

PulldisableforN2HETpins

0

ThepullfunctionalityisenabledonpinHET[n].

1

ThepullfunctionalityisdisabledonpinHET[n].

NOTE:Seedevicedatasheetforwhichpinsprovideprogrammablepullups/pulldowns.

Table20-9showshowtheregisterbitsofHETDIR,HETPULDISandHETPSLareaffecting

theN2HETpins.

818

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.25N2HETPullSelectRegister(HETPSL)

Valuesinthisregisterselectthepull-uporpull-downfunctionalityofthepins.

N2HET1:offset=FFF7B868h;N2HET2:offset=FFF7B968h

Figure20-59.N2HETPullSelectRegister(HETPSL)

31

16

HETPSL

R/W-0

15

0

HETPSL

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-39.N2HETPullSelectRegister(HETPSL)FieldDescriptions

Bit

Field

Value

Description

31-0

HETPSLn

PullselectforNHETpins

0

ThepulldownfunctionalityisenabledifcorrespondingbitinHETPULDISis0.

1

ThepullupfunctionalityisenabledifcorrespondingbitinHETPULDISis0.

NOTE:Seedevicedatasheetforwhichpinsprovideprogrammablepullups/pulldowns.

Table20-9showshowtheregisterbitsofHETDIR,HETPULDISandHETPSLareaffecting

theN2HETpins.

Theinformationofthisregisterisalsousedtodefinethepinstatesafteraparityerror:

AfteraparityerrorallN2HETpins,whichare

1.DefinedasoutputpinsintheHETDIRregister

2.Notdefinedasopendrainpins(withtheHETPDRregister)

3.SelectedwiththeHETPPRregister,willremainoutputs,butautomatically

changetheirlevelsinthefollowingway:

•IftheHETPSLregisterspecifies0forthepin,itwillswitchtolowlevel.

•IftheHETPSLregisterspecifies1forthepin,itwillswitchtohighlevel.

Thisbehaviorisindependentofthevalue,whichregisterHETPULDISspecifiesforthe

correspondingpin.

819

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.26ParityControlRegister(HETPCR)

N2HET1:offset=FFF7B874h;N2HET2:offset=FFF7B974h

Figure20-60.ParityControlRegister(HETPCR)

31

16

Reserved

R-0

15

9

8

7

4

3

0

Reserved

TEST

Reserved

PARITY_ENA

R-0

R/WP-0

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table20-40.ParityControlRegister(HETPCR)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

TEST

TestBit.Whenthisbitisset,theparitybitsaremappedintotheperipheralRAMframetomake

themaccessiblebytheCPU.

0

Read:Paritybitsarenotmemorymapped.

Write:Disablemapping.

1

Read:Paritybitsarememorymapped.

Write:Enablemapping.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

PARITY_ENA

Enable/disableparitychecking.Thisbitfieldenablesordisablestheparitycheckonread

operationsandtheparitycalculationonwriteoperations.Ifparitycheckingisenabledandaparity

errorisdetectedtheN2HET_UERRsignalisactivated.

5h

Read:Paritycheckisdisabled.

Write:Disablechecking.

Others

Read:Paritycheckisenabled.

Write:Enablechecking.

NOTE:Itisrecommendedtowritean"Ah"toenableerrordetection,toguardagainstsofterrors

flippingPARITY_ENAtoadisablestate.

820

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.27ParityAddressRegister(HETPAR)

N2HET1:offset=FFF7B878h;N2HET2:offset=FFF7B978h

Figure20-61.ParityAddressRegister(HETPAR)

31

16

Reserved

R-0

15

13

12

2

1

0

Reserved

PAOFF

Reserved

R-0

R-X

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;X=Valueunchangedafterreset

Table20-41.ParityAddressRegister(HETPAR)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-2

PAOFF

ParityErrorAddressOffset.Thisregisterholdstheoffsetaddressofthefirstparityerror,whichis

detectedinN2HETRAM.Thiserroraddressisfrozenfrombeingupdateduntilitisreadbythe

CPU.Duringemulationmode,thisaddressisfrozenevenwhenread.

IncaseofaN2HETRAMparityerror,PAOFFwillcontaintheoffsetaddressoftheerroneous32-

bitN2HETRAMfieldcountedfromthebeginningoftheN2HETRAM.

Examples:The32-bitprogramfieldofinstruction0willreturn0,the32-bitcontrolfieldof

instruction0willreturn1,...,the32-bitcontrolfieldofinstruction1willreturn5,andsoon.

Read:Returnstheoffsetaddressoftheerroneous32-bitwordinbytesfromthebeginningofthe

N2HETRAM.

Write:Writeshavenoeffect.

1-0

Reserved

0

Readreturns0.Writeshavenoeffect.

NOTE:TheParityErrorAddressRegisterwillnotbereset,neitherbyPORRSTnorbyanyother

resetsource.

821

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.28ParityPinRegister(HETPPR)

N2HET1:offset=FFF7B87Ch;N2HET2:offset=FFF7B97Ch

Figure20-62.ParityPinRegister(HETPPR)

31

16

HETPPR

R/W-0

15

0

HETPPR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-42.ParityPinRegister(HETPPR)FieldDescriptions

Bit

Field

Value

Description

31-0

HETPPRn

NHETParityPinSelectBits-AllowsHET[n]pinstobeconfiguredtodrivetoaknownstatewhen

anN2HETparityerrorisdetected.

0

PinHET[n]isnotaffectedbythedetectionofanN2HETparityerror.

1

PinHET[n]isdriventoaknownstatewhenanN2HETparityerrorisdetected.Theknownstateis

afunctionofbitsHETDIR[n],HETPSL[n],HETPDR[n]asdescribedinTable20-43(thisstateis

alsoindependentofHETPULDIS[n]).

Table20-43.KnownStateonParityError

HETDIR[n]

HETPDR[n]

HETPSL[n]

KnownStateonParityError

0

x

x

HighImpedance

1

0

0

DriveLogic0

1

0

1

DriveLogic1

1

1

x

HighImpedance

822

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.29SuppressionFilterPreloadRegister(HETSFPRLD)

N2HET1:offset=FFF7B880h;N2HET2:offset=FFF7B980h

Figure20-63.SuppressionFilterPreloadRegister(HETSFPRLD)

31

18

17

16

Reserved

CCDIV

R-0

R/W-0

15

10

9

0

Reserved

CPRLD

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-44.SuppressionFilterPreloadRegister(HETSFPRLD)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17-16

CCDIV

CounterClockDivider

CCDIVdeterminestheratiobetweenthecounterclockandVCLK2.

0

CCLK=VCLK2

1h

CCLK=VCLK2/2

2h

CCLK=VCLK2/3

3h

CCLK=VCLK2/4

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

CPRLD

CounterPreloadValue

CPRLDcontainsthepreloadvalueforthecounterclock.

20.4.30SuppressionFilterEnableRegister(HETSFENA)

N2HET1:offset=FFF7B884h;N2HET2:offset=FFF7B984h

Figure20-64.SuppressionFilterEnableRegister(HETSFENA)

31

16

HETSFENA

R/W-0

15

0

HETSFENA

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-45.SuppressionFilterEnableRegister(HETSFENA)FieldDescriptions

Bit

Field

Value

Description

31-0

HETSFENAn

SuppressionFilterEnableBits

Note:IfthepinisconfiguredasanoutputbytheN2HETDirectionRegister(HETDIR),thefilter

isautomaticallydisabledindependentonthebitinHETSFENA.

0

TheinputnoisesuppressionfilterforpinHET[n]isdisabled.

1

TheinputnoisesuppressionfilterforpinHET[n]isenabled.

823

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

20.4.31LoopBackPairSelectRegister(HETLBPSEL)

RefertoSection20.2.5.7foradescriptionofloopbacktestfunctions.

N2HET1:offset=FFF7B88Ch;N2HET2:offset=FFF7B98Ch

Figure20-65.LoopBackPairSelectRegister(HETLBPSEL)

31

30

29

28

27

26

25

24

LBPTYPE31/30

LBPTYPE29/28

LBPTYPE27/26

LBPTYPE25/24

LBPTYPE23/22

LBPTYPE21/20

LBPTYPE19/18

LBPTYPE17/16

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

23

22

21

20

19

18

17

16

LBPTYPE15/14

LBPTYPE13/12

LBPTYPE11/10

LBPTYPE9/8

LBPTYPE7/6

LBPTYPE5/4

LBPTYPE3/2

LBPTYPE1/0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

LBPSEL31/30

LBPSEL29/28

LBPSEL27/26

LBPSEL25/24

LBPSEL23/22

LBPSEL21/20

LBPSEL19/18

LBPSEL17/16

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

LBPSEL15/14

LBPSEL13/12

LBPSEL11/10

LBPSEL9/8

LBPSEL7/6

LBPSEL5/4

LBPSEL3/2

LBPSEL1/0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table20-46.LoopBackPairSelectRegister(HETLBPSEL)FieldDescriptions

Bit

Field

Value

Description

31-16

LBPTYPE

LoopBackPairTypeSelectBits

n+1/n

ThesebitsarevalidonlywhenLoopbackmodeisenabled(HETLBPDIR[19:16]="1010").

0

DigitalloopbackisselectedforHRstructuresonpinsHET[n+1]andHET[n].

1

AnalogloopbackisselectedforHRstructuresonpinsHET[n+1]andHET[n].

15-0

LBPSEL

LoopBackPairSelectBits

n+1/n

ThesebitsarevalidonlywhenLoopbackmodeisenabled(HETLBPDIR[19:16]="Ah").

Ifbitxisset,theHRstructuresonpinsHET[n+1]andHET[n]areconnectedinaloopbackmode.

ThedirectionisgivenbyLBPDIRn+1/nandtypeisselectedbyLBPTYPEn+1/n.

ThepinwhichisnotdrivenbytheN2HETpinactionscanstillbeusedasnormalGIOpin.

824

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comN2HETControlRegisters

20.4.32LoopBackPairDirectionRegister(HETLBPDIR)

RefertoSection20.2.5.7foradescriptionofloopbacktestfunctions.

N2HET1:offset=FFF7B890h;N2HET2:offset=FFF7B990h

Figure20-66.LoopBackPairDirectionRegister(HETLBPDIR)

31

20

19

16

Reserved

LBPTSTENA

R-0

R/WP-5h

15

14

13

12

11

10

9

8

LBPDIR31/30

LBPDIR29/28

LBPDIR27/26

LBPDIR25/24

LBPDIR23/22

LBPDIR21/20

LBPDIR19/18

LBPDIR17/16

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

LBPDIR15/14

LBPDIR13/12

LBPDIR11/10

LBPDIR9/8

LBPDIR7/6

LBPDIR5/4

LBPDIR3/2

LBPDIR1/0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table20-47.LoopBackPairDirectionRegister(HETLBPDIR)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

LBPTSTENA

LoopbackTestEnableKey

5h

LoopbackTestisdisabled.

Ah

LoopbackTestisenabled.

Others

LoopbackTestisdisabled

15-0

LBPDIR

LoopBackPairDirectionBits

n+1/n

0

TheHRstructuresonpinsHET[n+1]andHET[n]areinternallyconnectedwithHET[n]asinputand

HET[n+1]asoutput.

1

TheHRstructuresonpinsHET[n+1]andHET[n]connectedwithHET[n]asoutputandHET[n+1]

asinput.

NOTE:TheloopbackdirectioncanbeselectedindependentontheHETDIRregistersetting.

20.4.33N2HETPinDisableRegister(HETPINDIS)

N2HET1:offset=FFF7B894h;N2HET2:offset=FFF7B994h

Figure20-67.N2HETPinDisableRegister(HETPINDIS)

31

16

HETPINDIS

R/W-0

15

0

HETPINDIS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

825

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






N2HETControlRegisterswww.ti.com

Table20-48.NHETPinDisableRegister(HETPINDIS)FieldDescriptions

Bit

Field

Value

Description

31-0

HETPINDISn

N2HETPinDisableBits

0

Logiclow:Noaffectontheoutputbufferenableofthepin(iscontrolledbythevalueofthe

HETDIR[n]bit).

1

Logichigh:OutputbufferofthepinisenabledifpinnDIS=1,HETPINENA=1andHETDIR=

1,orelsedisabledifnDIS=0orHETDIR=0orHETPINENA=0.

826

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5InstructionSet

20.5.1InstructionSummary

Table20-49presentsalistoftheinstructionsintheN2HETinstructionset.Thepagesfollowingdescribe

eachinstructionindetail.

Table20-49.InstructionSummary

Abbreviation

InstructionName

Opcode

Sub-Opcode

Cycles(1)

ACMP

AngleCompare

Ch

-

1

ACNT

AngleCount

9h

-

2

ADCNST

AddConstant

5h

-

2

ADC

AddwithCarryandShift

4h

C[25:23]=001,C5=1

1-3

ADD

AddandShift

4h

C[25:23]=011,C5=1

1-3

ADM32

AddMove32

4h

C[25:23]=000,C5=1

1-2

AND

BitwiseANDandShift

4h

C[25:23]=010,C5=1

1-3

APCNT

AnglePeriodCount

Eh

-

1-2

BR

Branch

Dh

-

1

CNT

Count

6h

-

1-2

DADM64

DataAddMove64

2h

-

2

DJZ

DecrementandJumpif-zero

Ah

P[7:6]=10

1

ECMP

EqualityCompare

0h

C[6:5]=00

1

ECNT

EventCount

Ah

P[7:6]=01

1

MCMP

MagnitudeCompare

0h

C[6]=1

1

MOV32

Move32

4h

C[5]=0

1-2

MOV64

Move64

1h

-

1

PCNT

Pulse/PeriodCount

7h

-

1

PWCNT

PulseWidthCount

Ah

P[7:6]=11

1

RADM64

RegisterAddMove64

3h

-

1

RCNT

RatioCount

Ah

P[7:6]=00,P[0]=1

3

SBB

SubtractwithBorrowandShift

4h

C[25:23]=110C[5]=1

1-3

SCMP

SequenceCompare

0h

C[6:5]=01

1

SCNT

StepCount

Ah

P[7:6]=00,P[0]=0

3

SHFT

Shift

Fh

C[3]=0

1

SUB

SubtractandShift

4h

C[25:23]=101,C[5]=1

1-3

WCAP

SoftwareCaptureWord

Bh

-

1

SoftwareCaptureWordandEvent

WCAPE

8h

-

1

Count

XOR

BitwiseExclusive-OrandShift

4h

C[25:23],C[5]=1

1-3

(1)CyclesreferstotheclockcycleoftheN2HETmodule;whichonmostdevicesisVCLK2.(Checkthedevicedatasheet

descriptionofclockdomainstoconfirm).Ifthehighresolutionprescalevalueissetto/1,thenthisisalsothesameasthe

numberofHRclockcycles.

827

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Table20-50.FLAGSGeneratedbyInstruction

Abbreviation

FlagName

Set/Resetby

Usedby

C

CarryFlag

ADC,ADD,AND,OR,RCNT,SBB,SUB,XOR

ADC,BR,SBB

N

NegativeFlag

ADC,ADD,AND,OR,SBB,SUB,XOR

BR

V

OverflowFlag

ADC,ADD,AND,OR,SBB,SUB,XOR

BR

ACMP,ACNT,BR,ECMP,

ACNT,ADC,ADD,AND,APCNT,CNT,OR,PCNT,

Z

Zeroflag

MCMP,MOV32,RCNT,

SBB,SCNT,SHFT,XOR,

SCMP,SHFT

AngleCompareMatch

X

ACMP

SCMP

Flag

SWF0-1

Stepwidthflags

SCNT

ACNT

NAF

NewAngleFlag

ACNT

NAF_global

ACMP,BR,CNT,ECMP,

NAF_global

NewAngleflag(global)

HWAGorNAF

ECNT

ACF

Accelerationflag

ACNT

,ACNT,SCNT

DCF

Decelerationflag

ACNT

,ACNT,SCNT

GPF

Gapflag

ACNT

ACNT,APCNT

TheinstructionscapableofgeneratingSWinterruptsarelistedinTable20-51.

Table20-51.InterruptCapableInstructions

InterruptCapableInstructions

NonInterruptCapableInstructions

ACMP

ADC

ACNT

ADCNST

APCNT

ADD

BR

ADM32

CNT

AND

DJZ

DADM32

ECMP

MOV32

ECNT

MOV64

MCMP

OR

PCNT

RADM64

PWCNT

RCNT

SCMP

SBB

SHFT

SCNT

WCAP

SUB

WCAPE

XOR

828

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.2Abbreviations,EncodingFormatsandBits

Abbreviationsmarkedwithastar(*)areavailableonlyonspecificinstructions.

U

ReadingabitmarkedwithUwillreturnanindeterminatevalue.

BRK

Definesthesoftwarebreakpointforthedevicesoftwaredebugger.

Default:OFF

Location:Programfield[22]

next

Definestheprogramaddressofthenextinstructionintheprogramflow.Thisvalue

maybealabeloran9-bitunsignedinteger.

Default:Currentinstruction+1

Location:Programfield[21:13]

reqnum*

Definesthenumberoftherequestline(0,1,..,7)totriggereithertheHTUortheDMA.

Default:0

Location:Programfield[25:23]

request*

Allowstoselectbetweennorequest(NOREQ),request(GENREQ)andquietrequest

(QUIET).SeeSection20.2.9.

Default:Norequest

Location:ControlField[28:27]

Request

C[28

]C[27]

ToHTU

ToDMA

0

0

NOREQ

norequest

norequest

1

0

GENREQ

0

1

request

request

QUIET

1

1

quietrequest

norequest

remote*

Determinesthe9-bitaddressoftheremoteaddressfortheinstruction.

Default:Currentinstruction+1

Location:Programfield[8:0]

control

Determineswhethertheimmediatedatafield[31:0]isclearedwhenitisread.When

thebitisnotset,readsdonotcleartheimmediatedatafield.

Default:OFF

Location:Controlfield[26]

en_pin_action*

DetermineswhethertheselectedpinisONsothattheactionoccursonthechosenpin

Default:OFF

Location:Controlfield[22]

Cond_addr*

Conditionaladdress(optional):Definestheaddressofthenextinstructionwhenthe

conditionoccurs.

Default:Currentaddress+1

Location:Controlfield[21:13]

Pin*

PinSelect:Selectsthepinonwhichtheactionoccurs.Enterthepinnumber.

Default:pin0

Location:Controlfield[12:8]exceptPCNT

829

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

TheformatCC{pinnumber}isalsosupported.

MSB

LSB

Description

0

0

0

0

0

SelectHET[0]

0

0

0

0

1

SelectHET[1]

(Eachpinmaybeselectedbywritingitsnumberinbinary)

1

1

1

1

0

SelectHET[30]

1

1

1

1

1

SelectHET[31]

Reg*

Registerselect:Selectstheregisterfordatacomparisonandstorage

Default:Noregister(None)

Location:Controlfield[2:1]exceptforCNTinstruction.

ExtendedRegisterSelectC[7]isavailableforACMP,ADC,ADD,ADM32,AND,

DADM64,ECMP,ECNT,MCMP,MOV32,MOV64,OR,RADM64,SBB,SHFT,SUB,

WCAP,WCAPEinstructions.

Register

ExtReg.C[7]

C[2]

C[1]

A

0

0

0

B

0

0

1

T

0

1

0

None

0

1

1

R

1

0

0

S

1

0

1

Reserved

1

1

0

Reserved

1

1

1

Action*

(2ActionOption)Eithersetsorclearsthepin

Default:Clear

Location:ControlField[4]

Action

C[4]

Clear

0

Set

1

Action*

(4ActionOption)Eithersets,clears,pulsehighorpulselowonthepin.Set/clearare

singlepinactions,pulsehigh/lowincludetheoppositepinaction.

Default:Clear

Location:ControlField[4:3]

Action

ActionType

C[4]

C[3]

Clear

Setlowonmatch

0

0

Set

Sethighonmatch

1

0

PulseLow

Setlowonmatch+resettohighonZ=1(oppositeaction)

0

1

PulseHigh

Sethighonmatch+resettolowonZ=1(oppositeaction)

1

1

830

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

hr_lr*

SpecifiesHIGH/LOWdataresolution.Ifthehr_lrfieldisHIGH,theinstructionusesthe

hr_datafield.Ifthehr_lrfieldisLOW,thehr_datafieldisignored.

Default:HIGH

Location:ProgramField[8]

hr_lr

Prog.field[8]

LOW

1

HIGH

0

prv*

Specifiestheinitialvaluedefiningthepreviousbit(seeSection20.2.5.8).Avalueof

ONsetsthepreviouspin-levelbitto1.AvalueofOFFsetstheinitialvalueofthe

previous(prv)bitto0.Theprvbitisoverwritten(setorreset)bytheN2HETthefirst

timetheinstructionisexecuted.

Default:OFF

Location:ControlField[25]

cntl_val*

AvailableforDADM64,MOV64,andRADM64,thisbitfieldallowstheusertospecify

thereplacementvaluefortheremotecontrolfield.

comp_mode*

Specifiesthecomparemode.Thisfieldisusedwiththe64-bitmoveinstructions.This

fieldensuresthatthesub-opcodesaremovedcorrectly.

Default:ECMP

Location:ControlField[6:5]

Action

C[6]

C[5]

order

ECMP

0

0

SCMP

0

1

MCMP1

1

0

REG_GE_DATA

MCMP2

1

1

DATA_GE_REG

831

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3InstructionDescription

Thefollowingsectionsprovideinformationforindividualinstructions.

Parametersin[]areoptional.RefertotheN2HETassembleruserguideforthedefaultvalueswhen

parametersareomitted.

20.5.3.1ACMP(AngleCompare)

Syntax

ACMP{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}]

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

pin={pinnumber}

[action={CLEAR|SET}]

reg={A|B|R|S|T|NONE}

[irq={OFF|ON}]

data={25-bitunsignedinteger}

}

Figure20-68.ACMPProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Request

BRK

Nextprogramaddress

1100

Reserved

Number

6

3

1

9

4

9

Figure20-69.ACMPControlField(C31:C0)

31

29

28

27

26

25

24

23

22

21

16

Reserved

Requesttype

Control

Cout

Reserved

En.pin

Conditionaladdress

prv

action

3

2

1

1

2

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext.

Reserved

Pin

Res.

Registerselect

Int.

Reg

action

ena

9

5

1

2

1

1

2

1

Figure20-70.ACMPDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

One

Registermodified

Selectedregister(A,B,R,S,orT)

832

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

Thepurposeofthecomparisonistoassertpinactionwhentheanglecomparevalueliesbetweentheold

countervalueandthenewcountervalue(heldintheselectedregister).Sincetheangleincrementvaries

fromoneloopresolutionclocktoanother,anexactequalitytestcannotbeapplied.Instead,thefollowing

inequalityisusedtodeterminetheoccurrenceofamatch:

Oldcountervalue<Anglecomparevalue≤Newcountervalue

Thisisdonebyperformingfollowingcomparisons:

Selectedregistervalueminusangleincrement<anglecomparevalue

Anglecomparevalue≤Selectedregistervalue

register

RegisterBisrecommendedfortypicalapplicationswithACMP.

irq

Specifieswhetherornotaninterruptisgenerated.SpecifyingON

generatesaninterruptwhentheedgestateissatisfiedandthegap

flagisset.SpecifyingOFFpreventsaninterruptfrombeing

generated.

Default:OFF.

data

Specifiesthe25-bitanglecomparevalue.

Execution

X=0;

If(Data<=SelectedRegister)

Cout=0;

else

Cout=1;

If(Z==0AND(SelectedRegister-AngleInc.<Data)ANDCout==0)OR

(Z==1AND(Cout_prv==1ORCout==0)))

{

X=1;

If(EnablePinAction==1)

SelectedPin=PinActionATnextloopresolutionclock;

If(InterruptEnable==1)

HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)

Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)

Generatequietrequestonrequestline[P25:P23];

JumptoConditionalAddress;

}

else

JumptoNextProgramAddress;

Cout_prv=Cout(alwaysexecuted)

NOTE:Carry-OutSignal(Cout)

Coutisthecarry-outsignaloftheadder.Evenifitisnotaflag,itisvalidallalongACMP

instructionexecution.

Angleinc.=NAF_globalorhardwareanglegenerator11-bitinput.

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

833

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.2ACNT(AngleCount)

Syntax

ACNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}]

[request={NOREQ|GENREQ|QUIET}]

edge={RISING|FALLING}

[irq={OFF|ON}]

[control={OFF|ON}]

[prv={OFF|ON}]

gapend={25-bitunsignedinteger}

data={25-bitunsignedinteger}

}

Figure20-71.ACNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

1

0

0

Request

BRK

Nextprogramaddress

1001

Edge

Reserved

Int.

Number

select

ena

6

3

1

9

4

1

7

1

Figure20-72.ACNTControlField(C31:C0)

31

29

28

27

26

25

24

0

Res.

Request

Control

Prv.

GapEnd

type

3

2

1

1

25

Figure20-73.ACNTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

Two,asfollows:

•Firstcycle:Angleincrementconditionandgapendcomparison.

•Secondcycle:Gapstartcomparison.

Registermodified

RegisterB(anglevalue)

Description

ThisinstructiondefinesaspecializedvirtualtimerusedafterSCNTand

APCNTtogenerateanangle-referencedtimebasethatissynchronizedtoan

externalsignal(thatis,atoothedwheelsignal).ACNTusespinHET[2]

exclusively.TheedgeselectmustbethesameastheHET[2]edgewhichwas

selectedinthepreviousAPCNT.

ACNTreferstothesamestepwidthselectionthatthepreviousSCNTsaved

inflagsSWF0andSWF1(seeinformationonSCNT).

ACNTdetectsperiodvariationsoftheexternalsignalmeasuredbyAPCNT

andcompensatesrelatedcounterrors.

834

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

Aperiodincreaseisflaggedinthedecelerationflag(DCF).Aperioddecrease

isflaggedintheaccelerationflag(ACF).Ifnovariationisdetected,ACNT

incrementsthecountervalueeachtimeSCNTreachesitstarget.

Ifaccelerationisdetected,ACNTincrementsthecountervalueoneachtimer

resolution.IfdecelerationisdetectedACNTdoesnotincrementandisthus

saturated.

ACNTalsospecifiesthegapendanglevaluedefiningtheendvalueofagap

rangeinACNTwhereperiodmeasurementsinAPCNTaretemporarily

stoppedtomasksingularitiesintheexternalsignal.ACNTusesregisterA

containinggapstartandregisterBtostorethecountervalue.

Edge

Specifiestheedgefortheinputcapturepin(HET[2]).

Action

P8

EdgeSelect

Rising

1

DetectsarisingedgeofHET[2]

Falling

0

DetectsafallingedgeofHET[2]

irq

ONgeneratesaninterruptwhentheedgestateissatisfiedandthe

gapflagisset.OFFpreventsaninterruptfrombeinggenerated.

Default:OFF.

gapend

Definesthe25-bitendvalueofagaprange.Thestartvalueis

definedintheSCNTinstruction.

GAPEND=(StepValue*(#ofteethonthetoothedwheel+#of

missingteeth))-1

data

Specifiesthe25-bitinitialcountvalueforthedatafield.

Default:0.

NOTE:TargetEdgeField

ThetargetedgefieldrepresentsthethreeLSBsofdatafieldregisterincaseofstepwidth=

8,fourLSBsforstepwidth=16,fiveLSBsforstepwidth=32andsixLSBsforstepwidth=

64.

Execution

IncrementCondition:((Z=1ANDDCF=0)ORACF=1)

PinEdgeCondition:SpecifiededgedetectedonHET[2]

TargetEdgeCondition:(TargetEdgefieldindatafield=0)AND(Angle

Incrementconditionistrue)AND(GPF=0)

If(AngleIncrementCondition)isfalse

{

NAF=0;

RegisterB=Datafieldregister;

}

else

{

NAF=1;

If(Countervalue!=GapEnd)

{

RegisterB=Datafieldregister+1;

DataFieldRegister=Countervalue+1;

}

835

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

else

{

RegisterB=0;

DataFieldRegister=0;

If(ACF==0)DCF=1;

}

}

Z=0;

If(Datafieldregister==GapStart)

{

GPF=1;

If(TargetEdgeconditionistrue)

{

ACF=0;

If((specifiededgeisnotdetectedonpinHET[2])AND(data

fieldregister!=0)AND(ACF==0)AND(angleincrementcondition

istrue))

DCF=1;

}

If(specifiededgeisdetectedonpinHET[2])

{

DCF=0;

If((target_edge_field!=0)AND(DCF==0))ACF=1;

If(GPF==1)

{

GPF=0;

Z=1;

If(InterruptEnable==1)

HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)

Generaterequestonrequestline[P25:P23];;

If([C28:C27]==11)

Generatequietrequestonrequestline

[P25:P23];

}

}

}

If((target_edge_field!=0)and(pin_edge_cond==1))

{

pin_update=0;

}

elseif(target_edge_field==0)

{

pin_update=1;

}

If(pin_updateistrueinnextloopclockcycle)

{

Prvbit=CurrentLxvalueofHET[2]pin;

}

Jumptonextprogramaddress;

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

836

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.3ADCNST(AddConstant)

Syntax

ADCNST{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[control={OFF|ON}]

remote={label|9-bitunsignedinteger}

min_off={25-bitunsignedinteger}

data={25-bitunsignedinteger}

[hr_data={7-bitunsignedinteger}]

}

Figure20-74.ADCNSTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0101

Remoteaddress

6

3

1

9

4

9

Figure20-75.ADCNSTControlField(C31:C0)

31

27

26

25

24

0

Reserved

Control

Res.

Minimumoffset

5

1

1

25

Figure20-76.ADCNSTDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

Two

Registermodified

RegisterT(implicity)

Description

ADCNSTisanextensionofADM32.ADCNSTfirstcheckswhetherthedata

fieldvalueattheremoteaddressiszero;itthenperformsdifferentaddsand

movesontheresult.ADCNSTistypicallyusedtoextendthecountervalueof

PWCNT.

min_off

A25-bitconstantvaluethatisaddedtothedatafieldvalueifthe

remotedatafieldisnull.

data

A25-bitvaluethatisalwaysaddedtotheremotedatafield.

Default:0.

hr_data

Sevenleastsignificantbitsofthedataadditiontotheremotedata

field.

Default:0.

837

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




+=MinimumoffsetImmediateDFRemoteDF

25bits25-bitaddition

32bitsHRHR

+=RemoteDFImmediateDFRemoteDF

32bits

LSBs(HRdatafield)

25-bitadditionHRHR



InstructionSetwww.ti.com

Figure20-77andFigure20-78illustratethebehaviorofADCNSTiftheremotedatafieldisorisnotzero.

Figure20-77.ADCNSTOperationIfRemoteDataField[31:7]IsNotZero

Figure20-78.ADCNSTOperationifRemoteDataField[31:7]IsZero

Execution

If(RemoteDataFieldValue[31:7]!=0)

RemoteDataField=ImmediateDataField+RemoteDataField;

else

RemoteDataField=ImmediateDataField+min.offset(bitsC24:C0);

JumptoNextProgramAddress;

838

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.4ADC,ADD,AND,OR,SBB,SUB,XOR

Syntax

ADC|ADD|AND|OR|SBB|SUB|XOR{

src1={ZERO|IMM|A|B|R|S|T|ONES|REM|REMP}

src2={ZERO|IMM|A|B|R|S|T|ONES}

dest={NONE|IMM|A|B|R|S|T}

[rdest={NONE|REM|REMP}]

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[remote={label|9-bitunsignedinteger}]

[control={OFF|ON}]

[init={OFF|ON}]

[smode={LSL|CSL|LSR|CSR|RR|CRR|ASR}]

[scount={5bitunsignedinteger}]

[data={25-bitunsignedinteger}]

[hr_data={7-bitunsignedinteger}]

}

Figure20-79.ADC,ADD,AND,OR,SBB,SUB,XORProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0100

Remoteaddress

6

3

1

9

4

9

Figure20-80.ADC,ADD,AND,OR,SBB,SUB,XORControlField(C31:C0)

31

27

26

25

23

22

19

18

16

Reserved

Control

SubOpcode

Src1

Src2

5

1

3

4

3

15

13

12

8

7

6

5

4

3

2

1

0

Smode

Scount

Ext.Reg

Intflag

1

Rdest

Registerselect

Res.

3

5

1

1

1

2

2

1

Figure20-81.ADC,ADD,AND,OR,SBB,SUB,XORDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

Onetothreecycles,dependingonoperandsselected.(SeeTable20-56)

Registermodified

Selectedregister(A,B,R,S,T,orNONE)

Description

Thisinstructionperformsthespecified32-bitarithmeticorlogicaloperationon

operandssrc1andsrc2,followedbyanoptionalshift/rotatestep.Theresultof

thisoperationisthenstoredtoeitheranN2HETregisterortheimmediate

datafieldoftheinstruction.Inaddition,thesameresultmaybestoredina

remotedatafieldortheleastsignficantbitsofaremoteinstructionprogram

field(P[8:0]).BitsP[8:0]oftheprogramfieldareusedbymostinstructions

formatstoholdtheremoteaddressthattheinstructionoperateson,sothe

abilitytoupdatethisfieldprogramaticallymakesiteasiertowritesubroutines

thatoperateondifferentdatasets.

839

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

TheSub-OpcodefieldC[25:3]determineswhichtypeofoperation(ADD,ADC,AND,OR,SBB,SUB,

XOR)isexecutedbytheinstruction.AlistoftheseoperationsandthecorrespondingSub-Opcode

encodingcanbefoundinTable20-52.

Allarithmeticisperformedusing32-bitintegermath.However,sourceanddestinationoperandsvaryin

widthandcanbe9bits(REMP),25bits(A,B)or32bits(R,S,T,IMM,REM).SourceoperandsREMP,

A,Bareextendedto32-bitsbeforebeingoperatedon.Alsotheresultofthecomputationneedstobe

truncatedbeforebeingwrittenbacktoREMP,A,orBwhentheseareselectedasdestinationoperands.

Table20-53providesalistofsourceoperandoptions,howtheyareexpandedto32-bitintegers(if

applicable)andthecontrolfieldencodingtoselecttheoptionforsrc1andsrc2operands.

Table20-54providesasimilarlistofdestinationoperandsandtheirencodings.Uptotwodestination

operandsmaybeselectedforeachinstruction,aregister/immediatedestinationandaremotedestination

maybeselectedsimultaneously.Truncationisperformedindependentlyforeachdestinationoperandas

appropriatetoitssize.

Anoptionalshiftstepfollowingthearithmeticorlogicaloperationmaybeselectedthroughthesmodeand

scountoperands.Theshiftorrotatetypeisselectedbythesmodefield;Table20-55illustratestheoptions

thatareavailableforsmode.Thenumberofbitsshiftedisdeterminedbythescountoperand.

Table20-52.Arithmetic/BitwiseLogicSub-Opcodes

Instruction

Description

Operation

Sub-Opcode

ADC

AddwithCarry

result=src1+src2+C

C[25:23]=011

ADD

Add

result=src1+src2

C[25:23]=001

AND

BitwiseLogicAnd

result=src1&src2

C[25:23]=010

OR

BitwiseLogicOr

result=src1|src2

C[25:23]=100

SBB

SubtractwithBorrow

result=src1-src2-C

C[25:23]=110

SUB

Subtract

result=src1-src2

C[25:23]=101

XOR

BitwiseLogicExclusiveOr

result=src1^src2

C[25:23]=111

Table20-53.SourceOperandChoices

SourceOperand

32-bitvalue

Address

src1

src2

A

{A[24:0],0x00}

n/a

C[22:19]=0010

C[18:16]=010

B

{B[24:0],0x00}

n/a

C[22:19]=0011

C[18:16]=011

R

R[31:0]

n/a

C[22:19]=0100

C[18:16]=100

S

S[31:0]

n/a

C[22:19]=0101

C[18:16]=101

T

T[31:0]

n/a

C[22:19]=0110

C[18:16]=110

IMM

D[31:0]

currentinstructionaddress

C[22:19]=0001

C[18:16]=001

ZERO

0x00000000

n/a

C[22:19]=0000

C[18:16]=000

ONES

0xFFFFFFFF

n/a

C[22:19]=0111

C[18:16]=111

REM

D[31:0]

specifiedbyremote[8:0]

C[22:19]=1000

n/a

REMP

{0x000000,P[8:0]}

specifiedbyremote[8:0]

C[22:19]=1001

n/a

Table20-54.DestinationOperandChoices

Destination

StoredValue

Address

dest

rdest

Operand

A

A[24:0]=result[31:8]

n/a

C[7]=0,C[2:1]=00

n/a

B

B[24:0]=result[31:8]

n/a

C[7]=0,C[2:1]=01

n/a

R

R[24:0]=result[31:0]

n/a

C[7]=1,C[2:1]=00

n/a

S

S[24:0]=result[31:0]

n/a

C[7]=1,C[2:1]=01

n/a

T

T[24:0]=result[31:0]

n/a

C[7]=0,C[2:1]=10

n/a

840

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




IC2

bit 310

IC2

bit 310

IC1

IC2

bit 310

0

0bit 31

IC2

IC1

bit 310

0

bit 310

IC2

S

bit 310



www.ti.comInstructionSet

Table20-54.DestinationOperandChoices(continued)

Destination

StoredValue

Address

dest

rdest

Operand

IMM

D[31:0]=result[31:0]

currentinstructionaddress

C[7]=1,C[2:1]=10

n/a

NONE

n/a

n/a

C[7]=0,C[2:1]=11

C[4:3]=00

REM

D[31:0]=result[31:0]

specifiedbyremote[8:0]

n/a

C[4:3]=01

REMP

P[8:0]=result[8:0]

specifiedbyremote[8:0]

n/a

C[4:3]=10

Table20-55.ShiftEncoding

ShiftType

C[15:13]smode

OperationIllustrated(1)

NoShiftApplied

000

n/a-noshift

ASR-ArithmeticShiftRight

001

LSL-LogicalShiftLeft

010

CSL-CarryShiftLeft

011

LSR-LogicalShiftRight

100

CSR-CarryShiftRight

101

RR-RotateRight

110

CRR–CarryRotateRight

111

(1)IC1isthecarryflagafterthearithmetic/logicaloperationisperformed.Ic2istheupdatedcarryflagaftertheshiftoperationis

performed.sisthesignbit.

Table20-56.ExecutionTimeforADC,ADD,AND,OR,SBB,SUB,XORInstructions

Cycle

src1

dest

rdest

remote[8:0]

s

ZERO,IMM,A,B,R,S,T,orONES

A,B,R,S,T,orNONE

NONE

!=next[8:0]

1

REMorREMP

A,B,R,S,T,orNONE

NONE

!=next[8:0]

2

ZERO,IMM,A,B,R,S,T,orONES

IMM

REM

!=next[8:0]

2

ZERO,IMM,A,B,R,S,T,orONES

A,B,R,S,T,orNONE

REMP

!=next[8:0]

2

ZERO,IMM,A,B,R,S,T,orONES

A,B,R,S,T,orNONE

NONE

==next[8:0]

2

REMorREMP

IMM

REM

x

3

x

IMM

REMP

x

3

REMorREMP

x

REM

==next[8:0]

3

x

x

REMP

==next[8:0]

3

841

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Execution

/Notes:IR1,IR2are32-bitintermediateresults

//SRC1,SRC2are32-bitsourcesselected

//byfieldssrc1,src2

//IC1,IC2areintermediatevaluesofthecarryflag

//IZ1,IZ2areintermediatevaluesofthezeroflag

//IN1,IN2areintermediatevaluesofthenegativeflag

//IV1,IV2areintermediatevaluesoftheoverflowflag

//scountistheshiftcount(0to31)specifiedbyC12:C8

/**********SOURCEOPERANDDECODINGSTAGE**********/

switch(C22:C19)

{

case0000:SRC1[31:0]=0x00000000

case0001:SRC1[31:0]=ImmediateDataFieldD[31:0]

case0010:SRC1[31:8]=A[24:0];SRC1[6:0]=0

case0011:SRC1[31:8]=B[24:0];SRC1[6:0]=0

case0100:SRC1[31:0]=R[31:0]

case0101:SRC1[31:0]=S[31:0]

case0110:SRC1[31:0]=T[31:0]

case0111:SRC1[31:0]=0xFFFFFFFF

case1000:SRC1[31:0]=RemoteDataFieldD[31:0]

case1001:SRC1[31:9]=0;SRC1[8:0]=RemoteProgramFieldP[8:0]

}

switch(C18:C16)

{

case000:SRC2[31:0]=0x00000000

case001:SRC2[31:0]=ImmediateDataField[31:0]

case010:SRC2[31:8]=A[24:0];SRC2[6:0]=0

case011:SRC2[31:8]=B[24:0];SRC2[6:0]=0

case100:SRC2[31:0]=R[31:0]

case101:SRC2[31:0]=S[31:0]

case110:SRC2[31:0]=T[31:0]

case111:SRC2[31:0]=0xFFFFFFFF

}

/********ARITHMETIC/LOGICALOPERATIONSTAGE*******/

switch(C[25:23])

{

case011:IR1=src1+src2+C//ADC

case001:IR1=src1+src2//ADD

case010:IR1=src1&src2//AND

case100:IR1=src1|src2//OR

case110:IR1=src1-src2-C//SBB

case101:IR1=src1-src2//SUB

case111:IR1=src1^src2//XOR

}

IC1=CarryOutifOperationisADD,ADC,SUB,SBB

=0ifOperationisAND,OR,XOR

IZ1=SetifIR1iszero,ClearifIR1isnon-zero

IN1=IR[31]

IV1=(IC1XORIR1[31])ANDNOT(SRC1[31]XORSRC2[31])

/********************SHIFTSTAGE********************/

switch(C15:C13)

{

case000://smode=NoShift

IR2=IR1

IC2=IC1;IZ2=IZ1;IN2=IN1;IV2=IV1;

case001://smode=ArithmeticShiftRight

IR2[31-scount:0]=IR1[31:scount]

if(scount>0){

IR2[31:31-scount+1]=IR1[31]

842

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

IC2=IR1[scount-1]

}

else{

IC2=IC1

}

IN2=IR2[31];

if(IR2==0){IZ2=1}else{IZ2=0};

IV2=(IR2[31]XORIR1[31])ORIV1

case010://smode=LogicalShiftLeft

IR2[31:scount]=IR1[31-scount:0]

if(scount>0){

IR2[scount-1:0]=0

}

IC2=IC1

IN2=IR2[31];

if(IR2==0){IZ2=1}else{IZ2=0};

IV2=(IR2[31]XORIR1[31])ORIV1

case011://smode=CarryShiftLeft

IR2[31:scount]=IR1[31-scount:0]

if(scount>0){

IR2[scount-1:0]=[IC1,...IC1]

IC2=IR1[31-scount+1]

}

else

{

IC2=IC1

}

IN2=IR2[31];

if(IR2==0){IZ2=1}else{IZ2=0};

IV2=(IR2[31]XORIR1[31])ORIV1

case100://smode=LogicalShiftRight

IR2[31-scount:0]=IR1[31:scount]

if(scount>0){

IR2[31:31-scount+1]=0

}

IC2=IC1

IN2=IR2[31];

if(IR2==0){IZ2=1}else{IZ2=0};

IV2=(IR2[31]XORIR1[31])ORIV1

case101://smode=CarryShiftRight

IR2[31-scount:0]=IR1[31:scount]

if(scount>0){

IR2[31:31-scount+1]=[IC1,...IC1]

IC2=IR1[scount-1]

}

else{

IC2=IC1

}

IN2=IR2[31];

IZ2=SetifIR2==0;

IV2=(IR2[31]XORIR1[31])ORIV1

case110://smode=RotateRight

843

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

IR2[31-scount:0]=IR1[31:scount]

if(scount>0){

IR2[31:31-scount+1]=IR1[scount-1:0]

IC2=IR1[scount-1]

}

else{

IC2=IC1

}

IN2=IR2[31];

if(IR2==0){IZ2=1}else{IZ2=0};

IV2=(IR2[31]XORIR1[31])ORIV1

case111://smode=CarryRotateRight

IR2[31-scount:0]=IR1[31:scount]

if(scount==0){

IC2=IC1

}

elseif(scount==1){

IR2[31]=IC1

IC2=IR1[0]

}

else{

IR2[31:31-scount+1]={IR1[scount-2:0],IC1}

IC2=IR1[scount-1]

}

IN2=IR2[31];

if(IR2==0){IZ2=1}else{IZ2=0};

IV2=(IR2[31]XORIR1[31])ORIV1

}

/**********WRITEREGISTERDESTINATIONSTAGE***********/

switch(C7,C2:C1)

{

case000:A[24:0]=IR2[31:8]

case001:B[24:0]=IR2[31:8]

case010:T[31:0]=IR2[31:0]

case011:IR2isnotstoredinregister,immediate

case100:R[31:0]=IR2[31:0]

case101:S[31:0]=IR2[31:0]

case110:ImmediateDataField[31:0]=IR2

case111:IR2isnotstoredinregister,immediate

}

/***********WRITEREMOTEDESTINATIONSTAGE***********/

switch(C4:3)

{

case00:IR2isnotstoredinremotefield

case01:RemoteDataFieldD[31:0]=IR2

case10:RemoteProgramFieldP[8:0]=IR2[8:0]

case11:IR2isnotstoredinremotefield

}

/*****************UPDATEFLAGSSTAGE*****************/

CFLAG=IC2

NFLAG=IN2

ZFLAG=IZ2

VFLAG=IV2

If(InitFlag==1)

{

ACF=0;

DCF=1;

GPF=0;

NAF=0;

}

elseACF,DCF,GPF,NAFremainunchanged;

844

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.5ADM32(AddMove32)

Syntax

ADM32{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

[control={OFF|ON}]

[init={OFF|ON}]

type={IM&REGTOREG|REM&REGTOREG|IM&REMTOREG|

IM&REGTOREM}

reg={A|B|R|S|T}

data={25-bitunsignedinteger}

[hr_data={7-bitunsignedinteger}]

}

Figure20-82.ADM32ProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0100

Remoteaddress

6

3

1

9

4

9

Figure20-83.ADM32ControlField(C31:C0)

31

27

26

25

23

22

16

Reserved

Control

000

Reserved

5

1

3

15

15

8

7

6

5

4

3

2

1

0

Reserved

ExtReg

Initflag

1

Movetype

Registerselect

Res.

15

1

1

1

2

2

1

Figure20-84.ADM32DataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

Oneortwocycles(seeTable20-57)

Registermodified

Selectedregister(A,B,R,S,orT)

Description

ThisinstructionmodifiestheselectedALUregisterordatafieldvaluesatthe

remoteaddressdependingonthemovetype.Themodifiedvalueresultsfrom

addingtheimmediateorremotedatafieldtotheALUregisterortheremote

datafield,dependingonthemovetype.TabledescriptionshowstheC2and

C1bitencodingfordeterminingwhichregisterisselected.

init

(Optional)Determineswhetherornotsystemflagsareinitialized.A

valueofONreinitializesthefollowingsystemflagstothesestates:

Accelerationflag(ACF)=0

Decelerationflag(DCF)=1

Gapflag(GPF)=0

845

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Newangleflag(NAF)=0

AvalueofOFFresultsinnochangetothesystemflags.

Default:OFF

type

Specifiesthemovetypetobeexecuted.

Table20-57.MoveTypesforADM32

Type

C4

C3

Add

Destination(s)

Cycles

Imm.datafield+Reg.A,B,R,

RegisterA,B,R,S,or

IM&REGTOREG

0

0

1

S,orT

T

Remotedatafield+Reg.A,B,

RegisterA,B,R,S,or

REM&REGTOREG

0

1

2

R,S,orT

T

Imm.datafield+Remotedata

RegisterA,B,R,S,or

IM&REMTOREG

1

0

2

field

T

Imm.datafield+Reg.A,B,R,

IM&REGTOREM

1

1

Remotedatafield

1

S,orT

IfselectedregisterisR,S,orT,theoperationisa32-bitAddition/move.IfAorBregisterisselected,itis

limitedto25-bitoperationsinceAandBonlysupport25-bit.

data

Specifiesthe25-bitintegervaluefortheimmediatedatafield.

hr_data

Specifiesthe7leastsignificantbitsoftheimmediatedatafield.

Default:0.

Execution

switch(C4:C3)

{

case00:

Selectedregister=Selectedregister+ImmediateDataField;

case01:

Selectedregister=Selectedregister+RemoteDataField;

case10:

Selectedregister=ImmediateDataField+RemoteDataField;

case11:

RemoteDataField=Selectedregister+ImmediateDataField;

}

If(InitFlag==1)

{

ACF=0;

DCF=1;

GPF=0;

NAF=0;

}

else

Allflagsremainunchanged;

JumptoNextProgramAddress;

Figure20-85andFigure20-86illustratetheADM32operationforvariouscases.

846

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




+=RemoteDFRegisterA,B,R,S,orTRegisterA,B,R,S,orT

32bits

LSBs(HRdatafield)

25/32-bitaddition/move

HRHRHR(dashedforR,S,T)(dashedforR,S,T)

+=ImmediateDFRegisterA,B,R,SorTRegisterA,B,R,SorT

32bits

LSBs(HRdatafield)

25/32-bitaddition/move

HRHRHR(dashedforR,S,T)(dashedforR,S,T)



www.ti.comInstructionSet

Figure20-85.ADM32AddandMoveOperationforIM&REGTOREG(Case00)

Figure20-86.ADM32AddandMoveOperationforREM&REGTOREG(Case01)

847

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.6APCNT(AnglePeriodCount)

Syntax

APCNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}]

[request={NOREQ|GENREQ|QUIET}]

[irq={OFF|ON}]

type={FALL2FALL|RISE2RISE}

[control={OFF|ON}]

prv={OFF|ON}}]

period={25-bitunsignedinteger}

data={25-bitunsignedinteger}

}

Figure20-87.APCNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

0

0

Request

BRK

Nextprogramaddress

1110

Int.

Edge

Reserved

Number

ena

select

6

3

1

9

4

1

2

6

Figure20-88.APCNTControlField(C31:C0)

31

29

28

27

26

25

24

0

Res.

Request

Control

Prv.

PeriodCount

type

3

2

1

1

25

Figure20-89.APCNTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

Oneortwocycles

•Cycle1:edgedetected(normaloperation)

•Cycle2:edgedetectedandGPF=1andunderflowconditionistrue

Onecycle(normaloperation)twocycles(edgedetected)

Registermodified

RegisterAandT(implicitly)

Description

ThisinstructionisusedbeforeSCNTandACNTtogenerateanangle-

referencedtimebasesynchronizedtoanexternalsignal(thatis,atoothed

wheelsignal).Itisassumedthatthepinandedgeselectionsarethesamefor

APCNTandACNT.

APCNTisrestrictedtopinHET[2].Thetoothedwheelmustthenbeconnected

topinHET[2].

APCNTusesthegapflag(GPF)definedbyACNTtostartorstopcapturesin

theperiodcountfield[C24:C0].WhenGPF=1,thepreviousperiodvalueis

heldinthecontrolfieldandinregisterT.WhenGPF=0,thecurrentperiod

valueiscapturedinthecontrolfieldandinregisterT.

848

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

APCNTusesthestepwidthflags(SWF0andSWF1)definedbySCNTto

detectperioddurationsshorterthanonestep,andthendisablescapture.

TheedgeselectencodingisshowninTable20-58.

irq

ONgeneratesaninterruptwhentheedgestateissatisfied.OFF

preventsaninterruptfrombeinggenerated.

Default:OFF.

type

Specifiestheedgetypethattriggerstheinstruction.

Default:Fall2Fall.

Table20-58.EdgeSelectEncodingforAPCNT

type

P7

P6

SelectedCondition

Fall2Fall

1

0

Fallingedge

Rise2Rise

1

1

Risingedge

period

Containsthe25-bitcountvaluefromthepreviousAPCNTperiod.

data

25-bitvalueservingasacounter.

Default:0.

Execution

Z=0;

If(Datafieldregister!=1FFFFFFh)

{

RegisterA=Datafieldregister+1;

Datafieldregister=Datafieldregister+1;

}

elseIf(specifiededgenotdetectedonHET[2])

{

RegisterA=1FFFFFFh;

APCNTOvflwflag=1;

}

If(specifiededgedetectedonHET[2])

{

Z=1;

If(Datafieldregister==1FFFFFFh)

{

RegisterA=1FFFFFFh;

RegisterT=1FFFFFFh;Periodcount=1FFFFFFh;

Periodcount=1FFFFFFh;

}

elseIf(GPF==0ANDDataFieldregister>=Stepwidth)

{

RegisterA=Datafieldregister+1;

RegisterT=RegisterA;

Periodcount=RegisterT;

If(InterruptEnable==1)

HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)

Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)

Generatequietrequestonrequestline[P25:P23];

849

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

}

If(GPF==1)

RegisterT=Periodcount;

If(DataFieldregister<Stepwidth)

{

RegisterT=Periodcount;

APCNTUndflwflag=1;

PeriodCount=000000h;

}

Datafieldregister=000000h;

}

else

{

RegisterT=Periodcount;

}

Prvbit=CurrentLxvalueofHET[2]pin;

JumptoNextProgramAddress;

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

850

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.7BR(Branch)

Syntax

BR{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}]

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[prv={OFF|ON}]

cond_addr={label|9-bitunsignedinteger}

[pin={pinnumber}]

event={NOCOND|FALL|RISE|BOTH|ZERO|NAF|LOW|HIGH|C|NC

|EQ|Z|NE|NZ|N|PZ|V|NV|ZN|P|GE|LT|GT|LE|LO|HS}

[irq={OFF|ON}]

}

Figure20-90.BRProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Request

BRK

Nextprogramaddress

1101

Reserved

Number

6

3

1

9

4

9

Figure20-91.BRControlField(C31:C0)

31

29

28

27

26

25

24

22

21

16

Reserved

Requesttype

Control

Prv

Reserved

Conditionaladdress

3

2

1

1

3

9

15

13

12

8

7

3

2

1

0

Conditionaladdress

Pinselect

Branchcond.

Reserved

Int.ena

9

5

5

2

1

Figure20-92.BRDataField(D31:D0)

31

0

Reserved

32

Cycles

One

Registermodified

None

Description

Thisinstructionexecutesajumptotheconditionaladdress[C21:C13]onapin

oraflagcondition,andcanbeusedwithallpins.

Table20-59providesthebranchconditionencoding.

event

Specifiestheeventthattriggersajumptotheindexedprogram

address.

Default:FALL

851

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

irq

ONgeneratesaninterruptwhentheeventoccursthattriggersthe

jump.IfirqissettoOFF,nointerruptisgenerated.

Default:OFF.

Table20-59.BranchConditionEncodingforBR

event

C7

C6

C5

C4

C3

BranchCondition

NOCOND

0

0

0

0

0

Always

FALL

0

0

1

0

0

Onfallingedgeontheselectedpin

RISE

0

1

0

0

0

Onrisingedgeonselectedpin

BOTH

0

1

1

0

0

Onrisingorfallingedgeonselectedpin

ZERO

1

0

0

0

0

IfZeroflagisset

NAF

1

0

1

0

0

IfNAF_globalflagisset

LOW

1

1

0

0

0

OnLOWlevelonselectedpin

HIGH

1

1

1

0

0

OnHIGHlevelonselectedpin

C

0

0

0

0

1

CarrySet:C==1

NC

0

0

0

1

1

CarryNotSet:C==0

EQ,Z

0

0

1

0

1

EqualorZero:Z==1

NE,NZ

0

0

1

1

1

NotEqualorNotZero:Z==0

N

0

1

0

0

1

Negative:N==1

PZ

0

0

1

1

1

PositiveorZero:N==0

V

0

1

1

0

1

Overflow:V==1

NV

0

1

1

1

1

NoOverflow:V==0

ZN

1

0

0

0

1

ZeroorNegative:(ZORN)==1

P

1

0

0

1

1

Positive:(ZORN)==0

GE

1

0

1

1

1

SignedGreaterThanorEqual:(NXORV)==0

L

1

0

1

0

1

SignedLessThan(NXORV)==1

G

1

1

0

1

1

SignedGreaterThan(ZOR(NXORV))==0

LE

1

1

0

0

1

SignedLessThan(ZOR(NXORV))==1

LO

1

1

1

1

1

UnsignedLessThan:(CORZ)==0

HS

1

1

1

0

1

UnsignedHigherorSame(CORZ)==1

Execution

If(Conditionistrue)

{

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

JumptoConditionalAddress;

}

else

{

JumptoNextProgramAddress;

}

Prvbit=CurrentLxvalueofselectedpin;(AlwaysExecuted)

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

852

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.8CNT(Count)

Syntax

CNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}]

[request={NOREQ|GENREQ|QUIET}]

[angle_count={OFF|ON}]

[reg={A|B|T|NONE}]

[comp={EQ|GE}]

[irq={OFF|ON}]

[control={OFF|ON}]

max={25-bitunsignedinteger}

[data={25-bitunsignedinteger]

}

Figure20-93.CNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

4

1

0

0

Request

BRK

Nextprogramaddress

0110

Angle

Register

Comp.

Res.

Int.ena

Number

count

select

6

3

1

9

4

1

2

1

4

1

Figure20-94.CNTControlField(C31:C0)

31

29

28

27

26

25

24

0

Res.

Request

Control

Res.

MaxCount

type

3

2

1

1

25

Figure20-95.CNTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

Oneortwo

Onecycle(timemode),twocycles(anglemode)

Registermodified

Selectedregister(A,BorT)

Description

Thisinstructiondefinesavirtualtimer.Thecountervaluestoredinthedata

field[D31:7]isincrementedunconditionallyoneachresolutionwhenintime

mode(anglecountbit[P8]=0).Whenthecountreachesthemaximumcount

specifiedinthecontrolfield,thecounterisreset.Ittakesonecycleinthis

mode.

Inanglemode(anglecountbit[P8]=1),CNTneedsdatafromthesoftware

anglegenerator(SWAG).Wheninanglecountmodetheangleincrement

valuewillbe0or1.Ittakestwocyclesinthismode.

853

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

angle_count

Specifieswhenthecounterisincremented.AvalueofONcausesthe

countervaluetobeincrementedonlyifthenewangleflagisset

(NAF_global=1).AvalueofOFFincrementsthecountereachtime

theCNTinstructionisexecuted.

DefaultvalueforthisfieldisOFF.

comp

WhensettoEQthecounterisreset,whenitisequaltothemaximum

count.

WhensettoGEthecounterisreset,whenitisgreaterorequaltothe

maximumcount.

Default:GE.

irq

ONgeneratesaninterruptwhenthecounteroverflowstozero.The

interruptisnotgenerateduntilthedatafieldisresettozero.Ifirqis

settoOFF,nointerruptisgenerated.

Default:OFF.

max

Specifiesthe25-bitintegervaluethatdefinesthemaximumcount

valueallowedinthedatafield.Whenthecountinthedatafieldis

equaltomax,thedatafieldisresetto0andtheZsystemflagisset

to1.

data

Specifiesthe25-bitintegervalueservingasacounter.

Default:0.

Execution

Z=0;

If(AngleCount(bitP8==1))

{

If(NAF_global==0)

{

Selectedregister=immediatedatafield;

JumptoNextProgramAddress;

}

else

{

If((ImmediateDataField+AngleIncrement)>=Maxcount)

{

Z=1;

Selectedregister=((ImmediateDataField+AngleInc.)-Maxcount);

ImmediateDataField=((ImmediateDataField+AngleInc.)-Maxcount);

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

}

else

{

Selectedregister=ImmediateDataField+AngleIncrement;

ImmediateDataField=ImmediateDataField+AngleIncrement;

}

}

}

elseif(Timemode(bitP8==0))

{

If[(P5==0)AND(ImmediateDataField==Maxcount)]

OR[(P5==1)AND(ImmediateDataField>=Maxcount)]

{

Z=1;

854

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

Selectedregister=00000;

ImmediateDataField=00000;

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

}

else

{

Selectedregister=ImmediateDataField+1;

ImmediateDataField=ImmediateDataField+1;

}

}

JumptoNextProgramAddress;

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

855

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.9DADM64(DataAddMove)

Syntax

DADM64{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

[pin={pinnumber}]

comp_mode={ECMP|SCMP|MCMP1|MCMP2}

[action={CLEAR|SET|PULSELO|PULSEHI}]

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}]

}

-or-

Syntax

DADM64{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

cntl_val={29-bitunsignedinteger}

data={25-bitunsignedinteger}

[hr_data={7-bitunsignedinteger}]

}

Figure20-96.DADM64ProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0010

RemoteAddress

6

3

1

9

4

9

Figure20-97.DADM64ControlField(C31:C0)

31

29

28

27

26

25

23

22

21

16

Reserved

Requesttype

Control

Reserved

En.pin

Conditionaladdress

action

3

2

1

3

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Comp.mode

Action

Registerselect

Int.

Reg

ena

9

5

1

2

2

2

1

856

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




+=ImmediateDFRemoteDFRemoteDF

32bits

LSBs(HRDataField)

ImmediateCFRemoteCFHRHRHR



www.ti.comInstructionSet

Figure20-98.DADM64DataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

Two

Registermodified

RegisterT(implicitly)

Description

Thisinstructionmodifiesthedatafieldandthecontrolfieldattheremote

address.Theremotedatafieldvalueisnotjustreplaced,butisaddedwiththe

DADM64datafield.

DADM64hastwodistinctsyntaxes.Inthefirstsyntax,bitvaluesmaybeset

byassigningavaluetoeachofthecontrolfields.Thissyntaxisconvenientfor

modifyingcontrolfieldsthatarearrangedsimilarlytotheformatofthe

DADM64controlfield.Asecondsyntax,inwhichtheentire29-bitcontrolfield

isspecifiedbythecntl_valfield,isconvenientwhentheremotecontrolfieldis

dissimilartotheDADM64controlfield.Eithersyntaxmaybeused,butyou

mustuseoneortheotherbutnotacombinationofsyntaxes.

Figure20-99showstheDADM64addandmoveoperation.

Figure20-99.DADM64AddandMoveOperation

Table20-60.DADM64ControlFieldDescription

request

maintainsthecontrolfieldfortheremoteinstruction

control

maintainsthecontrolfieldfortheremoteinstruction

en_pin_action

maintainsthecontrolfieldfortheremoteinstruction

cond_addr

maintainsthecontrolfieldfortheremoteinstruction

pin

maintainsthecontrolfieldfortheremoteinstruction

register

maintainsthecontrolfieldfortheremoteinstruction

action

maintainsthecontrolfieldfortheremoteinstruction

irq

maintainsthecontrolfieldfortheremoteinstruction

data

Specifiesthe25-bitinitialvalueforthedatafield.

Sevenleastsignificantbitsofthe32bitdatafield.

hr_data

Default:0

cntl_val

Specifiesthe29leastsignificantbitsoftheControlfield.

Execution

RemoteDataField=RemoteDataField+ImmediateDataField;

RegisterT=ImmediateDataField;

RemoteControlField=ImmediateControlField;

JumptoNextProgramAddress;

857

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.10DJZ(DecrementandJumpifZero)†

Syntax

DJZ{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

[reg={A|B|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

}

Figure20-100.DJZProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

0

0

Request

BRK

Nextprogramaddress

1010

Res.

10

Reserved

Number

6

3

1

9

4

1

2

6

Figure20-101.DJZControlField(C31:C0)

31

29

28

27

26

25

22

21

16

Reserved

Requesttype

Control

Reserved

Conditionaladdress

3

2

1

4

9

15

13

12

8

7

3

2

1

0

Conditionaladdress

Reserved

Registerselect

Int.ena

9

10

2

1

Figure20-102.DJZDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

One

Registermodified

Selectedregister(A,B,orT)

†DJNZisalsosupportedsyntax.Thefunctionalityofthetwoinstructionnamesisidentical.

Description

Thisinstructiondefinesavirtualdowncounterusedfordelayedexecutionof

certaininstructions(togenerateminimumon/offtimes).WhenDJZis

executedwithcountervaluenotzero,thecountervalueisdecremented.Ifthe

countervalueiszero,thecounterremainszerountilitisreloadedwithanon-

zerovalue.Theprogramflowcanbemodifiedwhendowncountervalueis

zerobyusingtheconditionaladdress.

858

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

cond_addr

ThisfieldisnotoptionalfortheDJZinstruction.

irq

ONgeneratesaninterruptwhenthedatafieldreacheszero.No

interruptisgeneratedwhenthebitisOFF.

Default:OFF.

data

Specifiesthe25-bitintegervalueusedasacounter.Thiscounteris

decrementedeachtimetheDJZinstructionisexecuteduntilthe

counterreaches0.

Default:0.

Execution

If(Data!=0)

{

Data=Selectedregister=Data-1;

JumptoNextProgramAddress;

}

else

{

Selectedregister=000000h;

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

JumptoconditionalAddress;

}

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

859

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.11ECMP(EqualityCompare)

Syntax

ECMP{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[hr_lr={HIGH|LOW}]

[angle_comp={OFF|ON}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

pin={pinnumber}

[action={CLEAR|SET|PULSELO|PULSEHI}]

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}]

}

Figure20-103.ECMPProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

0

0

Request

BRK

Nextprogramaddress

0000

hr_lr

Angle

Reserved

Number

comp.

6

3

1

9

4

1

1

7

Figure20-104.ECMPControlField(C31:C0)

31

29

28

27

26

25

23

22

21

16

Reserved

Requesttype

Control

Reserved

En.pin

Conditionaladdress

action

3

2

1

3

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

00

Action

Registerselect

Int.

Reg

ena

9

5

1

2

2

2

1

Figure20-105.ECMPDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

One

Registermodified

RegisterA,B,R,SorTifselected

Description

ECMPcanuseallpins.Thisinstructioncomparesa25-bitdatavaluestoredin

thedatafield(D31–D7)tothevaluestoredintheselectedALUregister(A,B,

R,S,orT).RegisterselectencodingcanbefoundinSection20.5.2.

860

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

IfR,S,orTregistersareselected,andifthe25-bitdatafieldmatches,ECMP

updatestheregisterwiththe32-bitvalue(D31-D0).

Ifthehr_lrbitiscleared,thepinactionwilloccurafterahighresolutiondelay

fromthenextloopresolutionclock.Ifthehr_lrbitisset,thedelayisignored.

Thisdelayisprogrammedinthedatafield(D6–D0).

ThebehaviorofthepinsisgovernedbythefouractionoptionsinbitsC4:C3.

ECMPusesthezeroflagtogenerateoppositepinaction(synchronizedtothe

loopresolutionclock).

angle_comp

Determinesifananglecompareisperformed.AvalueofONcauses

thecomparisontobeperformedonlyifthenewangleflagisset(NAF

=1).IfOFFisspecified,thecompareisthenperformedregardlessof

thestateofthenewangleflag.

Default:OFF.

irq

Specifieswhetherornotaninterruptisgenerated.AvalueofON

sendsaninterruptifregisteranddatafieldvaluesareequivalent.If

OFFisselected,nointerruptisgenerated.

Default:OFF.

data

Specifiesthevalueforthedatafield.Thisvalueiscomparedwiththe

selectedregister.

hr_data

SpecifiestheHRdelay.

Default:0.

Execution

If(AngleComp.bit==0OR(AngleComp.bit==1ANDNAF_global==1))

{

If(Selectedregistervalue==Immediatedatafieldvalue)

{

If(hr_lrbit==0)

{

If(EnablePinaction==1)

{

SelectedPin=PinActionATnextloopresolutionclock+HRdelay;

}

}

else

{

If(EnablePinaction==1)

{

SelectedPin=PinActionATnextloopresolutionclock;

}

}

If(Z==1ANDOppositeaction==1)

{

If(EnablePinaction==1)

{

SelectedPin=oppositePinActionATnextloopresolutionclock;

}

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

If(registerRisselected)Rregister=Comparevalue(32bit);

If(registerSisselected)Sregister=Comparevalue(32bit);

861

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

If(registerTisselected)Tregister=Comparevalue(32bit);

JumptoConditionalAddress;

}

}

elseIf(Z==1ANDOppositeaction==1)

{

If(EnablePinaction==1)

{

SelectedPin=oppositePinActionATnextloopresolutionclock;

}

JumptoNextProgramAddress;

}

else//AngleComp.bit==1ANDNAF_global==0

{

JumptoNextProgramAddress;

}

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

862

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.12ECNT(EventCount)

Syntax

ECNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[prv={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

pin={pinnumber}

event={NAF|FALL|RISE|BOTH|ACCUHIGH|ACCULOW}

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

}

Figure20-106.ECNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

0

0

Request

BRK

Nextprogramaddress

1010

Res.

01

Reserved

Number

6

3

1

9

4

1

2

6

Figure20-107.ECNTControlField(C31:C0)

31

29

28

27

26

25

24

22

21

16

Reserved

Requesttype

Control

Prv.

Reserved

Conditionaladdress

3

2

1

1

3

9

15

13

12

8

7

6

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Event

Res.

Registerselect

Int.

Reg

ena

9

5

1

3

1

2

1

Figure20-108.ECNTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

Onecycle

Registermodified

SelectedRegister(A,B,R,S,Tornone)

Description

Thisinstructiondefinesaspecialized25-bitvirtualcounterusedasanevent

counterorpulseaccumulator(seeTable20-61).Thecountervalueisstored

inthedatafield[D31:D7]andtheselectedregister.Ifoneofthe32-bit

registers(R,S,T)isselected,the25bitcountvalueisstoredleftjustifiedinthe

registerwithzerosinthesevenleastsignificantbits.

Whenaneventcountconditionisspecified,thecountervalueisincremented

onapinedgeconditionorontheNAFcondition(NAFisdefinedinACNT).

Thisinstructioncanbeusedwithallpins.

863

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

event

Theeventthattriggersthecounter.

Table20-61.EventEncodingFormatforECNT

Int.

event

C6

C5

C4

CountConditions

Mode

Available

NAF

0

0

0

NAFflagisSet

Anglecounter

Y

Fallingedgeonselected

FALL

0

0

1

Eventcounter

Y

pin

Risingedgeonselected

RISE

0

1

0

Eventcounter

Y

pin

RisingandFallingedgeon

BOTH

0

1

1

Eventcounter

Y

selectedpin

ACCUHIGH

1

0

-

whilepinishighlevel

Pulseaccumulation

N

ACCULOW

1

1

-

whilepinislowlevel

Pulseaccumulation

N

irq

ONgeneratesaninterruptwheneventincountermodeoccurs.No

interruptisgeneratedwithOFF.

Default:OFF.

data

25-bitintegervalueservingasacounter.

Default:0.

Execution

If(eventoccurs)

{

If(RegisterAorBSelected){

Selectedregister=ImmediateDataField+1;

}

If(RegisterR,SorTSelected)

{

Selectedregister[31:7]=ImmediateDataField+1;

Selectedregister[6:0]=0;

}

ImmediateDataField=ImmediateDataField+1;

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonline[P25:P23];

If([C28:C27]==11)Generatequietrequestonline[P25:P23];

JumptoConditionalAddress;

}

else

{

JumptoNextProgramAddress;

}

Prvbit=CurrentLogic(Lx)valueofselectedpin;(Alwaysexecuted)

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

864

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.13MCMP(MagnitudeCompare)

Syntax

MCMP{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[hr_lr={LOW|HIGH}]

[angle_comp={OFF|ON}]

[savesub={OFF|ON}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

pin={pinnumber}

order={REG_GE_DATA|DATA_GE_REG}

[action={CLEAR|SET|PULSELO|PULSEHI}]

reg={A|B|R|S|T|NONE}

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}]

}

Figure20-109.MCMPProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

4

0

0

Request

BRK

Nextprogramaddress

0000

hr_lr

Angle

Res.

Save

Res.

Number

comp.

sub.

6

3

1

9

4

1

1

1

1

5

Figure20-110.MCMPControlField(C31:C0)

31

29

28

27

26

25

23

22

21

16

Reserved

Requesttype

Control

Reserved

En.pin

Conditionaladdress

action

3

2

1

3

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

1

Order

Action

Registerselect

Int.

Reg

ena

9

5

1

1

1

2

2

1

Figure20-111.MCMPDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

865

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Cycles

One

Registermodified

T(ifsavesubbitP[5]isset)

Description

Thisinstructioncomparesthemagnitudeofthe25-bitdatavaluestoredinthe

datafield(D31-D7)andthe25-bitvaluestoredintheselectedALUregister

(A,B,R,S,orT).

Ifthehr_lrbitisreset,pinactionwilloccurafteradelayfromthenextloop

resolutionclock.Ifthehr_lrbitisset,thedelayisignored.Thisdelayis

programmedinthedatafield(D6-D0).

Whenthedatavaluematches,anoutputpincanbesetorresetaccordingto

thepinactionbit(C[4]).Thepinwillnotchangestatesiftheenablepinaction

bit(C[22])isreset.

MCMPusesthezeroflagsettogenerateoppositepinaction(synchronizedto

theloopresolutionclock).Thesavesubbit(P[5])providestheoptiontosave

theresultofasubtractionintoregisterT.

NOTE:TheDifferenceBetweenCompareValues

Thedifferencebetweenthetwodatavaluesmustnotexceed(224)-1.

angle_comp

Determineswhetherornotananglecompareisperformed.Avalueof

ONcausesthecomparisontobeperformedonlyifthenewangleflag

isset(NAF=1).IfOFFisspecified,thecompareisthenperformed

regardlessofthestateofthenewangleflag.

Default:OFF.

savesub

Whenset,thecomparisonresultissavedintotheTregister(upper

25bits).

Default:OFF.

order

Specifiestheorderoftheoperandsforthecomparison.

Table20-62.MagnitudeCompareOrderforMCMP

Order

C5

Description

Evaluatestotrueiftheregistervalueisgreaterthanorequalto

REG_GE_DATA

0

thedatafieldvalue.

Evaluatestotrueifthedatafieldvalueisgreaterthanorequal

DATA_GE_REG

1

totheregistervalue.

irq

Specifieswhetherornotaninterruptisgenerated.AvalueofON

sendsaninterruptifthecomparematchoccursaccordingtotheorder

selected.IfOFFisselected,nointerruptisgenerated.

data

Specifiesthevalueforthedatafield.Thisvalueiscomparedwiththe

selectedregister.

hr_data

HRdelay.Thedefaultvalueforanunspecifiedbitis0.

866

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

Execution

If(AngleCompareP[7]==0OR(P[7]==1ANDNAF_global==1))

{

If((OrderC[5]==1)AND(Data[31:7]-Selectedregister[31:7])>=0))

OR((OrderC[5]==0)ANDSelectedregister[31:7]-Data[31:7])>=0))

{

If(OrderC[5]==1ANDSavesubtractP[5]==1)

{

RegisterT[31:7]=Data[31:7]-Selectedregister[31:7];

RegisterT[6:0]=0;

}

If(OrderC[5]==0ANDSavesubtractP[5]==1)

{

RegisterT[31:7]=Selectedregister[31:7]-Data[31:7];

RegisterT[6:0]=0;

}

If(EnablePinActionC[22]==1)

{

If(hr_lrP[8]=0){

ScheduleActiononSelectedPinC[12:8]atstartofnextloop

+HRDelayD[6:0];

}

else

{

SchedulePinActiononSelectedPinC[12:8]atstartofnextloop;

}

}

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

JumptoConditionalAddress;

}

elseif(Z==1ANDOppositeActionC[3]==1)

{

If(EnablePinActionC[22]==1)

{

ScheduleOppositePinActiononSelectedPinC[12:8]atstartofnextloop;

}

JumptoNextProgramAddress;

}

else

JumptoNextProgramAddress;

}

else//AngleComp.bit==1ANDNAF_global==0

JumptoNextProgramAddress;

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

867

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.14MOV32(MOVE32)

Syntax

MOV32{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

[control={OFF|ON}]

[z_cond={OFF|ON}]

[init={OFF|ON}]|ON}]

type={IMTOREG|IMTOREG&REM|REGTOREM|REMTOREG}

[reg={A|B|R|S|T|NONE}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}]

}

Figure20-112.MOV32ProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0100

RemoteAddress

6

3

1

9

4

9

Figure20-113.MOV32ControlField(C31:C0)

31

27

26

25

23

22

21

16

Reserved

Control

Reserved

ZFl.Cond.

Reserved

5

1

3

1

14

15

8

7

6

5

4

3

2

1

0

Reserved

ExtReg

Initflag

0

Movetype

Registerselect

Res.

14

1

1

1

2

2

1

Figure20-114.MOV32DataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

Oneortwocycles

Registermodified

Selectedregister(A,B,R,S,orT)

Description

MOV32replacestheselectedALUregisterand/orthedatafieldvaluesatthe

remoteaddresslocationdependingonthemovetype.

Figure20-115throughFigure20-118illustratetheseoperations.Ifnoregister

isselected,themoveisnotexecuted,exceptforconfigurationC4:C3=01,

wheretheremotedatafieldiswrittenwiththeimmediatedatafieldvalue.

868

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ImmediateDFRegisterA,B,orR,SorT

32bits

LSBs(HRdatafield)

25/32-bitmove

HRHR(dashedforR,S,T)



www.ti.comInstructionSet

remote

Determinesthelocationoftheremoteaddress.

Default:Currentinstruction+1.

z_cond

WhensettoOFFtheMOV32performsthemoveoperationspecified

bythemovetypewheneveritisexecuted(independentonthestate

oftheZ-Flag).

WhensettoONtheMOV32performsthemoveoperationspecified

bythemovetypeonlywhentheZ-Flagisset.

init

(Optional)Determineswhetherornotsystemflagsareinitialized.A

valueofONreinitializesthefollowingsystemflagstothesestates:

Accelerationflag(ACF)=0

Decelerationflag(DCF)=1

Gapflag(GPF)=0

Newangleflag(NAF)=0

AvalueofOFFresultsinnochangetothesystemflags.

type

Specifiesthemovetypetobeexecuted.

Table20-63.MoveTypeEncodingSelection

MoveType

C4

C3

Source

Destination(s)

Cycles

IMTOREG

0

0

Immediatedatafield

RegisterA,B,orT

1

Remotedatafield&

IMTOREG&REM

0

1

Immediatedatafield

1

registerA,B,orT

REGTOREM

1

0

RegisterA,B,orT

Remotedatafield

1

REMTOREG

1

1

Remotedatafield

RegisterA,B,orT

2

Figure20-115.MOV32MoveOperationforIMTOREG(Case00)

reg

Specifieswhichregister(A,B,T,orNONE)isinvolvedinthemove.A

register(A,B,orT)mustbespecifiedforeverymovetypeexcept

IMTOREG&REM.IfNONEisusedwithmovetypeIMTOREG&REM,

theMOV32executesamovefromtheimmediatedatafieldtothe

remotedatafield.IfNONEisusedwithanyothermovetype,no

moveisexecuted.

data

Specifiesa25-bitintegervaluetobewrittentotheremotedatafield

orselectedregister.

hr_data

(Optional)HRdelay.Thedefaultvalueforanunspecifiedbitis0.

869

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




RegisterA,B,R,S,orTRemoteDF

32bits

LSBs(HRdatafield)

25/32-bitmove

HRHR(dashedforR,S,T)

RemoteDFRegisterA,B,R,S,orT

LSBs(HRdatafield=0ifAorB)

25/32-bitmove

HRHR

(dashedforR,S,T)

32bits

LSBs(HRdatafield)

25/32-bitmove

ImmediateDF

RegisterA,B,R,SorTRemoteDFHRHR

HR(dashedforR,S,T)



InstructionSetwww.ti.com

Figure20-116.MOV32MoveOperationforIMTOREG&REM(Case01)

Figure20-117.MOV32MoveOperationforREGTOREM(Case10)

Figure20-118.MOV32MoveOperationforREMTOREG(Case11)

870

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

Execution

If[(z_condC[22]==0)OR((z_condC[22]==1)AND(ZFlag==1))]

{

switch(typeC[4:3])

{

case00://IMTOREG

Selectedregister=ImmediateDataField;

case01://IMTOREG&REM

Selectedregister=ImmediateDataField;

RemoteDataField=ImmediateDataField;

case10://REGTOREM

RemoteDataField=Selectedregister;

case11://REMTOREG

Selectedregister=RemoteDataField;

}

}

If(InitFlag==1)

{

ACF=0;

DCF=1;

GPF=0;

NAF=0;

}

else

Allflagsremainunchanged;

JumptoNextProgramAddress;

871

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.15MOV64(DataMove)

Syntax

MOV64{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

[pin={pinnumber}]

comp_mode={ECMP|SCMP|MCMP1|MCMP2}

[action={CLEAR|SET|PULSELO|PULSEHI}]

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}

}

-or-

Syntax

MOV64{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

cntl_val={29-bitunsignedinteger}

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}

}

Figure20-119.MOV64ProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0001

RemoteAddress

6

3

1

9

4

9

Figure20-120.MOV64ControlField(C31:C0)

31

29

28

27

26

25

23

22

21

16

Reserved

Requesttype

Control

Reserved

En.pin

Conditionaladdress

action

3

2

1

3

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Comp.mode

Action

Registerselect

Int.

Reg

ena

9

5

1

2

2

2

1

872

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ImmediateCF+DFRemoteCF+DF

HRHR



www.ti.comInstructionSet

Figure20-121.MOV64DataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

One

Registermodified

None

Description

Thisinstructionmodifiesthedatafieldandthecontrolfieldattheremote

address.

MOV64hastwodistinctsyntaxes.Inthefirstsyntax,bitvaluesmaybesetby

assigningavaluetoeachofthecontrolfields.Thissyntaxisconvenientfor

modifyingcontrolfieldsthatarearrangedsimilarlytotheformatoftheMOV64

controlfield.Asecondsyntax,inwhichtheentire29-bitcontrolfieldis

specifiedbythecntl_valfield,isconvenientwhentheremotecontrolfieldis

dissimilartotheMOV64controlfield.Eithersyntaxmaybeused,butyoumust

useoneortheeitherbutnotacombinationofsyntaxes.SeeFigure20-122.

Figure20-122.MOV64MoveOperation

Table20-64.MOV64ControlFieldDescriptions

request

Maintainsthecontrolfieldfortheremoteinstruction.

control

Maintainsthecontrolfieldfortheremoteinstruction.

en_pin_action

Maintainsthecontrolfieldfortheremoteinstruction.

cond_addr

Maintainsthecontrolfieldfortheremoteinstruction.

pin

Maintainsthecontrolfieldfortheremoteinstruction.

register,extreg

Maintainsthecontrolfieldfortheremoteinstruction.

comp_mode

Selectsthecomparisonmodetypetobeusedbytheremoteinstruction.

action

Maintainsthecontrolfieldfortheremoteinstruction.

irq

Maintainsthecontrolfieldfortheremoteinstruction.

data

Specifiesthe25-bitinitialcountvalueforthedatafield.Ifomitted,thefielddefaultsto0.

hr_data

(Optional)HRdelay.Thedefaultvalueforanunspecifiedbitis0.

Table20-65.ComparisonTypeEncodingFormat

comp_mode

C[6]

C[5]

MCMPorder

ECMP

0

0

SCMP

0

1

MCMP1

1

0

REG_GE_DATA

MCMP2

1

1

DATA_GE_REG

Execution

RemoteDataField=ImmediateDataField;

RemoteControlField=ImmediatecontrolField;

JumptoNextProgramAddress;

873

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.16PCNT(Period/PulseCount)

Syntax

PCNT{

[hr_lr={HIGH|LOW}]

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[irq={OFF|ON}]

type={FALL2RISE|RISE2FALL|FALL2FALL|RISE2RISE}

pin={pinnumber}

[control={OFF|ON}]

[prv={OFF|ON}]

[period={25-bitunsignedinteger}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}

}

Figure20-123.PCNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

4

0

0

Request

BRK

Nextprogramaddress

0111

Int.

Typeselect

hr_lr

Pin

Number

ena

select

6

3

1

9

4

1

2

1

5

Figure20-124.PCNTControlField(C31:C0)

31

29

28

27

26

25

24

0

Res.

Request

Control

Prv.

PeriodCount

type

3

2

1

1

25

Figure20-125.PCNTDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

One

Registermodified

RegisterA

Description

Thisinstructiondetectstheedgesoftheexternalsignalatloopstartand

measuresitsperiodorpulseduration.Thecountervaluestoredinthecontrol

fieldC[24:0]andintheregisterAisincrementedeachN2HETloop.PCNT

usestheHRstructureonthepintomeasureanHRperiod/pulsecountvalue.

hr_lr

(Optional)SpecifieswhetherthePCNTinstructioncapturestheHR

delayintotheHRdatafieldontheselectededgecondition.Ifhr_lris

0(HIGH)thenPCNTcapturestheHRdelay.ifhr_lris1(LOW)then

PCNTonlycapturesatloopresolution.

874

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

irq

(Optional)Specifieswhetherornotaninterruptisgenerated.Avalue

ofONsendsaninterruptwhenanewvalueiscaptured.IfOFFis

selected,nointerruptisgenerated.

type

(Optional)Determinesthetypeofcounterthatisimplemented.

Table20-66.CounterTypeEncodingFormat

P7

P6

Period/PulseSelect

ResetOn

CaptureOn

Countlowpulsedurationon

FALL2RISE

0

0

Fallingedge

Risingedge

selectedpin

Counthighpulsedurationon

RISE2FALL

0

1

Risingedge

Fallingedge

selectedpin

Countperiodbetweenfalling

FALL2FALL

1

0

Fallingedge

Fallingedge

edgesonselectedpin

Countperiodbetweenrisingedges

RISE2RISE

1

1

Risingedge

Risingedge

onselectedpin

period

Specifiesthe25-bitintegervaluethatholdsthecountervalue.The

countervalueisalsostoredinregisterA.

Default:0.

data

25-bitintegerrepresentingthelastcapturedcountervalue.

Default:0.

hr_data

HRdelay.

Default:0.

Ifperiod-measureisselected,PCNTcapturesthecountervalueintotheperiod/pulsedatafield[D31:D7]

ontheselectededge.TheHRstructureprovidesHRcapturefield[D6:D0].Thecountervalue[C24:C0]is

resetonthesameedge.Thecapturedperiodvalueisa32-bitvalue.

Ifpulse-measureisselected,PCNTcapturesthecountervalueintotheperiod/pulsecountfield[D31:D7]

ontheselectededge.TheHRstructureprovidesHRcapturefield[D6:D0].Thecountervalue[C24:C0]is

resetonthenextoppositeedge.Thecapturedpulsevalueisa32-bitvalue.

Whentheoverflowcount(all1’sinthecountervalue)isreached,PCNTstopscountinguntilthenextreset

edgeisdetected.

Note:ForFALL2FALL/RISE2RISE,theusershouldalwaysdiscardthefirstinterrupt/HTUrequestif

interrupt/requestareenabledbeforeHET_ON.Forboththetypes,resetedgeandcaptureedgearethe

sameandtheinterruptorHTUrequestistriggeredoncaptureedge(whichisnothingbuttheresetedge).

Oncetheexecutionunitisenabled,thefirstedgegeneratesaninterruptbutthevalueofthecounterisof

nouseasthisisnottheperiodbetween2edges.SofirstedgeafterturningonN2HETisusedmainlyfor

resettingthecounterandstarttheperiodcount.

Execution

Z=0;

If(PeriodC[24:0]!=1FF_FFFFh){

PeriodC[24:0]=PeriodC[24:0]+1;

}

RegisterA=PeriodC[24:0];

If(specifiedcaptureedgedetectedonselectedpin)

{

Z=1;

If(Periodvalue!=1FF_FFFFh)

875

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

{

HRCaptureValue=selectedHRcounter;

}

else

{

HRCaptureValue=7Fh;

}

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

}

If(specifiedresetedgedetectedonselectedpin)

{

Periodvalue=0000000h;

}

Prvbit=CurrentLogic(Lx)valueofselectedpin;

JumptoNextProgramAddress;

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

876

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.17PWCNT(PulseWidthCount)

Syntax

PWCNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[hr_lr={HIGH|LOW}]

[control={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}

[en_pin_action={OFF|ON}]

pin={pinnumber}

[action={CLEAR|SET|PULSELO|PULSEHI}]

[reg={A|B|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}]

}

Figure20-126.PWCNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

0

0

Request

BRK

Nextprogramaddress

1010

hr_lr

11

Reserved

Number

6

3

1

9

4

1

2

6

Figure20-127.PWCNTControlField(C31:C0)

31

29

28

27

26

25

23

22

21

16

Reserved

Requesttype

Control

Reserved

En.pin

Conditionaladdress

action

3

2

1

3

1

9

15

13

12

8

7

5

4

3

2

1

0

Conditionaladdress

Pinselect

Reserved

Action

Registerselect

Int.

ena

9

5

3

2

2

1

Figure20-128.PWCNTDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

One

Registermodified

Selectedregister(A,BorT)

Description

Thisinstructiondefinesavirtualtimerusedtogeneratevariablelengthpulses.

Thecountervaluestoredinthedatafieldisdecrementedunconditionallyon

eachtimerresolutionuntilitreacheszero,anditthenstaysatzerountilitis

reloadedwithanon-zerovalue.

877

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Thespecifiedpinactionisperformedaslongasthecountaftercountvalueis

decrementedisgreaterthan0.Theoppositepinactionisperformedwhenthe

countafterdecrementjustreaches0.

Ifthehr_lrbitisreset,theoppositepinactionwillbetakenafteraHRdelay

fromthenextloopresolutionclock.Ifthehr_lrbitisset,thedelayisignored.

Thisdelayisprogrammedinbits[D6:D0].

irq

ONgeneratesaninterruptwhenthedatafieldvaluereaches0.No

interruptisgeneratedforOFF.

Default:OFF.

data

25-bitintegervalueservingasacounter.

hr_data

HRdelay.

Default:0.

Execution

If(Datafieldvalue==0)

{

Selectedregister=0;

JumptoNextProgramAddress;

}

If(Datafieldvalue>1)

{

Selectedregister=Datafieldvalue-1;

Datafieldvalue=Countervalue-1;

If(EnablePinaction==1)

{

SelectedPin=PinActionATnextloopresolutionclock;

}

JumptoNextProgramAddress;

}

If(Datafieldvalue==1)

{

Selectedregister=0000000h;

Datafieldvalue=0000000h;

If(Oppositeaction==1)

{

If(hr_lrbit==0)

{

If(EnablePinaction==1)

{

SelectedPin=OppositelevelofPinActionATnextloopresolutionclock

+HRdelay;

}

}

else

{

If(EnablePinaction==1)

{

SelectedPin=OppositelevelofPinActionATnextloop

resolutionclock;

}

}

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

878

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

}

JumptoConditionalAddress

}

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

879

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.18RADM64(RegisterAddMove)

Syntax

RADM64{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

[pin={pinnumber}]

comp_mode={ECMP|SCMP|MCMP1|MCMP2}

[action={CLEAR|SET|PULSELO|PULSEHI}]

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}

}

-or-

Syntax

RADM64{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

remote={label|9-bitunsignedinteger}

cntl_val={29-bitunsignedinteger}

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}

}

Figure20-129.RADM64ProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Reserved

BRK

Nextprogramaddress

0011

RemoteAddress

6

3

1

9

4

9

Figure20-130.RADM64ControlField(C31:C0)

31

29

28

27

26

25

23

22

21

16

Reserved

Requesttype

Control

Reserved

En.pin

Conditionaladdress

action

3

2

1

3

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Comp.mode

Action

Registerselect

Int.

Reg

ena

9

5

1

2

2

2

1

880

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




+=ImmediateDFRegisterA,B,R,S,orTRemoteDF

32bits

LSBs(HRdatafield)

ImmediateCFRemoteCFHRHR(dashedforR,S,T)

HR



www.ti.comInstructionSet

Figure20-131.RADM64DataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

NormallyOneCycle.Twocyclesifwritingtoremoteaddressthatisalsothe

nextaddress.

Registermodified

None

Description

Thisinstructionmodifiesthedatafield,theHRdatafieldandthecontrolfield

attheremoteaddress.TheadvantageoverDADM64isthatItexecutesone

cyclefaster.IncasetheR,S,orTregisterisselected,theadditionisa32-bit

addition.Thetabledescriptionshowsthebitencodingfordeterminingwhich

ALUregisterisselected.

RADM64hastwodistinctsyntaxes.Inthefirstsyntax,bitvaluesmaybeset

byassigningavaluetoeachofthecontrolfields.Thissyntaxisconvenientfor

modifyingcontrolfieldsthatarearrangedsimilartotheformatoftheRADM64

controlfield.Asecondsyntax,inwhichtheentire29-bitcontrolfieldis

specifiedbythecntl_valfield,isconvenientwhentheremotecontrolfieldis

dissimilarfromtheRADM64controlfield.Eithersyntaxmaybeused,butyou

mustuseoneortheeitherbutnotacombinationofsyntaxes.SeeFigure20-

132.

Figure20-132.RADM64AddandMoveOperation

comp_mode

Selectsthecomparisonmodetypetobeused.

Table20-67.ComparisonTypeEncodingFormat

comp_mode

C[6]

C[5]

MCMPorder

ECMP

0

0

SCMP

0

1

MCMP1

1

0

REG_GE_DATA

MCMP2

1

1

DATA_GE_REG

Table20-68.RADM64ControlFieldDescriptions

request

Maintainsthecontrolfieldfortheremoteinstruction.

Control

Maintainsthecontrolfieldfortheremoteinstruction.

en_pin_action

Maintainsthecontrolfieldfortheremoteinstruction.

cond_addr

Maintainsthecontrolfieldfortheremoteinstruction.

pin

Maintainsthecontrolfieldfortheremoteinstruction.

register

Maintainsthecontrolfieldfortheremoteinstruction.

action

Maintainsthecontrolfieldfortheremoteinstruction.

881

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Table20-68.RADM64ControlFieldDescriptions(continued)

irq

Maintainsthecontrolfieldfortheremoteinstruction.

data

Specifiesthe25-bitinitialvalueforthedatafield.Ifomitted,thefielddefaultsto0.

Sevenleastsignificantbitsofthe32-bitdatafield.

hr_data

Default:0.

cntl_val

Specifiesthe29leastsignificantbitsoftheControlfield.

Execution

RemoteDataField=Selectedregister+ImmediateDataField(includingHRfield);

RemoteControlField=ImmediateControlField;

JumptoNextProgramAddress;

882

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




÷øöçèæ·=MNTTferenceReInput



www.ti.comInstructionSet

20.5.3.19RCNT(RatioCount)

Syntax

RCNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[control={OFF|ON}]

divisor={25-bitunsignedinteger}

[data={25-bitunsignedinteger]

}

Figure20-133.RCNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

4

3

1

0

0

Reserved

BRK

Nextprogramaddress

1010

Res.

00

Step

Res.

1

width

6

3

1

9

4

1

2

2

3

1

Figure20-134.RCNTControlField(C31:C0)

31

27

26

25

24

0

Reserved

Control

Res.

Divisor

5

1

1

25

Figure20-135.RCNTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

TwoCycles(OneCycleifT=0)

Registermodified

None

Description

RCNTisusedwithotherinstructionstoconvertaninputperiodmeasurement

TInputtotheformof(Equation31)wheretheinputperiodisexpressedasa

fractionofareferenceperiodTReference.

(31)

RCNTcomputesthenumeratorNof(Equation31).ThedenominatorMof

(Equation31)isaconstantthatisofinterest.Forexample,chosingallowsthe

inputperiodtobeexpressedasapercentage(%)ofthereferenceperiod.

NotethatifTInput>TReference,thenRCNTwillreturnN>M;whichwouldbe

correctifforexampletheinputpulseperiodis110%ofthereferencepulse

period.

RCNTexpectsthatregisterTisloadedwiththevalueofTReference.Theinput

periodTInputisdeterminedbycountingthenumberofloopresolutionperiods

betweenedgesontheinputpin.ThisinformationisconveyedthroughtheZ

flagfromaPCNTinstructionthatprecedestheRCNTinstruction.

ThedivisorfieldoftheRCNTinstructionshouldbechosenas:

Divisor=M·lr,whereMisthedesireddenominatorfrom

(Equation31)andlristheloopresolutionprescalevalue.

883

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

AnexampleN2HETprogramthatmakesuseoftheRCNTinstructionis:

L0:MOV32{remote=dummy,type=IMTOREG,reg=T,data=0x8,hr_data=0};

L1:PCNT{hr_lr=HIGH,brk=OFF,type=FALL2FALL,pin=0};

L2:RCNT{divisor=320,data=0x4};

L3:BR{cond_addr=L5,event=Z}

L4:ADC{src1=ZERO,src2=IMM,dest=IMM,next=L0,data=0,hr_data=0};

L5:ADD{src1=REM,src2=ZERO,dest=IMM,remote=L4,data=0,hr_data=0};

L6:ADD{src1=ZERO,src2=ZERO,dest=NONE,rdest=REM,

next=L0,remote=L4,data=0,hr_data=0};

dummy

Inthissmallprogramaninputsignalonpin0ismeasuredbothintermsofabsolutecyclesbythePCNT

instructionatL1andasin1/10thsofthereferenceperiodbytheRCNTinstructionatL2.Inthisexample

thereferenceperiodisaconstant0x400cycles;thisvalueisloadedintoregisterTbytheMOV32

instructionatL0.(0x400isdata=8,hr_data=0)

RCNTfollowsPCNTandisinitializedtoaworkingcountofT/2(0x200)wheneverthePCNTinstruction

detectsafallingedgeonpin0.Betweenfallingedgesonpin0,RCNTaccumulatescounts10xfasterthan

PCNT;sothattheworkingdatafieldofRCNTwillreachthereferencevalueof0x400in1/10ththetime

thataPCNTinstructionwould.EachtimetheRCNTinstructionpassesthereferencevalue,itsetsthe

carryoutflagandsubtractsthereferencevaluefromtheworkingcount.Byaccumulatingcarry-outsfrom

RCNT,theaddwithcarryinstructionatL4effectivelycountsinincrementsof1/10thofthereference

period.Notethatthedivisorvalue320is10times32;thisassumeslr=32.

Whenthenextfallingedgeisdetectedonpin0,PCNTsetstheZflagandtheRCNTinstructionresets

againtotheinitialdatafieldofT/2.RCNTdoesnotmodifytheZflag,sothatthebranchinstructionatL3

canexecuteinstructionsatL5,L6insteadofL4.TheinstructionsatL5andL6capturethefinalresultfrom

L4andresettheADCinstructionatL4tozeroforthestartofthenextperiodmeasurement.

Execution

If(registerT[31:0]!=00000000h)

{

C=0;

If(Z==0)

{

DataField[31:0]=DataField[31:0]+Divisor[24:0];

If(DataField[31:0]>=RegT[31:0])

{

DataField[31:0]=DataField[31:0]-RegT[31:0];

C=1;

}

}

else

{

DataField[31:0]=T[31:0]>>1;/*T/2*/

}

}

JumptoNextProgramAddress;

884

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.20SCMP(SequenceCompare)

Syntax

SCMP{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[en_pin_action={OFF|ON}]

cond_addr={label|9-bitunsignedinteger}

pin={pinnumber}

[action={CLEAR|SET}]

[restart={OFF|ON}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

}

Figure20-136.SCMPProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Request

BRK

Nextprogramaddress

0000

Reserved

Number

6

3

1

9

4

9

Figure20-137.SCMPControlField(C31:C0)

31

29

28

27

26

25

24

23

22

21

16

Reserved

Requesttype

Control

Cout

Reserved

En.pin

Conditionaladdress

prv

action

3

2

1

1

2

1

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Res.

01

Action

Reserved

Restart

Int.

enable

ena

9

5

1

2

1

2

1

1

Figure20-138.SCMPDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

One

Registermodified

RegisterT(implicitly)

Description

Thisinstructionalternatelyperformsangle-andtime-basedoperationsto

generatepulsesequences,usingtheanglereferencedtimebase.These

pulsesequenceslastforarelativedurationusingafreerunningtimebase.

Generally,registerBholdstheanglevaluesandregisterAholdsthetime

values.Bit0oftheconditionaladdressfield(C13)specifieswhetherthe

instructionisoperatinginangleortimeoperationmode.

885

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Whenthecomparedvaluesmatchinanglemode,apincanbesetorreset

accordingtothepinactionbit(C4).Thepindoesnotchangestatesifthe

enablepinactionbit(C22)isreset.

Therestartenablebit(C1)providestheoptiontounconditionallyrestarta

sequenceusingtheX-flagbitofACMP.

restart

IfrestartissettoONandtheXflag=1,theassemblerwritesavalue

of1intotheimmediateindexfield,writesthevalueinregisterAinto

theimmediatedatafield,andjumpstothenextprogramaddress.The

XflagissetorclearedbytheACMPinstruction.Ifrestartissetto

OFF,theXflagisignored;nospecialactionisperformed.

Default:OFF.

irq

ONgeneratesaninterruptifthecomparematchoccursinangle

mode.NointerruptisgeneratedwhenthefieldisOFF.

Default:OFF.

data

Specifiesthe25-bitcomparevalue.

cond_addr

SincetheLSBoftheconditionaladdressisusedtoselectbetween

timemodeandanglemode,andsincetheconditionaladdressis

takenonlyintimemode,thedestinationfortheconditionaladdress

mustbeodd.

Execution

If(Datafieldvalue<=Selectedregistervalue)Cout=0;elseCout=1;

If(RestartEnable==1ANDX==1)

{

C13=1;

ImmediateDataField=RegisterA;

Cout=0;

JumptoNextProgramAddress;

}

If(AngleMode(C13==0)AND((RestartEn.==1ANDX==0)ORRestartEn.==0))

{

If(Z==0AND(RegisterBvalue-AngleInc.<Datafieldvalue)ANDCout==0)OR

(Z==1AND(Cout_prv==1ORCout==0)))

{

If(EnablePinAction==1)SelectedPin=PinAction;

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

ImmediateDataField=RegisterA;

C13=1;/***switchtoTimeMode***/

}

JumptoNextProgramAddress;

}

ElseIf(TimeMode(C13==1))AND((RestartEn.==1ANDX==0)ORRestartEn.==0)

{

/*Resultofsubtractmustnotexceed2^24-1*/

RegisterT=RegisterA-ImmediateDataField;

JumptoConditionalProgramAddress;

}

Cout_prv=Cout;(alwaysexecuted)

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

886

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.21SCNT(StepCount)

Syntax

SCNT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

step={8|16|32|64}

[control={OFF|ON}]

gapstart={25-bitunsignedinteger}

[data={25-bitunsignedinteger]

}

Figure20-139.SCNTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

6

5

4

3

1

0

0

Reserved

BRK

Nextprogramaddress

1010

Res.

00

Step

Res.

1

width

6

3

1

9

4

1

2

2

3

1

Figure20-140.SCNTControlField(C31:C0)

31

27

26

25

24

0

Reserved

Control

Res.

Gapstart

5

1

1

25

Figure20-141.SCNTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

Oneortwocycles(twocycleswhenDFisinvolvedinthecalculations)

Registermodified

RegisterA

Description

Thisinstructioncanbeusedonlyonceinaprogramanddefinesaspecialized

virtualtimerusedafterAPCNTandbeforeACNTtogenerateanangle-

referencedtimebasesynchronizedtoanexternalsignal(thatis,atoothed

wheelsignal)asdefinedinAPCNTandACNT.Stepwidthselectionbitsare

savedintwoflags,SWF0,andSWF1,tobere-usedinACNT.

SCNTmultipliesthefrequencyoftheexternalsignalbyaconstantKdefined

inthestepwidthfield,[P5:P4].Thebitencodingforthisfieldisdefinedin

Table20-69:

step

Specifiesthestepincrementtobeaddedtothecountervalueeach

programresolution.ThesetwobitsprovidethevaluesfortheSWF0

andSWF1flags.ThevalidvaluesarelistedinTable20-69.

Table20-69.StepWidthEncodingforSCNT

P5

P4

StepWidth(K)

0

0

8

0

1

16

887

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

Table20-69.StepWidthEncodingforSCNT(continued)

P5

P4

StepWidth(K)

1

0

32

1

1

64

gapstart

Definesthegapstartangle,whichSCNTwritestoregisterA.Thegap

startvaluehasnoeffectontheSCNTinstruction,butiftheACNT

instructionisbeingused,registerAmustcontainthecorrectgapstart

value.Foratypicaltoothedwheelgear:

GAPSTART=(stepwidth×(actualteethongear-1))+1.

data

Specifiesthe25-bitintegervalueservingasacounter.

Default:0.

ThisinstructionisincrementedbythestepvalueKoneachtimerresolutionuptothepreviousperiod

valueP(n-1)measuredbyAPCNT(storedinregisterT).TheresultingperiodofSCNTis:P(n-1)/K

Duetostepping,thefinalcountofSCNTwillnotusuallyexactlymatchthetargetp(n-1).SCNT

compensatesforthiserrorbystartingeachcyclewiththeremainderofthepreviouscycle.

WhenSCNTreachesthetargetp(n-1),thezeroflagissetasanincrementconditionforACNT.SCNTalso

specifiesagapstartangle,definingthestartofarangeinACNTwhereperiodmeasurementsinAPCNT

aretemporarilystoppedtomasksingularitiesintheexternalsignal.

SCNTusesregisterAtostorethegapstartvalue.GapstarthasnoeffectforSCNT.

Execution

SWF1=P5;

SWF0=P4;

Z=0;

If(registerT!=0000000h)

{

If(DCF==1ORACF==1)

{

DataFieldregister=0000000h;

Countervalue=0000000h;

}

If(DCF==0ANDACF==0)

{

DataFieldregister=Datafieldregister+StepWidth;

}

If((DataFieldregister-registerT)>=0)

{

Datafieldregister=DataFieldregister-registerT;

Z=1;

}

RegisterA=Gapstartvalue;

}

JumptoNextProgramAddress;

888

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

20.5.3.22SHFT(Shift)

Syntax

SHFT{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

smode={OR0|OL0|OR1|OL1|ORZ|OLZ|IRM|ILL|IRZ|ILZ}

[control={OFF|ON}]

[prv={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}

cond={UNC|FALL|RISE}

pin={pinnumber}

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

}

Figure20-142.SHFTProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

4

3

0

0

Request

BRK

Nextprogramaddress

1111

Reserved

Smode

Number

6

3

1

9

4

5

4

Figure20-143.SHFTControlField(C31:C0)

31

29

28

27

26

25

24

22

21

16

Reserved

Requesttype

Control

Prv.

Reserved

Conditionaladdress

3

2

1

1

3

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Shiftcondition

Res.

0

Registerselect

Int.

Reg

ena

9

5

1

2

1

1

2

1

Figure20-144.SHFTDataField(D31:D0)

31

7

6

0

Data

Reserved

25

7

Cycles

One

Registermodified

Selectedregister(A,B,R,SorT)

Description

ThisinstructionshiftsthedatafieldoftheInstruction.N2HETpinscanbe

usedfordatainordataout.SHFTincludesparameterstoselecttheshift

direction(in,out,left,right),shiftcondition(shiftonadefinedclockedgeon

HET[0]orshiftalways),registerfordatastorage(A,B,R,SorT),andthe

datapin.

889

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

smode

Shiftmode

Table20-70.SHIFTMODEEncodingFormat

smode

P3

P2

P1

P0

Operation

LSB1stonHETx/0into

OR0

0

0

0

0

ShiftOut/Right

MSB

MSB1stonHETx/0into

OL0

0

0

0

1

ShiftOut/Left

LSB

LSB1stonHETx/1into

OR1

0

0

1

0

ShiftOut/Right

MSB

MSB1stonHETx/1into

OL1

0

0

1

1

ShiftOut/Left

LSB

LSB1stonHETx/Zinto

ORZ

0

1

0

0

ShiftOut/Right

MSB

MSB1stonHETx/Zinto

OLZ

0

1

0

1

ShiftOut/Left

LSB

IRM

1

0

0

0

ShiftIn/Right

HETxintoMSB

ILL

1

0

0

1

ShiftIn/Left

HETxintoLSB

IRZ

1

0

1

0

ShiftIn/Right

HETxinMSB/LSBintoZ

ILZ

1

0

1

1

ShiftIn/Left

HETxinLSB/MSBintoZ

cond

Specifiestheshiftcondition.

Table20-71.SHIFTConditionEncoding

C6

C5

Shiftcondition

0

X

Always

1

0

RisingedgeofHET[0]

1

1

FallingedgeofHET[0]

irq

ONgeneratesaninterruptiftheZflagisset.AvalueofOFFdoesnot

generateaninterrupt.

Default:OFF.

data

Specifiesthe25-bitvalueforthedatafield.

Execution

If(SHIFTcondition==0X)

OR(SHIFTcondition==10ANDHET[0]risingedge)

OR(SHIFTcondition==11ANDHET[0]fallingedge)

{

If([P3:P2]==00)

{

If((ImmediateDataField==all0’sAND[P3:P0]==000X)

OR(ImmediateDataField==all1’sAND[P3:P0]==001X))

{

Z=1;

}

else

{

Z=0;

}

890

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

}

elseIf([P3:P0]==1010)

{

Z=LSBoftheImmediateDataField;

}

elseif([P3:P0]==1011)

{

Z=MSBoftheImmediateDataField;

}

}

If((ImmediateDataField==all0’s)OR

(ImmediateDataField==all1’s))

{

if(InterruptEnable==1)

{

HETFLG[n]=1;/*ndependsonaddress*/

}

JumptoConditionalAddress;

}

else

{

JumptoNextProgramAddress;

}

Prv.bit=HET[0]Pinlevel;(Alwaysexecuted)

ShiftImmediateDataFieldonceaccordingtoP[3:0];

ImmediateDataField=Resultoftheshift;

Selectedregister=Resultoftheshift;

JumptoNextProgramAddress;

NOTE:Theimmediatedatafieldevaluatesall0sorall1sandisperformedbeforetheshift

operation.

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

891

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.23WCAP(SoftwareCaptureWord)

Syntax

WCAP{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[hr_lr={HIGH|LOW}]

[control={OFF|ON}]

[prv={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}]

pin={pinnumber}

event={NOCOND|FALL|RISE|BOTH}

reg={A|B|R|S|T|NONE}

[irq={OFF|ON}]

[data={25-bitunsignedinteger]

[hr_data={7-bitunsignedinteger}]

}

Figure20-145.WCAPProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

7

0

0

Request

BRK

Nextprogramaddress

1011

hr_lr

Reserved

Number

6

3

1

9

4

1

8

Figure20-146.WCAPControlField(C31:C0)

31

29

28

27

26

25

24

22

21

16

Reserved

Requesttype

Control

Prv.

Reserved

Conditionaladdress

3

2

1

1

3

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Capture

Reserved

Registerselect

Int.

Reg

condition

ena

9

5

1

2

2

2

1

Figure20-147.WCAPDataField(D31:D0)

31

7

6

0

Data

HRData

25

7

Cycles

One

Registermodified

None

Description

Thisinstructioncapturestheselectedregisterintothedatafieldifthespecified

captureconditionistrueontheselectedpin.Thisinstructioncanbeusedwith

allpins.

Ifthehr_lrbitisreset,theWCAPinstructionwillcaptureanHRtimestamp

intothedatafieldontheselectededgecondition.Ifthehr_lrbitisset,theHR

captureisignored.

892

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

event

Specifiestheeventthattriggersthecapture.

Table20-72.EventEncodingFormatforWCAP

C6

C5

CaptureCondition

0

0

Always

0

1

Captureonfallingedge

1

0

Captureonrisingedge

1

1

Captureonrisingandfallingedge

irq

ONgeneratesaninterruptwhenthecaptureconditionismet.No

interruptisgeneratedforOFF.

Default:OFF.

data

Specifiesthe25-bitintegervaluetobewrittentothedatafieldor

selectedregister.

hr_data

HRcapturevalue.

Default:0.

NOTE:WCAPinHRMode:TheHRCounterstartsonaWCAPinstructionexecution(inthefirst

loopclock)andwillsynchronizetothenextloopclock.WhenN2HETisturnedonanda

captureedgeoccursinthefirstloopclock(wheretheHRcounterhasn’tbeensynchronized

totheloopclock),thenthecapturedHRcountervalueiswrongandisofnouse.Sothe

capturedHRdatainthefirstloopclockshouldbeignored.

Execution

If(SpecifiedCaptureConditionistrueonSelectedPin

ORUnconditionalcaptureisselected)

{

ImmediateDataField=Selectedregistervalue;

If(hr_lrbit==0)CapturetheHRvalueinImmediateHRDataField;

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

JumptoConditionalAddress;

}

JumptoNextProgramAddress;

Prvbit=CurrentLogic(Lx)valueofselectedpin;(alwaysexecuted)

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

893

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






InstructionSetwww.ti.com

20.5.3.24WCAPE(SoftwareCaptureWordandEventCount)

Syntax

WCAPE{

[brk={OFF|ON}]

[next={label|9-bitunsignedinteger}]

[reqnum={3-bitunsignedinteger}

[request={NOREQ|GENREQ|QUIET}]

[control={OFF|ON}]

[prv={OFF|ON}]

[cond_addr={label|9-bitunsignedinteger}

pin={pinnumber}

event={NOCOND|FALL|RISE|BOTH}

[reg={A|B|R|S|T|NONE}]

[irq={OFF|ON}]

[ts_data={25-bitunsignedinteger]

[ec_data={7-bitunsignedinteger}]

}

Figure20-148.WCAPEProgramField(P31:P0)

31

26

25

23

22

21

13

12

9

8

0

0

Request

BRK

Nextprogramaddress

1000

Reserved

Number

6

3

1

9

4

9

Figure20-149.WCAPEControlField(C31:C0)

31

29

28

27

26

25

24

23

22

21

16

Reserved

Requesttype

Control

Prv.

Reserved

Conditionaladdress

3

2

1

1

3

9

15

13

12

8

7

6

5

4

3

2

1

0

Conditionaladdress

Pinselect

Ext

Capture

Reserved

Registerselect

Int.

Reg

condition

ena

9

5

1

2

2

2

1

Figure20-150.WCAPEDataField(D31:D0)

31

7

6

0

TimeStamp

EdgeCounter

25

7

Cycles

One

Registermodified

None

Description

Thisinstructioncapturestheselectedregisterintothedatafield[D31:D7]and

incrementsaneventcounter[D6:D0]ifthespecifiedcaptureconditionistrue

ontheselectedpin.Thisinstructioncanbeusedwithallpins,butthetime

stamp[D31:D7]hasloopresolutiononly.

894

High-EndTimer(N2HET)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInstructionSet

event

Specifiestheeventthattriggersthecapture.

Table20-73.EventEncodingFormatforWCAPE

C6

C5

CaptureCondition

0

0

Always

0

1

Captureonfallingedge

1

0

Captureonrisingedge

1

1

Captureonrisingandfallingedge

irq

ONgeneratesaninterruptwhenthecaptureconditionismet.No

interruptisgeneratedforOFF.

Default:OFF.

ts_data

Specifiesthe25-bitintegervaluefor[D31:D7]

Default:0.

ec_data

Specifiestheinitial7-bitintegervaluefor[D6:D0].

Default:0.

Execution

If(SpecifiedCaptureConditionistrueonSelectedPin

ORUnconditionalcaptureisselected)

{

ImmediateDataField[31:7]=Selectedregistervalue;

ImmediateDataField[6:0]=ImmediateDataField[6:0]+1;

If(InterruptEnable==1)HETFLG[n]=1;/*ndependsonaddress*/

If([C28:C27]==01)Generaterequestonrequestline[P25:P23];

If([C28:C27]==11)Generatequietrequestonrequestline[P25:P23];

JumptoConditionalAddress;

}

JumptoNextProgramAddress;

Prvbit=CurrentLogic(Lx)valueofselectedpin;(alwaysexecuted)

Thespecificinterruptflagthatistriggereddependsontheaddressfromwhichtheinstructionisexecuted,

seeSection20.2.7.

895

SPNU499B–November2012–RevisedAugust2013

High-EndTimer(N2HET)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter21

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

Thischapterdescribesthehigh-endtimertransferunit(HTU)module.TheHTUissimilartotheDMA

(DirectMemoryAccess)module,butitisspecializedtotransferNHET(HighEndTimer)datatoorfrom

themicrocontrollerRAM.

NOTE:ThischapterdescribesasupersetimplementationoftheHTUmodulethatincludesfeatures

andfunctionalitythatrequireDMA.SincenotalldeviceshaveDMAcapability,consultyour

device-specificdatasheettodetermineapplicabilityofthesefeaturesandfunctionstoyour

devicebeingused.

Topic...........................................................................................................................Page

21.1Overview........................................................................................................897

21.2ModuleOperation............................................................................................898

21.3UseCases......................................................................................................911

21.4ControlRegisters............................................................................................914

21.5DoubleControlPacketConfigurationMemory....................................................939

21.6Examples........................................................................................................946

896

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOverview

21.1Overview

TheHETtransferunitisadedicateddirectmemoryaccesscontrollerwhichtransfersdatabetweenthe

NHETRAMandRAMbufferslocatedinthemainmemoryaddressrange.Thiseliminatestimeconsuming

CPUaccessestotheNHETRAMtogathermeasurementdataorcreatingoutputwaveformsandthus

freeinguptheCPUtoperformothertasks.

21.1.1Features

•IndependentlytransfersdatabetweentheNHETandthemainmemory

•8doublecontrolpacketssupportingdualbufferconfiguration

•TransferrequestsgeneratedbyNHETinstructions/events

•Oneshot,circularandautoswitchbuffertransfermodesforeachdoublecontrolpacketforflexible

bufferhandling

•Constantandpost-incrementaddressingmodes

•32-or64-bittransactions

•Programmablememoryprotectionregion

•ParityprotectcontrolpacketRAM

•Extensivediagnosticfunctionality

897

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




RAM0SlavePortMasterPortRAM1Cortex-R4SCR2SCRHTUNHETPeripheral Bus

Main DatapathMain Datapath



ModuleOperationwww.ti.com

21.2ModuleOperation

TheHTUistightlycoupledtotheNHETandisnotintendedtotransferdatafromotherperipheral

modules.ItinitiatestransferswiththehelpofrequestsgeneratedbytheNHETprogramandconfigurable

controlpackets.Figure21-1showsasystemblockdiagramoftheHTUandthemainpathforthedata

transfer.ThetightcouplingandthededicatedbusintotheSCR(SwitchedCentralResource)reducesthe

amountofdatatransferredontheperipheralbus,whichincreasestheoverallsystemperformance.

HoweveriftheapplicationdecidestousethedirectCPUaccessmethodtotheNHETRAM,itisfreetodo

so.

Figure21-2showsamoredetailedblockdiagramoftheHTUmodule.

Figure21-1.SystemBlockDiagram

898

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Element1

Element2Frame 1

Element3

Element4Frame 2

Element5

Element6Frame 3

Element7

Element8Frame 4

HTUREQ

HTUREQ

HTUREQ

HTUREQElement Count =2Frame count =4

Control

MemoryProtection

FIFO

HTUNHETDataDataAddressNormalRequestQuietRequest

88

Control PacketRAMwith ParitySCR2



www.ti.comModuleOperation

Figure21-2.HTUBlockDiagram

TransfersbetweenNHETRAMandthemainmemoryaretriggeredby8differentnormalNHETrequests.

QuietrequestsareusedforspecificcasesandarediscussedinSection21.2.4.1.Controlpackets,which

storethesourceanddestinationaddresses,thetransfercountandotherinformation(seeSection21.5),

areassociatedwiththerequests.AFIFOdecouplestheread-andwrite-pathandallowstododata-

packinginthecaseofdifferentread-andwrite-datasizes.Theapplicationcanspecifyasectionof

memoryintoorfromwhichthedataistransferred.Thisservesasmemoryprotectioninthecasethat

informationinthecontrolpacketRAMwasunintentionallyalteredandavoidsthattheHTUcanoverwrite

importantapplicationdata.

Controlpacketsareimplementedasdoublecontrolpackets(DCP)whichallowtospecifytwobuffersfor

thedatatransfer.ThisenablestheCPUtoworkwithonebuffer,whilenewdataistransferredto/fromthe

otherbuffer.

Thecontrolpacketdefines:

•thestartaddressofthesource/destinationbuffers

•theNHETinstructionaddresslocation

•howmanyelementsneedtobetransferred

•thebufferhandling

Atransferistriggeredwhenacertaincondition(forexample,capture,comparecondition)isdetectedbya

NHETinstruction.TheNHETinstructionspecifieswhichrequestlinetotheHTUwillbetriggeredatthe

event.TheDCPshaveafixedassignmenttotherequestlinesandthecorrespondingassignmentcanbe

foundinthedevicedatasheet.Oncearequestistriggered,itstartsaframetransfer.Aframecancontain

oneormoreelements.Elementsaredefinedas32-bitor64-bitwordsofdata.

Figure21-3.ExampleofaHTUTransfer

899

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

21.2.1DataTransfersbetweenMainRAMandNHETRAM

21.2.1.1AddressingModes

TheaddressingmodesofacontrolpacketneedtobedistinguishedbetweenthemainRAMoftheCPU

andtheNHETRAM.

MainRAM

Foreachdoublecontrolpacket(seeSection21.2.1.3)theaddressingmodeforthemainRAM(RAM0/1)

canbeconfiguredtoconstantorpost-incrementmodeinregisterIHADDRCT.

•ConstantAddressing:Inconstantmode,theHTUwrites/readsthedatato/fromthesameaddressin

themainRAM.

•Post-incrementAddressing:Inpost-incrementmode,theHTUwrites/readsthedatato/fromthemain

RAMbyincrementingthroughtheaddressesaftereachtransfer.If32-bittransfersareselecteditwill

automaticallyincrementby4Byte,if64-bittransfersareselected,itwillincrementby8Byte.The

examplesofUseCasesillustratethepost-incrementmode,wheretheelementsofconsecutiveframes

aretransferredto/fromconsecutivelocationsinthemainRAMbuffer.

NHETRAM

HowaDCPaddressestheNHETRAMisdeterminedbytheinitialNHETaddress,theinitialelement

counter(IETCOUNT)andtheNHETaddressingmode(ADDMH).ThemaindifferencetothemainRAM

addressingmodeisthattheHETaddressisresettotheinitialHETaddressforeveryfirstelementofa

frame.Toimplementconstantaddressing,theinitialelementcounterneedstobesetto1.Post-increment

addressingisselectedbyprogrammingtheinitialelementcountertoavalueotherthan1.

21.2.1.2SingleBufferImplementation

Inasinglebufferimplementation,theDCPissetuptotransferdatato/fromasinglebufferinthemain

RAM.Witheachtransferrequest,theprogrammednumberofelementsistransferredandthebuffer

pointerisresettoitsstartingaddressaftertheprogrammednumberofframetransfershavecompleted.

Figure21-4showstherequestononerequestlineoftheHTUandtheframerunningontheassigned

controlpacketvisualizedbytheelementcounter.Inthediagram,theframehas5elementtransfers

(elementcount=5).

900

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1 BufferX5   4   3   2   11   2   3   4   5XX

15

14

13

12

11

10

9

8

15

15

15

15

15

15

7

6

5

4

3

2

1

TU request (1)Element CounterElement Number

t1t2IncreasingAddressMemory View5   4   3   2   16789105   4   3   2   11112131415



www.ti.comModuleOperation

Figure21-4.SingleBufferTimingandMemoryRepresentation

Beforetheapplicationreadsthebuffer,ithastodisablethecontrolpackettoavoidthatnewdata

overwritesthebufferwhileit'sbeingaccessedbytheapplication.Regardlessofthecontrolpacketbeing

disabledatt1ort2thelastframewillalwaysbecompleted,sincethetriggerrequesthasbeenreceived

already.TheapplicationcandetermineanyongoingtransfersbytheTIPFflagandtheNACPbits.

•OneShotBufferMode:IfTMBAorTMBBissettooneshotbuffermodethenthedatastreamwill

stopafterallelementsofbufferAorbufferBhavebeentransferred.Thismeansthatthe

correspondingDCPwillbedisabledafterthelastframewastransferredto/frombufferAorBand

CFTCTAorCFTCTBdecrementstozero.

•CircularBufferMode:IfTMBAorTMBBissettocircularbuffermode,thenthedatastreamwill

continuebackatthestartofbufferAorBafterallelementsofbufferAorBhavebeentransferred.The

exampleofTimingExampleforCircularBufferModeassumesIETCOUNT=3(InitialElementTransfer

Count),IFTCOUNT=3(InitialFrameTransferCount,SIZE=0(SizeofTransfer=32-bit)andADDFM=0

(AddressingModeMainMemory=PostIncrement).Sothereareintotal932-bitvaluesinthebuffer.It

alsoassumesIFADDRx=10h."U"meansuninitialized.

901

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




framecounterCFTCTxelementcounterrequest

2

1bufferlocation

UfulladdressCFADDRx

1Ch

28h

0

2

1

34h

1Ch

28h

Ubusybit

bufferfullflagBFINTFL

framecounterCFTCTxelementcounterrequest

1bufferlocation

fulladdressCFADDRx

busybit

bufferfullflagBFINTFL

3

2

1

10h

14h

18h

3

2

1

1Ch

20h

24h

3

2

1

28h

2Ch

30h

3

2

1

10h

14h

18h

3

2

1

1Ch

20h

24h

3

2

1

28h

2Ch

30h

end ofbufferend ofbuffer



ModuleOperationwww.ti.com

Figure21-5.TimingExampleforCircularBufferMode

21.2.1.3DualBufferImplementation

Thetransferunitprovidesdoublecontrolpackets(DCPs)supportingtheuseoftwobuffersperdata

stream(perHTUrequestsource).IfonebuffershouldbereadbytheCPUorDMA,thedatastreamis

directedtotheotherbufferandthefirstbufferisfrozen.Switchingtotheotherbuffercanbetriggeredwith

awriteaccesstotheCPENAregisterorwiththeDCPconfiguredtoautomaticallyswitchtotheother

bufferwhentheprogrammednumberofframeshasbeentransmitted.Freezingthebufferavoidsthis

buffertobeoverwrittenwithnewHETdatawhiletheCPUorDMAreadsthisbuffer.

Figure21-6showsatimingexampleoftwoHETinstructions1and2,whicharetherequestsourcesfor

theHTU(andarecontrolledbyDCP1andDCP2).Eachgeneratedframehas5elementtransfers.

Requestsource1hastwoRAMbuffers,controlledbytwocontrolpackets1Aand1B.Requestsource2

hastwoRAMbuffers,controlledbytwocontrolpackets2Aand2B.

902

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MemoryViewforDCP-1A/BIncreasingAddress

Buffer1AIncreasingAddress

Buffer 1A

Buffer1B

Switch

t1

TUrequest(1)

X

XX

X

ElementCounter1A

5

4

3

2

1

5

4

3

2

1

ElementCounter1B

5

4

3

2

1

5

4

3

2

1

ElementNumber

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

TUrequest(2)

X

XX

X

ElementCounter2A

5

4

3

2

1

5

4

3

2

1

ElementCounter2B

5

4

3

2

1

5

4

3

2

1

ElementNumber

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

t2

t3

10

9

8

7

6

5

4

3

2

1

10

9

8

7

6

5

4

3

2

1

20

19

18

17

16

15

14

13

12

11



www.ti.comModuleOperation

Figure21-6.DualBufferTiming

Figure21-6showsaswitchattimet1,wherebuffer1Aisfrozenanddatastream1isdirectedtobuffer

1B,butonlyaftertheframehasbeencompleted.Italsoshowsthetime(t2ort3)where2Aisfrozenand

datastream2isdirectedtobuffer2B.Iftheswitchhappensbetweentherequestandthestartofthe

frame(forexample,timet3),thentheframeisprocessedbythenewcontrolpacket(althoughtheold

controlpacketwasactiveatthetimeoftherequest).ThedelaysbetweentheHTUrequestsandthestart

oftheelementtransfersresultfromthefactthattheHTUcanprocessonlyonetransferatatime.

AutoSwitchBufferMode

IfTMBAissettoautoswitchmode,thenthedatastreamwillcontinueatthestartofbufferBafterall

elementsofbufferAhavebeentransferred.ThismeansthatintheCPENAregister,CPAisdisabledand

CPBisenabledautomaticallyandbufferBusesitsinitialmainmemoryaddressandinitialframecounter

tostart.ThesameprincipleisvalidforTMBBandbufferB.

903

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




elementcounterrequest

2

1bufferlocation

U

1Ch

28h

0

34h

Ubusybit

bufferlocation

U

2

1

U

4Ch

58h

busybit

064h

autoswitchautoswitch

3

2

1

10h

14h

18h

3

2

1

1Ch

20h

24h

3

2

1

28h

2Ch

30h

3

2

1

3

2

1

3

2

1

frame counterCFTCTBfull addressCFADDRBbuffer full flagBFINTFLframe counterCFTCTAfull addressCFADDRA

40h

44h

48h

4Ch

50h

54h

58h

5Ch

60h



ModuleOperationwww.ti.com

TheexamplesofFigure21-7assumesIETCOUNT=3(InitialElementTransferCount),IFTCOUNT=3

(InitialFrameTransferCount,SIZE=0(SizeofTransfer=32-bit)andADDFM=0(AddressingModeMain

Memory=PostIncrement).Sothereareintotal932-bitvaluesinbufferAandB.Italsoassumes

IFADDRB=10handIFADDRA=40h."U"meansuninitialized.

Figure21-7.TimingExampleforAutoSwitchBufferMode

21.2.1.4GeneralControlPacketBehavior

Theactiondefinedbytheselectedmodewillbeperformedattheendofthelastframe,whichhasthe

framecountervalueof1.TheoneshotandautoswitchmodewillautomaticallyupdatetheCPENA

registeratthistime.Note,thatforallthreemodeslistedabove,itispossibletoswitchtotheotherbuffer

bywritingtoCPENAbeforetheendofthecurrentbufferisreached.

IfawriteaccesstoCPENAhappenswhilethelastframeofDCPx(withframecounter=1)istransferred

thenthepriorityisdefinedbyTable21-1.

Table21-1.CPENA/TMBxPriorityRules

WriteaccesstoCPENAbits(2*x+1)and(2*x)duringthe

PriorityRule

framewithframecounter=1((1))

Disable:

DisablingtheDCPbythewritetoCPENAhaspriority,TMBxis

01-->00or

ignored.

10-->00

Stay:

ThewriteaccesstoCPENAisignored,TMBxhaspriorityand

01-->01or

definestheaction.

10-->10

Switch:

SwitchingtheDCPbythewritetoCPENAhaspriority,TMBxis

01-->10or

ignored.

10-->01

(1)SeereadtableofCPENAregister

904

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Frame StartDCPDisableRequestBusy Bit



www.ti.comModuleOperation

TherecouldbeacasewheretheCPUwantstodomainmemoryoperations,butdoesnotwanttheHTU

modifyingthemainmemory.Itcouldhappenthatarequestwasalreadyactive,buttheframetransfer

hasn'tstartedyetwhentheapplicationdisabledthecontrolpackets.ThetimingdiagraminFigure21-8

showsthisscenario.

Figure21-8.TimingforDisablingControlPackets

SincetherequestforthetransferwasalreadyreceivedbeforetheDCPxisdisabled,theHTUwillstillstart

theframetransfer.TheapplicationwouldpolltheBUSYxbitduringthetimetheDCPxwasdisabledand

beforetheframewasstartedandwouldreadanon-busyinformation.Itthenwouldstartthemainmemory

operationsthinkingalltransfershavecompleted,howeveraftersometimetheHTUwillstartthe

outstandingframetransferandcorruptthemainmemory.

Toavoidthis,theapplicationcansettheVBUSHOLDbittodisablealltransactionsbetweentheHTUand

themainmemory.IthastopolltheBUSBUSYbittoensurethatnooutstandingtransactionsonthebus

arepending.TheHTUwillstillreceivealltransferrequestsfromtheNHET,butitwillnotbeableto

transferanydatatoorfromthemainmemory,whiletheVBUSHOLDbitisset.

21.2.2ArbitrationofHTUElementsandFrames

•Framesdonotinterrupteachother.IfarequestoccursonDCPxwhileanotherframerunsonDCPy

(andx≠y),thenthecurrentframecompletesbeforethenewframestarts.

•Iftwoormorerequestlinesareactive,therequestlinewiththelowernumber(specifiedintherequest

numberfieldofthecorrespondingNHETinstruction)isservicedfirst.

21.2.3ConditionsforFrameTransferInterruption

IfaframeiscurrentlytransferredonDCPxandoneoftheeventslistedbelowhappens,thentheevent

will(1.)cleartheelementcounterofDCPx,(2.)stopnewelementtransfersonDCPx(3.)cleartheactive

busybitofDCPxand(4.)disableDCPxintheCPENAregister.TheDCPsotherthanDCPxwillnotbe

affected.

•RequestLostErrorofDCPx(withCORLbitsettozero).

•ParityErrorofDCPx(withparitycheckenabledandCOPEbitsettozero).SeealsoSection21.2.6.

•BusErrorofDCPx.

•MemoryProtectionErrorofDCPx(withmemoryprotectionenabled).SeealsoSection21.2.5.

•WritingaonetoaBUSYbit(belongingtoDCPx)ifthatbitisone.ThereisnoeffectiftheBUSYbitis

zero.

•WritingaonetotheHTURESbit.

Whenamemoryprotectionerroroccurs,theaccesstotheprotectedaddressisblocked.Theframeis

stoppedbeforetheelement,whichcausedtheviolationtransfer,starts.Allothererrorswillletthecurrent

elementtransferfinish.

IncaseoftheRequestLostandBusError,onemoreelementtransfergoesonthebus,beforetheframe

isactuallystopped.Accordingly,thebusybitisclearedaftertheelement,whichfollowstheelementthat

causedtheerror.

IncaseoftheBusError,thecounterfortheelement,whichfollowstheelementthatcausedtheerror,is

capturedtotheERRETCregisterfield.

905

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




5432154321543215432112543211234TU request  (1)Element CounterTU request  (2)Element CounterTU request  (3)ElementCounter543215432154321123-L4

3-L



ModuleOperationwww.ti.com

NOTE:IftheHTUENbitisclearedduringaframeistransferred,thentheframewillbecompleted

beforetheHTUisdisabled.

21.2.4HTUOverloadandRequestLostDetection

IfthenumberofdifferentHTUrequestsourcesis"high",theperiodbetweentherequestsis"short"and/or

theinitialelementcountervaluesare"big",thentheHTUcouldgetintoaoverloadsituation.InFigure21-

9,allrequestsmarkedwith"L"arelost,sincetheirframeisnotcompletedatthetimethenextrequest

occurs.Eachnumberintherows"TUrequest(x)"representsatime,wheretheassociatedNHET

instructiongeneratesarequestonDCPx.ThearrowsinFigure21-9pointtotheassociatedframe,which

couldbedelayedcomparedtotherequest.Thedelaysarecausedbydifferentframes,whicharecurrently

processed.ThefigureassumesthattheCORLbitintheRLBECTRLregisterisset,whichcausestheDCP

tostayenabledandletthedatastreamcontinueafterarequestlosterroroccurredontheDCP(see3-L

forTUrequest(2)).

Figure21-9.TimingExampleIncludingLostRequests

LostrequestsaresignaledwiththeRLOSTFLregister,andifenabled,cangeneraterequestlost

interrupts.

IftheCORLbitisset,aframewillbecompletedandthecorrespondingDCPstaysenabledevenifa

requestlostwasgeneratedduringthisframe.

Indualbuffermode,therequestlostdetectionworkscontinuously,independentoftheCPswitches.

21.2.4.1RequestsandQuietRequests

InadditiontogeneratingtoomanytransferrequestsandthusoverloadingtheHTUandnotbeingableto

transferdataatall,itcanhappenthatinconsistentdataistransferred.Thefollowingexamplesillustrate

suchscenarios.

Intheexamplesbelow,theHTUreadsaframeofthreeelementsfromthedatafieldofthreedifferent

instructions.InFigure21-10,theL3-InstructiongeneratestheHTUrequestattimet2,t7,etc.andthe

accordingframe(att3).TheframeisdelayedbecauseoftheHTUload.However,asshowninFigure21-

10,thedelaystillallowstheframetocompletebeforethedatafieldofinstructionL1isupdatedagain.

However,whenthedelayislonger(asshowninFigure21-11),thentheframecouldfallintotheNHET

loop(LRP),inwhichtheNHETupdatesthedatafieldsoftheL1,L2andL3instructions.Inthiscase,the

HTUcouldreadinconsistentdataasshowninthediagram.Awrong(new)valueisreadfromL1(attime

t3),butcorrect("old")valuesarereadfromL2andL3(attimest4andt5).

906

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Signal

L1_Instr_DF[31:7]36L2_Instr_DF[31:7]12L3_Instr_DF[31:7]23

DelaycausedbyTUload

t1t2

LRP

Frame

Request

t3t4t5t6t7

Request

Quiet Request

QuietRequest

Signal

L1_Instr_DF[31:7]36L2_Instr_DF[31:7]12L3_Instr_DF[31:7]2

t1t2

LRP

Frame

3

Request

t3t4t5t6

Request

LRP

t7Delay caused byTU load

QuietRequest

QuietRequest



www.ti.comModuleOperation

Figure21-10.TimingwhichGeneratesNoRequestLostError

Figure21-11.TimingwhichGeneratesaRequestLostError

Toensureconsistentdata,theNHETinstructionsareabletogenerateaquietrequest,whichdoesnot

originateatransferbutisonlyusedbytheHTUforconsistencycheck.Ifaframehasnotcompletedsince

thelastrequest(orhasnotevenstarted)atthetimethequietrequestoccurs,thentheHTUsignalsa

requestlosterror.Allinstructions,whichallowtogeneratearequestcanbeconfiguredtogenerateaquiet

requestinstead.SointheexamplesofFigure21-10andFigure21-11,instructionL1shouldbeconfigured

togenerateaquietrequestandinstructionL3togenerateanormalrequest.InthecaseofFigure21-11,

thecorrespondingbitintheRLOSTFLregisterwillbeset.

ItistheresponsibilityoftheNHETsoftwaretoenableaquietrequestforthefirstinstructionofan

instructionblock,whichisaddressedbyDCPx,andtoenableanormalrequestonlyforthelast

instructionofthisblock.Sinceenablingthequietrequestshouldenableaproperrequestlostdetectionfor

DCPx,bothNHETinstructionsneedtospecifythesameDCPx(reqnum=x).

ThecontrolfieldsoftheHETinstructionsprovidea2-bitfieldtoconfigureoneofthefollowingpossibilities

(asshowninTable21-2).A3-bitfieldintheprogramfieldwillselectwhichofthe8DoubleControl

Packetswillbetriggeredbytherequest.

Table21-2.TriggeredControlPackets

RequestTypeBit1

RequestTypeBit0

RequestNumber

Don'tcare

0

Norequest

Specifynumber0,1,...or7,whichselects

0

1

Generatenormalrequest

theHTUorDMArequestline

1

1

Generatequietrequest

907

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PinCC6

L00-CNT-DF2021222324L01-WCAP-DF22L02-WCAP-DF2124

LRPR

QRQR

OK

RL

e1e2

RL

OK

TUDelayFramer(n)f(n)f(n-1)

R

RL

e1e2

RL

r(n+1)



ModuleOperationwww.ti.com

InthecaseofverylightHTUload,buthighersignalrequirements(forexample,highfrequency),thequiet

requestcouldalsobeusedtodefineperiodsinwhichthedatareadbyacontrolpacketissafe.The

followingHETcodewillcapturecountertimestampstotheL1-WCAPdatafieldafterrisingedges(atpin

CC6)andtotheL2-WCAPdatafieldafterfallingedges(atpinCC6):

L0CNT{reg=A,max=0x1FFFFFF}

L1WCAP{reqnum=3,request=GENREQ,event=RISE,reg=A,pin=CC6}

L2WCAP{reqnum=3,request=QUIET,event=FALL,reg=A,pin=CC7}

;HETHRSHAREfeatureconfiguredtoassignbothWCAPstopinCC6

Figure21-12.TimingExampleforTwoWCAPInstructions

TheHTUframewillhavetwoelements:Thefirstgivesthetimestampoftherisingedger(n)andthe

secondgivesthetimestampofthepreviousfallingedgef(n-1).Usingthecodeabove,requests(R)and

thequietrequests(QR)willoccuratthetimesshowninFigure21-12,andarequestlostwillonlybe

signaledwhentheframemakesanaccessduringthetimesmarkedwithRL.Soreading[22,21]asframe

elementsiscorrect.Ifthesignalfrequencywouldincrease,thenawrongpair[22,24]couldberead,but

thiswillbesignaledbyarequestlosterrorsinceatleaste2fallsintotheRLperiod.

21.2.5MemoryProtection

Thisfeatureallowsrestrictingaccessestocertainareasinmemoryinordertoprotectcriticalapplication

datafromunintentionallybeingmanipulatedbytheHTU.

IftheHTUmemoryprotectionfeatureisdisabled,thefull4GBaddressrangecanbeaccessedbythe

HTUwithoutexception.Therearetwomemoryregionswhichstartandendaddressescanbeconfigured.

Withthememoryprotectionfeatureenabled,readandwriteaccessesbytheHTUinsidethedefined

regionsareallowed.Foraccessesoutsidetheregions,oneoftwomodesisconfigurable:

•AnyaccessperformedbytheHTUisforbiddenandwillbesignaledtotheESMmodule.Write

accesseswillbeblocked.

•ReadaccessisallowedbutwriteaccesswillbeblockedandsignaledtotheESMmodule.

Touseoneregiononly,REG01ENAmustbezero.BitsACCR01,INTENA01,andregistersettingsof

MP1S,andMP1Ewillbeignored.

Tousebothregions,therulesbelowmustbefollowed:

1.Memorymappedregion0coversalowermemoryareaasMemorymappedregion1.

2.REG01ENAisaoneandREG0ENAisazero.

3.ACCR01issetforthedesiredaccesstype,ACCR0isignored.

4.INTENA01issetforthedesiredaction,INTENA0isignored.

908

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

IfanelementtransferofDCPxgeneratesamemoryprotectionerror,then:

1.TheelementcounterofDCPxiscleared.

2.AllnewelementtransfersonDCPxarestopped.

3.TheactivebusybitofDCPxiscleared.

4.DCPxisdisabledintheCPENAregister.TheDCPsotherthanDCPxwillnotbeaffected.

5.TheFTflagwillbeset.

6.AnerrorissignaledtotheESMmodule.

21.2.6ControlPacketRAMParityChecking

TheHTUmodulecandetectparityerrorsintheDCP(DoubleControlPacket)RAM.DCPRAMparity

checkingisimplementedusingoneparitybitperbyte.Evenoroddparitycheckingcanbeselectedinthe

DEVCR1registerofthesystemmoduleandcanbeenabled/disabledbya4-bitkeyinthePCRregister.

DuringareadaccesstotheDCPRAM,theparityiscalculatedbasedonthedatareadfromtheRAMand

comparedwiththegoodparityvaluestoredintheparitybits.TheparitycheckisperformedwhentheHTU

oranyothermaster(forexample,CPU)makesareadaccesstotheDCPRAM.Areadaccesswithinthe

RAMsectionofaninitialorcurrentDCPchecksall16bytesoftheDCPatatime(seealsoDCPmemory

map).Forexample,ifabytereadaccesshappensforDCPRAMaddress0,butthereisaparityerrorat

byteaddressChthentheparityerrorwilloccurandthecapturedparityaddresswillbeChandnot0.The

addressofthebyteinwhichtheerroroccurredcanbereadfromthePARregister.IfsuccessiveDCP

RAMreadaccessesgeneratemultipleparityerrors,onlytheaddressofthefirstdetectederrorwillbe

capturedandthePARregisterwillnotbeupdatedbysubsequenterrorsuntilitisreadbytheapplication.

Whenmultipleerrorsina16bytewordaredetected,onlytheaddressofthelowestbytewillbecaptured.

Theapplicationcandecidewhethertostopanytransferswhenaparityerrorisdetectedortocontinue

transferringdata.IftheCOPE(ContinueOnParityError)bitiszeroandparitycheckingisenabled,then

theHTUwillnotstarttheframeandthecorrespondingDCPwillbeautomaticallydisabledintheCPENA

register.IfamasterotherthantheHTU(forexample,CPU)readstheRAMsectionofDCPxandaparity

errorisdetectedduringthisreadaccess,whiletheparitycheckisenabledandtheCOPEbitiszero,then

theDCPxwillbeautomaticallydisabledintheCPENAregister.IfaframeforthisDCPxisongoingduring

thisreadaccess,theninadditiontheelementcounterofDCPxiscleared,allnewelementtransferson

DCPxarestoppedandtheactivebusybitofDCPxiscleared.WithCOPEsettooneandtheparity

checkenabled,theparitycheckingwillstillbeperformed,butthedatatransferofanactiveDCPcontinues

afteraparityerrorwasdetectedforthisDCP.SoneithertheDCPwiththeparityerrorwillbedisablednor

theframewillbestopped.

AfteraDCPisenabled(withCPENAusingBIM=0),thenatthestartofthefirstframe,theHTUperforms

theparitycheckonlyontheinitialDCP,sinceitdoesnotneedthecurrentDCPinformation.Forfurther

frames,theHTUperformstheparitycheckforbothinitialandcurrentDCP,sinceitneedsboth

information.

Onaparityerrordetection,anerrorwillalsobesignaledtotheESMmodule.

909

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

21.2.6.1ParityBitMappingandTesting

Totesttheparitycheckingmechanism,theparityRAMcanbemadeaccessibleinordertoallowmanual

faultinsertion.OncetheTESTbitisset,theparitybitsaremappedtoaddressFF4E0200h.

Whenintestmode(theparityRAMisaccessible),noparitycheckingwillbedonewhenreadingfrom

parityRAM,butparitycheckingwillstillbeperformedforreadaccessestotheDCPRAM.

Table21-3andTable21-4showhowthecorrespondingparitybitsoftheDCPRAMbytesaremapped

intothememory.

Table21-3.DCPRAM

Bit

31

24

23

16

15

8

7

0

FF4E0000h

Byte0

Byte1

Byte2

Byte3

FF4E0004h

Byte4

Byte5

Byte6

Byte7

FF4E0008h

Byte8

Byte9

Byte10

Byte11

FF4E000Ch

Byte12

Byte13

Byte14

Byte15

Table21-4.DCPParityRAM

Bit

24

16

8

0

FF4E0200h

P0

P1

P2

P3

FF4E0204h

P4

P5

P6

P7

FF4E0208h

P8

P9

P10

P11

FF4E020Ch

P12

P13

P14

P15

EachbyteinDCPRAMhasitsownparitybitintheDCPParityRAM.P0istheparitybitforbyte0,P1is

theparitybitforbyte1andsoon.

21.2.6.2InitializingParityBits

Afterdevicepowerup,theDCPRAMcontentincludingtheparitybitcannotbeguaranteed.Inorderto

avoidparityfailures,whenreadingDCPRAM,theRAMhastobeinitializedfirst.Thiscansimplybedone

bywritingknownvaluesintotheRAMbysoftwareandthecorrespondingparitybitwillbeautomatically

calculated.

AnotherpossibilitytoinitializetheDCPmemoryanditsparitybitsistousethesystemmodule,whichisan

on-chipmoduleexternaltotheHTU.ThismodulecanstarttheautomaticinitializationofallRAMsonthe

microcontrollerincludingtheHTUDCPRAM.ThisfunctioninitializesthecompleteDCPRAMto"0'when

activatedbythesystemmodule.Dependingontheeven/oddparityselection,allparitybitswillbe

calculatedaccordingly.TheHTUENbitmustbeclearedandtheparityfunctionalitymustbeenabled(by

PARITY_ENA)duringtheautomaticDCPRAMinitialization.IfHTUENisonewhentheinitializationis

triggeredbythesystemmodule,thentheinitializationwillnotbeperformedandtheHTUoperationisnot

affected.IfaoneiswrittentoHTUENduringtheinitialization,thentheHTUENbitwillbesetbuttheHTU

willnotbeenabledbeforetheinitializationcompletes.

910

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CNTWCAPECNTPCNT231262310343456789101112RequestRequestRequestQuietRequestQuietRequestQuietRequest



www.ti.comUseCases

21.3UseCases

21.3.1Example:SingleElementTransferwithOneTriggerRequest

ThisexampleconsidersthecasethattheHTUfillsaRAMbufferinthemain(CPU)dataRAM.TheHTU

readsfromtheinstructionwhichgeneratestheHTUrequests.

ThisexampleusesaPCNTinstruction.EverytimethePCNThascapturedanewpulseorperiodvalue,it

willautomaticallygenerateatransferrequesttotheHTU,whichthentransfersthevaluefromtheNHET

RAMtothebufferRAM.SoovertimeconsecutivelocationsintheRAMbuffercanbefilledwith

consecutivemeasurementvaluescapturedintotheNHETRAMdatafieldofthesamePCNTinstruction

withoutloadingorinterruptingtheCPU.

21.3.2Example:MultipleElementTransferwithOneTriggerRequest

ThefollowingexampleshowshowtheHTUcouldbeusedtofillaRAMbufferwithadatastreamincluding

differenttypesofmeasurementvaluesbelongingtothesameNHETinputsignal(ononepin):Timestamp

values(WCAP),edgecountervalues(ECNT)andlastperiodvalues(PCNT).

Figure21-13showsthetimingandTable21-5showsthebyteaddressesoftheprogram-(PF),control-

(CF),data-(DF)andreservedfield(res)oftheWCAP-ECNT-PCNTinstructionblock.Thetimingandcode

exampleassumesthatallthreeinstructionsareassignedtothesameNHETpin.

Figure21-13.TimingoftheWCAP,ECNT,PCNTExample

Table21-5.FieldAddressesoftheWCAP,ECNT,PCNTExample

PF

CF

DF

Res

WCAP

30h

34h

38h

3Ch

ECNT

40h

44h

48h

4Ch

PCNT

50h

54h

58h

5Ch

IntheHETcodetheHTUrequestisenabledonlyforthelastinstruction(PCNT)oftheWCAP-ECNT-

PCNTblock.WhenthePCNTconditionistrue,itwillcausethegeneratedHTUframetoperformthree

HTUelementreadsfromthedatafieldsofWCAP,ECNTandPCNT.

32-Bit-Transferofdatafields:

Thefollowingdiagramshowshowtheinternalelementcounter,framecounterandtheaddressregisters

changeovertimefortheexampledescribedabove.EverytimethePCNTinstructioncapturesanewvalue

itgeneratesarequesttotheHTU,whichstartsaframe.Attheendofeachframetheframecounter

decrements.

911

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






UseCaseswww.ti.com

Table21-6.32-Bit-TransferofDataFields(1)

FrameCounter

3

2

1

ElementCounter

3

2

1

3

2

1

3

2

1

SourceAddress(HET)

38h

48h

58h

38h

48h

58h

38h

48h

58h

DestinationAddress(mainCPU

70h

74h

78h

7Ch

80h

84h

88h

8Ch

90h

RAM)

(1)Thediagramshowsthebyteaddresses

ThedestinationbufferisfilledwiththeWCAP,ECNTandPCNTdatafieldvaluesasshownbelow.

Table21-7.DestinationBufferValues

Address

FrameCount

Instruction

Value

70h

3

WCAP

3

74h

3

ECNT

1

78h

3

PCNT

2

7Ch

2

WCAP

6

80h

2

ECNT

2

84h

2

PCNT

3

88h

1

WCAP

10

8Ch

1

ECNT

3

90h

1

PCNT

4

ThecorrespondingsetupoftheHTUcontrolpacketforthisexampleisasfollows:

IHADDR=0x38//pointstoWCAPdatafield

IFADDRA=0x70//pointstobuffer

ITCOUNT[framecount=3][elementcount=3]

IHADDRCT=[DIR:ReadHETandwritetofulladdress]

[SIZE:32bit]

[ADDMH:IncrementHETaddressby16bytes]

[ADDMF:Postincrementfulladdressmode]

[Anytransfermode]

21.3.3Example:64-Bit-TransferofControlFieldandDataFields

Thefollowingdiagramshowshowtheinternalelementcounter,framecounterandtheaddressregisters

changeovertimeassumingthesameexampleasinSection21.3.2,butnowwithatransfersizesetto64-

bit.TheHETaddressnowpointstothecontrolfieldoftheinstruction,soCFandDFaretransferredas64

bitdata.

Table21-8.64-Bit-TransferofControlFieldandDataFields(1)

FrameCounter

3

2

1

ElementCounter

3

2

1

3

2

1

3

2

1

HET(Source)Address

34h

44h

54h

34h

44h

54h

34h

44h

54h

Full(Destination)Address

70h

78h

80h

88h

90h

98h

A0h

A8h

B0h

(1)Thediagramshowsthebyteaddresses.

ThedestinationbufferisfilledwiththeWCAP,ECNTandPCNTcontrolanddatafieldvaluesasshownon

theright.

912

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comUseCases

Table21-9.DestinationBufferValues

Address

FrameCount

Instruction

Value

70h

3

WCAP

ControlFieldValue

74h

3

WCAP

3

78h

3

ECNT

ControlFieldValue

7Ch

3

ECNT

1

80h

3

PCNT

ControlFieldValue

84h

3

PCNT

2

88h

2

WCAP

ControlFieldValue

8Ch

2

WCAP

6

90h

2

ECNT

ControlFieldValue

94h

2

ECNT

2

98h

2

PCNT

ControlFieldValue

9Ch

2

PCNT

3

A0h

1

WCAP

ControlFieldValue

A4h

1

WCAP

10

A8h

1

ECNT

ControlFieldValue

ACh

1

ECNT

3

B0h

1

PCNT

ControlFieldValue

B4h

1

PCNT

4

ThenecessarysetupoftheHTUcontrolpacket(seeSection21.5)forthisexampleisasfollows:

IHADDR=0x34(pointstoWCAPcontrolfield)

IFADDR=0x70(pointstobuffer)

ITCOUNT[framecount=3][elementcount=3]

IHADDRCT=[DIR:ReadHETandwritetofulladdress]

[SIZE:64bit]

[ADDMH:IncrementHETaddressby16bytes]

[ADDMF:postincrementfulladdressmode]

[Anytransfermode]

Fordifferentapplications,whichhavethetransferdirectionsetforreadingthebufferandwritingtoHET

fields,the64-bittransfercouldbeusedtochangetheconditionaladdressestogetherwithanewdata

field.

913

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4ControlRegisters

Table21-10providesasummaryoftheregisters.Theregisterssupport8-bit,16-bit,and32-bitwrites.The

offsetisrelativetotheassociatedperipheralselect.Seethefollowingsectionsfordetaileddescriptionsof

theregisters.ThebaseaddressforthecontrolregistersisFFF7A400h.Theaddresslocationsnotlisted,

arereserved.

Table21-10.ControlRegisterMapping

Offset

Acronym

RegisterDescription

Section

00

HTUGC

GlobalControlRegister

Section21.4.1

04h

HTUCPENA

ControlPacketEnableRegister

Section21.4.2

08h

HTUBUSY0

ControlPacketBusyRegister0

Section21.4.3

0Ch

HTUBUSY1

ControlPacketBusyRegister1

Section21.4.4

10h

HTUBUSY2

ControlPacketBusyRegister2

Section21.4.5

14h

HTUBUSY3

ControlPacketBusyRegister3

Section21.4.6

18h

HTUACPE

ActiveControlPacketandErrorRegister

Section21.4.7

20h

HTURLBECTRL

RequestLostandBusErrorControlRegister

Section21.4.8

24h

HTUBFINTS

BufferFullInterruptEnableSetRegister

Section21.4.9

28h

HTUBFINTC

BufferFullInterruptEnableClearRegister

Section21.4.10

2Ch

HTUINTMAP

InterruptMappingRegister

Section21.4.11

34h

HTUINTOFF0

InterruptOffsetRegister0

Section21.4.12

38h

HTUINTOFF1

InterruptOffsetRegister1

Section21.4.13

3Ch

HTUBIM

BufferInitializationModeRegister

Section21.4.14

40h

HTURLOSTFL

RequestLostFlagRegister

Section21.4.15

44h

HTUBFINTFL

BufferFullInterruptFlagRegister

Section21.4.16

48h

HTUBERINTFL

BERInterruptFlagRegister

Section21.4.17

4Ch

HTUMP1S

MemoryProtection1StartAddressRegister

Section21.4.18

50h

HTUMP1E

MemoryProtection1EndAddressRegister

Section21.4.19

54h

HTUDCTRL

DebugControlRegister

Section21.4.20

58h

HTUWPR

WatchPointRegister

Section21.4.21

5Ch

HTUWMR

WatchMaskRegister

Section21.4.22

60h

HTUID

ModuleIdentificationRegister

Section21.4.23

64h

HTUPCR

ParityControlRegister

Section21.4.24

68h

HTUPAR

ParityAddressRegister

Section21.4.25

70h

HTUMPCS

MemoryProtectionControlandStatusRegister

Section21.4.26

74h

HTUMP0S

MemoryProtection0StartAddressRegister

Section21.4.27

78h

HTUMP0E

MemoryProtection0EndAddressRegister

Section21.4.28

914

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.1GlobalControlRegister(HTUGC)

Figure21-14.GlobalControlRegister(HTUGC)[offset=00]

31

25

24

23

17

16

Reserved

VBUSHOLD

Reserved

HTUEN

R-0

R/WP-0

R-0

R/WP-0

15

9

8

7

1

0

Reserved

DEBM

Reserved

HTURES

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-11.GlobalControlRegister(HTUGC)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

VBUSHOLD

HoldtheVBUSbus

0

TheVBUSisnotheld

1

TheVBUSHOLDbitholdsthebususedtotransferdatabetweentheHTUandtheNHETmodule.

WhentheBUS_BUSYbitiszerothenthebusisnolongerbusy.Whilethebusisheld,requests

willstillbeaccepted.TheywillbeacteduponwhentheVBUSHOLDiszero.Requestlost

conditionswillbedetectedandinterruptsgeneratediftheyareenabled.

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

HTUEN

TransferUnitEnableBit

0

TheTransferUnitisdisabled

1

TheTransferUnitisenabled

TheconfigurationregistersandcontrolpacketsshouldbesetupfirstbeforetheHTUENbitisset

to1topreventitfromcarryingoutunintendedbustransactions.IftheHTUENbitisclearedto0

duringaframeistransferred,thentheframewillbecompletedbeforetheHTUisdisabled.

TheHTUENbitmustbeclearedto0andtheparityfunctionalitymustbeenabled(by

PARITY_ENA)duringtheautomaticDCPRAMinitialization(seeInitializingParityBits).IfHTUEN

isonewhentheinitializationistriggeredbythesystemmodule,thentheinitializationwillnotbe

performedandtheHTUoperationisnotaffected.Ifa1iswrittentoHTUENduringthe

initialization,thentheHTUENbitwillbesetbuttheHTUwillnotbeenabledbeforetheinitialization

completes.

Note:IfHTUisdisabledduringaframetransfer,thentheongoingcurrentframewillbe

completedbeforetheHTUmoduleisdisabled.Ifenabledagain,thenthetransferwillrestart

fromtheinitialframecountfortheCPprogrammed.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

DEBM

DebugMode

0

TheTransferUnitisstoppedindebugmode.

TheHTUwillcompletethecurrentframe,butnotstartanynewframes.Itwillalsoignoreall

requestsfromtheHETandnotgenerateanyrequestlostsignals.

1

TheTransferUnitcontinuesoperationindebugmode

Note:SincetheHEThasalsoan"ignoresuspend"bit,thereaseveralpossibilitiesforthebehavior

oftheHETandHTUinsuspendmode.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

HTURES

HTUSoftwareResetRequest

0

ResetrequestisnotissuedtotheHTUmodule.Writingazerohasnoeffect.

1

ResetrequestisissuedtotheHTUmodule.

Ongoingelementtransferswillbecompleted,beforeresettingthecompleteHTUmodule,similarto

ahardwarereset.TheHTURESbitwillalsobecleared.Therecommendedorderofoperationsis:

•Setthesoftwareresetbit.ThisalsoclearsHTUEN.

•WaitfortheHTURESbittoclear.

•ConfiguretheHTUregistersandpackets.

•SettheHTUENbittobeginoperation.

915

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.2ControlPacketEnableRegister(HTUCPENA)

Thisregisterenablesordisablestheindividualdoublecontrolpackets(DCP).

Figure21-15.ControlPacketEnableRegister(HTUCPENA)[offset=04h]

31

16

Reserved

R-0

15

0

CPENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-12.ControlPacketEnableRegister(HTUCPENA)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

CPENA

CPEnableBits

Bits(2*x)and(2*x+1)ofCPENAcontrolthedoublecontrolpacket(DCP)x(wherebyxmustbe

within0,1,....,7).

SeeTable21-13forwriterules.

SeeTable21-14forreadrules.

Table21-13.CPENAWriteResults

Controlpackets(CP)BandAofDCPxareaffectedas

Bit(2*x+1)

Bit(2*x)

follows:

0

0

CPBandAarenotchanged

0

1

CPBisdisabledandCPAareenabledsimultaneously

1

0

CPBisenabledandCPAaredisabledsimultaneously

1

1

CPBandCPAarebothdisabledsimultaneously

Table21-14.CPENAReadResults

Bit(2*x+1)

Bit(2*x)

StateofDCP:

0

0

TheDCPisdisabled

0

1

CPBisdisabledandCPAisenabled

1

0

CPBisenabledandCPAisdisabled

1

1

Cannotberead

•TheconditionslistedinSection21.2.3canautomaticallydisableDCPx.Inthiscasebits(2*x)and

(2*x+1)arebothautomaticallysettozero.

•Whenbits(2*x)and(2*x+1)changefrom00to01orfrom00to10causedbyawriteaccessto

CPENA,thenoldpendingrequestsonthecorrespondingrequestlinearecleared.Thismeansonly

newrequestswhichoccurafterthiswriteaccesscausethefirstHTUtransferforthisDCP.Thisisnot

thecasewhenswitchingCPs(from10to01orfrom01to10).

•CPAand/orCPBofaDCPcanbeconfiguredtoone-shot,circularorauto-switchtransfermodevia

theTMBAorTMBBbitsintheIHADDRCTcontrolpacketconfiguration.IfawriteaccesstoCPENA

occursduringthelastframeofabuffer(withframecounter=1)thentheactiondefinedbythewrite

accesstoCPENAandtheactiondefinedbyTMBxcancontradict.Thepriorityrulesforthiscaseare

giveninTable21-1.

916

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.3ControlPacket(CP)BusyRegister0(HTUBUSY0)

Thisregisterdisplaysthestatusofindividualcontrolpackets.

Figure21-16.ControlPacket(CP)BusyRegister0(HTUBUSY0)[offset=08h]

31

25

24

23

17

16

Reserved

BUSY0A

Reserved

BUSY0B

R-0

R/WPC-0

R-0

R/WPC-0

15

9

8

7

1

0

Reserved

BUSY1A

Reserved

BUSY1B

R-0

R/WPC-0

R-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodeonlytoclearthebit;-n=valueafterreset

Table21-15.ControlPacket(CP)BusyRegister0(HTUBUSY0)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

BUSY0A

BusyFlagforCPAofDCP0

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

BUSY0B

BusyFlagforCPBofDCP0

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

BUSY1A

BusyFlagforCPAofDCP1

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

BUSY1B

BusyFlagforCPBofDCP1

Thebitissetwhentheframeontheaccordingcontrolpacketstarts(asshowninthediagrambelow,

therecouldbeadelaybetweentherequestandthestartoftheframe).

Thebitisautomaticallyclearedatanyofthefollowingconditions:

1.Attheendofaframe.

2.Writinga1toaBUSYbit(ofDCPx)ifthatbitis1.Thiswill:

(a)cleartheelementcounterofDCPx,

(b)stopallnewelementtransfersonDCPx

(c)clearthebusybitand(4.)disableDCPxintheCPENAregister.

(d)thereisnoeffectiftheBUSYbitiszero.

3.AttheconditionslistedinSection21.2.3,ConditionsforFrameTransferInterruption.

AwriteaccesstotheCPENAregistercanstopacontrolpacket(CP)insinglebuffermodeoritcanswitch

totheotherCPofaDCPindualbuffermode.Ifstoppingorswitchingoccurswhileaframerunsonthe

currentlyactivecontrolpacket,theCPUcanpollthebusybittodeterminewhenitissafetoreadthe

buffer.

917

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.4ControlPacket(CP)BusyRegister1(HTUBUSY1)

Thisregisterdisplaysthestatusofindividualcontrolpackets.

Figure21-17.ControlPacket(CP)BusyRegister1(HTUBUSY1)[offset=0Ch]

31

25

24

23

17

16

Reserved

BUSY2A

Reserved

BUSY2B

R-0

R/WPC-0

R-0

R/WPC-0

15

9

8

7

1

0

Reserved

BUSY3A

Reserved

BUSY3B

R-0

R/WPC-0

R-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodeonlytoclearthebit;-n=valueafterreset

Table21-16.ControlPacket(CP)BusyRegister1(HTUBUSY1)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

BUSY2A

BusyFlagforCPAofDCP2

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

BUSY2B

BusyFlagforCPBofDCP2

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

BUSY3A

BusyFlagforCPAofDCP3

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

BUSY3B

BusyFlagforCPBofDCP3

SeeSection21.4.3formoredetails.

21.4.5ControlPacket(CP)BusyRegister2(HTUBUSY2)

Figure21-18.ControlPacket(CP)BusyRegister2(HTUBUSY2)[offset=10h]

31

25

24

23

17

16

Reserved

BUSY4A

Reserved

BUSY4B

R-0

R/WPC-0

R-0

R/WPC-0

15

9

8

7

1

0

Reserved

BUSY5A

Reserved

BUSY5B

R-0

R/WPC-0

R-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodeonlytoclearthebit;-n=valueafterreset

Table21-17.ControlPacket(CP)BusyRegister2(HTUBUSY2)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

BUSY4A

BusyFlagforCPAofDCP4

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

BUSY4B

BusyFlagforCPBofDCP4

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

BUSY5A

BusyFlagforCPAofDCP5

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

BUSY5B

BusyFlagforCPBofDCP5

918

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.6ControlPacket(CP)BusyRegister3(HTUBUSY3)

Figure21-19.ControlPacket(CP)BusyRegister3(HTUBUSY3)[offset=14h]

31

25

24

23

17

16

Reserved

BUSY6A

Reserved

BUSY6B

R-0

R/WPC-0

R-0

R/WPC-0

15

9

8

7

1

0

Reserved

BUSY7A

Reserved

BUSY7B

R-0

R/WPC-0

R-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodeonlytoclearthebit;-n=valueafterreset

Table21-18.ControlPacket(CP)BusyRegister3(HTUBUSY3)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

BUSY6A

BusyFlagforCPAofDCP6

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

BUSY6B

BusyFlagforCPBofDCP6

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

BUSY7A

BusyFlagforCPAofDCP7

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

BUSY7B

BusyFlagforCPBofDCP7

21.4.7ActiveControlPacketandErrorRegister(HTUACPE)

Figure21-20.ActiveControlPacketandErrorRegister(HTUACPE)[offset=18h]

31

30

29

28

24

23

20

19

16

ERRF

Reserved

ERRETC

Reserved

ERRCPN

R/WPC-0

R-0

R-0

R-0

R-0

15

14

13

12

8

7

4

3

0

TIPF

BUSBUSY

Rsvd

CETCOUNT

Reserved

NACP

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodeonlytoclearthebit;-n=valueafterreset

Table21-19.ActiveControlPacketandErrorRegister(HTUACPE)FieldDescriptions

Bit

Field

Value

Description

31

ERRF

ErrorFlag

0

Noerroroccurred

1

ThisbitissetwhenoneoftheconditionslistedatERRETCisfulfilledandERRETCandERRCPNare

captured.OnceERRFisset,itisclearedwhenreadingtheupper16-bitwordoftheACPEregisteror

thecomplete32-bitregister.ItisalsoclearedwhenwritingaonetoERRF.ERRFcanbeusedto

indicateifERRETCandERRCPNcontainnewunreaddata.

30-29

Reserved

0

Readreturns0.Writeshavenoeffect.

919

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table21-19.ActiveControlPacketandErrorRegister(HTUACPE)FieldDescriptions(continued)

Bit

Field

Value

Description

28-24

ERRETC

ErrorElementTransferCount

Ifoneofthefollowingconditionshappensthecurrentelementtransfercounterofthecontrolpacket

(specifiedbyERRCPN)iscapturedtoERRETC.PleaseseealsoConditionsforFrameTransfer

Interruption.

•RequestLostErrorofcontrolpacketspecifiedbyERRCPN.ThisisindependentoftheCORLbit.

•ParityErrorofcontrolpacketspecifiedbyERRCPN.Thisrequirestheparitychecktobeenabled,but

isindependentoftheCOPEbit.

•BusErrorofcontrolpacketspecifiedbyERRCPN.

•MemoryProtectionErrorofcontrolpacketspecifiedbyERRCPN.Thisrequiresthememory

protectiontobeenabled.

•WritingaonetoaBUSYbit,whichbelongstothecontrolpacketspecifiedbyERRCPN,ifthatbitis

one.ThereisnoeffectiftheBUSYbitiszero.

ERRETCisfrozenfrombeingupdateduntiltheupper16-bitwordoftheACPEregisterorthecomplete

32-bitregisterisreadbytheCPU.AfterthisreadtheHTUwillupdateERRETCifoneoftheabove

conditionsisfulfilledagain.Duringdebugging,ERRETCstaysfrozenevenwhenreadingtheupper16-

bitwordorthe32-bitregister.

23-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

ERRCPN

ErrorControlPacketNumber

IfoneoftheconditionslistedatERRETChappensthenumberofthecontrolpacket,whichcausedthe

condition,iscapturedtoERRCPN.

ControlPacket

ERRCPNValue

CPAofDCPx

2x

CPBofDCPx

2x+1

Withx=0,1,...or7

ERRCPNisfrozenfrombeingupdateduntiltheupper16-bitwordoftheACPEregisterorthecomplete

32-bitregisterisreadbytheCPU.AfterthisreadtheHTUwillupdateERRCPNifoneoftheabove

conditionsisfulfilledagain.Duringdebugging,ERRCPNstaysfrozenevenwhenreadingtheupper16-

bitwordorthe32-bitregister.IfoneoftheconditionsisfulfilledERRETCandERRCPNareupdated

simultaneously.

15

TIPF

TransferinProgressFlag

0

Notransfersareinprogress

1

Atransferiscurrentlyactive.ThisbitistheresultofalogicalORfunctionofallBUSYxxflagsofthe4

BUSYxregisters.

14

BUSBUSY

BusisBusy

0

BusbetweenNHETandHTUisnotbusy

1

WhenBUSBUSYisonethebusisbusywithatransfer.ItisdifferentfromTIPFabovebecause

BUSBUSYwillgolowafterVBUSHOLDissettooneandnotransfersarependingbetweentheHTU

andthemainmemory.TIPFwillremainoneifatransferisstillpendingandVBUSPHOLDisone.

13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-8

CETCOUNT

CurrentElementTransferCount

CETCOUNTshowsthecurrentelementtransfercounterfortheframewhichiscurrentlyprocessed.If

theHTUdoesn'tcurrentlytransferanyframeCETCOUNTiszero.

CETCOUNTisupdatedafterthewritepartofatransfer.Thereisaperiodofupto7cyclesbetweenthe

timetheCETCOUNTiszeroandtheHTUisfinishedupdatingthecurrentDCP(andtheCPENA

registersiftherequiredconditionsarefulfilled).

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

NACP

NumberofActiveControlPacket

IndicateswhichCPcurrentlyprocessesaframe.

ActiveorRecentDCP

NACPValue

CPAofDCPx

2x

CPBofDCPx

2x+1

Withx=0,1,...or7

NACPisupdatedatthetimetheframestartsontheaccordingCP,anditisupdatedwithanewvalue

whenaframestartsonadifferentCP.Note,thattherecanbeadelaybetweentherequestandthestart

oftheframe.

920

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.8RequestLostandBusErrorControlRegister(HTURLBECTRL)

Figure21-21.RequestLostandBusErrorControlRegister(HTURLBECTRL)[offset=20h]

31

17

16

Reserved

BERINTENA

R-0

R/WP-0

15

9

8

7

1

0

Reserved

CORL

Reserved

RLINTENA

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-20.RequestLostandBusErrorControlRegister(HTURLBECTRL)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

BERINTENA

BusErrorInterruptEnableBit

0

ThebuserrorinterruptisdisabledforallDCPs

1

ThebuserrorinterruptisenabledforallDCPs

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

CORL

ContinueOnRequestLostError

0

Stopcurrentframeonrequestlostdetection.PleaseseeConditionsforFrameTransfer

Interruption

1

IfCORLisoneandDCPxisenabled,thenDCPxwillstayenabledafterarequestlostcondition

onDCPxandelementtransferswillcontinue.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

RLINTENA

RequestLostInterruptEnableBit

0

TherequestlostinterruptisdisabledforallDCPs.DisablingRLINTENAwillnotcleartheflagsin

theRLOSTFLregister.

1

TherequestlostinterruptisenabledforallDCPs.IfbitsaresetintheRLOSTFLflagregisterat

thetimeRLINTENAis(re-)enabled,thentheaccordinginterrupt(s)willoccur(intheorderofthe

priorityoftherequestlines).

921

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.9BufferFullInterruptEnableSetRegister(HTUBFINTS)

Thisregistersallowstoenablethebufferfullinterruptsforthedifferentcontrolpackets.Readingregisters

BFINTSandBFINTCwillreturnthesamebitsindicatingthestatuswhichinterruptisenabled(1)or

disabled(0).

Figure21-22.BufferFullInterruptEnableSetRegister(HTUBFINTS)[offset=24h]

31

16

Reserved

R-0

15

0

BFINTENA

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-21.BufferFullInterruptEnableSetRegister(HTUBFINTS)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BFINTENA

BusFullInterruptEnableBits.IftheinterruptforCPAofaDCPisenabled,thentheinterruptis

generatedoncebufferAisfull,thatis,oncetheframecounterCFTCTAdecrementstozero.The

sameappliesforCPB(andCFTCTB).

0

Interruptdisabled.Writingazerohasnoeffect.

1

Writingtobit(2*x)enablestheinterruptforCPAofDCPx.

Writingtobit(2*x+1)enablestheinterruptforCPBofDCPx.

21.4.10BufferFullInterruptEnableClearRegister(HTUBFINTC)

Thisregistersallowstodisablethebufferfullinterruptsforthedifferentcontrolpackets.Readingregisters

BFINTSandBFINTCwillreturnthesamebitsindicatingthestatuswhichinterruptisenabled(1)or

disabled(0)

Figure21-23.BufferFullInterruptEnableClearRegister(HTUBFINTC)[offset=28h]

31

16

Reserved

R-0

15

0

BFINTDIS

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-22.BufferFullInterruptEnableClearRegister(HTUBFINTC)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BFINTDIS

BufferFullInterruptDisableBits

0

Interruptdisabled.Writingazerohasnoeffect.

1

Writingtobit(2*x)disablestheinterruptforCPAofDCPx.

Writingtobit(2*x+1)disablestheinterruptforCPBofDCPx.

922

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.11InterruptMappingRegister(HTUINTMAP)

Figure21-24.InterruptMappingRegister(HTUINTMAP)[offset=2Ch]

31

17

16

Reserved

MAPSEL

R-0

R/WP-0

15

0

CPINTMAP

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-23.InterruptMappingRegister(HTUINTMAP)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

MAPSEL

InterruptMappingSelectBit

0

IfMAPSELiszerothenonebitofCPINTMAPselectsoneoftwointerruptpriorities0or1forthe

bufferfullinterruptfortheaccordingCP.TherequestlostandbuserrorinterruptsofallCPsare

settopriority0,independentofCPINTMAP.

1

IfMAPSELisonethenonebitofCPINTMAPdeterminesifthebufferfull,requestlostandbus

errorinterruptsoftheaccordingCPareassignedeithertointerruptline0orto1.

15-0

CPINTMAP

CPInterruptMappingBits

0

InterruptofCPA(bit2-x)ofDCPxismappedtointerruptline0.

InterruptofCPB(bit2*x+1)ofDCPxismappedtointerruptline0.

1

InterruptofCPA(bit2-x)ofDCPxismappedtointerruptline1.

InterruptofCPB(bit2*x+1)ofDCPxismappedtointerruptline1.

923

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.12InterruptOffsetRegister0(HTUINTOFF0)

TheINTOFF0registerreflectsthehighestpriorityinterruptflagbitsetintheBERINTFL,RLOSTFLor

BFINTFLflagregisterswiththeappropriateCPINTMAPbitsetto0.Thepriorityorder(fromhightolow)is:

BER,RLOST,buffer-full.Interruptsforrequestlineswithlowernumber(higherrowinthetablenextpage)

havehigherpriority.

Figure21-25.InterruptOffsetRegister0(HTUINTOFF0)[offset=34h]

31

16

Reserved

R-0

15

10

9

8

7

4

3

1

0

Reserved

INTTYPE0

Reserved

CPOFF0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table21-24.InterruptOffsetRegister0(HTUINTOFF0)FieldDescriptions

Bit

Field

Value

Description

31-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-8

INTTYPE0

InterruptTypeofInterruptLine0.Indicateswhetherabuffer-full,RLOSTorBERinterrupt-

assignedtointerruptline0-iscurrentlypending.

0

Nointerrupt

1h

InterruptcausedbyfullbufferonCP/DCPspecifiedbyCPOFF0

2h

RLOSTinterruptgeneratedbyCP/DCPspecifiedbyCPOFF0

3h

BERinterruptgeneratedbyCP/DCPspecifiedbybitsCPOFF0

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

CPOFF0

CPOffset.Indicatesforwhichcontrolpackettheinterruptispending,whichisclassifiedby

INTTYPE0andisassignedtointerruptline0.

0

DCP0,CPA

1h

DCP0,CPB

2h

DCP1,CPA

3h

DCP1,CPB

4h

DCP2,CPA

5h

DCP2,CPB

6h

DCP3,CPA

7h

DCP3,CPB

8h

DCP4,CPA

9h

DCP4,CPB

Ah

DCP5,CPA

Bh

DCP5,CPB

Ch

DCP6,CPA

Dh

DCP6,CPB

Eh

DCP7,CPA

Fh

DCP7,CPB

NOTE:ReadingCPOFF0willclearthebitgeneratingthecurrentinterruptfromappropriateflag

register(BERINTFL,RLOSTFL,orBFINTFL)exceptwhenindebugmodewherereading

CPOFF0willhavenoeffectontheflagregisters.

NOTE:InordertoreadINTTYPE0andCPOFF0simultaneouslyalwaysreadthisregisterusing

wordorhalf-wordbutnotusingbyteaccesses.

924

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.13InterruptOffsetRegister1(HTUINTOFF1)

ThisregisterisorganizedidenticallytotheINTOFF0register.ThedifferenceisthatINTOFF1reflectsthe

highestpriorityinterruptflagbitsetintheBERINTFL,RLOSTFLorBFINTFLflagregisterswiththe

appropriateCPINTMAPbitsetto1.

Figure21-26.InterruptOffsetRegister1(HTUINTOFF1)[offset=38h]

31

16

Reserved

R-0

15

10

9

8

7

4

3

1

0

Reserved

INTTYPE1

Reserved

CPOFF1

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table21-25.InterruptOffsetRegister1(HTUINTOFF1)FieldDescriptions

Bit

Field

Value

Description

31-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-8

INTTYPE1

InterruptTypeofInterruptLine1.Indicateswhetherabuffer-full,RLOSTorBERinterrupt-

assignedtointerruptline1-iscurrentlypending.

0

Nointerrupt

1h

InterruptcausedbyfullbufferonCP/DCPspecifiedbyCPOFF1

2h

RLOSTinterruptgeneratedbyCP/DCPspecifiedbyCPOFF1

3h

BERinterruptgeneratedbyCP/DCPspecifiedbybitsCPOFF1

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

CPOFF1

CPOffset.IndicatesforwhichDCP/CPtheinterruptispending,whichisclassifiedbyINTTYPE1

andisassignedtointerruptline1

0

DCP0,CPA

1h

DCP0,CPB

2h

DCP1,CPA

3h

DCP1,CPB

4h

DCP2,CPA

5h

DCP2,CPB

6h

DCP3,CPA

7h

DCP3,CPB

8h

DCP4,CPA

9h

DCP4,CPB

Ah

DCP5,CPA

Bh

DCP5,CPB

Ch

DCP6,CPA

Dh

DCP6,CPB

Eh

DCP7,CPA

Fh

DCP7,CPB

NOTE:ReadingCPOFF1willclearthebitgeneratingthecurrentinterruptfromappropriateflag

registerBERINTFL,RLOSTFL,orBFINTFLexceptwhenindebugmodewherereading

CPOFF1willhavenoeffectontheflagregisters.

NOTE:InordertoreadINTTYPE1andCPOFF1simultaneouslyalwaysreadthisregisterusing

wordorhalf-wordbutnotusingbyteaccesses.

925

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.14BufferInitializationModeRegister(HTUBIM)

Thisregisterenablesspecialapplications,whereoneCPistemporarilydisabled,butafterhavingre-

enabledtheCP,fillingthebuffershouldnotstartbackatitsbeginning,butshouldcontinueafterthelast

elementofthepreviousrun.

Figure21-27.BufferInitializationModeRegister(HTUBIM)[offset=3Ch]

31

16

Reserved

R-0

15

8

7

0

Reserved

BIM

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-26.BufferInitializationModeRegister(HTUBIM)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

BIM

BufferInitializationMode

TheBIMbitsandtheTMBxbitsdeterminewhenabufferisinitialized,thatmeanswhenitsinitial

fulladdressIFADDRxanditsinitialframecounterIFTCOUNTisused.

Wheninitializing(restarting)abuffertheinformationinthecorrespondinginitialDCPRAMis

loadedtoainternalstatemachinebutnottothecurrentDCPRAM(CFADDRx,CFTCTx).The

currentDCPRAMisupdatedthefirsttimewhenthefirstframehasfinished.

Abufferisinitialized:

•Incircularbuffertransfermode(definedbyTMBx)whentheendofthebufferisreached.

•WhenCPsareswitchedorenabledaccordingtoBufferInitialization.TheCPENAbits(2*x+1)

and(2*x)arechangedbywriteaccesstoCPENA.Forthefirsttworowsofthetablethechange

oftheCPENAbitscouldalsobetheresultoftheautoswitchfeature(asdefinedbyTMBx).

BIMbitxonlyaffectsDCPx(withx=0,1,...or7).

Table21-27showsmoredetailsontheBIMusage.

Table21-27.BufferInitialization

ChangeofCPENAbits

ActiononbufferAorB(ofDCPx)

(2*x+1)and(2*x)

Case

BIMbitx=0(normal

BIMbitx=1(special

Oldstate(1)

Newstate(2)

mode)

mode)

Nextframestartsatthe

A

01

10

SwitchfromCPAtoB

SameasforBIMbitx=0

initialaddressofbufferB(3)

Nextframestartsatthe

B

10

01

SwitchfromCPBtoA

SameasforBIMbitx=0

initialaddressofbufferA(3)

WritetoCPENAbits

C

01

01

StayatCPA

SameasforBIMbitx=0

(2*x+1)and(2*x)isignored

WritetoCPENAbits

E

10

10

StayatCPB

SameasforBIMbitx=0

(2*x+1)and(2*x)isignored

Nextframestartsatthe

Nextframecontinuesatthe

E

00

01

EnableCPA

initialaddressofbufferA

currentaddressofbufferA

Nextframestartsatthe

Nextframecontinuesatthe

F

00

10

EnableCPB

initialaddressofbufferB

currentaddressofbufferB

G

xx

11

DisablebothCPs

StopDCPx

SameasforBIMbitx=0

(1)SeereadtableofCPENAregister.

(2)SeewritetableofCPENAregister.

(3)ThisisregardlessofwhethertheswitchisdonebyawriteacesstoCPENAorbytheautoswitchfeature.

926

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

NOTE:ForcasesEandFabove,afterthelastframeofabuffer,theHTUsetsCFTCTxtozeroand

CFADDRxtothenextaddressafterthebuffer.IftheDCPwasdisabledduringthisstate,

thenbothCFTCTxandCFADDRxwouldcontaininvalidinitializationvalues.Therefore,ifa

DCPshouldcontinueatitscurrentaddress,thenthesoftwareshoulduseoneofthe

followingtwoproceduresbeforeit(re-)enablestheDCP(asperTable21-27):

1.IfCFTCTx≠0thensetBIM=1

IfCFTCTx=0thenset

BIM=0

2.IfCFTCTx≠0thenset

BIM=1

IfCFTCTx=0then{set

BIM=1;

setCFTCTx=IFTCOUNT;

setCFADDRx=IFADDRx}

ButnotethattheseproceduresareonlyrequiredforthecasesEandFandnotforallthe

othercasesshowninthetable.Also,whenabufferreachesitsendincircularmode,ituses

theinitialDCPinformationtorestartindependentlyoftheBIMsetting(assumingitisnot

temporarilydisabledduringCFTCTx=0).

NOTE:Similarly,careneedstobetakenwhenBIMissettooneandaDCPisenabledforthevery

firsttime.Also,inthiscase,CFTCTxandCFADDRxusuallycontaininvalidinitialization

values.ThesoftwarecaneithersolvethisbysettingBIM=0forthefirsttimeorsetting

CFADDRxtoIFADDRxandCFTCTxtoIFTCOUNTbeforetheDCPisenabled.

NOTE:If

•theHTUENbitischangedtooneaftertheHTUwasdisabledHTUEN=0

•theCPENAbitpairis01or10(duringthisHTUENchange)

thenthecorrespondingBIMbitwilldecideifthecorrespondingbuffercontinuesatitsinitialor

currentaddress.CasesEandFinTable21-27alsoapplyforthissituation.Thesoftware

shouldusetheproceduresexplainedinthefirstnotebeforesettingHTUEN.

927

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.15RequestLostFlagRegister(HTURLOSTFL)

Figure21-28.RequestLostFlagRegister(HTURLOSTFL)[offset=40h]

31

16

Reserved

R-0

15

0

CPRLFL

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table21-28.RequestLostFlagRegister(HTURLOSTFL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

CPRLFL

CPRequestLostFlags

0

Norequestwaslost.Writingazerohasnoeffect.

1

Ifbit(2*x)isset,arequestwaslostonCPAofDCPx.

Ifbit(2*x+1)isset,arequestwaslostonCPBofDCPx.ReadingfromINTOFFxincaseofa

RLOSTinterruptclearsthecorrespondingflag.Thestateoftheflagbitcanbepolledevenif

RLINTENAiscleared.

•ReadingCPRLFLwillnotcleartheflagsor

•ReadingfromINTOFFxclearsthecorrespondingflag.

•Writingaoneclearsthecorrespondingflag.

21.4.16BufferFullInterruptFlagRegister(HTUBFINTFL)

Figure21-29.BufferFullInterruptFlagRegister(HTUBFINTFL)[offset=44h]

31

16

Reserved

R-0

15

0

BFINTFL

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table21-29.BufferFullInterruptFlagRegister(HTUBFINTFL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BFINTFL

BufferFullInterruptFlags

0

Nobufferfullconditiondetected.Writingazerohasnoeffect.

1

Ifbit(2*x)isset,abufferfullconditiononCPAofDCPxhasbeendetected.

Ifbit(2*x+1)isset,abufferfullconditiononCPBofDCPxhasbeendetected.

TheBFINTFLflagissetafterthelastframefinishesonthecorrespondingbufferregardlessof

whetherthebufferisconfiguredtooneshot,circularorauto-switchmode.IfBFINTFLissetin

circularmode,thenacircularoverrunhasoccurredonthecorrespondingbuffer.Thiscanbeused

toindicatewhetherthebuffersectionafterthefrozenfulladdresscontainsvaliddataornot.

ReadingfromINTOFFxincaseofabuffer-fullinterruptclearsthecorrespondingflag.Thestateof

theflagbitcanbepolledevenifthecorrespondinginterruptenablebitiscleared.

•ReadingBFINTFLwillnotcleartheflagsor

•ReadingINTOFFxwillclearthecorrespondingflagsor

•Writingaoneclearsthecorrespondingflag.

928

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.17BERInterruptFlagRegister(HTUBERINTFL)

Abuserrorinterruptresultsduetoanaddresserrororatimeoutconditiononthemainmemoryaccess.A

buserrorwillstoptheframetransfer.PleaseseeSection21.2.3.

Figure21-30.BERInterruptFlagRegister(HTUBERINTFL)[offset=48h]

31

16

Reserved

R-0

15

0

BERINTFL

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodetoclearthebit;-n=valueafterreset

Table21-30.BERInterruptFlagRegister(HTUBERINTFL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

BERINTFL

BusErrorInterruptFlags

0

Nobuserrorconditiondetected.Writingazerohasnoeffect.

1

Ifbit(2*x)isset,thenaBERinterruptispendingonCPAofDCPx.

Ifbit(2*x+1)isset,thenaBERinterruptispendingonCPBofDCPx.

ThestateoftheflagbitcanbepolledevenifBERINTENAiscleared.

•ReadingBERINTFLwillnotcleartheflagsor

•ReadingfromINTOFFxincaseofaBERinterruptclearsthecorrespondingflagor

•Writingaoneclearsthecorrespondingflag.

929

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.18MemoryProtection1StartAddressRegister(HTUMP1S)

Thisregisterconfiguresthestartaddressofmemoryprotectionregion1.

Figure21-31.MemoryProtection1StartAddressRegister(HTUMP1S)[offset=4Ch]

31

16

STARTADDRESS1

R/WP-0

15

0

STARTADDRESS1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-31.MemoryProtection1StartAddressRegister(HTUMP1S)FieldDescriptions

Bit

Field

Value

Description

31-0

STARTADDRESS1

Thestartaddressdefinesatwhichmainmemoryaddresstheregionbegins.Amemory

protectionerrorwillbetriggered,iftheHTUaccessesanaddresssmallerthan

STARTADDRESS1andtheMPCSbitREG01ENAregisterisconfiguredaccordingly.

21.4.19MemoryProtection1EndAddressRegister(HTUMP1E)

Figure21-32.MemoryProtection1EndAddressRegister(HTUMP1E)[offset=50h]

31

16

ENDADDRESS1

R/WP-0

15

0

ENDADDRESS1

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-32.MemoryProtection1EndAddressRegister(HTUMP1E)FieldDescriptions

Bit

Field

Value

Description

31-0

ENDADDRESS1

Theendaddressdefinesatwhichaddresstheregionends.Amemoryprotectionerrorwill

betriggered,iftheHTUaccessesanaddressbiggerthanENDADDRESS1andtheregister

bitREG01ENAisconfiguredaccordingly.

930

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.20DebugControlRegister(HTUDCTRL)

Thisregisterallowstocreatewatchpointsonaccesstoacertainlocation.Itisintendedtohelpdebugthe

applicationexecutionduringprogramdevelopment.

Figure21-33.DebugControlRegister(HTUDCTRL)[offset=54h]

31

28

27

24

23

17

16

Reserved

CPNUM

Reserved

HTUDBGS

R-0

R-0

R-0

R/WS-0

15

1

0

Reserved

DBREN

R-0

R/WS-0

LEGEND:R/W=Read/Write;R=Readonly;WS=Writeinsuspendmodeonly;-n=valueafterreset

Table21-33.DebugControlRegister(HTUDCTRL)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

CPNUM

CPNumber.ThesebitfieldsindicatetheCPwhichshouldcausethewatchpointtomatch.

0

CPAofDCP0

1h

CPBofDCP0

2h

CPAofDCP1

Eh

CPAofDCP7

Fh

CPBofDCP7

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

HTUDBGS

HTUDebugStatus.Whenthemainmemoryaddressisequaltotheuniqueaddressdefinedby

WPR,orliesinthespecifiedrangeresultingfromWMR,thentheHTUDBGSisset.Ifinaddition

DBRENisset,thentheapplicationcodeexecutionwillbestopped.

AonemustbewrittentothisbitinordertoclearitandtoreleasetheCPUfromdebughalting

state.

0

Read:Nowatchpointconditionwasdetected.

Write:Noeffect.

1

Read:Awatchpointconditionwasdetected.

Write:Clearsthebit.

15-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

DBREN

DebugRequestEnable

IfawatchpointmatchesandDBRENisset,thentheapplicationcodeexecutionwillbestopped.

Thisbitcanonlybesetorclearedwhenindebugmode.ThisbitandallotherbitsoftheDCTRL,

WPRandWMRregistersareresetbythetestreset(nTRST)butnotbythenormaldevicereset.

931

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.21WatchPointRegister(HTUWPR)

Thisregisterdefinesthemainmemoryaddressofthewatchpoint.

Figure21-34.WatchPointRegister(HTUWPR)[offset=58h]

31

16

WP

R/WS-0

15

0

WP

R/WS-0

LEGEND:R/W=Read/Write;R=Readonly;WS=Writeinsuspendmodeonly;-n=valueafterreset

Table21-34.WatchPointRegister(HTUWPR)FieldDescriptions

Bit

Field

Value

Description

31-0

WP

WatchPointRegister

A32-bitaddresscanbeprogrammedintothisregisterasawatchpoint.TheWPRregisterisused

alongwiththeWatchMaskRegister(WMR).Whenthemainmemoryaddressisequaltothe

uniqueaddressdefinedbyWPR,orliesinthespecifiedrangeresultingfromWMR,thenthe

HTUDBGSisset.IfinadditionDBRENisset,thentheapplicationcodeexecutionisstopped.

Thisregistercanonlybeprogrammedduringdebugmode.Thisregisterandallotherbitsofthe

DCTRLandWMRregistersareresetbythetestreset(nTRST)butnotbythenormaldevicereset.

21.4.22WatchMaskRegister(HTUWMR)

Thisregisterdefinesamaskofthemainmemoryaddressofthewatchpoint.Itcanbeusedtodefinea

memoryrangeinconjunctionwiththeWPRregister.

Figure21-35.WatchMaskRegister(HTUWMR)[offset=5Ch]

31

16

WM

R/WS-0

15

0

WM

R/WS-0

LEGEND:R/W=Read/Write;R=Readonly;WS=Writeinsuspendmodeonly;-n=valueafterreset

Table21-35.WatchMaskRegister(HTUWMR)FieldDescriptions

Bit

Field

Value

Description

31-0

WM

WatchMaskRegister

SettingabitintheWMRregistertoonehastheeffectofmaskingthecorrespondingbitinofthe

mainmemoryaddress,sothatthisbitisignoredfortheaddresscomparison.

Thisregistercanonlybeprogrammedduringdebugmode.Thisregisterandallotherbitsofthe

DCTRLandWPRregistersareresetbythetestreset(nTRST)butnotbythenormaldevicereset.

932

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.23ModuleIdentificationRegister(HTUID)

ThisregisterisforTIinternalpurposesandallowstokeeptrackoftheHTUmoduleversionondifferent

devices.

Figure21-36.ModuleIdentificationRegister(HTUID)[offset=60h]

31

24

23

16

Reserved

CLASS

R-0

R-ModuleClassNumber

15

8

7

0

TYPE

REV

R-ClassSubtypeNumber

R-ModuleRevisionNumber

LEGEND:R=Readonly;-n=valueafterreset

Table21-36.ModuleIdentificationRegister(HTUID)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-16

CLASS

ModuleClass

Thisfielddefinesthemoduleclassnumberasread-onlyconstantvaluefortheHTUmodule.

Writeshavenoeffect.

15-8

TYPE

SubtypewithinaClass

Thisfielddefinesthesubtypewithinaclassasread-onlyconstantvaluefortheHTUmodule.

Writeshavenoeffect.

7-0

REV

ModuleRevisionNumber

Thisfielddefinesthemodulerevisionnumberasread-onlyconstantvaluefortheHTUmodule.

Writeshavenoeffect.

933

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.24ParityControlRegister(HTUPCR)

Figure21-37.ParityControlRegister(HTUPCR)[offset=64h]

31

17

16

Reserved

COPE

R-0

R/WP-0

15

9

8

7

4

3

0

Reserved

TEST

Reserved

PARITY_ENA

R-0

R/WP-0

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-37.ParityControlRegister(HTUPCR)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

COPE

ContinueonParityError

0

TheHTUperformsparitycheckseverytimeitreadstheRAMsectionofDCPx(withx=0,1,...

or7),beforethenextframe(ofDCPx)isstarted.Ifaparityerrorisdetectedduringthisread

accessandiftheparitycheckisenabled,thentheframewillnotbestartedandDCPxwillbe

automaticallydisabledintheCPENAregister.

IfamasterdifferentthantheHTU(forexample,CPU)readstheRAMsectionofDCPxanda

parityerrorisdetectedduringthisreadaccess,whiletheparitycheckisenabled,thentheDCP

xwillautomaticallybedisabledintheCPENAregister.IfaframeisactiveonDCPxduringthis

readaccess,theninadditiontheelementcounterofDCPxisclearedandallnewelement

transfersonDCPxarestoppedandtheactivebusybitofDCPxiscleared.

1

ThedifferencetoCOPE=0is,thatthedatatransferonaactiveDCPcontinuesafteraparity

errorwasdetectedonthisDCP.SoneithertheDCPwiththeparityerrorwillbedisablednor

theframewillbestopped.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

TEST

Test.Whenthisbitisset,theparitybitsaremappedintotheperipheralRAMframetomake

themaccessiblebytheCPU.

0

Paritybitsarenotmemorymapped

1

Paritybitsarememorymapped

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

PARITY_ENA

Enable/DisableParityChecking.Thisbitfieldenablesordisablestheparitycheckonread

operationsandtheparitycalculationonwriteoperations.Ifparitycheckingisenabledanda

parityerrorisdetected,thenthePEFTflagisset,PAOFFiscapturedifitisnotcurrentlyfrozen

andaninterruptisgeneratedifitisenabled.

5h

Paritycheckisdisabled

AllOthers

Paritycheckisenabled

Note:ItisrecommendedtowriteAhtoenableerrordetection,toguardagainstsinglebit

changesfromflippingPARITY_ENAtoadisablestate.

934

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

21.4.25ParityAddressRegister(HTUPAR)

Figure21-38.ParityAddressRegister(HTUPAR)[offset=68h]

31

17

16

Reserved

PEFT

R-0

R/WPC-0

15

9

8

0

Reserved

PAOFF

R-0

R-X

LEGEND:R/W=Read/Write;R=Readonly;WPC=Write1inprivilegemodetoclearthebit;-n=valueafterreset;X=undefined

Table21-38.ParityAddressRegister(HTUPAR)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

16

PEFT

ParityErrorFaultFlag.Thisbitisset,whentheHTUdetectsaparityerrorandparitycheckingis

enabled.

0

Nofaultdetected

1

Faultdetected

Note:OncePEFTisset,areadaccesstothelower16bitsortothecomplete32-bitHTUPAR

registerwillclearthePEFTflaginnon-debugmode.AnotherpossibilitytoclearPEFTistowritea

1tothePEFTbit.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8-0

PAOFF

ParityErrorAddressOffset.Thisbitfieldholdstheaddressofthefirstparityerror,whichis

detectedintheDCPRAM.PAOFFprovidestheoffsetaddressoftheerroneousbytecountedfrom

thebeginningoftheDCPmemory.Thiserroraddressisfrozenfrombeingupdateduntilaread

accesstothelower16bitsortothecomplete32-bitHTUPARregisterhappens.Duringdebug

mode,thisaddressisfrozenevenwhenread.

Note:TheParityErrorAddressbitswillnotbereset,neitherbyPORRSTnorbyanyotherreset

source.

935

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.26MemoryProtectionControlandStatusRegister(HTUMPCS)

Figure21-39.MemoryProtectionControlandStatusRegister(HTUMPCS)[offset=70h]

31

28

27

24

Reserved

CPNUM0

R-0

R-0

23

18

17

16

Reserved

MPEFT1

MPEFT0

R-0

R/WCP-0

R/WCP-0

15

12

11

8

Reserved

CPNUM1

R-0

R-0

7

6

5

4

3

2

1

0

Reserved

INTENA01

ACCR01

REG01ENA

INTENA0

ACCR0

REG0ENA

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;WPC=Write1inprivilegemodetoclearthebit;-n=

valueafterreset

Table21-39.MemoryProtectionControlandStatusRegister(HTUMPCS)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27-24

CPNUM0

ControlPacketNumberforsinglememoryprotectionregionconfiguration.CPNUM0holdsthe

numberoftheCP,whichhascausedthefirstmemoryprotectionerrorwhenonlyonememory

protectionregionisused.Thisnumberisnotupdatedformultipleaccessviolationsuntilitisread

bytheCPU.Duringdebugmode,CPNUM0isfrozenevenwhenread.

0

CPAofDCP0

1h

CPBofDCP0

2h

CPAofDCP1

Eh

CPAofDCP7

Fh

CPBofDCP7

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

MPEFT1

MemoryProtectionErrorFaultFlag1.Thisbitisset,whentheHTUperformsanaccessoutside

theregiondefinedbytheMP0SandMP0EandtheMP1SandMP0Eregisters,whentheaccess

violatestherightsdefinedbyACCR01andwhentheREG01ENAbitisset.

0

Nofaultdetected.Writingazerohasnoeffect.

1

Faultdetected.Writingaonewillclearthebit.

16

MPEFT0

MemoryProtectionErrorFaultFlag0.Thisbitisset,whentheHTUperformsanaccessoutside

theregiondefinedbytheMP0SandMP0Eregisters,whentheaccessviolatestherightsdefined

byACCRandwhentheREG0ENAbitisset.

0

Nofaultdetected.Writingazerohasnoeffect.

1

Faultdetected.Writingaonewillclearthebit.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

CPNUM1

ControlPacketNumberforsinglememoryprotectionregionconfiguration.CPNUM1holdsthe

numberoftheCP,whichhascausedthefirstmemoryprotectionerrorwhenonlyonememory

protectionregionisused.Thisnumberisnotupdatedformultipleaccessviolationsuntilitisread

bytheCPU.Duringdebugmode,CPNUM1isfrozenevenwhenread.

0

CPAofDCP0

1h

CPBofDCP0

2h

CPAofDCP1

Eh

CPAofDCP7

Fh

CPBofDCP7

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

936

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table21-39.MemoryProtectionControlandStatusRegister(HTUMPCS)FieldDescriptions(continued)

Bit

Field

Value

Description

5

INTENA01

InterruptEnable01.Thisbitneedstobesetwhenworkingwithtwomemorymappedregionsand

aerrorshouldbegeneratedtotheESMmoduleonanaccessviolation.

0

Errorsignallingisdisabled

1

Errorsignallingisenabled

4

ACCR01

AccessRights01.ThisbitdefinestheaccessrightsfortheHTUforaccessesoutsidetheregion

definedbytheMP0SandMP0EandtheMP1SandMP0Eregisters.

0

HTUreadaccessisallowedbutwriteaccesswillbesignaled

1

AnyaccessperformedbytheHTUisforbiddenandwillbesignaled

3

REG01ENA

RegionEnable01.Thisbitneedstobesetwhenworkingwithtwomemorymappedregions.

REG0ENAmustbesettozeroifthisbitissettoaone.Memoryregion0mustbelessthan

memoryregion1.

0

TheprotectionoutsidethememoryregiondefinedbytheMP0SandMP0EandtheMP1Sand

MP0Eregistersisnotenabled.ThismeanstheHTUcanaccessanyimplementedmemoryspace.

REG0ENAcouldstillenabledtogiveprotectionoutsidetheMP0S:MP0Eregion.

1

TheprotectionoutsidethememoryregiondefinedbytheMP0SandMP0EandtheMP1Sand

MP0Eregistersisenabled.ThismeanstheHTUcanperformanyaccesswithintheregions,butif

itattemptstoperformaforbiddenaccessoutsideofbothoftheregions(accordingtotheACCR01

configuration),theaccessissignaledbytheMPEFT1flag.ThenumberoftheCP,whichhas

causedthememoryprotectionerror,iscapturedtoCPNUM1ifitisnotcurrentlyfrozenandan

errorisgeneratedifitisenabled.

2

INTENA0

InterruptEnable0.Thisbitneedstobesetwhenworkingwithonememorymappedregionanda

errorshouldbegeneratedtotheESMmoduleonanaccessviolation.

0

Errorsignallingisdisabled

1

Errorsignallingisenabled

1

ACCR

AccessRights0.ThisbitdefinestheaccessrightsfortheHTUforaccessesoutsidetheregion

definedbytheMP0SandMP0Eregistersforasinglememoryprotectionregionconfiguration.

0

HTUreadaccessisallowedbutwriteaccesswillbesignaled

1

AnyaccessperformedbytheHTUisforbiddenandwillbesignaled

0

REG0ENA

RegionEnable0

0

TheprotectionoutsidethememoryregiondefinedbytheMP0SandMP0Eregistersisnot

enabled.ThismeanstheHTUcanaccessanyimplementedmemoryspace.

1

TheprotectionoutsidethememoryregiondefinedbytheMP0SandMP0Eregistersisenabled.

ThismeanstheHTUcanperformanyaccesswithintheregion,butifitattemptstoperforma

forbiddenaccessoutsidetheregion(accordingtotheACCRconfiguration),theaccessissignaled

bytheMPEFT0flag,thenumberoftheCP,whichhascausedthememoryprotectionerror,is

capturedtoCPNUM0ifitisnotcurrentlyfrozenandanerrorisgeneratedifitisenabled.

937

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

21.4.27MemoryProtectionStartAddressRegister0(HTUMP0S)

Thisregisterconfiguresthestartaddressofmemoryprotectionregion0

Figure21-40.MemoryProtectionStartAddressRegister0(HTUMP0S)[offset=74h]

31

16

STARTADDRESS0

R/WP-0

15

0

STARTADDRESS0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-40.MemoryProtection0StartaddressRegister(HTUMP0S)FieldDescriptions

Bit

Field

Value

Description

31-0

ISTARTADDRESS0

Thestartaddressdefinesatwhichmainmemoryaddresstheregionbegins.Amemory

protectionerrorwillbetriggered,iftheHTUaccessesanaddresssmallerthan

STARTADDRESS0andtheMPCSregisterisconfiguredaccordingly.

21.4.28MemoryProtectionEndAddressRegister(HTUMP0E)

Figure21-41.MemoryProtectionEndAddressRegister(HTUMP0E)[offset=78h]

31

16

ENDADDRESS0

R/WP-0

15

0

ENDADDRESS0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table21-41.MemoryProtectionEndAddressRegister(HTUMP0E)FieldDescriptions

Bit

Field

Value

Description

31-0

ENDADDRESS0

Theendaddressdefinesatwhichaddresstheregionends.Amemoryprotectionerrorwill

betriggered,iftheHTUaccessesanaddressbiggerthanENDADDRESS0andtheregister

bitMPCSregisterisconfiguredaccordingly.

938

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDoubleControlPacketConfigurationMemory

21.5DoubleControlPacketConfigurationMemory

Allbitsmarked"reserved'areimplementedinRAMandwillbeinitializedtounknownvaluesafterpower

on.Reservedlocationscanbewrittenandreadbutshouldbewrittenwithzerotoensurefuture

compatibility.TheHTURAMcanbeclearedwiththesystemRAMinitializationfunction.

Table21-42providesasummaryofthememoryconfiguration.ThereareeightsetsofDCPregistersand

eightsetsofCFregisters.ThebaseaddressforDCPsisFF4E0000h.

Table21-42.DoubleControlPacketMemoryMap

Offset

Acronym

RegisterDescription

Section

000h

HTUDCP0IFADDRA

InitialFullAddressARegister

Section21.5.1

004h

HTUDCP0IFADDRB

InitialFullAddressBRegister

Section21.5.2

008h

HTUDCP0IHADDRCT

InitialNHETAddressandControlRegister

Section21.5.3

00Ch

HTUDCP0ITCOUNT

InitialTransferCountRegister

Section21.5.4

010h

HTUDCP1IFADDRA

InitialFullAddressARegister

014h

HTUDCP1IFADDRB

InitialFullAddressBRegister

018h

HTUDCP1IHADDRCT

InitialNHETAddressandControlRegister

01Ch

HTUDCP1ITCOUNT

InitialTransferCountRegister

...

070h

HTUDCP7IFADDRA

InitialFullAddressARegister

074h

HTUDCP7IFADDRB

InitialFullAddressBRegister

078h

HTUDCP7IHADDRCT

InitialNHETAddressandControlRegister

07Ch

HTUDCP7ITCOUNT

InitialTransferCountRegister

100h

HTUCDCP0CFADDRA

CurrentFullAddressARegister

Section21.5.5

104h

HTUCDCP0CFADDRB

CurrentFullAddressBRegister

Section21.5.6

108h

HTUCDCP0CFCOUNT

CurrentFrameCountRegister

Section21.5.7

110h

HTUCDCP1CFADDRA

CurrentFullAddressARegister

114h

HTUCDCP1CFADDRB

CurrentFullAddressBRegister

118h

HTUCDCP1CFCOUNT

CurrentFrameCountRegister

...

170h

HTUCDCP7CFADDRA

CurrentFullAddressARegister

174h

HTUCDCP7CFADDRB

CurrentFullAddressBRegister

178h

HTUCDCP7CFCOUNT

CurrentFrameCountRegister

939

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DoubleControlPacketConfigurationMemorywww.ti.com

21.5.1InitialFullAddressARegister(HTUIFADDRA)

Figure21-42.InitialFullAddressARegister(HTUIFADDRA)

31

16

IFADDRA

R/WP-X

15

0

IFADDRA

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-43.InitialFullAddressARegister(HTUIFADDRA)FieldDescriptions

Bit

Field

Value

Description

31-0

IFADDRA

InitialAddressofBufferAinmainmemory.

Initial(byte)addressofbufferAplacedinthemainmemoryaddressrange.Bits0and1are

ignoredbythelogic,dueto32bitalignment.

21.5.2InitialFullAddressBRegister(HTUIFADDRB)

Figure21-43.InitialFullAddressBRegister(HTUIFADDRB)

31

16

IFADDRB

R/WP-X

15

0

IFADDRB

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-44.InitialFullAddressBRegister(HTUIFADDRB)FieldDescriptions

Bit

Field

Value

Description

31-0

IFADDRB

InitialAddressofBufferBinmainmemory.

Initial(byte)addressofbufferBplacedinthemainmemoryaddressrange.Bits0and1are

ignoredbythelogic,dueto32bitalignment.

940

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDoubleControlPacketConfigurationMemory

21.5.3InitialNHETAddressandControlRegister(HTUIHADDRCT)

Figure21-44.InitialNHETAddressandControlRegister(HTUIHADDRCT)

31

24

23

22

21

20

19

18

17

16

Reserved

DIR

SIZE

ADDMH

ADDMF

TMBA

TMBB

R-0

R/WP-X

R/WP-X

R/WP-X

R/WP-X

R/WP-X

R/WP-X

15

13

12

2

1

0

Reserved

IHADDR

Reserved

R-0

R/WP-X

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-45.InitialNHETAddressandControlRegister(HTUIHADDRCT)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23

DIR

DirectionofTransfer

0

NHETaddressisreadandmainmemoryaddressiswritten

1

MainmemoryaddressisreadandNHETaddressiswritten

22

SIZE

SizeofTransferredData

0

32-bittransfer

1

64-bittransfer

64-bittransferexamples:IftheNHETaddresspointstotheNHETinstructionControlField(CF),

thentheCFandDataField(DF)willbetransferred.IftheNHETaddresspointstotheProgram

Field(PF),thenthePFandCFwillbetransferred.

21

ADDMH

AddressingModeNHETAddress.ThisbitdeterminestheNHETaddressindexfromonetothe

nextelementofaframe.

0

Incrementby16bytes

Examples:

IftheinitialNHETaddresspointstodatafieldofinstruction(n).ThentheNHETfieldstobe

transferredbytheelementsofaframeare:datafieldofinstruction(n),datafieldofinstruction

(n+1),datafieldofinstruction(n+2)andsoon.IftheinitialNHETaddresspointstocontrolfieldof

instruction(n),thentheNHETfieldstobetransferredbytheelementsofaframeare:controlfield

ofinstruction(n),controlfieldofinstruction(n+1),controlfieldofinstruction(n+2)andsoon.

1

Incrementby8bytes

Thismodeisintendedtobeusedtogetherwiththe64-bittransfersizetoloadshortNHET

instructionblocksintotheNHETRAM.Sothesequenceoftransferred64-bitelementscouldbe:

[PFandCFofinstruction(n)],[DFandRFofinstruction(n)],[PFandCFofinstruction(n+1)],[DF

andRFofinstruction(n+1)]andsoon.

20

ADDFM

AddressingModeMainMemoryAddress

0

Post-increment

Note:Whenpost-incrementisselectedtheHTUwillautomaticallyincrementby4bytesfora32-

bitdatasizeandby8bytesfora64-bitdatasize.

1

Constant

19-18

TMBA

TransferModeforBufferA

0

OneShotbuffermode

1h

Circularbuffermode

AllOthers

AutoSwitchmode

17-16

TMBB

TransferModeforBufferB

0

OneShotbuffermode

1h

Circularbuffermode

AllOthers

AutoSwitchmode

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

941

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DoubleControlPacketConfigurationMemorywww.ti.com

Table21-45.InitialNHETAddressandControlRegister(HTUIHADDRCT)FieldDescriptions(continued)

Bit

Field

Value

Description

12-2

IHADDR

InitialNHETAddress

TheinitialNHETAddresspointstotheNHETfield,whichisthefirstelementoftheframe.The

NHETaddress(Bits12:2)incrementsbyoneforeach32-bitNHETfieldandstartswithzeroatthe

first32-bitfieldintheNHETRAM.

Note:WhentheHTUaddressestheNHETRAMitusesonlythenumberofaddressbitsrequired

fortheactualNHETRAMsize.IftheNHETaddressexceedstheactualNHETRAMsize,the

unusedMSBbitsoftheaddresswillbeignoredandtheaddressrollsovertothestartoftheNHET

RAM.

1-0

Reserved

0

Readreturns0.Writeshavenoeffect.

21.5.4InitialTransferCountRegister(HTUITCOUNT)

Figure21-45.InitialTransferCountRegister(HTUITCOUNT)

31

21

20

16

Reserved

IETCOUNT

R-0

R/WP-X

15

8

7

0

Reserved

IFTCOUNT

R-0

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-46.InitialTransferCountRegister(HTUITCOUNT)FieldDescriptions

Bit

Field

Value

Description

31-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20-16

IETCOUNT

InitialElementTransferCount

Definesthenumberofelementtransfers.

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

IFTCOUNT

InitialFrameTransferCount

Definesthenumberofframetransfers.

942

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDoubleControlPacketConfigurationMemory

21.5.5CurrentFullAddressARegister(HTUCFADDRA)

Figure21-46.CurrentFullAddressARegister(HTUCFADDRA)

31

16

CFADDRA

R/WP-X

15

0

CFADDRA

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-47.CurrentFullAddressARegister(HTUCFADDRA)FieldDescriptions

Bit

Field

Value

Description

31-0

CFADDRA

Current(byte)AddressofBufferA

Thecurrentmainmemoryaddressregisterisupdatedattheendofeachframe.Thereforeitpoints

tothestartaddressoftheframe,whichisthenexttotransfer,ifcurrentlynoframeistransferred

onthisDCP.Foranongoingframetransfer,itpointstothestartaddressofthisframe.Afterthe

lastelementofabufferwastransferreditwillpointtothebufferendaddressplus0x4.

ThemainpurposeofthecurrentfulladdressregistersforbufferAandbufferB(seenextsection)

istoenablethesoftwaretofindouttherecentlytransferredelementinthefrozenbufferwhilethe

addressoftheactivebufferincrements.

Note:AframecanbeautomaticallystoppedifanyoftheeventslistedinConditionsforFrame

TransferInterruptionhappens.Ifaframeisstoppedbeforeitcouldcomplete,thenthecurrentfull

addressregisterisnotupdatedanditwillpointtothestartofthebadframeaftertheDCPwas

automaticallydisabled.

Totransferthefirstframeofbufferx,theinformationinthecorrespondinginitialDCPRAM(IFADDRx,

IHADDRCT,ITCOUNT)isloadedtoaninternalstatemachinebutnottothecurrentDCPRAM

(CFADDRx,CFTCTx).

Thisisvalidforallofthefollowingmodes:

•Bufferxhasreachedit'sendincircularmodeandrollsbacktoitsstartaddress.

•CPxisenabledbyaCPENAaccess(andcorrespondingBIMbitiszero).

•ACPENAaccessorauto-switchmodecausesaswitchfromCPytoCPx

Thismeansafterstartingthetransferto/frombufferx,CFADDRxandCFTCTxisnotupdatedbeforethe

endofthefirstframe.SobeforethesoftwareswitchesfromCPytoCPxusingawriteaccesstothe

CPENAregister,itneedstoinitializeCFADDRx,CFTCTx.Thisallowsthesoftwaretofindoutifthenext

requestonCPxaftertheswitchingtoCPxwasdelayedorneveroccurring.

943

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DoubleControlPacketConfigurationMemorywww.ti.com

21.5.6CurrentFullAddressBRegister(HTUCFADDRB)

Figure21-47.CurrentFullAddressBRegister(HTUCFADDRB)

31

16

CFADDRB

R/WP-X

15

0

CFADDRB

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-48.CurrentFullAddressBRegister(HTUCFADDRB)FieldDescriptions

Bit

Field

Value

Description

31-0

CFADDRB

Current(byte)AddressofBufferB

Thecurrentmainmemoryaddressregisterisupdatedattheendofeachframe.Thereforeitpoints

tothestartaddressoftheframe,whichisthenexttotransfer,ifcurrentlynoframeistransferred

onthisDCP.Ifcurrentlyaframeistransferred,thenitpointstothestartaddressofthisframe.

Afterthelastelementofabufferwastransferreditwillpointtothebufferendaddressplus0x4.

ThemainpurposeofthecurrentfulladdressregistersforbufferAandbufferB(seenextsection)

istoenablethesoftwaretofindouttherecentlytransferredelementinthefrozenbufferwhilethe

addressoftheactivebufferincrements.

Note:AframecanbeautomaticallystoppedifanyoftheeventslistedinConditionsforFrame

TransferInterruptionhappens.Ifaframeisstoppedbeforeitcouldcomplete,thenthecurrentfull

addressregisterisnotupdatedanditwillpointtothestartofthebadframeaftertheDCPwas

automaticallydisabled.

Totransferthefirstframeofbufferx,theinformationinthecorrespondinginitialDCPRAM(IFADDRx,

IHADDRCT,ITCOUNT)isloadedtoaninternalstatemachinebutnottothecurrentDCPRAM

(CFADDRx,CFTCTx).

Thisisvalidforallofthefollowingmodes:

•Bufferxhasreachedit'sendincircularmodeandrollsbacktoitsstartaddress.

•CPxisenabledbyaCPENAaccess(andcorrespondingBIMbitiszero).

•ACPENAaccessorauto-switchmodecausesaswitchfromCPytoCPx

Thismeansafterstartingthetransferto/frombufferx,CFADDRxandCFTCTxisnotupdatedbeforethe

endofthefirstframe.SobeforethesoftwareswitchesfromCPytoCPxusingawriteaccesstothe

CPENAregister,itneedstoinitializeCFADDRx,CFTCTx.Thisallowsthesoftwaretofindoutifthenext

requestonCPxaftertheswitchingtoCPxwasdelayedorneveroccurring.

944

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDoubleControlPacketConfigurationMemory

21.5.7CurrentFrameCountRegister(HTUCFCOUNT)

Thecurrentframecountregisterenablesthesoftwaretofindouttherecentelementinthefrozenbuffer

whilethecounteroftheactivebufferdecrements.

Figure21-48.CurrentFrameCountRegister(HTUCFCOUNT)

31

24

23

16

Reserved

CFTCTA

R-0

R/WP-X

15

8

7

0

Reserved

CFTCTB

R-0

R/WP-X

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset;X=Unknown

Table21-49.InitialTransferCountRegister(HTUCFCOUNT)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-16

CFTCTA

CurrentFrameTransferCountforCPA.Itisupdatedattheendofeachframe.

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

CFTCTB

CurrentFrameTransferCountforCPB.Itisupdatedattheendofeachframe.

945

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Exampleswww.ti.com

21.6Examples

21.6.1ApplicationExamplesforSettingtheTransferModesofCPAandBofaDCP

Table21-50.ApplicationExamplesforSettingtheTransferModesofCPAandBofaDCP

CPA

CPB

BufferAcanbeusedasa"oneshot"buffer.AbufferfullinterruptenabledforCPA

Oneshot

Notused

cansignalreachingtheendofthebuffer.

Candoublethebuffersizefora"oneshot"buffer.AbufferfullinterruptenabledforCP

Autoswitch

Oneshot

Bcansignalreachingtheendofthebuffer.

TheCPUcanswitchthebuffersatarbitrarytimes.Itwillfillorreadthefrozenbuffer

Circular

Circular

duringtheotherbufferisfilledorreadbytheHTU.Interruptsarenotrequiredforthis

case.

Bufferfullinterrupts(enabledforCPAandB)signalwhentheendofabufferis

reached.AfteronebufferiscompletedtheaccordingCPUinterruptroutinewillreador

Autoswitch

Autoswitch

refillthisbuffer.AtthesametimetheotherbufferisreadorfilledbytheHTU.Herethe

timewhenthebuffermustbereadisdeterminedbythetimeoftheinterrupt

(determinedbythefrequencyoftheNHETtransferrequests).

21.6.2SoftwareExampleSequenceAssumingCircularModeforBothCPAandB

TheexampleassumestheNHETaddresstobereadandthemainmemoryaddresstobewritten.

I1

CPUinitializesinitialDCP:IFADDRA,IFADDRB,IHADDRCT,ITCOUNT

I2

CPUclearscurrentDCP:CFADDRA,CFADDRB,CFTCTA,CFTCTB

I3

CPUclearsBFINTFLflagofCPAandB

I4

EnableCPAwiththeCPENAregister.NowtheHTUfillsbufferA

AftersometimetheCPUintendstoreadbufferA:

CPUenablesCPBanddisablesCPAbywritingtotheCPENAregister.Afterthis

A1

switch,theHTUfillsbufferB.FillingbufferBstartswithitsinitialfulladdressandinitial

framecounter

A2

CPUwaitsforCPAbusybitequalszero

Optional:CPUverifiesthattheCPArequestlostflagisnotset.ThebuserrorflagofCP

A3

Acouldalsobechecked

A4

CPUreadsthefrozenCFTCTA,whichindicatesthefilllevelinthebuffer

CPUsetscurrentCPA(CFTCTAand/orCFADDRA)tozero.Thisallowstofindoutif

A5

anyrequesthashappenedduringthenexttimebufferAisactive

A6

CPUreadsBFINTFLflagofbufferA

CPUclearstheBFINTFLflagofbufferA.Thisisaninitializationforthenexttimebuffer

A7

Aisused

CPUreadsvalidvaluesoffrozenbufferA.AfterreadingtheCPUdoesnotneedtoclear

A8

thefrozenbufferA

946

High-EndTimerTransferUnit(HTU)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comExamples

AftersometimetheCPUintendstoreadbufferB:

CPUenablesCPAanddisablesCPBbywritingtotheCPENAregister.Afterthis

B1

switch,theHTUfillsbufferA.FillingbufferAstartswithitsinitialfulladdressandinitial

framecounter

B2

CPUwaitsforCPBbusybitequalszero

Optional:CPUverifiesthattheCPBrequestlostflagisnotset.ThebuserrorflagofCP

B3

Bcouldalsobechecked

B4

CPUreadsthefrozenCFTCTB,whichindicatesthefilllevelinthebuffer

CPUsetscurrentCPB(CFTCTBand/orCFADDRB)tozero.Thisallowstofindoutif

B5

anyrequesthashappenedduringthenexttimebufferBisactive

B6

CPUreadsBFINTFLflagofbufferB

CPUclearstheBFINTFLflagofbufferB.Thisisaninitializationforthenexttimebuffer

B7

Bisused

CPUreadsvalidvaluesoffrozenbufferB.AfterreadingtheCPUdoesnotneedtoclear

B8

thefrozenbufferB

AftersometimetheCPUintendstoreadbufferA:

A1)...seeabove...

NOTE:Thebufferfullinterruptdoesn'tneedtobeenabled.TheBFINTFLflagisusedtoindicatea

circularoverrunofthebuffer.IftheBFINTFLflagisset,alsothebuffersectionafterthe

frozenfulladdresscouldberead.

StepsA3andB3intheexamplesequenceaboveimplythatrequestlostinterruptsaredisabled.The

examplebelowassumesthatrequestlostinterruptsareenabled.

Requestlostdetectionwithinterruptenabled.

21.6.3ExampleofanInterruptDispatchFlowforaRequestLostInterrupt

•Arequestlostoccursandtheinterruptroutinestarts.

•ReadingINTOFFx.INTYPExshowsthatRLOSTFListheinterruptsource.

•ReadingINTOFFx.CPOFFx=AhshowsthatDCP5/CPAhascausedtheRLOSTFLinterrupt.The

hardwareautomaticallyclearsbit(2·5+0)inRLOSTFL.

•ReadingRLOSTFL=84hshowsthatalsoanotherrequestlosteventhappenedonDCP1/CPA[bit

(2·1+0)]andonDCP3/CPB[bit(2·3+1)]atthesametimeoraftertherequestlostoccurredonDCP

5/CPA.

•Writingback84htoRLOSTFLclearsbits2and7andtheaccordingpendinginterrupts.

947

SPNU499B–November2012–RevisedAugust2013

High-EndTimerTransferUnit(HTU)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter22

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

Thischapterdescribesthegeneral-purposeinput/output(GIO)module.TheGIOmoduleprovidesthe

familyofdeviceswithinput/output(I/O)capability.TheI/Opinsarebidirectionalandbit-programmable.

TheGIOmodulealsosupportsexternalinterruptcapability.

Topic...........................................................................................................................Page

22.1Overview........................................................................................................949

22.2QuickStartGuide............................................................................................950

22.3FunctionalDescriptionofGIOModule................................................................952

22.4DeviceModesofOperation...............................................................................954

22.5GIOControlRegisters......................................................................................955

22.6I/OControlSummary........................................................................................972

948

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PINCONTROL BLOCK

INTERRUPT CONTROL BLOCK



GIOx[7:0] port

Host InterfaceGIO Module

Interrupt RequestsTo Interrupt Manager



www.ti.comOverview

22.1Overview

TheGIOmoduleoffersgeneral-purposeinput/outputcapability.Itsupportsuptoeight8-bitportsfora

totalofupto64GIOterminals.Eachofthese64terminalscanbeindependentlyconfiguredasinputor

outputandconfiguredasrequiredbytheapplication.TheGIOmodulealsosupportsgenerationof

interruptswheneverarisingesgeorfallingedgeoranytoggleisdetectedonupto32oftheseGIO

terminals.RefertothedevicedatasheetforidentifyingthenumberofGIOportssupportedandtheGIO

terminalscapableofgeneratinganinterrupt.

Figure22-1.GIOBlockDiagram

ThemainfeaturesoftheGIOmodulearesummarizedasfollows:

•AllowseachGIOterminaltobeconfiguredforgeneral-purposeinputoroutputfunctions

•SupportsprogrammablepulldirectionsoneachinputGIOterminal

•SupportsGIOoutputinpush/pulloropen-drainmodes

•Allowsupto32GIOterminalstobeusedforgeneratinginterruptrequests

949

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Enable pull?

Power-On ResetConfigure as input/output?Clear corresponding bits in GIODIR to 0Set corresponding bits in GIODIR to 1

Open drain?Pull up/down?Down

Output 1 or 0?

Release Peripheral Reset by setting PENA bit inClock Control Register (0xFFFFFFD0)

Enable clock to GIO through PCR (Check device datasheet for the peripheral select) 

Bring GIO out of reset by writing 1 to GIOGCR0

InputOutput

NoYes

NoYes

Set corresponding bits in to 1 

GIOPULDIS

Clear corresponding bits in to 0 

GIOPULDIS

Set corresponding bits in to 1 

GIOPDR

Clear corresponding bits in to 0 

GIOPDR

10

Clear correspondingbits in GIOPSL to 0  

Set corresponding bitsin  to GIOPSL to 1

Read corresponding bits in GIODIN, getting input value  

Write 1 to corresponding bitsin   

GIODSET

Write 1 to  corresponding bitsin   

GIODCLR



QuickStartGuidewww.ti.com

22.2QuickStartGuide

TheGIOmodulecomprisestwoseparatecomponents:aninput/output(I/O)blockandaninterrupt

generationblock.Figure22-2andFigure22-3showwhattheusershoulddoafterresettoconfigurethe

GIOmoduleasI/Oorforgeneratinginterrupts.

Figure22-2.I/OFunctionQuickStartFlowChart

950

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Power-On Reset

Enable GIO through PCR (Check device  datasheet for the peripheral select)Both rising and falling edge / single edge trigger interrupt?Set corresponding bits in   to 1

GIOINTDET

Clear corresponding bits in   to 0

GIOINTDET

Rising/Falling edge?Enable the FIQ/IRQ interrupt in CPU (Check CPU User Guide)Bring GIO out of reset (See register  )

GIOGCR0

Enable the FIQ/IRQ interrupt in VIM (Check VIM User Guide)Configure as high /low level interrupt?Write 1 to corresponding bits in  

GIOLVLSET

Write 1 to corresponding bits in  

GIOLVLCLR

Low levelHigh levelWrite 1 to corresponding bits in  to enable interrupt

GIOENASET 

Write 0xFF to clean the GIO interrupt flag register  

GIOFLG

Enable Peripherals by setting PENA bit in Clock Control Register (0xFFFFFFD0)

Initialize vector interrupt table - Map GIO low level interrupt and / or high levelinterrupt service routine to pre-defined device specific interrupt channel. (Check device datasheet)   

Both edgeSingle edge

RisingFalling

Set corresponding bits in to 1 

GIOPOL

Clear corresponding bits into 0 

GIOPOL 



www.ti.comQuickStartGuide

Figure22-3.InterruptGenerationFunctionQuickStartFlowChart

InGIOinterruptserviceroutine,usershallreadtheGIOoffsetregisterGIOOFFA/GIOOFFB(depending

onhigh/lowlevelinterrupt)tocleartheflagandfindthependinginterruptGIOchannel.

951

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FunctionalDescriptionofGIOModulewww.ti.com

22.3FunctionalDescriptionofGIOModule

AsshownearlierinFigure22-1theGIOmodulecomprisesoftwoseparatecomponents:aninput/output

(I/O)blockandaninterruptblock.

22.3.1I/OFunctions

TheI/OblockallowseachGIOterminaltobeconfiguredforuseasageneral-purposeinputoroutputin

theapplication.TheGIOmodulesupportsmultipleregisterstocontrolthevariousaspectsoftheinputand

outputfunctions.Thesearedescribedasfollows.

•Datadirection(GIODIR)

ConfiguresGIOterminal(s)asinputoroutputthroughtheGIODIRxregisters.

•Datainput(GIODIN)

ReflectsthelogiclevelonGIOterminalsintheGIODINxregisters.Ahighvoltage(VIHorgreater)

appliedtothepincausesahighvalue(1)inthedatainputregister(GIODIN[7:0]).Whenalowvoltage

(VILorless)isappliedtothepin,thedatainputregisterreadsalowvalue(0).TheVIHandVILvalues

aredevicespecificandcanbefoundinthedevicedatasheet.

•Dataoutput(GIODOUT)

ConfiguresthelogicleveltobeoutputonGIOterminal(s)configuredasoutputs.Alowvalue(0)written

tothedataoutputregisterforcesthepintoalowoutputvoltage(VOLorlower).Ahighvalue(1)written

tothedataoutputregister(GIODOUTx)forcesthepintoahighoutputvoltage(VOHorhigher)ifthe

opendrainfunctionalityisdisabled(GIOPDRx[7:0]).Ifopendrainfunctionalityisenabled,ahighvalue

(1)writtentothedataoutputregisterforcesthepintoahigh-impedancestate(Z).

•Dataset(GIODSET)

AllowslogicHIGHtobeoutputonGIOterminal(s)configuredasoutputsbywriting1'stotherequired

bitsintheGIODSETxregisters.Ifopendrainfunctionalityisenabled,ahighvalue(1)writtentothe

dataoutputregisterforcesthepintoahigh-impedancestate(Z).TheGIODSETxregisterseliminate

theneedfortheapplicationtoperformaread-modify-writeoperationwhenitneedstosetoneormore

GIOpin(s).

•Dataclear(GIODCLR)

AllowslogicLOWtobeoutputonGIOterminal(s)configuredasoutputsbywriting1stotherequired

bitsintheGIODCLRxregisters.TheGIODCLRxregisterseliminatetheneedfortheapplicationto

performaread-modify-writeoperationwhenitneedstoclearoneormoreGIOpin(s).

•Opendrain(GIOPDR)

OpendrainfunctionalityisenabledordisabledusingtheopendrainregisterGIOPDR[7:0]register.If

open-drainmodeoutputisenabledonapin,ahighvalue(1)writtentothedataoutputregister

(GIODOUTx[7:0])forcesthepintoahighimpedancestate(Z).

•Pulldisable(GIOPULDIS)

DisablestheinternalpullonGIOterminal(s)configuredasinputsbywritingtotheGIOPULDISx

registers.

•Pullselect(GIOSPL)

SelectsinternalpulldownorpulluponGIOterminal(s)configuredasinputsbywritingtothe

GIOPULSELxregisters.

Refertothespecificdevice'sdatasheettoidentifythenumberofGIOportsaswellastheinputandoutput

functionssupported.Somedevicesmaynotsupporttheprogrammablepullcontrols.Inthatcase,thepull

disableandthepullselectregistercontrolswillnotwork.

22.3.2InterruptFunction

TheGIOmodulesupportsupto32terminalstobeconfiguredforgeneratinganinterrupttothehost

processorthroughtheVectoredInterruptManager(VIM).Themainfunctionsoftheinterruptblockare:

•SelecttheGIOpin(s)thatis/areusedtogenerateinterrupt(s)

Thisisdoneviatheinterruptenablesetandclearregisters,GIOENASETandGIOENACLR

•SelecttheedgeontheselectedGIOpin(s)thatis/areusedtogenerateinterrupt(s):rising/falling/both

952

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




High-levelLow-levelInterrupt enableInterrupt disable

GIOFLG

     

GIOPOL

Rising edgeFalling edge VBUSP (peripheral bus)

GIODSETxGIODOUTxGIODINxGIODIRx

external pin

GIODCLRxGIOPDRx

GIOPULDIS

Pull SelectPull Disable

GIOPSLGIOINTDET

GIOENASETGIOENACLR

GIOLVLSETGIOLVLCLR

Low-level(level B)interrupthandling 

(1)

High-level(level A)interrupthandling 

(1)

To VIM

To VIM



www.ti.comFunctionalDescriptionofGIOModule

RisingorfallingedgecanbeselectedviatheGIOPOLregister(GIOPOL).Ifinterruptisrequiredtobe

generatedonbothrisingandfallingedges,thiscanbeconfiguredviatheGIOINTDETregister(

GIOINTDET).

•Selecttheinterruptpriority

LoworHigh-levelinterruptcanbeselectedthroughtheGIOLVLSETandGIOLVLCLRregisters(

GIOLVLSET)andGIOLVLCLR).

•IndividualinterruptflagsaresetintheGIOFLGregister(Section22.5.6)

TheterminalsonGIOportsAthroughDareallinterrupt-capableandcanbeusedtohandleeithergeneral

I/Ofunctionsorinterruptrequests.EachinterruptrequestcanbeconnectedtotheVIMatoneoftwo

differentlevels–High(orA)andLow(orB),dependingontheVIMchannelnumber.TheVIMhasan

inherentpriorityschemesothatarequestonalowernumberchannelhasahigherprioritythanarequest

onahighernumberchannel.ReferthedevicedatasheettoidentifytheVIMchannelnumbersfortheGIO

levelAandlevelBinterruptrequests.AlsonotethattheinterruptpriorityoflevelAandlevelBinterrupt

handlingblockscanbere-programmedintheVIM.

22.3.3GIOBlockDiagram

TheGIOblockdiagram(seeFigure22-4)representstheflowofinformationthroughapin.Theshaded

areacorrespondstotheI/Oblock;theunshadedareacorrespondstotheinterruptblock.

Figure22-4.GIOBlockDiagram

(1)Asinglelow-level-interrupt-handlingblockandasinglehigh-level-interrupt-handlingblockserviceallofthe

interrupt-capableexternalpins,butonlyonepincanbeservicedbyaninterruptblockatatime.

953

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DeviceModesofOperationwww.ti.com

22.4DeviceModesofOperation

TheGIOmodulebehavesdifferentlyindifferentmodesofoperation.Therearetwomainmodes:

•Emulationmode

•Power-downmode(low-powermode)

22.4.1EmulationMode

EmulationmodeisusedbydebuggertoolstostoptheCPUatbreakpointstoreadregisters.

NOTE:EmulationModeandEmulationRegisters

EmulationmodeisamodeofoperationofthedeviceandisseparatefromtheGIO

emulationregisters(GIOEMU1andGIOEMU2).Thecontentsoftheseemulationregisters

areidenticaltothecontentsofGIOoffsetregisters(GIOOFF1andGIOOFF2).Both

emulationregistersandGIOoffsetregistersareNOTclearedwhentheyarereadin

emulationmode.GIOoffsetregistersareclearedwhentheyarereadinnormalmode(other

thanemulationmode).TheemulationregistersareNOTclearedwhentheyarereadin

normalmode.Theintentionfortheemulationregistersisthatsoftwarecanusethemwithout

clearingtheflags.

Duringemulationmode:

•ExternalinterruptsarenotcapturedbecausetheVIMisunabletoserviceinterrupts.

•Anyregistercanbereadwithoutaffectingthestateofthesystem.

•Awritetoaregisterstilldoesaffectthestateofthesystem.

22.4.2Power-DownMode(Low-PowerMode)

Inthepower-downmode,theclocksignaltotheGIOmoduleisdisabled.Thus,thereisnoswitchingand

theonlycurrentdrawcomesfromleakagecurrent.Inpower-downmode,interruptpinsbecomelevel-

sensitiveratherthanedgesensitive.Thepolaritybitchangesfunctionfromfalling-edge-triggeredtolow-

level-triggeredandrising-edge-triggeredtohigh-level-triggered.Acorrespondinglevelonaninterruptpin

pullsthemoduleoutoflow-powermode.

22.4.2.1Module-LevelPowerDown

TheGIOmodulecanbeplacedintoapowerdownstatebydisablingtheGIOperipheralmoduleviathe

appropriatebitintheperipheralpowerdownregister.PleaserefertothePeripheralCentralResource

Registers(Section2.5.3)fordetails.

22.4.2.2Device-LevelPowerDown

Theentiredevicecanbeplacedinoneofthepre-definedlow-powermodes:doze,snooze,orsleepusing

theclocksourceandclockdomaindisableregistersinthesystemmodule.

954

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5GIOControlRegisters

Table22-1showsthesummaryoftheGIOregisters.Theregistersareaccessiblein8-,16-,and32-bit

readsorwrites.

ThestartaddressfortheGIOmoduleisFFF7BC00h.

TheGIOmodulesupportsupto8ports:GIOA,GIOB,GIOC,GIOD,GIOE,GIOF,GIOG,andGIOH.Refer

thedevicedatasheettoidentifytheactualnumberofGIOportsandthenumberofpinsineachGIOport

implementedonthisdevice.

TheGIOmodulesupportsupto4interrupt-capableports:GIOA,GIOB,GIOC,andGIOD.Referthe

devicedatasheettoidentifytheactualnumberofinterrupt-capableGIOportsandthenumberofpinsin

eachGIOportimplementedonthisdevice.

Table22-1.GIOControlRegistersSummary

Offset

Acronym

RegisterDescription

Section

FFF7BC00h

GIOGCR0

GIOGlobalControlRegister

Section22.5.1

FFF7BC08h

GIOINTDET

GIOInterruptDetectRegister

Section22.5.2

FFF7BC0Ch

GIOPOL

GIOInterruptPolarityRegister

Section22.5.3

FFF7BC10h

GIOENASET

GIOInterruptEnableSetRegister

Section22.5.4.1

FFF7BC14h

GIOENACLR

GIOInterruptEnableClearRegister

Section22.5.4.2

FFF7BC18h

GIOLVLSET

GIOInterruptPrioritySetRegister

Section22.5.5.1

FFF7BC1Ch

GIOLVLCLR

GIOInterruptPriorityClearRegister

Section22.5.5.2

FFF7BC20h

GIOFLG

GIOInterruptFlagRegister

Section22.5.6

FFF7BC24h

GIOOFF1

GIOOffset1Register

Section22.5.7

FFF7BC28h

GIOOFF2

GIOOffset2Register

Section22.5.8

FFF7BC2Ch

GIOEMU1

GIOEmulation1Register

Section22.5.9

FFF7BC30h

GIOEMU2

GIOEmulation2Register

Section22.5.10

FFF7BC34h,FFF7BC54h,

GIODIR[A-H]

GIODataDirectionRegister

Section22.5.11

FFF7BC74h,FFF7BC94h,

FFF7BCB4h,FFF7BCD4h,

FFF7BCF4h,FFF7BD14h

FFF7BC38h,FFF7BC58h,

GIODIN[A-H]

GIODataInputRegister

Section22.5.12

FFF7BC78h,FFF7BC98h,

FFF7BCB8h,FFF7BCD8h,

FFF7BCF8h,FFF7BD18h

FFF7BC3Ch,FFF7BC5Ch,

GIODOUT[A-H]

GIODataOutputRegister

Section22.5.13

FFF7BC7Ch,FFF7BC9Ch,

FFF7BCBCh,FFF7BCDCh,

FFF7BCFCh,FFF7BD1Ch

FFF7BC40h,FFF7BC60h,

GIODSET[A-H]

GIODataSetRegister

Section22.5.14

FFF7BC80h,FFF7BCA0h,

FFF7BCC0h,FFF7BCE0h,

FFF7BD00h,FFF7BD20h

FFF7BC44h,FFF7BC64h,

GIODCLR[A-H]

GIODataClearRegister

Section22.5.15

FFF7BC84h,FFF7BCA4h,

FFF7BCC4h,FFF7BCE4h,

FFF7BD04h,FFF7BD24h

FFF7BC48h,FFF7BC68h,

GIOPDR[A-H]

GIOOpenDrainRegister

Section22.5.16

FFF7BC88h,FFF7BCA8h,

FFF7BCC8h,FFF7BCE8h,

FFF7BD08h,FFF7BD28h

FFF7BC4Ch,FFF7BC6Ch,

GIOPULDIS[A-H]

GIOPullDisableRegister

Section22.5.17

FFF7BC8Ch,FFF7BCACh,

FFF7BCCCh,FFF7BCECh,

FFF7BD0Ch,FFF7BD2Ch

FFF7BC50h,FFF7BC70h,

GIOPSL[A-H]

GIOPullSelectRegister

Section22.5.18

FFF7BC90h,FFF7BCB0h,

FFF7BCD0h,FFF7BCF0h,

FFF7BD10h,FFF7BD30h

955

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.1GIOGlobalControlRegister(GIOGCR0)

TheGIOGCR0registercontainsonebitthatcontrolsthemoduleresetstatus.Writingazero(0)tothisbit

putsthemoduleinaresetstate.Aftersystemreset,thisbitmustbesetto1beforenormaloperationscan

beginonthismodule.Figure22-5andTable22-2describethisregister.

Figure22-5.GIOGlobalControlRegister(GIOGCR0)[address=FFF7BC00h]

31

16

Reserved

R-0

15

1

0

Reserved

RESET

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table22-2.GIOGlobalControlRegister(GIOGCR0)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

RESET

GIOreset.

0

TheGIOisinresetstate.

1

TheGIOisoperatingnormally.

NOTE:NotethatputtingtheGIOmoduleinresetstateisnotthesameasputtingitinalow-power

state.

956

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.2GIOInterruptDetectRegister(GIOINTDET)

TheGIOINTDETregisterprovidestheflexibilitytoeitherignorethepolarityoftheedgesthatare

recognizedasaninterrupt,inwhichcasebothrisingandfallingedgesarerecognized,orrecognizingthe

interruptonspecificallyarisingorfallingedgeasdeterminedbytheGIOPOLregister.Toensure

recognitionofthesignalasanedge,thesignalmustmaintainthenewlevelforatleastoneVCLKcycle.

Figure22-6andTable22-3describethisregister.

Figure22-6.GIOInterruptDetectRegister(GIOINTDET)[address=FFF7BC08h]

31

24

23

16

GIOINTDET3

GIOINTDET2

R/W-0

R/W-0

15

8

7

0

GIOINTDET1

GIOINTDET0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-3.GIOInterruptDetectRegister(GIOINTDET)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOINTDET3

InterruptdetectionselectforpinsGIOD[7:0]

0

Theflagsetsoneitherafallingorarisingedgeonthecorrespondingpin,dependingonthe

polaritysetupinthepolarityregister(GIOPOL).

1

Theflagsetsonboththerisingandfallingedgesonthecorrespondingpin.

23-16

GIOINTDET2

InterruptdetectionselectforpinsGIOC[7:0]

0

Theflagsetsoneitherafallingorarisingedgeonthecorrespondingpin,dependingonthe

polaritysetupinthepolarityregister(GIOPOL).

1

Theflagsetsonboththerisingandfallingedgesonthecorrespondingpin.

15-8

GIOINTDET1

InterruptdetectionselectforpinsGIOB[7:0]

0

Theflagsetsoneitherafallingorarisingedgeonthecorrespondingpin,dependingonthe

polaritysetupinthepolarityregister(GIOPOL).

1

Theflagsetsonboththerisingandfallingedgesonthecorrespondingpin.

7-0

GIOINTDET0

InterruptdetectionselectforpinsGIOA[7:0]

0

Theflagsetsoneitherafallingorarisingedgeonthecorrespondingpin,dependingonthe

polaritysetupinthepolarityregister(GIOPOL).

1

Theflagsetsonboththerisingandfallingedgesonthecorrespondingpin.

957

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.3GIOInterruptPolarityRegister(GIOPOL)

TheGIOPOLregistercontrolsthepolarity-risingedge(lowtohigh)orfallingedge(hightolow)-thatsets

theflag.Toensurerecognitionofthesignalasanedge,thesignalmustmaintainthenewlevelforatleast

oneVCLKcycle.Whenthedeviceisinlowpowermode,theinterruptsarenolongertriggeredbyan

edge,butinsteadbyalevel.Therefore,inlowpowermode,theGIOPOLregistercontrolsthelevel,high

orlow,whichwilltriggertheinterrupt.Figure22-7andTable22-4describethisregister.

Figure22-7.GIOInterruptPolarityRegister(GIOPOL)[address=FFF7BC0Ch]

31

24

23

16

GIOPOL3

GIOPOL2

R/W-0

R/W-0

15

8

7

0

GIOPOL1

GIOPOL0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-4.GIOInterruptPolarityRegister(GIOPOL)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOPOL3

InterruptpolarityselectforpinsGIOD[7:0]

Normaloperation(userorprivilegedmode):

0

Theflagissetonthefallingedgeonthecorrespondingpin.

1

Theflagissetontherisingedgeonthecorrespondingpin.

Low-powermode(GIOmoduleclocksoff):

0

Theinterruptistriggeredonthelowlevel.

1

Theinterruptistriggeredonthehighlevel.

23-16

GIOPOL2

InterruptpolarityselectforpinsGIOC[7:0]

Normaloperation(userorprivilegedmode):

0

Theflagissetonthefallingedgeonthecorrespondingpin.

1

Theflagissetontherisingedgeonthecorrespondingpin.

Low-powermode(GIOmoduleclocksoff):

0

Theinterruptistriggeredonthelowlevel.

1

Theinterruptistriggeredonthehighlevel.

15-8

GIOPOL1

InterruptpolarityselectforpinsGIOB[7:0]

Normaloperation(userorprivilegedmode):

0

Theflagissetonthefallingedgeonthecorrespondingpin.

1

Theflagissetontherisingedgeonthecorrespondingpin.

Low-powermode(GIOmoduleclocksoff):

0

Theinterruptistriggeredonthelowlevel.

1

Theinterruptistriggeredonthehighlevel.

7-0

GIOPOL0

InterruptpolarityselectforpinsGIOA[7:0]

Normaloperation(userorprivilegedmode):

0

Theflagissetonthefallingedgeonthecorrespondingpin.

1

Theflagissetontherisingedgeonthecorrespondingpin.

Low-powermode(GIOmoduleclocksoff):

0

Theinterruptistriggeredonthelowlevel.

1

Theinterruptistriggeredonthehighlevel.

958

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.4GIOInterruptEnableRegisters(GIOENASETandGIOENACLR)

TheGIOENASETandGIOENACLRregisterscontrolwhichinterrupt-capablepinsareactuallyconfigured

asinterrupts.Iftheinterruptisenabled,therisingorfallingorbothedgesontheselectedpinleadtoan

interrupt.

22.5.4.1GIOENASETRegister

Figure22-8andTable22-5describethisregister.

NOTE:EnablingInterruptattheDeviceLevel

GIOcanbemappedtotwodifferentdevicelevelinterrupts,theGIOhighlevel(levelA)and

lowlevel(levelB)interruptsthroughprogrammingregistersGIOLVLSETandGIOLVLCLR.

Thecorrespondingbittothemappeddevicelevelinterruptmustbesetwithinthevectored

interruptmanager(VIM)intheinterruptmaskregister(REQMASK)toenabletheappropriate

interrupts.Additionally,theARMCPU(CPSRbit7or6)mustbeclearedtorecognize

interruptrequests(IRQ/FIQ).

Figure22-8.GIOInterruptEnableSetRegister(GIOENASET)[address=FFF7BC10h]

31

24

23

16

GIOENASET3

GIOENASET2

R/W-0

R/W-0

15

8

7

0

GIOENASET1

GIOENASET0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-5.GIOInterruptEnableSetRegister(GIOENASET)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOENASET3

InterruptenableforpinsGIOD[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

23-16

GIOENASET2

InterruptenableforpinsGIOC[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

15-8

GIOENASET1

InterruptenableforpinsGIOB[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

7-0

GIOENASET0

InterruptenableforpinsGIOA[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

959

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.4.2GIOENACLRRegister

Thisregisterdisablestheinterrupt.Figure22-9andTable22-6describethisregister.

Figure22-9.GIOInterruptEnableClearRegister(GIOENACLR)[address=FFF7BC14h]

31

24

23

16

GIOENACLR3

GIOENACLR2

R/W-0

R/W-0

15

8

7

0

GIOENACLR1

GIOENACLR0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-6.GIOInterruptEnableClearRegister(GIOENACLR)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOENACLR3

InterruptenableforpinsGIOD[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisdisabled.

23-16

GIOENACLR2

InterruptenableforpinsGIOC[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisdisabled.

15-8

GIOENACLR1

InterruptenableforpinsGIOB[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisdisabled.

7-0

GIOENACLR0

InterruptenableforpinsGIOA[7:0]

0

Read:Theinterruptisdisabled.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptisdisabled.

960

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.5GIOInterruptPriorityRegisters(GIOLVLSETandGIOLVLCLR)

TheGIOLVLSETandGIOLVLCLRregistersconfiguretheinterruptsashigh-level(level1)orlow-level

(level2)goingtotheVIM.Eachinterruptisindividuallyconfigured.

•Thehigh-levelinterruptsarerecordedtoGIOOFF1andGIOEMU1.

•Thelow-levelinterruptsarerecordedtoGIOOFF2andGIOEMU2.

22.5.5.1GIOLVLSETRegister

TheGIOLVLSETregisterisusedtoconfigureaninterruptasahigh-levelinterruptgoingtotheVIM.An

interruptcanbeconfiguredasahighlevelinterruptbywritinga1intothecorrespondingbitofthe

GIOLVLSETregister.Writingazerohasnoeffect.Figure22-10andTable22-7describethisregister.

Figure22-10.GIOInterruptPriorityRegister(GIOLVLSET)[address=FFF7BC18h]

31

16

GIOLVLSET3

GIOLVLSET2

R/W-0

R/W-0

15

8

7

0

GIOLVLSET1

GIOLVLSET0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-7.GIOInterruptPriorityRegister(GIOLVLSET)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOLVLSET3

GIOhighpriorityinterruptforpinsGIOD[7:0].

0

Read:Theinterruptisalow-levelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsare

recordedtoGIOOFF1andGIOEMU1.

23-16

GIOLVLSET2

GIOhighpriorityinterruptforpinsGIOC[7:0].

0

Read:Theinterruptisalow-levelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsare

recordedtoGIOOFF1andGIOEMU1.

15-8

GIOLVLSET1

GIOhighpriorityinterruptforpinsGIOB[7:0].

0

Read:Theinterruptisalow-levelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsare

recordedtoGIOOFF1andGIOEMU1.

7-0

GIOLVLSET0

GIOhighpriorityinterruptforpinsGIOA[7:0].

0

Read:Theinterruptisalow-levelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

Write:Writingazerotothisbithasnoeffect.

1

Readorwrite:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsare

recordedtoGIOOFF1andGIOEMU1.

961

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.5.2GIOLVLCLRRegister

TheGIOLVLCLRregisterisusedtoconfigureaninterruptasalowlevelinterruptgoingtotheVIM.

Figure22-11andTable22-8describethisregister.

Figure22-11.GIOInterruptPriorityRegister(GIOLVLCLR)[address=FFF7BC1Ch]

31

16

GIOLVLCLR3

GIOLVLCLR2

R/W-0

R/W-0

15

8

7

0

GIOLVLCLR1

GIOLVLCLR0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-8.GIOInterruptPriorityRegister(GIOLVLCLR)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOLVLCLR3

GIOlowpriorityinterruptforpinsGIOD[7:0]

0

Read:Theinterruptisalow-levelinterrupt.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsarerecordedto

GIOOFF1andGIOEMU1.

Write:Theinterruptissetasalowlevelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

23-16

GIOLVLCLR2

GIOlowpriorityinterruptforpinsGIOC[7:0]

0

Read:Theinterruptisalow-levelinterrupt.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsarerecordedto

GIOOFF1andGIOEMU1.

Write:Theinterruptissetasalowlevelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

15-8

GIOLVLCLR1

GIOlowpriorityinterruptforpinsGIOB[7:0]

0

Read:Theinterruptisalow-levelinterrupt.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsarerecordedto

GIOOFF1andGIOEMU1.

Write:Theinterruptissetasalowlevelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

7-0

GIOLVLCLR0

GIOlowpriorityinterruptforpinsGIOA[7:0]

0

Read:Theinterruptisalow-levelinterrupt.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theinterruptissetasahighlevelinterrupt.Thehigh-levelinterruptsarerecordedto

GIOOFF1andGIOEMU1.

Write:Theinterruptissetasalowlevelinterrupt.Thelow-levelinterruptsarerecordedto

GIOOFF2andGIOEMU2.

962

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.6GIOInterruptFlagRegister(GIOFLG)

TheGIOFLGregistercontainsflagsindicatingthatthetransitionedge(assetinGIOINTDETand

GIOPOL)hasoccurred.Theflagisalsoclearedbyreadingtheappropriateinterruptoffsetregister

(GIOOFF1orGIOOFF2).Figure22-12andTable22-9describethisregister.

Figure22-12.GIOInterruptFlagRegister(GIOFLG)[address=FFF7BC20h]

31

24

23

16

GIOFLG3

GIOFLG2

R/WC-0

R/WC-0

15

8

7

0

GIOFLG1

GIOFLG0

R/WC-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table22-9.GIOInterruptFlagRegister(GIOFLG)FieldDescriptions

Bit

Field

Value

Description

31-24

GIOFLG3

GIOflagforpinsGIOD[7:0].

0

Read:Atransitionhasnotoccurredsincethelastclear.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theselectedtransitiononthecorrespondingpinhasoccurred.

Write:Thecorrespondingbitisclearedto0.

Note:Thisbitisalsoclearedbyareadtothecorrespondingbitintheappropriateoffset

register

23-16

GIOFLG2

GIOflagforpinsGIOC[7:0].

0

Read:Atransitionhasnotoccurredsincethelastclear.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theselectedtransitiononthecorrespondingpinhasoccurred.

Write:Thecorrespondingbitisclearedto0.

Note:Thisbitisalsoclearedbyareadtothecorrespondingbitintheappropriateoffset

register

15-8

GIOFLG1

GIOflagforpinsGIOB[7:0].

0

Read:Atransitionhasnotoccurredsincethelastclear.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theselectedtransitiononthecorrespondingpinhasoccurred.

Write:Thecorrespondingbitisclearedto0.

Note:Thisbitisalsoclearedbyareadtothecorrespondingbitintheappropriateoffset

register

7-0

GIOFLG0

GIOflagforpinsGIOA[7:0].

0

Read:Atransitionhasnotoccurredsincethelastclear.

Write:Writingazerotothisbithasnoeffect.

1

Read:Theselectedtransitiononthecorrespondingpinhasoccurred.

Write:Thecorrespondingbitisclearedto0.

Note:Thisbitisalsoclearedbyareadtothecorrespondingbitintheappropriateoffset

register

NOTE:AninterruptflaggetssetwhentheselectedtransitionhappensonthecorrespondingGIOpin

regardlessofwhethertheinterruptgenerationisenabledornot.Itisrecommendedto

clearaflagbeforeenablingtheinterruptgenerationforatransitiononthecorrespondingGIO

pin.

963

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.7GIOOffsetRegister1(GIOOFF1)

TheGIOOFF1registerprovidesanumericaloffsetvaluethatrepresentsthependingexternalinterrupt

withhighpriority.Theoffsetvaluecanbeusedtolocatethepositionoftheinterruptroutineinavector

tableinapplicationsoftware.Figure22-13andTable22-10describethisregister.

NOTE:Readingthisregisterclearsit,GIOEMU1andthecorrespondingflagbitintheGIOFLG

register.However,inemulationmode,areadtothisregisterdoesnotclearanyregisteror

flag.IfmorethanoneGIOinterruptsarepending,thenreadingtheGIOOFF1registerwill

changethecontentsofGIOOFF1andGIOEMU1toshowtheoffsetvalueforthenext

highestprioritypendinginterrupt.TheapplicationcanchoosetoserviceallGIOinterrupts

fromthesameserviceroutinebycontinuingtoreadtheGIOOFF1registeruntilitreads

zeros.

Figure22-13.GIOOffset1Register(GIOOFF1)[address=FFF7BC24h]

31

16

Reserved

R-0

15

6

5

0

Reserved

GIOOFF1

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table22-10.GIOOffset1Register(GIOOFF1)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

GIOOFF1

GIOoffset1.Thesebitsindexthecurrentlypendinghigh-priorityinterrupt.Thisregisterandthe

flagbit(intheGIOFLGregister)arealsoclearedwhenthisregisterisread,exceptinemulation

mode.

0

Nointerruptispending.

1h

Interrupt0(correspondingtoGIOA0)ispendingwithahighpriority.

…

8h

Interrupt7(correspondingtoGIOA7)ispendingwithahighpriority.

9h

Interrupt8(correspondingtoGIOB0)ispendingwithahighpriority

…

10h

Interrupt16(correspondingtoGIOB7)ispendingwithahighpriority

…

20h

Interrupt32(correspondingtoGIOD7)ispendingwithahighpriority

21h–3Fh

Reserved.

964

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.8GIOOffsetBRegister(GIOOFF2)

TheGIOOFF2registerprovidesanumericaloffsetvaluethatrepresentsthependingexternalinterrupt

withlowpriority.Theoffsetvaluecanbeusedtolocatethepositionoftheinterruptroutineinavector

tableinapplicationsoftware.Figure22-14andTable22-11describethisregister.

NOTE:Readingthisregisterclearsit,GIOEMU2andthecorrespondingflagbitintheGIOFLG

register.However,inemulationmode,areadtothisregisterdoesnotclearanyregisteror

flag.IfmorethanoneGIOinterruptsarepending,thenreadingtheGIOOFF1registerwill

changethecontentsofGIOOFF2andGIOEMU2toshowtheoffsetvalueforthenext

highestprioritypendinginterrupt.TheapplicationcanchoosetoserviceallGIOinterrupts

fromthesameserviceroutinebycontinuingtoreadtheGIOOFF1registeruntilitreads

zeros.

Figure22-14.GIOOffset2Register(GIOOFF2)[address=FFF7BC28h]

31

16

Reserved

R-0

15

6

5

0

Reserved

GIOOFF2

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table22-11.GIOOffset2Register(GIOOFF2)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

GIOOFF2

GIOoffset2.Thesebitsindexthecurrentlypendinglow-priorityinterrupt.Thisregisterandthe

flagbit(intheGIOFLGregister)arealsoclearedwhenthisregisterisread,exceptinemulation

mode.

0

Nointerruptispending.

1h

Interrupt0(correspondingtoGIOA0)ispendingwithalowpriority.

…

8h

Interrupt7(correspondingtoGIOA7)ispendingwithalowpriority.

9h

Interrupt8(correspondingtoGIOB0)ispendingwithalowpriority

…

10h

Interrupt16(correspondingtoGIOB7)ispendingwithalowpriority

…

20h

Interrupt32(correspondingtoGIOD7)ispendingwithalowpriority

21h–3Fh

Reserved.

965

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.9GIOEmulationARegister(GIOEMU1)

TheGIOEMU1registerisaread-onlyregister.Thecontentsofthisregisterareidenticaltothecontentsof

GIOOFF1.Theintentionforthethisregisteristhatsoftwarecanuseitwithoutclearingtheflags.

Figure22-15andTable22-12describethisregister.

NOTE:ThecorrespondingflagintheGIOFLGregisterisnotclearedwhentheGIOEMU1registeris

read.

Figure22-15.GIOEmulation1Register(GIOEMU1)[address=FFF7BC2Ch]

31

16

Reserved

R-0

15

6

5

0

Reserved

GIOEMU1

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table22-12.GIOEmulation1Register(GIOEMU1)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

GIOEMU1

GIOoffsetemulation1.Thesebitsindexthecurrentlypendinghigh-priorityinterrupt.Noregister

orflagisclearedbyreadingthisregister.

0

Nointerruptispending.

1h

Interrupt0(correspondingtoGIOA0)ispendingwithahighpriority.

…

8h

Interrupt7(correspondingtoGIOA7)ispendingwithahighpriority.

9h

Interrupt8(correspondingtoGIOB0)ispendingwithahighpriority

…

10h

Interrupt16(correspondingtoGIOB7)ispendingwithahighpriority

…

20h

Interrupt32(correspondingtoGIOD7)ispendingwithahighpriority

21h–3Fh

Reserved.

966

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.10GIOEmulationBRegister(GIOEMU2)

TheGIOEMU2registerisaread-onlyregister.Thecontentsofthisregisterareidenticaltothecontentsof

GIOOFF2.Theintentionforthethisregisteristhatsoftwarecanuseitwithoutclearingtheflags.

Figure22-16andTable22-13describethisregister.

NOTE:ThecorrespondingflagintheGIOFLGregisterisnotclearedwhentheGIOEMU2registeris

read.

Figure22-16.GIOEmulation2Register(GIOEMU2)[address=FFF7BC30h]

31

16

Reserved

R-0

15

6

5

0

Reserved

GIOEMU2

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table22-13.GIOEmulation2Register(GIOEMU2)FieldDescriptions

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

GIOEMU2

GIOoffsetemulation2.Thesebitsindexthecurrentlypendinglow-priorityinterrupt.Noregister

orflagisclearedbyreadingthisregister.

0

Nointerruptispending.

1h

Interrupt0(correspondingtoGIOA0)ispendingwithalowpriority.

…

8h

Interrupt7(correspondingtoGIOA7)ispendingwithalowpriority.

9h

Interrupt8(correspondingtoGIOB0)ispendingwithalowpriority

…

10h

Interrupt16(correspondingtoGIOB7)ispendingwithalowpriority

…

20h

Interrupt32(correspondingtoGIOD7)ispendingwithalowpriority

21h–3Fh

Reserved.

967

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.11GIODataDirectionRegisters[A-H][7:0](GIODIR[A-H][7:0])

TheGIODIRregistercontrolswhetherthepinsofagivenportareconfiguredasinputsoroutputs.

Figure22-17andTable22-14describethisregister.

Figure22-17.GIODataDirectionRegisters[A-H][7:0](GIODIR[A-H])[address=FFF7BC34h,

FFF7BC54h,FFF7BC74h,FFF7BC94h,FFF7BCB4h,FFF7BCD4h,FFF7BCF4h,FFF7BD14h]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIODIR[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-14.GIODataDirectionRegisters[A-H][7:0](GIODIR[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIODIR[X]

GIOdatadirectionofportX,pins[7:0]

0

TheGIOpinisaninput.

Note:Ifthepindirectionissetasaninput,theoutputbufferistristated.

1

TheGIOpinisanoutput.

22.5.12GIODataInputRegisters[A-H][7:0](GIODIN[A-H][7:0])

ValuesintheGIODINregisterreflectthecurrentstate(high=1orlow=0)onthepinsoftheport.

Figure22-18andTable22-15describethisregister.

Figure22-18.GIODataInputRegisters[A-H][7:0](GIODIN[A-H])[address=FFF7BC38h,

FFF7BC58h,FFF7BC78h,FFF7BC98h,FFF7BCB8h,FFF7BCD8h,FFF7BCF8h,FFF7BD18h]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIODIN[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-15.GIODataInputRegisters[A-H][7:0](GIODIN[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIODIN[X]

GIOdatainputforportX,pins[7:0]

0

Thepinisatlogiclow(0).

1

Thepinisatlogichigh(1).

968

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.13GIODataOutputRegisters[A-H][7:0](GIODOUT[A-H][7:0])

ValuesintheGIODOUTregisterspecifytheoutputstate(high=1orlow=0)ofthepinsoftheportwhen

theyareconfiguredasoutputs.Figure22-19andTable22-16describethisregister.

NOTE:ValuesintheGIODSETregistersetthedataoutputcontrolregisterbitsto1regardlessof

thecurrentvalueintheGIODOUTbits.

Figure22-19.GIODataOutputRegisters[A-H][7:0](GIODOUT[A-H][7:0])[address=FFF7BC3Ch,

FFF7BC5Ch,FFF7BC7Ch,FFF7BC9Ch,FFF7BCBCh,FFF7BCDCh,FFF7BCFCh,FFF7BD1Ch]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIODOUT[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-16.GIODataOutputRegisters[A-H][7:0](GIODOUT[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIODOUT[X]

GIOdataoutputofportX,pins[7:0].

0

Thepinisdriventologiclow(0).

1

Thepinisdriventologichigh(1).

Note:OutputisinhighimpedancestateiftheGIOPDRxbit=1andGIODOUTxbit=1.

Note:GIOpinisplacedinoutputmodebysettingtheGIODIRxbitto1.

22.5.14GIODataSetRegister[A-H][7:0](GIODSET[A-H][7:0])

Valuesinthisregistersetthedataoutputcontrolregisterbitsto1regardlessofthecurrentvalueinthe

GIODOUTbits.ThecontentsofthisregisterreflectthecontentsofGIODOUT.Figure22-20andTable22-

17describethisregister.

Figure22-20.GIODataSetRegisters[A-H][7:0](GIODSET[A-H][7:0])[address=FFF7BC40h,

FFF7BC60h,FFF7BC80h,FFF7BCA0h,FFF7BCC0h,FFF7BCE0h,FFF7BD00h,FFF7BD20h]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIODSET[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-17.GIODataSetRegisters[A-H][7:0](GIODSET[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIODSET[X]

GIOdatasetforportX,pins[7:0].ThisbitdrivestheoutputofGIOpinhigh.

0

Write:Writingazerohasnoeffect.

1

Write:ThecorrespondingGIOpinisdriventologichigh(1).

Note:ThecurrentlogicstateoftheGIODOUTbitwillalsobedisplayedbythisbit.

Note:GIOpinisplacedinoutputmodebysettingtheGIODIRxbitto1.

969

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOControlRegisterswww.ti.com

22.5.15GIODataClearRegisters[A-H][7:0](GIODCLR[A-H][7:0])

Valuesinthisregisterclearthedataoutputregister(GIODataSetRegister[A-H])bitto0regardlessofits

currentvalue.ThecontentsofthisregisterreflectthecontentsofGIODOUT.Figure22-21andTable22-

18describethisregister.

Figure22-21.GIODataClearRegisters[A-H][7:0](GIODCLR[A-H][7:0])[address=FFF7BC44h,

FFF7BC64h,FFF7BC84h,FFF7BCA4h,FFF7BCC4h,FFF7BCE4h,FFF7BD04h,FFF7BD24h]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIODCLR[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-18.GIODataClearRegisters[A-H][7:0](GIODCLR[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIODCLR[X]

GIOdataclearforportX,pins[7:0].ThisbitdrivestheoutputofGIOpinlow.

0

Write:Writingazerohasnoeffect.

1

Write:ThecorrespondingGIOpinisdriventologiclow(0).

Note:ThecurrentlogicstateoftheGIODOUTbitwillalsobedisplayedbythisbit.

Note:GIOpinisplacedinoutputmodebysettingtheGIODIRxbitto1.

22.5.16GIOOpenDrainRegister[A-H][7:0](GIOPDR[A-H][7:0])

Valuesinthisregisterenableordisabletheopendraincapabilityofthedatapins.Figure22-22and

Table22-19describethisregister.

Figure22-22.GIOOpenDrainRegisters[A-H][7:0](GIOPDR[A-H][7:0])[address=FFF7BC48h,

FFF7BC68h,FFF7BC88h,FFF7BCA8h,FFF7BCC8h,FFF7BCE8h,FFF7BD08h,FFF7BD28h]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIOPDR[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-19.GIOOpenDrainRegisters[A-H][7:0](GIOPDR[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIOPDR[X]

GIOopendrainforportX,pins[7:0]

0

TheGIOpinisconfiguredinpush/pull(normalGIO)mode.TheoutputvoltageisVOLorlowerif

GIODOUTbit=0andVOHorhigherifGIODOUTbit=1.

1

TheGIOpinisconfiguredinopendrainmode.TheGIODOUTxbitcontrolsthestateoftheGIO

outputbuffer:GIODOUTx=0TheGIOoutputbufferisdrivenlow;GIODOUTx=1TheGIO

outputbufferistristated.

970

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOControlRegisters

22.5.17GIOPullDisableRegisters[A-H][7:0](GIOPULDIS[A-H][7:0])

Valuesinthisregisterenableordisablethepullcontrolcapabilityofthepins.Figure22-23andTable22-

20describethisregister.

Figure22-23.GIOPullDisableRegisters[A-H][7:0](GIOPULDIS[A-H][7:0])[address=FFF7BC4Ch,

FFF7BC6Ch,FFF7BC8Ch,FFF7BCACh,FFF7BCCCh,FFF7BCECh,FFF7BD0Ch,FFF7BD2Ch]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIOPULDIS[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-20.GIOPullDisableRegisters[A-H][7:0](GIOPULDIS[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIOPULDIS[X]

GIOpulldisableforportX,pins[7:0].WritestothisbitwillonlytakeeffectwhentheGIOpin

configuredasaninputpin.

0

Thepullfunctionalityisenabled.

1

Thepullfunctionalityisdisabled.

Note:TheGIOpinisplacedininputmodebyclearingtheGIODIRxbitto0.

22.5.18GIOPullSelectRegister[A-H][7:0](GIOPSL[A-H][7:0])

Valuesinthisregisterselectthepulluporpulldownfunctionalityofthepins.Figure22-24andTable22-

21describethisregister.

Figure22-24.GIOPullSelectRegisters[A-H][7:0](GIOPSL[A-H][7:0])[address=FFF7BC50h,

FFF7BC70h,FFF7BC90h,FFF7BCB0h,FFF7BCD0h,FFF7BCF0h,FFF7BD10h,FFF7BD30h]

31

16

Reserved

R-0

15

8

7

0

Reserved

GIOPSL[X]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table22-21.GIOPullSelectRegisters[A-H][7:0](GIOPSL[A-H][7:0])FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

GIOPSL[X]

GIOpullselectforportX,pins[7:0]

0

Thepulldownfunctionalityisselect,whenpullup/pulldownlogicisenabled.

1

Thepullupfunctionalityisselect,whenpullup/pulldownlogicisenabled.

Note:Thepullup/pulldownfunctionalityisenabledbyclearingcorrespondingbitin

GIOPULDISto0.

971

SPNU499B–November2012–RevisedAugust2013

General-PurposeInput/Output(GIO)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I/OControlSummarywww.ti.com

22.6I/OControlSummary

ThebehavioroftheoutputbufferandthepullcontrolissummarizedinTable22-22.

Table22-22.OutputBuffer,andPullControlBehaviorforGIOPins(1)

OpenDrain

Moduleunder

PinDirection

PullDisable

PullSelect

Enable

PullControl

OutputBuffer(6)

Reset?

(GIODIR)(2)

(GIOPULDIS)(4)

(GIOPSL)(5)

(GIOPDR)(3)

Device-and

Yes

X

X

X

X

Disabled

module-specific

No

0

X

0

0

Pulldown

Disabled

No

0

X

0

1

Pullup

Disabled

No

0

X

1

0

Disabled

Disabled

No

0

X

1

1

Disabled

Disabled

No

1

0

X

X

Disabled

Enabled

No

1

1

X

X

Disabled

Enabled

(1)X=Don'tcare

(2)GIODIR=0forinput;1foroutput

(3)SeeSection22.5.16

(4)GIOPULDIS=0forenablingpullcontrol;1fordisablingpullcontrol

(5)GIOPSL=0forpull-downfunctionality;1forpull-upfunctionality

(6)Ifopendrainisenabled,outputbufferwillbedisabledifaHighlevel(1)isbeingoutput.

972

General-PurposeInput/Output(GIO)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter23

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

ThischapterprovidesthespecificationforTI’sFlexRaymoduleanditsfeaturesfromtheapplication

programmer’spointofview.

Topic...........................................................................................................................Page

23.1Overview........................................................................................................974

23.2FlexRayModuleBlockDiagram.........................................................................975

23.3FlexRayModuleBlockMapping.........................................................................977

23.4TransferUnitBlockDiagram.............................................................................979

23.5TransferUnitFunctionalDescription..................................................................980

23.6CommunicationCycle......................................................................................989

23.7CommunicationModes.....................................................................................990

23.8ClockSynchronization.....................................................................................991

23.9ErrorHandling.................................................................................................992

23.10CommunicationControllerStates.....................................................................994

23.11NetworkManagement....................................................................................1006

23.12FilteringandMasking....................................................................................1006

23.13TransmitProcess..........................................................................................1008

23.14ReceiveProcess...........................................................................................1010

23.15FIFOFunction..............................................................................................1011

23.16MessageHandling........................................................................................1013

23.17ModuleRAMs...............................................................................................1020

23.18Interrupts.....................................................................................................1028

23.19FlexRayModuleRegisters.............................................................................1033

23.20MinimumPeripheralClockFrequency.............................................................1160

23.21AssignmentofFlexRayConfigurationParameters............................................1161

23.22Emulation/DebugSupport..............................................................................1162

973

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

23.1Overview

TheFlexRaymoduleperformscommunicationaccordingtotheFlexRayprotocolspecificationv2.1Rev.

A.Thesampleclockbitratecanbeprogrammedtovaluesupto10Mbit/s.Additionalbusdriver(BD)

hardwareisrequiredforconnectiontothephysicallayer.

ForcommunicationonaFlexRaynetwork,individualmessagebufferswithupto254databytesare

configurable.Themessagestorageconsistsofasingle-portedmessageRAMthatholdsupto128

messagebuffers.Allfunctionsconcerningthehandlingofmessagesareimplementedinthemessage

handler.Thosefunctionsaretheacceptancefiltering,thetransferofmessagesbetweenthetwoFlexRay

ChannelProtocolControllersandthemessageRAM,maintainingthetransmissionscheduleaswellas

providingmessagestatusinformation.

TheregistersetoftheFlexRaymodulecanbeaccesseddirectlybytheCPUviatheVBUSinterface.

Theseregistersareusedtocontrol,configureandmonitortheFlexRaychannelprotocolcontrollers,

messagehandler,globaltimeunit,systemuniversalcontrol,frameandsymbolprocessing,network

management,interruptcontrol,andtoaccessthemessageRAMviatheinput/outputbuffer.

23.1.1FeatureList

•ConformancewithFlexRayprotocolspecificationv2.1Rev.A

•Dataratesofupto10Mbit/soneachchannel

•Upto128messagebuffers

•8KbyteofmessageRAMforstorageof,forexample,128messagebufferswithmaximumof48-byte

datasectionorupto30messagebufferswith254-bytedatasection

•Configurationofmessagebufferswithdifferentpayloadlengths

•OneconfigurablereceiveFIFO

•Eachmessagebuffercanbeconfiguredasreceivebuffer,astransmitbufferoraspartofthereceive

FIFO

•CPUaccesstomessagebuffersviainputandoutputbuffer

•SpecializedDMAlikeFlexRayTransferUnit(FTU)forautomaticdatatransferbetweendatamemory

andmessagebufferswithoutCPUinteraction

•Filteringforslotcounter,cyclecounter,andchannel

•Maskablemoduleinterrupts

•SupportsNetworkManagement

974

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MessageHandlerRx_ATx_AControl

PRTA

PRTBFlexRayModule

NEM

MessageRAM

TBFA

GTU

TBFB

SUC

IBF

OBFPhysicalLayeruC

Rx_BTx_B

INT

FSP80MHz

Interrupts

VBUSIFPeripheral

FTU

SCLK

VBUSCLK

(Master)VBUSIF(Slave)

DirectAccessBus

BCLKTransferUnitStatemachine



www.ti.comFlexRayModuleBlockDiagram

23.2FlexRayModuleBlockDiagram

Figure23-1.BlockDiagram

TheTIFlexRaymodulecontainsthefollowingblocks:

•PeripheralInterface(VBUSIF)

InterfacetothePeripheralBusoftheTMS570microcontrollerarchitecture.TheFlexRaymodulecan

eitheractasaVBUSmasterorVBUSslave.

•FlexRayTransferUnit(FTU)

Theinternalintelligentstate-machine(TransferUnitStateMachine)isabletotransferdatabetween

theinputbuffer(IBF)andoutputbuffer(OBF)ofthecommunicationcontrollerandthesystemmemory

withoutCPUinteraction.

NOTE:SincetheFlexRaymoduleisaccessedthroughtheFTU,theFTUmustbepoweredupby

thecorrespondingbitinthePeripheralPowerDownRegistersoftheSystemModulebefore

accessinganyFlexRaymoduleregister.FordetailspleaserefertotheArchitecture

Documentationandthedevicespecificdatasheet.

•InputBuffer(IBF)

ForwriteaccesstothemessagebuffersconfiguredinthemessageRAM,theCPUortheFTUcan

writetheheaderanddatasectionforaspecificmessagebuffertotheinputbuffer.Themessage

handlerthentransfersthedatafromtheinputbuffertotheselectedmessagebufferinthemessage

RAM.

975

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleBlockDiagramwww.ti.com

•OutputBuffer(OBF)

ForreadaccesstoamessagebufferconfiguredinthemessageRAMthemessagehandlertransfers

theselectedmessagebuffertotheoutputbuffer.Afterthetransferhascompleted,theCPUortheFTU

canreadtheheaderanddatasectionofthetransferredmessagebufferfromtheoutputbuffer.

•MessageHandler(MHD)

Themessagehandlercontrolsdatatransfersbetweenthefollowingcomponents:

–Input/outputbufferandmessageRAM

–TransientbufferRAMsofthetwoFlexRayprotocolcontrollersandmessageRAM

•MessageRAM

ThemessageRAMstoresupto128FlexRaymessagebufferstogetherwiththerelatedconfiguration

data(headeranddatapartition).

•TheTransientBufferRAM(TBFA/B):

Storesthedatasectionoftwocompletemessages.

•FlexRayChannelProtocolController(PRTA/B)

TheFlexRaychannelprotocolcontrollersconsistofashiftregisterandtheFlexRayprotocolFSM

(FiniteStateMachine).TheyareconnectedtothetransientbufferRAMsforintermediatemessage

storageandtothephysicallayerviabusdrivers(BD).

Theyperformthefollowingfunctionality:

–Controlandcheckofbittiming

–Reception/transmissionofFlexRayframesandsymbols

–CheckofheaderCRC

–Generation/checkofframeCRC

–Interfacingtobusdriver

TheFlexRaychannelprotocolcontrollershaveinterfacesto:

–Physicallayer(busdriver)

–TransientbufferRAM

–Messagehandler

–GlobalTimeUnit

–Systemuniversalcontrol

–Frameandsymbolprocessing

–Networkmanagement

–Interruptcontrol

•Globaltimeunit(GTU)

TheGTUperformsthefollowingfunctions:

–Generationofmicrotick

–Generationofmacrotick

–FaulttolerantclocksynchronizationbyFTMalgorithm

•rateandoffsetcorrection

•offsetcorrection

–Cyclecounter

–Timingcontrolofstaticsegment

–Timingcontrolofdynamicsegment(minislotting)

–Supportofexternalclockcorrection

976

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleBlockMapping

•SystemUniversalControl(SUC)

TheSUCcontrolsthefollowingfunctions:

–Configuration

–Wakeup

–Startup

–NormalOperation

–PassiveOperation

–MonitorMode

•FrameandSymbolProcessing(FSP)

Theframeandsymbolprocessingcontrolsthefollowingfunctions:

–Checksthecorrecttimingofframesandsymbols

–Teststhesyntacticalandsemanticcorrectnessofreceivedframes

–Setstheslotstatusflags

•NetworkManagement(NEM)

Handlesthenetworkmanagementvector.

•InterruptControl(INT)

Theinterruptcontrollerperformsthefollowingfunctions:

–Provideserrorandstatusinterruptflags

–Enable/disableinterruptsources

–Assignmentofinterruptsourcestothetwomoduleinterruptlines

–Enable/disablemoduleinterruptlines

–Managesthetwointerrupttimers

–Stopwatchtimecapturing

•80MHzClockSignal

Clocksignalforthesampleclock(SCLK)oftheFlexRaymodule.

NOTE:AVCLK2isusedtoprovidethe80MHzclocktotheFlexRayModule.ThesecondPLL/

ClockSource6inthemicrocontrolleristypicallyusedassourceforAVCLK2.

•ModuleClock(VBUSCLK)

TheFlexRaymoduleclock(BCLK)isderivedfromthePeripheralClockVBUSCLKofthemicrocontroller.

23.3FlexRayModuleBlockMapping

ThefollowingFigure23-2showsthedifferentmoduleblocksoftheFlexRaymodule.Itissplitinto3

sections,thecommunicationcontroller,thetransferunitandthetransferunitRAM.TheRAMofthe

communicationcontrollerisonlymemorymappedintestmode,whereitismappedtotheregisterset

addressrange.

977

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CommunicationControllerTransferUnit

FlexRayModule

base_TU

base_TU_RAM

base_CCRegisterSetRegisterSetRAM

offset_CCoffset_TU

offset_TU_RAM



FlexRayModuleBlockMappingwww.ti.com

Figure23-2.FlexRayModuleBlocks

Theaddressrangesofthe3FlexRayblocksareshowninTable23-1.

Table23-1.FlexRayAddressRangeTable

Module

AddressRange

FlexRayCommunicationController

0xFFF7_C800-0xFFF7_CFFF

FlexRayTU

0xFFF7_A000-0xFFF7_A1FF

FlexRayTURAM

0xFF50_0000-0xFF51_FFFF

978

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




VBUSPInterfacePeripheralBusTransferUnitInterruptsTransferUnitSlave

VBUSPInterfaceMaster

TransferUnitStateMachineInterfaceArbiterTransferConfigurationRAM(TCR)

HandlerMessageFlexRayFlexRayInputBufferFlexRayOutputBuffer

(IBF)(OBF)



www.ti.comTransferUnitBlockDiagram

23.4TransferUnitBlockDiagram

Figure23-3.TransferUnit

TheFlexRayTransferUnit(FTU)hasaninternalintelligentstate-machine(TransferUnitStateMachine)to

transferdatabetweentheInputandOutputBufferInterfacesoftheFlexRaycoremoduleandthesystem

memoryofthemicrocontrollerwithoutCPUinteraction.ItoperatesinasimilarmannertoaDMA(Direct

MemoryAccess)module.

TheFlexRayInputBuffer(IBF)andFlexRayOutputBuffer(OBF)canalsobeaccesseddirectlybythe

CPU.InthiscasetheIBFandOBFare8-,16-,and32-bitaccessible.FortransfersusingtheTransferUnit

StateMachineonly4x32-bitdatapackages(4wordbursts)aresupported.

TheInterfaceArbitercontrolstheaccesstotheIBFandOBF.DirectCPUaccessestoIBFandOBFare

notpossible,iftheTransferUnitStateMachineisswitchedon.Accesseswillbeignoredandthe

associatederrorinterruptwillbegenerated.

TheTransferUnitStateMachineistheheadofallmanual,eventdrivenandautomaticmessagetransfer

activities.ItcontrolstheTransferUnitinterruptgenerationrelatedtotransferprotocolcorrectness,status

andviolationsofthemessagetransfers.

WiththeTransferConfigurationRAM(TCR)thetransfersequence,executedbytheTransferUnitState

Machine,canbeconfigured.

TheusageoftheTransferUnitallowstheusertosetupamirroroftheFlexRaymessageRAMinthefast

accessibledataRAMofthemicrocontroller.TheTransferUnitcanhandlethedatatransfersbetweenthe

dataRAMandtheFlexRaymessageRAMinthe‘background’withoutCPUinteraction.

979

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TransferBaseAddress(TBA)

FlexRayMessageRAM

MessageBuffer1

Message Buffer2

Message Buffer3

Message Buffer4

Message Buffer128

FTU

DataRAM

Header/DataMessageBuffer4

+

14bitoffset

TCR1

TCR 2

TCR 3

TCR 4

TCR128

TransferConfigurationRAM

TransferBaseAddress(TBA)

FTU

+

+

14bitoffset

TCR1

TCR 2

TCR 3

TCR 4

TCR128

TransferConfigurationRAM



TransferUnitFunctionalDescriptionwww.ti.com

23.5TransferUnitFunctionalDescription

Figure23-4showstheprincipleoftheTransferUnitoperation.

Figure23-4.FlexRayTransferUnitOperationPrinciple

EachFlexRaymessagebufferoftheFlexRaymessagebufferRAMhasoneTransferConfigurationRAM

(TCR)entryassignedtoit,i.e.messagebuffer1isassignedtoTCR1,messagebuffer2isassignedto

TCR2andsoforth.

TheTransferBaseAddress(TBA)registeroftheTransferUnitholdsthemessagebufferbaseaddressin

thedataRAM.EachTransferConfigurationRAM(TCR)entrycontainsa14bitoffsetvaluetothe

dedicatedmessagebufferareainthedataRAM.

ThefollowingtwodiagramsshowtheprincipleoftheTransferUnitoperationincludingTransferState

Machine(seeFigure23-5)andEventStateMachine(seeFigure23-6).

980

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Module reset activeor FTU disabled(GCS.TUE=0)FTU disabled(GCS.TUE=0)Wait for FTU being enabled(GCS.TUE=1, GCS.TUH=0)Find lowest bit set inTTSM andTTCCwhich corresponds to the next messagebuffer to be transferredSet up FTU transfer of the message bufferwith help of configuration inTransferConfiguration RAM (TCR)4 word burst by 4 word burst transfer ofmessage buffer to System Memory (SM)or to Communication Controller (CC)Reset bit inTTSM orTTCC whichcorresponds to the transferred messagebuffer and generate status information

STATUSIDLECHECK

SETUPXFER



www.ti.comTransferUnitFunctionalDescription

Figure23-5.FlexRayTransferUnitOperationPrincipleforTransferFSM(simplified)

981

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Module reset activeor FTU disabled(GCS.TUE=0)FTU disabled(GCS.TUE=0)Wait for FTU being enabled(GCS.TUE=1)Wait for event signaled fromE-Ray that a message bufferhas been updatedSet up FTU transfer of the message bufferwith help of configuration inTransferConfiguration RAM (TCR)IDLEWAIT

UPDATE

ETESMS/RCESMS/RSet bitTTSMClear bitETESMS/R011-01FalseTrueTrueFalseFalseTrueEvent FSM



TransferUnitFunctionalDescriptionwww.ti.com

Figure23-6.FlexRayTransferUnitOperationPrincipleforEventFSM(simplified)

23.5.1TransferControl

23.5.1.1TransferStartandHalt

TheTransferUnitStateMachinecanbehalted,effectivelystoppingtheTransferUnittransfersequence

(aftercompletionofthecurrent4wordbursttransfercycle).Afterreleasingfromhaltstate,theTransfer

Unitresumesexactly,whereitwashaltedwithoutdataloss.

NOTE:Itisthesoftware’sresponsibilitytoensuredatacoherencywhentheFlexRaymodule

continuestoreceivedata,buttheTransferUnitdoesn'ttransferit.

23.5.1.2TransferAbort

ATransferUnittransferwillbeabortedandtheTransferUnitwillbedisabledautomaticallyincaseof:

•aparityerrorwhileaccessingtheTransferConfigurationRAM(TCR)

•amemoryprotectionerrorwhileaccessingthedataRAMofthemicrocontroller.Inthiscase,the

ongoingtransferisabortedbuttheTUEbitinGCS/Rmaynotgetreset.UsershallcleartheTUEbit

manuallybysoftware.

982

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comTransferUnitFunctionalDescription

23.5.1.3TransferReset

TheTransferUnitStateMachinecanberesetbytheTransferUnitEnable(TUE)bitintheGlobalControl

register.ThoughtheTransferUnitStateMachinecanberesetwiththeabove,themoduleregister

contentsandtheTransferConfigurationRAM(TCR).So,afterre-enablingtheTransferUnitno

reconfigurationoftheTransferUnitisrequired.

23.5.1.4TransferModes

Possibletransfersequencemodesare:

•ManualbytriggeringthedesiredtransferbysettingthecorrespondingbitintheTriggerTransferto

SystemMemory(TTSM)registerortheTriggerTransfertoCommunicationController(TTCC)register

•Event-Driven(transfersfromFlexRayCommunicationControllertotheSystemMemoryonly)usingthe

EnableTransferonEventtoSystemMemory(ETESM)register.

•SingleorcontinuouseventdriventransfersbyusingtheClearonEventtoSystemMemory(CESM)

Thetransfereventtriggeringeneraloccursuponcompletionofareceptionortransmissionofaframe

throughtheFlexRaybus.Table23-2showsmoredetails:Conditionsmarkedwith'X'perrowmustmatch

totriggeraFTUtransfereventasconfiguredintheTransferConfigurationRAM(TCR):

Table23-2.FlexRayTransferUnitEventTriggerConditions

Framebelonging

Event

Event

Framebelonging

Busactivity

Busactivity

todynamic

on

on

tostaticsegment

detectedon

detectedon

segment,except

Channe

Channe

orfirstslotof

ChannelA

ChannelB

firstslotof

lA

lB

dynamicsegment

(MBS.ESA=0)

(MBS.ESB=0)

dynamicsegment

X

X

FTUEventTrigger

X

X

forReceive

X

X

X

MessageBuffers

X

X

X

FTUEventTrigger

X

X

forTransmit

X

X

MessageBuffers

NOTE:BysettingthecorrespondingbitintheEnableTransferonEventtoSystemMemory

(ETESM)registerpriortoaon-demandtransfertotheCommunicationControllerviathe

TriggerTransfertoCommunicationController(TTCC)register,aneventtriggered

transmissionbacktotheSystemMemorycanbeinitiated,oncethebufferhasbeensentout

ontheFlexRaybus.Thismechanismcanbeusedi.e.toautomaticallyreadbacktheheader

statusinformationtothesystemmemoryafteratransmissionoccurred.

NOTE:ThetransmissionorreceptionofnullframesinthestaticsegmentofaFlexRay

communicationcycletriggerstransfersofthetransferunit.Theheaderand/orpayloadis

transferredtothesystemmemory,ifthecorrespondingbitsTHTSMand/orTPTSMinthe

TransferConfigurationRAM(TCR)areset.IfneitherTHTSMnorTPTSMbitissetinTCR,

neitherheadernorpayloadgetstransferred.ThecorrespondingbitintheTransfertoSystem

MemoryOccurredregister(TSMO)getssetinallcases.

23.5.1.5TransferSizeandTypes

ThedatatransferredbytheTransferUnitcanbeselectedas:

•dataandheadersection

•headersectiononly

•datasectiononly

983

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MessageRamData RAM

wordxwordx+1wordx+2wordx+3

wordx+4wordx+5

wordxwordx+1wordx+2wordx+3

wordx+4wordx+5undefinedxundefinedx+1

undefinedx+2

wordxwordx+1wordx+2wordx+3

wordx+4wordx+5undefinedxundefinedx+1

undefinedx+2

4wordburst

4wordburstFTUTransferinternal E-RayTransfer

Input BufferRegisters

MessageRAMDataRAM

wordxwordx+1wordx+2wordx+3

wordx+4wordx+5wordx+6wordx+7

wordxwordx+1wordx+2wordx+3

word x+4word x+5undefinedxundefinedx+1

undefinedx+2

wordxwordx+1wordx+2wordx+3

word x+4word x+5undefinedxundefinedx+1

undefined x+2

4wordburstFTUTransferinternalE-RayTransferOutput BufferRegisters4wordburst



TransferUnitFunctionalDescriptionwww.ti.com

ThenumberoftransferredpayloadwordsisderivedfromthePayloadLengthConfigured(PLC)

informationconfiguredintheWriteHeaderSection2(WRHS2)register.

Asonly4wordburstsaresupportedfortheTransferUnittransfers,onlymultipleof4x32-bitdatapackets

aresupported.Additionaltransferredwordsareundefined,asindicatedinFigure23-7andFigure23-8.

Figure23-7.Example:FTUReadTransferof6Words

Figure23-8.Example:FTUWriteTransferof6Words

PhysicallytheFTUcontinuesreadingtheadditionalwordsfromthesourcelocationitstartedtheburst

transfer.Therefore,onreads,theadditionaltransferredwordsdependonthecontentsofthe

CommunicationControllerOutputBufferRegistersasindicatedinFigure23-7.Onwritestheadditional

wordsdependonthecontentsofthedataRAM,asshowninFigure23-8.Theadditionaldatawillbe

writtentotheCommunicationController'sInputBufferRegisters,butnottransferredtothemessageRAM.

NOTE:ItshouldbeensuredthattheallocateddataRAMspaceforFTUtransfersendson4x32bit

boundarytoavoidpossibledataoverwritesormemoryprotectionissuesonFTUreadsand

avoidreadingtheadditionaldatafromthesourcelocationonFTUwrites.

23.5.1.6TransferStatusIndication

Thereare3registersindicatingthetransferstatus:

•TransferStatusCurrentBuffer(TSCB)showsthecurrenttransferbufferstatus

•LastTransferredBuffertoCommunicationController(LTBCC)indicatesthelastcompletedbuffer

transfertothecommunicationcontroller

•LastTransferredBuffertoSystemMemory(LTBSM)showsthelastcompletedbuffertransferto

systemmemory

984

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comTransferUnitFunctionalDescription

23.5.1.7TransferMirrorFunction

Inordertoefficientlyaccessthetransferunitstatusregistersinthesystemmemory,thefollowingregisters

canbemirroredtothesystemmemorystartingatthebaseaddressdefinedintheBaseAddressof

MirroredStatus(BAMS)register:

•TransferStatusCurrentBuffer(TSCB)

•LastTransferredBuffertoCommunicationController(LTBCC)

•LastTransferredBuffertoSystemMemory(LTBSM)

•TransfertoSystemMemoryOccurred1/2/3/4(TSMO1-4)

•TransfertoCommunicationControllerOccurred1/2/3/4(TCCO1-4)

•TransferOccurredOFFset(TOOFF)

Themirroredvaluesareupdatedaftercompletionofabuffertransfer.

Themirroringoftheseregisterscanbedisabledifnotneeded.

Table23-3.MirroringAddressMapping

Address

Register

BAMS+0x00

TSCB

BAMS+0x04

LTBCC

BAMS+0x08

LTBSM

BAMS+0x0C

TSMO1

BAMS+0x10

TSMO2

BAMS+0x14

TSMO3

BAMS+0x18

TSMO4

BAMS+0x1C

TCCO1

BAMS+0x20

TCCO2

BAMS+0x24

TCCO3

BAMS+0x28

TCCO4

BAMS+0x2C

TOOFF

23.5.1.8EndiannessCorrection

ForthedatatransferbytheTransferUnitanEndiannesscorrectionmechanismcanbeusedtoswitchbig

EndiannessdatatolittleEndiannessdataandviceversa.

Formaximumflexibility,6bitsareavailableintheGlobalControlSet/ResetRegister(GCS/R)tocontrol.

•HeaderDatabyte-order

•PayloadDatabyte-order

•Byte-orderoftheFlexRayCoreregistersandtheTransferConfigurationRAMdataoftheTransferUnit

independentlyandinbothdirections.

985

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BufferAddr

TSO

TBA

NTBA

=+

communicationcyclestart



TransferUnitFunctionalDescriptionwww.ti.com

23.5.1.9TransferDataPackage

Table23-4showsthedataofatransferdatapackage.Independentofwhethertheheadergets

transferredornot,thebufferaddressalwayspointstoelementHeader1.

Table23-4.MirroringAddressMapping

Address

Register

0x0000

Header1

0x0004

Header2

0x0008

Header3

0x000C

BufferStatus(1)

0x0010

Payload1

0x0014

Payload2

....

....

0x010C

Payload64

(1)TransferredonlyfromCommunicationControllertoSystemMemory

23.5.1.10TransferStartAddresstoMessageBufferNumberAssignment

TheassignmentofaFlexRaymessagebuffernumbertothetransferlocationinsystemmemoryisdone

bythecombinationof

•theTransferStartOffset(TSO)fieldinaTransferConfigurationRAM(TCR)entry

•theTransferBaseAddress(TBA)register

EachentryoftheTCRholdsa14bitoffsetvalue(TSO).TheTSOoffsetwillbeaddedtothecontentof

theTBAregister.TheTBAregisterholdsthe32bitbaseaddress-pointertoalocationofthedataRAM.

AvaluewrittentoNextTransferBaseAddress(NTBA)willbeloadedintheTBAatthenext

communicationcyclestart.Thisallowsefficientmulti-bufferingofthemessagebuffersinthesystem

memory.TheTransferNotReady(NTR)flagintheTransferErrorInterruptFlag(TEIF)registercanbe

usedtodetermine,ifNTBAcanbereloadedbytheCPU.

NOTE:IfavalueiswrittentoTBA,NTBAissettothesamevalue.

Figure23-9.TransferStartAddresstoMessageBufferNumberAssignment

23.5.1.11TransferPriority

TheTransferUnitwilltransferthemessagebuffersfromlowtohighmessagebuffernumbers.

IncasethesamebufferispendinginboththeTriggerTransfertoCommunication(TTCC)registerandthe

TriggerTransfertoSystemMemory(TTSM)register,theprioritybetweenTTCCandTTSMisdetermined

bytheTransferPrioritybit(GC.PRIO)intheTransferUnitGlobalControlSet/ResetRegister(GCS/R).

986

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comTransferUnitFunctionalDescription

23.5.1.12ReadTransfers

AreadtransferisthedatatransferfromFlexRaymessagebufferRAMtothesystemmemoryofthe

microcontroller.

ForreadtransferstheregistersTriggerTransfertoSystemMemory(TTSM),EnableTransferonEventto

SystemMemory(ETESM)andClearonEventtoSystemMemory(CESM)havetobesetup.

Theamountandtypeofdatatobetransferredcanbeselectedas:

•dataandheadersection

•headersectiononly

•datasectiononly

whichcanbeconfiguredontheTransmitConfigurationRAM(TCR).

Thenumberof32bitwordsperbuffertobetransferredisreadfromthePayloadLengthConfigured

(RDHS2.PLC[6:0])configurationinformation.Thisinformationispartoftheheadersectionstoredinthe

messageRAMoftheCommunicationController.

23.5.1.13WriteTransfers

AwritetransferisthedatatransferfromthesystemmemoryofthemicrocontrollertotheFlexRay

messagebufferRAM.

ForwritetransferstheTriggerTransfertoCommunication(TTCC)registerhastobesetup.

Theamountandtypeofdatatransferredcanbeselectedas:

•dataandheadersection

•headersectiononly

•datasectiononly

whichcanbeconfiguredontheTransmitConfigurationRAM(TCR).

ItcanbeconfiguredintheTCR,ifSetTransmissionRequestHost(STXRH)bitintheInputBuffer

CommandMask(IBCM)oftheCommunicationControllershouldbeset.Thiswouldtriggerthetransferto

theFlexRaybus.

Ifadataandheadersectiontransferisselected,thenumberof32bitwordstobetransferredisreadfrom

thePayloadLengthConfigured(PLC)configurationinformationstoredinHeader2wordinthesystem

memory.

Ifadatasectiononlytransferisselected,thenumberof32bitwordstobetransferredisreadfromthe

PayloadLengthConfigured(RDHS2.PLC[6:0])configurationinformation.Thisinformationispartofthe

headersectionstoredinthemessageRAMoftheCommunicationController.

23.5.1.14TransferUnitEventInterface

TheTransferUnitEventControlgeneratestransfertriggersignalsfortransfersinthefollowingcases:

•Fortransmit(TX)messagebuffers,awritetransfertriggerisgenerated,ifatransmiteventoccurs.The

configuredTXmessagebuffersgenerateatransfertrigger,exceptwhenaNullframeinstaticsegment

ornoframeinthedynamicsegmentissent.

•Forreceive(RX)messagebuffers,areadtransfertriggerisgenerated,ifareceiveeventoccursinthe

staticsegment.

•Forreceive(RX)messagebuffers,areadtransfertriggerisgeneratedifareceiveeventoccursinthe

dynamicsegment,updatedinthecurrentcycleandnoNullframe.

IfabufferispartoftheFIFO,notransfertriggerisgenerated!

WhentheTransferUnitisdisabled(TUEbitinGlobalControlRegister(GCS/R)is‘0’),notransfertrigger

isgenerated,whereasiftheTransferUnitisenabled,butinhaltmode(TUHbitandTUEbitinGlobal

ControlRegister(GCS/R)are‘1’),theoccurringtriggersremainpendingandgetexecutedwhenthe

TransferUnitwillberesumedfromhaltmode.

987

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






TransferUnitFunctionalDescriptionwww.ti.com

23.5.2TransferConfigurationRAM

TheTransferConfigurationRAM(TCR)consistsof128entries,oneentryforeachpossibleFlexRay

buffer.Entry1isassignedtoFlexRaybuffer1,entry2toFlexRaybuffer2,...,andentry128isassignedto

FlexRaybuffer128.

EachTCRentrydefines:

•datatransfersize(header+data,headeronlyordataonly)

•whetherthetransmitrequestflag(STRXH)shouldbesetforthedatatransferredbytheFTUtotheCC

tosendoutthedatatotheFlexRaybus.

•the14-bitbufferaddressoffset,which,incombinationwiththeTransferBaseAddressdefinedinTBA,

specifiesthestartofthecorrespondingFlexRaymessagebufferinthesystemmemoryRAM.

NOTE:ItisrecommendedtoclearthewholeTCRbeforeconfiguringit,inordertoavoidunexpected

transferbehaviorduetooldconfigurationcontentsorrandomTCRRAMcontentsafter

poweronreset.

NOTE:Ifatransferistriggeredbutnotransfersize(headerordata)issetupintheTCR,nodatawill

betransferred,butthecorrespondingflagintheTransfertoCommunicationController

Occurred(TCCOx)ortheTransfertoSystemMemoryOccurred(TSMOx)willbeset.

23.5.2.1ParityProtection

TheTransferConfigurationRAM(TCR)isparityprotected.Theparityerrorinterruptgenerationisdisabled

bydefaultandcanbeswitchedonbywritinga4bitkeytodedicatedparitylockbitsintheGlobalControl

Set/ResetRegister(GCS/R).

Theparityprotectionsupportsevenandoddparity.Theparityinformationisstoredtogetherwiththe

corresponding19bitdatawordentry.

TheparityischeckedeachtimeadatawordisreadfromtheTCRRAM.Ifaparityerrorisdetected,the

PEerrorflagissetintheTransferErrorInterruptFlag(TEIF)register.

AdditionallyanuncorrectableRAMerrorinterrupt/eventwillbegenerated.TheuncorrectableRAMerror

interrupt/eventisnonmaskableandthereforecannotbeswitchedoff.TheuncorrectableRAMerroris

hookeduptotheESMmodule(event).

ForparityerrorsthefaultyTCRRAMaddresscanbereadfromtheParityErrorAddress(PEADR)

register.

23.5.3MemoryProtectionMechanism

Thisfeatureallowstorestrictaccessestocertainareasinmemoryinordertoprotectcriticalapplication

datafromunintentionallybeingaccessedbytheTransferUnitStateMachine.

Onememorysection(start-andendaddress)canbedefined,whichallowsreadandwriteaccessesfor

theTransferUnitStateMachine.

Iftheendaddressissmallerorequaltothestartaddress,datatransferswillbeblocked.Anyaccesses

performedoutsidethismemoryareabytheTransferUnitStateMachineresultinnotransfersbeing

performed.IncaseofaprotectionviolationaflagwillbesetandtheMemoryProtectionViolationinterrupt

willbeactivated.TheTransferUnitStateMachinewillbedisabledinthiscase.

ThedefaultsettingoftheTransferUnitStateMachinememoryprotectionaddressrangesetupis:

•0x00000000forstartaddress

•0x00000000forendaddress

Thismeansavalidaddressrangemustbesetup,beforetheTransferUnitcanbeused.

988

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Static segmentSymbolwindowNITCommunicationcyclexCommunicationcyclex-1Communicationcyclex+1Timebasederivedtrigger

t

Timebasederivedtrigger

DynamicsegmentStaticsegment

Dynamic segment



www.ti.comCommunicationCycle

23.6CommunicationCycle

Figure23-10.StructureofCommunicationCycle

AcommunicationcycleinFlexRayconsistsofthefollowingelements:

•Staticsegment

•Dynamicsegment

•Symbolwindow

•Networkidletime(NIT)

Staticsegment,dynamicsegment,andsymbolwindowformthenetworkcommunicationtime(NCT).For

eachcommunicationchanneltheslotcounterstartsat1andcountsupuntiltheendofthedynamic

segmentisreached.Bothchannelssharethesamearbitrationgridwhichmeansthattheyusethesame

synchronizedmacrotick.

23.6.1StaticSegment

TheStaticSegmentischaracterizedbythefollowingfeatures:

•Timeslotsoffixedlength(optionallyprotectedbybusguardian)

•Startofframetransmissionatactionpointofthecorrespondingstaticslot

•Payloadlengthsameforallframesonbothchannels

Parameters:numberofstaticslotsGTUC7.NSS(9-0),staticslotlengthGTUC7.SSL(9-0),PayloadLength

StaticMHDC.SFDL(6-0),actionpointoffsetGTUC9.APO(5-0)

23.6.2DynamicSegment

TheDynamicSegmentischaracterizedbythefollowingfeatures:

•Allcontrollershavebusaccess(nobusguardianprotectionpossible)

•Variablepayloadlengthanddurationofslots,differentforbothchannels

•Startoftransmissionatminislotactionpoint

Parameters:numberofminislotsGTUC8.NMS(12-0),minislotlengthGTUC8.MSL(5-0),minislotaction

pointoffsetGTUC9.MAPO(4-0),startoflatesttransmit(lastminislot)MHDC.SLT(12-0)

23.6.3SymbolWindow

Duringthesymbolwindowonlyonemediaaccesstestsymbol(MTS)maybetransmittedperchannel.

MTSsymbolsaresentinNORMAL_ACTIVEstatetotestthebusguardian.

Thesymbolwindowischaracterizedbythefollowingfeatures:

•Sendsinglesymbol

•TransmissionoftheMTSsymbolstartsatthesymbolwindowsactionpoint

989

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




GTUC2.MPC=mGTUC4.NIT=kGTUC4.OCS=NIT+1

Static/DynamicSegmentSymbolWindowNIT

0nn+1kk+1m+1



CommunicationModeswww.ti.com

Parameters:SymbolWindowActionPointOffsetGTUC9.APO(4-0)(sameasforstaticslots),Network

IdleTimeStartGTUC4.NIT(13-0)

23.6.4NetworkIdleTime(NIT)

Duringnetworkidletimethecommunicationcontrollerhastoperformthefollowingtasks:

•Calculateclockcorrectionterms(offsetandrate)

•Distributeoffsetcorrectionovermultiplemacroticksafteroffsetcorrectionstart

•Performclustercyclerelatedtasks

Parameters:networkidletimestartGTUC4.NIT(13-0),offsetcorrectionstartGTUC4.OCS(13-0)

23.6.5ConfigurationofNITStartandOffsetCorrectionStart

Figure23-11.ConfigurationofNITStartandOffsetCorrectionStart

Thenumberofmacrotickspercycleisassumedtobem.ItisconfiguredbyprogrammingGTUC2.MPC=

mintheGTUConfigurationregister2.

Thestatic/dynamicsegmentstartswithmacrotick0andendswithmacrotickn:n=staticsegmentlength

+dynamicsegmentoffset+dynamicsegmentlength-1MT

ThestaticsegmentlengthisconfiguredbyGTUC7.SSLandGTUC7.NSS.Thedynamicsegmentlengthis

configuredbyGTUC8.MSLandGTUC8.NMS.

ThedynamicsegmentoffsetisActionPointOffset-MinislotActionPointOffsetor0MTiftheresultis

negative.FordetailspleaserefertotheFlexRayCommunicationsSystemProtocolSpecificationfromthe

FlexRayConsortium.

TheNITstartswithmacrotickk+1andendswiththelastmacrotickofcyclem-1.Ithastobeconfiguredby

settingGTUC4.NIT=k.

ForthisFlexRaymoduletheoffsetcorrectionstartisrequiredtobeGTUC4.OCS>=GTUC4.NIT+1=

k+1.

Thelengthofsymbolwindowresultsfromthenumberofmacroticksbetweentheendofthestatic/

dynamicsegmentandthebeginningoftheNIT.Itcanbecalculatedbyk-n.

23.7CommunicationModes

TheFlexRayprotocolspecificationv2.1Rev.AdefinestheTime-TriggeredDistributed(TT-D)mode.

23.7.1Time-TriggeredDistributed(TT-D)

InTT-Dmodethefollowingconfigurationsarepossible:

•Purestatic:minimum2staticslots+symbolwindow(optional)

•Mixedstatic/dynamic:minimum2staticslots+dynamicsegment+symbolwindow(optional)

Aminimumoftwocoldstartnodesneedtobeconfiguredfordistributedtime-triggeredoperation.Two

fault-freecoldstartnodesarenecessaryfortheclusterstartup.Eachstartupframemustbeasyncframe,

thereforeallcoldstartnodesaresyncnodes.

990

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comClockSynchronization

23.8ClockSynchronization

InTT-Dmodeadistributedclocksynchronizationisused.Eachnodeindividuallysynchronizesitselftothe

clusterbyobservingthetimingofreceivedsyncframesfromothernodes.

23.8.1GlobalTime

ActivitiesinaFlexRaynode,includingcommunication,arebasedontheconceptofaglobaltime,even

thougheachindividualnodemaintainsitsownviewofit.Itistheclocksynchronizationmechanismthat

differentiatestheFlexRayclusterfromothernodecollectionswithindependentclockmechanisms.The

globaltimeisavectoroftwovalues;thecycle(cyclecounter)andthecycletime(macrotickcounter).

Clusterspecific:

•Macrotick(MT)=basicunitoftimemeasurementinaFlexRaynetwork,amacrotickconsistsofan

integernumberofmicroticks(μT)

•Cyclelength=durationofacommunicationcycleinunitsofmacroticks(MT)

23.8.2LocalTime

Internally,nodestimetheirbehaviorwithmicrotickresolution.Microticksaretimeunitsderivedfromthe

oscillatorclocktickofthespecificnode.Thereforemicroticksarecontroller-specificunits.Theymayhave

differentdurationindifferentcontrollers.Theprecisionofanodeslocaltimedifferencemeasurementsisa

microtick(μT).

Nodespecific:

•Sampleclock->prescaler->microtick(µT);typically25ns.

•μT=basicunitoftimemeasurementinacommunicationcontroller,clockcorrectionisdoneinunitsof

μTs

•Cyclecounter+macrotickcounter=nodeslocalviewoftheglobaltime

23.8.3SynchronizationProcess

Clocksynchronizationisperformedbymeansofsyncframes.Onlypreconfigurednodes(syncnodes)are

allowedtosendsyncframes.Inatwo-channelcluster,asyncnodehastosenditssyncframeonboth

channels.

ForsynchronizationinFlexRaythefollowingconstraintshavetobeconsidered:

•Max.onesyncframepernodeinonecommunicationcycle

•Max.15syncframesperclusterinonecommunicationcycle

•Everynodehastouseapreconfigurednumberofsyncframes(GTUC2.SNM(3-0))forclock

synchronization

•Minimumoftwosyncnodesrequiredforclocksynchronizationandstartup

Forclocksynchronizationthetimedifferencebetweenexpectedandobservedarrivaltimeofsyncframes

receivedduringthestaticsegmentismeasured.Inatwochannelclusterthesyncnodehastobe

configuredtosendsyncframesonbothchannels.ThecalculationofcorrectiontermsisdoneduringNIT

(offset:everycycle,rate:oddcycle)byusingaFTA/FTMalgorithm.FordetailsseeFlexRayprotocol

specificationv2.1Rev.A.

23.8.3.1Offset(Phase)Correction

•Onlydeviationvaluesmeasuredandstoredinthecurrentcycleused

•Foratwochannelnodethesmallervaluewillbetaken

•CalculationduringNITofeverycommunicationcycle

•Offsetcorrectionvaluecalculatedinevencyclesusedforerrorcheckingonly

•Checkedagainstlimitvalues

•CorrectionvalueisasignedintegernumberofμTs

991

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ErrorHandlingwww.ti.com

•Correctiondoneinoddnumberedcycles,distributedoverthemacroticksbeginningatoffsetcorrection

startuptocycleend(endofNIT)toshiftnodesnextstartofcycle(MTslengthened/shortened)

23.8.3.2Rate(Frequency)Correction

•Pairsofdeviationvaluesmeasuredandstoredineven/oddcyclepairused

•Foratwochannelnodetheaverageofthedifferencesfromthetwochannelsisused

•CalculatedduringNITofoddnumberedcycles

•Clusterdriftdampingisperformedusingglobaldampingvalue

•Checkedagainstlimitvalues

•CorrectionvalueisasignedintegernumberofμTs

•Distributedovermacrotickscomprisingthenexteven/oddcyclepair(MTslengthened/shortened)

23.8.4SyncFrameTransmission

Syncframetransmissionisonlypossiblefrombuffer0and1.Messagebuffer1maybeusedforsync

frametransmissionincasethatsyncframesshouldhavedifferentpayloadsonthetwochannels.Inthis

casebitMRC.SPLMhastobeprogrammedto1.

MessagebuffersusedforsyncframetransmissionhavetobeconfiguredwiththekeyslotIDandcanbe

(re)configuredinDEFAULT_CONFIGorCONFIGstateonly.Fornodestransmittingsyncframes

SUCC1.TXSYmustbesetto1.

23.8.5ExternalClockSynchronization

Duringnormaloperation,independentclusterscandriftsignificantly.Ifsynchronousoperationacross

independentclustersisdesired,externalsynchronizationisnecessary;eventhoughthenodeswithineach

clusteraresynchronized.Thiscanbeaccomplishedwithsynchronousapplicationofhost-deducedrate

andoffsetcorrectiontermstotheclusters.

•Externaloffset/ratecorrectionvalueisasignedinteger

•Externaloffset/ratecorrectionvalueisaddedtocalculatedoffset/ratecorrectionvalue

•Aggregatedoffset/ratecorrectionterm(external+internal)isnotcheckedagainstconfiguredlimits

23.9ErrorHandling

TheimplementederrorhandlingconceptoftheFlexRayprotocolisintendedtoensurethatinthe

presenceofalowerlayerprotocolerrorinasinglenode,communicationbetweennon-affectednodescan

bemaintained.Insomecases,higherlayerprogramcommandactivityisrequiredforthecommunication

controllertoresumenormaloperation.AchangeoftheerrorhandlingstatewillsetbitEIR.PEMCandcan

triggeraninterrupttothehostifenabled.ThecurrenterrormodeissignaledbyCCEV.ERRM(1-0).

Table23-5.ErrorModesofthePOC(DegradationModel)

ErrorMode

Activity

ACTIVE

Fulloperation,State:NORMAL_ACTIVE

Thecommunicationcontrollerisfullysynchronizedandsupportstheclusterwideclocksynchronization.The

hostisinformedofanyerrorcondition(s)orstatuschangebyinterrupt(ifenabled)orbyreadingtheerror

andstatusflagsfromregistersEIRandSIR.

PASSIVE

Reducedoperation,State:NORMAL_PASSIVE,communicationcontrollerselfrescueallowed

Thecommunicationcontrollerstopstransmittingframesandsymbols,butreceivedframesarestill

processed.Clocksynchronizationmechanismsarecontinuedbasedonreceivedframes.Noactive

contributiontotheclusterwideclocksynchronization.Thehostisinformedofanyerrorcondition(s)orstatus

changebyinterrupt(ifenabled)orbyreadingtheerrorandstatusflagsfromregistersEIRandSIR.

COMM_HALT

Operationhalted,State:HALT,communicationcontrollerselfrescuenotallowed

Thecommunicationcontrollerstopsframeandsymbolprocessing,clocksynchronizationprocessing,and

themacrotickgeneration.Thehosthasstillaccesstoerrorandstatusinformationbyreadingtheerrorand

statusflagsfromregistersEIRandSIR.Thebusdriversaredisabled.

992

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comErrorHandling

23.9.1ClockCorrectionFailedCounter

WhentheClockCorrectionFailedCounterreachesthe“maximumwithoutclockcorrectionpassive”limit

definedbySUCC3.WCP(3-0),thePOCtransitsfromNORMAL_ACTIVEtoNORMAL_PASSIVEstate.

Whenitreachesthe“maximumwithoutclockcorrectionfatal”limitdefinedbySUCC3.WCF(3-0),ittransits

NORMAL_ACTIVEorNORMAL_PASSIVEtotheHALTstate.

TheClockCorrectionFailedCounterCCEV.CCFC(3-0)allowsthehosttomonitorthedurationofthe

inabilityofanodetocomputeclockcorrectiontermsafterthecommunicationcontrollerpassedprotocol

startupphase.Itwillbeincrementedbyoneattheendofanyoddnumberedcommunicationcyclewhere

eithertheMissingOffsetCorrectionflagSFS.MOCSortheMissingRateCorrectionflagSFS.MRCSisset.

Theclockcorrectionfailedcounterisresettozeroattheendofanoddcommunicationcycleifneitherthe

MissingOffsetCorrectionflagSFS.MOCSnortheMissingRateCorrectionflagSFS.MRCSisset.

TheClockCorrectionFailedCounterstopsincrementingwhenthe“maximumwithoutclockcorrection

fatal”valueSUCC3.WCF(3-0)isreached(i.e.incrementingthecounteratitsmaximumvaluewillnot

causeittowraparoundbacktozero).Theclockcorrectionfailedcounterwillbeinitializedtozerowhen

thecommunicationcontrollerentersREADYstateorwhenNORMAL_ACTIVEstateisentered.

NOTE:ThetransitiontoHALTstateispreventedifSUCC1.HCSEisnotset.

23.9.2PassivetoActiveCounter

ThepassivetoactivecountercontrolsthetransitionofthePOCfromNORMAL_PASSIVEto

NORMAL_ACTIVEstate.SUCC1.SUCC1.PTA(4-0)definesthenumberofconsecutiveeven/oddcycle

pairsthatmusthavevalidclockcorrectiontermsbeforethecommunicationcontrollerisallowedtotransit

fromNORMAL_PASSIVEtoNORMAL_ACTIVEstate.IfSUCC1.PTA(4-0)issettozerothe

communicationcontrollerisnotallowedtotransitfromNORMAL_PASSIVEtoNORMAL_ACTIVEstate.

23.9.3HALTCommand

IncasethehostwantstostopFlexRaycommunicationofthelocalnodeitcanbringthecommunication

controllerintoHALTstatebyassertingtheHALTcommand.ThiscanbedonebywritingSUCC1.CMD(3-

0)=0110.InordertoshutdowncommunicationonanentireFlexRaynetwork,ahigherlayerprotocolis

requiredtoassurethatallnodesapplytheHALTcommandatthesametime.

ThePOCstatefromwhichthetransitiontoHALTstatetookplacecanbereadfromCCSV.PSL(5-0).

WhencalledinNORMAL_ACTIVEorNORMAL_PASSIVEstatethePOCtransitstoHALTstateattheend

ofthecurrentcycle.WhencalledinanyotherstateSUCC1.CMD(3-0)willberesetto0000=

“command_not_accepted”andbitEIR.CNAintheerrorinterruptregisterissetto1.Ifenabledaninterrupt

tothehostisgenerated.

23.9.4FREEZECommand

IncasethehostdetectsasevereerrorconditionitcanbringthecommunicationcontrollerintoHALTstate

byassertingtheFREEZEcommand.ThiscanbedonebywritingSUCC1.CMD(3-0)=0111.TheFREEZE

commandtriggerstheentryoftheHALTstateimmediatelyregardlessofthecurrentPOCstate.

ThePOCstatefromwhichthetransitiontoHALTstatetookplacecanbereadfromCCSV.PSL(5-0).

993

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




T1T3T4T5T8T9T6T7HWResetPowerOn

READY

WAKEUP

HALT

MONITOR

CONFIG

STARTUP

MODET10T11T12T13T14T15T17T16

TransitiontriggeredbyhostcommandTransitiontriggeredbyinternalconditionsTransitiontriggeredbyhostcommandORinternalconditions

DEFAULT_CONFIGT2

NORMALACTIVENORMALPASSIVE



CommunicationControllerStateswww.ti.com

23.10CommunicationControllerStates

23.10.1CommunicationControllerStateDiagram

Figure23-12.OverallStateDiagramofCommunicationController

StatetransitionsarecontrolledbytheresetandFlexRayreceive(rxd1,2)pins,thePOCstatemachine,

andbytheCHIcommandvectorSUCC1.CMD(3-0).

TheCommunicationControllerexitsfromallstatestoHALTstateafterapplicationoftheFREEZE

command(SUCC1.CMD(3-0)=0111b).

Table23-6.StateTransitionsofCommunicationControllerOverallStateMachine

T#

Condition

From

To

1

Hardwarereset

AllStates

DEFAULT_CONFIG

2

CommandCONFIG,SUCC1.CMD(3-0)=0001

DEFAULT_CONFIG

CONFIG

994

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCommunicationControllerStates

Table23-6.StateTransitionsofCommunicationControllerOverallStateMachine(continued)

T#

Condition

From

To

3

UnlocksequencefollowedbycommandMONITOR_MODE,

CONFIG

MONITOR_MODE

SUCC1.CMD(3-0)=1011

4

CommandCONFIG,SUCC1.CMD(3-0)=0001

MONITOR_MODE

CONFIG

5

UnlocksequencefollowedbycommandREADY,SUCC1.CMD(3-

CONFIG

READY

0)=0010

6

CommandCONFIG,SUCC1.CMD(3-0)=0001

READY

CONFIG

7

CommandWAKEUP,SUCC1.CMD(3-0)=0011

READY

WAKEUP

8

Complete,non-abortedtransmissionofwakeuppatternOR

WAKEUP

READY

receivedWUPORreceivedframeheaderORcommandREADY,

SUCC1.CMD(3-0)=0010

9

CommandRUN,SUCC1.CMD(3-0)=0100

READY

STARTUP

10

Successfulstartup

STARTUP

NORMAL_ACTIVE

11

Clockcorrectionfailedcounterreached“maximumwithoutclock

NORMAL_ACTIVE

NORMAL_PASSIVE

correctionpassive”limitconfiguredbySUCC3.WCP(3-0)

12

NumberofvalidcorrectiontermsreachedthePassivetoActive

NORMAL_PASSIVE

NORMAL_ACTIVE

limitconfiguredbySUCC1.PTA(4-0)

13

CommandREADY,SUCC1.CMD(3-0)=0010

STARTUP,

READY

NORMAL_ACTIVE,NORM

AL_PASSIVE

14

ClockCorrectionFailedcounterreached“maximumwithoutclock

NORMAL_ACTIVE

HALT

correctionfatal”limitconfiguredbySUCC3.WCF(3-0)ANDbit

SUCC1.HCSEsetto1ORcommandHALT,SUCC1.CMD(3-0)=

0110

15

ClockCorrectionFailedcounterreached“maximumwithoutclock

NORMAL_PASSIVE

HALT

correctionfatal”limitconfiguredbySUCC3.WCF(3-0)ANDbit

SUCC1.HCSEsetto1ORcommandHALT,SUCC1.CMD(3-0)=

0110

16

CommandFREEZE,SUCC1.CMD(3-0)=0111

AllStates

HALT

17

CommandCONFIG,SUCC1.CMD(3-0)=0001

HALT

DEFAULT_CONFIG

23.10.2DEFAULT_CONFIGState

InDEFAULT_CONFIGstate,thecommunicationcontrollerisstopped.Allconfigurationregistersare

accessibleandthepinstothephysicallayerareintheirinactivestate.

Thecommunicationcontrollerentersthisstate:

•Whenleavinghardwarereset

•WhenexitingfromHALTstate

ToleaveDEFAULT_CONFIGstatethehosthastowriteSUCC1.CMD(3-0)=0001.Thecommunication

controllerthentransitstoCONFIGstate.

23.10.3CONFIGState

InCONFIGstate,thecommunicationcontrollerisstopped.Allconfigurationregistersareaccessibleand

thepinstothephysicallayerareintheirinactivestate.Thisstateisusedtoinitializethecommunication

controllerconfiguration.

Thecommunicationcontrollerentersthisstate:

•WhenexitingfromDEFAULT_CONFIGstate

•WhenexitingfromMONITOR_MODEorREADYstate

WhenthestatehasbeenenteredbyHALTandDEFAULT_CONFIGstate,thehostcananalyzestatus

informationandconfiguration.BeforeleavingCONFIGstatethehosthastoassurethattheconfiguration

isfault-free.

995

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CommunicationControllerStateswww.ti.com

ToleaveCONFIGstate,thehosthastoperformtheunlocksequence.Directlyafterunlockingthe

CONFIGstatethehosthastowriteSUCC1.CMD(3-0)toenterthenextstate.

NOTE:Themessagebufferstatusregisters(MHDS,TXRQ1/2/3/4,NDAT1/2/3/4,MBSC1/2/3/4)and

statusdatastoredinthemessageRAMandarenotaffectedbythetransitionofthePOC

fromCONFIGtoREADYstate.

WhenthecommunicationcontrollerisinCONFIGstateitisalsopossibletobringthecommunication

controllerintoapowersavingmodebyhaltingthemoduleclocks.Todothisthehosthastoassurethatall

MessageRAMtransfershavefinishedbeforeturningofftheclocks.

23.10.4MONITOR_MODE

AfterunlockingCONFIGstateandwritingSUCC1.CMD(3-0)=1011thecommunicationcontrollerenters

MONITOR_MODE.InthismodethecommunicationcontrollerisabletoreceiveFlexRayframesandto

detectwakeuppattern.Thetemporalintegrityofreceivedframesisnotchecked,andthereforecycle

counterfilteringisnotsupported.Thismodecanbeusedfordebuggingpurposesincasee.g.thatstartup

ofaFlexRaynetworkfails.AfterwritingSUCC1.CMD(3-0)=0001thecommunicationcontrollertransits

backtoCONFIGstate.

InMONITOR_MODEthepickfirstvalidmechanismisdisabled.Thismeansthatareceivemessagebuffer

mayonlybeconfiguredtoreceiveononechannel.Receivedframesarestoredintomessagebuffers

accordingtoframeIDandreceivechannel.Nullframesarehandledlikedataframes.Afterframe

receptiononlystatusbitsMBS.VFRA,MBS.VFRB,MBS.MLST,MBS.RCIS,MBS.SFIS,MBS.SYNS,

MBS.NFIS,MBS.PPIS,MBS.RESShavevalidvalues.

InMONITOR_MODEthecommunicationcontrollerisnotabletodistinguishbetweenCASandMTS

symbols.Incaseoneofthesesymbolsisreceivedononeorbothofthetwochannels,theflags

SIR.MTSA/SIR.MTSBareset.SIR.CAShasnofunctioninMONITOR_MODE.

23.10.5READYState

AfterunlockingCONFIGstateandwritingSUCC1.CMD(3-0)=0010thecommunicationcontrollerenters

READYstate.FromthisstatethecommunicationcontrollercantransittoWAKEUPstateandperforma

clusterwakeuportoSTARTUPstatetoperformacoldstartortointegrateintoarunningcluster.

Thecommunicationcontrollerentersthisstate:

•WhenexitingfromCONFIG,WAKEUP,STARTUP,NORMAL_ACTIVE,orNORMAL_PASSIVEstate

bywritingSUCC1.CMD(3-0)=0010(READYcommand).

Thecommunicationcontrollerexitsfromthisstate:

•ToCONFIGstatebywritingSUCC1.CMD(3-0)=0001(CONFIGcommand)

•ToWAKEUPstatebywritingSUCC1.CMD(3-0)=0011(WAKEUPcommand)

•ToSTARTUPstatebywritingSUCC1.CMD(3-0)=0100(RUNcommand)

Internalcountersandthecommunicationcontrollerstatusflagsareresetwhenthecommunication

controllerentersSTARTUPstate.

NOTE:StatusbitsMHDS(14-0),registersTXRQ1/2/3/4,andstatusdatastoredintheMessageRAM

arenotaffectedbythetransitionofthePOCfromREADYtoSTARTUPstate.

996

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCommunicationControllerStates

23.10.6WAKEUPState

ThedescriptionbelowisintendedtohelpconfiguringwakeupfortheFlexRaymodule.Adetailed

descriptionofthewakeupprocedurecanbefoundintheFlexRayprotocolspecificationv2.1Rev.A.

Thecommunicationcontrollerentersthisstate:

•WhenexitingfromREADYstatebywritingSUCC1.CMD(3-0)=0011(WAKEUPcommand).

ThecommunicationcontrollerexitsfromthisstatetoREADYstate:

•Aftercompletenon-abortedtransmissionofwakeuppattern

•AfterWUPreception

•AfterdetectingaWUPcollision

•Afterreceptionofaframeheader

•BywritingSUCC1.CMD(3-0)=0010(READYcommand)

ThecommunicationcontrollerexitsfromthisstatetoHALTstate:

•BywritingSUCC1.CMD(3-0)=0111(FREEZEcommand)

Theclusterwakeupmustprecedethecommunicationstartupinordertoensurethatallnodesinacluster

areawake.Theminimumrequirementforaclusterwakeupisthatallbusdriversaresuppliedwithpower.

Abusdriverhastheabilitytowakeuptheothercomponentsofitsnodewhenitreceivesawakeup

patternonitschannel.Atleastonenodeintheclusterneedsanexternalwakeupsource.

Thehostcompletelycontrolsthewakeupprocedure.Itisinformedaboutthestateoftheclusterbythebus

driverandthecommunicationcontrollerandconfiguresbusguardian(ifavailable)andcommunication

controllertoperformtheclusterwakeup.Thecommunicationcontrollerprovidestothehosttheabilityto

transmitaspecialwakeuppatternoneachofitsavailablechannelsseparately.Thecommunication

controllerneedstorecognizethewakeuppatternonlyduringwakeupandstartupphase.

Wakeupmaybeperformedononlyonechannelatatime.Thehosthastoconfigurethewakeupchannel

whilethecommunicationcontrollerisinCONFIGstatebywritingbitWUCSintheSUCconfiguration

register1.Thecommunicationcontrollerensuresthatongoingcommunicationonthischannelisnot

disturbed.Thecommunicationcontrollercannotguaranteethatallnodesconnectedtotheconfigured

channelawakeuponthetransmissionofthewakeuppattern,sincethesenodescannotgivefeedback

untilthestartupphase.Thewakeupprocedureenablessingle-channeldevicesinatwo-channelsystemto

triggerthewakeup,byonlytransmittingthewakeuppatternonthesinglechanneltowhichtheyare

connected.Anycoldstartnodethatdeemsasystemstartupnecessarywillthenwaketheremaining

channelbeforeinitiatingcommunicationstartup.

Thewakeupproceduretoleratesanynumberofnodessimultaneouslytryingtowakeupasinglechannel

andresolvesthissituationsuchthatonlyonenodetransmitsthepattern.Additionallythewakeuppattern

iscollisionresilient,soeveninthepresenceofafaultcausingtwonodestosimultaneouslytransmita

wakeuppattern,theresultingcollidedsignalcanstillwaketheothernodes.

AfterwakeupthecommunicationcontrollerreturnstoREADYstateandsignalsthechangeofthewakeup

statustothehostbysettingbitSIR.WSTinthestatusinterruptregister.Thewakeupstatusvector

CCSV.WSV(2-0)canbereadfromthecommunicationcontrollerstatusvectorregister.Ifavalidwakeup

patternwasreceivedalsoeitherbitSIR.WUPAorbitSIR.WUPBinthestatusinterruptregisterisset.

997

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TenterT2T6T3T5

WAKEUP

WAKEUPSEND

WAKEUPLISTENWAKEUPDETECTT4Texit

READYWAKEUPSTANDBY

T1



CommunicationControllerStateswww.ti.com

Figure23-13.StructureofPOCStateWAKEUP

Table23-7.StateTransitionsWAKEUP

T#

Condition

From

To

enter

HostcommandschangetoWAKEUPstatebywritingSUCC1.CMD(3-

READY

WAKEUP

0)=0011(WAKEUPcommand)

1

CHIcommandWAKEUPtriggerswakeupFSMtotransitto

WAKEUP_STANDBY

WAKEUP_LISTEN

WAKEUP_LISTENstate

2

ReceivedWUPonwakeupchannelselectedbybitSUCC1.WUCSOR

WAKEUP_LISTEN

WAKEUP_STANDBY

frameheaderoneitheravailablechannel

3

Timerevent

WAKEUP_LISTEN

WAKEUP_SEND

4

Complete,non-abortedtransmissionofwakeuppattern

WAKEUP_SEND

WAKEUP_STANDBY

5

Collisiondetected

WAKEUP_SEND

WAKEUP_DETECT

6

WakeuptimerexpiredORWUPdetectedonwakeupchannelselected

WAKEUP_DETECT

WAKEUP_STANDBY

bybitSUCC1.WUCSORframeheaderreceivedoneitheravailable

channel

exit

Wakeupcompleted(afterT2orT4orT6)ORhostcommandschange

WAKEUP

READY

toREADYstatebywritingSUCC1.CMD(3-0)=0010(READY

command).ThiscommandalsoresetsthewakeupFSMto

WAKEUP_STANDBYstate.

TheWAKEUP_LISTENstateiscontrolledbythewakeuptimerandthewakeupnoisetimer.Thetwo

timersarecontrolledbytheparametersListenTimeoutSUCC2.LT(20-0)andListenTimeoutNoise

SUCC2.LTN(3-0).Listentimeoutenablesafastclusterwakeupincaseofanoisefreeenvironment,while

listentimeoutnoiseenableswakeupundermoredifficultconditionsregardingnoiseinterference.

InWAKEUP_SENDstatethecommunicationcontrollertransmitsthewakeuppatternontheconfigured

channelandchecksforcollisions.Afterreturnfromwakeupthehosthastobringthecommunication

controllerintoSTARTUPstatebyCHIcommandRUN.

998

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCommunicationControllerStates

InWAKEUP_DETECTstatethecommunicationcontrollerattemptstoidentifythereasonforthewakeup

collisiondetectedinWAKEUP_SENDstate.Themonitoringisboundedbytheexpirationoflistentimeout

asconfiguredbySUCC2.LT(20-0)intheSUCconfigurationregister2.Eitherthedetectionofawakeup

patternindicatingawakeupattemptbyanothernodeorthereceptionofaframeheaderindicationexisting

communication,causesthedirecttransitiontoREADYstate.OtherwiseWAKEUP_DETECTisleftafter

expirationoflistentimeout;inthiscasethereasonforwakeupcollisionisunknown.

Thehosthastobeawareofpossiblefailuresofthewakeupandactaccordingly.Itisadvisabletodelay

anypotentialstartupattemptofthenodehavinginstigatedthewakeupbytheminimaltimeittakes

anothercoldstartnodetobecomeawakeandtobeconfigured.

TheFlexRayProtocolSpecificationrecommendsthattwodifferentcommunicationcontrollersshallwake

thetwochannels.

23.10.6.1HostActivities

Thehostmustcoordinatethewakeupofthetwochannelsandmustdecidewhether,ornot,towakea

specificchannel.Thesendingofthewakeuppatternisinitiatedbythehost.Thewakeuppatternis

detectedbytheremoteBDsandsignaledtotheirlocalhosts.

Wakeupprocedurecontrolledbyhost(single-channelwakeup):

•ConfigurethecommunicationcontrollerinCONFIGstate

–SelectwakeupchannelbyprogrammingbitSUCC1.WUCS

•ChecklocalBDswhetheraWUPwasreceived

•ActivateBDofselectedwakeupchannel

•CommandcommunicationcontrollertoenterREADYstate

•Commandcommunicationcontrollertostartwakeupontheconfiguredchannelbywriting

SUCC1.CMD(3-0)=0011

–communicationcontrollerentersWAKEUP_LISTEN

–communicationcontrollerreturnstoREADYstateandsignalsstatusofwakeupattempttohost

•Waitpredefinedtimetoallowtheothernodestowakeupandconfigurethemselves

•Coldstartnode:

–indualchannelclusterwaitforWUPontheotherchannel

–ResetColdstartInhibitflagCCSV.CSIbywritingSUCC1.CMD(3-0)=1001(ALLOW_COLDSTART

command)

•CommandcommunicationcontrollertoenterstartupbywritingSUCC1.CMD(3-0)=0100(RUN

command)

Wakeupproceduretriggeredbythebusdriver:

•Wakeuprecognizedbybusdriver

•busdrivertriggerspower-upofhost(ifrequired)

•busdriversignalswakeupeventtohost

•Hostconfiguresitslocalcommunicationcontroller

•Ifnecessaryhostcommandswakeupofsecondchannelandwaitspredefinedtimetoallowtheother

nodestowakeupandconfigurethemselves

•HostcommandscommunicationcontrollertoenterSTARTUPstatebywritingSUCC1.CMD(3-0)=

0100(RUNcommand)

999

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Tx-wakeupSymbolRx-wakeupPattern(nocollision)Rx-wakeupPattern(collision,worstcase)

TXL=15-60bittimesTXI=45-180bittimes



CommunicationControllerStateswww.ti.com

23.10.6.2WakeUpPattern(WUP)

Thewakeuppattern(WUP)iscomposedofatleasttwowakeupsymbols(WUS).Wakeupsymboland

wakeuppatternareconfiguredbythePRTconfigurationregisters1,2.

•Singlechannelwakeup,wakeupsymbolmaynotbesentonbothchannelsatthesametime

•Wakeupsymbolcollisionresilientforuptotwosendingnodes(twooverlappingwakeupsymbolsstill

recognizable)

•Wakeupsymbolmustbeconfiguredidenticalinallnodesofacluster

•WakeupsymboltransmitlowtimeconfiguredbyPRTC2.TXL(5-0)

•WakeupsymbolidletimeconfiguredbyPRTC2.TXI(7-0),usedtolistenforactivityonthebus

•AwakeuppatterncomposedofatleasttwoTx-wakeupsymbolsneededforwakeup

•NumberofrepetitionsconfigurablebyPRTC1.RWP(5-0)(2to63repetitions)

•WakeupsymbolreceivewindowlengthconfiguredbyPRTC1.RXW(8-0)

•WakeupsymbolreceivelowtimeconfiguredbyPRTC2.RXL(5-0)

•WakeupsymbolreceiveidletimeconfiguredbyPRTC2.RXI(5-0)

Figure23-14.TimingofWakeUpPattern

23.10.7STARTUPState

ThedescriptionbelowisintendedtohelpconfiguringstartupfortheFlexRaymodule.Adetailed

descriptionofthestartupprocedurecanbefoundintheFlexRayprotocolspecificationv2.1Rev.A.

AnynodeenteringSTARTUPstatethathascoldstartcapabilityshouldassurethatbothchannelsattached

havebeenawakenedbeforeinitiatingcoldstart.

Itcannotbeassumedthatallnodesandstarsneedthesameamountoftimetobecomecompletely

awakeandtobeconfigured.Sinceatleasttwonodesarenecessarytostartupthecluster

communication,itisadvisabletodelayanypotentialstartupattemptofthenodehavinginstigatedthe

wakeupbytheminimalamountoftimeittakesanothercoldstartnodetobecomeawake,tobeconfigured

andtoenterstartup.Itmayrequireseveralhundredmilliseconds(dependingonthehardwareused)

beforeallnodesandstarsarecompletelyawakenedandconfigured.

Startupisperformedonallchannelssynchronously.Duringstartup,anodeonlytransmitsstartupframes.

Startupframesarebothsyncframesandnullframesduringstartup.

Afault-tolerant,distributedstartupstrategyisspecifiedforinitialsynchronizationofallnodes.Ingeneral,a

nodemayenterNORMAL_ACTIVEstateby:

•Coldstartpathinitiatingtheschedulesynchronization(leadingcoldstartnode)

•Coldstartpathjoiningothercoldstartnodes(followingcoldstartnode)

•Integrationpathintegratingintoanexistingcommunicationschedule(allothernodes)

SeealsoFigure23-15formoreinformation.

1000

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCommunicationControllerStates

Acoldstartattemptbeginswiththetransmissionofacollisionavoidancesymbol(CAS).Onlyacoldstart

nodethattransmittedtheCAS,transmitsframesinthefirstfourcyclesaftertheCAS.itisthenjoined

firstlybytheothercoldstartnodesandafterwardsbyallothernodes.

AcoldstartnodehasbitsSUCC1.TXSTandSUCC1.TXSYsetto1.Messagebuffer0holdsthekeyslot

IDwhichdefinestheslotnumberwherethestartupframeissent.Thestartupframeindicatorbitissetin

theframeheaderofthestartupframe.

Inclustersconsistingofthreeormorenodes,atleastthreenodesshallbeconfiguredtobecoldstart

nodes.Inclustersconsistingoftwonodes,bothnodesmustbecoldstartnodes.Atleasttwofault-free

coldstartnodesarenecessaryfortheclustertostartup.

Eachstartupframemustalsobeasyncframe;thereforeeachcoldstartnodewillalsobeasyncnode.

ThenumberofcoldstartattemptsisconfiguredbySUCC1.CSA(4-0)intheSUCconfigurationregister1.

Anon-coldstartnoderequiresatleasttwostartupframesfromdistinctnodesforintegration.Itmaystart

integrationbeforethecoldstartnodeshavefinishedtheirstartup.Itwillnotfinishitsstartupuntilatleast

twocoldstartnodeshavefinishedtheirstartup.

Bothnon-coldstartnodesandcoldstartnodesstartpassiveintegrationthroughtheintegrationpathas

soonastheyreceivesyncframesfromwhichtoderivetheTDMAscheduleinformation.Duringintegration

thenodehastoadaptitsownclocktotheglobalclock(rateandoffset)andhastomakeitscycletime

consistentwiththeglobalscheduleobservableatthenetwork.Afterwards,thesesettingsarecheckedfor

consistencywithallavailablenetworknodes.Thenodecanonlyleavetheintegrationphaseandactively

participateincommunicationwhenthesechecksarepassed.

1001

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




STARTUP

LeadingcoldstartnodeFollowingcoldstartnodeNon-coldstartnodeintegrating

COLDSTARTCOLLISION

COLDSTARTLISTEN

INTEGRATIONLISTENRESOLUTION

INTEGRATIONCOLDSTARTCHECK

ABORTSTARTUPABORTSTARTUPABORTSTARTUPABORTSTARTUP

COLDSTARTGAP

STARTUPPREPARE

INTEGRATIONCONSISTENCYCHECK

INITIALIZESCHEDULE

NORMALACTIVE

COLDSTARTCONSISTENCYCHECK

COLDSTARTJOIN

ABORTSTARTUP

ABORTSTARTUPABORTSTARTUP

READY



CommunicationControllerStateswww.ti.com

Figure23-15.StateDiagramTime-TriggeredStartup

23.10.7.1ColdstartInhibitMode

IncoldstartinhibitmodethenodeispreventedfrominitializingtheTDMAcommunicationschedule.Ifbit

CCSV.CSIinthecommunicationcontrollerstatusvectorregisterisset,thenodeisnotallowedtoinitialize

theclustercommunication,i.e.enteringthecoldstartpathisprohibited.Thenodeisallowedtointegrateto

arunningclusterortotransmitstartupframesafteranothercoldstartnodestartstheinitializationofthe

clustercommunication.

ThecoldstartinhibitbitCCSV.CSIissetwheneverthePOCentersREADYstate.Thebithastobe

clearedundercontrolofthehostbyCHIcommandALLOW_COLDSTART(SUCC1.CMD(3-0)=1001).

1002

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCommunicationControllerStates

23.10.7.2StartupTimeouts

ThecommunicationcontrollersuppliestwodifferentμTtimerssupportingtwotimeoutvalues,startup

timeoutandstartupnoisetimeout.Thetwotimersarestartedwhenthecommunicationcontrollerenters

theCOLDSTART_LISTENstate.Theexpirationofeitherofthesetimerscausesthenodetoleavethe

initialsensingphase(COLDSTART_LISTENstate)withtheintentionofstartingupcommunication.

NOTE:Thestartupandstartupnoisetimersareidenticalwiththewakeupandwakeupnoisetimers

andusethesameconfigurationvaluesSUCC2.LT(20-0)andSUCC2.LTN(3-0)fromtheSUC

configurationregister2.

StartupTimeout

Thestartuptimeoutlimitsthelistentimeusedbyanodetodetermineifthereisalreadycommunication

betweenothernodesoratleastonecoldstartnodeactivelyrequestingtheintegrationofothers.The

startuptimerisconfiguredbyprogrammingSUCC2.LT(20-0)intheSUCconfigurationregister2.

ThestartuptimeouttimecanbecalculatedfromthecontentsofSUCC2.LT(20-0)(RefertotheFlexRay

ProtocolSpecification:pdListenTimeout)

Thestartuptimerisrestartedupon:

•EnteringtheCOLDSTART_LISTENstate

•BothchannelsreachingidlestatewhileinCOLDSTART_LISTENstate

Thestartuptimerisstopped:

•Ifcommunicationchannelactivityisdetectedononeoftheconfiguredchannelswhilethenodeisin

theCOLDSTART_LISTENstate

•WhentheCOLDSTART_LISTENstateisleft

Oncethestartuptimeoutexpires,neitheranoverflownoracyclicrestartofthetimerisperformed.The

timerstatusiskeptforfurtherprocessingbythestartupstatemachine.

StartupNoiseTimeout

Atthesametimethestartuptimerisstartedforthefirsttime(transitionfromSTARTUP_PREPAREstate

toCOLDSTART_LISTENstate),thestartupnoisetimerisstarted.Thisadditionaltimeoutisusedto

improvereliabilityofthestartupprocedureinthepresenceofnoise.Thestartupnoisetimerisconfigured

byprogrammingSUCC2.LTN(3-0)intheSUCconfigurationregister2.

ThestartupnoisetimeouttimecanbecalculatedastheproductofSUCC2.LT(20-0)*SUCC2.LTN(3-0)

(RefertotheFlexRayProtocolSpecification:pdListenTimeout•gListenNoise)

Thestartupnoisetimerisrestartedupon:

•EnteringtheCOLDSTART_LISTENstate

•ReceptionofcorrectlydecodedheadersorCASsymbolswhilethenodeisinCOLDSTART_LISTEN

state

ThestartupnoisetimerisstoppedwhentheCOLDSTART_LISTENstateisleft.

Oncethestartupnoisetimeoutexpires,neitheranoverflownoracyclicrestartofthetimerisperformed.

Thestatusiskeptforfurtherprocessingbythestartupstatemachine.Sincethestartupnoisetimerwon’t

berestartedwhenrandomchannelactivityissensed,thistimeoutdefinesthefall-backsolutionthat

guaranteesthatanodewilltrytostartupthecommunicationclustereveninthepresenceofnoise.

23.10.7.3PathofLeadingColdstartNode(InitiatingColdstart)

WhenacoldstartnodeentersCOLDSTART_LISTEN,itlistenstoitsattachedchannels.

Ifnocommunicationisdetected,thenodeenterstheCOLDSTART_COLLISION_RESOLUTIONstateand

commencesacoldstartattempt.TheinitialtransmissionofaCASsymbolissucceededbythefirstregular

cycle.Thiscyclehasthenumberzero.

1003

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CommunicationControllerStateswww.ti.com

Fromcyclezeroon,thenodetransmitsitsstartupframe.Sinceeachcoldstartnodeisallowedtoperform

acoldstartattempt,itmayoccurthatseveralnodessimultaneouslytransmittheCASsymbolandenterthe

coldstartpath.ThissituationisresolvedduringthefirstfourcyclesafterCAStransmission.

AssoonasanodethatinitiatesacoldstartattemptreceivesaCASsymboloraframeheaderduring

thesefourcycles,itre-enterstheCOLDSTART_LISTENstate.Thereby,onlyonenoderemainsinthis

path.Incyclefour,othercoldstartnodesbegintotransmittheirstartupframes.

AfterfourcyclesinCOLDSTART_COLLISION_RESOLUTIONstate,thenodethatinitiatedthecoldstart

enterstheCOLDSTART_CONSISTENCY_CHECKstate.Itcollectsallstartupframesfromcyclefourand

fiveandperformsclockcorrection.Iftheclockcorrectiondoesnotdeliveranyerrorsandithasreceivedat

leastonevalidstartupframepair,thenodeleavesCOLDSTART_CONSISTENCY_CHECKandenters

NORMAL_ACTIVEstate.

ThenumberofcoldstartattemptsthatanodeisallowedtoperformisconfiguredbySUCC1.CSA(4-0)in

theSUCconfigurationregister1.Thenumberofremainingcoldstartsattemptscanbereadfrom

CCSV.RCA(4-0)ofcommunicationcontrollerstatusvectorregister.Thenumberofremainingattemptsis

reducedbyoneforeachattemptedcoldstart.AnodemayentertheCOLDSTART_LISTENstateonlyif

thisvalueislargerthanoneanditmayentertheCOLDSTART_COLLISION_RESOLUTIONstateonlyif

thisvalueislargerthanzero.Ifthenumberofcoldstartattemptsisone,coldstartisinhibitedbut

integrationisstillpossible.

23.10.7.4PathofFollowingColdstartNode(RespondingtoLeadingColdstartNode)

WhenacoldstartnodeenterstheCOLDSTART_LISTENstate,ittriestoreceiveavalidpairofstartup

framestoderiveitsscheduleandclockcorrectionfromtheleadingcoldstartnode.

Assoonasavalidstartupframehasbeenreceived,theINITIALIZE_SCHEDULEstateisentered.Ifthe

clocksynchronizationcansuccessfullyreceiveamatchingsecondvalidstartupframeandderivea

schedulefromthis,theINTEGRATION_COLDSTART_CHECKstateisentered.

InINTEGRATION_COLDSTART_CHECKstate,itisassuredthattheclockcorrectioncanbeperformed

correctlyandthatthecoldstartnodefromwhichthisnodehasinitializeditsscheduleisstillavailable.The

nodecollectsallsyncframesandperformsclockcorrectioninthefollowingdouble-cycle.Ifclock

correctiondoesnotsignalanyerrorsandifthenodecontinuestoreceivesufficientframesfromthesame

nodeithasintegratedon,theCOLDSTART_JOINstateisentered.

InCOLDSTART_JOINstate,followingcoldstartnodesbegintotransmittheirownstartupframesand

continuetodosoinsubsequentcycles.Thereby,theleadingcoldstartnodeandthenodesjoiningitcan

checkiftheirschedulesagreewitheachother.Iftheclockcorrectionsignalsanyerror,thenodeaborts

theintegrationattempt.Ifanodeinthisstateseesatleastonevalidstartupframeduringallevencycles

inthisstateandatleastonevalidstartupframepairduringalldoublecyclesinthisstate,thenodeleaves

COLDSTART_JOINstateandentersNORMAL_ACTIVEstate.TherebyitleavesSTARTUPatleastone

cycleafterthenodethatinitiatedthecoldstart.

23.10.7.5PathofNon-ColdstartNode

Whenanon-coldstartnodeenterstheINTEGRATION_LISTENstate,itlistenstoitsattachedchannels.

AssoonasavalidstartupframehasbeenreceivedtheINITIALIZE_SCHEDULEstateisentered.Ifthe

clocksynchronizationcansuccessfullyreceiveamatchingsecondvalidstartupframeandderivea

schedulefromthis,theINTEGRATION_CONSISTENCY_CHECKstateisentered.

InINTEGRATION_CONSISTENCY_CHECKstateitisverifiedthattheclockcorrectioncanbeperformed

correctlyandthatenoughcoldstartnodes(atleast2)sendstartupframesthatagreewiththenodesown

schedule.Clockcorrectionisactivated,andifanyerrorsaresignaled,theintegrationattemptisaborted.

Duringthefirstevencycleinthisstate,eithertwovalidstartupframesorthestartupframeofthenode

thatthisnodehasintegratedonmustbereceived;otherwisethenodeabortstheintegrationattempt.

Duringthefirstdouble-cycleinthisstate,eithertwovalidstartupframepairsorthestartupframepairof

thenodethatthisnodehasintegratedonmustbereceived;otherwisethenodeabortstheintegration

attempt.

1004

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCommunicationControllerStates

Ifafterthefirstdouble-cyclelessthantwovalidstartupframesarereceivedwithinanevencycle,orless

thantwovalidstartupframepairsarereceivedwithinadouble-cycle,thestartupattemptisaborted.

Nodesinthisstateneedtoseetwovalidstartupframepairsfortwoconsecutivedouble-cycleseachtobe

allowedtoleaveSTARTUPandenterNORMAL_OPERATION.Consequently,theyleavestartupatleast

onedouble-cycleafterthenodethatinitiatedthecoldstartandonlyattheendofacyclewithanoddcycle

number.

23.10.8NORMAL_ACTIVEState

AssoonasthenodethattransmittedthefirstCASsymbol(resolvingthepotentialaccessconflictand

enteringSTARTUPthroughthecoldstartpath)andoneadditionalnodehaveenteredthe

NORMAL_ACTIVEstate,thestartupphasefortheclusterhasfinished.IntheNORMAL_ACTIVEstate,all

configuredmessagesarescheduledfortransmission.Thisincludesalldataframesaswellasthesync

frames.Rateandoffsetmeasurementisstartedinallevencycles(even/oddcyclepairsrequired).

InNORMAL_ACTIVEstatethecommunicationcontrollersupportsregularcommunicationfunctions:

•ThecommunicationcontrollerperformstransmissionsandreceptionontheFlexRaybusasconfigured

•Clocksynchronizationisrunning

•Thehostinterfaceisoperational

Thecommunicationcontrollerexitsfromthatstateto:

•HALTstatebywritingSUCC1.CMD(3-0)=0110(HALTcommand,attheendofthecurrentcycle)

•HALTstatebywritingSUCC1.CMD(3-0)=0111(FREEZEcommand,immediately)

•HALTstateduetochangeoftheerrorstatefromACTIVEtoCOMM_HALT

•NORMAL_PASSIVEstateduetochangeoftheerrorstatefromACTIVEtoPASSIVE

•READYstatebywritingSUCC1.CMD(3-0)=0010(READYcommand)

23.10.9NORMAL_PASSIVEState

NORMAL_PASSIVEstateisenteredfromNORMAL_ACTIVEstatewhentheerrorstatechangesfrom

ACTIVEtoPASSIVE.

InNORMAL_PASSIVEstate,thenodeisabletoreceiveallframes(nodeisfullysynchronizedand

performsclocksynchronization).ContrarytotheNORMAL_ACTIVEstate,thenodedoesnotactively

participateincommunication,i.e.neithersymbolsnorframesaretransmitted.

InNORMAL_PASSIVEstate:

•ThecommunicationcontrollerperformsreceptionontheFlexRaybus

•ThecommunicationcontrollerdoesnottransmitanyframesorsymbolsontheFlexRaybus

•Clocksynchronizationisrunning

•Thehostinterfaceisoperational

Thecommunicationcontrollerexitsfromthisstateto

•HALTstatebywritingSUCC1.CMD(3-0)=0110(HALTcommand,attheendofthecurrentcycle)

•HALTstatebywritingSUCC1.CMD(3-0)=0111(FREEZEcommand,immediately)

•HALTstateduetochangeoftheerrorstatefromPASSIVEtoCOMM_HALT

•NORMAL_ACTIVEstateduetochangeoftheerrorstatefromPASSIVEtoACTIVE.Thetransition

takesplacewhenCCEV.PTAC(4-0)equalsSUCC1.PTA(4-0)-1.

•ToREADYstatebywritingSUCC1.CMD(3-0)=0010(READYcommand)

23.10.10HALTState

Inthisstateallcommunication(receptionandtransmission)isstopped.

Thecommunicationcontrollerentersthisstate:

•BywritingSUCC1.CMD(3-0)=0110(HALTcommand)whilethecommunicationcontrollerisin

NORMAL_ACTIVEorNORMAL_PASSIVEstate

1005

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






NetworkManagementwww.ti.com

•BywritingSUCC1.CMD(3-0)=0111(FREEZEcommand)fromallstates

•WhenexitingfromNORMAL_ACTIVEstatebecausetheclockcorrectionfailedcounterreachedthe

“maximumwithoutclockcorrectionfatal”limitandSUCC1.HCSEisset

•WhenexitingfromNORMAL_PASSIVEstatebecausetheclockcorrectionfailedcounterreachedthe

“maximumwithoutclockcorrectionfatal”limitandSUCC1.HCSEisset

ThecommunicationcontrollerexitsfromthisstatetoDEFAULT_CONFIGstate

•BywritingSUCC1.CMD(3-0)=0001(CONFIGcommand)

WhenthecommunicationcontrollertransitsfromHALTstatetoDEFAULT_CONFIGstateallconfiguration

andstatusdataismaintainedforanalyzingpurposes.

WhenthehostwritesSUCC1.CMD(3-0)=0110(HALTcommand),thecommunicationcontrollersetsbit

CCSV.HRQandentersHALTstateatnextendofcycle.

WhenthehostwritesSUCC1.CMD(3-0)=0111(FREEZEcommand),thecommunicationcontrollerenters

HALTstateimmediatelyandsetstheCCSV.FSIbitinthecommunicationcontrollerstatusvectorregister.

ThePOCstatefromwhichthetransitiontoHALTstatetookplacecanbereadfromCCSV.PSL(5-0).

23.11NetworkManagement

Theaccruednetworkmanagement(NM)vectorislocatedintheNetworkManagementRegisters

(NMV1/2/3).ThecommunicationcontrollerperformsalogicalORoperationoverallNMvectorsoutofall

receivedvalidNMframeswiththePayloadPreambleIndicator(PPI)bitset.Onlyastaticframemaybe

configuredtoholdNMinformation.ThecommunicationcontrollerupdatestheNMvectorattheendof

eachcycle.

ThelengthoftheNMvectorcanbeconfiguredfrom0to12bytesbyNEMC.NML(3-0).TheNMvector

lengthmustbeconfiguredidenticallyinallnodesofacluster.

ToconfigureatransmitbuffertosendFlexRayframeswiththePPIbitset,thePPITbitintheheader

sectionofthecorrespondingtransmitbufferhastobesetWRHS1.PPIT.Inadditionthehosthastowrite

theNMinformationtothedatasectionofthecorrespondingtransmitbuffer.

TheevaluationoftheNMvectorhastobedonebytheapplicationrunningonthehost.

NOTE:Incaseamessagebufferisconfiguredfortransmission/receptionofnetworkmanagement

frames,thepayloadlengthconfiguredinheader2ofthatmessagebuffershouldbeequalor

greaterthanthelengthoftheNMvectorconfiguredbyNEMC.NML(3-0).Whenthe

CommunicationControllertransitstoHALTstate,thecyclecountisnotincrementedand

thereforetheNMvectorisnotupdated.InthiscaseNMV1/2/3holdsthevaluefromthecycle

before.

23.12FilteringandMasking

Filteringisdonebycomparisonoftheconfigurationofassignedmessagebuffersagainstcurrentslotand

cyclecountervaluesandchannelID(channelA,B).Amessagebufferisonlyupdated/transmittedifthe

requiredmatchesoccur.

Filteringisdoneon:

•Slotcounter

•Cyclecounter

•ChannelID

Thefollowingfiltercombinationsforacceptance/transmitfilteringareallowed:

•Slotcounter+ChannelID

•Slotcounter+Cyclecounter+ChannelID

Allconfiguredfiltersmustmatchinordertostoreareceivedmessageinamessagebuffer.

1006

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFilteringandMasking

NOTE:FortheFIFOtheacceptancefilterisconfiguredbytheFIFORejectionFilterandtheFIFO

RejectionFiltermask.

AmessagewillbetransmittedinthetimeslotcorrespondingtotheconfiguredframeIDontheconfigured

channel(s).Ifcyclecounterfilteringisenabledtheconfiguredcyclefiltervaluemustalsomatch.

23.12.1SlotCounterFiltering

EverytransmitandreceivebuffercontainsaframeIDstoredintheheadersection.ThisframeIDis

comparedagainstthecurrentslotcountervalueinordertoassignreceiveandtransmitbufferstothe

correspondingslot.

IftwoormoremessagebuffersareconfiguredwiththesameframeIDandchannelID,andiftheyhavea

matchingcyclecounterfiltervalueforthesameslot,thenthemessagebufferwiththelowestmessage

buffernumberisused.

23.12.2CycleCounterFiltering

Cyclecounterfilteringisbasedonthenotionofacycleset.Forfilteringpurposes,amatchisdetectedif

anyoneoftheelementsofthecyclesetismatched.Thecyclesetisdefinedbythecyclecodefieldinthe

headersection1ofeachmessagebuffer.

Ifmessagebuffer0or1isconfiguredtoholdthestartup/syncframeorthesingleslotframebybits

TXST,TXSY,andTSMofSUCConfigurationRegister1,cyclecounterfilteringformessagebuffer0or1

respectivelyshallbedisabled.

NOTE:SharingofastatictimeslotbycyclecounterfilteringbetweendifferentnodesofaFlexRay

networkisnotallowed.

ThesetofcyclenumbersbelongingtoacyclesetisdeterminedasdescribedinTable23-8.

Table23-8.DefinitionofCycleSet

CycleCode

MatchingCycleCounterValues

0b000000x

Allcycles

0b000001c

Everysecondcycle

at(cyclecount)mod2

=c

0b00001cc

Everyfourthcycle

at(cyclecount)mod4

=cc

0b0001ccc

Everyeighthcycle

at(cyclecount)mod8

=ccc

0b001cccc

Everysixteenthcycle

at(cyclecount)mod16

=cccc

0b01ccccc

Everythirty-secondcycle

at(cyclecount)mod32

=ccccc

0b1cccccc

Everysixty-fourthcycle

at(cyclecount)mod64

=cccccc

Table23-9givessomeexamplesforvalidcyclesetstobeusedforcyclecounterfiltering.

Table23-9.ExamplesforValidCycleSets

CycleCode

MatchingCycleCounterValues

0b0000011

1-3-5-7-….-63↵

0b0000100

0-4-8-12-….-60↵

0b0001110

6-14-22-30-….-62↵

0b0011000

8-24-40-56↵

0b0100011

3-35↵

0b1001001

9↵

1007

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






TransmitProcesswww.ti.com

Thereceivedmessageisstoredonlyifthecyclecountervalueofthecycleduringwhichthemessageis

receivedmatchesanelementofthereceivebuffer’scycleset.Otherfiltercriteriamustalsobemet.

Thecontentofatransmitbufferistransmittedontheconfiguredchannel(s)whenanelementofthecycle

setmatchesthecurrentcyclecountervalue.Otherfiltercriteriamustalsobemet.

23.12.3ChannelIDFiltering

Thereisa2-bitchannelfilteringfield(CHA,CHB)locatedintheheadersectionofeachmessagebufferin

themessageRAM.Itservesasafilterforreceivebuffers,andasacontrolfieldfortransmitbuffers(see

Table23-10).

Table23-10.ChannelFilteringConfiguration

TransmitBuffer

ReceiveBuffer

CHA

CHB

Transmitframe

Storevalidreceiveframe

1

1

Onbothchannels(staticsegmentonly)

ReceivedonchannelAorB(storefirstsemantically

validframe,staticsegmentonly)

1

0

OnchannelA

ReceivedonchannelA

0

1

OnchannelB

ReceivedonchannelB

0

0

Notransmission

Ignoreframe

Thecontentsofatransmitbufferistransmittedonthechannelsspecifiedinthechannelfilteringfieldwhen

theslotcounterfilteringandcyclecounterfilteringcriteriaarealsomet.Onlyinstaticsegmentatransmit

buffermaybesetupfortransmissiononbothchannels(CHAandCHBset).

Validreceivedframesarestorediftheyarereceivedonthechannelsspecifiedinthechannelfilteringfield

whentheslotcounterfilteringandcyclecounterfilteringcriteriaarealsomet.Onlyinstaticsegmenta

receivebuffermaybesetupforreceptiononbothchannels(CHAandCHBset).

NOTE:Ifamessagebufferisconfiguredforthedynamicsegmentandbothbitsofthechannel

filteringfieldaresetto1,noframesaretransmittedandreceivedframesareignored(same

functionasCHA=CHB=0)

23.12.4FIFOFiltering

ForFIFOfilteringthereisonerejectionfilterandonerejectionfiltermaskavailable.TheFIFOfilter

consistsofchannelfilterFRF.CH(1-0),frameIDfilterFRF.FID(10-0),andcyclecounterfilterFRF.CYF(6-

0).RegistersFRFandFRFMcanbeconfiguredinDEFAULT_CONFIGorCONFIGstateonly.Thefilter

configurationintheheadersectionofmessagebuffersbelongingtotheFIFOisignored.

The7-bitcyclecounterfilterdeterminesthecyclesettowhichframeIDandchannelrejectionfilterare

applied.IncyclesnotbelongingtothecyclesetspecifiedbyFRF.CYF(6-0),allframesarerejected.

AvalidreceivedframeisstoredintheFIFOifchannelID,frameID,andcyclecounterarenotrejectedby

theconfiguredrejectionfilterandrejectionfiltermask,andifthereisnomatchingdedicatedreceivebuffer.

23.13TransmitProcess

23.13.1StaticSegment

Forthestaticsegment,ifthereareseveralmessagespendingfortransmission,themessagewiththe

frameIDcorrespondingtothenextsendingslotisselectedfortransmission.

Thedatasectionoftransmitbuffersassignedtothestaticsegmentcanbeupdateduntiltheendofthe

precedingtimeslot.Thismeansthatatransferfromtheinputbufferhastobestartedbywritingtothe

InputBufferCommandRequestRegisterlatestatthistime.

1008

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comTransmitProcess

23.13.2DynamicSegment

Inthedynamicsegment,ifseveralmessagesarepending,themessagewiththehighestpriority(lowest

frameID)isselectednext.InthedynamicsegmentdifferentslotcountersequencesonchannelAand

channelBarepossible(concurrentsendingofdifferentframeIDsonbothchannels).

Thedatasectionoftransmitbuffersassignedtothedynamicsegmentcanbeupdateduntiltheendofthe

precedingslot.ThismeansthatatransferfromtheinputbufferhastobestartedbywritingtotheInput

BufferCommandRequestRegisterlatestatthistime.

ThestartoflatesttransmitconfiguredbyMHDC.SLT(12-0)intheMHDconfigurationregister1definesthe

maximumminislotvalueallowedbeforeinhibitingnewframetransmissioninthedynamicsegmentofthe

currentcycle.

23.13.3TransmitBuffers

CommunicationControllermessagebufferscanbeconfiguredastransmitbuffersbyprogrammingbit

CFGintheheadersectionofthecorrespondingmessagebufferto1inWRHS1.

Thereexistthefollowingpossibilitiestoassignatransmitbuffertothecommunicationcontrollerchannels:

•Staticsegment:

–channelAorchannelB

–channelAandchannelB

•Dynamicsegment:

–channelAorchannelB

Messagebuffer0or1isdedicatedtoholdthestartupframe,thesyncframe,orthedesignatedsingleslot

frameasconfiguredbySUCC1.TXST,SUCC1.TXSY,andSUCC1.TSMintheSUCConfigurationregister

1.InthiscaseitcanbereconfiguredinDEFAULT_CONFIGorCONFIGstateonly.Thisensuresthatany

nodetransmitsatmostonestartup/syncframepercommunicationcycle.Transmissionofstartup/sync

framesfromothermessagebuffersisnotpossible.

Allothermessagebuffersconfiguredfortransmissioninstaticordynamicsegmentarereconfigurable

duringruntimedependingontheconfigurationofMRC.SEC(1-0).Duetotheorganizationofthedata

partitioninthemessageRAM(referencebydatapointer),reconfigurationoftheconfiguredpayloadlength

andthedatapointerintheheadersectionofamessagebuffermayleadtoerroneousconfigurations.

Ifamessagebufferisreconfigured(headersectionupdated)duringruntime,itmayhappenthatthis

messagebufferisnotsentoutinthecurrentlyactivecommunicationcycle.

ThecommunicationcontrollerdoesnothavethecapabilitytocalculatetheheaderCRC.Thehostis

supposedtoprovidetheheaderCRCsforalltransmitbuffers.Ifnetworkmanagementisrequiredthehost

hastosetthePPITbitintheheadersectionofthecorrespondingmessagebufferto1andwritethe

networkmanagementinformationtothedatasectionofthemessagebuffer.

Thepayloadlengthfieldconfiguresthedatapayloadlengthin2-bytewords.Iftheconfiguredpayload

lengthofastatictransmitbufferisshorterthanthepayloadlengthconfiguredforthestaticsegmentby

MHDC.SFDL(6-0)inthemessagehandlerconfigurationregister1,thecommunicationcontrollergenerates

paddingbytestoensurethatframeshaveproperphysicallength.Thepaddingpatternislogicalzero.

NOTE:Incaseofanoddpayloadlength(PLC=1,3,5,...)theapplicationneedstowritezerostothe

last16bitofthemessagebuffersdatasectiontoensurethatthepaddingpatternisallzero.

EachtransmitbufferprovidesatransmissionmodeflagTXMthatallowsthehosttoconfigurethe

transmissionmodeforthetransmitbuffer.Ifthisbitisset,thetransmitteroperatesinthesingle-shot

mode.Ifthisbitiscleared,thetransmitteroperatesinthecontinuousmode.

Insingle-shotmodetheCommunicationControllerresetsthecorrespondingTXRflagaftertransmission

hascompletedafterwhichthehostmayupdatethetransmitbuffer.

1009

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ReceiveProcesswww.ti.com

Incontinuousmode,theCommunicationControllerdoesnotresetthecorrespondingtransmissionrequest

flagTXRaftersuccessfultransmission.Inthiscaseaframeissentouteachtimethefiltercriteriamatch.

TheTXRflagcanberesetbytheHostbywritingthecorrespondingmessagebuffernumbertotheIBCR

registerwhilebitIBCM.STXRHissetto0.

Iftwoormoretransmitbuffersmeetthefiltercriteriasimultaneously,thetransmitbufferwiththelowest

messagebuffernumberwillbetransmittedinthecorrespondingslot.

23.13.4FrameTransmission

Thefollowingstepsarerequiredtoprepareamessagebufferfortransmission:

•ConfigurethetransmitbufferintheMessageRAMthroughWRHS1,WRHS2,andWRHS3

•WritethedatasectionofthetransmitbufferthroughWRDSn

•TransfertheconfigurationandmessagedatafromInputBuffertotheMessageRAMbywritingthe

numberofthetargetmessagebuffertoregisterIBCR

•IfconfiguredintheInputBufferCommandMask(IBCM)registertheTransmissionrequestflag(TXR)

forthecorrespondingmessagebufferwillbesetassoonasthetransferhascompleted,andthe

messagebufferisreadyfortransmission.

•CheckwhetherthemessagebufferhasbeentransmittedbycheckingtheTXRbits(TXR=0)inthe

Transmissionrequest1,2,3,4registers(single-shotmodeonly).

Aftertransmissionhascompleted,thecorrespondingTXRflagintheTransmissionrequest1,2,3,4register

isreset(single-shotmode),and,ifbitMBIintheheadersectionofthemessagebufferisset,flagSIR.TXI

intheStatusInterruptregisterissetto1.Ifenabled,aninterruptisgenerated.

23.13.5NullFrameTransmission

Ifinstaticsegmentthehostdoesnotsetthetransmissionrequestflagbeforetransmittime,andifthereis

noothertransmitbufferwithmatchingfiltercriteria,thecommunicationcontrollertransmitsanullframe

withthenullframeindicationbitsetandthepayloaddatasettozero.

Inthefollowingcasesthecommunicationcontrollertransmitsanullframe:

•Ifthemessagebufferwiththelowestmessagebuffernumbermatchingthefiltercriteriadoesnothave

itstransmissionrequestflagset(TXR=0).

•Notransmitbufferconfiguredfortheslothasacyclecounterfilterthatmatchesthecurrentcycle.In

thiscase,nomessagebufferstatusMBSisupdated.

Nullframesarenottransmittedinthedynamicsegment.

23.14ReceiveProcess

23.14.1DedicatedReceiveBuffers

AportionoftheCommunicationControllermessagebufferscanbeconfiguredasdedicatedreceive

buffersbyprogrammingbitCFGintheheadersectionofthecorrespondingmessagebufferto0.Thiscan

bedonethroughtheWriteHeaderSection1register.

ThefollowingpossibilitiesexisttoassignareceivebuffertotheCommunicationControllerchannels:

•Staticsegment:

–channelAorchannelB

–channelAandchannelB(thecommunicationcontrollerstoresthefirstsemanticallyvalidframe)

•Dynamicsegment:

–channelAorchannelB

Thecommunicationcontrollertransferspayloaddataofvalidreceivedmessagesfromtheshiftregistersof

theFlexRayprotocolcontroller(channelAorB)tothereceivebufferwiththematchingfilterconfiguration.

AreceivebufferstoresallframeelementsexcepttheframeCRC.

1010

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFIFOFunction

Allmessagebuffersconfiguredforreceptioninstaticordynamicsegmentarereconfigurableduring

runtimedependingontheconfigurationofMRC.SEC(1-0)oftheMessageRAMConfigurationregister.Ifa

messagebufferisreconfigured(headersectionupdated)duringruntimeitmayhappenthatinthe

currentlyactivecommunicationcycleareceivedmessageislost.

Iftwoormorereceivebuffersmeetthefiltercriteriasimultaneously,thereceivebufferwiththelowest

messagebuffernumberisupdatedwiththereceivedmessage.

23.14.2FrameReception

Thefollowingstepsarerequiredtoprepareadedicatedmessagebufferforreception:

•ConfigurethereceivebufferintheMessageRAMthroughWRHS1,WRHS2,andWRHS3

•TransfertheconfigurationfrominputbuffertothemessageRAMbywritingthenumberofthetarget

messagebuffertotheInputBufferCommandRequest(IBCR)register.

Oncethesestepsareperformed,themessagebufferfunctionsasanactivereceivebufferandparticipates

intheinternalacceptancefilteringprocess,whichtakesplaceeverytimethecommunicationcontroller

receivesamessage.Thefirstmatchingreceivebufferisupdatedfromthereceivedmessage.

Ifavalidpayloadsegmentwasstoredinthedatasectionofamessagebuffer,thecorrespondingNDflag

intheNDAT1,2,3,4registersisset,and,ifbitMBIintheheadersectionofthatmessagebufferisset,flag

SIR.RXIintheStatusInterruptRegisterissetto1.Ifenabled,aninterruptisgenerated.

IncasethatbitNDwasalreadysetwhentheMessageHandlerupdatesthemessagebuffer,bit

MBS.MLSTofthecorrespondingmessagebufferissetandtheunprocessedmessagedataislost.

Ifnoframe,anullframe,oracorruptedframeisreceivedinaslot,thedatasectionofthemessagebuffer

configuredforthisslotisnotupdated.Inthiscaseonlytheflagsinthecorrespondingmessagebuffer

status(MBS)isupdated.

WhentheMessageHandlerchangesthemessagebufferstatusMBSintheheadersectionofamessage

buffer,thecorrespondingMBCflagintheMessageBufferStatusChanged1,2,3or4registerisset,andif

bitMBIintheheadersectionofthatmessagebufferisset,flagSIR.MBSIintheStatusInterruptRegister

issetto1.Ifenabledaninterruptisgenerated.

IfthepayloadlengthofareceivedframePLR(6-0)islongerthanthevalueprogrammedbyPLC(6-0)in

theheadersectionofthecorrespondingmessagebuffer,thedatafieldstoredinthemessagebufferis

truncatedtothatlength.

NOTE:TheNDandMBSflagsareautomaticallyclearedbythemessagehandlerwhenthepayload

dataandtheheaderofareceivedmessagehavebeentransferredtotheoutputbuffer,

respectively.

23.14.3NullFrameReception

Thepayloadsegmentofareceivednullframeisnotcopiedintothematchingdedicatedreceivebuffer.Ifa

nullframehasbeenreceived,onlythemessagebufferstatusMBSofthematchingmessagebufferis

updatedfromthereceivednullframe.Allbitsinheader2and3ofthematchingmessagebufferremain

unchanged.Theyareupdatedfromreceiveddataframesonly.

23.15FIFOFunction

23.15.1Description

AgroupofthemessagebufferscanbeconfiguredasacyclicFirst-In-First-Out(FIFO)buffer.Thegroupof

messagebuffersbelongingtotheFIFOiscontiguousintheregistermapstartingwiththemessagebuffer

referencedbyMRC.FFB(7-0)andendingwiththemessagebufferreferencedbyMRC.LCB(7-0)inthe

messageRAMconfigurationregister.Upto128messagebufferscanbeassignedtotheFIFO.

1011

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




123A--BuffersMessages

123ABCBuffersMessages

132---BuffersMessagesPIDX(storenext)GIDX(readoldest)

GIDX(readoldest)GIDX(readoldest)PIDX(storenext)PIDX(storenext)-PIDXincrementedlast-Nextreceivedmessagewillbestoredintobuffer1-Ifbuffer1hasnotbeenreadbeforemessageAislost

D

FIFO emptyFIFO not empty

FIFO overrun



FIFOFunctionwww.ti.com

Everyvalidincomingmessagenotmatchingwithanydedicatedreceivebufferbutpassingthe

programmableFIFOfilterisstoredintotheFIFO.InthiscaseframeID,payloadlength,receivecycle

count,andthemessagebufferstatusMBSoftheaddressedFIFOmessagebufferareoverwrittenwith

frameID,payloadlength,receivecyclecount,andthestatusfromthereceivedframe.BitSIR.RFNEinthe

statusinterruptregistershowsthattheFIFOisnotempty,bitSIR.RFCLissetwhenthereceiveFIFOfill

levelFSR.RFFL(7-0)isequalorgreaterthanthecriticallevelasconfiguredbyFCL.CL(7-0),bitEIR.RFO

showsthataFIFOoverrunhasbeendetected.Ifenabled,interruptsaregenerated.

IfnullframesarenotrejectedbytheFIFOrejectionfilter,thenullframeswillbetreatedlikedataframes

whentheyarestoredintotheFIFO.

TherearetwoindexregistersassociatedwiththeFIFO.ThePUTIndexregister(PIDX)isanindextothe

nextavailablelocationintheFIFO.Whenanewmessagehasbeenreceiveditiswrittenintothemessage

bufferaddressedbythePIDXregister.ThePIDXregisteristhenincrementedandaddressesthenext

availablemessagebuffer.IfthePIDXregisterisincrementedpastthehighestnumberedmessagebuffer

oftheFIFO,thePIDXregisterisloadedwiththenumberofthefirst(lowestnumbered)messagebufferin

theFIFOchain.TheGETIndexregister(GIDX)isusedtoaddressthenextmessagebufferoftheFIFOto

beread.TheGIDXregisterisincrementedaftertransferofthecontentsofamessagebufferbelongingto

theFIFOtotheoutputbuffer.ThePUTIndexregisterandtheGETIndexregisterarenotmemorymapped

andarenotaccessiblebythehostCPU.

TheFIFOiscompletelyfilledwhenthePUTindex(PIDX)reachesthevalueoftheGETindex(GIDX).

WhenthenextmessageiswrittentotheFIFObeforetheoldestmessagehasbeenread,bothPUTindex

andGETindexareincrementedandthenewmessageoverwritestheoldestmessageintheFIFO.This

willsetFIFOoverrunflagEIR.RFOintheerrorinterruptregister.

AFIFOnotemptystatusisdetectedwhenthePUTindex(PIDX)differsfromtheGETindex(GIDX).In

thiscaseflagSIR.RFNEisset.ThisindicatesthatthereisatleastonereceivedmessageintheFIFO.The

FIFOempty,FIFOnotempty,andtheFIFOoverrunstatesareexplainedinFigure23-16forathree

messagebufferFIFO.

TheprogrammableFIFORejectionFilterregister(FRF)definesafilterpatternformessagestobe

rejected.TheFIFOrejectionfilterconsistsofchannelfilter,frameIDfilter,andcyclecounterfilter.Ifbit

FRF.RSSissetto1(default),allmessagesreceivedinthestaticsegmentarerejectedbytheFIFO.Ifbit

FRF.RNFissetto1(default),receivednullframesarenotstoredintheFIFO.

TheFIFORejectionFiltermaskregister(FRFM)specifieswhichbitsoftheframeIDfilterintheFIFO

RejectionFilterregisteraremarkeddon’tcareforrejectionfiltering.

Figure23-16.FIFOStatus:Empty,NotEmpty,andOverrun

1012

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageHandling

23.15.2ConfigurationoftheFIFO

(Re)configurationofmessagebuffersbelongingtotheFIFOisonlypossiblewhentheCommunication

ControllerisinDEFAULT_CONFIGorCONFIGstate.WhiletheCommunicationControllerisin

DEFAULT_CONFIGorCONFIGstate,theFIFOfunctionisnotavailable.

ForallmessagebuffersbelongingtotheFIFOshouldhavethesamepayloadlengthconfiguredin

WRHS2.PLC(6-0)oftheWriteHeaderSection2register.Thedatapointertothefirst32-bitwordinthe

datasectionofthecorrespondingmessagebufferhastobeconfiguredbyWRHS3.DP(10-0).

AllinformationrequiredforacceptancefilteringistakenfromtheFIFOrejectionfilterandtheFIFO

rejectionfiltermask.WiththeexceptionofDPandPLC,thevaluesconfiguredintheheadersectionsof

themessagebuffersbelongingtotheFIFOareirrelevant.

NOTE:ItisrecommendedtoprogramtheMBIbitsofthemessagebuffersbelongingtotheFIFOto

0byWRHS1.MBItoavoidRXinterruptstobegenerated.

Ifthepayloadlengthofareceivedframeislongerthanthevalueprogrammedby

WRHS2.PLC(6-0)intheheadersectionofthecorrespondingmessagebuffer,thedatafield

storedinamessagebufferoftheFIFOistruncatedtothatlength.

23.15.3AccesstotheFIFO

ForFIFOaccessoutsideDEFAULT_CONFIGandCONFIGstate,theHosthastotriggeratransferfrom

theMessageRAMtotheOutputBufferbywritingthenumberofthefirstmessagebufferoftheFIFO

(referencedbyMRC.FFB(7-0))totheOutputBufferCommandRequest(OBCR)register.Themessage

handlerthentransfersthemessagebufferaddressedbytheGETIndexregister(GIDX)totheoutput

buffer.AfterthistransfertheGETIndexregister(GIDX)isincremented.

23.16MessageHandling

Themessagehandlercontrolsdatatransfersbetweentheinput/outputbufferandthemessageRAMand

betweenthemessageRAMandthetwotransientbufferRAMs.AllaccessestotheinternalRAMsare32

bitaccesses.

AccesstothemessagebuffersstoredinthemessageRAMisdoneundercontrolofthemessagehandler

statemachine.ThisavoidsconflictsbetweenaccessesofthetwoprotocolcontrollersandthehostCPUto

themessageRAM.

FrameIDsofmessagebuffersassignedtothestaticsegmenthavetobeintherangefrom1to

GTU7.NSS(9-0)asconfiguredintheGTUconfigurationregister7.FrameIDsofmessagebuffers

assignedtothedynamicsegmenthavetobeintherangefromGTU7.NSS(9-0)+1to2047.

Receivedmessageswithnomatchingdedicatedreceivebuffer(staticordynamicsegment)arestoredin

thereceiveFIFO(ifconfigured)iftheypasstheFIFOrejectionfilter.

23.16.1ReconfigurationofMessageBuffers

Incasethatanapplicationneedstooperatewithmorethan128differentmessages,staticanddynamic

messagebuffersmaybereconfiguredduringFlexRayoperation.Thisisdonebyupdatingtheheader

sectionofthecorrespondingmessagebufferthroughInputBufferregistersWRHS1,2,3.

ReconfigurationhastobeenabledthroughcontrolbitsMRC.SEC(1-0)intheMessageRAMConfiguration

register.

Ifamessagebufferhasnotbeentransmitted/updatedfromareceivedframebeforereconfiguration

starts,thecorrespondingmessageislost.

Thepointintimewhenareconfiguredmessagebufferisreadyfortransmission/receptionaccordingto

thereconfiguredframeIDdependsonthecurrentstateoftheslotcounterwhentheupdateoftheheader

sectionhascompleted.Thereforeitmayhappenthatareconfiguredmessagebufferisnottransmitted/

updatedfromareceivedframeinthecyclewhereitwasreconfigured.

TheMessageRAMisscannedaccordingtoTable23-11below:

1013

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageHandlingwww.ti.com

Table23-11.ScanofMessageRAM

StartofScaninSlot

ScanforSlots

1

2...15,1(nextcycle)

8

16...23,1(nextcycle)

16

24...31,1(nextcycle)

24

32...39,1(nextcycle)

....

...

AMessageRAMscanisterminatedwiththestartofNITirrespectiveofit’scompletion.Thescanofthe

MessageRAMforslots2to15startsatthebeginningofslot1ofthecurrentcycle.Thescanofthe

MessageRAMforslot1isdoneinthecyclebeforebycheckinginparalleltoeachscanoftheMessage

RAMwhetherthereisamessagebufferconfiguredforslot1ofthenextcycle.

ThenumberofthefirstdynamicmessagebufferisconfiguredbyMRC.FDB(7-0)intheMessageRAM

Configurationregister.IncaseaMessageRAMscanstartswhiletheCommunicationControllerisin

dynamicsegment,thescanstartswiththemessagebuffernumberconfiguredbyMRC.FDB(7-0).

Incaseamessagebufferneedstobereconfiguredtobeusedinslot1ofthenextcycle,thefollowinghas

tobeconsidered:

•Ifthemessagebuffertobereconfiguredforslot1ispartoftheStaticBuffers,itwillonlybefoundifit

isreconfiguredbeforethelastMessageRAMscaninthestaticsegmentofthecurrentcycleevaluates

thismessagebuffer.

•Ifthemessagebuffertobereconfiguredforslot1ispartoftheStatic+DynamicBuffers,itwillbe

foundifitisreconfiguredbeforethelastMessageRAMscaninthecurrentcycleevaluatesthis

messagebuffer.

•ThestartofNITterminatestheMessageRAMscan.IncasetheMessageRAMscanhasnot

evaluatedthereconfiguredmessagebufferuntilthispointintime,themessagebufferwillnotbe

consideredforthenextcycle.

NOTE:Reconfigurationofmessagebuffersmayleadtothelossofmessagesandthereforehasto

beusedverycarefully.Inworstcase(reconfigurationinconsecutivecycles)itmayhappen

thatamessagebufferisnevertransmitted/updatedfromareceivedframe.

23.16.2HostAccesstoMessageRAM

ThemessagetransferbetweeninputbufferandmessageRAMaswellasbetweenmessageRAMand

outputbufferistriggeredbythehostCPUbywritingthenumberofthetarget/sourcemessagebufferto

beaccessedtotheinputoroutputbuffercommandrequestregister(IBCR/OBCR).

Theinput/outputbuffercommandmaskregisterscanbeusedtowrite/readheaderanddatasectionof

theselectedmessagebufferseparately.

IfbitIBCM.STXRintheinputbuffercommandmaskregisterisset(STXR=1),thetransmissionrequest

flagTXRoftheselectedmessagebufferisautomaticallysetafterthemessagebufferhasbeenupdated.

IfbitIBCM.STXRintheinputbuffercommandmaskregisterisreset(STXR=0),thetransmissionrequest

flagTXRoftheselectedmessagebufferisreset.Thiscanbeusedtostoptransmissionfrommessage

buffersoperatedincontinuousmode.

Inputbuffer(IBF)andtheoutputbuffer(OBF)arebuiltupasadoublebufferstructure.Onehalfofthis

doublebufferstructureisaccessiblebythehostCPU(IBFhost/OBFhost),whiletheotherhalf(IBF

shadow/OBFshadow)isaccessedbythemessagehandlerfordatatransfersbetweenIBF/OBFand

messageRAM.

1014

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Data(31-0)Data(31-0)AddressData(31-0)Data(31-0)Address-InputBufferMessagehandlerAddressOutputBuffer

DecoderandControl

ControlHostCPU

HeaderPartitionDataPartitionMessageRAM

[Shadow][Shadow]Address



www.ti.comMessageHandling

Figure23-17.HostAccesstoMessageRAM

23.16.2.1DataTransferfromInputBuffertoMessageRAM

Toconfigure/updateamessagebufferinthemessageRAM,thehosthastowritethedatatoWRDSn

andtheheadertoWRHS1…3.Thespecificactionisselectedbyconfiguringtheinputbuffercommand

maskIBCM.

WhenthehostwritesthenumberofthetargetmessagebufferinthemessageRAMtoIBCR.IBRH(6-0)in

theinputbuffercommandrequestregisterIBCR,IBFhostandIBFshadowareswapped(seeFigure23-

18).

1015

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




IBCMIBCRswapswap

1

0

2

17

16

18

1

0

2

4

3

5

20

19

21

17

16

18

31

15

6

22

HostMessageRAMFlexRayIBFIBFSha-dow

IBF=InputBufferHost



MessageHandlingwww.ti.com

Figure23-18.DoubleBufferStructureInputBuffer

Figure23-19.SwappingofIBCMandIBCRBits

WiththiswriteoperationtheIBCR.IBSYSbitintheinputbuffercommandrequestregisterissetto1.The

messagehandlerthenstartstotransferthecontentsofIBFshadowtothemessagebufferinthemessage

RAMselectedbyIBCR.IBRS(6-0).

WhilethemessagehandlertransfersthedatafromIBFshadowtothetargetmessagebufferinthe

messageRAM,thehostmaywritethenextmessagetoIBFhost.AfterthetransferbetweenIBFshadow

andthemessageRAMhascompleted,theIBCR.IBSYSbitissetbackto0andthenexttransfertothe

messageRAMmaybestartedbythehostbywritingthecorrespondingtargetmessagebuffernumberto

IBCR.IBRH(6-0)intheinputbuffercommandrequestregister.

IfawriteaccesstoIBCR.IBRH(6-0)occurswhileIBCR.IBSYSis1,IBCR.IBSYHissetto1.After

completionoftheongoingdatatransferfromIBFshadowtothemessageRAM,IBFhostandIBFshadow

areswapped,IBCR.IBSYHisresetto0,IBCR.IBSYSremainssetto1,andthenexttransfertothe

messageRAMisstarted.InadditionthemessagebuffernumbersstoredunderIBCR.IBRH(6-0)and

IBCR.IBRS(6-0)andthecommandmaskflagsarealsoswapped.

Exampleofa8/16/32-bithostaccesssequence:

•Configure/updaten-thmessagebufferthroughIBF

•WaituntilIBCR.IBSYHisreset

•WritedatasectiontoWRDSn

•WriteheadersectiontoWRHS1,2,3

•Writecommandmask:writeIBCM.STXRH,IBCM.LHSH,IBCM.LDSH

•Demanddatatransfertotargetmessagebuffer:writeIBCR.IBRH(6-0)

Configure/updatefurthermessagebufferthroughIBFinthesameway.

1016

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




HostMessageRAMFlexRayOBFOBFSha-dow

OBF=OutputBufferHost



www.ti.comMessageHandling

NOTE:AnywriteaccesstoIBFwhileIBCR.IBSYHis1willseterrorflagEIR.IIBAintheError

InterruptRegisterto1.Inthiscasethewriteaccesshasnoeffect.

Table23-12.AssignmentofInputBufferCommandMaskBits

Position

Access

Bit

Function

18

r

STXRS

SetTransmissionRequestshadowongoingorfinished

17

r

LDSS

LoadDataSectionshadowongoingorfinished

16

r

LHSS

LoadHeaderSectionshadowongoingorfinished

2

r/w

STXRH

SetTransmissionRequestHost

1

r/w

LDSH

LoadDataSectionHost

0

r/w

LHSH

LoadHeaderSectionHost

Table23-13.AssignmentofInputBufferCommandRequestbits

Pos.

Access

Bit

Function

31

r

IBSYS

IBFBusyShadow,signalsongoingtransferfromIBFshadowtomessageRAM

22…16

r

IBRS(6-0)

IBFRequestShadow,numberofmessagebuffercurrently/lastupdated

15

r

IBSYH

IBFBusyHost,transferrequestpendingformessagebufferreferencedbyIBRH(6-0)

6…0

r/w

IBRH(6-0)

IBFRequestHost,numberofmessagebuffertobeupdatednext

23.16.2.2DataTransferfromMessageRAMtoOutputBuffer

ToreadoutamessagebufferfromthemessageRAM,thehosthastowritetotheoutputbuffercommand

maskandcommandrequestregistertotriggerthedatatransfer.Afteratransferhascompletedthehost

canreadthetransferreddatafromtheRDDSn,RDHS1,2,3,andMBS.

Figure23-20.DoubleBufferStructureOutputBuffer

OBFhostandOBFshadowaswellasbitsOBCM.RHSS,OBCM.RDSS,OBCM.RHSH,OBCM.RDSH

fromtheoutputbuffercommandmaskregisterandbitsOBCM.OBRS(6-0),OBCM.OBRH(6-0)fromthe

outputbuffercommandrequestregisterareswappedundercontrolofbitsOBCR.VIEWandOBCR.REQ

fromtheoutputbuffercommandrequestregister.

WritingbitOBCR.REQintheoutputbuffercommandrequestregisterto1copiesbitsOBCM.RHSS,

OBCM.RDSSfromtheoutputbuffercommandmaskregisterandbitsOBCR.OBRS(6-0)fromtheoutput

buffercommandrequestregistertoaninternalstorage(seeFigure23-21).

1017

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




OBCMOBCR

1

0

2

4

3

5

20

19

21

17

16

18

1

0

15

17

16

8

9

1

0

2

4

3

5

view

request

1

0

view

requestinternalstorageinternalstorage

6

22

6



MessageHandlingwww.ti.com

AftersettingOBCR.REQto1,OBCR.OBSYSissetto1,andthetransferofthemessagebufferselected

byOBCR.OBRS(6-0)fromthemessageRAMtoOBFshadowisstarted.Afterthetransferbetweenthe

messageRAMandOBFshadowhascompleted,theOBCR.OBSYSbitissetbackto0.BitsOBCR.REQ

andOBCR.VIEWcanonlybesetto1whileOBCR.OBSYSis0.

Figure23-21.SwappingofOBCMandOBCRBits

OBFhostandOBFshadowareswappedbysettingbitOBCR.VIEWintheoutputbuffercommandrequest

registerto1whilebitOBCR.OBSYSis0(seeFigure23-20).

InadditionbitsOBCR.OBRH(6-0)areswappedwiththeoutputbuffercommandrequestregistersinternal

storageandbitsOBCM.RHSH,OBCM.RDSHareswappedwiththeoutputbuffercommandmask

registersinternalstoragethusassuringthatthemessagebuffernumberstoredinOBCR.OBRH(6-0)and

themaskconfigurationstoredinOBCM.RHSH,OBCM.RDSHmatchesthetransferreddatastoredinOBF

host(seeFigure23-21).

NowthehostcanreadthetransferredmessagebufferfromOBFhostwhilethemessagehandlermay

transferthenextmessagefromthemessageRAMtoOBFshadow.

NOTE:IfbitsREQandVIEWaresetto1withthesamewriteaccesswhileOBSYSis0,OBSYSis

automaticallysetto1andOBFshadowandOBFhostareswapped.Additionallymaskbits

OBCM.RDSHandOBCM.RHSHareswappedwiththeregistersinternalstoragetokeep

themattachedtothecorrespondingOutputBuffertransfer.AfterwardsOBRS(6-0)iscopied

totheregisterinternalstorage,maskbitsOBCM.RDSSandOBCM.RHSSarecopiedto

registerOBCMinternalstorage,andthetransferoftheselectedmessagebufferfromthe

MessageRAMtoOBFshadowisstarted.WhilethetransferisongoingtheHostcanread

themessagebuffertransferredbytheprevioustransferfromOBFHost.Whenthecurrent

transferbetweenMessageRAMandOBFshadowhascompleted,thisissignaledbysetting

OBSYSbackto0.

Exampleofan8/16/32-bithostaccesstoasinglemessagebuffer:

Ifasinglemessagebufferhastobereadout,twoseparatewriteaccessestoOBCR.REQand

OBCR.VIEWarenecessary:

•WaituntilOBCR.OBSYSisreset

•WriteOutputBufferCommandMaskOBCM.RHSS,OBCM.RDSS

•RequesttransferofmessagebuffertoOBFShadowbywritingOBCR.OBRS(6-0)andOBCR.REQ(in

caseofand8-bitHostinterface,OBCR.OBRS(6-0)hastobewrittenbeforeOBCR.REQ).

•WaituntilOBCR.OBSYSisreset

•ToggleOBFShadowandOBFHostbywritingOBCR.VIEW=1

•ReadouttransferredmessagebufferbyreadingRDDSn,RDHS1,2,3,andMBS

1018

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageHandling

Exampleofan8/16/32-bithostaccesssequence:

Requesttransferof1stmessagebuffertoOBFshadow

•WaituntilOBCR.OBSYSisreset

•WriteOutputBufferCommandMaskOBCM.RHSS,OBCM.RDSSfor1stmessagebuffer

•Requesttransferof1stmessagebuffertoOBFShadowbywritingOBCR.OBRS(6-0)andOBCR.REQ

(incaseofan8-bitHostinterface,OBCR.OBRS(6-0)hastobewrittenbeforeOBCR.REQ).

ToggleOBFShadowandOBFHosttoreadout1sttransferredmessagebufferandrequesttransferof

2ndmessagebuffer:

Requesttransferof2ndmessagebuffertoOBFshadow,readout1stmessagebufferfromOBFhost

•WaituntilOBCR.OBSYSisreset

•WriteOutputBufferCommandMaskOBCM.RHSS,OBCM.RDSSfor2ndmessagebuffer

•ToggleOBFShadowandOBFHostandstarttransferof2ndmessagebuffertoOBFShadow

simultaneouslybywritingOBCR.OBRS(6-0)of2ndmessagebuffer,OBCR.REQ,andOBCR.VIEW(in

caseofand8-bitHostinterface,OBCR.OBRS(6-0)hastobewrittenbeforeOBCR.REQand

OBCR.VIEW).

•Readout1sttransferredmessagebufferbyreadingRDDSn,RDHS13,andMBS

Forfurthertransferscontinuethesameway.

Demandaccesstolastrequestedmessagebufferwithoutrequestofanothermessagebuffer:

•WaituntilOBCR.OBSYSisreset

•DemandaccesstolasttransferredmessagebufferbywritingOBCR.VIEW

•ReadoutlasttransferredmessagebufferbyreadingRDDSn,RDHS1,2,3,andMBS

Table23-14.AssignmentofOutputBufferCommandMaskBits

Position

Access

Bit

Function

17

r

RDSH

ReadDataSectionHostaccess

16

r

RHSH

ReadHeaderSectionHostaccess

1

r/w

RDSS

ReadDataSectionShadow

0

r/w

RHSS

ReadHeaderSectionShadow

Table23-15.AssignmentofOutputBufferCommandRequestBits

Position

Access

Bit

Function

22…16

r

OBRH(6-0)

OBFRequestHost,numberofmessagebufferavailableforhostaccess

15

r

OBSYS

OBFBusyShadow,signalsongoingtransferfrommessageRAMtoOBFShadow

9

r/w

REQ

RequestTransferfrommessageRAMtoOBFShadow

8

r/w

VIEW

ViewOBFShadow,swapOBFShadowandOBFHost

6…0

r/w

OBRS(6-0)

OBFRequestShadow,numberofmessagebufferfornextrequest

23.16.3FlexRayProtocolControllerAccesstoMessageRAM

ThetwotransientbufferRAMs(TBFA,B)areusedtobufferthedatafortransferbetweenthetwoFlexRay

channelprotocolcontrollersandthemessageRAM.

EachtransientbufferRAMisbuiltupasadoublebuffer,abletostoretwocompleteFlexRaymessages.

Thereisalwaysonebufferassignedtothecorrespondingprotocolcontrollerwhiletheotheroneis

accessiblebythemessagehandler.

Ife.g.themessagehandlerwritesthenextmessagetobesenttotransientbufferTx,theFlexRay

ChannelprotocolcontrollercanaccesstransientbufferRxtostorethemessageitiscurrentlyreceiving.

DuringtransmissionofthemessagestoredintransientbufferTx,themessagehandlertransfersthelast

receivedmessagestoredintransientbufferRxtothemessageRAM(ifitpassesacceptancefiltering)and

updatesthecorrespondingmessagebuffer.

1019

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Address-DecoderTransientBufferTxTransientBufferRxShiftRegister

ControlAddressData(31-0)Data(31-0)

Txd1Rxd1

ControlAddressData(31-0)Data(31-0)

Txd2Rxd2ShiftRegister

FlexRayPRTAFlexRayPRTB

Address-DecoderTransientBufferTxTransientBufferRx

MessageHandler

TBFATBFB



ModuleRAMswww.ti.com

DatatransfersbetweenthetransientbufferRAMsandtheshiftregistersoftheFlexRaychannelprotocol

controllersaredoneinwordsof32bit.Thisenablestheuseofa32bitshiftregisterindependentofthe

lengthoftheFlexRaymessages.

Figure23-22.AccesstoTransientBufferRAMs

23.17ModuleRAMs

TheFlexRaymodulecontainsthefollowingRAMportions:

•MessageRAM

•TransientBufferRAMChannelA(TBFA)

•TransientBufferRAMChannelB(TBFB)

•InputBuffer(IBF)

•InputBufferShadow(IBFS)

•OutputBuffer(OBF)

•OutputBufferShadow(OBFS)

•TransferConfigurationRAM(TCR)

AllRAMsexcepttheTCRarepartoftheCommunicationControllercore.

23.17.1MessageRAM

ToavoidconflictsbetweenhostaccesstothemessageRAMandFlexRaymessagereception/

transmission,thehostCPUcannotdirectlyaccessthemessagebuffersinthemessageRAM.These

accessesarehandledthroughtheinputandoutputbuffers.ThemessageRAMisabletostoreupto128

messagebuffersdependingontheconfiguredpayloadlength.

1020

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MessageRAM32bitHeaderMB0DataMB0HeaderPartition

HeaderMB1DataPartitionHeaderMBn

DataMB1unused

2048words‚‚‚‚‚‚

DataMBn



www.ti.comModuleRAMs

ThemessageRAMhasastructureasshowninFigure23-23.

ThedatapartitionisallowedtostartatMessageRAMwordnumber:(MRC.LCB+1)•4

Figure23-23.ConfigurationExampleofMessageBuffersintheMessageRAM

HeaderPartition

StoresheadersegmentsofFlexRayframes:

•Supportsamaximumof128messagebuffers

•Eachmessagebufferhasaheaderoffour32bitwords

•Header3ofeachmessagebufferholdsthe11-bitdatapointertothecorrespondingdatasectioninthe

datapartition

DataPartition

Flexiblestorageofdatasectionswithdifferentlength.Somemaximumvaluesare:

•30messagebufferswith254bytedatasectioneach

•Or56messagebufferswith128bytedatasectioneach

•Or128messagebufferswith48bytedatasectioneach

Restriction:headerpartition+datapartitionmaynotoccupymorethan2048x32bitwords.

23.17.1.1HeaderPartition

Theelementsusedforconfigurationofamessagebufferaswellasthecurrentmessagebufferstatusare

storedintheheaderpartitionofthemessageRAMaslistedinFigure23-24below.Configurationofthe

headersectionsofthemessagebuffersisdonethroughIBF(WriteHeaderSection1,2,3).Readaccessto

theheadersectionsisdonethroughOBF(readheadersection1,2,3+messagebufferstatus).Thedata

pointerhastobecalculatedbytheprogrammertodefinethestartingpointofthedatasectionforthe

correspondingmessagebufferinthedatapartitionofthemessageRAM.Thedatapointershouldnotbe

modifiedduringruntime.FormessagebuffersbelongingtothereceiveFIFO(re)configurationshouldbe

doneinDEFAULT_CONFIGorCONFIGstateonly.

Theheadersectionofeachmessagebufferoccupiesfour32bitwordsintheheaderpartitionofthe

messageRAM.Theheaderofmessagebuffer0startswiththefirstwordinthemessageRAM.

FortransmitbufferstheHeaderCRChastobecalculatedbythehostCPU.

1021

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BitWord3130   29  28   27  26   252423   22  21   20  19   18   1716   15  14   13  12   111098765     432     100

MBI

TXM

PPIT

CFG

CHB

CHA

Cycle Code

FrameID1

PayloadLengthReceived

PayloadLengthConfigured

TxBuffer:HeaderCRCConfiguredRxBuffer:HeaderCRCReceived2

RES

PPI

NFI

SYN

SFI

RCI

ReceiveCycleCount

DataPointer

3

RESS

PPIS

NFIS

SYNS

SFIS

RCIS

CycleCountStatus

FTB

FTA

MLST

ESB

ESA

TCIB

TCIA

SVOB

SVOA

CEOB

CEOA

SEOB

SEOA

VFRB

VFRA

::::

FrameConfiguration

FilterConfiguration

MessageBufferControl

MessageRAMConfiguration

UpdatedfromreceivedFrame

MessageBufferStatusunused



ModuleRAMswww.ti.com

Payloadlengthreceived(PLR(6-0)),receivecyclecount(RCC(5-0)),ReceivedonChannelIndication

(RCI),StartupFrameIndicationbit(SFI),syncbit(SYN),nullframeindicationbit(NFI),payloadpreamble

indicationbit(PPI),andreservedbit(RES)areonlyupdatedfromreceivedvaliddataframesonly.

Headerword3ofeachconfiguredmessagebufferholdsthecorrespondingmessagebufferstatusMBS.

Figure23-24.HeaderSectionofMessageBufferinMessageRAM

Header1(Word0)

WriteaccessthroughWRHS1,readaccessthroughRDHS1:

•FrameID-Slotcounterfilteringconfiguration

•CycleCode-Cyclecounterfilteringconfiguration

•CHA,CHB-Channelfilteringconfiguration

•CFG-Messagebufferconfiguration:receive/transmit

•PPIT-PayloadPreambleIndicatorTransmit

•TXM-Transmitmodeconfiguration:single-shot/continuous

•MBI-Messagebufferreceive/transmitinterruptenable

Header2(Word1)

WriteaccessthroughWRHS2,readaccessthroughRDHS2:

•HeaderCRCTransmitBuffer:Configuredbythehost(calculatedfromframeheader)

–ReceiveBuffer:Updatedfromreceivedframe

•PayloadLengthConfigured:Lengthofdatasection(2-bytewords)asconfiguredbythehost

•PayloadLengthReceived:Lengthofpayloadsegment(2-bytewords)storedfromreceivedframe

1022

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleRAMs

Header3(Word2)

WriteaccessthroughWRHS3,readaccessthroughRDHS3:

•DataPointer-Pointertothebeginningofthecorrespondingdatasectioninthedatapartition

ReadaccessthroughRDHS3,validforreceivebuffersonly,updatedfromreceivedframes:

•ReceiveCycleCount-Cyclecountfromreceivedframe

•RCI-ReceivedonChannelIndicator

•SFI-StartupFrameIndicator

•SYN-SyncFrameIndicator

•NFI-NullFrameIndicator

•PPI-PayloadPreambleIndicator

•RES-REServedbit

MessageBufferStatusMBS(Word3)

ReadaccessthroughMBS,updatedbythecommunicationcontrollerattheendoftheconfiguredslot.

•VFRA-ValidFramereceivedonchannelA

•VFRB-ValidFramereceivedonchannelB

•SEOA-SyntaxErrorObservedonchannelA

•SEOB-SyntaxErrorObservedonchannelB

•CEOA-ContentErrorObservedonchannelA

•CEOB-ContentErrorObservedonchannelB

•SVOA-SlotBoundaryViolationObservedonchannelA

•SVOB-SlotBoundaryViolationObservedonchannelB

•TCIA-TransmissionConflictIndicationchannelA

•TCIB-TransmissionConflictIndicationchannelB

•ESA-EmptySlotChannelA

•ESB-EmptySlotChannelB

•MLST-MessageLost

•FTA-FrameTransmittedonChannelA

•FTB-FrameTransmittedonChannelB

•CycleCountStatus-Currentcyclecountwhenstatuswasupdated

•RCIS-ReceivedonChannelIndicatorStatus

•SFIS-StartupFrameIndicationStatus

•SYNS-SyncFrameIndicatorStatus

•NFIS-NullFrameIndicatorStatus

•PPIS-PayloadPreambleIndicatorStatus

•RESS-ReservedBitStatus

23.17.1.2DataPartition

ThedatapartitionofthemessageRAMstoresthedatasectionsofthemessagebuffersconfiguredfor

reception/transmissionasdefinedintheheaderpartition.Thenumberofdatabytesforeachmessage

buffercanvaryfrom0to254.Inordertooptimizethedatatransferbetweentheshiftregistersofthetwo

FlexRayprotocolcontrollersandthemessageRAMaswellasbetweenthehostinterfaceandthe

messageRAM,thephysicalwidthofthemessageRAMiswordwise(4bytes).

Thedatapartitionstartsrightafterthelastwordoftheheaderpartition.Whenconfiguringthemessage

buffersinthemessageRAMtheprogrammerhastoassurethatthedatapointerspointtoaddresses

withinthedatapartition.

1023

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleRAMswww.ti.com

Figure23-25belowshowsanexamplehowthepayloadoftheconfiguredmessagebufferscanbestored

inthedatapartitionofthemessageRAM.Messagebuffers0to2arestaticbufferswithapayloadof3,

whereasmessagebuffers3tonaredynamicbufferswithvariablepayload.

Thebeginningofamessagebuffer’sdatasectionisdeterminedbythedatapointerandthepayload

lengthconfiguredinthemessagebuffer’sheadersection.Thisenablesaflexibleusageoftheavailable

RAMspaceforstorageofmessagebufferswithdifferentdatalengths.

Thestorageofthepayloaddataiswordaligned.Ifthesizeofamessagebufferpayloadisanoddnumber

of2-bytewords,theremaining16bitsinthelast32-bitwordareunused(seeFigure23-25).

Figure23-25.ExampleStructureofDataPartitioninMessageRAM

Bit/

3

3

2

2

2

2

2

2

2

2

2

2

1

1

1

1

1

1

1

1

1

1

9

8

7

6

5

4

3

2

1

0

Word

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

:

MB0Data3

MB0Data2

MB0Data1

MB0Data0

:

unused

unused

MB0Data5

MB0Data4

:

MB1Data3

MB1Data2

MB1Data1

MB1Data0

:

unused

unused

MB1Data5

MB1Data4

:

MB2Data3

MB2Data2

MB2Data1

MB2Data0

:

unused

unused

MB2Data5

MB2Data4

:

MB3Data3

MB3Data2

MB3Data1

MB3Data0

:

º

º

º

º

:

MB3Data(k)

MB3Data(k-1)

MB3Data(k-2)

MB3Data(k-3)

:

MBnData3

MBnData2

MBnData1

MBnData0

:

º

º

º

º

:

º

º

º

º

:

MBnData(m)

MBnData(m-1)

MBnData(m-2)

MBnData(m-3)

:

unused

unused

unused

unused

:

unused

unused

unused

unused

2046

unused

unused

unused

unused

2047

unused

unused

unused

unused

23.17.2ParityCheck

InordertoassuretheintegrityofthedatastoredinthedifferentRAMblocksofthemodule(message

RAM,2transientbufferRAMs,2inputbufferRAMs,2outputbufferRAMs,TransferConfigurationRAM),

theFlexRaymoduleRAMsareparityprotected.

TheRAMblocksareparityprotectedandtheparityprotectioncannotbedisabled.OnlytheTransfer

ConfigurationRAMhastheexceptionalfunctionalitythatparityprotectioncaneitherbeswitchedonoroff

bywritinga4bitkeytothededicatedparitylockbits(PEL(3-0))intheGlobalControlRegister(GCS/R)of

theTransferUnitregisterframe.BydefaulttheparityprotectionoftheTCRisswitchedoff.

ThefollowingFigure23-26showsthestructureoftheparityconcerningenabling/disablinganderror

indication.

1024

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Parity check

TCR Parity offTCR Parity on

•Transfer Configuration RAM (TCR)

PEL(3-0)(GCS/R1)•Message RAM•Transient Buffer RAMA•Transient Buffer RAM B•Input Buffer RAM•Input Buffer Shadow RAM•Output Buffer RAM•Output Buffer Shadow RAMFlexRay RAMs

PERR flagParity/ECC failure

EIR

Parity/ECC failure

PE flag

TEIF

faulty frame indication

FMB(6-0)(MHDS)

faulty address indicationADR(8-0)(PEADR)

PERRE(EIES/R)

PERRL(EILS)CC_int0CC_int1TU_PE_intE-RayTransfer Unit



www.ti.comModuleRAMs

Figure23-26.ParityStructure

NOTE:ForthesevenRAMblocksoftheCommunicationControllerportion(messageRAM,2

transientbufferRAMs,2inputbufferRAMsand2outputbufferRAMs)parityprotectionis

switchedon,whichcanbeselectedbytheparitylockbits(PEL(3-0)).Parityprotection

cannotbeswitchedoffcompletely.FortheTCRoftheTransferUnitactuallytheparityerror

generationwillbeswitchedonandoffbytheparitylockbits,theparitygenerationitself

remainsalwayson.

ThefollowingsectionsdescribetheprotectionfortheCommunicationControllerrelatedRAMblocks.

AlltheRAMblockshaveaparitygeneratorandaparitycheckerattachedasshowninFigure23-27.

WhendataiswrittentoaRAMblock,thelocalparitygeneratorgeneratesthecorrespondingparity

information.

TheparityischeckedeachtimeadatawordisreadfromanyoftheRAMblocks.Themoduleinternal

databuseshaveawidthof32bits.Ifaparityerrorisdetected,thePERRerrorflagissetintheerror

interruptregister(EIR).Additionallyaparityerrorinterruptcanbegenerated,ifenabledbythePERREbit

intheerrorinterruptenableregister(EIES/R).Thefaultymessagebuffernumbertogetherwiththe

informationofthefailingRAMcanbereadfromthemessagehandlerstatus(MHDS)register.

Figure23-27showsthedatapathsbetweentheRAMblocksandtheparitygenerators/checkers.

1025

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




GENCHKCHKGENGEN  Parity Generator               CHKI Parity CheckerCHKCHKMessageRAMTransientBufferRAMATransientBufferRAMBPRTAPRTBOutputBufferRAM1,2GENGEN

CHKGENInputBufferRAM1,2



ModuleRAMswww.ti.com

Figure23-27.ParityGenerationandCheck

NOTE:TheparitygeneratorandparitycheckerarenotpartoftheRAMblocks,butoftheRAM

accesslogic.

Forparitygeneration,theFlexRaymoduleusesanevenparity(withanevennumberofonesinthe32-bit

datawordazeroparitybitisgenerated).

Whenaparityerrorhasbeendetectedthefollowingactionswillbeperformed:

Inallcases

•Thecorrespondingerrorflaginthemessagehandlerstatus(MHDS)registerissetandthefaulty

messagebufferisindicated.

•TheerrorflagEIR.PERRintheerrorinterruptregisterisset,andifenabled,amoduleinterrupttothe

CPUwillbegenerated.

Additionallyinspecificcasesofparityerrors

1.ParityerrorduringdatatransferfrominputbufferRAM1,2⇒messageRAM

(a)Transferofheaderand/ordatasectionandparityerroroccursduringheaderand/ordatasection

transfertomessageRAM:

•MHDS.PIBFbitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstoafaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Headerand/ordatasectionofthecorrespondingmessagebufferisupdated

•Transmissionrequestforthecorrespondingmessagebufferisnotset(notransfertothe

FlexRaybus)

1026

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleRAMs

(b)Transferofdatasectiononlyandparityerroroccurswhenreadingheadersectionofthe

correspondingmessagebufferfromthemessageRAM.

•MHDS.PMRbitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstoafaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Thedatasectionofthecorrespondingmessagebufferisnotupdated

•Transmissionrequestforthecorrespondingmessagebufferisnotset(notransfertothe

FlexRaybus)

2.ParityerrorduringhostCPUreadinginputbufferRAM1,2

•MHDS.PIBFbitisset

3.ParityerrorduringscanofheadersectionsinmessageRAM

•MHDS.PMRbitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstoafaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Ignoremessagebuffer(thetransferofthemessagebufferisskipped)

4.ParityerrorduringdatatransferfrommessageRAMtotransientbufferRAM1,2

•MHDS.PMRbitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstothefaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Framenottransmitted,framesalreadyintransmissionareinvalidatedbysettingtheframeCRCto

zero

5.ParityerrorduringdatatransferfromtransientbufferRAM1,2toprotocolcontroller1,2

•MHDS.PTBF1,2bitisset

•FramesalreadyintransmissionareinvalidatedbysettingtheframeCRCtozero

6.ParityerrorduringdatatransferfromtransientbufferRAM1,2tomessageRAM

(a)ParityerrorwhenreadingheadersectionofcorrespondingmessagebufferfrommessageRAM

•MHDS.PMRbitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstoafaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Thedatasectionofthecorrespondingmessagebufferisnotupdated

(b)ParityerrorwhenreadingtransientbufferRAM1,2:

•MHDS.PTBF1,2bitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstoafaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Thedatasectionofthecorrespondingmessagebufferisupdated

7.ParityerrorduringdatatransferfrommessageRAMtooutputbufferRAM

•MHDS.PMRbitisset

•MHDS.FMBDbitissettoindicatethatMHDS.FMB(6-0)pointstofaultymessagebuffer

•MHDS.FMB(6-0)indicatesthenumberofthefaultymessagebuffer

•Headerand/ordatasectionoftheoutputbufferisupdated,butshouldnotbeusedbythehost

CPU

8.ParityerrorduringhostCPUreadingoutputbufferRAM1,2

•MHDS.POBFbitisset

9.ParityerrorduringdatareadoftransientbufferRAM1,2Whenaparityerroroccursduringthe

MessageHandlerreadsaframewithnetworkmanagementinformation(PPI=1)fromthetransient

bufferRAM1,2thecorrespondingnetworkmanagementvectorregisterNMV1,2,3isnotupdatedfrom

thatframe.

1027

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Interruptswww.ti.com

23.17.2.1HostHandlingofParityErrors

Parityerrorscausedbytransientbitflipscanbefixedby:

Self-healing

Parityerrorslocatedin

•InputBufferRAM1,2

•OutputBufferRAM1,2

•DataSectionofMessageRAM

•TransientBufferRAMA

•TransientBufferRAMB

•TransferConfigurationRAM(TCR)

areoverwrittenwiththenextwriteaccesstothedisturbedbit(s)causedbyhostaccessorbyFlexRay

communication.

CLEAR_RAMSCommand

WhencalledinDEFAULT_CONFIGorCONFIGstatePOCcommandCLEAR_RAMSinitializesall

module-internalRAMstozeroandtheparitybitsareinitializedaccordingly,dependingwhatmodeis

enabled.

TemporaryUnlockingofHeaderSection

Aparityerrorintheheadersectionofalockedmessagebuffercanbefixedbyatransferfromtheinput

buffertothelockedbufferheadersection.Forthistransfer,thewrite-accesstotheIBCR(specifyingthe

messagebuffernumber)mustbeimmediatelyprecededbytheunlocksequencenormallyusedtoleave

CONFIGstate.Forthatsingletransferthecorrespondingmessagebufferheaderisunlocked,regardless

whetheritbelongstotheFIFOorwhetheritslockingiscontrolledbyMRC.SEC(1-0),andwillbeupdated

withnewdata.

NOTE:Incaseabovemethodsdonotwork,itisrecommendedtoexecutethePBISTtestatdevice

leveltoconfirmaharderrorinthemoduleinternalRAMs.

23.18Interrupts

Thissectiondescribesthetransferunitinterruptsandthecommunicationcontrollerinterrupts.

23.18.1TransferUnitInterrupts

23.18.1.1InterruptStructure

Fortransferinterrupts,oneenablebitisprovidedforeachbitinthetransferoccurredstatusregisters.

Maskableerrorinterruptsarepossibleforallerrorconditionsexceptparityerrorandmemoryprotection

error.

Theparityerrorandthememoryprotectionerrorhaveseparatenon-maskablelines.Bothturnoffthe

TransferUnitafterfinishingthecurrentwordaccesscycle.

ThefollowingFigure23-28showstheinterruptstructureoftheFlexRayTransferUnit.

1028

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TransferInterruptsTransferBuffer1

TransferBuffer2

ErrorInterruptsForbiddenAccessTransfernotready

TU_Int0TU_Int1Global InterruptMask(GCS/R)

InterruptMask(TSMIES/R0/1/2/3,TCCIES/R0/1/2/3)

Flags(TSMO0/1/2/3,TCCO0/1/2/3)

Error InterruptFlags(TEIF)

ErrorInterruptMask(TEIRES/R)UncorrectableTCRerrorMemoryProtectionViolation

TU_UCT_errTU_MPV_err

VBUSread

VBUSwrite

TransferBuffer128

TransferBuffer1

TransferBuffer2

ForbiddenAccessTransfernotready

UncorrectableTCRerrorMemoryProtectionViolation

VBUSread

VBUSwrite

TransferBuffer128



www.ti.comInterrupts

Figure23-28.TransferUnitInterruptStructure

1029

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Interruptswww.ti.com

23.18.1.2EnableInterrupts

TSMIES/RandTCCIES/Rcontrolthebuffertransferinterruptsforeachbufferinbothdirections.The

TEIRES/Rregisterscontrolsthemaskableerrorinterruptsourceswhichare:

•VBUStransactionerrors

IfanerroroccursduringVBUSreadorwritetransferaerrorinterruptwillbegenerated.

•ForbiddenaccesstoIBForOBF

SincehostaccessestocommunicationcontrollerthroughtheIBFandtheOBF(0x400-0x7FF)are

forbidden,aslongastheTransferUnitStateMachineisenabled,accesseswillbeignoredandan

errorinterruptwillbegenerated.

•TransfernotreadywhenTBAshouldbeloaded

Whenatransferisongoing/pendingduringbaseaddressreloadonFlexRaycommunicationcyclestart

(onlyoccursifNTBA!=TBA)theTBAwillnotbeloadedandanerrorinterruptwillbegenerated.

Thetransferinterruptsuseaseparateinterruptline(TU_int0)thantheerrorinterrupts(TU_int1).

23.18.1.3InterruptFlags

TheTSMOandTCCOflagsindicatebuffertransferstatusinterruptswhereastheTEIFflagsindicate

interruptsourcesformaskableandnon-maskableerrorinterrupts.

TheerrorinterruptflagsaresetbytheTransferUnitStateMachineandcanbeclearedbytheCPUby

writinga‘1’.IftheCPUclearstheflag,whiletheTransferUnitStateMachinesetsitatthesametime,the

flagremainsset.

23.18.1.4NonMaskableErrorIndication

MemoryprotectionviolationanduncorrectableTCRerrorhavetheirownnonmaskableerrorlines,which

canbeconnectedtotheVectoredInterruptModule(VIM)and/ortheErrorSignalingModule(ESM).

Pleaserefertothespecificdevicedatasheetonthehookup.

•IfamemoryprotectionviolationoccurstheMemoryProtectionViolationError(TU_MPV_err)linewill

beactivated.

•IfauncorrectableTCRerroroccurswhileaccessingtheTCR,theParityError(TU_UCT_err)linewill

beactivated.

23.18.2CommunicationControllerInterrupts

Ingeneral,interruptsprovideacloselinktotheprotocoltimingastheyaretriggeredalmostimmediately

whenanerrororstatuschangeisdetectedbythecontroller,aframeisreceivedortransmitted,a

configuredtimerinterruptisactivated,orastopwatcheventoccurred.ThisenablesthehostCPUtoreact

veryquicklyonspecificerrorconditions,statuschanges,ortimerevents.Toremainflexiblethough,the

communicationcontrollersupportsdisable/enablecontrolsforeachindividualinterruptsourceseparately.

Aninterruptmaybetriggered,forexamplewhen

•aframeisreceivedortransmitted

•anerrorwasdetected

•astatusflagisset

•atimerreachesapreconfiguredvalue

•amessagetransferfrominputbuffertomessageRAMorfrommessageRAMtooutputbufferhas

completed

•astopwatcheventoccurred

1030

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




InterruptSource1

01

CC_int0CC_int1

Status/ErrorInterruptEnableSet/Clear(SIES/EIES,SIER/EIER

Status/ErrorInterruptLineSelect(SILS/EILS)

EINT0

EINT1

Source1FlagInterruptLineEnable

InterruptSource2

01

Status/ErrorInterruptRegister(SIR/EIRInterruptLine0InterruptLine1

Source2FlagTimer0InterruptTimer1Interrupt

CC_tint0

CC_tint1



www.ti.comInterrupts

Figure23-29.InterruptStructure

Trackingstatusandgeneratinginterruptswhenastatuschangeoranerroroccursaretwoindependent

tasks.Independentofaninterruptbeingenabled,thecorrespondingstatusistrackedandindicatedbythe

CommunicationController.Thehosthasaccesstothecurrentstatusanderrorinformationbyreadingthe

errorinterruptregisterandthestatusinterruptregister.

Theinterruptlinestothehost,CC_int0andCC_int1,arecontrolledbytheenabledinterrupts.Inaddition

eachofthetwointerruptlinestothehostCPUcanbeenabled/disabledseparatelybyprogrammingbit

EINT0andEINT1intheInterruptLineEnableregister.

Thetwotimerinterruptsgeneratedbyinterrupttimer0and1areavailableonpinsCC_tint0andCC_tint1.

Theycanbeconfiguredviathetimer0andtimer1configurationregister.

WhenatransferbetweenIBF/OBFandtheMessageRAMhascompletedbitSIR.TIBCorSIR.TOBCis

set.

1031

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Interruptswww.ti.com

Table23-16.ModuleInterruptFlagsandInterruptLineEnable

Register

Bit

Function

EIR

PEMC

ProtocolerrorModeChanged

CNA

CommandNotValid

SFBM

SyncFramesBelowMinimum

SFO

SyncFrameOverflow

CCF

ClockCorrectionFailure

CCL

CHICommandLocked

PERR

Parityerror

RFO

ReceiveFIFOOverrun

EFA

EmptyFIFOAccess

IIBA

IllegalInputBufferAccess

IOBA

IllegalOutputBufferAccess

MHF

MessageHandlerConstraintsFlag

EDA

ErrorDetectedonChannelA

LTVA

LatestTransmitViolationChannelA

TABA

TransmissionAcrossBoundaryChannelA

EDB

ErrorDetectedonChannelB

LTVB

LatestTransmitViolationChannelB

TABB

TransmissionAcrossBoundaryChannelB

SIR

WST

WakeupStatus

CAS

CollisionAvoidanceSymbol

CYCS

CycleStartInterrupt

TXI

TransmitInterrupt

RXI

ReceiveInterrupt

RFNE

ReceiveFIFOnotEmpty

RFCL

ReceiveFIFOCriticalLevel

NMVC

NetworkManagementVectorChanged

TI0

TimerInterrupt0

TI1

TimerInterrupt1

TIBC

TransferInputBufferCompleted

TOBC

TransferOutputBufferCompleted

SWE

StopWatchEvent

SUCS

StartupCompletedSuccessfully

MBSI

MessageBufferStatusInterrupt

SDS

StartofDynamicSegment

WUPA

WakeupPatternChannelA

MTSA

MTSReceivedonChannelA

WUPB

WakeupPatternChannelB

MTSB

MTSReceivedonChannelB

ILE

EINT0

EnableInterruptLine0

EINT1

EnableInterruptLine1

1032

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19FlexRayModuleRegisters

23.19.1TransferUnitRegisters

Allregistersareorganizedas32-bitregisters.32/16/8-bitaccessesaresupported.ForFlexRayTU

transfersonly,4x32-bitdatapackagesaresupported.

TheTransferUnitStateMachineregistersusetheoffsetaddressrange00to1FCh.

TransferConfigurationRAMusestheoffsetaddressrange00to1FChinnormalmodeand00to3FChin

paritytestmode.

Table23-17.TransferUnitRegisterSummary

OffsetAddress

Acronym

RegisterDescription

Section

00

GSN0

GlobalStaticNumber0

Section23.19.1.1

004h

GSN1

GlobalStaticNumber1

Section23.19.1.2

008-00Ch

Reserved

Reserved

010h

GCS

GlobalControlSet

Section23.19.1.3

014h

GCR

GlobalControlReset

Section23.19.1.3

018h

TSCB

TransferStatusCurrentBuffer

Section23.19.1.4

01Ch

LTBCC

LastTransferredBuffertoCommunicationController

Section23.19.1.5

020h

LTBSM

LastTransferredBuffertoSystemMemory

Section23.19.1.6

024h

TBA

TransferBaseAddress

Section23.19.1.7

028h

NTBA

NextTransferBaseAddress

Section23.19.1.8

02Ch

BAMS

BaseAddressofMirroredStatus

Section23.19.1.9

030h

SAMP

StartAddressofMemoryProtection

Section23.19.1.10

034h

EAMP

EndAddressofMemoryProtection

Section23.19.1.11

038h-03Ch

Reserved

Reserved

040h

TSMO1

TransfertoSystemMemoryOccurred1

Section23.19.1.12

044h

TSMO2

TransfertoSystemMemoryOccurred2

Section23.19.1.12

048h

TSMO3

TransfertoSystemMemoryOccurred3

Section23.19.1.12

04Ch

TSMO4

TransfertoSystemMemoryOccurred4

Section23.19.1.12

050h

TCCO1

TransfertoCommunicationControllerOccurred1

Section23.19.1.13

054h

TCCO2

TransfertoCommunicationControllerOccurred2

Section23.19.1.13

058h

TCCO3

TransfertoCommunicationControllerOccurred3

Section23.19.1.13

05Ch

TCCO4

TransfertoCommunicationControllerOccurred4

Section23.19.1.13

060h

TOOFF

TransferOccurredOffset

Section23.19.1.14

064h-06Ch

Reserved

Reserved

070h

PEADR

ParityErrorAddress

Section23.19.1.15

074h

TEIF

TransferErrorInterrupt

Section23.19.1.16

078h

TEIRES

TransferErrorInterruptEnableSet

Section23.19.1.17

07Ch

TEIRER

TransferErrorInterruptEnableReset

Section23.19.1.17

080h

TTSMS1

TriggerTransfertoSystemMemorySet1

Section23.19.1.18

084h

TTSMR1

TriggerTransfertoSystemMemoryReset1

Section23.19.1.18

088h

TTSMS2

TriggerTransfertoSystemMemorySet2

Section23.19.1.18

08Ch

TTSMR2

TriggerTransfertoSystemMemoryReset2

Section23.19.1.18

090h

TTSMS3

TriggerTransfertoSystemMemorySet3

Section23.19.1.18

094h

TTSMR3

TriggerTransfertoSystemMemoryReset3

Section23.19.1.18

098h

TTSMS4

TriggerTransfertoSystemMemorySet4

Section23.19.1.18

09Ch

TTSMR4

TriggerTransfertoSystemMemoryReset4

Section23.19.1.18

0A0h

TTCCS1

TriggerTransfertoCommunicationControllerSet1

Section23.19.1.19

0A4h

TTCCR1

TriggerTransfertoCommunicationControllerReset1

Section23.19.1.19

1033

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-17.TransferUnitRegisterSummary(continued)

OffsetAddress

Acronym

RegisterDescription

Section

0A8h

TTCCS2

TriggerTransfertoCommunicationControllerSet2

Section23.19.1.19

0ACh

TTCCR2

TriggerTransfertoCommunicationControllerReset2

Section23.19.1.19

0B0h

TTCCS3

TriggerTransfertoCommunicationControllerSet3

Section23.19.1.19

0B4h

TTCCR3

TriggerTransfertoCommunicationControllerReset3

Section23.19.1.19

0B8h

TTCCS4

TriggerTransfertoCommunicationControllerSet4

Section23.19.1.19

0BCh

TTCCR4

TriggerTransfertoCommunicationControllerReset4

Section23.19.1.19

0C0h

ETESMS1

EnableTransferonEventtoSystemMemorySet1

Section23.19.1.20

0C4h

ETESMR1

EnableTransferonEventtoSystemMemoryReset1

Section23.19.1.20

0C8h

ETESMS2

EnableTransferonEventtoSystemMemorySet2

Section23.19.1.20

0CCh

ETESMR2

EnableTransferonEventtoSystemMemoryReset2

Section23.19.1.20

0D0h

ETESMS3

EnableTransferonEventtoSystemMemorySet3

Section23.19.1.20

0D4h

ETESMR3

EnableTransferonEventtoSystemMemoryReset3

Section23.19.1.20

0D8h

ETESMS4

EnableTransferonEventtoSystemMemorySet4

Section23.19.1.20

0DCh

ETESMR4

EnableTransferonEventtoSystemMemoryReset4

Section23.19.1.20

0E0h

CESMS1

ClearonEventtoSystemMemorySet1

Section23.19.1.21

0E4h

CESMR1

ClearonEventtoSystemMemoryReset1

Section23.19.1.21

0E8h

CESMS2

ClearonEventtoSystemMemorySet2

Section23.19.1.21

0ECh

CESMR2

ClearonEventtoSystemMemoryReset2

Section23.19.1.21

0F0h

CESMS3

ClearonEventtoSystemMemorySet3

Section23.19.1.21

0F4h

CESMR3

ClearonEventtoSystemMemoryReset3

Section23.19.1.21

0F8h

CESMS4

ClearonEventtoSystemMemorySet4

Section23.19.1.21

0FCh

CESMR4

ClearonEventtoSystemMemoryReset4

Section23.19.1.21

100h

TSMIES1

TransfertoSystemMemoryInterruptEnableSet1

Section23.19.1.22

104h

TSMIER1

TransfertoSystemMemoryInterruptEnableReset1

Section23.19.1.22

108h

TSMIES2

TransfertoSystemMemoryInterruptEnableSet2

Section23.19.1.22

10Ch

TSMIER2

TransfertoSystemMemoryInterruptEnableReset2

Section23.19.1.22

110h

TSMIES3

TransfertoSystemMemoryInterruptEnableSet3

Section23.19.1.22

114h

TSMIER3

TransfertoSystemMemoryInterruptEnableReset3

Section23.19.1.22

118h

TSMIES4

TransfertoSystemMemoryInterruptEnableSet4

Section23.19.1.22

11Ch

TSMIER4

TransfertoSystemMemoryInterruptEnableReset4

Section23.19.1.22

120h

TCCIES1

TransfertoCommunicationControllerInterruptEnableSet1

Section23.19.1.23

124h

TCCIER1

TransfertoCommunicationControllerInterruptEnableReset1

Section23.19.1.23

128h

TCCIES2

TransfertoCommunicationControllerInterruptEnableSet2

Section23.19.1.23

12Ch

TCCIER2

TransfertoCommunicationControllerInterruptEnableReset2

Section23.19.1.23

130h

TCCIES3

TransfertoCommunicationControllerInterruptEnableSet3

Section23.19.1.23

134h

TCCIER3

TransfertoCommunicationControllerInterruptEnableReset3

Section23.19.1.23

138h

TCCIES4

TransfertoCommunicationControllerInterruptEnableSet4

Section23.19.1.23

13Ch

TCCIER4

TransfertoCommunicationControllerInterruptEnableReset4

Section23.19.1.23

140h-1FCh

Reserved

Reserved

0-1FCh

TCR

TransferConfigurationRAM

Section23.19.1.24

200h-3FCh

TCRParity

TCRParityTestMode

Section23.19.1.25

1034

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.1GlobalStaticNumber0(GSN0)

Thisregistercontainsaconstanttocheckcorrectnessofdatatransfers.

Figure23-30.GlobalStaticNumber0(GSN0)[offset_TU=00h]

31

16

Data_A(15-0)

R-0x5432

15

0

Data_B(15-0)

R-0xABCD

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-18.GlobalStaticNumber0(GSN0)FieldDescriptions

Bit

Field

Value

Description

31-16

Data_A(15-0)

0-FFFFh

15-0

Data_B(15-0)

0-FFFFh

(complementofData_A(15-0))

23.19.1.2GlobalStaticNumber1(GSN1)

Thisregistercontainsaconstanttocheckcorrectnessofdatatransfers.

Figure23-31.GlobalStaticNumber1(GSN1)[offset_TU=04h]

31

16

Data_C(15-0)

R-0xABCD

15

0

Data_D(15-0)

R-0x5432

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-19.GlobalStaticNumber1(GSN1)FieldDescriptions

Bit

Field

Value

Description

31-16

Data_C(15-0)

0-FFFFh

15-0

Data_D(15-0)

0-FFFFh

(complementofData_C(15-0))

1035

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.3GlobalControlSet/Reset(GCS/R)

TheGCxRegistersreflectstheconfigurationmodeandallowstoconfigurethebasicTransferUnit

behavior.

TheGCxregistersconsistofasetregister(GCS)andaresetregister(GCR).Bitsaresetbywriting‘1’to

GCSandresetbywriting‘1’toGCR.Writinga‘0’hasnoeffect.Readingfrombothaddresseswillresultin

thesamevalue.

Figure23-32.GlobalControlSet(GCS)[offset_TU=10h]

31

30

29

28

27

26

25

24

ENDVBM

ENDVBS

ENDR(1-0)

ENDH(1-0)

ENDP(1-0)

R/S-0

R/S-0

R/S-0

R/S-0

R/S-0

23

22

21

20

19

16

Reserved

PRIO

PEFT

PEL(3-0)

R-0

R/S-0

R/S-0

R/S-0x5

15

14

13

12

11

9

8

Reserved

CETESM

CTTCC

CTTSM

Reserved

ETSM

R-0

R/S-0

R/S-0

R/S-0

R-0

R/S-0

7

6

5

4

3

2

1

0

Reserved

SILE

EILE

Reserved

TUH

TUE

R-0

R/S-0

R/S-0

R-0

R/S-0

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;S=Set;-n=valueafterreset

NOTE:ForGlobalControlReset(GCR)bitdescriptions,seeTable23-20.

Figure23-33.GlobalControlReset(GCR)[offset_TU=14h]

31

30

29

28

27

26

25

24

ENDVBM

ENDVBS

ENDR(1-0)

ENDH(1-0)

ENDP(1-0)

R/S-0

R/S-0

R/S-0

R/S-0

R/S-0

23

22

21

20

19

16

Reserved

PRIO

PEFT

PEL(3-0)

R-0

R/S-0

R/S-0

R/S-0x5

15

14

13

12

11

9

8

Reserved

CETESM

CTTCC

CTTSM

Reserved

ETSM

R-0

R/S-0

R/S-0

R/S-0

R-0

R/S-0

7

6

5

4

3

2

1

0

Reserved

SILE

EILE

Reserved

TUH

TUE

R-0

R/S-0

R/S-0

R-0

R/S-0

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;S=Set;-n=valueafterreset

1036

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-20.GlobalControlSet/Reset(GCS/R)FieldDescriptions

Bit

Field

Value

Description

31

ENDVBM

EndiannessCorrectiononVBuspMaster

0

Endiannesscorrectionswitchedoff(Endiannessisdefault:LittleEndiannessequaltoBigEndian

wordinvariant(ARM:BE-32),sameasallotherperipherals)(Example32BitWord=ABCD)

1

Endiannesscorrectionswitchedon(E-RayRegister,HeaderandPayloadEndiannessisaccording

theconfigurationofbitsENDR0/1ENDH0/1,ENDP0/1)

30

ENDVBS

EndiannesscorrectiononVBuspSlave

0

Endiannesscorrectionswitchedoff(Endiannessisdefault:LittleEndiannessequaltoBigEndian

wordinvariant(ARM:BE-32),sameasallotherperipherals)Example32BitWord=ABCD

1

Endiannesscorrectionswitchedon(E-RayRegister,HeaderandPayloadEndiannessisaccording

theconfigurationofbitsENDR0/1,ENDH0/1,ENDP0/1)

29-28

ENDRx

EndiannessCorrectionforNo(headerorpayload)DataSinkAccess

Byte-ordercontrolofCPUaccesstoE-Rayregister,TransferUnitregisterandTransferUnitram

data.DatatransferredbetweenCPUanddatasinkwillbecorrected.

0

RemappedtoABCDh

1h

RemappedtoBADCh

2h

RemappedtoCDABh

3h

RemappedtoDCBAh

27-26

ENDHx

EndiannessCorrectionforHeader

0

RemappedtoABCDh

1h

RemappedtoBADCh

2h

RemappedtoCDABh

3h

RemappedtoDCBAh

25-24

ENDPx

EndiannessCorrectionforPayload

0

RemappedtoABCDh

1h

RemappedtoBADCh

2h

RemappedtoCDABh

3h

RemappedtoDCBAh

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21

PRIO

TransferPriority

0

TTSMgetshigherprioritythanTTCC

1

TTCCgetshigherprioritythanTTSM

20

PEFT

ParityforTest

0

Donotuseparitytestfeature.TCRPnotreadableandwritable.

1

Usetestfeaturefortestingparitymechanism.TCRPisreadableandwritable.

19-16

PELx

ParityLock

5h

ParityprotectionforTCRisswitchedoff.ParityprotectionremainsactivatedformessageRAM,

transientbufferRAMs,inputbufferRAMsandoutputbufferRAMs.

Others

ParityprotectionforTCRisswitchedon.ParityprotectionisactivatedformessageRAM,transient

bufferRAMs,inputbufferRAMsandoutputbufferRAMs.

Note:ForTCR,PEL(3-0)enables/disablestheparityerrorinterruptgeneration.Whiletheparity

featureisdisabledtheparitygenerationisstillongoingandtheerrorindicationbytheparity

interruptflag(PE)intheTransferErrorInterruptFlagregister(TEIF)remainsactive.Onlytheparity

interruptgenerationgetsdisabled.

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14

CETESM

ClearETESMRegister

ClearallbitsofEnableTransferonEventtoSystemMemoryregister.

0

Donotcleartheregister.

1

Cleartheregisterwhenbitissetfrom0to1.

13

CTTCC

ClearTTCCRegister

0

Donotcleartheregister.

1

Cleartheregisterwhenbitissetfrom0to1.

1037

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-20.GlobalControlSet/Reset(GCS/R)FieldDescriptions(continued)

Bit

Field

Value

Description

12

CTTSM

ClearTTSMRegister

0

Donotcleartheregister.

1

Cleartheregisterwhenbitissetfrom0to1.

11-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

ETSM

EnableTransferStatusMirrored

Mirrortechniquemustbeadjustable.

0

DisablemirrorfunctionforTSCB,LTBCC,LTBSM,TSMO1-4,TCCO1-4andTOOFF.

1

EnablemirrorfunctionforTSCB,LTBCC,LTBSM,TSMO1-4,TCCO1-4andTOOFF.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5

SILE

StatusInterruptLineEnable

Enable/Disablestatuslineinterrupt.

0

TU_Int0isdisabled.

1

TU_Int0isenabled.

4

EILE

ErrorInterruptLineEnable

Enable/Disableerrorinterruptline.

0

TU_Int1isdisabled.

1

TU_Int1isenabled.

3-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

TUH

TransferUnitHalted

Whenhalted,theTransferUnitStateMachinefinishestheongoingVBUSMaccessbeforeitstops

working.Afterdeassertion,theTransferUnitStateMachinecontinuesatthepointitwashalted

before.Noreconfigurationisrequired.

0

TransferUnitnothalted

1

TransferUnithalted

Note:IftheTransferUnitStateMachinehalts,allmirroringregisterscontainedthelast

transfernotthecurrenttransferinformation.

0

TUE

TransferUnitEnabled

Enable/Disabletransferunit.

0

TransferUnitdisabled,resetTransferUnitStateMachine,completionofthecurrentVBUStransfer

cyclebutdatacouldbecorrupt.

1

TransferUnitenabled

Note:BeforeswitchingontheTransferUnit,theregistersmustbesetup.Afterre-enabling

oftheTransferUnitStateMachinethecontentsofthemoduleregistersandtheTCRisstill

valid(assumingitwascontinuouslypowered).

1038

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.4TransferStatusCurrentBuffer(TSCB)

TheTransferStatusCurrentBufferdisplaysthecurrentbufferinprogressandindicatesiftheTransfer

UnitStateMachineisidleandishalt.TheIDLEflagisclearedbywritinga‘1’toit.

Figure23-34.TransferStatusCurrentBuffer(TSCB)[offset_TU=18h]

31

21

20

16

Reserved

TSMS[4:0]

R-0

R-0

15

13

12

11

9

8

7

6

0

Reserved

STUH

Reserved

IDLE

RSVD

BN[6:0]

R-0

R-0

R-0

R/W-1

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-21.TransferStatusCurrentBuffer(TSCB)FieldDescriptions

Bit

Field

Value

Description

31-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20-16

TSMS[4:0]

TransferStateMachineStatus

Reflectsthecurrentstatusofthetransferstatemachinefordebugpurpose(onlyavailablein

debugmodeincombinationwithadebugger).InNormalOperationModethevalueofTSMS[4-0]

isalwaysreadas0.

01h

IDLEstate

TransferTriggertoSystemMemory:

02h

Startstate(TTSM_START)

03h

OutputBufferCommandMaskaccessstate(TTSM_OBCM)

04h

Requeststate(TTSM_REQ)

05h

Viewstate(TTSM_VIEW)

06h

Checkstate(TTSM_CHECK)

07h

ReadHeaderSectionaccessstate(TTSM_RDHS)

08h

ReadDataSectionaccessstate(TTSM_RDDS)

TransferTriggertoCommunicationController:

09h

Startstate(TTCC_START)

0Ah

Busystate(TTCC_IBUSY)

0Bh

Checkstate(TTCC_CHECK)

0Ch

WriteHeaderSectionaccessstate(TTCC_WRHS)

0Dh

PayloadReadstate(TTCC_PLC_READ)

0Eh

PayloadCalculationstate(TTCC_PLC_CALC)

0Fh

WriteDataSectionaccessstate(TTCC_WRDS)

10h

InputBufferCommandMaskaccessstate(TTCC_IBCM)

11h

InputBufferCommandRequestaccessstate(TTCC_IBCR)

12h

Mirrorstate(TTCC_MIRROR)

13h

Endstate(TTSM_END)

1Fh

Undefinedstate

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

STUH

StatusofTransferUnitStateMachineforHaltDetection

0

NotinHALTstatus.

1

InHALTstatus.

11-9

Reserved

0

Readreturns0.Writeshavenoeffect.

1039

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-21.TransferStatusCurrentBuffer(TSCB)FieldDescriptions(continued)

Bit

Field

Value

Description

8

IDLE

DetectsTransferStateMachineStateIDLE

WillbesetifthetransferunitstatemachineisinIDLEstateandreadytostartthenexttransfer,

butnothingisrequested.

0

IDLEstatenotreachedsincelastclear.

1

IDLEstatereached.

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-0

BN[6:0]

0-7Fh

BufferNumber

BufferNumber7-bitvalueofbuffernumber,whichiscurrentlyintransfer.Ifstatemachineenters

IDLEmodethelasttransferredbuffernumberisshown.

23.19.1.5LastTransferredBuffertoCommunicationController(LTBCC)

Showsthenumberofthelastcompletelytransferredmessagebufferfromsystemmemorytothe

communicationcontroller.

Figure23-35.LastTransferredBuffertoCommunicationController(LTBCC)[offset_TU=1Ch]

31

7

6

0

Reserved

BN[6:0]

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-22.LastTransferredBuffertoCommunicationController(LTBCC)FieldDescriptions

Bit

Field

Value

Description

31-7

Reserved.

0

Readsreturn0.Writeshavenoeffect.

6-0

BN[6:0]

0-7Fh

Buffernumber.

7-bitvalueoflastcompletelytransferredmessagebufferfromsystemmemorytothecommunication

controller.

23.19.1.6LastTransferredBuffertoSystemMemory(LTBSM)

Showsthenumberofthelastcompletelytransferredmessagebufferfromcommunicationcontrollertothe

systemmemory.

Figure23-36.LastTransferredBuffertoSystemMemory(LTBSM)[offset_TU=20h]

31

7

6

0

Reserved

BN[6:0]

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-23.LastTransferredBuffertoSystemMemory(LTBSM)FieldDescriptions

Bit

Field

Value

Description

31-7

Reserved

0

Readsreturn0.Writeshavenoeffect.

6-0

BN[6:0]

0-7Fh

Buffernumber.

7-bitvalueoflastcompletelytransferredmessagebufferfromsystemmemorytothe

communicationcontrollertothesystemmemory.

1040

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.7TransferBaseAddress(TBA)

TheTransferBaseAddressregisterholdsa32-bitaligned32-bitbase-pointer,whichdefinesthebase

addressforthedatatobetransferred.

NOTE:AwritetothisregisteralsomodifiestheNTBAregister.

Figure23-37.TransferBaseAddress(TBA)[offset_TU=24h]

31

16

TBA(31-16)

R/W-0

15

0

TBA(15-0)

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-24.TransferBaseAddress(TBA)FieldDescriptions

Bit

Field

Value

Description

31-0

TBA(31-0)

0-FFFFFFFFh

TransferBaseAddress.32-bitbasepointer,2LSBarenotsignificant(32-bitaccesses

only)andwillalwaysbe0.

23.19.1.8NextTransferBaseAddress(NTBA)

TheNextTransferBaseAddressholda32bitaligned32bitbase-pointertobeloadedintoTBAduringnext

cyclestart.

NOTE:AwriteonTBAregisteralsomodifiestheNTBAregister.

Figure23-38.NextTransferBaseAddress(NTBA)[offset_TU=28h]

31

16

NTBA(31-16)

R/W-0

15

0

NTBA(15-0)

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-25.NextTransferBaseAddress(NTBA)FieldDescriptions

Bit

Field

Value

Description

31-0

nTBA(31-0)

0-FFFFFFFFh

NextTransferBaseAddress32-bitbasepointer,2LSBarenotsignificant(32-bit

accessesonly)willalwaysbe0.

1041

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.9BaseAddressofMirroredStatus(BAMS)

TheBaseAddressofMirroredStatusholda32-bitaligned32-bitbase-pointertobeuseformirror

transactions.FurtherdetailsaboutthetransfermirrormechanismcanbefoundintheTransferMirror

Functionsection.

Figure23-39.BaseAddressofMirroredStatus(BAMS)[offset_TU=2Ch]

31

16

BAMS(31-16)

R/W-0

15

0

BAMS(15-0)

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-26.BaseAddressofMirroredStatus(BAMS)FieldDescriptions

Bit

Field

Value

Description

31-0

BAMS(31-0)

0-FFFFFFFFh

BaseAddressofMirroredStatus32-bitbasepointer,2LSBarenotsignificant(32-bit

accessesonly)willalwaysbe0.

23.19.1.10StartAddressofMemoryProtection(SAMP)

TheStartAddressofMemoryProtectionholda32bitaddress.

Figure23-40.StartAddressofMemoryProtection(SAMP)[offset_TU=30h]

31

16

SAMP(31-16)

R/W-0

15

0

SAMP(15-0)

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-27.StartAddressofMemoryProtection(SAMP)FieldDescriptions

Bit

Field

Value

Description

31-0

SAMP(31-0)

0-FFFFFFFFh

StartAddressMemoryProtection.

Startaddressofthememoryarea,whichallowsreadandwriteaccessesfortheTransfer

UnitStateMachine.32-bitbasepointer,2LSBarenotsignificant(32-bitaccessesonly)

willalwaysbe0.

1042

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.11EndAddressofMemoryProtection(EAMP)

TheEndAddressofMemoryProtectionholda32bitaddress.

Figure23-41.EndAddressofMemoryProtection(EAMP)[offset_TU=34h]

31

16

EAMP(31-16)

R/W-0

15

0

EAMP(15-0)

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-28.EndAddressofMemoryProtection(EAMP)FieldDescriptions

Bit

Field

Value

Description

31-0

EAMP(31-0)

0-FFFFFFFFh

EndAddressMemoryProtection.

Endaddressofthememoryarea,whichallowsreadandwriteaccessesfortheTransfer

UnitStateMachine.32-bitaddress,2LSBarenotsignificant(32-bitaccessesonly)will

alwaysbe0.

1043

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.12TransfertoSystemMemoryOccurred1/2/3/4(TSMO1-4)

TheTransfertoSystemMemoryOccurredregisterreflectsthemessagebuffertransferstatusfora

transfertransactiontothesystemmemory.Four32-bitregistersreflectallpossible128messagebuffers.

NOTE:Writing1willclearabit.Writing0willleaveabitunchanged.

Figure23-42.TransfertoSystemMemoryOccurred1(TSMO1)[offset_TU=40h]

31

16

TSMO1(31-16)

R/C-0

15

0

TSMO1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-29.TransfertoSystemMemoryOccurred1(TSMO1)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMO1(31-0)

TransfertoSystemMemoryOccurredRegister1.

Theregisterbits0to31correspondtomessagebuffers0to31.Eachbitoftheregisterreflectsa

finishedmessagebuffertransfertothesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

Figure23-43.TransfertoSystemMemoryOccurred2(TSMO2)[offset_TU=44h]

31

16

TSMO2(31-16)

R/C-0

15

0

TSMO2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-30.TransfertoSystemMemoryOccurred2(TSMO2)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMO2(31-0)

TransfertoSystemMemoryOccurredRegister2.

Theregisterbits0to31correspondtomessagebuffers32to63.Eachbitoftheregisterreflectsa

finishedmessagebuffertransfertothesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

1044

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-44.TransfertoSystemMemoryOccurred3(TSMO3)[offset_TU=48h]

31

16

TSMO3(31-16)

R/C-0

15

0

TSMO3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-31.TransfertoSystemMemoryOccurred3(TSMO3)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMO3(31-0)

TransfertoSystemMemoryOccurredRegister3.

Theregisterbits0to31correspondtomessagebuffers64to95.Eachbitoftheregisterreflectsa

finishedmessagebuffertransfertothesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

Figure23-45.TransfertoSystemMemoryOccurred4(TSMO4)[offset_TU=4Ch]

31

16

TSMO4(31-16)

R/C-0

15

0

TSMO4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-32.TransfertoSystemMemoryOccurred4(TSMO4)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMO4(31-0)

TransfertoSystemMemoryOccurredRegister4.

Theregisterbits0to31correspondtomessagebuffers96to127.Eachbitoftheregisterreflectsa

finishedmessagebuffertransfertothesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

1045

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.13TransfertoCommunicationControllerOccurred1/2/3/4(TCCO1-4)

TheTransfertoCommunicationControllerOccurredreflectsthemessagebuffertransferstatusfora

VBUSPmastertransfertransactionfromthesystemmemory.Four32-bitregistersreflectallpossible128

messagebuffers.

NOTE:Writing1willclearabit.Writing0willleaveabitunchanged.

Figure23-46.TransfertoCommunicationControllerOccurred1(TCCO1)[offset_TU=50h]

31

16

TCCO1(31-16)

R/C-0

15

0

TCCO1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-33.(TransfertoCommunicationControllerOccurred1(TCCO1)FieldDescriptions

Bit

Field

Value

Description

31-0

TCCO1(31-0)

TransfertoCommunicationControllerOccurredRegister1.

Theregisterbits0to31correspondtomessagebuffers0to31.Eachbitoftheregisterreflectsa

finishedmessagebuffertransferfromthesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

Figure23-47.TransfertoCommunicationControllerOccurred2(TCCO2)[offset_TU=54h]

31

16

TCCO2(31-16)

R/C-0

15

0

TCCO2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-34.(TransfertoCommunicationControllerOccurred2(TCCO2)FieldDescriptions

Bit

Field

Value

Description

31-0

TCCO2(31-0)

TransfertoCommunicationControllerOccurredRegister2.

Theregisterbits0to31correspondtomessagebuffers32to63.Eachbitoftheregisterreflectsa

finishedmessagebuffertransferfromthesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

1046

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-48.TransfertoCommunicationControllerOccurred3(TCCO3)[offset_TU=58h]

31

16

TCCO3(31-16)

R/C-0

15

0

TCCO3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-35.(TransfertoCommunicationControllerOccurred3(TCCO3)FieldDescriptions

Bit

Field

Value

Description

31-0

TCCO3(31-0)

TransfertoCommunicationControllerOccurredRegister3.

Theregisterbits0to31correspondtomessagebuffers64to65.Eachbitoftheregisterreflectsa

finishedmessagebuffertransferfromthesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

Figure23-49.TransfertoCommunicationControllerOccurred4(TCCO4)[offset_TU=5Ch]

31

16

TCCO4(31-16)

R/C-0

15

0

TCCO4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-36.(TransfertoCommunicationControllerOccurred4(TCCO4)FieldDescriptions

Bit

Field

Value

Description

31-0

TCCO4(31-0)

TransfertoCommunicationControllerOccurredRegister4.

Theregisterbits0to31correspondtomessagebuffers96to127.Eachbitoftheregisterreflectsa

finishedmessagebuffertransferfromthesystemmemory.

0

Notransferoccurred.

1

Transferoccurred.

1047

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.14TransferOccurredOffset(TOOFF)

TheTransferOccurredOffsetregistercontainstheoffsetvectortothehighestpriorpendingtransfer

occurredinterruptandthetransferdirection.

Afterareadaccessthetransferoccurredflagisclearedandtheregistercontentswillbeupdated

automatically.

Figure23-50.TransferOccurredOffset(TOOFF)[offset_TU=60h]

31

16

Reserved

R-0

15

9

8

7

0

Reserved

TDIR

OFF(7-0)

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-37.(TransferOccurredOffset(TOOFF)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8

TDIR

TransferDirection.IncasethesameinterruptoccursforcommunicationcontrollerandTransferUnit

StateMachinetransfersthePRIObitintheGlobalControlregisterdecidesaboutthehigherpriority.

0

AtransfertoSystemMemoryoccurred.

1

AtransfertotheCommunicationControlleroccurred.

7-0

OFF(7-0)

OffsetVector

0

Offsetnotvalid(notransferoccurred,interruptpending).

1h

Interruptpendingforbuffer0.

2h

Interruptpendingforbuffer1.

3h

Interruptpendingforbuffer2.

...

80h

Interruptpendingforbuffer127.

81h

Reserved

...

FFh

Reserved

1048

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.15ParityErrorAddress(PEADR)

AfteraparityerrorintheTransferConfigurationRAMoccurred,theaffectedaddressisstoredinthisnot

resettableregister.

ThecontentsoftheParityErrorAddressregisteraswellasthePEbitintheTransferErrorInterruptFlag

(TEIF)registerisclearedautomaticallywhenreadingtheParityErrorAddressregister.

Figure23-51.ParityErrorAddress(PEADR)[offset_TU=70h]

31

9

8

0

Reserved

ADR(8-0)

R-0

R/C-U

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;U=Undefined;-n=valueafterreset

NOTE:AparityerrorcanonlybeindicatedbythePEbitofTEIR(16)registerwhenPEADRis

cleared.SincethecontentsofPEADRisundefinedafterreset,itisrecommendedtoclear

theregisterbyreadingit.

Table23-38.ParityErrorAddress(PEADR)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8-0

ADR(8-0)

0-1FFh

AddressoffailingTCRlocation.

ADR(8-2)istheTCRwordaddressweretheparityerroroccurred.

ADR(1-0)canbeusedtofindthefailingbyteintheTCRwordtheparityerroroccurred.

Table23-39.CodingofParityErrorAddress

ParityErrorinByte0

ParityErrorinByte2

ParityErrorinByte1

(LSB)

ADR1

ADR0

-

-

1

0

1

-

1

0

1

0

1

0

0

1

1

0

0

0

0

0

NOTE:NoByte3isdefinedinTCR.

1049

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.16TransferErrorInterruptFlag(TEIF)

TheTransferErrorInterruptFlagregisterincludestheTransferUniterrorflags.ThebitsintheTEIFare

clearedbywritinga1.

Figure23-52.TransferErrorInterruptFlag(TEIF)[offset_TU=74h]

31

18

17

16

Reserved

MPV

PE

R-0

R/C-0

R/C-0

15

11

10

8

7

6

4

3

2

1

0

Reserved

RSTAT(2-0)

RSVD

WSTAT(2-0)

Reserved

TNR

FAC

R-0

R/C-0

R-0

R/C-0

R-0

R/C-0

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table23-40.TransferErrorInterruptFlag(TEIF)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readsreturn0.Writeshavenoeffect.

17

MPV

MemoryProtectionViolation.

0

NoMPVoccurred.

1

MPVoccurred.

16

PE

ParityError.Theflagsignalsaparityerrortothehost.TheflagissetwhenaparityerrorinTCRis

detected.

0

Noparityerroroccurred.

1

Parityerroroccurred.

15-11

Reserved

0

Readsreturn0.Writeshavenoeffect.

10-8

RSTAT(2-0)

StatusofVBUSonreadtransfers.

0

Success.

1h

Addressingerror.

2h

Protectionerror.

3h

Timeouterror.

4h

Dataerror.

5h

Unsupportedaddressingmodeerror.

6h

Reserved

7h

Exclusivereadfailure.

Note:Anyvalueotherthan000indicatesaVBUSreaderror.TheinformationofthespecificVBUS

faultisfordebugreasonsonlyandisnotrelevantfornormalusage.

7

Reserved

0

Readsreturn0.Writeshavenoeffect.

6-4

WSTAT(2-0)

StatusofVBUSonwritetransfers.

0

Success.

1h

Addressingerror.

2h

Protectionerror.

3h

Timeouterror.

4h

Reserved.

5h

Unsupportedaddressingmodeerror.

6h

Reserved.

7h

Exclusivewritefailure.

Note:Anyvalueotherthan000indicatesaVBUSreaderror.TheinformationofthespecificVBUS

faultisfordebugreasonsonlyandisnotrelevantfornormalusage.

3-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1

TNR

TransferNotReady.

0

TransferstartedandNTBAisloadedtoTBA.

1050

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-40.TransferErrorInterruptFlag(TEIF)FieldDescriptions(continued)

Bit

Field

Value

Description

1

TransferisnotreadyoncommunicationcyclestartandthereforeNTBAisnotloadedtoTBA.

0

FAC

ForbiddenAccess.

0

Noforbiddenaccessoccurred.

1

AforbiddenCPUaccesstoIBForOBFoccurredwhentheTransferUnitStateMachineisenabled.

NOTE:MemoryProtectionViolation(MPV)andParityError(PE)interruptsarenonmaskableand

cannotbedisabled.ThereforethebitsMPVandPEarenotpartoftheTransferError

InterruptEnableSet/Reset(TEIRES/R)registers.

23.19.1.17TransferErrorInterruptEnableSet/Reset(TEIRES/R)

TheTransferErrorInterruptEnableSetcontrolstheinterruptactivationofinterruptlineTU_Int1.An

interruptisgeneratedifboththeinterruptflaginTEIFandthecorrespondingbitinTEIRESareset.

Exceptionsarethememoryprotectionviolation(MPV)andtheparity(PE)error,whicharerelatedtonon

maskableinterruptsandthereforearenotpartoftheTEIRS/Rregisters.Thoseerrorshaveprivateerror

lines(TU_MPV_errandTU_UCT_err),whichcanbeconnectedtotheVectoredInterruptModule(VIM)

and/ortheErrorSignalingModule(ESM).Pleaserefertothespecificdevicedatasheetformoredetails

aboutthesignalhookup.

ATransferErrorInterruptisenabledbywriting‘1’toTEIRESregisteranddisabledbywriting‘1’to

TIERERregister.Writingof‘0’hasnoeffect.Readingfrombothaddresseswillresultinthesamevalue.

Figure23-53.TransferErrorInterruptEnableSet(TEIRES)[offset_TU=78h]

31

16

Reserved

R-0

15

11

10

8

7

6

4

3

2

1

0

Reserved

RSTAT(2-0)

RSVD

WSTAT(2-0)

Reserved

TNRE

FACE

R-0

R/S-0

R-0

R/S-0

R-0

R/S-0

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;S=Set;-n=valueafterreset

Table23-41.TransferErrorInterruptEnableSet(TEIRES)

Bit

Field

Value

Description

31-11

Reserved

0

Readsreturn0.Writeshavenoeffect.

10-8

RSTATE(2-0)

ReadErrorInterruptGeneration(interruptgenerationonVBUSreadtransfererrors).

0

InterruptgenerationonVBUSreadtransfererrordisabled.

7h

InterruptgenerationonVBUSreadtransfererrorenabled.

Note:Anyvaluedifferentfrom111doesnotguaranteetheinterrupterrorgenerationofallpossible

VBUSreaderrors.

7

Reserved

0

Readsreturn0.Writeshavenoeffect.

6-4

WSTATE(2-0)

WriteErrorInterruptGeneration(interruptgenerationonVBUSwritetransfererrors).

0

InterruptgenerationonVBUSwritetransfererrordisabled.

7h

InterruptgenerationonVBUSwritetransfererrorenabled.

Note:Anyvaluedifferentfrom111doesnotguaranteetheinterrupterrorgenerationofallpossible

VBUSreaderrors.

3-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1

TNRE

TransferNotReadyEnable.

0

TNRinterruptdisabled.

1

TNRinterruptenabled.

1051

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-41.TransferErrorInterruptEnableSet(TEIRES)(continued)

Bit

Field

Value

Description

0

FACE

ForbiddenAccessEnable.

0

FACinterruptdisabled.

1

FACinterruptenabled.

Figure23-54.TransferErrorInterruptEnableReset(TEIRER)[offset_TU=7Ch]

31

16

Reserved

R-0

15

11

10

8

7

6

4

3

2

1

0

Reserved

RSTAT(2-0)

RSVD

WSTAT(2-0)

Reserved

TNRE

FACE

R-0

R/C-0

R-0

R/C-0

R-0

R/C-0

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-42.TransferErrorInterruptEnableReset(TEIRER)

Bit

Field

Value

Description

31-11

Reserved

0

Readsreturn0.Writeshavenoeffect.

10-8

RSTATE(2-0)

ReadErrorInterruptGeneration(interruptgenerationonVBUSreadtransfererrors).

0

InterruptgenerationonVBUSreadtransfererrordisabled.

7h

InterruptgenerationonVBUSreadtransfererrorenabled.

Note:Anyvaluedifferentfrom111doesnotguaranteetheinterrupterrorgenerationofallpossible

VBUSreaderrors.

7

Reserved

0

Readsreturn0.Writeshavenoeffect.

6-4

WSTATE(2-0)

WriteErrorInterruptGeneration(interruptgenerationonVBUSwritetransfererrors).

0

InterruptgenerationonVBUSwritetransfererrordisabled.

7h

InterruptgenerationonVBUSwritetransfererrorenabled.

Note:Anyvaluedifferentfrom111doesnotguaranteetheinterrupterrorgenerationofallpossible

VBUSreaderrors.

3-2

Reserved

0

Readsreturn0.Writeshavenoeffect.

1

TNRE

TransferNotReadyEnable.

0

TNRinterruptdisabled.

1

TNRinterruptenabled.

0

FACE

ForbiddenAccessEnable.

0

FACinterruptdisabled.

1

FACinterruptenabled.

1052

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.18TriggerTransfertoSystemMemorySet/Reset1/2/3/4(TTSMS/R1-4)

TheTriggerTransfertoSystemMemoryregisterselectsthecurrentmessagebufferforaTransferUnit

StateMachinetransfertransactiontosystemmemory.Four32-bitregistersreflectallpossible128

messagebuffers.

Thebitsaresetbywriting‘1’toTTSMSxandresetbywriting‘1’toTTSMRxorafterthetransferoccurred.

Writinga‘0’hasnoeffect.Readingfrombothaddresseswillresultinthesamevalue.

Figure23-55.TriggerTransfertoSystemMemorySet1(TTSMS1)[offset_TU=80h]

31

16

TTSMS1(31-16)

R/S-0

15

0

TTSMS1(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-43.TriggerTransfertoSystemMemorySet1(TTSMS1)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMS1(31-0)

TriggerTransfertoSystemMemorySet1.Theregisterbits0to31correspondtomessagebuffers

0to31.Eachbitoftheregistercontrolsthemessagebuffertransfertothesystemmemoryinthe

followingmanner(notthatonlytheleastsignificantbitofallfourcombinedTTSMregisterswill

currentlyscheduledfortransmission).

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA

Figure23-56.TriggerTransfertoSystemMemoryReset1(TTSMR1)[offset_TU=84h]

31

16

TTSMR1(31-16)

R/C-0

15

0

TTSMR1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-44.TriggerTransfertoSystemMemoryReset1(TTSMR1)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMR1(31-0)

0-FFFFFFFFh

TriggerTransfertoSystemMemoryReset1.TheTTSMR1registershowstheidentical

valuestoTTSMS1ifread.

1053

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-57.TriggerTransfertoSystemMemorySet2(TTSMS2)[offset_TU=88h]

31

16

TTSMS2(31-16)

R/S-0

15

0

TTSMS2(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-45.TriggerTransfertoSystemMemorySet2(TTSMS2)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMS2(31-0)

TriggerTransfertoSystemMemorySet2.Theregisterbits0to31correspondtomessagebuffers

32to63.

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA

Figure23-58.TriggerTransfertoSystemMemoryReset2(TTSMR2)[offset_TU=8Ch]

31

16

TTSMR2(31-16)

R/C-0

15

0

TTSMR2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-46.TriggerTransfertoSystemMemoryReset2(TTSMR2)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMR2(31-0)

0-FFFFFFFFh

TriggerTransfertoSystemMemoryReset2.TheTTSMR2registershowstheidentical

valuestoTTSMS2ifread.

TheTTSMR2registershowstheidenticalvaluestoTTSMS2ifread.

Figure23-59.TriggerTransfertoSystemMemorySet3(TTSMS3)[offset_TU=90h]

31

16

TTSMS3(31-16)

R/S-0

15

0

TTSMS3(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-47.TriggerTransfertoSystemMemorySet3(TTSMS3)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMS3(31-0)

TriggerTransfertoSystemMemorySet3.Theregisterbits0to31correspondtomessagebuffers

64to95.

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA.

1054

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-60.TriggerTransfertoSystemMemoryReset3(TTSMR3)[offset_TU=94h]

31

16

TTSMR3(31-16)

R/C-0

15

0

TTSMR3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-48.TriggerTransfertoSystemMemoryReset3(TTSMR3)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMR3(31-0)

0-FFFFFFFFh

TriggerTransfertoSystemMemoryReset3.TheTTSMR3registershowstheidentical

valuestoTTSMS3ifread.

Figure23-61.TriggerTransfertoSystemMemorySet4(TTSMS4)[offset_TU=98h]

31

16

TTSMS4(31-16)

R/S-0

15

0

TTSMS4(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-49.TriggerTransfertoSystemMemorySet4(TTSMS4)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMS4(31-0)

TriggerTransfertoSystemMemorySet4.Theregisterbits0to31correspondtomessagebuffers

96to127.

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA.

Figure23-62.TriggerTransfertoSystemMemoryReset4(TTSMR4)[offset_TU=9Ch]

31

16

TTSMR4(31-16)

R/C-0

15

0

TTSMR4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-50.TriggerTransfertoSystemMemoryReset4(TTSMR4)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMR4(31-0)

0-FFFFFFFFh

TriggerTransfertoSystemMemoryReset4.TheTTSMR4registershowstheidentical

valuestoTTSMS4ifread.

1055

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.19TriggerTransfertoCommunicationControllerSet/Reset1/2/3/4(TTCCS/R1-4)

TheTriggerTransfertoCommunicationControllerregistersselectthecurrentmessagebufferfora

TransferUnitStateMachinetransfertransactionfromsystemmemory.Four32-bitregistersreflectall

possible128messagebuffers.

Thebitsaresetbywriting‘1’toTTCCSxandresetbywriting‘1’toTTCCRxorafterthetransferoccurred.

Writinga‘0’hasnoeffect.Readingfrombothaddresseswillresultinthesamevalue.

Figure23-63.TriggerTransfertoCommunicationControllerSet1(TTCCS1)[offset_TU=A0h]

31

16

TTCCS1(31-16)

R/S-0

15

0

TTCCS1(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-51.TriggerTransfertoCommunicationControllerSet1(TTCCS1)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCS1(31-0)

TriggerTransfertoCommunicationControllerSet1.

Theregisterbits0to31correspondtomessagebuffers0to31.Eachbitoftheregistercontrolsthe

messagebuffertransfertothecommunicationcontrollerinthefollowingmanner:

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA.

Figure23-64.TriggerTransfertoCommunicationControllerReset1(TTCCR1)[offset_TU=A4h]

31

16

TTCCR1(31-16)

R/C-0

15

0

TTCCR1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-52.TriggerTransfertoCommunicationControllerReset1(TTCCR1)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCR1(31-0)

0-FFFFFFFFh

TriggerTransfertoCommunicationControllerReset1TheTTCCR1registershowsthe

identicalvaluestoTTCCS1ifread.

1056

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-65.TriggerTransfertoCommunicationControllerSet2(TTCCS2)[offset_TU=A8h]

31

16

TTCCS2(31-16)

R/S-0

15

0

TTCCS2(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-53.TriggerTransfertoCommunicationControllerSet2(TTCCS2)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCS2(31-0)

TriggerTransfertoCommunicationControllerSet2.Theregisterbits0to31correspondto

messagebuffers32to63.

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA.

Figure23-66.TriggerTransfertoCommunicationControllerReset2(TTCCR2)[offset_TU=ACh]

31

16

TTCCR2(31-16)

R/C-0

15

0

TTCCR2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-54.TriggerTransfertoCommunicationControllerReset2(TTCCR2)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCR2(31-0)

0-FFFFFFFFh

TriggerTransfertoCommunicationControllerReset2.TheTTCCR2registershowsthe

identicalvaluestoTTCCS2ifread.

Figure23-67.TriggerTransfertoCommunicationControllerSet3(TTCCS3)[offset_TU=B0h]

31

16

TTCCS3(31-16)

R/S-0

15

0

TTCCS3(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-55.TriggerTransfertoCommunicationControllerSet3(TTCCS3)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCS3(31-0)

TriggerTransfertoCommunicationControllerSet3.Theregisterbits0to31correspondto

messagebuffers64to95.Eachbitoftheregistercontrolsthemessagebuffertransfertothe

communicationcontrollerinthefollowingmanner:

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA.

1057

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-68.TriggerTransfertoCommunicationControllerReset3(TTCCR3)[offset_TU=B4h]

31

16

TTCCR3(31-16)

R/C-0

15

0

TTCCR3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-56.TriggerTransfertoCommunicationControllerReset3(TTCCR3)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCR3(31-0)

0-FFFFFFFFh

TriggerTransfertoCommunicationControllerReset3.TheTTCCR3registershowsthe

identicalvaluestoTTCCS3ifread.

Figure23-69.TriggerTransfertoCommunicationControllerSet4(TTCCS4)[offset_TU=B8h]

31

16

TTCCS4(31-16)

R/S-0

15

0

TTCCS4(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-57.TriggerTransfertoCommunicationControllerSet4(TTCCS4)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCS4(31-0)

TriggerTransfertoCommunicationControllerSet4.Theregisterbits0to31correspondto

messagebuffers96to127.Eachbitoftheregistercontrolsthemessagebuffertransfertothe

communicationcontrollerinthefollowingmanner:

0

Notransferrequest.

1

TransferbasedonaddressdefinedinTBA.

Figure23-70.TriggerTransfertoCommunicationControllerReset4(TTCCR4)[offset_TU=BCh]

31

16

TTCCR4(31-16)

R/C-0

15

0

TTCCR4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-58.TriggerTransfertoCommunicationControllerReset4(TTCCR4)FieldDescriptions

Bit

Field

Value

Description

31-0

TTCCR4(31-0)

0-FFFFFFFFh

TriggerTransfertoCommunicationControllerReset4.TheTTCCR4registershowsthe

identicalvaluestoTTCCS4ifread.

1058

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.20EnableTransferonEventtoSystemMemorySet/Reset1-4(ETESMS/R1-4)

TheEnableTransferonEventtoSystemMemorySetregistersenableamessagebuffertransfertothe

systemmemoryafterareceiveortransmitevent.Four32-bitregistersreflectallpossible128message

buffers.

Thebitsaresetbywriting‘1’toETESMSxandresetbywriting‘1’toETESMRx.Writinga‘0’hasno

effect.Readingfrombothaddresseswillresultinthesamevalue.

Figure23-71.EnableTransferonEventtoSystemMemorySet1(ETESMS1)[offset_TU=C0h]

31

16

ETESMS1(31-16)

R/S-0

15

0

ETESMS1(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-59.EnableTransferonEventtoSystemMemorySet1FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMS1(31-0)

EnableTransferonEventtoSystemMemorySet1.Theregisterbits0to31correspondto

messagebuffers0to31.Eachbitoftheregisterenablesamessagebuffertransferoneventtothe

systemmemory:

0

Transferoneventisdisabled.

1

Transferoneventisenabled.

Figure23-72.EnableTransferonEventtoSystemMemoryReset1(ETESMR1)[offset_TU=C4h]

31

16

ETESMR1(31-16)

R/C-0

15

0

ETESMR1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-60.EnableTransferonEventtoSystemMemoryReset1(ETESMR1)FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMR1(31-0)

0-FFFFFFFFh

EnableTransferonEventtoSystemMemoryReset1.TheETESMR1registershowsthe

identicalvaluestoETESMS1ifread.

1059

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-73.EnableTransferonEventtoSystemMemorySet2(ETESMS2)[offset_TU=C8h]

31

16

ETESMS2(31-16)

R/S-0

15

0

ETESMS2(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-61.EnableTransferonEventtoSystemMemorySet2FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMS2(31-0)

EnableTransferonEventtoSystemMemorySet2.Theregisterbits0to31correspondto

messagebuffers32to63.Eachbitoftheregisterenablesamessagebuffertransferoneventto

thesystemmemory:

0

Transferoneventisdisabled.

1

Transferoneventisenabled.

Figure23-74.EnableTransferonEventtoSystemMemoryReset2(ETESMR2)[offset_TU=CCh]

31

16

ETESMR2(31-16)

R/C-0

15

0

ETESMR2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-62.EnableTransferonEventtoSystemMemoryReset2(ETESMR2)FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMR2(31-0)

0-FFFFFFFFh

EnableTransferonEventtoSystemMemoryReset2.TheETESMR2registershowsthe

identicalvaluestoETESMS2ifread.

Figure23-75.EnableTransferonEventtoSystemMemorySet3(ETESMS3)[offset_TU=D0h]

31

16

ETESMS3(31-16)

R/S-0

15

0

ETESMS3(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-63.EnableTransferonEventtoSystemMemorySet3FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMS3(31-0)

EnableTransferonEventtoSystemMemorySet3.Theregisterbits0to31correspondto

messagebuffers64to95.Eachbitoftheregisterenablesamessagebuffertransferoneventto

thesystemmemory:

0

Transferoneventisdisabled.

1

Transferoneventisenabled.

1060

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-76.EnableTransferonEventtoSystemMemoryReset3(ETESMR3)[offset_TU=D4h]

31

16

ETESMR3(31-16)

R/C-0

15

0

ETESMR3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-64.EnableTransferonEventtoSystemMemoryReset3(ETESMR3)FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMR3(31-0)

0-FFFFFFFFh

EnableTransferonEventtoSystemMemoryReset3.TheETESMR3registershowsthe

identicalvaluestoETESMS3ifread.

Figure23-77.EnableTransferonEventtoSystemMemorySet4(ETESMS4)[offset_TU=D8h]

31

16

ETESMS4(31-16)

R/S-0

15

0

ETESMS4(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-65.EnableTransferonEventtoSystemMemorySet4FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMS4(31-0)

EnableTransferonEventtoSystemMemorySet4.Theregisterbits0to31correspondto

messagebuffers96to127.Eachbitoftheregisterenablesamessagebuffertransferoneventto

thesystemmemory:

0

Transferoneventisdisabled.

1

Transferoneventisenabled.

Figure23-78.EnableTransferonEventtoSystemMemoryReset4(ETESMR4)[offset_TU=DCh]

31

16

ETESMR4(31-16)

R/C-0

15

0

ETESMR4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-66.EnableTransferonEventtoSystemMemoryReset4(ETESMR4)FieldDescriptions

Bit

Field

Value

Description

31-0

ETESMR4(31-0)

0-FFFFFFFFh

EnableTransferonEventtoSystemMemoryReset4.TheETESMR4registershowsthe

identicalvaluestoETESMS4ifread.

1061

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.21ClearonEventtoSystemMemorySet/Reset1/2/3/4(CESMS/R1-4)

TheClearonEventtoSystemMemoryregistersdisablesanenabledtransferonevent(enabledin

ETESM)afterareceiveortransmitevent.Four32-bitregistersreflectallpossible128messagebuffers.

Thebitsaresetbywriting‘1’toCESMSxandresetbywriting‘1’toCESMRx.Writinga‘0’hasnoeffect.

Readingfrombothaddresseswillresultinthesamevalue.

Figure23-79.ClearonEventtoSystemMemorySet1(CESMS1)[offset_TU=E0h]

31

16

CESMS1(31-16)

R/S-0

15

0

CESMS1(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-67.ClearonEventtoSystemMemorySet1(CESMS1)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMS1(31-0)

ClearonEventtoSystemMemorySet1.Theregisterbits0to31correspondtomessagebuffers0

to31.EachbitoftheregisterenablesanautomaticclearofthecorrespondingETESM1bitaftera

receiveortransmitevent:

0

Noclear.

1

Activateclear.

Figure23-80.ClearonEventtoSystemMemoryReset1(CESMR1)[offset_TU=E4h]

31

16

CESMR1(31-16)

R/C-0

15

0

CESMR1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-68.ClearonEventtoSystemMemoryReset1(CESMR1)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMR1(31-0)

0-FFFFFFFFh

ClearonEventtoSystemMemoryReset1.TheCESMR1registershowstheidentical

valuestoCESMS1ifread.

1062

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-81.ClearonEventtoSystemMemorySet2(CESMS2)[offset_TU=E8h]

31

16

CESMS2(31-16)

R/S-0

15

0

CESMS2(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-69.ClearonEventtoSystemMemorySet2(CESMS2)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMS2(31-0)

ClearonEventtoSystemMemorySet2.Theregisterbits0to31correspondtomessagebuffers

32to63.EachbitoftheregisterenablesanautomaticclearofthecorrespondingETESM2bitafter

areceiveortransmitevent:

0

Noclear.

1

Activateclear.

Figure23-82.ClearonEventtoSystemMemoryReset2(CESMR2)[offset_TU=ECh]

31

16

CESMR2(31-16)

R/C-0

15

0

CESMR2(15-0)

R/C-0

LLEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-70.ClearonEventtoSystemMemoryReset2(CESMR2)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMR2(31-0)

0-FFFFFFFFh

ClearonEventtoSystemMemoryReset2.TheCESMR2registershowstheidentical

valuestoCESMS2ifread.

Figure23-83.ClearonEventtoSystemMemorySet3(CESMS3)[offset_TU=F0h]

31

16

CESMS3(31-16)

R/S-0

15

0

CESMS3(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-71.ClearonEventtoSystemMemorySet3(CESMS3)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMS3(31-0)

ClearonEventtoSystemMemorySet3.Theregisterbits0to31correspondtomessagebuffers

64to95.EachbitoftheregisterenablesanautomaticclearofthecorrespondingETESM3bitafter

areceiveortransmitevent:

0

Noclear.

1

Activateclear.

1063

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-84.ClearonEventtoSystemMemoryReset3(CESMR3)[offset_TU=F4h]

31

16

CESMR3(31-16)

R/C-0

15

0

CESMR3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-72.ClearonEventtoSystemMemoryReset3(CESMR3)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMR3(31-0)

0-FFFFFFFFh

ClearonEventtoSystemMemoryReset3.TheCESMR3registershowstheidentical

valuestoCESMS3ifread.

Figure23-85.ClearonEventtoSystemMemorySet4(CESMS4)[offset_TU=F8h]

31

16

CESMS4(31-16)

R/S-0

15

0

CESMS4(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-73.ClearonEventtoSystemMemorySet4(CESMS4)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMS4(31-0)

ClearonEventtoSystemMemorySet4.Theregisterbits0to31correspondtomessagebuffers

96to127.EachbitoftheregisterenablesanautomaticclearofthecorrespondingETESM4bit

afterareceiveortransmitevent:

0

Noclear.

1

Activateclear.

Figure23-86.ClearonEventtoSystemMemoryReset4(CESMR4)[offset_TU=FCh]

31

16

CESMR4(31-16)

R/C-0

15

0

CESMR4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-74.ClearonEventtoSystemMemoryReset4(CESMR4)FieldDescriptions

Bit

Field

Value

Description

31-0

CESMR4(31-0)

0-FFFFFFFFh

ClearonEventtoSystemMemoryReset4.TheCESMR4registershowstheidentical

valuestoCESMS4ifread.

1064

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.22TransfertoSystemMemoryInterruptEnableSet/Reset1/2/3/4(TSMIES/R1-4)

TheTransfertoSystemMemoryInterruptEnableregistersenabletheinterruptgenerationoninterruptline

TU_Int0,afteratransfertothesystemmemoryoccurred(flaggedinTSMO).Four32-bitRegistersreflect

all128MB’s.

Thebitsaresetbywriting‘1’toTSMIESxandresetbywriting‘1’toTSMIERx.Writinga‘0’hasnoeffect.

Readingfrombothaddresseswillresultinthesamevalue.

Figure23-87.TransfertoSystemMemoryInterruptEnableSet1(TSMIES1)[offset_TU=100h]

31

16

TSMIES1(31-16)

R/S-0

15

0

TSMIES1(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-75.TransfertoSystemMemoryInterruptEnableSet1(TSMIES1)FieldDescriptions

Bit

Field

Value

Description

31-0

TTSMIES1(31-0)

TransfertoSystemMemoryInterruptEnableSet1.Theregisterbits0to31correspondto

messagebuffers0to31.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursifthe

correspondingTSMO1bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-88.TransfertoSystemMemoryInterruptEnableReset1(TSMIER1)[offset_TU=104h]

31

16

TSMIER1(31-16)

R/C-0

15

0

TSMIER1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-76.TransfertoSystemMemoryInterruptEnableReset1(TSMIER1)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIER1(31-0)

0-FFFFFFFFh

TransfertoSystemMemoryInterruptEnableReset1.TheTSMIER1registershowsthe

identicalvaluestoTSMIES1ifread.

1065

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-89.TransfertoSystemMemoryInterruptEnableSet2(TSMIES2)[offset_TU=108h]

31

16

TSMIES2(31-16)

R/S-0

15

0

TSMIES2(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-77.TransfertoSystemMemoryInterruptEnableSet2(TSMIES2)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIES2(31-0)

TransfertoSystemMemoryInterruptEnableSet2.Theregisterbits0to31correspondto

messagebuffers32to63.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursifthe

correspondingTSMO2bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-90.TransfertoSystemMemoryInterruptEnableReset2(TSMIER2)[offset_TU=10Ch]

31

16

TSMIER2(31-16)

RC-0

15

0

TSMIER2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-78.TransfertoSystemMemoryInterruptEnableReset2(TSMIER2)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIER2(31-0)

0-FFFFFFFFh

TransfertoSystemMemoryInterruptEnableReset2.TheTSMIER2registershowsthe

identicalvaluestoTSMIES2ifread.

Figure23-91.TransfertoSystemMemoryInterruptEnableSet3(TSMIES3)[offset_TU=110h]

31

16

TSMIES3(31-16)

R/S-0

15

0

TSMIES3(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-79.TransfertoSystemMemoryInterruptEnableSet3(TSMIES3)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIES3(31-0)

TransfertoSystemMemoryInterruptEnableSet3.Theregisterbits0to31correspondto

messagebuffers64to95.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursifthe

correspondingTSMO3bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

1066

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-92.TransfertoSystemMemoryInterruptEnableReset3(TSMIER3)[offset_TU=114h]

31

16

TSMIER3(31-16)

R/C-0

15

0

TSMIER3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-80.TransfertoSystemMemoryInterruptEnableReset3(TSMIER3)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIER3(31-0)

0-FFFFFFFFh

TransfertoSystemMemoryInterruptEnableReset3.TheTSMIER3registershowsthe

identicalvaluestoTSMIES3ifread.

Figure23-93.TransfertoSystemMemoryInterruptEnableSet4(TSMIES4)[offset_TU=118h]

31

16

TSMIES4(31-16)

R/S-0

15

0

TSMIES4(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-81.TransfertoSystemMemoryInterruptEnableSet4(TSMIES4)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIES4(31-0)

TransfertoSystemMemoryInterruptEnableSet4.Theregisterbits0to31correspondto

messagebuffers96to127.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursifthe

correspondingTSMO4bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-94.TransfertoSystemMemoryInterruptEnableReset4(TSMIER4)[offset_TU=11Ch]

31

16

TSMIER4(31-16)

R/C-0

15

0

TSMIER4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-82.TransfertoSystemMemoryInterruptEnableReset4(TSMIER4)FieldDescriptions

Bit

Field

Value

Description

31-0

TSMIER4(31-0)

0-FFFFFFFFh

TransfertoSystemMemoryInterruptEnableReset4.TheTSMIER4registershowsthe

identicalvaluestoTSMIES4ifread.

1067

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.23TransfertoCommunicationControllerInterruptEnableSet/Reset1/2/3/4(TCCIES/R1-4)

TheTransfertoCommunicationControllerInterruptEnableregistersenablestheinterruptgenerationon

interruptlineTU_Int0,afteratransfertothecommunicationcontrolleroccurred(flaggedinTCCO).Four

32-bitRegistersreflectall128MBs.

Thebitsaresetbywriting‘1’toTCCIESxandresetbywriting‘1’toTCCIERx.Writinga‘0’hasnoeffect.

Readingfrombothaddresseswillresultinthesamevalue.

Figure23-95.TransfertoCommunicationControllerInterruptEnableSet1(TCCIES1)

[offset_TU=120h]

31

16

TCCIES1(31-16)

R/S-0

15

0

TCCIES1(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-83.TransfertoCommunicationControllerInterruptEnableSet1(TCCIES1)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIES1(31-0)

TransfertoCommunicationControllerInterruptEnableSet1.Theregisterbits0to31correspond

tomessagebuffers0to31.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursifthe

correspondingTCCO1bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-96.TransfertoCommunicationControllerInterruptEnableReset1(TCCIER1)

[offset_TU=124h]

31

16

TCCIER1(31-16)

R/C-0

15

0

TCCIER1(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-84.TransfertoCommunicationControllerInterruptEnableReset1(TCCIER1)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIER1(31-0)

0-FFFFFFFFh

TransfertoCommunicationControllerInterruptEnableReset1.TheTCCIER1register

showstheidenticalvaluestoTCCIES1ifread.

1068

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-97.TransfertoCommunicationControllerInterruptEnableSet2(TCCIES2)

[offset_TU=128h]

31

16

TCCIES2(31-16)

R/S-0

15

0

TCCIES2(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-85.TransfertoCommunicationControllerInterruptEnableSet2(TCCIES2)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIES2(31-0)

TransfertoCommunicationControllerInterruptEnableSet2.Theregisterbits0to31correspond

tomessagebuffers32to63.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursif

thecorrespondingTCCO2bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-98.TransfertoCommunicationControllerInterruptEnableReset2(TCCIER2)

[offset_TU=12Ch]

31

16

TCCIER2(31-16)

R/C-0

15

0

TCCIER2(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-86.TransfertoCommunicationControllerInterruptEnableReset2(TCCIER2)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIER2(31-0)

0-FFFFFFFFh

TransfertoCommunicationControllerInterruptEnableReset2.TheTCCIER2register

showstheidenticalvaluestoTCCIES2ifread.

1069

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-99.TransfertoCommunicationControllerInterruptEnableSet3(TCCIES3)

[offset_TU=130h]

31

16

TCCIES3(31-16)

R/S-0

15

0

TCCIES3(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-87.TransfertoCommunicationControllerInterruptEnableSet3(TCCIES3)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIES3(31-0)

TransfertoCommunicationControllerInterruptEnableSet3.Theregisterbits0to31correspond

tomessagebuffers64to95.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursif

thecorrespondingTCCO3bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-100.TransfertoCommunicationControllerInterruptEnableReset3(TCCIER3)

[offset_TU=134h]

31

16

TCCIER3(31-16)

R/C-0

15

0

TCCIER3(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-88.TransfertoCommunicationControllerInterruptEnableReset3(TCCIER3)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIER3(31-0)

0-FFFFFFFFh

TransfertoCommunicationControllerInterruptEnableReset3.TheTCCIER3register

showstheidenticalvaluestoTCCIES3ifread.

1070

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-101.TransfertoCommunicationControllerInterruptEnableSet4(TCCIES4)

[offset_TU=138h]

31

16

TCCIES4(31-16)

R/S-0

15

0

TCCIES4(15-0)

R/S-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-89.TransfertoCommunicationControllerInterruptEnableSet4(TCCIES4)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIES4(31-0)

TransfertoCommunicationControllerInterruptEnableSet4.Theregisterbits0to31correspond

tomessagebuffers96to127.Eachbitoftheregisterenablesapotentialinterrupt,whichoccursif

thecorrespondingTCCO4bitisset:

0

Nointerrupt.

1

Interruptisgenerated.

Figure23-102.TransfertoCommunicationControllerInterruptEnableReset4(TCCIER4)

[offset_TU=13Ch]

31

16

TCCIER4(31-16)

R/C-0

15

0

TCCIER4(15-0)

R/C-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table23-90.TransfertoCommunicationControllerInterruptEnableReset4(TCCIER4)Field

Descriptions

Bit

Field

Value

Description

31-0

TCCIER4(31-0)

0-FFFFFFFFh

TransfertoCommunicationControllerInterruptEnableReset4.TheTCCIER4register

showstheidenticalvaluestoTCCIES4ifread.

1071

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.1.24TransferConfigurationRAM(TCR)

TheTCRconsistsof128entries,each19bitwide.TheTCRisparityprotected.Theparityprotectioncan

beswitchedon/offbythe4-bitkey(PEL(3-0))intheGlobalControlSet/Reset(GCS/RF)registers.

Figure23-103.TransferConfigurationRAM(TCR)[offset_TU_RAM=0000h-01FFh]

31

19

18

17

16

Reserved

STXR

THTSM

TPTSM

R-0

R/W-0

R/W-0

R/W-0

15

14

13

0

THTCC

TPTCC

TSO(13-0)

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-91.TransferConfigurationRAM(TCR)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturn0.Writeshavenoeffect.

18

STXR

SetTransmitRequest.

Controlset/resetofbuffertransmitrequestsinthecommunicationcontroller.

0

TransferUnitStateMachinewillsetIBCM.STXRHto0duringatransfertothecommunication

controller.

1

TransferUnitStateMachinewillsetIBCM.STXRHto1duringatransfertothecommunication

controller.

17

THTSM

TransferHeadertoSystemMemory.

0

TransferUnitStateMachinewillnottransferbufferheadertosystemmemory.

1

TransferUnitStateMachinewilltransferbufferheadertosystemmemory.

16

TPTSM

TransferPayloadtoSystemMemory.

0

TransferUnitStateMachinewillnottransferbufferpayloadtosystemmemory.

1

TransferUnitStateMachinewilltransferbufferpayloadtosystemmemory.

15

THTCC

TransferHeadertoCommunicationController.

0

TransferUnitStateMachinewillnottransferbufferheadertothecommunicationcontroller.

1

TransferUnitStateMachinewilltransferbufferheadertothecommunicationcontroller.

14

TPTCC

TransferPayloadtoCommunicationController.

0

TransferUnitStateMachinewillnottransferbufferpayloadtothecommunicationcontroller.

1

TransferUnitStateMachinewilltransferbufferpayloadtothecommunicationcontroller.

13-0

TSO(13-0)

TransferStartOffset.

0

14-bitbufferaddressoffsetinsystemmemory.Theresultingaddressinsystemmemoryis

computedbyaddingthe32-bitalignedbufferaddressoffset(TSO(13-0)=bufferaddressoffsetbits

15:2)tothebaseaddressdefinedintheTBAregister.

1

Example:ATSO(13-0)contentsof0x40resultsinaTransferStartOffsetof0x40*4=0x100

1072

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.1.25TCRParityTestMode

Inparitytestmode(PEFTbitissetinGlobalControlRegister(GC))theparityinformationarevisibleand

canbereadorwritten.ThecorrespondingTCRentrycanbefoundbysubtracting0x200fromtheTCR

offset.

Figure23-104.ParityInformationinTCRParityTestMode[offset_TU_RAM=0200h-03FFh]

31

16

Reserved

PAB2

R-0

R/W-0

15

9

8

7

1

0

Reserved

PAB1

Reserved

PAB0

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-92.ParityInformationinTCRParityTestModeFieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturn0.Writeshavenoeffect.

16

PAB2

ParityBitforTCRxByte2.Parityinformationforbyte2ofTCRx(18-16).ReservedTCRbitsare

ignoredforparitycalculation.

15-9

Reserved

0

Readsreturn0.Writeshavenoeffect.

8

PAB1

ParityBitforTCRxByte1.Parityinformationforbyte1ofTCRx(15:8).

7-1

Reserved

0

Readsreturn0.Writeshavenoeffect.

0

PAB0

ParityBitforByte0.

1073

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2CommunicationControllerRegisters

TheFlexRayCommunicationControllermoduleallocatesanaddressspaceof2Kbytes(0000hto07FFh).

Theregistersareorganizedas32-bitregisters.8/16-bitaccessesarealsosupported.CPUaccesstothe

messageRAMisdonethroughtheinputandoutputbuffers.Theybufferdatatobetransferredtoandfrom

themessageRAMundercontrolofthemessagehandler,avoidingconflictsbetweenCPUaccessesand

messagereception/transmission.AlternativelytoincreaseperformancetheTransferUnitcanbeusedfor

transferringbufferdata.

Thetestregisterslocatedonaddress0010hand0014harewritableonlyundertheconditions.

TheassignmentofthemessagebuffersisdoneaccordingtotheschemeshowninFigure23-105.The

numberNofavailablemessagebuffersdependsonthepayloadlengthoftheconfiguredmessagebuffers.

Themaximumnumberofmessagebuffersis128.Themaximumpayloadlengthsupportedis254bytes.

Themessagebuffersareseparatedintothreeconsecutivegroups;seeFigure23-105:

•Staticbuffers-Transmit/receivebuffersassignedtostaticsegment

•Static+Dynamicbuffers-Transmit/receivebuffersassignedtostaticordynamicsegment

•FIFO-ReceiveFIFO

ThemessagebufferseparationconfigurationcanbechangedinDEFAULT_CONFIGorCONFIGstate

onlybyprogrammingregisterMRC.

Thefirstgroupstartswithmessagebuffer0andconsistsofstaticmessagebuffersonly.Messagebuffer0

isdedicatedtoholdthestartup/syncframeorthesingleslotframe,ifthenodetransmitsone,as

configuredbySUCC1.TXST,SUCC1.TXSY,andSUCC1.TSM.Inaddition,messagebuffer1maybeused

forsyncframetransmissionincasethatsyncframesorsingle-slotframesshouldhavedifferentpayloads

onthetwochannels.InthiscasebitMRC.SPLMhastobeprogrammedto1andmessagebuffers0and1

havetobeconfiguredwiththekeyslotIDandcanbe(re)configuredinDEFAULT_CONFIGorCONFIG

stateonly.

Thesecondgroupconsistsofmessagebuffersassignedtothestaticortothedynamicsegment.

Messagebuffersbelongingtothisgroupmaybereconfiguredduringruntimefromdynamictostaticor

viceversadependingonthestateofMRC.SEC(1-0).

ThemessagebuffersbelongingtothethirdgroupareconcatenatedtoasinglereceiveFIFO.

Figure23-105.MessageBufferAssignment

MessageBuffer0

⇓StaticBuffers

MessageBuffer1

⇓Static+DynamicBuffers

...

⇓FIFO

MessageBufferN-1

MessageBufferN

1074

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-93.CommunicationControllerRegisterMap

Offset

Acronym

RegisterDescription

Section

SpecialRegisters

0-0Ch

Reserved

Reserved

10h

TEST1

TestRegister1

Section23.19.2.1.1

14h

TEST2

TestRegister2

Section23.19.2.1.2

18h

Reserved

Reserved

1Ch

LCK

LockRegister

Section23.19.2.1.3

InterruptRegisters

20h

EIR

ErrorInterruptRegister

Section23.19.2.2.1

24h

SIR

StatusInterruptRegister

Section23.19.2.2.2

28h

EILS

ErrorInterruptLineSelectRegister

Section23.19.2.2.3

2Ch

SILS

StatusInterruptLineSelectRegister

Section23.19.2.2.4

30h

EIES

ErrorInterruptEnableSetRegister

Section23.19.2.2.5

34h

EIER

ErrorInterruptEnableResetRegister

Section23.19.2.2.5

38h

SIES

StatusInterruptEnableSetRegister

Section23.19.2.2.6

3Ch

SIER

StatusInterruptEnableResetRegister

Section23.19.2.2.6

40h

ILE

InterruptLineEnableRegister

Section23.19.2.2.7

44h

T0C

Timer0ConfigurationRegister

Section23.19.2.2.8

48h

T1C

Timer1ConfigurationRegister

Section23.19.2.2.9

4Ch

STPW1

StopWatchRegister1

Section23.19.2.2.10

50h

STPW2

StopWatchRegister2

Section23.19.2.2.11

54h-7Ch

Reserved

Reserved

CommunicationControllerControlRegisters

80h

SUCC1

SUCConfigurationRegister1

Section23.19.2.3.1

84h

SUCC2

SUCConfigurationRegister2

Section23.19.2.3.2

88h

SUCC3

SUCConfigurationRegister3

Section23.19.2.3.3

8Ch

NEMC

NEMConfigurationRegister

Section23.19.2.3.4

90h

PRTC1

PRTConfigurationRegister1

Section23.19.2.3.5

94h

PRTC2

PRTConfigurationRegister2

Section23.19.2.3.6

98h

MHDC

MHDConfigurationRegister1

Section23.19.2.3.7

9Ch

Reserved

Reserved

A0h

GTUC1

GTUConfigurationRegister1

Section23.19.2.3.8

A4h

GTUC2

GTUConfigurationRegister2

Section23.19.2.3.9

A8h

GTUC3

GTUConfigurationRegister3

Section23.19.2.3.10

ACh

GTUC4

GTUConfigurationRegister4

Section23.19.2.3.11

B0h

GTUC5

GTUConfigurationRegister5

Section23.19.2.3.12

B4h

GTUC6

GTUConfigurationRegister6

Section23.19.2.3.13

B8h

GTUC7

GTUConfigurationRegister7

Section23.19.2.3.14

BCh

GTUC8

GTUConfigurationRegister8

Section23.19.2.3.15

C0h

GTUC9

GTUConfigurationRegister9

Section23.19.2.3.16

C4h

GTUC10

GTUConfigurationRegister10

Section23.19.2.3.17

C8h

GTUC11

GTUConfigurationRegister11

Section23.19.2.3.18

CCh-FCh

Reserved

Reserved

CommunicationControllerStatusRegisters

100h

CCSV

CommunicationControllerStatusVectorRegister

Section23.19.2.4.1

104h

CCEV

CommunicationControllerErrorVectorRegister

Section23.19.2.4.2

108h-10Ch

Reserved

Reserved

110h

SCV

SlotCounterValueRegister

Section23.19.2.4.3

1075

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-93.CommunicationControllerRegisterMap(continued)

Offset

Acronym

RegisterDescription

Section

11h

MTCCV

MacrotickandCycleCounterValueRegister

Section23.19.2.4.4

118h

RCV

RateCorrectionValueRegister

Section23.19.2.4.5

11Ch

OCV

OffsetCorrectionValueRegister

Section23.19.2.4.6

120h

SFS

SyncFrameStatusRegister

Section23.19.2.4.7

124h

SWNIT

SymbolWindowandNITStatusRegister

Section23.19.2.4.8

128h

ACS

AggregatedChannelStatusRegister

Section23.19.2.4.9

12Ch

Reserved

Reserved

130h-168h

ESIDn

EvenSyncIDRegister[1...15]

Section23.19.2.4.10

16Ch

Reserved

Reserved

170h-1A8h

OSIDn

OddSyncIDRegister[1...15]

Section23.19.2.4.11

1ACh

Reserved

Reserved

1B0h-1B8h

NMVn

NetworkManagementVectorRegister[1...3]

Section23.19.2.4.12

1BCh-2FCh

Reserved

Reserved

MessageBufferControlRegisters

300h

MRC

MessageRAMConfigurationRegister

Section23.19.2.5.1

304h

FRF

FIFORejectionFilterRegister

Section23.19.2.5.2

308h

FRFM

FIFORejectionFilterMaskRegister

Section23.19.2.5.3

30Ch

FCL

FIFOCriticalLevelRegister

Section23.19.2.5.4

MessageBufferStatusRegisters

310h

MHDS

MessageHandlerStatus

Section23.19.2.6.1

314h

LDTS

LastDynamicTransmitSlot

Section23.19.2.6.2

318h

FSR

FIFOStatusRegister

Section23.19.2.6.3

31Ch

MHDF

MessageHandlerConstraintsFlags

Section23.19.2.6.4

320h

TXRQ1

TransmissionRequestRegister1

Figure23-159

324h

TXRQ2

TransmissionRequestRegister2

Figure23-160

328h

TXRQ3

TransmissionRequestRegister3

Figure23-161

32Ch

TXRQ4

TransmissionRequestRegister4

Figure23-162

330h

NDAT1

NewDataRegister1

Figure23-163

334h

NDAT2

NewDataRegister2

Figure23-164

338h

NDAT3

NewDataRegister3

Figure23-165

33Ch

NDAT4

NewDataRegister4

Figure23-166

340h

MBSC1

MessageBufferStatusChangedRegister1

Figure23-167

344h

MBSC2

MessageBufferStatusChangedRegister2

Figure23-168

348h

MBSC3

MessageBufferStatusChangedRegister3

Figure23-169

34Ch

MBSC4

MessageBufferStatusChangedRegister4

Figure23-170

350h-3ECh

Reserved

Reserved

IdentificationRegisters

3F0h

CREL

CoreReleaseRegister

Section23.19.2.7.1

3F4h

ENDN

EndianRegister

Section23.19.2.7.2

3F8h-3FCh

Reserved

Reserved

InputBuffer

400h-4FCh

WRDSn

WriteDataSectionRegister[1...64]

Section23.19.2.8.1

500h

WRHS1

WriteHeaderSectionRegister1

Section23.19.2.8.2

504h

WRHS2

WriteHeaderSectionRegister2

Section23.19.2.8.3

508h

WRHS3

WriteHeaderSectionRegister3

Section23.19.2.8.4

50Ch

Reserved

Reserved

1076

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-93.CommunicationControllerRegisterMap(continued)

Offset

Acronym

RegisterDescription

Section

510h

IBCM

InputBufferCommandMaskRegister

Section23.19.2.8.5

514h

IBCR

InputBufferCommandRequestRegister

Section23.19.2.8.6

518h-5FCh

Reserved

Reserved

OutputBuffer

600h-6FCh

RDDSn

ReadDataSectionRegister[1...64]

Section23.19.2.9.1

700h

RDHS1

ReadHeaderSectionRegister1

Section23.19.2.9.2

704h

RDHS2

ReadHeaderSectionRegister2

Section23.19.2.9.3

708h

RDHS3

ReadHeaderSectionRegister3

Section23.19.2.9.4

70Ch

MBS

MessageBufferStatusRegister

Section23.19.2.9.5

710h

OBCM

OutputBufferCommandMaskRegister

Section23.19.2.9.6

714h

OBCR

OutputBufferCommandRequestRegister

Section23.19.2.9.7

718h-7FCh

Reserved

Reserved

1077

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.1SpecialRegisters

23.19.2.1.1TestRegister1(TEST1)

Testregister1holdsthecontrolbitstoconfigurethetestmodesoftheFlexRaymodule.Writeaccessto

thesebitsisonlypossibleiftheWRTENbitisset.Figure23-106andTable23-94illustratethisregister.

WhentheFlexRaymoduleisoperatedinoneofitstestmodesthatrequiresWRTENtobeset(RAMTest

Mode,I/OTestMode,AsynchronousTransmitMode,andLoopBackMode)onlytheselectedtestmode

functionalityisavailable.

NOTE:ToreturnfromtestmodeoperationtoregularFlexRayoperationwestronglyrecommendto

applyahardwarereset(PoweronResetornReset)toresetallFlexRayinternalstate

machinestotheirinitialstate.

Thetestfunctionsarenotavailableinadditiontothenormaloperationalmodefunctions,theychangethe

functionsofpartsoftheFlexRaymodule.Thereforenormaloperationasspecifiedoutsidethischapterand

asrequiredbytheFlexRayprotocolspecificationandtheFlexRayconformancetestisnotpossible.Test

modefunctionsmaynotbecombinedwitheachotherorwithFlexRayprotocolfunctions.

NOTE:TheFlexRaymoduleshouldbekeptinCONFIGstate,whileRAMTestModeTMC(1-0)=01

isenabled.

ThetestmodefeaturesareintendedforhardwaretestingorforFlexRaybusanalyzertools.Theyarenot

intendedtobeusedinFlexRayapplications.

Figure23-106.TestRegister1(TEST1)[offset_CC=10h]

31

28

27

24

23

22

21

20

19

18

17

16

CERB

CERA

Reserved

TXENB

TXENA

TXB

TXA

RXB

RXA

R-0

R-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

R-0

15

10

9

8

7

6

5

4

3

2

1

0

Reserved

AOB

AOA

Reserved

TMC

Reserved

ELBE

WRTEN

R-0

R/W-1

R-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;-n=valueafterreset

Table23-94.TestRegister1(TEST1)FieldDescriptions

Bit

Field

Value

Description

31-28

CERB

CodingErrorReportChannelB

SetwhenacodingerrorisdetectedonchannelB.ResettozerowhenregisterTEST1isreador

written.OncetheCERB[3:0]issetitwillremainunchangeduntiltheHostaccessestheTEST1

register

0

Nocodingerrordetected.

1h

HeaderCRCerrordetected.

2h

FrameCRCerrordetected.

3h

FrameStartSequenceFSStoolong.

4h

FirstbitofByteStartSequenceBSSseenLOW.

5h

SecondbitofByteStartSequenceBSSseenHIGH.

6h

FirstbitofFrameEndSequenceFESseenHIGH.

7h

SecondbitofFrameEndSequenceFESseenLOW.

8h

CAS/MTSsymbolseentooshort.

9h

CAS/MTSsymbolseentoolong.

Ah-Fh

Reserved

1078

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-94.TestRegister1(TEST1)FieldDescriptions(continued)

Bit

Field

Value

Description

27-24

CERA

CodingErrorReportChannelA

SetwhenacodingerrorisdetectedonchannelA.ResettozerowhenregisterTEST1isreador

written.OncetheCERA[3:0]issetitwillremainunchangeduntiltheHostaccessestheTEST1

register

0

Nocodingerrordetected.

1h

HeaderCRCerrordetected.

2h

FrameCRCerrordetected.

3h

FrameStartSequenceFSStoolong.

4h

FirstbitofByteStartSequenceBSSseenLOW.

5h

SecondbitofByteStartSequenceBSSseenHIGH.

6h

FirstbitofFrameEndSequenceFESseenHIGH.

7h

SecondbitofFrameEndSequenceFESseenLOW.

8h

CAS/MTSsymbolseentooshort.

9h

CAS/MTSsymbolseentoolong.

Ah-Fh

Reserved

Note:Codingerrorsarealsosignaledwhenthecommunicationcontrollerisin

MONITOR_MODE.TheerrorcodesregardingCAS/MTSsymbolsconcernonlythe

monitoredbitpattern,irrelevantwhetherthosebitpatternsoccurredinthesymbolwindow

orelsewhere.

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21

TXENB

ControlofchannelBtransmitenablepin.

0

txen2pindrivesa0

1

txen2pindrivesa1

20

TXENA

ControlofchannelAtransmitenablepin.

0

txen1pindrivesa0

1

txen1pindrivesa1

19

TXB

ControlofchannelBtransmitpin.

0

txd2pindrivesa0

1

txd2pindrivesa1

18

TXA

ControlofchannelAtransmitpin.

0

txd1pindrivesa0

1

txd1pindrivesa1

17

RXB

MonitorchannelBreceivepin.

0

rxd2=0

1

rxd2=1

16

RXA

MonitorchannelAreceivepin.

0

rxd1=0

1

rxd1=1

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

AOB

ActivityonB.ThechannelidleconditionisspecifiedintheFlexRayprotocolspecv2.1,BITSTRB

process.

0

Noactivitydetected,channelBidle

1

Activitydetected,channelBnotidle

8

AOA

ActivityonA.ThechannelidleconditionisspecifiedintheFlexRayprotocolspecv2.1,BITSTRB

process.

0

Noactivitydetected,channelAidle

1

Activitydetected,channelAnotidle

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

1079

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-94.TestRegister1(TEST1)FieldDescriptions(continued)

Bit

Field

Value

Description

5-4

TMC

Testmodecontrol.

0

Normaloperationmode,default

1h

RAMtestmode-AllRAMblocksoftheFlexRaymodulearedirectlyaccessiblebythehost.This

modeisintendedtoenabletestingoftheembeddedRAMblocksduringproductiontesting.

2h

I/Otestmode-Theoutputpinstxd1,txd2,txen1,txen2aredriventothevaluesdefinedbybits

TXA,TXB,TXENA,TXENB.Thevaluesappliedtotheinputpinsrxd1,rxd2canbereadfrom

registerbitsRXA,RXB

3h

Unused-mappedtonormaloperationmode.

3-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

ELBE

ExternalLoopBackEnable.Therearetwopossibilitiestoperformaloopbacktest.Externalloop

backviaphysicallayerorinternalloopbackforin-systemself-test(default).Incaseofaninternal

loopbackpinstxen1,2areintheirinactivestate,pinstxd1,2aresettoHIGH,pinsrxd1,2arenot

evaluated.BitELBEisevaluatedonlywhenPOCisinloopbackmodeandtestmodecontrolisin

normaloperationmodeTMC[1:0]="00".

0

Internalloopback(default)

1

Externalloopback

0

WRTEN

Writetestregisterenable.Enableswriteaccesstothetestregisters.Tosetthebitfrom0to1the

testmodekeyhastobewrittenasdefinedinLockRegister(LCK).Theunlocksequenceisnot

requiredwhenWRTENiskeptat1whileotherbitsoftheregisterarechanged.Thebitcanbe

resetto0atanytime.

0

Writeaccesstothetestregisterisdisabled.

1

Writeaccesstothetestregisterisenabled.

23.19.2.1.1.1AsynchronousTransmitMode(ATM)

Theasynchronoustransmitmodeisenteredbywriting1110tothecontrollerhostinterfacecommand

vectorCMD(3-0)intheSUCconfigurationregister1(controllerhostinterfacecommand:ATM)whilethe

communicationcontrollerisinCONFIGstateandbitWRTENinthetestregister1issetto1.Whencalled

inanyotherstateorwhenbitWRTENisnotset,CMD(3-0)willberesetto0000=

command_not_accepted.POCS(5-0)inthecommunicationcontrollerstatusvectorwillshow001110

whiletheFlexRaymoduleisinATMmode.

Asynchronoustransmitmodecanbeleftbywriting0001(controllerhostinterfacecommand:CONFIG)to

thecontrollerhostinterfacecommandvectorCMD(3-0)intheSUCconfigurationregister1.

InATMmodetransmissionofaFlexRayframeistriggeredbywritingthenumberofthecorresponding

messagebuffertotheinputbuffercommandrequestregisterwhilebitSTXRintheinputbuffercommand

maskregisterissetto1.Inthismodewakeup,startup,andclocksynchronizationarebypassed,the

controllerhostinterfacecommandSEND_MTSresultsintheimmediatetransmissionofaMTSsymbol.

MTSsymbolsreceivedwhileoperatinginATMmodewillsetthestatusinterruptflagsMTSA,Binthe

StatusInterruptRegisterlikeinmonitormode.

23.19.2.1.1.2LoopBackMode

Theloopbackmodeisenteredbywriting1111tothecontrollerhostinterfacecommandvectorCMD(3-0)

intheSUCconfigurationregister1(controllerhostinterfacecommand:LOOP_BACK)whilethe

communicationcontrollerisinCONFIGstateandbitWRTENinthetestregister1issetto1.Thiswrite

operationhastobedirectlyprecededbytwoconsecutivewriteaccessestotheConfigurationLockKey

(unlocksequence).WhencalledinanyotherstateorwhenbitWRTENisnotset,CMD(3-0)willbereset

to0000=command_not_accepted.POCS(5-0)inthecommunicationcontrollerstatusvectorwillshow00

1101whiletheFlexRaymoduleisinloopbackmode.

Loopbackmodecanbeleftbywriting0001(controllerhostinterfacecommand:CONFIG)tothecontroller

hostinterfacecommandvectorCMD(3-0)intheSUCconfigurationregister1.

Theloopbackmodeisintendedtocheckthemodulesinternaldatapaths.Normal,timetriggered

operationisnotpossibleinloopbackmode.

1080

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Therearetwopossibilitiestoperformaloopbacktest.Externalloopbackthroughthephysicallayer

(TEST1.ELBE=1)orinternalloopbackforin-systemself-test(TEST1.ELBE=0).Incaseofaninternal

loopbackpinstxen1,2_nareintheirinactivestate,pinstxd1,2areset,pinsrxd1,2arenotevaluated.

Whenthecommunicationcontrollerisinloopbackmode,aloopbacktestisstartedbythehostwritinga

messagetotheinputbufferandrequestingthetransmissionbywritingtotheinputbuffercommand

requestregister.ThemessagehandlerwilltransferthemessageintothemessageRAMandthenintothe

transientbufferoftheselectedchannel.Thechannelprotocolcontroller(PRT)willread(in32-bitwords)

themessagefromthetransmitpartofthetransientbufferandloaditintoitsRx/Txshiftregister.The

serialtransmissionisloopedbackintotheshiftregister;itscontentiswrittenintothereceivepartofthe

channelstransientbufferbeforethenextwordisloaded.

ThePRTandthemessagehandlerwillthentreatthistransmittedmessagelikeareceivedmessage,

performanacceptancefilteringonframeIDandreceivechannel,andstorethemessageintothe

messageRAM(assumingthemessagepassedtheacceptancefilter,thustestingtheacceptancefilter

logic).TheloopbacktestendswiththehostrequestingthisreceivedmessagefromthemessageRAM

andthencheckingthecontentsoftheoutputbuffer.

EachFlexRaychannelistestedseparately.TheFlexRaymodulecannotreceivemessagesfromthe

FlexRaybuswhileitisintheloopbackmode.

ThecyclecountervalueofframesusedinloopbackmodecanbeprogrammedbywritingtotheCCV(5:0)

bitsoftheMTCCVregister(writableinATMandloopbackmodeonly).

NOTE:Incaseofanoddpayloadthelasttwobytesofthelooped-backpayloadwillberightaligned

(shiftedby16bitstotheright)insidethelast32-bitdataword.

ThecontrollerhostinterfacecommandSEND_MTSresultsintheimmediatetransmissionofanMTS

symbol.TransmittedMTSsymbolswillnotcausestatusinterruptflagsMTSA,BtobesetintheStatus

InterruptRegister.MTSsymbolsreceivedwhileoperatinginloopbackmodewillsetstatusinterruptflags

MTSA,BinSystemInterruptRegisterlikeinmonitormode.ThereceptionofanMTSsymbolcanbe

emulatedbydrivingtheFlexRayreceivepinsRxD1,2tolowforthedurationofthesymbolinexternalloop

backmode,orbydrivingtheFlexRaypinsTxD1,2andTxEN1,2tolowusingtheTXA,BandTXENA,Bof

TestRegister1ininternalorexternalloopbackmode.

1081

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.1.2TestRegister2(TEST2)

Testregister2holdsallbitsrequiredforRAMtestofthesevenembeddedRAMblocksofthe

communicationcontroller.WriteaccesstothisregisterisonlypossiblewhenbitWRTENinthetest

register1isset.

Figure23-107andTable23-95illustratethisregister.

Figure23-107.TestRegister2(TEST2)[offset_CC=14h]

31

16

Reserved

R-0

15

14

13

7

6

4

3

1

0

RDPB

WRPB

Reserved

SSEL

Rsvd

RS

R-0

R/W-0

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-95.TestRegister2(TEST2)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15

RDPB

0-1

Readparitybit.ValueofparitybitreadfromtheselectedRAMlocation.

14

WRPB

0-1

Writeparitybit.ValueofparitybittobewrittentotheselectedRAMlocation

13-7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-4

SSEL

Segmentselect.ToenableaccesstothecompletemessageRAM(8192byteaddresses)the

messageRAMissegmented.

0

AccesstoRAMbytes0000hto03FFhenabled

1h

AccesstoRAMbytes0400hto07FFhenabled

2h

AccesstoRAMbytes0800hto0BFFhenabled

3h

AccesstoRAMbytes0C00hto0FFFhenabled

4h

AccesstoRAMbytes1000hto13FFhenabled

5h

AccesstoRAMbytes1400hto17FFhenabled

6h

AccesstoRAMbytes1800hto1BFFhenabled

7h

AccesstoRAMbytes1C00hto1FFFhenabled

3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

RS

RAMselect.InRAMtestmodetheRAMblocksselectedbyRS(2-0)aremappedtomodule

address0x400to7FF(1024byteaddresses).

0

InputbufferRAM1

1h

InputbufferRAM2

2h

OutputbufferRAM1

3h

OutputbufferRAM2

4h

TransientbufferRAMA

5h

TransientbufferRAMB

6h

MessageRAM

7h

Unused

1082

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Normal

OperationRAMTestOBF2TBF1TBF2RS(2-0)=SSEL(2-0)=000000h3FCh400h000                 001                010                011                 100                101                  110

offset_CC7FCh

OBF1

IBF2

IBF1

001

010

011

100

101

110

111MBF

OutputRegisterSetInputand



www.ti.comFlexRayModuleRegisters

23.19.2.1.2.1RAMTestMode

InRAMtestmode[TMC(1-0)=01],oneofthesevenRAMblockscanbeselectedfordirectreadand

writeaccessbyprogrammingRS(2-0)tothecorrespondingvalue;seeFigure23-108.

ForexternalRAMaccessinRAMtestmode,theselectedRAMblockismappedtotheaddressrange

offset_CC400hto7FFh,whichistheaddressspacefortheinputandoutputbufferregistersetsinnormal

operation.Hence,thefunctionalityoftheinputandoutputbufferregistersetsisnotavailableinRAMtest

mode.

Withtheavailableaddressspace(offset_CC400hto7FFh)inRAMtestmode,1024bytesofRAMcanbe

addressedfordirectaccess.SincethelengthoftheMessageRAMexceedstheavailableaddressspace,

theMessageRAMissegmentedintosegmentsof1024bytes.Thesegmentscanbeselectedby

programmingthebitsSSEL(2-0)oftestregister2.

Figure23-108.TestModeAccesstoCommunicationControllerRAMBlocks

1083

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.1.3LockRegister(LCK)

Thelockregisteriswrite-only.Readingtheregisterwillreturn00.

Figure23-109andTable23-96illustratethisregister.

Figure23-109.LockRegister(LCK)[offset_CC=1Ch]

31

16

Reserved

R-0

15

8

7

0

TMK

CLK

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-96.LockRegister(LCK)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

TMK

0-1FFh

Testmodekey.TowritebitWRTENinthetestregisterto1,thewriteoperationhastobe

directlyprecededbytwoconsecutivewriteaccessestothetestmodekey(unlocksequence).If

thiswritesequenceisinterruptedbyotherwriteaccesses,bitWRTENisnotsetto1andthe

sequencehastoberepeated.

Firstwrite(LCK.TMK[7:0]):75h=0b01110101

Secondwrite(LCK.TMK[7:0]):8Ah=0b10001010

Thirdwrite:TEST1.WRTEN=1

7-0

CLK

0-FFh

Configurationlockkey.ToleaveCONFIGstatebywritingtoCMD(3-0)intheSUCconfiguration

register1(commandsREADY;MONITOR_MODE;ATM;LOOP_BACK),thewriteoperation

hastobedirectlyprecededbytwoconsecutivewriteaccessestotheconfigurationlockkey

(unlocksequence).Ifthiswritesequenceisinterruptedbyotherwriteaccesses,the

communicationcontrollerremainsinCONFIGstateandthesequencehastoberepeated.

Firstwrite(LCK.CLK[7:0]):CEh=0b11001110

Secondwrite(LCK.CLK[7:0]):31h=0b00110001

Thirdwrite(SUCC.CMD[3:0])

NOTE:IncasethattheHostuses8/16-bitaccessestowritethelistedbitfields,theprogrammerhas

toensurethatno"dummyaccesses"e.g.totheremainingregisterbytes/wordsareinserted

bythecompiler.

1084

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.2InterruptRegisters

23.19.2.2.1ErrorInterruptRegister(EIR)

Theflagsaresetwhenthecommunicationcontrollerdetectsoneofthelistederrorconditions.They

remainsetuntilthehostclearsthem.Aflagisclearedbywritinga1tothecorrespondingbitposition.

Writinga0hasnoeffectontheflag.Aresetwillalsocleartheregister.

Figure23-110andTable23-97illustratethisregister.

Figure23-110.ErrorInterruptRegister(EIR)[offset_CC=20h]

31

27

26

25

24

23

19

18

17

16

Reserved

TABB

LTVB

EDB

Reserved

TABA

LTVA

EDA

R-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

15

12

11

10

9

8

7

6

5

4

3

2

1

0

Reserved

MHF

IOBA

IIBA

EFA

RFO

PERR

CCL

CCF

SFO

SFBM

CNA

PEMC

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-97.ErrorInterruptRegister(EIR)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

TABB

TransmissionAcrossBoundaryChannelB.TheflagsignalstotheHostthatatransmissionacross

aslotboundaryoccurredforchannelB.

0

NotransmissionacrossslotboundarydetectedonchannelB

1

TransmissionacrossslotboundarydetectedonchannelB

25

LTVB

LatesttransmitviolationchannelB.TheflagsignalsalatesttransmitviolationonchannelBtothe

host.

0

NolatesttransmitviolationdetectedonchannelB

1

LatesttransmitviolationdetectedonchannelB

24

EDB

ErrordetectedonchannelB.ThisbitissetwheneveroneoftheflagsSEDB,CEDB,CIB,SBVBin

theAggregatedchannelstatusregisterisset.

0

NoerrordetectedonchannelB

1

ErrordetectedonchannelB

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

TABA

TransmissionAcrossBoundaryChannelA.TheflagsignalstotheHostthatatransmissionacross

aslotboundaryoccurredforchannelA.

0

NotransmissionacrossslotboundarydetectedonchannelA

1

TransmissionacrossslotboundarydetectedonchannelA

17

LTVA

LatesttransmitviolationchannelA.TheflagsignalsalatesttransmitviolationonchannelAtothe

host.

0

NolatesttransmitviolationdetectedonchannelA

1

LatesttransmitviolationdetectedonchannelA

16

EDA

ErrordetectedonchannelA.ThisbitissetwheneveroneoftheflagsSEDA,CEDA,CIA,SBVAin

theAggregatedchannelstatusregisterisset.

0

NoerrordetectedonchannelA

1

ErrordetectedonchannelA

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

MHF

MessageHandlerConstraintsFlag.TheflagsignalsaMessageHandlerconstraintsviolation

condition.ItissetwheneveroneoftheflagsMHDF.SNUA,MHDF.SNUB,MHDF.FNFA,

MHDF.FNFB,MHDF.TBFA,MHDF.TBFB,MHDF.WAHPchangesfrom'0'to'1'.

0

NoMessageHandlerfailuredetected

1

MessageHandlerfailuredetected

1085

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-97.ErrorInterruptRegister(EIR)FieldDescriptions(continued)

Bit

Field

Value

Description

10

IOBA

IllegalOutputbufferAccess.ThisflagissetbythecommunicationcontrollerwhentheHost

requeststhetransferofamessagebufferfromtheMessageRAMtotheOutputBufferwhile

OBCR.OBSYSissetto'1'.

0

NoillegalHostaccesstoOutputBufferoccurred

1

IllegalHostaccesstoOutputBufferoccurred

9

IIBA

IllegalInputBufferAccess.ThisflagissetbythecommunicationcontrollerwhentheHostwantsto

modifyamessagebufferviaInputBufferandoneofthefollowingconditionsapplies:

•ThecommunicationcontrollerisnotinCONFIGorDEFAULT_CONFIGstateandtheHostwrites

totheInputBufferCommandRequestregistertomodifythefollowing:

–theHeadersectionofmessagebuffer0,1ifconfiguredfortransmissioninkeyslot

–theHeadersectionofstaticmessagebufferswithbuffernumber<MRC.FDB[7:0]while

MRC.SEC[1:0]="01"

–theHeadersectionofanystaticordynamicmessagebufferwhileMRC.SEC[1:0]="1x"

–Headerand/ordatasectionofanymessagebufferbelongingtothereceiveFIFO

•TheHostwritestoanyregisteroftheInputBufferwhileIBCR.IBSYHissetto'1'.

0

NoillegalHostaccesstoInputBufferoccurred

1

IllegalHostaccesstoInputBufferoccurred

8

EFA

EmptyFIFOAccess.ThisflagissetbythecommunicationcontrollerwhentheHostrequeststhe

transferofamessagefromthereceiveFIFOviaOutputBufferwhilethereceiveFIFOisempty.

0

NoHostaccesstoemptyFIFOoccurred

1

HostaccesstoemptyFIFOoccurred

7

RFO

ReceiveFIFOoverrun.ThisflagissetbythecommunicationcontrollerwhenareceiveFIFO

overrunwasdetected.TheflagisclearedbythenextFIFOreadaccessofthehost.Afterthisread

accessonepositionintheFIFOisemptyagain.

0

NoreceiveFIFOoverrundetected

1

AreceiveFIFOoverrunhasbeendetected

6

PERR

Parityerror.Theflagsignalsaparityerrortothehost.Theflagissetbytheparitylogicofthe

communicationcontrollerwhenitdetectsaparityerrorwhilereadingfromoneoftheFlexRayRAM

blocks.

Note:ParityErrorintheTCRRAMisanexceptionindicatedbythePEflaginTransferError

InterruptFlag(TEIF)register

0

Noparityerrordetected

1

Parityerrordetected

5

CCL

CHICommandLocked.TheflagsignalsthatthewriteaccesstotheCHIcommandvector

SUCC1.CMD[3:0]wasnotsuccessfulbecauseitcoincidedwithaPOCstatechangetriggeredby

protocolfunctions.InthiscasebitCNAisalsosetto'1'.

0

CHIcommandaccepted

1

CHIcommandnotaccepted

4

CCF

Clockcorrectionfailure.Thisflagissetattheendofthecyclewheneveroneofthefollowingerrors

occurred:

•Missingratecorrectionsignal

•Missingoffsetcorrectionsignal

•ClockcorrectionFailedcounterstoppedat15

•ClockcorrectionLimitReached

Theclockcorrectionstatusismonitoredinthecommunicationcontrollererrorvectorandsync

framestatusregister.

0

Noclockcorrectionerror

1

Clockcorrectionfailed

3

SFO

Syncframeoverflow.Setwheneitherthenumberofsyncframesreceivedduringthelast

communicationcycleorthetotalnumberofdifferentsyncframeIDsreceivedduringthelastdouble

cycleexceedsthemaximumnumberofsyncframesasdefinedbySNM(3:0)intheGTU

configurationregister2.

0

Numberofreceivedsyncframesintheconfiguredrange

1

MoresyncframesreceivedthanconfiguredbySNM(3-0)

1086

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-97.ErrorInterruptRegister(EIR)FieldDescriptions(continued)

Bit

Field

Value

Description

2

SFBM

Syncframesbelowminimum.Thisflagsignalsthatthenumberofsyncframesreceivedduringthe

lastcommunicationcyclewasbelowthelimitrequiredbytheFlexRayprotocol.Theminimum

numberofsyncframespercommunicationcycleis2.

0

Twoormoresyncframesreceivedduringlastcommunicationcycle

1

Lessthantwosyncframereceivedduringlastcommunicationcycle

1

CNA

Commandnotaccepted.TheflagsignalsthatthecontrollerhostinterfacecommandvectorCMD(3-

0)intheSUCconfigurationregister1wasresetto0000duetoanunacceptedcontrollerhost

interfacecommand.

0

Controllerhostinterfacecommandaccepted

1

Controllerhostinterfacecommandnotaccepted

0

PEMC

POCerrormodechanged.ThisflagissetwhenevertheerrormodesignaledbyERRM(1-0)inthe

communicationcontrollererrorvectorregisterhaschanged.

0

Errormodehasnotchanged

1

Errormodehaschanged

23.19.2.2.2StatusInterruptRegister(SIR)

Theflagsaresetbythecommunicationcontrollerwhenacorrespondingeventoccurs.Theyremainset

untilthehostclearsthem.Ifenabled,aninterruptispendingwhileoneofthebitsisset.Aflagiscleared

bywritinga1tothecorrespondingbitposition.Writinga0hasnoeffectontheflag.Ahardwareresetwill

alsocleartheregister.

Figure23-111andTable23-98illustratethisregister.

Figure23-111.StatusInterruptRegister(SIR)[offset_CC=24h]

31

26

25

24

23

18

17

16

Reserved

MTSB

WUPB

Reserved

MTSA

WUPA

R-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

SDS

MBSI

SUCS

SWE

TOBC

TIBC

TI1

TI0

NMVC

RFCL

RFNE

RXI

TXI

CYCS

CAS

WST

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-98.StatusInterruptRegister(SIR)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25

MTSB

MTSreceivedonchannelB.MediaaccesstestsymbolreceivedonchannelBduringthelast

symbolwindow.Updatedbythecommunicationcontrollerforeachchannelattheendofthe

symbolwindow.

0

NoMTSsymbolreceived

1

MTSsymbolreceived

24

WUPB

WakeuppatternchannelB.Thisflagissetbythecommunicationcontrollerwhenawakeuppattern

wasreceivedonchannelB.

0

NowakeuppatternonchannelB

1

WakeuppatternonchannelB

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

MTSA

MTSreceivedonchannelA.MediaaccesstestsymbolreceivedonchannelAduringthelast

symbolwindow.Updatedbythecommunicationcontrollerforeachchannelattheendofthe

symbolwindow.

0

NoMTSsymbolreceived

1

MTSsymbolreceived

1087

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-98.StatusInterruptRegister(SIR)FieldDescriptions(continued)

Bit

Field

Value

Description

16

WUPA

WakeuppatternchannelA.Thisflagissetbythecommunicationcontrollerwhenawakeuppattern

wasreceivedonchannelA.

0

NowakeuppatternonchannelA

1

WakeuppatternonchannelA

15

SDS

StartofDynamicSegment.Thisflagissetbythecommunicationcontrollerwhenthedynamic

segmentstarts.

0

Dynamicsegmentnotyetstarted

1

Dynamicsegmentstarted

14

MBSI

Messagebufferstatusinterrupt.ThisflagissetbythecommunicationcontrollerifbitMBIofa

dedicatedreceivebufferissetto1andwhenthestatusofthatmessagebufferhasbeenupdated

duetoreceptionofa:

•validframewithpayload

•validframewithpayloadzero

•nullframe

•corruptedframeoranemptyslot

0

Nomessagebufferstatushasbeenupdated.

1

Messagebufferstatusofatleastonereceivebufferhasbeenupdated

13

SUCS

Startupcompletedsuccessfully.Thisflagissetwheneverastartupcompletedsuccessfullyandthe

communicationcontrollerenteredNORMAL_ACTIVEstate.

0

Nostartupcompletedsuccessfully

1

Startupcompletedsuccessfully

12

SWE

Stopwatchevent.IfenabledbytherespectivecontrolbitslocatedintheStopwatchregister,a

detectededgeonexternalstopwatchpinorasoftwaretriggereventwillgenerateastopwatch

event.

0

Nostopwatchevent

1

Stopwatcheventoccurred

11

TOBC

Transferoutputbuffercompleted.ThisflagissetwheneveratransferfromthemessageRAMto

theoutputbufferhascompletedandbitOBSYSintheoutputbuffercommandrequestregisterhas

beenresetbythemessagehandler.

0

Notransfercompletedsincebitwasreset

1

TransferbetweenmessageRAMandoutputbuffercompleted

10

TIBC

Transferinputbuffercompleted.Thisflagissetwheneveratransferfrominputbuffertothe

messageRAMhascompletedandbitIBSYSintheinputbuffercommandrequestregisterhas

beenresetbythemessagehandler.

0

Notransfercompletedsincebitwasreset

1

TransferbetweeninputbufferandmessageRAMcompleted

9

TI1

Timerinterrupt1.Thisflagissetwhenevertheconditionsprogrammedinthetimerinterrupt1

configurationregisteraremet.Atimerinterrupt1isalsosignaledonpinCC_tint1.

0

Notimerinterrupt1

1

Timerinterrupt1occurred

8

TI0

Timerinterrupt0.Thisflagissetwhenevertheconditionsprogrammedinthetimerinterrupt0

configurationregisteraremet.Atimerinterrupt0isalsosignaledonpinCC_tint0.

0

Notimerinterrupt0

1

Timerinterrupt0occurred

7

NMVC

Networkmanagementvectorchanged.ThisinterruptflagsignalsachangeintheNetwork

managementvectorvisibletothehost.

0

Nochangeinthenetworkmanagementvector

1

Networkmanagementvectorchanged

6

RFCL

ReceiveFIFOcriticallevel.ThisflagissetwhenthereceiveFIFOfilllevelFSR.RFFL[7:0]isequal

orgreaterthanthecriticallevelasconfiguredbyFCL.CL[7:0].

0

ReceiveFIFObelowcriticallevel

1

ReceiveFIFOcriticallevelreached

1088

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-98.StatusInterruptRegister(SIR)FieldDescriptions(continued)

Bit

Field

Value

Description

5

RFNE

ReceiveFIFOnotempty.Thisflagissetbythecommunicationcontrollerwhenareceivedvalid

framewasstoredintotheemptyreceiveFIFO.TheactualstateofthereceiveFIFOismonitoredin

registerFSR.

0

ReceiveFIFOisempty

1

ReceiveFIFOisnotempty

4

RXI

Receiveinterrupt.Thisflagissetbythecommunicationcontrollerwhenthepayloadsegmentofa

receivedvalidframewasstoredintothedatasectionofamatchingdedicatedreceivebufferandif

bitMBIofthatmessagebufferissetto1.

0

Nodatasectionhasbeenupdated

1

Atleastonedatasectionhasbeenupdated

3

TXI

Transmitinterrupt.Thisflagissetbythecommunicationcontrolleraftersuccessfulframe

transmissionifbitMBIintherespectivemessagebufferissetto1.

0

Noframetransmitted

1

Atleastoneframewastransmittedsuccessfully

2

CYCS

Cyclestartinterrupt.Thisflagissetbythecommunicationcontrollerwhenacommunicationcycle

starts.

0

Nocommunicationcyclestarted

1

Communicationcyclestarted

1

CAS

Collisionavoidancesymbol.ThisflagissetbythecommunicationcontrollerwhenaCASwas

received.

0

NoCASsymbolreceived

1

CASsymbolreceived

0

WST

ThisflagissetwhenWSV(2:0)inthecommunicationcontrollerstatusvectorregisterchangestoa

valueotherthanUNDEFINED.

0

Wakeupstatusunchanged

1

Wakeupstatuschanged

1089

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.2.3ErrorInterruptLineSelect(EILS)

Thesettingsintheerrorinterruptlineselectregisterassignsaninterruptgeneratedbyaspecificerror

interruptflagtooneofthetwomoduleinterruptlines(CC_int0orCC_int1).

Figure23-112andTable23-99illustratethisregister.

Figure23-112.ErrorInterruptLineSelectRegister(EILS)[offset_CC=28h]

31

27

26

25

24

23

19

18

17

16

Reserved

TABBL

LTVBL

EDBL

Reserved

TABAL

LTVAL

EDAL

R-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

15

12

11

10

9

8

7

6

5

4

3

2

1

0

Reserved

MHFL

IOBAL

IIBAL

EFAL

RFOL

PERRL

CCLL

CCFL

SFOL

SFBML

CNAL

PEMCL

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-99.ErrorInterruptLineSelectRegister(EILS)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

TABBL

TransmissionAcrossBoundaryChannelBInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

25

LTVBL

LatesttransmitviolationchannelBinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

24

EDBL

ErrordetectedonchannelBinterruptline

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

TABAL

TransmissionAcrossBoundaryChannelAInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

17

LTVAL

LatesttransmitviolationchannelAinterruptline

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

16

EDAL

ErrordetectedonchannelAinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

MHFL

MessageHandlerConstraintsFlagInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

10

IOBAL

IllegalOutputBufferAccessInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

9

IIBAL

IllegalOutputBufferAccessInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

8

EFAL

EmptyFIFOAccessInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

1090

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-99.ErrorInterruptLineSelectRegister(EILS)FieldDescriptions(continued)

Bit

Field

Value

Description

7

RFOL

ReceiveFIFOoverruninterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

6

PERRL

Parityerrorinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

5

CCLL

CHICommandLockedInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

4

CCFL

Clockcorrectionfailureinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

3

SFOL

Syncframeoverflowinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

2

SFBML

Syncframesbelowminimuminterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

1

CNAL

CommandnotAcceptedinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

0

PEMCL

POCerrormodechangedinterruptline

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

1091

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.2.4StatusInterruptLineSelect(SILS)

Thesettingsinthestatusinterruptlineselectregisterassignaninterruptgeneratedbyaspecificstatus

interruptflagtooneofthetwomoduleinterruptlines(CC_int0orCC_int1).

Figure23-113andTable23-100illustratethisregister.

Figure23-113.StatusInterruptLineSelectRegister(SILS)[offset_CC=2Ch]

31

26

25

24

23

18

17

16

Reserved

MTSBL

WUPBL

Reserved

MTSAL

WUPAL

R-0

R/W-1

R/W-1

R-0

R/W-1

R/W-1

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

SDSL

MBSIL

SUCSL

SWEL

TOBCL

TIBCL

TI1L

TI0L

NMVCL

RFFL

RFNEL

RXIL

TXIL

CYCSL

CASL

WSTL

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-100.StatusInterruptLineSelectRegister(SILS)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25

MTSBL

MediaaccesstestsymbolchannelBinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

24

WUPBL

WakeuppatternchannelBinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

MTSAL

MediaaccesstestsymbolchannelAinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

16

WUPAL

WakeuppatternchannelAinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

15

SDSL

StartofDynamicSegmentInterruptLine

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

14

MBSIL

Messagebufferstatusinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

13

SUCSL

StartupcompletedSuccessfullyinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

12

SWEL

Stopwatcheventinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

11

TOBCL

Transferoutputbuffercompletedinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

10

TIBCL

Transferinputbuffercompletedinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

1092

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-100.StatusInterruptLineSelectRegister(SILS)FieldDescriptions(continued)

Bit

Field

Value

Description

9

TI1L

Timerinterrupt1line.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

8

TI0L

Timerinterrupt0line.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

7

NMVCL

Networkmanagementvectorchangedinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

6

RFCLL

ReceiveFIFOfullinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

5

RFNEL

ReceiveFIFOnotemptyinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

4

RXIL

Receiveinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

3

TXIL

Transmitinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

2

CYCSL

Cyclestartinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

1

CASL

CollisionAvoidancesymbolinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

0

WSTL

Wakeupstatusinterruptline.

0

InterruptassignedtointerruptlineCC_int0

1

InterruptassignedtointerruptlineCC_int1

1093

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.2.5ErrorInterruptEnableSet/Reset(EIES,EIER)

Thesettingsintheerrorinterruptenableregisterdeterminewhichstatuschangesintheerrorinterrupt

registerwillresultinaninterrupt.Theenablebitsaresetbywritingtoaddress30handresetbywritingto

address34h.Writinga1sets/resetsthespecificenablebit,a0hasnoeffect.

Figure23-114andTable23-101illustratethisregister.

Figure23-114.ErrorInterruptEnableSet/ResetRegister(EIES,EIER)[offset_CC=30h-34h]

31

27

26

25

24

23

19

18

17

16

Reserved

TABBE

LTVBE

EDBE

Reserved

TABAE

LTVAE

EDAE

R-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

15

12

11

10

9

8

7

6

5

4

3

2

1

0

Reserved

MHFE

IOBAE

IIBAE

EFAE

RFOE

PERRE

CCLE

CCFE

SFOE

SFBME

CNAE

PEMCE

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-101.ErrorInterruptSet/ResetRegister(EIES,EIER)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

TABBE

TransmissionacrossboundarychannelBinterruptenable.

0

Interruptdisabled

1

TransmissionacrossboundarychannelBinterruptenabled

25

LTVBE

LatesttransmitviolationchannelBinterruptenable.

0

Interruptdisabled

1

LatesttransmitviolationchannelBinterruptenabled

24

EDBE

ErrordetectedonchannelBinterruptenable.

0

Interruptdisabled

1

ErrordetectedonchannelBinterruptenabled

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

TABAE

TransmissionacrossboundarychannelAinterruptenable.

0

Interruptdisabled

1

TransmissionacrossboundarychannelAinterruptenabled

17

LTVAE

LatesttransmitviolationchannelAinterruptenable.

0

Interruptdisabled

1

LatesttransmitviolationchannelAinterruptenabled

16

EDAE

ErrordetectedonchannelAinterruptenable.

0

Interruptdisabled

1

ErrordetectedonchannelAinterruptenabled

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

MHFE

Messagehandlerconstraintsflaginterruptenable.

0

Interruptdisabled

1

Messagehandlerconstraintsflaginterruptenabled

10

IOBAE

Illegaloutputbufferaccessinterruptenable.

0

Interruptdisabled

1

Illegaloutputbufferaccessinterruptenabled

9

IIBAE

Illegalinputbufferaccessinterruptenable.

0

Interruptdisabled

1

Illegalinputbufferaccessinterruptenabled

8

EFAE

EmptyFIFOaccessinterruptenable.

0

Interruptdisabled

1

EmptyFIFOaccessinterruptenabled

1094

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-101.ErrorInterruptSet/ResetRegister(EIES,EIER)FieldDescriptions(continued)

Bit

Field

Value

Description

7

RFOE

ReceiveFIFOoverruninterruptenable.

0

Interruptdisabled

1

ReceiveFIFOoverruninterruptenabled

6

PERRE

Parityerrorinterruptenable.

0

Interruptdisabled

1

Parityerrorinterruptenabled

5

CCLE

CHIcommandlockedinterruptenable.

0

Interruptdisabled

1

CHIcommandlockedinterruptenabled

4

CCFE

Clockcorrectionfailureinterruptenable.

0

Interruptdisabled

1

Clockcorrectionfailureinterruptenabled

3

SFOE

Syncframeoverflowinterruptenable.

0

Interruptdisabled

1

Syncframeoverflowinterruptenabled

2

SFBME

Syncframesbelowminimuminterruptenable.

0

Interruptdisabled

1

Syncframesbelowminimuminterruptenabled

1

CNAE

CommandnotAcceptedinterruptenable.

0

Interruptdisabled

1

Commandnotvalidinterruptenabled

0

PEMCE

POCerrormodechangedinterruptenable.

0

Interruptdisabled

1

Protocolerrormodechangedinterruptenabled

1095

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.2.6StatusInterruptEnableSet/ResetRegister(SIES,SIER)

Thesettingsinthestatusinterruptenableregisterdeterminewhichstatuschangesinthestatusinterrupt

registerwillresultinaninterrupt.Theenablebitsaresetbywritingtoaddress38handresetbywritingto

address3Ch.Writinga1sets/resetsthespecificenablebit,a0hasnoeffect.

Figure23-115andTable23-102illustratethisregister.

Figure23-115.StatusInterruptEnableSet/ResetRegister(SIES,SIER)[offset_CC=38h-3Ch]

31

26

25

24

23

18

17

16

Reserved

MTSBE

WUPBE

Reserved

MTSAE

WUPAE

R-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

SDSE

MBSIE

SUCSE

SWEE

TOBCE

TIBCE

TI1E

TI0E

NMVCE

RFFE

RFNEE

RXIE

TXIE

CYCSE

CASE

WSTE

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-102.StatusInterruptEnableSet/ResetRegister(SIES,SIER)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25

MTSBE

MTSreceivedonchannelBinterruptenable.

0

Interruptdisabled

1

MTSreceivedonchannelBinterruptenabled

24

WUPBE

WakeuppatternchannelBinterruptenable.

0

Interruptdisabled

1

WakeuppatternchannelBinterruptenabled

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

MTSAE

MTSreceivedonchannelAinterruptenable

0

Interruptdisabled

1

MTSreceivedonchannelAinterruptenabled

16

WUPAE

WakeuppatternchannelAinterruptenable.

0

Interruptdisabled

1

WakeuppatternchannelAinterruptenabled

15

SDSE

Startofdynamicsegmentinterruptenable.

0

Interruptdisabled

1

Startofdynamicsegmentinterruptenabled

14

MBSIE

Messagebufferstatusinterruptenable.

0

Interruptdisabled

1

Messagebufferstatusinterruptenabled

13

SUCSE

Startupcompletedsuccessfullyinterruptenable.

0

Interruptdisabled

1

Startupcompletedsuccessfullyinterruptenabled

12

SWEE

Stopwatcheventinterruptenable.

0

Interruptdisabled

1

Stopwatcheventinterruptenabled

11

TOBCE

Transferoutputbuffercompletedinterruptenable.

0

Interruptdisabled

1

Transferoutputbuffercompletedinterruptenabled

10

TIBCE

Transferinputbuffercompletedinterruptenable.

0

Interruptdisabled

1

Transferinputbuffercompletedinterruptenabled

1096

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-102.StatusInterruptEnableSet/ResetRegister(SIES,SIER)FieldDescriptions(continued)

Bit

Field

Value

Description

9

TI1E

Timerinterrupt1enable.

0

Interruptdisabled

1

Timerinterrupt1enabled

8

TI0E

Timerinterrupt0enable.

0

Interruptdisabled

1

Timerinterrupt0enabled

7

NMVCE

Networkmanagementvectorchangedinterruptenable.

0

Interruptdisabled

1

Networkmanagementvectorchangedinterruptenabled

6

RFCLE

ReceiveFIFOfullinterruptenable.

0

Interruptdisabled

1

ReceiveFIFOoverruninterruptenabled

5

RFNEE

ReceiveFIFOnotemptyinterruptenable.

0

Interruptdisabled

1

ReceiveFIFOnotemptyinterruptenabled

4

RXIE

Receiveinterruptenable.

0

Interruptdisabled

1

Receiveinterruptenabled

3

TXIE

Transmitinterruptenable.

0

Interruptdisabled

1

Transmitinterruptenabled

2

CYCSE

Cyclestartinterruptenable.

0

Interruptdisabled

1

Cyclestartinterruptenabled

1

CASE

Collisionavoidancesymbolinterruptenable.

0

Interruptdisabled

1

CollisionAvoidancesymbolinterruptenabled

0

WSTE

Wakeupstatusinterruptenable.

0

Interruptdisabled

1

Wakeupstatusinterruptenabled

1097

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.2.7InterruptLineEnableRegister(ILE)

Eachofthetwointerruptlines(CC_int0,CC_int1)canbeenabled/disabledseparatelybyprogramming

bitEINT0andEINT1.

Figure23-116andTable23-103illustratethisregister.

Figure23-116.InterruptLineEnableRegister(ILE)[offset_CC=40h]

31

16

Reserved

R-0

15

2

1

0

Reserved

EINT

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-103.InterruptLineEnableRegister(ILE)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

EINT

0-3h

Enableinterruptline(1-0).

0

InterruptlineCC_int1andCC_int0disabled

1h

InterruptlineCC_int1disabledandCC_int0enabled

2h

InterruptlineCC_int1enabledandCC_int0disabled

3h

InterruptlineCC_int1andCC_int0enabled

1098

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.2.8Timer0ConfigurationRegister(T0C)

Thisabsolutetimerspecifies,intermsofcyclecountandmacrotick,thepointintimewhenthetimer0

interruptoccurs.Thetimer0interruptgeneratesanonmaskableinterruptsignalonCC_tint0.

Timer0canbeactivatedaslongasthePOCiseitherinNORMAL_ACTIVEstateorin

NORMAL_PASSIVEstate.Timer0isdeactivatedwhenleavingNORMAL_ACTIVEstateor

NORMAL_PASSIVEstateexceptfortransitionsbetweenthetwostates.

Beforereconfigurationofthetimer,thetimerhastobehaltedfirstbywritingbitT0RCto0.

Figure23-117andTable23-104illustratethisregister.

Figure23-117.Timer0ConfigurationRegister(T0C)[offset_CC=44h]

31

30

29

16

Reserved

TOMO

R-0

R/W-0

15

14

8

7

2

1

0

Rsvd

TOCC

Reserved

TOMS

TORC

R-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-104.Timer0ConfigurationRegister(T0C)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-16

TOMO

0-3FFFh

Timer0macrotickoffset.Configuresthemacrotickoffsetfromthebeginningofthecyclewhere

theinterruptistooccur.TheTimer0interruptoccursatthisoffsetforeachcycleinthecycle

set.

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-8

TOCC

0-FFh

Timer0cyclecode.The7-bittimer0cyclecodedeterminesthecyclesetusedforgenerationof

thetimer0interrupt.

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

TOMS

Time0modeselect.

0

Single-shotmode

1

Continuousmode

0

TORC

Timer0runcontrol

0

Timer0halted

1

Timer0running

1099

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.2.9Timer1ConfigurationRegister(T1C)

ThisrelativetimergeneratesaninterruptonthenonmaskableinterruptsignalCC_tint1afterthespecified

numberofmacrotickshasexpired.

Timer1canbeactivatedaslongasthePOCiseitherinNORMAL_ACTIVEstateorin

NORMAL_PASSIVEstate.Timer1isdeactivatedwhenleavingNORMAL_ACTIVEstateor

NORMAL_PASSIVEstateexceptfortransitionsbetweenthetwostates.

Beforereconfigurationofthetimer,thetimerhastobehaltedfirstbywritingbitT1RCto0.

Figure23-118andTable23-105illustratethisregister.

Figure23-118.Timer1ConfigurationRegister(T1C)[offset_CC=48h]

31

30

29

16

Reserved

TIMC

R-0

R/W-2

15

2

1

0

Reserved

T1MS

T1RC

R-0

R/W-0

LEGEND:R=Readonly;-n=valueafterreset

Table23-105.Timer1ConfigurationRegister(T1C)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-16

TIMC

Timer1macrotickcount.Whentheconfiguredmacrotickcountisreachedthetimer1interruptis

generated.Incasetheconfiguredmacrotickcountisnotwithinthevalidrange,timer1willnot

start.

Validvalues:

•2to16383macroticksincontinuousmode

•1to16383macroticksinsingle-shotmode

2-3FFFh

Continuousmode

1-3FFFh

Single-shotmode

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

T1MS

Timer1modeselect

0

Single-shotmode

1

Continuousmode

0

T1RC

Timer1runcontrol

0

Timer1halted

1

Timer1running

1100

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.2.10StopWatchRegister1Register(STPW1)

Thestopwatchisactivatedbyaninterruptevent(CC_int0orCC_int1),bywritingbitSSWTto1,orbyan

externalevent.

Withthemacrotickcounterincrementfollowingnexttothestopwatchactivationtheactualcyclecounter

andmacrotickvalueisstoredinthestopwatchregister1(stopwatchevent)andtheslotcountervalues

forchannelAandchannelBarestoredinstopwatchregister2.

Figure23-119andTable23-106illustratethisregister.

Figure23-119.StopWatchRegister1(STPW1)[offset_CC=4Ch]

31

30

29

16

Reserved

SMTV

R-0

R-0

15

14

13

8

7

6

5

4

3

2

1

0

Reserved

SCCV

Rsvd

EINT1

EINT0

EETP

SSWT

EDGE

SWMS

ESWT

R-0

R-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-106.StopWatchRegister1(STPW1)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-16

SMTV

0-3E80h

Stoppedmacrotickvalue.Stateofthemacrotickcounterwhenthestopwatcheventoccurred.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

SCCV

0-3Fh

Stoppedcyclecountervalue.Stateofthecyclecounterwhenthestopwatcheventoccurred.

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

EINT1

Enableinterrupt1trigger.EnablesstopwatchtriggerbyCC_int1eventifESWT='1'.

0

StopwatchtriggerbyCC_int1disabled

1

CC_int1eventtriggersstopwatch

5

EINT0

Enableinterrupt0trigger.EnablesstopwatchtriggerbyCC_int0eventifESWT='1'.

0

StopwatchtriggerbyCC_int0disabled

1

CC_int0eventtriggersstopwatch

4

EETP

Enableexternaltriggerpin.Enablesstopwatchtriggereventfromexternalpin,ifESWT='1'.

0

Externaltriggerdisabled

1

Stopwatchactivatedbyexternaltrigger

3

SSWT

Softwarestopwatchtrigger.Whenthehostwritesthisbitto1thestopwatchisactivated.Afterthe

actualcyclecounterandmacrotickvaluearestoredinthestopwatchregisterthisbitisresetto0.

ThebitisonlywritablewhileESWT=0.

0

Softwaretriggerreset

1

Stopwatchactivatedbysoftwaretrigger

2

EDGE

Stopwatchtriggeredgeselect.

0

Fallingedge

1

Risingedge

1

SWMS

Stopwatchmodeselect.

0

Single-shotmode

1

Continuousmode

0

ESWT

Externalstopwatchtrigger.Ifenabledanexternaleventactivatesthestopwatch.Insingle-shot

modethisbitisresetto0afterthestopwatcheventoccurred.

0

Externalstopwatchtriggerdisabled

1

Externalstopwatchtriggerenabled

1101

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

NOTE:BitsESWTandSSWTcannotbesetto'1'simultaneously.Inthiscasethewriteaccessto

theregisterisignored,andbothbitskeeptheirpreviousvalues.Eithertheexternalstop

watchtriggerorthesoftwarestopwatchtriggermaybeused.

NOTE:Theavailabilityofanexternalstopwatchpinisdevicedependant.Pleaserefertothedevice

datasheetfordetails.

23.19.2.2.11StopWatchRegister2Register(STPW2)

Figure23-120andTable23-107illustratethisregister.

Figure23-120.StopWatchRegister2(STPW2)[offset_CC=50h]

31

27

26

16

Reserved

SSCVB

R-0

R-0

15

11

10

0

Reserved

SSCVA

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-107.StopWatchRegister2(STPW2)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

SSCVB

0-7FFh

StopwatchcapturedslotcountervaluechannelB.StateoftheslotcounterforchannelBwhenthe

stopwatcheventoccurred.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

SSCVA

0-7FFh

StopwatchcapturedslotcountervaluechannelA.StateoftheslotcounterforchannelAwhenthe

stopwatcheventoccurred.

1102

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.3ControlRegisters

Thissectiondescribestheregistersprovidedbythecommunicationcontrollertoallowthehosttocontrol

theoperationofthecommunicationcontroller.TheFlexRayprotocolspecificationrequiresthehosttowrite

applicationconfigurationdatainCONFIGstateonly.

NOTE:Pleasebeawarethattheconfigurationregistersarenotlockedforwritingin

DEFAULT_CONFIGstate.

TheconfigurationdataisresetwhenDEFAULT_CONFIGstateisenteredfromhardwarereset.Tochange

POCstatefromDEFAULT_CONFIGtoCONFIGstatethehosthastoapplythecontrollerhostinterface

commandCONFIG.IfthehostwantsthecommunicationcontrollertoleaveCONFIGstate,thehosthasto

proceedasdescribedinLockRegister(LCK).

NOTE:Allbitsmarkedwithanasterisk(*)canbeupdatedinDEFAULT_CONFIGorCONFIGstate

only.

23.19.2.3.1SUCConfigurationRegister1(SUCC1)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-121andTable23-108illustratethisregister.

Figure23-121.SUCConfigurationRegister1(SUCC1)[offset_CC=80h]

31

28

27

26

25

24

23

22

21

20

16

Reserved

CCHB*

CCHA*

MTSB*

MTSA*

HCSE*

TSM*

WUCS*

PTA*

R-0

R/W-1

R/W-1

R/W-0

R/W-0

R/W-0

R/W-1

R/W-0

R/W-0

15

11

10

9

8

7

6

4

3

0

CSA*

Rsvd

TXSY*

TXST*

PBSY

Reserved

CMD*

R/W-2h

R-0

R/W-0

R/W-0

R-1

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-108.SUCConfigurationRegister1(SUCC1)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Readreturns0.Writeshavenoeffect.

27

CCHB

ConnectedtochannelB.ConfigureswhetherthenodeisconnectedtochannelB.

0

NotconnectedtochannelB

1

NodeconnectedtochannelB(defaultbyhardwarereset)

26

CCHA

ConnectedtochannelA.ConfigureswhetherthenodeisconnectedtochannelA.

0

NotconnectedtochannelA

1

NodeconnectedtochannelA(defaultbyhardwarereset)

25

MTSB

SelectchannelBforMTSTransmission.ThebitselectschannelBforMTSsymbol

transmissionifrequestedbywritingCMD(3-0)=8h.Theflagisresetbydefaultandmaybe

modifiedonlyinDEFAULT_CONFIGorCONFIGstate.

0

ChannelBnotselectedforMTStransmission

1

ChannelBselectedforMTStransmission

Note:MTSBmayalsobechangedoutsideDEFAULT_CONFIGorCONFIGstatewhenthe

writetoSUCConfigurationRegister1(SUCC1)isdirectlyprecededbytheunlock

sequencefortheConfigurationLockKeyasdescribedintheLockRegister(LCK).This

maybecombinedwithCHIcommandSEND_MTS.IfbothbitsMTSAandMTSBaresetto

'1'anMTSsymbolwillbetransmittedonbothchannelswhenrequestedbywriting

CMD[3:0]="8h".

1103

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-108.SUCConfigurationRegister1(SUCC1)FieldDescriptions(continued)

Bit

Field

Value

Description

24

MTSA

SelectchannelAforMTSTransmission.ThebitselectschannelAforMTSsymbol

transmissionifrequestedbywritingCMD(3-0)=8h.Theflagisresetbydefaultandmaybe

modifiedonlyinDEFAULT_CONFIGorCONFIGstate.

0

ChannelAnotselectedforMTStransmission

1

ChannelAselectedforMTStransmission

Note:MTSAmayalsobechangedoutsideDEFAULT_CONFIGorCONFIGstatewhenthe

writetoSUCConfigurationRegister1(SUCC1)isdirectlyprecededbytheunlock

sequencefortheConfigurationLockKeyasdescribedintheLockRegister(LCK).This

maybecombinedwithCHIcommandSEND_MTS.IfbothbitsMTSAandMTSBaresetto

'1'anMTSsymbolwillbetransmittedonbothchannelswhenrequestedbywriting

CMD[3:0]="8h".

23

HCSE

Haltduetoclocksyncerror.Controlsreactionofthecommunicationcontrollertoaclock

synchronizationerror.ThebitcanbemodifiedinDEFAULT_CONFIGorCONFIGstateonly.

0

Communicationcontrollerwillenter/remaininNORMAL_PASSIVE

1

CommunicationcontrollerwillenterHALTstate

22

TSM

Transmissionslotmode.Selectstheinitialtransmissionslotmode.InSINGLEslotmodethe

communicationcontrollermayonlytransmitinthepre-configuredkeyslot.Thisslotisdefined

bythekeyslotID,whichisconfiguredintheheadersectionofmessagebuffer0.Inallslot

modethecommunicationcontrollermaytransmitinallslots.Thebitcanbewrittenin

DEFAULT_CONFIGorCONFIGstateonly.Thecommunicationcontrollerchangestoallslot

modewhenthehostsuccessfullyappliedtheALL_SLOTScommandbywritingCMD(3-0)=5h

inPOCstatesNORMAL_ACTIVEorNORMAL_PASSIVE.Theactualslotmodeismonitoredby

SLM(1-0)inregisterCCSV.

0

Allslotmode

1

Singleslotmode(defaultbyhardwarereset)

21

WUCS

Wakeupchannelselect.Withthisbitthehostselectsthechannelonwhichthecommunication

controllersendstheWakeuppattern.Thecommunicationcontrollerignoresanyattemptto

changethestatusofthisbitwhennotinDEFAULT_CONFIGorCONFIGstate.

0

SendwakeuppatternonchannelA

1

SendwakeuppatternonchannelB

20-16

PTA

0-1Fh

Passivetoactive.Definesthenumberofconsecutiveeven/oddcyclepairsthatmusthavevalid

even/odd

clockcorrectiontermsbeforethecommunicationcontrollerisallowedtotransitfrom

cyclepairs

NORMAL_PASSIVEtoNORMAL_ACTIVEstate.Ifsetto0thecommunicationcontrollerisnot

allowedtotransitfromNORMAL_PASSIVEtoNORMAL_ACTIVEstate.Itcanbemodifiedin

DEFAULT_CONFIGorCONFIGstateonly.

15-11

CSA

2h-1Fh

Coldstartattempts.Configuresthemaximumnumberofattemptsthatacoldstartingnodeis

permittedtotrytostartupthenetworkwithoutreceivinganyvalidresponsefromanothernode.

ItcanbemodifiedinDEFAULT_CONFIGorCONFIGstateonly.Mustbeidenticalinallnodes

ofacluster.

10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

TXSY

Transmitsyncframeinkeyslot.Defineswhetherthekeyslotisusedtotransmitasyncframe.

ThebitcanbemodifiedinDEFAULT_CONFIGorCONFIGstateonly.

Note:TheprotocolrequiresthatbothbitsTXSTandTXSYaresetforcoldstartnodes.

0

Nosyncframetransmissioninkeyslot,nodeisneithersyncnorcoldstartnode

1

Keyslotusedtotransmitsyncframe,nodeissyncnode

8

TXST

Transmitstartupframeinkeyslot.Defineswhetherthekeyslotisusedtotransmitastartup

frame.ThebitcanbemodifiedinDEFAULT_CONFIGorCONFIGstateonly.

Note:TheprotocolrequiresthatbothbitsTXSTandTXSYaresetforcoldstartnodes.

0

Nostartupframetransmittedinkeyslot,nodeisnon-coldstarter

1

Keyslotusedtotransmitstartupframe,nodeisleadingorfollowingcoldstarter

7

PBSY

POCbusy.SignalsthatthePOCisbusyandcannotacceptacommandfromthehost.CMD(3-

0)islockedagainstwriteaccesses.

0

POCnotbusy,CMD(3-0)writable

1

POCisbusy,CMD(3-0)locked

6-4

Reserved

0

Readreturns0.Writeshavenoeffect.

1104

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-108.SUCConfigurationRegister1(SUCC1)FieldDescriptions(continued)

Bit

Field

Value

Description

3-0

CMD

Thecontrollerhostinterfacecommandvector.Thehostmaywriteanycontrollerhostinterface

commandatanytime,butcertaincommandsareenabledonlyincertainPOCstates.Ifa

commandisnotenabled,itwillnotbeexecuted,thecontrollerhostinterfacecommandvector

CMD(3-0)willberesetto0000=command_not_accepted,andflagCNAintheerrorinterrupt

registerwillbesetto1.Incasethepreviouscontrollerhostinterface(CHI)commandhasnot

yetcompleted,EIR.CCLissetto'1'togetherwithEIR.CNA;theCHIcommandneedstobe

repeated.ExceptforHALTstate,aPOCstatechangecommandappliedwhilethe

communicationcontrollerisalreadyintherequestedPOCstateneithercausesastatechange

norwillEIR.CNAbeset.

0

command_not_accepted

1h

CONFIG

2h

READY

3h

WAKEUP

4h

RUN

5h

ALL_SLOTS

6h

HALT

7h

FREEZE

8h

SEND_MTS

9h

ALLOW_COLDSTART

Ah

RESET_STATUS_INDICATORS

Bh

MONITOR_MODE

Ch

CLEAR_RAMS

Dh-Eh

Reserved

Fh

LOOPBACKMODE

ControllerHostInterfaceCommandVector:

Thefollowinggivesmoreinformationaboutthecontrollerhostinterfacecommands.

•ReadingCMD(3-0)showswhetherthelastcontrollerhostinterfacecommandwasaccepted.

•TheactualPOCstateismonitoredbyPOCS(5-0)inthecommunicationcontrollerstatusvector

•InmostcasestheHostmustcheckSUCC1.PBSYbeforewritinganewCHIcommand.

command_not_accepted

CMD(3-0)isresetto0000duetooneofthefollowingconditions:

•Illegalcommandappliedbythehost

•HostappliedcommandtoleaveCONFIGstatewithoutprecedingconfigurationlockkey

•Hostappliednewcommandwhileexecutionoftheprevioushostcommandhasnotcompleted

•Hostwritescommand_not_accepted

WhenCMD(3-0)isresetto0000duetoanunacceptedcommand,bitCNAintheerrorinterruptregisteris

set,and-ifenabled-aninterruptisgenerated.Commandswhicharenotacceptedarenotexecuted.

CONFIG

GotoPOCstateCONFIGwhencalledinPOCstatesDEFAULT_CONFIG,READY,orin

MONITOR_MODE.WhencalledinHALTstatethecommunicationcontrollertransitstoPOCstate

DEFAULT_CONFIG.Whencalledinanyotherstate,CMD(3-0)willberesetto0000=

command_not_accepted.

READY

GotoPOCstateREADYwhencalledinPOCstatesCONFIG,NORMAL_ACTIVE,NORMAL_PASSIVE,

STARTUP,orWAKEUP.Whencalledinanyotherstate,CMD(3-0)willberesetto0000=

command_not_accepted.

1105

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

WAKEUP

GotoPOCstateWAKEUPwhencalledinPOCstateREADY.Whencalledinanyotherstate,CMD(3-0)

willberesetto0000=command_not_accepted.

RUN

GotoPOCstateSTARTUPwhencalledinPOCstateREADY.Whencalledinanyotherstate,CMD(3-0)

willberesetto0000=command_not_accepted.

ALL_SLOTS

Leavesingleslotmodeaftersuccessfulstartup/integrationatthenextendofcyclewhencalledinPOC

statesNORMAL_ACTIVEorNORMAL_PASSIVE.Whencalledinanyotherstate,CMD(3-0)willbereset

to0000=command_not_accepted.

HALT

SettheHaltrequestHRQbitinthecommunicationcontrollerstatusvectorregisterandgotoPOCstate

HALTatthenextendofcyclewhencalledinPOCstatesNORMAL_ACTIVEorNORMAL_PASSIVE.

Whencalledinanyotherstate,CMD(3-0)willberesetto0000=command_not_accepted.

FREEZE

GotoPOCstateHALTimmediatelyandsettheFreezestatusIndicatorFSIbitinthecommunication

controllerstatusvectorregister.Canbecalledfromanystate.

SEND_MTS

SendsingleMTSsymbolduringthesymbolwindowofthefollowingcycleonthechannelconfiguredby

MTSA,MTSB,whencalledinPOCstateNORMAL_ACTIVE.Whencalledinanyotherstate,CMD(3-0)

willberesetto0000=command_not_accepted.

ALLOW_COLDSTART

ResetstatusflagsFSI,HRQ,CSNI

ThecommandresetsbitCSIintheCCSVregistertoenablecoldstartingofthenodewhencalledin

anyPOCstateexceptDEFAULT_CONFIG,CONFIGorHALT.Whencalledinthesestates,CMD(3-0)

willberesetto0000=command_not_accepted.

RESET_STATUS_INDICATORS

,andCSAIinthecommunicationcontrollerstatusvectorregister.

CLEAR_RAMS

SetsbitCRAMinthemessagehandlerstatusregisterwhencalledinDEFAULT_CONFIGorCONFIG

state.Whencalledinanyotherstate,CMD(3-0)willberesetto0000=command_not_accepted.Bit

CRAMisalsosetwhenthecommunicationcontrollerleaveshardwarereset.BysettingbitCRAMall

internalRAMblocksareinitializedtozero.DuringtheinitializationoftheRAMs,PBSYwillshowPOC

busy.AccesstotheconfigurationandstatusregistersispossibleduringexecutionofCHIcommand

CLEAR_RAMS.

TheinitializationoftheCommunicationControllerinternalRAMblockstakes2048VBUSclockcycles.

ThereshouldbenohostaccesstoIBForOBFduringinitializationoftheinternalRAMblocksafter

hardwareresetorafterassertionofcontrollerhostinterfacecommandCLEAR_RAMS.Beforeasserting

controllerhostinterfacecommandCLEAR_RAMSthehostshouldbeawarethatnotransferbetween

messageRAMandIBF/OBForthetransientbufferRAMsisongoing.Thiscommandalsoresetsthe

messagebufferstatusregisters(MHDS,TXRQ1/2/3/4,NDAT1/2/3/4,MBSC1/2/3/4).

NOTE:AllacceptedcommandswithexceptionofCLEAR_RAMSandSEND_MTSwillcausea

changeofthePOCstateintheVBUSclockdomainafteratmost8cyclesoftheslowerof

thetwoclocksVBUSclockand80MHzsampleclockcomingfromthePLL.Itisassumed

thatPOCwasnotbusywhenthecommandwasappliedandthatnoPOCstatechangewas

forcedbybusactivityinthattimeframe.ReadingregisterCommunicationControllerStatus

Vector(CCSV)willshowdatathatisadditionallydelayedbysynchronizationfromsample

clocktoVBUSclockdomainandbytheCPUinterface.Themaximumadditionaldelayis12

cyclesoftheslowerofthetwoclocksVBUSclockandsampleclock.

1106

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

MONITOR_MODE

EnterMONITOR_MODEwhencalledinPOCstateCONFIG.Inthismodethecommunicationcontrolleris

abletoreceiveFlexRayframesandCAS/MTSsymbols.Itisalsoabletodetectcodingerrors.The

temporalintegrityofreceivedframesisnotchecked.Thismodecanbeusedfordebuggingpurposes,e.g.

incasethatthestartupofaFlexRaynetworkfails.Whencalledinanyotherstate,CMD(3-0)willbereset

to0000=command_not_accepted.

23.19.2.3.2SUCConfigurationRegister2(SUCC2)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-122andTable23-109illustratethisregister.

Figure23-122.SUCConfigurationRegister2(SUCC2)[offset_CC=84h]

31

28

27

24

23

21

20

16

Reserved

LTN*

Reserved

LT*

R-0

R/W-1h

R-0

R/W-504h

15

0

LT*

R/W-504h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only.

Table23-109.SUCConfigurationRegister2(SUCC2)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved.

0

Readsreturn0.Writeshavenoeffect.

27-24

LTN

2-Fh

Listentimeoutnoise.Configurestheupperlimitforthestartupandwakeuplistentimeoutinthe

presenceofnoise.Mustbeidenticalinallnodesofacluster.

Thewakeup/startupnoisetimeoutiscalculatedasfollows:LT[20:0]·(LTN[3:0]+1)

23-21

Reserved.

0

Readsreturn0.Writeshavenoeffect.

20-0

LT

504h-139706hµT

Listentimeout.Configurestheupperlimitofthestartupandwakeuplistentimeout.

1107

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.3.3SUCConfigurationRegister3(SUCC3)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-123andTable23-110illustratethisregister.

Figure23-123.SUCConfigurationRegister3(SUCC3)[offset_CC=88h]

31

16

Reserved

R-0

15

8

7

4

3

0

Reserved

WCF*

WCP*

R-0

R/W-1h

R/W-1h

LEGEND:R/W=Read/Write;R=Readonly;D=Device-specificresetvalue;-n=value

afterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstateonly

Table23-110.SUCConfigurationRegister3(SUCC3)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved.

0

Readsreturn0.Writeshavenoeffect.

7-4

WCF

1-Fh

Maximumwithoutclockcorrectionfatal.Thesebitsdefinethenumberofconsecutiveeven/odd

cyclepairswithmissingclockcorrectiontermsthatwillcauseatransitionfrom

NORMAL_ACTIVEorNORMAL_PASSIVEstate.Thesemustbeidenticalinallnodesofa

cluster.

Note:ThetransitiontoHALTstateispreventedifSUCC1.HCSEisnotset.

3-0

WCP

1-Fh

Maximumwithoutclockcorrectionpassive.Thesebitsdefinethenumberofconsecutive

even/oddcyclepairswithmissingclockcorrectiontermsthatwillcauseatransitionfrom

NORMAL_ACTIVEtoNORMAL_PASSIVEtoHALTstate.Thesemustbeidenticalinallnodes

ofacluster.

23.19.2.3.4NEMConfigurationRegister(NEMC)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-124andTable23-111illustratethisregister.

Figure23-124.NEMConfigurationRegister(NEMC)[offset_CC=8Ch]

31

16

Reserved

R-0

15

4

3

0

Reserved

NML*

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-111.NEMConfigurationRegister(NEMC)FieldDescriptions

Bit

Field

Value

Description

31-7

Reserved.

0

Readsreturn0.Writeshavenoeffect.

6-0

NML

0-Chbytes

Networkmanagementvectorlength(inbytes).

ThesebitsconfigurethelengthoftheNMvector.Theconfiguredlengthmustbeidenticalinall

nodesofacluster.

1108

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.3.5PRTConfigurationRegister1(PRTC1)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-125andTable23-112illustratethisregister.

Figure23-125.PRTConfigurationRegister1(PRTC1)[offset_CC=90h]

31

26

25

24

16

RPW*

Rsvd

RXW*

R/W-2h

R-0

R/W-4Ch

15

14

13

12

11

10

4

3

0

BRP*

SSP*

Rsvd

CASM*

TSST*

R/W-0

R/W-0

R-0

R/W-23h

R/W-3h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-112.PRTConfigurationRegister1(PRTC1)FieldDescriptions

Bit

Field

Value

Description

31-26

RWP

2h-3Fh

Repetitionoftransmissionwakeuppattern.Thesebitsconfigurethenumberofrepetitions

(sequences)ofthetransmissionwakeupsymbol.

25

Reserved

0

Readreturns0.Writeshavenoeffect.

24-16

RXW

4Ch-12Dh

Wakeupsymbolreceivewindowlength.Configuresthenumberofbittimesusedbythenodeto

testthedurationofthereceivedwakeuppattern.Mustbeidenticalinallnodesofacluster.

15-14

BRP

Baudrateprescaler.ThesebitsconfigurethebaudrateontheFlexRaybus.Thebaudrates

listedbelowarevalidwithasampleclockof80MHz.Onebittimealwaysconsistsof8samples

independentoftheconfiguredbaudrate.

0

10Mbit/s(SampleClockPeriod=12.5ns;1µT=25ns;SamplesperµT=2)

1h

5Mbit/s(SampleClockPeriod=25ns;1µT=25ns;SamplesperµT=1)

2h,3h

2.5Mbit/s(SampleClockPeriod=50ns;1µT=50ns;SamplesperµT=1)

13-12

SPP

StrobePointPosition.Definesthesamplecountvalueforstrobing.Thestrobedbitvalueisset

tothevotedvaluewhenthesamplecountisincrementedtothevalueconfiguredbySPP[1:0].

Note:Thecurrentrevision2.1oftheFlexRayprotocolrequiresthatSPP[1:0]="00".The

alternatestrobepointpositionscouldbeusedtocompensateforasymmetriesinthe

physicallayer.

0,3h

Sample5(default)

1h

Sample4

2h

Sample6

11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-4

CASM

43h-63hbittimes

Collisionavoidancesymbolmax(inbittimes).Thesebitsconfiguretheupperlimitofthe

acceptancewindowforacollisionavoidancesymbol(CAS).CASM6isalways'1'.

3-0

TSST

3h-Fhbittimes

Transmissionstartsequencetransmitter(inbittimes).Thesebitsconfigurethedurationofthe

transmissionstartsequence(TSS)intermsofbittimes(1bittime=4µT=100ns@10Mbps).

Mustbeidenticalinallnodesofacluster.

1109

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.3.6PRTConfigurationRegister2(PRTC2)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-126andTable23-113illustratethisregister.

Figure23-126.PRTConfigurationRegister2(PRTC2)[offset_CC=94h]

31

30

29

24

23

16

Reserved

TXL*

TXI*

R-0

R/W-Fh

R/W-2Dh

15

14

13

8

7

6

5

0

Reserved

RXL*

Reserved

RXI*

R-0

R/W-Ah

R-0

R/W-Eh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-113.PRTConfigurationRegister2(PRTC2)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-24

TXL

Fh-3Chbittimes

Wakeupsymboltransmitlow(inbittimes).Thesebitsconfiguretheactivelowphaseofthe

wakeupsymbol.Thedurationmustbeidenticalinallnodesofacluster.

23-16

TXI

2Dh-B4hbittimes

Wakeupsymboltransmitidle(inbittimes).Thesebitsconfigurethenumberofbittimesusedby

thenodetotransmittheidlephaseofthewakeupsymbol.Durationsmustbeidenticalinall

nodesofacluster.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-8

RXL

Ah-37hbittimes

Wakeupsymbolreceivelow(inbittimes).Thesebitsconfigurethenumberofbittimesusedby

thenodetotestthedurationofthelowphaseofthereceivedwakeupsymbol.Mustbeidentical

inallnodesofacluster.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

RXI

Eh-37hbittimes

Wakeupsymbolreceiveidle(inbittimes).Thesebitsconfigurethenumberofbittimesusedby

thenodetotestthedurationoftheidlephaseofthereceivedwakeupsymbol.Mustbeidentical

inallnodesofacluster.

1110

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.3.7MHDConfigurationRegister(MHDC)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-127andTable23-114illustratethisregister.

Figure23-127.MHDConfigurationRegister(MHDC)[offset_CC=98h]

31

29

28

16

Reserved

SLT*

R-0

R/W-2h

15

7

6

0

Reserved

SFDL*

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-114.MHDConfigurationRegister(MHDC)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readreturns0.Writeshavenoeffect.

28-16

SLT

0-1F2Dh

Startoflatesttransmit(inminislots).Thesebitsconfigurethemaximumminislotvalueallowed

minislots

beforeinhibitingnewframetransmissionsintheDynamicSegmentofthecycle.Thereisno

transmissionindynamicsegmentifSLT[12:0]issettozero.

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

SFDL

0-7Fh

Staticframedatalength.Thesebitsconfigurethecluster-widepayloadlengthforallframessent

inthestaticsegmentindoublebytes.Thepayloadlengthmustbeidenticalinallnodesofa

cluster.

23.19.2.3.8GTUConfigurationRegister1(GTUC1)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-128andTable23-115illustratethisregister.

Figure23-128.GTUConfigurationRegister1(GTUC1)[offset_CC=A0h]

31

20

19

16

Reserved

UT*

R-0

R/W-0

15

0

UT*

R/W-0280h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-115.GTUConfigurationRegister1(GTUC1)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved.

0

Readsreturn0.Writeshavenoeffect.

19-0

UT

280h-9C400hµT

Microtickpercycle(inmicroticks).

Thesebitsconfigurethedurationofthecommunicationcycleinmicroticks.

1111

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.3.9GTUConfigurationRegister2(GTUC2)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-129andTable23-116illustratethisregister.

Figure23-129.GTUConfigurationRegister2(GTUC2)[offset_CC=A4h]

31

20

19

16

Reserved

SNM*

R-0

R/W-2h

15

14

13

0

Reserved

MPC*

R-0

R/W-Ah

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-116.GTUConfigurationRegister2(GTUC2)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-16

SNM

2h-Fhframes

Syncnodemax(inframes).Thesebitsconfigurethemaximumnumberofframeswithina

clusterwithsyncframeindicatorbitSYNset.Thenumberofframesmustbeidenticalinall

nodesofacluster.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-0

MPC

Ah-3E80hMT

Macrotickpercycle(inmacroticks).Thesebitsconfigurethedurationofonecommunication

cycleinmacroticks.Thecyclelengthmustbeidenticalinallnodesofacluster.

1112

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.3.10GTUConfigurationRegister3(GTUC3)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-130andTable23-117illustratethisregister.

Figure23-130.GTUConfigurationRegister3(GTUC3)[offset_CC=A8h]

31

30

24

23

22

16

Rsvd

MIOB*

Rsvd

MIOA*

R-0

R/W-2h

R-0

R/W-2h

15

8

7

0

UIOB*

UIOA*

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only.

Table23-117.GTUConfigurationRegister3(GTUC3)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-24

MIOB

2h-48hMT

MacrotickinitialoffsetchannelB(inmacroticks).Thesebitsconfigurethenumberofmacroticks

betweenthestaticslotboundaryandthesubsequentmacrotickboundaryofthesecondarytime

referencepointbasedonthenominalmacrotickduration.Mustbeidenticalinallnodesofa

cluster.

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

MIOA

2h-48hMT

MacrotickinitialoffsetchannelA(inmacroticks).Thesebitsconfigurethenumberofmacroticks

betweenthestaticslotboundaryandthesubsequentmacrotickboundaryofthesecondarytime

referencepointbasedonthenominalmacrotickduration.Mustbeidenticalinallnodesofa

cluster.

15-8

UIOB

0-F0hµT

MicrotickinitialoffsetchannelB(inmicroticks).Thesebitsconfigurethenumberofmicroticks

betweentheactualtimereferencepointonchannelBandthesubsequentmacrotickboundaryof

thesecondarytimereferencepoint.Theparameterhastobesetforeachchannelindependently.

7-0

UIOA

0-F0hµT

MicrotickinitialoffsetchannelA(inmicroticks).Thesebitsconfigurethenumberofmicroticks

betweentheactualtimereferencepointonchannelAandthesubsequentmacrotickboundaryof

thesecondarytimereferencepoint.Theparameterhastobesetforeachchannelindependently.

1113

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.3.11GTUConfigurationRegister4(GTUC4)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.Figure23-131andTable23-118illustratethisregister.

Figure23-131.GTUConfigurationRegister4(GTUC4)[offset_CC=ACh]

31

30

29

16

Reserved

OCS*

R-0

R/W-Ah

15

14

13

0

Reserved

NIT*

R-0

R/W-9h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-118.GTUConfigurationRegister4(GTUC4)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-16

OCS

8h-3E7EhMT

Offsetcorrectionstart(inmacroticks).Thesebitsdeterminethestartoftheoffsetcorrection

withintheNITphase,calculatedfromstartofcycle.Mustbeidenticalinallnodesofacluster.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-0

NIT

7h-3E7DhMT

Networkidletimestart(inmacroticks).Thesebitsconfigurethestartingpointofthenetworkidle

time(NIT)attheendofthecommunicationcycleexpressedintermsofmacroticksfromthe

beginningofthecycle.Thenumbermustbeidenticalinallnodesofacluster.

23.19.2.3.12GTUConfigurationRegister5(GTUC5)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.Figure23-132andTable23-119illustratethisregister.

Figure23-132.GTUConfigurationRegister5(GTUC5)[offset_CC=B0h]

31

24

23

21

20

16

DEC*

Reserved

CDD*

R/W-Eh

R-0

R/W-0

15

8

7

0

DCB*

DCA*

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-119.GTUConfigurationRegister5(GTUC5)FieldDescriptions

Bit

Field

Value

Description

31-24

DEC

Eh-8FhµT

Decodingcorrection(inmicroticks).Thesebitsconfigurethedecodingcorrectionvalueusedto

determinetheprimarytimereferencepoint.

23-21

Reserved.

0

Readsreturn0.Writeshavenoeffect.

20-16

CDD

0-14hµT

Clusterdriftdamping(inmicroticks).Thesebitsconfiguretheclusterdriftdampingvalueusedin

clocksynchronizationtominimizeaccumulationofroundingerrors.

15-8

DCB

0-C8hµT

DelaycompensationchannelB(inmicroticks).Thesebitsareusedtocompensateforreception

delaysontheindicatedchannel.Thiscompensatespropagationdelaysformicroticksinthe

rangeof0.0125to0.05s.Inpractice,theminimumpropagationdelayofallsyncnodesshould

beapplied.

7-0

DCA

0-C8hµT

DelaycompensationchannelA(inmicroticks).Thesebitsareusedtocompensateforreception

delaysontheindicatedchannel.Thiscompensatespropagationdelaysformicroticksinthe

rangeof0.0125to0.05s.Inpractice,theminimumpropagationdelayofallsyncnodesshould

beapplied.

1114

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.3.13GTUConfigurationRegister6(GTUC6)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-133andTable23-120illustratethisregister.

Figure23-133.GTUConfigurationRegister6(GTUC6)[offset_CC=B4h]

31

27

26

16

Reserved

MOD*

R-0

R/W-2h

15

11

10

0

Reserved

ASR*

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-120.GTUConfigurationRegister6(GTUC6)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

MOD

2h-783hµT

Maximumoscillatordrift(inmicroticks).Maximumdriftoffsetbetweentwonodesthatoperatewith

unsynchronizedclocksoveronecommunicationcycleinµT.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

ASR

0-753hµT

Acceptedstartuprange(inmicroticks).Numberofmicroticksconstitutingtheexpandedrangeof

measureddeviationforstartupframesduringintegration.

23.19.2.3.14GTUConfigurationRegister7(GTUC7)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-134andTable23-121illustratethisregister.

Figure23-134.GTUConfigurationRegister7(GTUC7)[offset_CC=B8h]

31

26

25

16

Reserved

NSS*

R-0

R/W-2h

15

10

9

0

Reserved

SSL*

R-0

R/W-4h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-121.GTUConfigurationRegister7(GTUC7)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved.

0

Readsreturn0.Writeshavenoeffect.

25-16

NSS

2h-3FFhMT

Numberofstaticslots(inmacroticks).Thesebitsconfigurethenumberofstaticslotsinacycle.

AtleasttwocoldstartnodesmustbeconfiguredtostartupaFlexRaynetwork.Thenumberof

staticslotsmustbeidenticalinallnodesofacluster.

15-10

Reserved.

0

Readsreturn0.Writeshavenoeffect.

9-0

SSL

4h-293hMT

Staticslotlength(inmacroticks).Thesebitsconfigurethedurationofastaticslot.Thestaticslot

lengthmustbeidenticalinallnodesofacluster.

1115

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.3.15GTUConfigurationRegister8(GTUC8)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-135andTable23-122illustratethisregister.

Figure23-135.GTUConfigurationRegister8(GTUC8)[offset_CC=BCh]

31

29

28

16

Reserved

NMS*

R-0

R/W-0

15

6

5

0

Reserved

MSL*

R-0

R/W-2h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-122.GTUConfigurationRegister8(GTUC8)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readreturns0.Writeshavenoeffect.

28-16

NMS

0-1F32h

Numberofminislots.Thesebitsconfigurethenumberofminislotsinthedynamicsegmentofa

cycle.Thenumberofminislotsmustbeidenticalinallnodesofacluster.

15-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

MSL

2h-3FhMT

Minislotlength(inmacroticks).Thesebitsconfigurethedurationofaminislot.Theminislotlength

mustbeidenticalinallnodesofacluster.

23.19.2.3.16GTUConfigurationRegister9(GTUC9)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-136andTable23-123illustratethisregister.

Figure23-136.GTUConfigurationRegister9(GTUC9)[offset_CC=C0h]

31

18

17

16

Reserved

DSI*

R-0

R/W-0

15

13

12

8

7

6

5

0

Reserved

MAPO*

Reserved

APO*

R-0

R/W-1h

R-0

R/W-1h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-123.GTUConfigurationRegister9(GTUC9)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17-16

DSI

0-2h

Dynamicslotidlephase(inminislots).Thedurationofthedynamicslotidlephasehastobe

greaterorequalthantheidledetectiontime.Mustbeidenticalinallnodesofacluster.

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-8

MAPO

1h-1FhMT

Minislotactionpointoffset(inmacroticks).Thesebitsconfiguretheminislotactionpointoffset

withintheminislotsofthedynamicsegment.Theminislotactionpointoffsetmustbeidenticalinall

nodesofacluster.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-0

APO

1h-3FhMT

Actionpointoffset(inmacroticks).Thesebitsconfiguretheactionpointoffsetwithinstaticslots

andsymbolwindow.Theactionpointoffsetmustbeidenticalinallnodesofacluster.

1116

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.3.17GTUConfigurationRegister10(GTUC10)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-137andTable23-124illustratethisregister.

Figure23-137.GTUConfigurationRegister10(GTUC10)[offset_CC=C4h]

31

27

26

16

Reserved

MRC*

R-0

R/W-2h

15

14

13

0

Reserved

MOC*

R-0

R/W-5h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-124.GTUConfigurationRegister10(GTUC10)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

MRC

2h-783hµT

Maximumratecorrection(inmicroticks).Holdsthemaximumpermittedratecorrectionvaluetobe

appliedbytheinternalclocksynchronizationalgorithm.Thecommunicationcontrollerchecksthe

internalratecorrectionvalueagainstthemaximumratecorrectionvalue(absolutevalue).

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-0

MOC

5h-3BA2hµT

Maximumoffsetcorrection(inmicroticks).Holdsthemaximumpermittedoffsetcorrectionvalueto

beappliedbytheinternalclocksynchronizationalgorithm(absolutevalue).Thecommunication

controllercheckstheinternaloffsetcorrectionvalueagainstthemaximumoffsetcorrectionvalue.

1117

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.3.18GTUConfigurationRegister11(GTUC11)

Figure23-138andTable23-125illustratethisregister.

Figure23-138.GTUConfigurationRegister11(GTUC11)[offset_CC=C8h]

31

27

26

24

23

19

18

16

Reserved

ERC*

Reserved

EOC*

R-0

R/W-0

R-0

R/W-0

15

10

9

8

7

2

1

0

Reserved

ERCC*

Reserved

EOCC*

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-125.GTUConfigurationRegister11(GTUC11)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-24

ERC

0-7hµT

Externalratecorrection(inmicroticks).Holdstheexternalclockratecorrectionvaluetobeapplied

bytheinternalclocksynchronizationalgorithm.Thevalueissubtracted/addedfrom/tothe

calculatedratecorrectionvalue.ThevalueisappliedduringNIT.Maybemodifiedin

DEFAULT_CONFIGorCONFIGstateonly.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18-16

EOC

0-7hµT

Externaloffsetcorrection(inmicroticks).Holdstheexternalclockoffsetcorrectionvaluetobe

appliedbytheinternalclocksynchronizationalgorithm.Thevalueissubtracted/addedfrom/tothe

calculatedoffsetcorrectionvalue.ThevalueisappliedduringNIT.Maybemodifiedin

DEFAULT_CONFIGorCONFIGstateonly.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

ERCC

Externalratecorrectioncontrol.BywritingtoERCC(1-0),theexternalratecorrectionisenabledas

specifiedbelow.ShouldbemodifiedonlyoutsideNIT.

0,1h

Noexternalratecorrection

2h

Externalratecorrectionvaluesubtractedfromcalculatedratecorrectionvalue

3h

Externalratecorrectionvalueaddedtocalculatedratecorrectionvalue

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1-0

EOCC

Externaloffsetcorrectioncontrol.BywritingtoEOCC(1-0),theexternaloffsetcorrectionisenabled

asspecifiedbelow.ShouldbemodifiedonlyoutsideNIT.

0,1h

Noexternaloffsetcorrection

2h

Externaloffsetcorrectionvaluesubtractedfromcalculatedoffsetcorrectionvalue

3h

Externaloffsetcorrectionvalueaddedtocalculatedoffsetcorrectionvalue

1118

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.4StatusRegisters

During8/16-bitaccessestostatusvariablescodedwithmorethan8/16-bit,thevariablemightbeupdated

bythecommunicationcontrollerbetweentwoaccesses(non-atomicreadaccesses).Allinternalcounters

andthecommunicationcontrollerstatusflagsareresetwhenthecommunicationcontrollertransitsfrom

CONFIGtoREADYstate.

23.19.2.4.1CommunicationControllerStatusVector(CCSV)

Figure23-139andTable23-126illustratethisregister.

Figure23-139.CommunicationControllerStatusVectorRegister(CCSV)[offset_CC=100h]

31

30

29

24

23

19

18

16

Reserved

PSL

RCA

WSV

R-0

R-0

R-2

R-0

15

14

13

12

11

10

9

8

7

6

5

0

Rsvd

CSI

CSAI

CSNI

Reserved

SLM

HQR

FSI

POCS

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-126.CommunicationControllerStatusVectorRegister(CCSV)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29-24

PSL

POCStatusLog.StatusofPOCS[5:0]immediatelybeforeenteringHALTstate.Setwhenentering

HALTstate.SettoHALTwhenFREEZEcommandisappliedduringHALTstateandFSIisnot

alreadyseti.e.theHALTstatewasnotreachedbyFREEZEcommand.Resetto"0"whenleaving

HALTstate.

23-19

RCA

0-1Fh

Remainingcoldstartattempts.Indicatesthenumberofremainingcoldstartattempts.Themaximum

numberofcoldstartattemptsisconfiguredbyCSA(4-0)intheSUCconfigurationregister1.

18-16

WSV

Wakeupstatus.Indicatesthestatusofthecurrentwakeupattempt.ResetbyCHIcommand

RESET_STATUS_INDICATORSorbytransitionfromHALTtoEFAULT_CONFIGstate.

0

UNDEFINED.NowakeupattemptsinceCONFIGstatewasleft.

1h

RECEIVED_HEADER.Setwhenthecommunicationcontrollerfinisheswakeupduetothe

receptionofaframeheaderwithoutcodingviolationoneitherchannelinWAKEUP_LISTENor

WAKEUP_DETECTstate.

2h

RECEIVED_WUP.Setwhenthecommunicationcontrollerfinisheswakeupduetothereceptionof

avalidwakeuppatternontheconfiguredwakeupchannelinWAKEUP_LISTENor

WAKEUP_DETECTstate.

3h

COLLISION_HEADER.Setwhenthecommunicationcontrollerstopswakeupduetoadetected

collisionduringwakeuppatterntransmissionbyreceivingavalidheaderoneitherchannel.

4h

COLLISION_WUP.Setwhenthecommunicationcontrollerstopswakeupduetoadetected

collisionduringwakeuppatterntransmissionbyreceivingavalidwakeuppatternontheconfigured

wakeupchannel.

5h

COLLISION_UNKNOWN.Setwhenthecommunicationcontrollerstopswakeupbyleaving

WAKEUP_DETECTstateafterexpirationofthewakeuptimerwithoutreceivingavalidwakeup

patternoravalidframeheader.

6h

TRANSMITTED.Setwhenthecommunicationcontrollerhassuccessfullycompletedthe

transmissionofthewakeuppattern.

7h

Reserved

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14

CSI

Coldstartinhibit.Indicatesthatthenodeisdisabledfromcoldstarting.Theflagissetwhenever

thePOCentersREADYstate.Theflaghastoberesetundercontrolofthehostbythecontroller

hostinterfacecommandALLOW_COLDSTART(CMD(3-0)=1001).

0

Coldstartingofnodeenabled

1

Coldstartingofnodedisabled

13

CSAI

Coldstartabortindicator.Coldstartaborted.ResetbyCHIcommand

RESET_STATUS_INDICATORSorbytransitionfromHALTtoDEFAULT_CONFIGstateorfrom

READYtoSTARTUPstate.

1119

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-126.CommunicationControllerStatusVectorRegister(CCSV)FieldDescriptions(continued)

Bit

Field

Value

Description

12

CSNI

Coldstartnoiseindicator.Indicatesthatthecoldstartprocedureoccurredundernoisyconditions.

ResetbyCHIcommandRESET_STATUS_INDICATORSorbytransitionfromHALTto

DEFAULT_CONFIGstateorfromREADYtoSTARTUPstate.

11-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

SLM

Slotmode.IndicatestheactualslotmodeofthePOCinstatesREADY,WAKEUP,STARTUP,

NORMAL_ACTIVE,andNORMAL_PASSIVE.DefaultisSINGLE.ChangestoALL,dependingon

SUCC1.TSM.InNORMAL_ACTIVEorNORMAL_PASSIVEstatetheCHIcommandALL_SLOTS

willchangetheslotmodefromSINGLEoverALL_PENDINGtoALL.SettoSINGLEinallother

states.

0

SINGLE

1h

Reserved

2h

ALL_PENDING

3h

ALL

7

HRQ

0-1

Haltrequest.IndicatesthatarequestfromtheHosthasbeenreceivedtohaltthePOCattheend

ofthecommunicationcycle.ResetbyCHIcommandRESET_STATUS_INDICATORSorby

transitionfromHALTtoDEFAULT_CONFIGstateorwhenenteringREADYstate.

6

FSI

0-1

Freezestatusindicator.IndicatesthatthePOChasenteredtheHALTstateduetoCHIcommand

FREEZEorduetoanerrorconditionrequiringanimmediatePOChalt.ResetbyCHIcommand

RESET_STATUS_INDICATORSorbytransitionfromHALTtoDEFAULT_CONFIGstate.

5-0

POCS

Protocoloperationcontrolstatus.

IndicatestheactualstateofoperationoftheCommunicationControllerProtocolOperation

Control:

0

DEFAULT_CONFIGstate

1h

READYstate

2h

NORMAL_ACTIVEstate

3h

NORMAL_PASSIVEstate

4h

HALTstate

5h

MONITOR_MODEstate

6h-Ch

Reserved

Dh

LOOPBACKMODEstate

Eh

Reserved

Fh

CONFIGstate

IndicatestheactualstateofoperationofthePOCinthewakeuppath:

10h

WAKEUP_STANDBYstate

11h

WAKEUP_LISTENstate

12h

WAKEUP_SENDstate

13h

WAKEUP_DETECTstate

14h-1Fh

Reserved

IndicatestheactualstateofoperationofthePOCinthestartuppath:

20h

STARTUP_PREPAREstate

21h

COLDSTART_LISTENstate

22h

COLDSTART_COLLISION_RESOLUTIONstate

23h

COLDSTART_CONSISTENCY_CHECKstate

24h

COLDSTART_GAPstate

25h

COLDSTART_JOINstate

26h

INTEGRATION_COLDSTART_CHECKstate

27h

INTEGRATION_LISTENstate

28h

INTEGRATION_CONSISTENCY_CHECKstate

29h

INITIALIZE_SCHEDULEstate

2Ah

ABORT_STARTUPstate

2Bh-3Fh

Reserved

1120

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

NOTE:CHIcommandRESET_STATUS_INDICATORS(SUCC1.CMD[3:0]="Ah")resetsflagsFSI,

HRQ,CSNI,CSAI,theslotmodeSLM[1:0],andthewakeupstatusWSV[2:0]

23.19.2.4.2CommunicationControllerErrorVector(CCEV)

ResetbyCHIcommandRESET_STATUS_INDICATORSorbytransitionfromHALTto

DEFAULT_CONFIGstateorwhenenteringREADYstate.

Figure23-140andTable23-127illustratethisregister.

Figure23-140.CommunicationControllerErrorVectorRegister(CCEV)[offset_CC=104h]

31

16

Reserved

R-0

15

13

12

8

7

6

5

4

3

0

Reserved

PTAC

ERRM

Reserved

CCFC

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-127.CommunicationControllerErrorVectorRegister(CCEV)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-8

PTAC

0-1Fh

Passivetoactivecount.Indicatesthenumberofconsecutiveeven/oddcyclepairsthathave

passedwithvalidrateandoffsetcorrectionterms,whilethenodeiswaitingtotransitfrom

NORMAL_PASSIVEstatetoNORMAL_ACTIVEstate.Thetransitiontakesplacewhen

PTAC(4-0)equalsPTA(4-0)-1asdefinedintheSUCconfigurationregister1

7-6

ERRM

Errormode.IndicatestheactualerrormodeofthePOC.

0

ACTIVE

1h

PASSIVE

2h

COMM_HALT

3h

Reserved

5-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

CCFC

0-15h

Clockcorrectionfailedcounter.Theclockcorrectionfailedcounterisincrementedbyoneatthe

endofanyoddcommunicationcyclewhereeitherthemissingoffsetcorrectionerrorormissing

ratecorrectionerrorareactive.Theclockcorrectionfailedcounterisresetto0attheendofan

oddcommunicationcycleifneithertheoffsetcorrectionfailednortheratecorrectionfailed

errorsareactive.Theclockcorrectionfailedcounterstopsat15.

1121

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.4.3SlotCounterValue(SCV)

ThisregisterisresetwhentheCommunicationControllerleavesCONFIGstateorentersSTARTUPstate.

Figure23-141andTable23-128illustratethisregister.

Figure23-141.SlotCounterVectorRegister(SCV)[offset_CC=110h]

31

27

26

16

Reserved

SCCB

R-0

R-0

15

11

10

0

Reserved

SCCA

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-128.SlotCounterVectorRegister(SCV)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

SCCB

1h-7FFh

SlotcounterchannelB.CurrentslotcountervaluechannelB.Thevalueisincrementedbythe

communicationcontrollerandresetatthestartofacommunicationcycle.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

SCCA

1h-7FFh

SlotcounterchannelA.CurrentslotcountervaluechannelA.Thevalueisincrementedbythe

communicationcontrollerandresetatthestartofacommunicationcycle.

23.19.2.4.4MacrotickandCycleCounterValue(MTCCV)

Figure23-142andTable23-129illustratethisregister.

Figure23-142.MacrotickandCycleCounterRegister(MTCCV)[offset_CC=114h]

31

22

21

16

Reserved

CCV

R-0

R-0

15

14

13

0

Reserved

MTV

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-129.MacrotickandCycleCounterRegister(MTCCV)FieldDescriptions

Bit

Field

Value

Description

31-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-16

CCV

0-3Fh

Cyclecountervalue.Currentcyclecountervalue.Thevalueisincrementedbythecommunication

controlleratthestartofacommunicationcycle.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-0

MTV

0-3E80h

Macrotickvalue.Currentmacrotickvalue.Thevalueisincrementedbythecommunication

controllerandresetatthestartofacommunicationcycle.

1122

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.4.5RateCorrectionValue(RCV)

ThisregisterisresetwhentheCommunicationControllerleavesCONFIGstateorentersSTARTUPstate.

Figure23-143andTable23-130illustratethisregister.

Figure23-143.RateCorrectionValueRegister(RCV)[offset_CC=118h]

31

16

Reserved

R-0

15

12

11

0

Reserved

RCV

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-130.RateCorrectionValueRegister(RCV)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-0

RCV

Ratecorrectionvalue(inmicroticks).Ratecorrectionvalue(two'scomplement).Calculatedinternal

ratecorrectionvaluebeforelimitation.IftheRCVvalueexceedsthelimitsdefinedby

GTUC10.MRC[10:0],flagSFS.RCLRissetto'1'.

NOTE:Theexternalratecorrectionvalueisaddedtothelimitedratecorrectionvalue.

23.19.2.4.6OffsetCorrectionValue(OCV)

Figure23-144andTable23-131illustratethisregister.

Figure23-144.OffsetCorrectionValueRegister(OCV)[offset_CC=11Ch]

31

20

19

16

Reserved

OCV

R-0

R-0

15

0

OCV

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-131.OffsetCorrectionValueRegister(OCV)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19-0

OCV

Offsetcorrectionvalue(inmicroticks).Offsetcorrectionvalue(two'scomplement).Calculated

internaloffsetcorrectionvaluebeforelimitation.IftheOCVvalueexceedsthelimitsdefinedby

GTUC10.MOC[13:0],flagSFS.OCLRissetto'1'

NOTE:Theexternaloffsetcorrectionvalueisaddedtothelimitedoffsetcorrectionvalue.

1123

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.4.7SyncFrameStatus(SFS)

ThisregisterisresetwhentheCommunicationControllerleavesCONFIGstateorentersSTARTUPstate.

Figure23-145andTable23-132illustratethisregister.

Figure23-145.SyncFrameStatusRegister(SFS)[offset_CC=120h]

31

20

19

18

17

16

Reserved

RCLR

MRCS

OCLR

MOCS

R-0

R-0

R-0

R-0

R-0

15

12

11

8

7

4

3

0

VSBO

VSBE

VSAO

VSAE

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-132.SyncFrameStatusRegister(SFS)FieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Readreturns0.Writeshavenoeffect.

19

RCLR

Ratecorrectionlimitreached.TheRateCorrectionLimitReachedflagsignalstotheHost,thatthe

ratecorrectionvaluehasexceededitslimitasdefinedbyGTUC10.MRC[10:0].Theflagisupdated

bythecommunicationcontrolleratstartofoffsetcorrectionphase.

0

Ratecorrectionbelowlimit

1

Ratecorrectionlimitreached

18

MRCS

Missingratecorrectionsignal.Themissingratecorrectionsignalsignalstothehostthatnorate

correctioncanbeperformedbecausenopairsofeven/oddsyncframeswerereceived.Theflagis

updatedbythecommunicationcontrolleratstartofoffsetcorrectionphase.

0

Ratecorrectionsignalvalid

1

Missingratecorrectionsignal

17

OCLR

Offsetcorrectionlimitreached.Theoffsetcorrectionlimitreachedflagsignalstothehostthatthe

offsetcorrectionvaluehasreacheditslimitasdefinedbyGTUC10.MOC[13:0].Theflagisupdated

bythecommunicationcontrolleratstartofoffsetcorrectionphase.

0

Offsetcorrectionbelowlimit

1

Offsetcorrectionlimitreached

16

MOCS

Missingoffsetcorrectionsignal.Themissingoffsetcorrectionsignalsignalstothehostthatnorate

correctioncanbeperformedbecausenopairsofeven/oddsyncframeswerereceived.Theflag

isupdatedbythecommunicationcontrolleratstartofoffsetcorrectionphase.

0

Offsetcorrectionsignalvalid

1

Missingoffsetcorrectionsignal

15-12

VSBO

0-Fh

ValidsyncframeschannelB,oddcommunicationcycle.Holdsthenumberofvalidsyncframes

receivedonchannelBintheoddcommunicationcycle.Iftransmissionofsyncframesisenabled

bySUCC1.TXSYthevalueisincrementedbyone.ThevalueisupdatedduringtheNITofeach

oddcommunicationcycle.

11-8

VSBE

0-Fh

ValidsynchframeschannelB,evencommunicationcycle.Holdsthenumberofvalidsyncframes

receivedandtransmittedonchannelBintheevencommunicationcycle.Iftransmissionofsync

framesisenabledbySUCC1.TXSYthevalueisincrementedbyone.Thevalueisupdatedduring

theNITofeachevencommunicationcycle.

7-4

VSAO

0-Fh

ValidsynchframeschannelA,oddcommunicationcycle.Holdsthenumberofvalidsyncframes

receivedandtransmittedonchannelAintheoddcommunicationcycle.Iftransmissionofsync

framesisenabledbySUCC1.TXSYthevalueisincrementedbyone.Thevalueisupdatedduring

theNITofeachoddcommunicationcycle.

3-0

VSAE

0-Fh

ValidsynchframeschannelA,evencommunicationcycle.Holdsthenumberofvalidsyncframes

receivedandtransmittedonchannelAintheevencommunicationcycle.Iftransmissionofsync

framesisenabledbySUCC1.TXSYthevalueisincrementedbyone.Thevalueisupdatedduring

theNITofeachevencommunicationcycle.

NOTE:ThebitfieldsVSBO(3-0),VSBE(3-0),VSAO(3-0),VSAE(3-0)areonlyvalidiftherespective

channelisassignedtothecommunicationcontrollerbySUCC1.CCHAorSUCC1.CCHB.

1124

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.4.8SymbolWindowandNITStatus(SWNIT)

Symbolwindowrelatedstatusinformation.Updatedbythecommunicationcontrollerattheendofthe

symbolwindowforeachchannel.Duringstartupthestatusdataisnotupdated.Thisregisterisresetwhen

theCommunicationControllerleavesCONFIGstateorentersSTARTUPstate.

Figure23-146andTable23-133illustratethisregister.

Figure23-146.SymbolWindowandNITStatusRegister(SWNIT)[offset_CC=124h]

31

16

Reserved

R-0

15

12

11

10

9

8

7

6

5

4

3

2

1

0

Reserved

SBNB

SENB

SBNA

SENA

MTSB

MTSA

TCSB

SBSB

SESB

TCSA

SBSA

SESA

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-133.SymbolWindowandNITStatusRegister(SWNIT)FieldDescriptions

Bit

Field

Value

Description

31-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SBNB

SlotboundaryviolationduringNITchannelB.

0

Noslotboundaryviolationdetected

1

SlotboundaryviolationduringNITdetectedonchannelB

10

SENB

SyntaxerrorduringNITchannelB.

0

Nosyntaxerrordetected

1

SyntaxerrorduringNITdetectedonchannelB

9

SBNA

SlotboundaryviolationduringNITchannelA.

0

Noslotboundaryviolationdetected

1

SlotboundaryviolationduringNITdetectedonchannelA

8

SENA

SyntaxerrorduringNITchannelA.

0

Nosyntaxerrordetected

1

SyntaxerrorduringNITdetectedonchannelA

7

MTSB

MTSReceivedonChannelB.MediaAccessTestsymbolreceivedonchannelBduringthelast

symbolwindow.Updatedbythecommunicationcontrollerforeachchannelattheendofthe

symbolwindow.Whenthisbitissetto'1',alsointerruptflagSIR.MTSBissetto'1'.

0

NoMTSsymbolreceivedonchannelB

1

MTSsymbolreceivedonchannelB

6

MTSA

MTSReceivedonChannelA.MediaAccessTestsymbolreceivedonchannelAduringthelast

symbolwindow.Updatedbythecommunicationcontrollerforeachchannelattheendofthe

symbolwindow.Whenthisbitissetto'1',alsointerruptflagSIR.MTSBissetto'1'.

0

NoMTSsymbolreceivedonchannelA

1

MTSsymbolreceivedonchannelA

5

TCSB

TransmissionconflictinsymbolwindowchannelB.

0

Notransmissionconflictdetected

1

TransmissionconflictinsymbolwindowdetectedonchannelB

4

SBSB

SlotboundaryviolationinsymbolwindowchannelB.

0

Noslotboundaryviolationdetected

1

SlotboundaryviolationduringsymbolwindowdetectedonchannelB

3

SESB

SyntaxerrorinsymbolwindowchannelB.

0

Nosyntaxerrordetected

1

SyntaxerrorduringsymbolwindowdetectedonchannelB

1125

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-133.SymbolWindowandNITStatusRegister(SWNIT)FieldDescriptions(continued)

Bit

Field

Value

Description

2

TCSA

TransmissionconflictinsymbolwindowchannelA.

0

Notransmissionconflictdetected

1

TransmissionconflictinsymbolwindowdetectedonchannelA

1

SBSA

SlotboundaryviolationinsymbolwindowchannelA.

0

Noslotboundaryviolationdetected

1

SlotboundaryviolationduringsymbolwindowdetectedonchannelA

0

SESA

SyntaxerrorinsymbolwindowchannelA.

0

Nosyntaxerrordetected

1

SyntaxerrorduringsymbolwindowdetectedonchannelA

23.19.2.4.9AggregatedChannelStatus(ACS)

Theaggregatedchannelstatusprovidesthehostwithanaccruedstatusofchannelactivityforall

communicationslotsregardlessofwhethertheyareassignedfortransmissionorsubscribedforreception.

Theaggregatedchannelstatusalsoincludesstatusdatafromthesymbolphaseandthenetworkidle

time.Thestatusdataisupdated(set)aftereachslotandaggregateduntilitisresetbythehost.During

startupthestatusdataisnotupdated.Aflagisclearedbywritinga'1'tothecorrespondingbitposition.

Writinga'0'hasnoeffectontheflag.ThisregisterisresetwhentheCommunicationControllerleaves

CONFIGstateorentersSTARTUPstate.

Figure23-147andTable23-134illustratethisregister.

Figure23-147.AggregatedChannelStatusRegister(ACS)[offset_CC=128h]

31

16

Reserved

R-0

15

13

12

11

10

9

8

7

5

4

3

2

1

0

Reserved

SBVB

CIB

CEDB

SEDB

VFRB

Reserved

SBVA

CIA

CEDA

SEDA

VFRA

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-134.AggregatedChannelStatusRegister(ACS)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

SBVB

SlotboundaryviolationonchannelB.Oneormoreslotboundaryviolationswereobservedon

channelBatanytimeduringtheobservationperiod(staticordynamicslotsincludingsymbol

windowandNIT).

0

Noslotboundaryviolationobserved

1

Slotboundaryviolation(s)observedonchannelB

11

CIB

CommunicationindicatorchannelB.OneormorevalidframeswerereceivedonchannelBinslots

thatalsocontainedanyadditionalcommunicationduringtheobservationperiod,i.e.oneormore

slotsreceivedavalidframeANDhadanycombinationofeithersyntaxerrorORcontenterrorOR

slotboundaryviolation.

0

Novalidframe(s)receivedinslotscontaininganyadditionalcommunication

1

Validframe(s)receivedonchannelBinslotscontaininganyadditionalcommunication

10

CEDB

ContenterrordetectedonchannelB.Oneormoreframeswithacontenterrorwerereceivedon

channelBinanystaticordynamicslotduringtheobservationperiod.

0

Noframewithcontenterrorreceived

1

Frame(s)withcontenterrorreceivedonchannelB

1126

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-134.AggregatedChannelStatusRegister(ACS)FieldDescriptions(continued)

Bit

Field

Value

Description

9

SEDB

SyntaxerrordetectedonchannelB.Oneormoresyntaxerrorsinstaticordynamicslotsincluding

symbolwindowandNITwereobservedonchannelB.

0

Nosyntaxerrorobserved

1

Syntaxerror(s)observedonchannelB

8

VFRB

ValidframereceivedonchannelB.OneormorevalidframeswerereceivedonchannelBinany

staticordynamicslotduringtheobservationperiod.Resetisundercontrolofthehost.

0

Novalidframereceived

1

Validframe(s)receivedonchannelB

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

SBVA

SlotboundaryviolationonchannelA.Oneormoreslotboundaryviolationswereobservedon

channelAatanytimeduringtheobservationperiod(staticordynamicslotsincludingsymbol

windowandNIT).

0

Noslotboundaryviolationobserved

1

Slotboundaryviolation(s)observedonchannelA

3

CIA

CommunicationindicatorchannelA.OneormorevalidframeswerereceivedonchannelAinslots

thatalsocontainedanyadditionalcommunicationduringtheobservationperiod,i.e.oneormore

slotsreceivedavalidframeANDhadanycombinationofeithersyntaxerrorORcontenterrorOR

slotboundaryviolation.

0

Novalidframe(s)receivedinslotscontaininganyadditionalcommunication

1

Validframe(s)receivedonchannelAinslotscontaininganyadditionalcommunication

2

CEDA

ContenterrordetectedonchannelA.Oneormoreframeswithacontenterrorwerereceivedon

channelAinanystaticordynamicslotduringtheobservationperiod.

0

Noframewithcontenterrorreceived

1

Frame(s)withcontenterrorreceivedonchannelA

1

SEDA

SyntaxerrordetectedonchannelA.Oneormoresyntaxerrorsinstaticordynamicslotsincluding

symbolwindowandNITwereobservedonchannelA.

0

Nosyntaxerrorobserved

1

Syntaxerror(s)observedonchannelA

0

VFRA

ValidframereceivedonchannelA.OneormorevalidframeswerereceivedonchannelAinany

staticordynamicslotduringtheobservationperiod.

0

Novalidframereceived

1

Validframe(s)receivedonchannelA

1127

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.4.10EvenSyncID[1...15](ESIDn)

RegistersESID1toESID15holdtheframeIDsofthesyncframesreceivedinevencommunication

cycles,assortedinascendingorder,withregisterESID1holdingthelowestreceivedsyncframeID.Ifthe

nodetransmitsasyncframeinanevencommunicationcyclebyitself,registerESID1holdstherespective

syncframeIDasconfiguredinmessagebuffer0.ThevalueisupdatedduringtheNITofeacheven

communicationcycle.ThisregisterisresetwhentheCommunicationControllerleavesCONFIGstateor

entersSTARTUPstate.

Figure23-148andTable23-135illustratethisregister.

Figure23-148.EvenSyncIDRegister[1...15](ESIDn)[offset_CC=130h-168h]

31

16

Reserved

R-0

15

14

13

10

9

0

RXEB

RXEA

Reserved

EID

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-135.EvenSyncIDRegister[1...15](ESIDn)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15

RXEB

ReceivedevensyncIDonchannelB.AsyncframecorrespondingtothestoredevensyncIDwas

receivedonchannelB.

0

SyncframenotreceivedonchannelB

1

SyncframereceivedonchannelB

14

RXEA

ReceivedevensyncIDonchannelA.AsyncframecorrespondingtothestoredevensyncIDwas

receivedonchannelA.

0

SyncframenotreceivedonchannelA

1

SyncframereceivedonchannelA

13-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

EID

EvenSyncID.SyncframeIDevencommunicationcycle.

1128

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.4.11OddSyncID[1...15](OSIDn)

RegistersOSID1toOSID15holdtheframeIDsofthesyncframesreceivedinoddcommunicationcycles,

assortedinascendingorder,withregisterOSID1holdingthelowestreceivedsyncframeID.Ifthenode

transmitsasyncframeinanoddcommunicationcyclebyitself,registerOSID1holdstherespectivesync

frameIDasconfiguredinmessagebuffer0.ThevalueisupdatedduringtheNITofeachodd

communicationcycle.ThisregisterisresetwhentheCommunicationControllerleavesCONFIGstateor

entersSTARTUPstate.

Figure23-149andTable23-136illustratethisregister.

Figure23-149.OddSyncIDRegister[1...15](OSIDn)[offset_CC=170h-1A8h]

31

16

Reserved

R-0

15

14

13

10

9

0

RXOB

RXOA

Reserved

OID

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-136.OddSyncIDRegister[1...15](OSIDn)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15

RXOB

ReceivedoddsyncIDonchannelB.AsyncframecorrespondingtothestoredevensyncIDwas

receivedonchannelB.

0

SyncframenotreceivedonchannelB

1

SyncframereceivedonchannelB

14

RXOA

ReceivedoddsyncIDonchannelA.AsyncframecorrespondingtothestoredevensyncIDwas

receivedonchannelA.

0

SyncframenotreceivedonchannelA

1

SyncframereceivedonchannelA

13-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

OID

OddSyncID.SyncframeIDoddcommunicationcycle.

1129

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.4.12NetworkManagementVector[1...3](NMVn)

ThethreenetworkmanagementregistersholdtheaccruedNMvector(configurable0-12bytes).The

accruedNMvectorisgeneratedbythecommunicationcontrollerbybit-wiseORingeachNMvector

received(validframeswithPPI=1)oneachchannel.

ThecommunicationcontrollerupdatestheNMvectorattheendofeachcommunicationcycleaslongas

thecommunicationcontrolleriseitherinNORMAL_ACTIVEorNORMAL_PASSIVEstate.

NMVn-bytesexceedingtheconfiguredNMvectorlengtharenotvalid.

Figure23-150illustratestheseregistersandTable23-137showstheassignmentofthedatabytestothe

networkmanagementvector.

Figure23-150.NetworkManagementRegister[1...3](NMVn)[offset_CC=1B0h-1B8h]

31

16

NMI

R-0

15

0

NMI

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-137.AssignmentofDataBytestoNetworkManagementVector

3

3

2

2

2

2

2

2

2

2

2

2

1

1

1

1

1

1

1

1

1

1

9

8

7

6

5

4

3

2

1

0

Bit

Word

1

0

9

8

7

6

5

4

3

2

1

0

9

8

7

6

5

4

3

2

1

0

NMV1

Data3

Data2

Data1

Data0

NMV2

Data7

Data6

Data5

Data4

NMV3

Data11

Data10

Data9

Data8

1130

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.5MessageBufferControlRegisters

23.19.2.5.1MessageRAMConfiguration(MRC)

ThemessageRAMConfigurationregisterdefinesthenumberofmessagebuffersassignedtothestatic

segment,dynamicsegment,andFIFO.TheregistercanbewrittenduringDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-151andTable23-138illustratethisregister.

Figure23-151.MessageRAMConfigurationRegister(MRC)[offset_CC=300h]

31

27

26

25

24

23

16

Reserved

SPLM*

SEC*

LCB*

R-0

R-1

R-0

R/W-80h

15

8

7

0

FFB*

FDB*

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-138.MessageRAMConfigurationRegister(MRC)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

SPLM

SyncFramePayloadMultiplex.Thisbitisonlyevaluatedifthenodeisconfiguredassyncnode

(SUCC1.TXSY='1')orforsingleslotmodeoperation(SUCC1.TSM='1').Whenthisbitissetto

'1'messagebuffers0and1arededicatedforsyncframetransmissionwithdifferentpayloaddata

onchannelAandB.Whenthisbitissetto'0',syncframesaretransmittedfrommessagebuffer0

withthesamepayloaddataonbothchannels.Notethatthechannelfilterconfigurationfor

messagebuffer0resp.messagebuffer1hastobechosenaccordingly.

0

Onlymessagebuffer0lockedagainstreconfiguration

1

Bothmessagebuffers0and1arelockedagainstreconfiguration

25-24

SEC

SecureBuffers.NotevaluatedwhenthecommunicationcontrollerisinDEFAULT_CONFIGor

CONFIGstate.

0

Reconfigurationofmessagebuffersenabledwithnumbers<FFBhenabled

Exception:Innodesconfiguredforsyncframetransmissionorforsingleslotmodeoperation

messagebuffer0(andifSPLM='1',alsomessagebuffer1)isalwayslocked

1h

Reconfigurationofmessagebufferswithnumbers<FDBandwithnumbersFFBlockedand

transmissionofmessagebuffersforstaticsegmentwithnumbersFDBdisabled

10h

Reconfigurationofallmessagebufferslocked

11h

Reconfigurationofallmessagebufferslockedandtransmissionofmessagebuffersforstatic

segmentwithnumbersFDBdisabled

26-16

LCB

Lastconfiguredbuffer.

0-7Fh

NumberofmessagebuffersisLCB+1

≥80h

Nomessagebufferconfigured

15-8

FFB

FirstbufferofFIFO.

0

AllmessagebuffersassignedtotheFIFO

0-7Fh

MessagebuffersfromFFBtoLCBassignedtotheFIFO

≥80h

NomessagebufferassignedtotheFIFO

7-0

FDB

Firstdynamicbuffer.

0

Nogroupofpurestaticbuffersconfigured

0-7Fh

Messagebuffers0toFDB-1reservedforstaticsegment

≥80h

Nodynamicbuffersconfigured

1131

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

NOTE:Incasethenodeisconfiguredassyncnode(SUCC1.TXSY='1')orforsingleslotmode

operation(SUCC1.TSM='1'),messagebuffer0resp.1isreservedforsyncframesorsingle

slotframesandhavetobeconfiguredwiththenode-specifickeyslotID.Incasethenodeis

neitherconfiguredassyncnodenorforsingleslotoperationmessagebuffer0resp.1is

treatedlikeallothermessagebuffers.

Table23-139.BufferConfiguration

MessageBuffer0

↓StaticBuffers

MessageBuffer1

...

↓Static+DynamicBuffers

←FDB

↓FIFO

←FFB

FIFOconfigured:FBB>FDB

NoFIFOconfigured:FFB

≥128

MessageBufferN-1

MessageBufferN

←LCB

LCB≥FDB,

LCB≥FFB

TheprogrammermustensurethattheconfigurationdefinedbyFDB(7-0),FFB(7-0),andLCB(7-0)isvalid.

NOTE:Thecommunicationcontrollerdoesnotcheckforerroneousconfigurations.

NOTE:MaximumNumberofHeaderSections

Themaximumnumberofheadersectionsis128.Thismeansamaximumof128message

bufferscanbeconfigured.Themaximumlengthofthedatasectionsis254bytes.Thelength

ofthedatasectionmaybeconfigureddifferentforeachmessagebuffer.Incasetwoormore

messagebuffersareassignedtoslot1byuseofcyclefiltering,allofthemmustbelocated

eitherinthe"StaticBuffers"oratthebeginningofthe"Static+DynamicBuffers"section.

TheFlexRayprotocolspecificationrequiresthateachnodehastosendaframeinitskey

slot.Thereforeatleastmessagebuffer0isreservedfortransmissioninthekeyslot.Dueto

thisrequirementamaximumnumberof127messagebufferscanbeassignedtotheFIFO.

Nevertheless,anonprotocolconformconfigurationwithoutatransmissionslotinthestatic

segmentwouldstillbeoperational.Thepayloadlengthconfiguredandthelengthofthedata

sectionsneedtobeconfiguredidenticalforallmessagebuffersbelongingtotheFIFOvia

WRHS2.PLC[6:0]andWRHS3.DP[10:0].Whenthecommunicationcontrollerisnotin

DEFAULT_CONFIGorCONFIGstatereconfigurationofmessagebuffersbelongingtothe

FIFOislocked.

1132

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.5.2FIFORejectionFilter(FRF)

TheFIFOrejectionfilterdefinesauserspecifiedsequenceofbitswithwhichchannel,frameID,andcycle

countoftheincomingframesarecompared.TogetherwiththeFIFOrejectionfiltermask(FRFM),this

registerdetermineswhetheramessageisrejectedbytheFIFO.TheFRFregistercanbewrittenduring

DEFAULT_CONFIGorCONFIGstateonly.

Figure23-152andTable23-140illustratethisregister.

Figure23-152.FIFORejectionFilterRegister(FRF)[offset_CC=304h]

31

25

24

23

22

16

Reserved

RNF*

RSS*

CYF*

R-0

R-1

R-1

R/W-0

15

13

12

2

1

0

Reserved

FID*

CH*

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-140.FIFORejectionFilterRegister(FRF)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

RNF

Rejectnullframes.Ifthisbitisset,receivednullframesarenotstoredintheFIFO.

0

NullframesarestoredintheFIFO

1

Rejectallnullframes

23

RSS

Rejectinstaticsegment.Ifthisbitisset,theFIFOisusedonlyforthedynamicsegment.

0

FIFOalsousedinstaticsegment

1

Rejectmessagesinstaticsegment

22-16

CYF

Cyclecounterfilter.The7-bitcyclecounterfilterdeterminesthecyclesettowhichtheframeID

FIFOrejectionfilterandthechannelFIFOrejectionfilterareapplied.Incyclesnotbelongingtothe

cyclesetspecifiedbyCYF[6:0],allframesarerejected.Fordetailsabouttheconfigurationofthe

cyclecounterfilter.

15-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-2

FID

0-7FFh

FrameIDfilter.AframeIDfiltervalueofzeromeansthatnoframeIDisrejected.

1-0

CH

Channelfilter.

Note:Ifreceptiononbothchannelsisconfigured,alsointhestaticsegmentbothframes(from

channelAandB)arealwaysstoredintheFIFO,eveniftheyareidentical.

0

Receiveonbothchannels

2h

ReceiveonlyonchannelB

3h

ReceiveonlyonchannelA

4h

Noreception

1133

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.5.3FIFORejectionFilterMask(FRFM)

TheFIFOrejectionfiltermaskspecifieswhichofthecorrespondingframeIDfilterbitsarerelevantfor

rejectionfiltering.Ifabitisset,itindicatesthatthestateofthecorrespondingbitintheFRFregisterwill

notbeconsideredforrejectionfiltering.TheFRFMregistercanbewrittenduringDEFAULT_CONFIGor

CONFIGstateonly.

Figure23-153andTable23-141illustratethisregister.

Figure23-153.FIFORejectionFilterMaskRegister(FRFM)[offset_CC=308h]

31

16

Reserved

R-0

15

13

12

2

1

0

Reserved

MFID*

Reserved

R-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-141.FIFORejectionFilterMaskRegister(FRFM)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-2

MFID

MaskFrameIDFilter

0

CorrespondingframeIDfilterbitisusedforrejectionfiltering.

1

IgnorecorrespondingframeIDfilterbit.

1-0

Reserved

0

Readreturns0.Writeshavenoeffect.

23.19.2.5.4FIFOCriticalLevel(FCL)

ThecommunicationcontrolleracceptsmodificationsoftheregisterinDEFAULT_CONFIGorCONFIG

stateonly.

Figure23-154andTable23-142illustratethisregister.

Figure23-154.FIFOCriticalLevelRegister(FCL)[offset_CC=30Ch]

31

16

Reserved

R-0

15

8

7

0

Reserved

CL*

R-0

R/W-810h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-142.FIFOCriticalLevelRegister(FCL)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

CL

CriticalLevel.WhenthereceiveFIFOfilllevelFSR.RFFL[7:0]isequalorgreaterthanthecritical

levelconfiguredbyCL[7:0],thereceiveFIFOcriticallevelflagFSR.RFCLisset.IfCL[7:0]is

programmedtovalues>128,bitFSR.RFCLisneverset.WhenFSR.RFCLchangesfrom'0'to'1'

bitSIR.RFCLissetto'1',andifenabled,aninterruptisgenerated

1134

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.6MessageBufferStatusRegisters

23.19.2.6.1MessageHandlerStatus(MHDS)

Aflagisclearedbywritinga1tothecorrespondingbitposition.Writinga0hasnoeffectontheflag.A

hardwareresetwillalsocleartheregister.

Figure23-155andTable23-143illustratethisregister.

Figure23-155.MessageHandlerStatus(MHDS)[offset_CC=310h]

31

30

24

23

22

16

Rsvd

MBU

Rsvd

MBT

R-0

R-0

R-0

R-0

15

14

8

7

6

5

4

3

2

1

0

Rsvd

FMB

CRAM

MFMB

FMBD

PTFB2

PTFB1

PMR

POBF

PIBF

R-0

R-0

R-1

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-143.MessageHandlerStatus(MHDS)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-24

MBU

0-7Fh

Messagebufferupdated.Numberofthemessagebufferthatwasupdatedlastbythe

communicationcontroller.Forthismessagebuffer,therespectiveNDand/orMBCflaginthenew

data1...4(NDAT1...4)andthemessagebufferstatuschanged1...4(MBSC1...4)registersarealso

set.

Note:MBU[6-0]areresetwhenthecommunicationcontrollerleavesCONFIGstateorenters

STARTUPstate.

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

MBT

0-7Fh

Messagebuffertransmitted.Numberofthelastsuccessfullytransmittedmessagebuffer.Ifthe

messagebufferisconfiguredforsingle-shotmode,therespectiveTXRflagintheTransmission

requestregister1...4(TXRQ1..4)wasreset.

Note:MBT[6-0]areresetwhenthecommunicationcontrollerleavesCONFIGstateorenters

STARTUPstate.

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-8

FMB

0-7Fh

Faultymessagebuffer.Aparityerroroccurredwhenreadingfromamessagebufferorwhen

transferringdatafromInputBufferorTransientBuffer1,2tothemessagebufferreferencedby

FMB(6-0).ThisvalueisonlyvalidwhenoneoftheflagsPIBF,PMR,PTBF1,PTBF2,andflag

FMBDisset.IsnotupdatedwhileflagFMBDisset.

7

CRAM

ClearallinternalRAMs.Signalsthatexecutionofthecontrollerhostinterfacecommand

CLEAR_RAMSisongoing(allbitsofallinternalRAMblocksarewrittento0).Thebitissetby

hardwareresetorbythecontrollerhostinterfacecommandCLEAR_RAMS.

0

NoexecutionofthecontrollerhostinterfacecommandCLEAR_RAMS

1

ExecutionofthecontrollerhostinterfacecommandCLEAR_RAMSongoing

6

MFMB

Multiplefaultymessagebuffersdetected.

0

Noadditionalfaultymessagebuffer

1

AnotherfaultymessagebufferwasdetectedwhileflagFMBDisset

5

FMBD

Faultymessagebufferdetected.

0

Nofaultymessagebuffer

1

MessagebufferreferencedbyFMB(6-0)holdsfaultydataduetoaparityerror

4

PTBF2

ParityerrortransientbufferRAMB.

0

Noparityerror

1

ParityerroroccurredwhenreadingtransientbufferRAMB

3

PTBF1

ParityerrortransientbufferRAMA.

0

Noparityerror

1

ParityerroroccurredwhenreadingtransientbufferRAMA

1135

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-143.MessageHandlerStatus(MHDS)FieldDescriptions(continued)

Bit

Field

Value

Description

2

PMR

ParityerrormessageRAM.

0

Noparityerror

1

ParityerroroccurredwhenreadingmessageRAM

1

POBF

ParityerroroutputbufferRAM1,2.

0

Noparityerror

1

ParityerroroccurredwhenmessagehandlerreadoutputbufferRAM1,2

0

PIBF

ParityerrorinputbufferRAM1,2.

0

Noparityerror

1

ParityerroroccurredwhenmessagehandlerreadinputbufferRAM1,2

NOTE:WhenoneoftheflagsPIBF,POBF,PMR,PTBF1,PTBF2changesfrom'0'to'1'thePERR

flagintheErrorInterruptRegister(EIR)issetto'1'.

23.19.2.6.2LastDynamicTransmitSlot(LDTS)

TheregisterisresetwhenthecommunicationcontrollerleavesCONFIGstateorentersSTARTUPstate

Figure23-156andTable23-144illustratethisregister.

Figure23-156.LastDynamicTransmitSlot(LDTS)[offset_CC=314h]

31

27

26

16

Reserved

LDTB

R-0

R-0

15

11

10

0

Reserved

LDTA

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-144.LastDynamicTransmitSlot(LDTS)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

LDTB

LastDynamicTransmissionChannelB.ValueofSlotCounterBatthetimeofthelastframe

transmissiononchannelAinthedynamicsegmentofthisnode.Itisupdatedattheendofthe

dynamicsegmentandisresettozeroifnoframewastransmittedduringthedynamicsegment.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

LDTA

LastDynamicTransmissionChannelA.ValueofSlotCounterAatthetimeofthelastframe

transmissiononchannelAinthedynamicsegmentofthisnode.Itisupdatedattheendofthe

dynamicsegmentandisresettozeroifnoframewastransmittedduringthedynamicsegment.

1136

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.6.3FIFOStatusRegister(FSR)

TheregisterisresetwhenthecommunicationcontrollerleavesCONFIGstate,entersSTARTUPstate,or

byCHIcommandCLEAR_RAMS..

Figure23-157andTable23-145illustratethisregister.

Figure23-157.FIFOStatusRegister(FSR)[offset_CC=318h]

31

16

Reserved

R-0

15

8

7

3

2

1

0

RFFL

Reserved

RFO

RFCL

RFNE

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-145.FIFOStatusRegister(FSR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-8

RFFL

0-7Fh

ReceiveFIFOFillLevel.NumberofFIFObuffersfilledwithnewdatanotyetreadbytheHost.

7-7

Reserved

0

Readreturns0.Writeshavenoeffect.

2

RFO

ReceiveFIFOOverrun.TheflagissetbythecommunicationcontrollerwhenareceiveFIFO

overrunisdetected.WhenareceiveFIFOoverrunoccurs,theoldestmessageisoverwrittenwith

theactualreceivedmessage.Inaddition,interruptflagRFOintheErrorInterruptRegister(EIR)is

set.TheflagisclearedbythenextFIFOreadaccessissuedbytheHost.

0

NoreceiveFIFOoverrundetected

1

AreceiveFIFOoverrunhasbeendetected

1

RFCL

ReceiveFIFOCriticalLevel.ThisflagissetwhenthereceiveFIFOfilllevelRFFL[7:0]isequalor

greaterthanthecriticallevelasconfiguredbyCL[7:0]intheFIFOCriticalLevelregister(FCL).The

flagisclearedbythecommunicationcontrollerassoonasRFFL[7:0]dropsbelowFCL.CL[7:0].

WhenRFCLchangesfrom'0'to'1'theRFCLflagintheStatusInterruptregister(SIR)issetto'1',

andifenabled,aninterruptisgenerated.

0

ReceiveFIFObelowcriticallevel

1

ReceiveFIFOcriticallevelreached

0

RFNE

ReceiveFIFONotEmpty.Thisflagissetbythecommunicationcontrollerwhenareceivedvalid

frame(dataornullframedependingonrejectionmask)wasstoredintheFIFO.Inaddition,

interruptflagRFNEintheStatusInterruptregister(SR)isset.ThebitisresetaftertheHosthas

readallmessagefromtheFIFO.

0

ReceiveFIFOisempty

1

ReceiveFIFOisnotempty

1137

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.6.4MessageHandlerConstraintsFlags(MHDF)

SomeconstraintsexistfortheMessageHandlerregardingVBUSclkfrequency,MessageRAM

configuration,andFlexRaybustraffic.Inordertosimplifysoftwaredevelopment,constraintsviolationsare

reportedbysettingflagsintheMHDF.

Aflagisclearedbywritinga'1'tothecorrespondingbitposition.Writinga'0'hasnoeffectontheflag.A

hardwareresetwillalsocleartheregister.Theregisterisresetwhenthecommunicationcontrollerleaves

CONFIGstate,entersSTARTUPstate,orbyCHIcommandCLEAR_RAMS.

Figure23-158andTable23-146illustratethisregister.

Figure23-158.MessageHandlerConstraintsFlags(MHDF)[offset_CC=31Ch]

31

16

Reserved

R-0

15

9

8

7

6

5

4

3

2

1

0

Reserved

WAHP

TNSA

TNSB

TBFB

TBFA

FNFB

FNFA

SNUB

SNUA

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-146.MessageHandlerConstraintFlags(MHDF)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

WAHP

Writeattempttoheaderpartition.Thisflagissetbythecommunicationcontrollerwhenthe

messagehandlertriestowritemessagedataintotheheaderpartitionoftheMessageRAMdueto

faultyconfigurationofamessagebuffer.Thewriteattemptisnotexecuted,toprotecttheheader

partitionfromunintendedwriteaccesses.

0

Nowriteattempttoheaderpartition

1

Writeattempttoheaderpartition

7

TNSA

TransmissionNotStartedChannelA.ThisflagissetbytheCCwhentheMessageHandlerwas

notreadytostartascheduledtransmissiononchannelAattheactionpointoftheconfiguredslot.

0

NotransmissionnotstartedonchannelA

1

TransmissionnotstartedonchannelA

6

TNSB

TransmissionNotStartedChannelB.ThisflagissetbytheCCwhentheMessageHandlerwas

notreadytostartascheduledtransmissiononchannelBattheactionpointoftheconfiguredslot.

0

NotransmissionnotstartedonchannelB

1

TransmissionnotstartedonchannelB

5

TBFB

TransientbufferaccessfailureB.Thisflagissetbythecommunicationcontrollerwhenareador

writeaccesstoTBFBrequestedbyPRTBcouldnotcompletewithintheavailabletime.

0

NoTBFBaccessfailure

1

TBFBaccessfailure

4

TBFA

TransientbufferaccessfailureA.Thisflagissetbythecommunicationcontrollerwhenareador

writeaccesstoTBFArequestedbyPRTAcouldnotcompletewithintheavailabletime.

0

NoTBFAaccessfailure

1

TBFAaccessfailure

3

FNFB

FindsequencenotfinishedchannelB.Thisflagissetbythecommunicationcontrollerwhenthe

MessageHandler,duetooverloadcondition,wasnotabletofinishafindsequence(scanof

MessageRAMformatchingmessagebuffer)withrespecttochannelB.

0

NofindsequencenotfinishedforchannelB

1

FindsequencenotfinishedforchannelB

2

FNFA

FindsequencenotfinishedchannelA.Thisflagissetbythecommunicationcontrollerwhenthe

MessageHandler,duetooverloadcondition,wasnotabletofinishafindsequence(scanof

MessageRAMformatchingmessagebuffer)withrespecttochannelA.

0

NofindsequencenotfinishedforchannelA

1

FindsequencenotfinishedforchannelA

1138

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-146.MessageHandlerConstraintFlags(MHDF)FieldDescriptions(continued)

Bit

Field

Value

Description

1

SNUB

StatusnotupdatedchannelB.ThisflagissetbythecommunicationcontrollerwhentheMessage

Handler,duetooverloadcondition,wasnotabletoupdateamessagebuffer'sstatusMBSwith

respecttochannelB.

0

NooverloadconditionoccurredwhenupdatingMBSforchannelB

1

MBSforchannelBnotupdated

0

SNUA

StatusnotupdatedchannelA.ThisflagissetbythecommunicationcontrollerwhentheMessage

Handler,duetooverloadcondition,wasnotabletoupdateamessagebuffer'sstatusMBSwith

respecttochannelA.

0

NooverloadconditionoccurredwhenupdatingMBSforchannelA

1

MBSforchannelAnotupdated

NOTE:WhenoneoftheflagsSNUA,SNUB,FNFA,FNFB,TBFA,TBFB,WAHPchangesfrom'0'to

'1',interruptflagMHFintheErrorInterruptregister(EIR)issetto'1'.

23.19.2.6.5TransmissionRequest1/2/3/4(TXRQ1/2/3/4)

ThesefourregistersreflectthestateoftheTXRflagsofallconfiguredmessagebuffers.Theflagsare

evaluatedfortransmitbuffersonly.Ifthenumberofconfiguredmessagebuffersislessthan128,the

remainingTXRflagshavenomeaning.

Figure23-159throughFigure23-162andTable23-147illustratetheseregisters.

Figure23-159.TransmissionRequestRegister4(TXRQ4)[offset_CC=32Ch]

31

16

TXR[127:112]

R-0

15

0

TXR[111:96]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure23-160.TransmissionRequestRegister3(TXRQ3)[offset_CC=328h]

31

16

TXR[95:80]

R-0

15

0

TXR[79:64]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure23-161.TransmissionRequestRegister2(TXRQ2)[offset_CC=324h]

31

16

TXR[63:48]

R-0

15

0

TXR[47:32]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

1139

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-162.TransmissionRequestRegister1(TXRQ1)[offset_CC=320h]

31

16

TXR[31:16]

R-0

15

0

TXR[15:0]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-147.TransmissionRequestRegister(TXRQ1/2/3/4)FieldDescription

Bit

Field

Value

Description

127-0

TXR

Transmissionrequest.

0

Therespectivemessagebufferisnotreadyfortransmission.

1

Iftheflagisset,therespectivemessagebufferisreadyfortransmission.Respectively,

transmissionofthismessagebufferisinprogress.Insingle-shotmodetheflagsareresetafter

transmissionhascompleted.

23.19.2.6.6NewData1/2/3/4(NDAT1/2/3/4)

ThefourregistersreflectthestateoftheNDflagsofallconfiguredmessagebuffers.NDflags

correspondingtotransmitbuffershavenomeaning.Ifthenumberofconfiguredmessagebuffersisless

than128,theremainingNDflagshavenomeaning.Theregistersareresetwhenthecommunication

controllerleavesCONFIGstateorentersSTARTUPstate.

Figure23-163throughFigure23-166andTable23-148illustratetheseregisters.

Figure23-163.NewDataRegister4(NDAT4)[offset_CC=33Ch]

31

16

ND[127:112]

R-0

15

0

ND[111:96]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure23-164.NewDataRegister3(NDAT3)[offset_CC=338h]

31

16

ND[95:80]

R-0

15

0

ND[79:64]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure23-165.NewDataRegister2(NDAT2)[offset_CC=334h]

31

16

ND[63:48]

R-0

15

0

ND[47:32]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

1140

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Figure23-166.NewDataRegister1(NDAT1)[offset_CC=330h]

31

16

ND[31:16]

R-0

15

0

ND[15:0]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-148.NewDataRegister(NDAT1/2/3/4)FieldDescriptions

Bit

Field

Value

Description

127-0

ND

Newdata.

0

Theflagsareresetwhentheheadersectionofthecorrespondingmessagebufferis

reconfiguredorwhenthedatasectionhasbeentransferredtotheoutputbuffer.

1

Theflagsaresetwhenavalidreceiveddataframematchesthemessagebuffer'sfilter

configuration,independentofthepayloadlengthreceivedorthepayloadlengthconfiguredfor

thatmessagebuffer.Theflagsarenotsetafterreceptionofnullframesexceptformessage

buffersbelongingtothereceiveFIFO.

23.19.2.6.7MessageBufferStatusChanged1/2/3/4(MBSC1/2/3/4)

ThefourregistersreflectthestateoftheMBCflagsofallconfiguredmessagebuffers.Ifthenumberof

configuredmessagebuffersislessthan128,theremainingMBCflagshavenomeaning.

Figure23-167throughFigure23-170andTable23-149illustratetheseregisters.

Figure23-167.MessageBufferStatusChangedRegister4(MBSC4)[offset_CC=34Ch]

31

16

MBS[127:112]

R-0

15

0

MBS[111:96]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure23-168.MessageBufferStatusChangedRegister3(MBSC3)[offset_CC=348h]

31

16

MBS[95:80]

R-0

15

0

MBS[79:64]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure23-169.MessageBufferStatusChangedRegister2(MBSC2)[offset_CC=344h]

31

16

MBS[63:48]

R-0

15

0

MBS[47:32]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

1141

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Figure23-170.MessageBufferStatusChangedRegister1(MBSC1)[offset_CC=340h]

31

16

MBS[31:16]

R-0

15

0

MBS[15:0]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-149.MessageBufferStatusChangedRegister(MBSC1/2/3/4)FieldDescriptions

Bit

Field

Value

Description

127-0

MBS

Messagebufferstatuschanged.

0

Aflagisresetwhentheheadersectionofthecorrespondingmessagebufferisreconfiguredor

whenithasbeentransferredtotheOutputBuffer.

1

TheflagissetwhenevertheMessageHandlerchangesoneofthestatusflagsVFRA,VFRB,

SEOA,SEOB,CEOA,CEOB,SVOA,SVOB,TCIA,TCIB,ESA,ESB,MLST,FTA,FTBinthe

headersection(seeMessageBufferStatus(MBS)MessageBufferStatus(MBS))ofthe

respectivemessagebuffer.

1142

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.7IdentificationRegisters

23.19.2.7.1CoreReleaseRegister(CREL)

Figure23-171andTable23-150illustratethisregister.

Figure23-171.CoreReleaseRegister(CREL)[offset_CC=3F0h]

31

28

27

20

19

16

REL

STEP

YEAR

R-releaseinfo

R-releaseinfo

R-releaseinfo

15

8

7

0

MON

DAY

R-releaseinfo

R-releaseinfo

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-150.CoreReleaseRegister(CREL)FieldDescriptions

Bit

Field

Value

Description

31-28

REL

0-Fh

CoreRelease.Onedigit,BCD-coded.

27-20

STEP

0-FFh

StepofCoreRelease.Twodigits,BCD-coded.

19-16

YEAR

0-Fh

DesignTimeStamp,Year.Onedigit,BCD-coded.

15-8

MON

0-FFh

DesignTimeStamp,Month.Twodigits,BCD-coded.

7-0

DAY

0-FFh

DesignTimeStamp,Day.Twodigits,BCD-coded.

Table23-151showsthereleasecodinginregisterCREL.

Table23-151.ReleaseCoding

CoreReleaseRegister

Release

Step

Sub-Step

Name

Contents

1

0

0

10060519

Revision1.0.0

1

0

1

10161211

Revision1.0.1

1

0

2

10271031

Revision1.0.2

1

0

3

10390206

Revision1.0.3

23.19.2.7.2EndianRegister(ENDN)

Figure23-172andTable23-152illustratethisregister.

Figure23-172.EndianRegister(ENDN)[offset_CC=3F4h]

31

16

ETV

R-8765h

15

0

ETV

R-4321h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-152.EndianRegister(ENDN)FieldDescriptions

Bit

Field

Value

Description

31-0

ETV

0

EndiannessTestValue.TheEndiannesstestvalueis87654321h.

1143

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.8InputBuffer

Doublebufferstructureconsistingofinputbufferhostandinputbuffershadow.Whilethehostcanwriteto

inputbufferhost,thetransfertothemessageRAMisdonefrominputbuffershadow.Theinputbuffer

holdstheheaderanddatasectionstobetransferredtotheselectedmessagebufferinthemessageRAM.

ItisusedtoconfigurethemessagebuffersinthemessageRAMandtoupdatethedatasectionsof

transmitbuffers.

WhenupdatingtheheadersectionofamessagebufferintheMessageRAMfromtheInputBuffer,the

MessageBufferStatusasdescribedinMessageBufferStatus(MBS),MessageBufferStatus(MBS)is

automaticallyresettozero.

TheheadersectionsofmessagebuffersbelongingtothereceiveFIFOcanonlybe(re)configuredwhen

thecommunicationcontrollerisinDEFAULT_CONFIGorCONFIGstate.Forthosemessagebuffersonly

thepayloadlengthconfiguredandthedatapointerneedtobeconfiguredbybitsPLC[6.0]oftheWrite

HeaderSection2(WRHS2)andbybitsDP[10:0]ofWriteHeaderSection3(WRHS3).Allinformation

requiredforacceptancefilteringistakenfromtheFIFOrejectionfilterandtheFIFOrejectionfiltermask.

23.19.2.8.1WriteDataSection[1...64](WRDSn)

Holdsthedatawordstobetransferredtothedatasectionoftheaddressedmessagebuffer.Thedata

words(DWn)arewrittentothemessageRAMintransmissionorderfromDW1(byte0,byte1)toDW

PL(DWPL=numberofdatawordsasdefinedbythepayloadlengthconfiguredinPLC(6-0)oftheWrite

HeaderSection2(WRHS2).

Figure23-173andTable23-153illustratethisregister.

Figure23-173.WriteDataSection[1...64]Register(WRDSn)[offset_CC=400h-4FCh]

31

16

MD

R/W-0

15

0

MD

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-153.WriteDataSectionRegister[1...64](WRDSn)FieldDescriptions

Bit

Field

Value

Description

31-0

MD

0-FFFFFFFFh

Messagedata.

Note:DW127islocatedonWRDS64.MD[15:0].InthiscaseWRDS64.MD[31:16]isunused

(novaliddata).TheinputbufferRAMsareinitializedto0whenleavinghardwareresetor

bythecontrollerhostinterfacecommandCLEAR_RAMS.

MD(31-24)=DW2n,byte4n-1

MD(23-16)=DW2n,byte4n-2

MD(15-8)=DW2n-1,byte4n-3

MD(7-0)=DW2n-1,byte4n-4

1144

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.8.2WriteHeaderSection1(WRHS1)

Figure23-174andTable23-154illustratethisregister.

Figure23-174.WriteHeaderSectionRegister1(WRHS1)[offset_CC=500h]

31

30

29

28

27

26

25

24

23

22

16

Reserved

MBI

TXM

PPIT

CFG

CHB

CHA

Rsvd

CYC

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

15

11

10

0

Reserved

FID

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-154.WriteHeaderSectionRegister1(WRHS1)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29

MBI

Messagebufferinterrupt.Thisbitenablesthereceive/transmitinterruptforthecorresponding

messagebuffer.Afteradedicatedreceivebufferhasbeenupdatedbythemessagehandler,flag

RXIand/orMBSIinthestatusinterruptregisterareset.AftersuccessfultransmissiontheTXIflag

inthestatusinterruptregisterisset.

0

Thecorrespondingmessagebufferinterruptisenabled

1

Thecorrespondingmessagebufferinterruptisdisabled

28

TXM

Transmissionmode.Thisbitisusedtoselectthetransmissionmode.

0

Continuousmode

1

Single-shotmode

27

PPIT

Payloadpreambleindicatortransmit.ThisbitisusedtocontrolthestateofthePayloadPreamble

Indicatorintransmitframes.Ifthebitissetinastaticmessagebuffer,therespectivemessage

bufferholdsnetworkmanagementinformation.Ifthebitissetinadynamicmessagebuffer,the

firsttwobytesofthepayloadsegmentmaybeusedformessageIDfilteringbythereceiver.

MessageIDfilteringofreceivedFlexRayframesisnotsupportedbytheFlexRaymodule,butcan

bedonebythehostCPU.

0

PayloadPreambleIndicatornotset

1

PayloadPreambleIndicatorset

26

CFG

Messagebufferconfigurationbit.ThisbitisusedtoconfigurethecorrespondingbufferasTransmit

bufferorasreceivebuffer.FormessagebuffersbelongingtothereceiveFIFOthebitisnot

evaluated.

0

Thecorrespondingbufferisconfiguredasreceivebuffer

1

ThecorrespondingbufferisconfiguredasTransmitbuffer

25-24

CHB,CHA

0-4h

Channelfiltercontrol.

The2-bitchannelfilteringfieldassociatedwitheachbufferservesasafilterforreceivebuffersand

asacontrolfieldfortransmitbuffers.SeeTable23-155forbitdescriptions.

Note:Ifamessagebufferisconfiguredforthedynamicsegmentandbothbitsofthe

channelfilteringfieldaresetto1,noframesaretransmittedresp.receivedframesare

ignored(samefunctionasCHA=CHB=0)

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

CYC

0-7Fh

Cyclecode.The7-bitcyclecodedeterminesthecyclesetusedforcyclecounterfiltering.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

FID

0-7FFh

FrameID.

FrameIDoftheselectedmessagebuffer.TheframeIDdefinestheslotnumberfortransmission/

receptionoftherespectivemessage.

Note:MessagebufferswithframeID=0areconsiderednotvalid.

1145

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-155.ChannelFilterControlBitDescriptions

TransmitBuffer

ReceiveBuffer

CHA

CHB

transmitframeon

storeframereceivedfrom

channelAorB

bothchannels

1

1

(storefirstsemanticallyvalidframe,staticsegment

(staticsegmentonly)

only)

1

0

channelA

channelA

0

1

channelB

channelB

0

0

notransmission

ignoreframe

23.19.2.8.3WriteHeaderSection2(WRHS2)

Figure23-175andTable23-156illustratethisregister.

Figure23-175.WriteHeaderSectionRegister2(WRHS2)[offset_CC=504h]

31

23

22

16

Reserved

PLC

R-0

R/W-0

15

11

10

0

Reserved

CRC

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-156.WriteHeaderSectionRegister2(WRHS2)FieldDescriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

PLC

0-7Fh

Payloadlengthconfigured.Lengthofdatasection(numberof2-bytewords)asconfiguredbythe

host.DuringstaticsegmentthestaticframedatalengthasconfiguredbySFDL(6-0)intheMHD

configurationregisterdefinesthepayloadlengthforallstaticframes.Ifthepayloadlength

configuredbyPLC(6-0)isshorterthanthisvaluepaddingbytesareinsertedtoensurethatframes

haveproperphysicallength.Thepaddingpatternislogicalzero.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

CRC

0-7FFh

HeaderCRC.ReceiveBuffer:configurationnotrequired.Transmitbuffer:HeaderCRCcalculated

andconfiguredbythehost.ForcalculationoftheheaderCRCthepayloadlengthoftheframe

sendonthebushastobeconsidered.Instaticsegmentthepayloadlengthofallframesis

configuredbyMHDC.SFDL[6:0].

1146

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.8.4WriteHeaderSection3(WRHS3)

Figure23-176andTable23-157illustratethisregister.

Figure23-176.WriteHeaderSectionRegister3(WRHS3)[offset_CC=508h]

31

16

Reserved

R-0

15

11

10

0

Reserved

DP

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-157.WriteHeaderSectionRegister3(WRHS3)FieldDescriptions

Bit

Field

Value

Description

31-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

DP

1-7FFh

Datapointer.Pointertothefirst32-bitwordofthedatasectionoftheaddressedmessagebufferin

themessageRAM.

1147

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.8.5InputBufferCommandMask(IBCM)

ConfigureshowthemessagebufferinthemessageRAMselectedbytheinputbuffercommandrequest

registerisupdated.WhenIBFhostandIBFshadowareswapped,alsomaskbitsLHSH,LDSH,and

STXRHareswappedwithbitsLHSS,LDSS,andSTXRStokeepthemattachedtotherespectiveinput

buffertransfer.

Figure23-177andTable23-158illustratethisregister.

Figure23-177.InputBufferCommandMaskRegister(IBCM)[offset_CC=510h]

31

19

18

17

16

Reserved

STXRS

LDSS

LHSS

R-0

R-0

R-0

R-0

15

3

2

1

0

Reserved

STXRH

LDSH

LHSH

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-158.InputBufferCommandMaskRegister(IBCM)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

STXRS

Settransmissionrequestshadow.

0

ResetTXRflag

1

SetTXRflag,transmitbufferreleasedfortransmission(operationongoingorfinished)

17

LDSS

Loaddatasectionshadow.

0

Datasectionisnotupdated

1

DatasectionselectedfortransferfrominputbuffertothemessageRAM(transferongoingor

finished)

16

LHSS

Loadheadersectionshadow.

0

Headersectionisnotupdated

1

HeadersectionselectedfortransferfrominputbuffertothemessageRAM(transferongoingor

finished)

15-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

STXRH

Settransmissionrequesthost.Ifthisbitissetto1,thetransmissionrequestflagTXRforthe

selectedmessagebufferissetinthetransmissionrequestregisterstoreleasethemessagebuffer

fortransmission.Insingle-shotmodetheflagisclearedbythecommunicationcontrollerafter

transmissionhascompleted.Theflagsisevaluatedfortransmitbuffersonly.

0

Resettransmissionrequestflag

1

Settransmissionrequestflag;transmitbufferreleasedfortransmission

1

LDSH

Loaddatasectionhost

0

Datasectionisnotupdated

1

DatasectionselectedfortransferfrominputbuffertothemessageRAM

0

LHSH

Loadheadersectionhost

0

Headersectionisnotupdated

1

HeadersectionselectedfortransferfrominputbuffertothemessageRAM

1148

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.8.6InputBufferCommandRequest(IBCR)

WhenthehostwritesthenumberofatargetmessagebufferinthemessageRAMtoIBRH(6-0)inthe

inputbuffercommandrequestregister,IBFhostandIBFshadowareswapped.Inadditionthemessage

buffernumbersstoredunderIBRH(6-0)andIBRS(6-0)arealsoswapped.

WiththiswriteoperationtheIBSYSbitintheinputbuffercommandrequestregisterissetto1.The

messagehandlerthenstartstotransferthecontentsofIBFshadowtothemessagebufferinthemessage

RAMselectedbyIBRS(6-0).

WhilethemessagehandlertransfersthedatafromIBFshadowtothetargetmessagebufferinthe

messageRAM,thehostmayconfigurethenextmessageintheIBFhost.AfterthetransferbetweenIBF

shadowandthemessageRAMhascompleted,theIBSYSbitissetbackto0andthenexttransfertothe

messageRAMmaybestartedbythehostbywritingtherespectivetargetmessagebuffernumberto

IBRH(6-0).

IfawriteaccesstoIBRH(6-0)occurswhileIBSYSis1,IBSYHissetto1.Aftercompletionoftheongoing

datatransferfromIBFshadowtothemessageRAM,IBFhostandIBFshadowareswapped,IBSYHis

resetto0.IBSYSremainssetto1,andthenexttransfertothemessageRAMisstarted.Inadditionthe

messagebuffernumbersstoredunderIBRH(6-0)andIBRS(6-0)arealsoswapped.

AnywriteaccesstoanInputBufferRegisterwhilebothIBSYSandIBSYHaresetwillcausetheerrorflag

IIBAintheErrorInterruptRegister(EIR)tobeset.InthiscasetheInputBufferwillnotbechanged.

Figure23-178andTable23-159illustratethisregister.

Figure23-178.InputBufferCommandRequestRegister(IBCR)[offset_CC=514h]

31

30

23

22

16

IBSYS

Reserved

IBRS

R-0

R-0

R-0

15

14

7

6

0

IBSYH

Reserved

IBRH

R-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-159.InputBufferCommandRequestRegister(IBCR)FieldDescriptions

Bit

Field

Value

Description

31

IBSYS

Inputbufferbusyshadow.Setto1afterwritingIBRH(6-0).WhenthetransferbetweenIBFshadow

andthemessageRAMhascompleted,IBSYSissetbackto0.

0

TransferbetweenIBFshadowandmessageRAMcompleted

1

TransferbetweenIBFshadowandmessageRAMinprogress

30-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

IBRS

0-7Fh

Inputbufferrequestshadow.Numberofthetargetmessagebufferactuallyupdated/lately

updated.

15

IBSYH

Inputbufferbusyhost.Setto1bywritingIBRH(6-0)whileIBSYSisstill1.Aftertheongoing

transferbetweenIBFshadowandthemessageRAMhascompleted,theIBSYHissetbackto0.

0

Norequestpending

1

RequestwhiletransferbetweenIBFshadowandmessageRAMinprogress

14-7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-0

IBRH

0-7Fh

Inputbufferrequesthost.SelectsthetargetmessagebufferintheMessageRAMfordatatransfer

fromInputBuffer.

1149

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.9OutputBuffer

Doublebufferstructureconsistingofoutputbufferhostandoutputbuffershadow.Whilethehostcanread

fromoutputbufferhost,thetransferfromthemessageRAMisdonetooutputbuffershadow.Theoutput

bufferholdstheheaderanddatasectionsofrequestedmessagebufferstransferredfromthemessage

RAM.UsedtoreadoutmessagebuffersfromthemessageRAM.

23.19.2.9.1ReadDataSection[1...64](RDDSn)

Holdsthedatawordsreadfromthedatasectionoftheaddressedmessagebuffer.Thedatawords(DWn)

arereadfromthemessageRAMinreceptionorderfromDW1(byte0,byte1)toDWPL(DWPL=numberof

datawordsasdefinedbythepayloadlengthconfiguredinbitsPLC(6-0)oftheReadHeaderSection2

(RDHS2)).

Figure23-179andTable23-160illustratethisregister.

Figure23-179.ReadDataSectionRegister(RDDSn)[offset_CC=600h-6FCh]

31

16

MD

R/W-0

15

0

MD

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-160.ReadDataSectionRegister(RDDSn)FieldDescriptions

Bit

Field

Value

Description

31-0

MD

0-FFFFFFFFh

Messagedata.

Note:DW127islocatedonRDDS64.MD[15:0].InthiscaseRDDS64.MD[31:16]isunused

(novaliddata).TheinputbufferRAMsareinitializedto0whenleavinghardwareresetor

bythecontrollerhostinterfacecommandCLEAR_RAMS.

MD(31-24)=DW2n,byte4n-1

MD(23-16)=DW2n,byte4n-2

MD(15-8)=DW2n-1,byte4n-3

MD(7-0)=DW2n-1,byte4n-4

1150

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.9.2ReadHeaderSection1(RDHS1)

Figure23-180andTable23-161illustratethisregister.

Figure23-180.ReadHeaderSectionRegister1(RDHS1)[offset_CC=700h]

31

30

29

28

27

26

25

24

23

22

16

Reserved

MBI

TXM

PPIT

CFG

CHB

CHA

Rsvd

CYC

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

15

11

10

0

Reserved

FID

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-161.ReadHeaderSectionRegister1(RDHS1)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29

MBI

Messagebufferinterrupt.

0

Thecorrespondingmessagebufferinterruptisenabled

1

Thecorrespondingmessagebufferinterruptisdisabled

28

TXM

Transmissionmode.Thisbitisusedtoselectthetransmissionmode.

0

Continuousmode

1

Single-shotmode

27

PPIT

Payloadpreambleindicatortransmit.

0

PayloadPreambleIndicatornotset

1

PayloadPreambleIndicatorset

26

CFG

Messagebufferconfigurationbit.

0

Thecorrespondingbufferisconfiguredasreceivebuffer

1

ThecorrespondingbufferisconfiguredasTransmitbuffer

25-24

CHB,CHA

Channelfiltercontrol.

SeeTable23-155forbitdescriptions.

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

CYC

0-7Fh

Cyclecode.The7-bitcyclecodedeterminesthecyclesetusedforcyclecounterfiltering.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

FID

0-7FFh

FrameID.

FrameIDoftheselectedmessagebuffer.

Note:MessagebufferswithframeID=0areconsiderednotvalid.

NOTE:IncasethemessagebufferreadfromthemessageRAMbelongstothereceiveFIFO,

FID(10-0)andCHA,CHBwereupdatedfromthereceivedframewhileCYC(6-0),CFG,

PPIT,TXM,andMBIareresettozero.

NOTE:ForbitdescriptionseealsoSection23.19.2.8.2.

1151

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.9.3ReadHeaderSection2(RDHS2)

Figure23-181andTable23-162illustratethisregister.

Figure23-181.ReadHeaderSectionRegister2(RDHS2)[offset_CC=704h]

31

30

24

23

22

16

Rsvd

PLR

Rsvd

PLC

R-0

R-0

R-0

R-0

15

11

10

0

Reserved

CRC

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-162.ReadHeaderSectionRegister2(RDHS2)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-24

PLR

0-7Fh

Payloadlengthreceived.Payloadlengthvalueupdatedfromreceivedframe(exception:if

messagebufferbelongstothereceiveFIFOPLR[6:0]isalsoupdatedfromreceivednull

frames).

Whenamessageisstoredintoamessagebufferthefollowingbehaviorwithrespecttopayload

lengthreceivedandpayloadlengthconfiguredisimplemented:

PLR[6:0]>PLC[6:0]:Thepayloaddatastoredinthemessagebufferistruncatedtothepayload

lengthconfiguredifPLC[6:0]evenorelsetruncatedtoPLC[6:0]+1

PLR[6:0]<=PLC[6:0]:Thereceivedpayloaddataisstoredintothemessagebuffersdata

section.TheremainingdatabytesofthedatasectionasconfiguredbyPLC[6:0]arefilledwith

undefineddata

PLR[6:0]=zero:Themessagebuffersdatasectionisfilledwithundefineddata

PLC[6:0]=zero:Messagebufferhasnodatasectionconfigured.Nodataisstoredintothe

messagebuffersdatasection.

23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

PLC

0-7Fh

Payloadlengthconfigured.Lengthofdatasection(numberof2-bytewords)asconfiguredby

thehost.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

CRC

0-7FFh

HeaderCRC.

Receivebuffer:HeaderCRCupdatedfromreceiveframe.

Transmitbuffer:HeaderCRCcalculatedandconfiguredbythehost

NOTE:TheMessageRAMisorganizedin4-bytewords.Whenreceiveddataisstoredintoa

messagebuffer'sdatasection,thenumberof2-bytedatawordswrittenintothemessage

bufferisPLC[6:0]roundedtothenextevenvalue.PLC[6:0]shouldbeconfiguredidenticalfor

allmessagebuffersbelongingtothereceiveFIFO.Header2isupdatedfromdataframes

only.

1152

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.9.4ReadHeaderSection3(RDHS3)

Figure23-182andTable23-163illustratethisregister.

Figure23-182.ReadHeaderSectionRegister3(RDHS3)[offset_CC=708h]

31

30

29

28

27

26

25

24

23

22

21

16

Reserved

RES

PPI

NFI

SYN

SFI

RCI

Reserved

RCC

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

15

11

10

0

Reserved

DP

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-163.ReadHeaderSectionRegister3(RDHS3)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29

RES

0-1

Reservedbit.Reflectsthestateofthereceivedreservedbit.Thereservedbitistransmittedas0.

28

PPI

Payloadpreambleindicator.Thepayloadpreambleindicatordefineswhetheranetwork

managementvectorormessageIDiscontainedwithinthepayloadsegmentofthereceivedframe.

0

Thepayloadsegmentofthereceivedframedoesnotcontainanetworkmanagementvectorora

messageID.

1

Staticsegment:Networkmanagementvectoratthebeginningofthepayload.

Dynamicsegment:MessageIDatthebeginningofthepayload.

27

NFI

Nullframeindicator.Issetto'1'afterstorageofthefirstreceiveddataframe.

0

Uptonownodataframehasbeenstoredintotherespectivemessagebuffer

1

Atleastonedataframehasbeenstoredintotherespectivemessagebuffer

26

SYN

Syncframeindicator.Asyncframeismarkedbythesyncframeindicator.

0

Thereceivedframeisnotasyncframe

1

Thereceivedframeisasyncframe

25

SFI

Startupframeindicator.Astartupframeismarkedbythestartupframeindicator.

0

Thereceivedframeisnotastartupframe

1

Thereceivedframeisastartupframe

24

RCI

Receivedonchannelindicator.Indicatesthechannelfromwhichthereceiveddataframewas

takentoupdatetherespectivereceivebuffer.

0

FramereceivedonchannelB

1

FramereceivedonchannelA

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-16

RCC

Receivecyclecount.Cyclecountervalueupdatedfromreceivedframe.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

10-0

DP

Datapointer.Pointertothefirst32-bitwordofthedatasectionoftheaddressedmessagebufferin

themessageRAM.

NOTE:Header3isupdatedfromdataframesonly.

1153

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.9.5MessageBufferStatus(MBS)

Themessagebufferstatusisupdatedbythecommunicationcontrollerwithrespecttotheassigned

channel(s)latestattheendoftheslotfollowingtheslotassignedtothemessagebuffer.Theflagsare

updatedonlywhenthecommunicationcontrollerisinNORMAL_ACTIVEorNORMAL_PASSIVEstate.If

onlyonechannel(AorB)isassignedtoamessagebuffer,thechannel-specificstatusflagsoftheother

channelarewrittentozero.Ifbothchannelsareassignedtoamessagebuffer,thechannel-specificstatus

flagsofbothchannelsareupdated.Themessagebufferstatusisupdatedonlywhentheslotcounter

reachedtheconfiguredframeIDandwhenthecyclecounterfiltermatched.WhentheHostupdatesa

messagebufferviaInputBuffer,allMBSflagsareresettozeroindependentofwhichIBCMbitsaresetor

not.

WhenevertheMessageHandlerchangesoneoftheflagsVFRA,VFRB,SEOA,SEOB,CEOA,CEOB,

SVOA,SVOB,TCIA,TCIB,ESA,ESB,MLST,FTA,FTBtherespectivemessagebuffer'sMBCflagin

registersMBSC1/2/3/4isset.

Figure23-183andTable23-164illustratethisregister.

Figure23-183.MessageBufferStatusRegister(MBS)[offset_CC=70Ch]

31

30

29

28

27

26

25

24

23

22

21

16

Reserved

RESS

PPIS

NFIS

SYNS

SFIS

RCIS

Reserved

CCS

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

FTB

FTA

Rsvd

MLST

ESB

ESA

TCIB

TCIA

SVOB

SVOA

CEOB

CEOA

SEOB

SEOA

VFRB

VFRA

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-164.MessageBufferStatusRegister(MBS)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29

RESS

Reservedbitstatus.Reflectsthestateofthereceivedreservedbit.Thereservedbitistransmitted

as'0'.

28

PPIS

Payloadpreambleindicatorstatus.Thepayloadpreambleindicatordefineswhetheranetwork

managementvectorormessageIDiscontainedwithinthepayloadsegmentofthereceivedframe.

0

Thepayloadsegmentofthereceivedframedoesnotcontainanetworkmanagementvectorora

messageID

1

Staticsegment:NetworkmanagementvectoratthebeginningofthepayloadDynamicsegment:

MessageIDatthebeginningofthepayload

27

NFIS

Nullframeindicatorstatus.Ifsetto'0'thepayloadsegmentofthereceivedframecontainsno

usabledata.

0

Receivedframeisanullframe

1

Receivedframeisnotanullframe

26

SYNS

Syncframeindicatorstatus.Asyncframeismarkedbythesyncframeindicator.

0

Nosyncframereceived

1

Thereceivedframeisasyncframe

25

SFIS

Startupframeindicatorstatus.Astartupframeismarkedbythestartupframeindicator.

0

Nostartupframereceived

1

Thereceivedframeisastartupframe

24

RCIS

Receivedonchannelindicatorstatus.Indicatesthechannelonwhichtheframewasreceived.

0

FramereceivedonchannelB

1

FramereceivedonchannelA

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21-16

CCS

0-3Fh

Cyclecountstatus.Actualcyclecountwhenstatuswasupdated.

1154

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-164.MessageBufferStatusRegister(MBS)FieldDescriptions(continued)

Bit

Field

Value

Description

15

MTB

FrametransmittedonchannelB.Indicatesthatthisnodehastransmittedadataframeinthe

configuredslotonchannelB.

0

NodataframetransmittedonchannelB

1

DataframetransmittedonchannelB

14

MTA

FrametransmittedonchannelA.Indicatesthatthisnodehastransmittedadataframeinthe

configuredslotonchannelA.

0

NodataframetransmittedonchannelA

1

DataframetransmittedonchannelA

13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

MLST

Messagelost.TheflagissetincasetheHostdidnotreadthemessagebeforethemessagebuffer

wasupdatedfromareceiveddataframe.Notaffectedbyreceptionofnullframesexceptfor

messagebuffersbelongingtothereceiveFIFO.Theflagisresetbyahostwritetothemessage

bufferviaIBForwhenanewmessageisstoredintothemessagebufferafterthemessagebuffers

NDflagwasresetbyreadingoutthemessagebufferviaOBF.

0

Nomessagelost

1

Unprocessedmessagewasoverwritten

11

ESB

EmptyslotchannelB.Inanemptyslotthereisnoactivityonthebus.Theconditionischeckedin

staticanddynamicslots.

0

BusactivitydetectedintheconfiguredslotonchannelB

1

NobusactivitydetectedintheconfiguredslotonchannelB

10

ESA

EmptyslotchannelA.Inanemptyslotthereisnoactivityonthebus.Theconditionischeckedin

staticanddynamicslots.

0

BusactivitydetectedintheconfiguredslotonchannelA

1

NobusactivitydetectedintheconfiguredslotonchannelA

9

TCIB

TransmissionconflictindicationchannelB.Atransmissionconflictindicationissetifatransmission

conflicthasoccurredonchannelB.

0

NotransmissionconflictoccurredonchannelB

1

TransmissionconflictoccurredonchannelB

8

TCIA

TransmissionconflictindicationchannelA.Atransmissionconflictindicationissetifatransmission

conflicthasoccurredonchannelA.

0

NotransmissionconflictoccurredonchannelA

1

TransmissionconflictoccurredonchannelA

7

SVOB

SlotboundaryviolationobservedonchannelB.Aslotboundaryviolation(channelactiveatthestart

orattheendoftheassignedslot)wasobservedonchannelB.

0

NoslotboundaryviolationobservedonchannelB

1

SlotboundaryviolationobservedonchannelB

6

SVOA

SlotboundaryviolationobservedonchannelA.Aslotboundaryviolation(channelactiveatthestart

orattheendoftheassignedslot)wasobservedonchannelA.

0

NoslotboundaryviolationobservedonchannelA

1

SlotboundaryviolationobservedonchannelA

5

CEOB

ContenterrorobservedonchannelB.Acontenterrorwasobservedintheconfiguredsloton

channelB.

0

NocontenterrorobservedonchannelB

1

ContenterrorobservedonchannelB

4

CEOA

ContenterrorobservedonchannelA.Acontenterrorwasobservedintheconfiguredsloton

channelA.

0

NocontenterrorobservedonchannelA

1

ContenterrorobservedonchannelA

3

SEOB

SyntaxerrorobservedonchannelB.Asyntaxerrorwasobservedintheassignedslotonchannel

B.

0

NosyntaxerrorobservedonchannelB

1

SyntaxerrorobservedonchannelB

1155

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

Table23-164.MessageBufferStatusRegister(MBS)FieldDescriptions(continued)

Bit

Field

Value

Description

2

SEOA

SyntaxerrorobservedonchannelA.Asyntaxerrorwasobservedintheassignedslotonchannel

A.

0

NosyntaxerrorobservedonchannelA

1

SyntaxerrorobservedonchannelA

1

VFRB

ValidframereceivedonchannelB.Avalidframeindicationissetifavalidframewasreceivedon

channelB.

0

NovalidframereceivedonchannelB

1

ValidframereceivedonchannelB

0

VFRA

ValidframereceivedonchannelA.Avalidframeindicationissetifavalidframewasreceivedon

channelA.

0

NovalidframereceivedonchannelA

1

ValidframereceivedonchannelA

NOTE:ThestatusbitsRESS,PPPIS,NFIS,FYNS,SFISandRCISareupdatedfrombothvalid

dataandnullframes.Ifnovalidframewasreceived,thepreviousvalueismaintained.

NOTE:TheFlexRayprotocolspecificationrequiresthatFTA,andFTBcanonlyberesetbythe

CPU.ThereforetheCycleCountStatusCCS[5:0]forthesebitsisonlyvalidforthecycle

wherethebitsaresetto'1'.

1156

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

23.19.2.9.6OutputBufferCommandMask(OBCM)

ConfigureshowtheOutputBufferisupdatedfromthemessagebufferintheMessageRAMselectedby

bitsOBRS(6-0)oftheoutputbuffercommandrequestregister.MaskbitsRDSSandRHSSarecopiedto

theregisterinternalstoragewhenaMessageRAMtransferisrequestedbyOBCR.REQ.WhenOBFhost

andOBFshadowareswapped,alsomaskbitsRDSHandRHSHareswappedwithbitsRDSSandRHSS

tokeepthemattachedtotherespectiveoutputbuffertransfer.

Figure23-184andTable23-165illustratethisregister.

Figure23-184.OutputBufferCommandMaskRegister(OBCM)[offset_CC=700h]

31

18

17

16

Reserved

RDSH

RHSH

R-0

R-0

R-0

15

2

1

0

Reserved

RDSS

RHSS

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table23-165.OutputBufferCommandMaskRegister(MBS)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

RDSH

Readdatasectionhost.

0

Datasectionisnotread

1

DatasectionselectedfortransferfrommessageRAMtooutputbuffer

16

RHSH

Readheadersectionhost.

0

Headersectionisnotread

1

HeadersectionselectedfortransferfrommessageRAMtooutputbuffer

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

RDSS

ReadDataSectionshadow.

0

Datasectionisnotread

1

DatasectionselectedfortransferfrommessageRAMtooutputbuffer

0

RHSS

Readheadersectionshadow

0

Headersectionisnotread

1

HeadersectionselectedfortransferfrommessageRAMtooutputbuffer

NOTE:AfterthetransferoftheheadersectionfromthemessageRAMtoOBFshadowhas

completed,themessagebufferstatusChangedflagMBSoftheselectedmessagebufferin

themessagebufferChanged1,2,3,4registersiscleared.Afterthetransferofthedata

sectionfromthemessageRAMtoOBFshadowhascompleted,theNewDataflagNDofthe

selectedmessagebufferintheNewData1,2,3,4registersiscleared.

1157

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






FlexRayModuleRegisterswww.ti.com

23.19.2.9.7OutputBufferCommandRequest(OBCR)

AftersettingbitREQto1whileOBSYSis0,OBSYSisautomaticallysetto1,OBRS(6-0)iscopiedtothe

registerinternalstorage,maskbitsOBCM.RDSSandOBCM.RHSSarecopiedtoregisterOBCMinternal

storage,andthetransferofthemessagebufferselectedbyOBRS(6-0)fromtheMessageRAMtoOBF

Shadowisstarted.WhenthetransferbetweentheMessageRAMandOBFshadowhascompleted,thisis

signaledbysettingOBSYSbackto0.

BysettingbitVIEWto1whileOBSYSis0,OBFHostandOBFshadowareswapped.Additionallymask

bitsOBCM.RDSHandOBCM.RHSHareswappedwiththeregisterOBCMinternalstoragetokeepthem

attachedtotherespectiveoutputbuffertransfer.OBRH(6-0)signalsthenumberofthemessagebuffer

currentlyaccessiblebytheHost.

IfbitsREQandVIEWaresetto1withthesamewriteaccesswhileOBSYSis0,OBSYSisautomatically

setto1andOBFshadowandOBFhostareswapped.AdditionallymaskbitsOBCM.RDSHand

OBCM.RHSHareswappedwiththeregistersinternalstoragetokeepthemattachedtotherespective

outputbuffertransfer.AfterwardsOBRS(6-0)iscopiedtotheregister

internalstorage,andthetransferoftheselectedmessagebufferfromtheMessageRAMtoOBFshadow

isstarted.WhilethetransferisongoingtheHostcanreadthemessagebuffertransferredbytheprevious

transferfromOBFhost.WhenthecurrenttransferbetweenMessageRAMandOBFshadowhas

completed,thisissignaledbysettingOBSYSbackto0.

AnywriteaccesstoOBCR(15-8)whileOBSYSissetwillcausetheerrorflagIOBAintheErrorInterrupt

Registertobeset.

Inthiscasetheoutputbufferwillnotbechanged.

Figure23-185andTable23-166illustratethisregister.

Figure23-185.OutputBufferCommandMaskRegister(OBCR)[offset_CC=714h]

31

23

22

16

Reserved

OBRH

R-0

R/W-0

15

14

10

9

8

7

6

0

OBSYS

Reserved

REQ

VIEW

Rsvd

OBRS

R-0

R-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;*ThesebitscanbeupdatedinDEFAULT_CONFIGorCONFIGstate

only

Table23-166.OutputBufferCommandMaskRegister(OBCR)FieldDescriptions

Bit

Field

Value

Description

31-23

Reserved

0

Readreturns0.Writeshavenoeffect.

22-16

OBRH

0-7Fh

Outputbufferrequesthost.NumberofmessagebuffercurrentlyaccessiblebytheHostvia

RDHS[1..3],MBS,andRDDS[1..64].BywritingVIEWto1OBFShadowandOBFhostare

swappedandthetransferredmessagebufferisaccessiblebythehost.

15

OBSYS

Outputbuffershadowbusy.Setto1aftersettingbitREQ.Whenthetransferbetweenthe

messageRAMandOBFshadowhascompleted,OBSYSissetbackto0.

0

Notransferinprogress.

1

TransferbetweenmessageRAMandOBFshadowinprogress

14-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

REQ

RequestmessageRAMTransfer.RequeststransferofmessagebufferaddressedbyOBRS(6-0)

frommessageRAMtoOBFshadow.OnlywritablewhileOBSYS=0.

0

Norequest

1

TransfertoOBFshadowrequested

8

VIEW

Viewshadowbuffer.TogglesbetweenOBFshadowandOBFhost.OnlywritablewhileOBSYS=

0.

0

Noaction

1

SwapOBFshadowandOBF

1158

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comFlexRayModuleRegisters

Table23-166.OutputBufferCommandMaskRegister(OBCR)FieldDescriptions(continued)

Bit

Field

Value

Description

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-0

OBRS

0-7Fh

Outputbufferrequestshadow.Numberofsourcemessagebuffertobetransferredfromthe

messageRAMtoOBFshadow.IfthenumberofthefirstmessagebufferofthereceiveFIFOis

writtentothisregister,themessagehandlertransfersthemessagebufferaddressedbytheGET

Indexregister(GIDX)toOBFshadow.

1159

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




nssVBUSclk32.22390157222161=+´+=£m

()

][7122min8sVBUScycleVBUScycleVBUScycletVBUSfindmssmtislotsclkm+´+£

()

VBUSclkVBUScyclesVBUScyclesVBUScyclestfindmssmtislots+´+³22min87



MinimumPeripheralClockFrequencywww.ti.com

23.20MinimumPeripheralClockFrequency

Inordertocalculatetheminimumperipheralclockfrequency(VBUSclk)theworstcasescenariohastobe

considered.Theworstcasescenariodependsonthefollowingparameters:

•maximumpayloadlength

•minimumminislotlength

•numberofconfiguredmessagebuffers(excludingFIFO)

•usedchannels(single/dualchannel)

Worstcasescenario:

•receptionofamessagewithamaximumpayloadlengthinslotn(nis7,15,23,31,39,...)

•slotn+1ton+7areemptydynamicslots(minislot)andconfiguredasreceivebuffer

•thefind-sequence(usuallystartedinslot8,16,24,32,40,...)hastoscanthemaximumnumberof

configuredbuffers

•thenumberofconcurrenttaskshasitsmaximumvalueof3

Thefind-sequenceisexecutedeach8slots(slot8,16,24,32,40,...).Ithastobefinisheduntilthenextfind-

sequenceisrequested.

ThedurationofaTransientBufferRAM(TBF)transfertotheMessageBufferRAM(MBF)variesfrom4

(headersectiononly)to68(header+maximumdatasection)timestepsplusasetuptimeof6timesteps.

VBUScyclest2m=(numberofconcurrenttasks)x(6+(numberof4-bytewords))

ASlotStatus(SS)transfertotheMessageBufferRAM(MBF)hasalengthof1timestepplusasetup

timeof4timesteps.

VBUSclkss2m=(numberofconcurrenttasks)x5

Thefindsequencehasamaximumlengthof128(maximumnumberofbuffers)timestepsplusasetup

timeof2timesteps.

VBUSclkfind=(numberofconcurrenttasks)x(2+(numberofconfiguredbuffers))

Aminislothasalengthof2to63macroticks(MTicks).Theminimumnominalmacrotickperiod(MTcycle)

is1μs.Asequenceof8minislotshasalengthof

t8minislots=8xMTicksxMTcycle

TheworstcaseVCLKcycleperiodcanbecalculatedasfollows:

(32)

(33)

minimumt8minislots=8*2*1μs=16μs

maximumVBUScyclet2m=3*(6+68)=222

maximumVBUScycless2m=3*5=15

maximumVBUScyclefind=3*(2+128)=390

(34)

Theminimumperipheralclockfrequencyforthisworstcasescenariois44,8125MHz.

1160

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comAssignmentofFlexRayConfigurationParameters

23.21AssignmentofFlexRayConfigurationParameters

ThefollowingtableshowstheassignmentoftheFlexRayparametersasdefinedintheFlexRayProtocol

SpecificationandthecorrespondingbitfieldsoftheFlexRaymodule.

Table23-167.AssignmentofFlexRayConfigurationParameters

Parameter

Bit(field)

pKeySlotusedForStartup

SUCC1.TXST

pKeySlotUsedForSync

SUCC1.TXSY

gColdStartAttempts

SUCC1.CSA(4-0)

pAllowPassiveToActive

SUCC1.PTA(4-0)

pWakeupChannel

SUCC1.WUCS

pSingleSlotEnabled

SUCC1.TSM

pAllowHaltDueToClock

SUCC1.HCSE

pChannels

SUCC1.CCHASUCC1.CCHB

pdListenTimeOut

SUCC2.LT(20-0)

gListenNoise

SUCC2.LTN(3-0)

gMaxWithoutClockCorrectionPassive

SUCC3.WCP(3-0)

gMaxWithoutClockCorrectionFatal

SUCC3.WCF(3-0)

gNetworkManagementVectorLength

NEMC.NML(3-0)

gdTSSTransmitter

PRTC1.TSST(3-0)

gdCASRxLowMax

PRTC1.CASM(6-0)

gdSampleClockPeriod

PRTC1.BRP(1-0)

pSamplesPerMicrotick

PRTC1.BRP(1-0)

gdWakeupSymbolRxWindow

PRTC1.RXW(8-0)

pWakeupPattern

PRTC1.RWP(5-0)

gdWakeupSymbolRxIdle

PRTC2.RXI(5-0)

gdWakeupSymbolRxLow

PRTC2.RXL(5-0)

gdWakeupSymbolTxIdle

PRTC2.TXI(7-0)

gdWakeupSymbolTxLow

PRTC2.TXL(5-0)

gPayloadLengthStatic

MHDC.SFDL(6-0)

pLatestTx

MHDC.SLT(12-0)

pMicroPerCycle

GTUC1.UT(19-0)

gMacroPerCycle

GTUC2.MPC(13-0)

gSyncNodeMax

GTUC2.SNM(3-0)

pMicroInitialOffset[A]

GTUC3.UIOA(7-0)

pMicroInitialOffset[B]

GTUC3.UIOB(7-0)

pMacroInitialOffset[A]

GTUC3.MIOA(6-0)

pMacroInitialOffset[B]

GTUC3.MIOB(6-0)

gdNIT

GTUC4.NIT(13-0)

gOffsetCorrectionStart

GTUC4.OCS(13-0)

pDelayCompensation[A]

GTUC5.DCA(7-0)

pDelayCompensation[B]

GTUC5.DCB(7-0)

pClusterDriftDamping

GTUC5.CDD(4-0)

pDecodingCorrection

GTUC5.DEC(7-0)

pdAcceptedStartupRange

GTUC6.ASR(10-0)

pdMaxDrift

GTUC6.MOD(10-0)

gdStaticSlot

GTUC7.SSL(9-0)

gNumberOfStaticSlots

GTUC7.NSS(9-0)

gdMinislot

GTUC8.MSL(5-0)

1161

SPNU499B–November2012–RevisedAugust2013

FlexRayModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Emulation/DebugSupportwww.ti.com

Table23-167.AssignmentofFlexRayConfigurationParameters(continued)

Parameter

Bit(field)

gNumberOfMinislots

GTUC8.NMS(12-0)

gdActionPointOffset

GTUC9.APO(5-0)

gdMinislotActionPointOffset

GTUC9.MAPO(4-0)

gdDynamicSlotIdlePhase

GTUC9.DSI(1-0)

pOffsetCorrectionOut

GTUC10.MOC(13-0)

pRateCorrectionOut

GTUC10.MRC(10-0)

pExternOffsetCorrection

GTUC11.EOC(2-0)

pExternRateCorrection

GTUC11.ERC(2-0)

23.22Emulation/DebugSupport

Foranydebugtransactionsonthebusinterface(VBUSPorOCP),theresponsesarenormalexceptfor

thefollowing:

1.Readswillnotclear“read-clear”typeofbitsduringthesame.

2.Usermodewritesareallowedto"privilegemodewriteonly"bitsaswell.

1162

FlexRayModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter24

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

Thischapterdescribesthecontrollerareanetwork(DCAN)module.

NOTE:ThischapterdescribesasupersetimplementationoftheDCANmodule.Consultyour

device-specificdatasheettoidentifytheapplicabilityoftheDMA-relatedfeatures,thenumber

ofinstantiationsoftheDCANIP,andthenumberofmailboxessupportedonyourspecific

devicebeingused.

Topic...........................................................................................................................Page

24.1Overview.......................................................................................................1164

24.2CANBlocks...................................................................................................1165

24.3CANBitTiming..............................................................................................1167

24.4CANModuleConfiguration..............................................................................1171

24.5MessageRAM................................................................................................1174

24.6MessageInterfaceRegisterSets......................................................................1178

24.7MessageObjectConfigurations.......................................................................1181

24.8MessageHandling..........................................................................................1183

24.9CANMessageTransfer...................................................................................1188

24.10InterruptFunctionality...................................................................................1189

24.11GlobalPowerDownMode..............................................................................1191

24.12LocalPowerDownMode...............................................................................1192

24.13GIOsupport.................................................................................................1192

24.14TestModes..................................................................................................1194

24.15ParityCheckMechanism...............................................................................1198

24.16Debug/SuspendMode...................................................................................1199

24.17DCANControlRegisters................................................................................1199

1163

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

24.1Overview

TheControllerAreaNetworkisahigh-integrity,serial,multi-mastercommunicationprotocolfordistributed

real-timeapplications.ThisCANmoduleisimplementedaccordingtoISO11898-1andissuitablefor

industrial,automotiveandgeneralembeddedcommunications.

24.1.1Features

TheDCANmoduleprovidesthefollowingfeatures:

Protocol

•SupportsCANprotocolversion2.0partA,B

Speed

•Bitratesupto1MBit/s

MailBox

•ConfigurableMessageobjects

•Individualidentifiermasksforeachmessageobject

•ProgrammableFIFOmodeformessageobjects

HighSpeedMailBoxAccess

•DMAaccesstoMessageRAM.

Power

•Globalpowerdownandwakeupsupport

•Localpowerdownandwakeupsupport

Debug

•Suspendmodefordebugsupport

•Programmableloop-backmodesforself-testoperation

•DirectaccesstoMessageRAMintestmode

•SupportsTwointerruptlines-Level0andLevel1

Others

•AutomaticMessageRAMinitialization

•AutomaticbusonafterBus-Offstatebyaprogrammable32-bittimer

•CANRx/TxpinsconfigurableasgeneralpurposeIOpins

•Softwaremodulereset

•MessageRAMparitycheckmechanism

•Dualclocksourcetoreducejitter

24.1.2FunctionalDescription

TheCANprotocolisanISOstandard(ISO11898)forserialdatacommunication.ThisprotocolusesNon-

ReturnToZero(NRZ)withbit-stuffing.Andthecommunicationiscarriedoveratwo-wirebalanced

signalingscheme.

TheDCANdatacommunicationhappensthroughtheCAN_TXandCAN_RXpins.Anadditional

transceiverhardwareisrequiredfortheconnectiontothephysicallayer(CANbus)CAN_Highand

CAN_Low.

TheDCANregistersetcanbeaccesseddirectlybytheCPU.Theseregistersareusedtocontroland

configuretheCANmoduleandtheMessageRAM.

IndividualCANmessageobjectsshouldbeconfiguredforcommunicationoveraCANnetwork.The

messageobjectsandidentifiermasksarestoredintheMessageRAM.

1164

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCANBlocks

TheCANmoduleinternallyhandlesfunctionssuchacceptancefiltering,transferofmessagesfromandto

theMessageRAM,handlingoftransmissionrequestsaswellasthegenerationofinterruptsorDMA

requests.

24.2CANBlocks

TheDCANModule,showninFigure24-1,comprisesofthefollowingbasicblocks.

24.2.1CANCore

TheCANCoreconsistsoftheCANProtocolControllerandtheRx/TxShiftRegister.IthandlesallISO

11898-1protocolfunctions.

24.2.2MessageRAM

TheDCANMessageRAMenablesstorageofCANmessages.

24.2.3MessageHandler

TheMessageHandlerisastatemachinewhichcontrolsthedatatransferbetweenthesingleported

MessageRAMandtheCANCore’sRx/TxShiftRegister.Italsohandlesacceptancefilteringandthe

interrupt/DMArequestgenerationasprogrammedinthecontrolregisters.

Figure24-1.BlockDiagram

1165

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CANBlockswww.ti.com

24.2.4MessageRAMInterface

TheInterfaceRegistersetscontroltheCPUreadandwriteaccessestotheMessageRAM.

TherearethreeinterfaceregistersIF1,IF2andIF3.

IF1andIF2InterfaceRegisterssetsforreadandwriteaccess.

IF3InterfaceRegistersetforreadaccessonly.

TheInterfaceRegistershavethesameword-lengthastheMessageRAM.

AdditionalinformationcanbefoundinSection24.6.

24.2.5RegisterandMessageObjectAccess

Duringnormaloperation,dataconsistencyofthemessageobjectsisguaranteedbyindirectlyaccessing

themessageobjectsthroughtheinterfaceregistersIF1andIF2.

Inordertobeabletoperformtestsonthemessageobjectmemory,adedicatedtestmodehasbeen

implemented,whichallowsdirectaccessbyeithertheCPUorDMA.Duringnormaloperationdirect

accesshastobeavoided.

24.2.6DualClockSource

TwoclockdomainsareprovidedtotheDCANmodule:

1.VCLK-Theperipheralsynchronousclockdomainasthegeneralmoduleclocksource.

2.VCLKA-TheperipheralasynchronousclocksourcedomainprovidedtotheCANcoreasclocksource

(CAN_CLK)forgeneratingtheCANBitTiming.

IfafrequencymodulatedclockoutputfromFMPLLisusedastheVCLKsource,thenVCLKAshouldbe

derivedfromanunmodulatedclocksource(forexample,OSCINsource).

TheclocksourceforVCLKAisselectedbythePeripheralAsynchronousClockSourceRegisterinthe

systemmodule.

Bothclockdomainscanbederivedfromthesameclocksource(sothatVCLK=VCLKA).However,if

frequencymodulationintheFMPLLisenabled(spreadspectrumclock),thenduetothehighprecision

clockingrequirementsoftheCANCore,theFMPLLclocksourceshouldnotbeusedforVCLKA.

Alternatively,aseparateclockwithoutanymodulation(forexample,deriveddirectlyfromtheOSCIN

clock)shouldbeusedforVCLKA.

Pleaserefertothesystemmodulereferenceguideandthedevicedatasheetformoreinformationhowto

configuretherelevantclocksourceregistersinthesystemmodule.

Betweenthetwoclockdomains,asynchronizationmechanismisimplementedintheDCANmodulein

ordertoensurecorrectdatatransfer.

NOTE:Ifthedualclockfunctionalityisused,thenVCLKmustalwaysbehigherorequalto

CAN_CLK(derivedfromtheasynchronousclocksource),inordertoachieveastable

functionalityoftheDCAN.HerealsothefrequencyshiftofthemodulatedVCLKhastobe

considered:

ƒ0,VCLK±ΔƒFM,VCLK≥ƒCANCLK

TheCANCorehastobeprogrammedtoatleast8clockcyclesperbittime.Toachievea

transferrateof1MBaudwhenusingtheasynchronousclockdomainastheclocksourcefor

CAN_CLK,anoscillatorfrequencyof8MHzorhigherhastobeused.

1166

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1timequantum(tq)

Sync_Prop_SegPhase_Seg1Phase_Seg2

SamplepointNominalCANbittime

Seg



www.ti.comCANBitTiming

24.3CANBitTiming

TheDCANsupportsbitratesbetweenlessthan1kBit/sand1000kBit/s.

EachmemberoftheCANnetworkhasitsownclockgenerator,typicallyderivedfromacrystaloscillator.

TheBittimingparameterscanbeconfiguredindividuallyforeachCANnode,creatingacommonBitrate

eventhoughtheCANnodes’oscillatorperiods(fosc)maybedifferent.

24.3.1BitTimeandBitRate

AccordingtotheCANspecification,theBittimeisdividedintofoursegments(seeFigure24-2):

•SynchronizationSegment(Sync_Seg)

•PropagationTimeSegment(Prop_Seg)

•PhaseBufferSegment1(Phase_Seg1)

•PhaseBufferSegment2(Phase_Seg2)

Figure24-2.BitTiming

Eachsegmentconsistsofaspecificnumberoftimequanta.Thelengthofonetimequantum(tq),whichis

thebasictimeunitofthebittime,isgivenbytheCAN_CLKandtheBaudRatePrescalers(BRPEand

BRP).WiththesetwoBaudRatePrescalerscombined,dividervaluesfrom1to1024canbeprogrammed:

tq=BaudRatePrescaler/CAN_CLK

Apartfromthefixedlengthofthesynchronizationsegment,thesenumbersareprogrammable.

Table24-1describestheminimumprogrammablerangesrequiredbytheCANprotocol.Agivenbitrate

maybemetbydifferentBittimeconfigurations.

NOTE:ForproperfunctionalityoftheCANnetwork,thephysicaldelaytimesandtheoscillator’s

tolerancerangehavetobeconsidered.

Table24-1.ParametersoftheCANBitTime

Parameter

Range

Remark

Sync_Seg

1tq(fixed)

SynchronizationofbusinputtoCAN_CLK

Prop_Seg

[1…8]tq

Compensatesforthephysicaldelaytimes

Phase_Seg1

[1…8]tq

Maybelengthenedtemporarilybysynchronization

Phase_Seg2

[1…8]tq

Maybeshortenedtemporarilybysynchronization

SynchronizationJumpWidth(SJW)

[1…4]tq

MaynotbelongerthaneitherPhaseBufferSegment

1167

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




I:df≤minTSeg1TSeg2,()2x(13x(bit_time -TSeg2))-----------------------------------------------------------------------II:df≤SJW20xbit_time-------------------------

(1-df) x ff(1+df) x fnomoscnom≤≤



CANBitTimingwww.ti.com

24.3.1.1SynchronizationSegment

TheSynchronizationSegment(Sync_Seg)isthepartofthebittimewhereedgesoftheCANbuslevelare

expectedtooccur.IfanedgeoccursoutsideofSync_Seg,itsdistancetotheSync_Segiscalledthe

phaseerrorofthisedge.

24.3.1.2PropagationTimeSegment

ThispartofthebittimeisusedtocompensatephysicaldelaytimeswithintheCANnetwork.Thesedelay

timesconsistofthesignalpropagationtimeonthebusandtheinternaldelaytimeoftheCANnodes.

24.3.1.3PhaseBufferSegmentsandSynchronization

ThePhaseBufferSegments(Phase_Seg1andPhase_Seg2)andtheSynchronizationJumpWidth(SJW)

areusedtocompensatefortheoscillatortolerance.

ThePhaseBufferSegmentssurroundthesamplepoint.ThePhaseBufferSegmentsmaybelengthened

orshortenedbysynchronization.

TheSynchronizationJumpWidth(SJW)defineshowfartheresynchronizingmechanismmaymovethe

samplepointinsidethelimitsdefinedbythePhaseBufferSegmentstocompensateforedgephase

errors.

Synchronizationsoccuronedgesfromrecessivetodominant.Theirpurposeistocontrolthedistance

betweenedgesandsamplepoints.

Edgesaredetectedbysamplingtheactualbuslevelineachtimequantumandcomparingitwiththebus

levelattheprevioussamplepoint.Asynchronizationmaybedoneonlyifarecessivebitwassampledat

theprevioussamplepointandiftheactualtimequantum’sbuslevelisdominant.

AnedgeissynchronousifitoccursinsideofSync_Seg,otherwiseitsdistancetotheSync_Segisthe

edgephaseerror,measuredintimequanta.IftheedgeoccursbeforeSync_Seg,thephaseerroris

negative,elseitispositive.

24.3.1.4OscillatorToleranceRange

WiththeintroductionofCANprotocolversion1.2,theoptiontosynchronizeonedgesfromdominantto

recessivebecameobsolete.Onlyedgesfromrecessivetodominantareconsideredforsynchronization.

Theprotocolupdatetoversion2.0(AandB)hadnoinfluenceontheoscillatortolerance.

Thetolerancerangedfforanoscillator’sfrequencyfoscaroundthenominalfrequencyfnomwith:

(35)

dependsontheproportionsofPhase_Seg1,Phase_Seg2,SJW,andthebittime.Themaximumtolerance

dfisthedefinedbytwoconditions(bothshallbemet):

(36)

IthastobeconsideredthatSJWmaynotbelargerthanthesmallerofthePhaseBufferSegmentsand

thatthePropagationTimeSegmentlimitsthatpartofthebittimethatmaybeusedforthePhaseBuffer

Segments.

ThecombinationProp_Seg=1andPhase_Seg1=Phase_Seg2=SJW=4allowsthelargestpossible

oscillatortoleranceof1.58%.ThiscombinationwithaPropagationTimeSegmentofonly10%ofthebit

timeisnotsuitableforshortbittimes;itcanbeusedforbitratesofupto125kBit/s(bittime=8μs)witha

buslengthof40m.

1168

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCANBitTiming

24.3.2DCANBitTimingRegisters

IntheDCAN,thebittimingconfigurationisprogrammedintworegisterbytes,additionallyathirdbytefor

abaudrateprescalerextensionof4bits(BREP)isprovided.ThesumofProp_SegandPhase_Seg1(as

TSEG1)iscombinedwithPhase_Seg2(asTSEG2)inonebyte,SJWandBRP(plusBRPEinthirdbyte)

arecombinedintheotherbyte

Inthisbittimingregister,thecomponentsTSEG1,TSEG2,SJWandBRPhavetobeprogrammedtoa

numericalvaluethatisonelessthanitsfunctionalvalue;soinsteadofvaluesintherangeof[1…n],

valuesintherangeof[0…n-1]areprogrammed.Thatway,SJW(functionalrangeof[1…4])is

representedbyonlytwobits.

ThereforethelengthoftheBittimeis(programmedvalues)[TSEG1+TSEG2+3]tqor(functionalvalues)

[Sync_Seg+Prop_Seg+Phase_Seg1+Phase_Seg2]tq.

ThedataintheBitTimingRegister(BTR)istheconfigurationinputoftheCANprotocolcontroller.The

BaudRatePrescaler(configuredbyBRPE/BRP)definesthelengthofthetimequantum(thebasictime

unitofthebittime);theBitTimingLogic(configuredbyTSEG1,TSEG2,andSJW)definesthenumberof

timequantainthebittime.

24.3.2.1CalculationoftheBitTimingParameters

Usually,thecalculationofthebittimingconfigurationstartswithadesiredbitrateorbittime.Theresulting

Bittime(1/Bitrate)mustbeanintegermultipleoftheCANclockperiod.

NOTE:8MHzistheminimumCANclockfrequencyrequiredtooperatetheDCANatabitrateof

1MBit/s.

Thebittimemayconsistof8to25timequanta.ThelengthofthetimequantumtqisdefinedbytheBaud

RatePrescalerwithtq=(BaudRatePrescaler)/CAN_CLK.Severalcombinationsmayleadtothedesired

bittime,allowingiterationsofthefollowingsteps.

FirstpartofthebittimetobedefinedistheProp_Seg.Itslengthdependsonthedelaytimesmeasuredin

thesystem.Amaximumbuslengthaswellasamaximumnodedelayhastobedefinedforexpandible

CANbussystems.TheresultingtimeforProp_Segisconvertedintotimequanta(roundeduptothe

nearestintegermultipleoftq).

TheSync_Segis1tqlong(fixed),leaving(bittime–Prop_Seg–1)tqforthetwoPhaseBufferSegments.

Ifthenumberofremainingtqiseven,thePhaseBufferSegmentshavethesamelength,Phase_Seg2=

Phase_Seg1,elsePhase_Seg2=Phase_Seg1+1.

TheminimumnominallengthofPhase_Seg2hastoberegardedaswell.Phase_Seg2maynotbeshorter

thananyCANcontroller’sInformationProcessingTimeinthenetwork,whichisdevicedependentandcan

beintherangeof[0…2]tq.

ThelengthoftheSynchronizationJumpWidthissettoitsmaximumvalue,whichistheminimumof4and

Phase_Seg1.

IfmorethanoneconfigurationsarepossibletoreachacertainBitrate,itisrecommendedtochoosethe

configurationthatallowsthehighestoscillatortolerancerange.

CANnodeswithdifferentclocksrequiredifferentconfigurationstocometothesamebitrate.The

calculationofthepropagationtimeintheCANnetwork,basedonthenodeswiththelongestdelaytimes,

isdoneonceforthewholenetwork.

TheCANsystem’soscillatortolerancerangeislimitedbythenodewiththelowesttolerancerange.

Thecalculationmayshowthatbuslengthorbitratehavetobedecreasedorthattheoscillator

frequencies’stabilityhastobeincreasedinordertofindaprotocolcompliantconfigurationoftheCANbit

timing.

1169

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




3µs2x(13x(9µs - 3µs))-----------------------------------------------------------

min(TSeg1,TSeg2)2x(13x(bit_time -TSeg2))-----------------------------------------------------------------------

0.1µs2x(13x(1µs - 0.1µs))-----------------------------------------------------------

min(TSeg1,TSeg2)2x(13x(bit_time -TSeg2))-----------------------------------------------------------------------



CANBitTimingwww.ti.com

TheresultingconfigurationiswrittenintotheBitTimingRegister:

Tseg2=Phase_Seg2-1

Tseg1=Phase_Seg1+Prop_Seg-1

SJW=SynchronizationJumpWidth-1

BRP=Prescaler-1

24.3.2.2ExampleforBitTimingatHighBaudrate

Inthisexample,thefrequencyofCAN_CLKis10MHz,BRPis0,thebitrateis1MBit/s.

tq

100

ns

=

tCAN_CLK

delayofbusdriver

60

ns

delayofreceivercircuit

40

ns

delayofbusline(40m)

220

ns

tProp

700

ns

=

INT(2*delays+1)=7•tq

tSJW

100

ns

=

1•tq

tTSeg1

800

ns

=

tProp+tSJW

tTSeg2

100

ns

=

InformationProcessingTime+1•tq

tSync-Seg

100

ns

=

1•tq

bittime

1000

ns

=

tSync-Seg+tTSeg1+tTSeg2

toleranceforCAN_CLK

1.58

%

=

(37)

=

(38)

Inthisexample,theconcatenatedbittimeparametersare(1-1)3&(8-1)4&(1-1)2&(1-1)6,sotheBitTiming

Registerisprogrammedto00000700h.

24.3.2.3ExampleforBitTimingatLowBaudrate

Inthisexample,thefrequencyofCAN_CLKis2MHz,BRPis1,thebitrateis100KBit/s.

tq

100

ns

=

2•tCAN_CLK

delayofbusdriver

200

ns

delayofreceivercircuit

80

ns

delayofbusline(40m)

220

ns

tProp

1

µs

=

1•tq

tSJW

4

µs

=

4•tq

tTSeg1

5

µs

=

tProp+tSJW

tTSeg2

3

µs

=

InformationProcessingTime+3•tq

tSync-Seg

1

µs

=

1•tq

bittime

9

µs

=

tSync-Seg+tTSeg1+tTSeg2

toleranceforCAN_CLK

0.43

%

=

(39)

=

(40)

1170

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCANModuleConfiguration

Inthisexample,theconcatenatedbittimeparametersare(3-1)3&(5-1)4&(4-1)2&(2-1)6,sotheBitTiming

Registerisprogrammedto000024C1h.

24.4CANModuleConfiguration

AfterahardwareresetallCANprotocolfunctionsaredisabled.TheCANmodulemustbeinitializedand

configuredbeforeitcanparticipateontheCANbus.

24.4.1DCANRAMInitializationthroughharware

TostartwithacleanDCANRAM,thecompleteDCANRAMcanbeinitializedwithzerosandthe

ecc/paritybitssetaccordinglybyconfiguringthefollowingregistersinthesystemmodule:

1.MemoryHardwareInitializationGlobalControlRegister(MINITGCR)

2.MemoryInitializationEnableRegister(MSINENA)

FormoredetailsonRAMhardwareinitializationsupport,refertothesystemmodulereferenceguide.

24.4.2CANModuleInitialization

ToinitializetheCANController,theuserhastosetuptheCANBittimingandthosemessageobjects

whichhavetobeusedforCANcommunication.Messageobjectsthatarenotneeded,canbedeactivated.

Sothetwocriticalstepsare:

1.ConfigurationofCANBitTimings

2.ConfigurationofMessageObjects

24.4.2.1SoftwareConfigurationofCANBitTimings

ThisstepinvolvesconfiguringtheCANbaudrateregisterwiththecalculatedCANbittimingvalue.The

calculationprocedureofCANbittimingvaluesforBTRregisterarementionedinSection24.3.Referto

Figure24-3forCANbittimingsoftwareconfigurationflow.

1171

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SetInit=1

SetCCE=1

WaitforInit=1

WriteBittimingvaluesintoBTR

ClearCCEandInitWaitforInit=0CCE=0,Init=0

NormalModeInitializationModeNormalMode



CANModuleConfigurationwww.ti.com

Figure24-3.CANBit-timingConfiguration

Step1:Enter“initializationmode”bysettingtheInit(Initialization)bitintheCANControlRegister.

WhiletheInitbitisset,themessagetransferfromandtotheCANbusisstopped,andthestatusofthe

CAN_TXoutputisrecessive(high).

TheCANerrorcountersarenotupdated.SettingtheInitbitdoesnotchangeanyotherconfiguration

register.

AlsonotethattheCANmoduleisalsoininitializationmodeonhardwareresetandduringBus-Off.

Step2:SettheCCE(ConfigureChangeEnable)bitintheCANControlRegister.

TheaccesstotheBitTimingRegisterfortheconfigurationoftheBittimingisenabledwhenbothInitand

CCEbitsintheCANControlRegisterareset.

Step3:WaitfortheInitbittogetset.Thiswouldmakesurethatthemodulehasentered“Initialization

mode”.

Step4:WritetheBit-TimingvaluesintotheBTR(Bit-TimingRegister)Register.

RefertoSection24.3.2.1forBTRvaluecalculationforagivenbit-timing.

Step5:CleartheCCEbitfollowedbyInitbit.

Step6:WaitfortheInitbittoclear.Thiswouldmakesurethatthemodulehascomeoutof“initialization

mode”.

Afterstep6(Initbitcleared),themodulewillattemptasynchronizationontheCANbus,providedthatthe

BTRsettingsaremeetingtheCANbusparameters.

1172

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comCANModuleConfiguration

NOTE:Themodulewouldnotcomeoutofthe“initializationmode”ifanyincorrectBTRvaluesare

writteninstep4.

24.4.2.2ConfigurationofMessageObjects

ThewholeMessageRAMshouldbeconfiguredbeforeputtingtheCANintooperation.Allthemessage

objectsaredeactivatedbydefault.Theusershouldconfigurethemessageobjectthataretobeusedtoa

particularidentifier.Theusercanchangetheconfigurationofanymessageobjectordeactivateitwhen

required.

ThemessageobjectscanbeconfiguredonlythroughtheInterfaceregisters(IFx)andtheCPUdoesnot

havedirectaccesstothemessageobject(MessageRAM)whenDCANisinoperation.

Toconfigurethemessageobjects,theusermustknowabout:

1.Themessageobjectstructure(Section24.5)

2.Theinterfaceregisterset(IFx)(Section24.6)

NOTE:Themessageobjectsinitializationisindependentofthebit-timingconfigurationprocedure.

1173

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageRAMwww.ti.com

24.5MessageRAM

TheDCANMessageRAMcontainsmessageobjectsandparitybitsforthemessageobjects.

24.5.1StructureofMessageObjects

Figure24-4showsthestructureofamessageobject.

Thegrayedfieldsarethosepartsofthemessageobjectwhicharerepresentedindedicatedregisters.For

example,thetransmitrequestflagsofallmessageobjectsarerepresentedincentralizedtransmitrequest

registers.

Figure24-4.StructureofaMessageObject

MessageObject

UMask

Msk[28:0]

MXtd

MDir

EoB

unused

NewDat

MsgLst

RxIE

TxIE

IntPnd

RmtEn

TxRqst

MsgVal

ID[28:0]

Xtd

Dir

DLC[3:0]

Data0

Data1

Data2

Data3

Data4

Data5

Data6

Data7

Table24-2.MessageObjectFieldDescriptions

Name

Value

Description

MsgVal

Messagevalid

0

ThemessageobjectisignoredbytheMessageHandler.

1

ThemessageobjectistobeusedbytheMessageHandler.

Note:TheCPUshouldresettheMsgValbitofallunusedMessagesObjectsduringtheinitialization

beforeitresetsbitInitintheCANControlRegister.MsgValmustalsoberesetifthemessagesobject

isnolongerusedinoperation.Forreconfigurationofmessageobjectsduringnormaloperationsee

Section24.7.6andSection24.7.7.

UMask

UseAcceptanceMask

0

Maskbits(Msk[28:0],MXtdandMDir)areignoredandnotusedforacceptancefiltering.

1

Maskbitsareusedforacceptancefiltering.

Note:IftheUMaskbitissetto1,themessageobject'smaskbitshavetobeprogrammedduring

initializationofthemessageobjectbeforeMsgValissetto1.

ID[28:0]

MessageIdentifier

ID[28:0]

29-bit("extended")identifierbits

ID[28:18]

11-bit("standard")identifierbits

Msk[28:0]

IdentifierMask

0

Thecorrespondingbitinthemessageidentifierisnotusedforacceptancefiltering(don'tcare).

1

Thecorrespondingbitinthemessageidentifierisusedforacceptancefiltering.

Xtd

ExtendedIdentifier

0

The11-bit("standard")identifierwillbeusedforthismessageobject.

1

The29-bit("extended")identifierwillbeusedforthismessageobject.

MXtd

MaskExtendedIdentifier

0

Theextendedidentifierbit(IDE)hasnoeffectontheacceptancefiltering.

1

Theextendedidentifierbit(IDE)isusedforacceptancefiltering.

Note:When11-bit("standard")identifiersareusedforamessageobject,theidentifiersofreceived

dataframesarewrittenintobitsID[28:18].Foracceptancefiltering,onlythesebitstogetherwithmask

bitsMsk[28:18]areconsidered.

Dir

MessageDirection

0

Direction=receive:OnTxRqst,aremoteframewiththeidentifierofthismessageobjectis

transmitted.Onreceptionofadataframewithmatchingidentifier,themessageisstoredinthis

messageobject.

1

Direction=transmit:OnTxRqst,adataframeistransmitted.Onreceptionofaremoteframewith

matchingidentifier,theTxRqstbitofthismessageobjectisset(ifRmtEn=1).

MDir

MaskMessageDirection

0

Themessagedirectionbit(Dir)hasnoeffectontheacceptancefiltering.

1

Themessagedirectionbit(Dir)isusedforacceptancefiltering.

1174

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageRAM

Table24-2.MessageObjectFieldDescriptions(continued)

Name

Value

Description

EOB

EndofBlock

0

ThemessageobjectispartofaFIFOBufferblockandisnotthelastmessageobjectofthisFIFO

Bufferblock.

1

ThemessageobjectisasinglemessageobjectorthelastmessageobjectinaFIFOBufferBlock.

Note:ThisbitisusedtoconcatenatemultiplemessageobjectstobuildaFIFOBuffer.Forsingle

messageobjects(notbelongingtoaFIFOBuffer),thisbitmustalwaysbesetto1.

NewDat

NewData

0

NonewdatahasbeenwrittenintothedatabytesofthismessageobjectbytheMessageHandler

sincethelasttimewhenthisflagwasclearedbytheCPU.

1

TheMessageHandlerortheCPUhaswrittennewdataintothedatabytesofthismessageobject.

MsgLst

MessageLost(onlyvalidformessageobjectswithdirection=receive)

0

NomessagewaslostsincethelasttimewhenthisbitwasresetbytheCPU.

1

TheMessageHandlerstoredanewmessageintothismessageobjectwhenNewDatwasstillset,so

thepreviousmessagehasbeenoverwritten.

RxIE

ReceiveInterruptEnable

0

IntPndwillnotbetriggeredafterthesuccessfulreceptionofaframe.

1

IntPndwillbetriggeredafterthesuccessfulreceptionofaframe.

TxIE

TransmitInterruptEnable

0

IntPndwillnotbetriggeredafterthesuccessfultransmissionofaframe.

1

IntPndwillbetriggeredafterthesuccessfultransmissionofaframe.

IntPnd

InterruptPending

0

Thismessageobjectisnotthesourceofaninterrupt.

1

Thismessageobjectisthesourceofaninterrupt.TheInterruptIdentifierintheInterruptRegisterwill

pointtothismessageobjectifthereisnootherinterruptsourcewithhigherpriority.

RmtEn

RemoteEnable

0

AtthereceptionofaRemoteFrame,TxRqstisnotchanged.

1

AtthereceptionofaRemoteFrame,TxRqstisset.

TxRqst

TransmitRequest

0

Thismessageobjectisnotwaitingforatransmission.

1

Thetransmissionofthismessageobjectisrequestedandisnotyetdone.

DLC[3:0]

DataLengthCode

0-8

DataFramehas0-8databits.

9-15

DataFramehas8databytes.

Note:TheDataLengthCodeofamessageobjectmustbedefinedtothesamevalueasinthe

correspondingobjectswiththesameidentifieratothernodes.WhentheMessageHandlerstoresa

dataframe,itwillwritetheDLCtothevaluegivenbythereceivedmessage.

Data0

1stdatabyteofaCANDataFrame

Data1

2nddatabyteofaCANDataFrame

Data2

3rddatabyteofaCANDataFrame

Data3

4thdatabyteofaCANDataFrame

Data4

5thdatabyteofaCANDataFrame

Data5

6thdatabyteofaCANDataFrame

Data6

7thdatabyteofaCANDataFrame

Data7

8thdatabyteofaCANDataFrame

Note:ByteData0isthefirstdatabyteshiftedintotheshiftregisteroftheCANCoreduringa

reception,byteData7isthelast.WhentheMessageHandlerstoresadataframe,itwillwriteallthe

eightdatabytesintoamessageobject.IftheDataLengthCodeislessthan8,theremainingbytesof

themessageobjectmaybeoverwrittenbyundefinedvalues.

1175

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageRAMwww.ti.com

24.5.2AddressingMessageObjectsinRAM

ThestartinglocationofaparticularmessageobjectinRAMis:

MessageRAMbaseaddress+(messageobjectnumber)*0x20.

ThismeansthatMessageObject1startsatoffset0x0020;MessageObject2startsatoffset0x0040,and

soon.

NOTE:0isnotavalidmessageobjectnumber.Writingtotheaddressofanunimplemented

messageobjectmayoverwriteanimplementedmessageobject.

ThebaseaddressforDCAN1RAMis0xFF1E0000,DCAN2RAMis0xFF1C0000,and

DCAN3RAMis0xFF1A0000

MessageObjectnumber1hasthehighestpriority.

Table24-3.MessageRAMAddressinginDebug/SuspendandRDAmode

Message

Word

Debug/Suspendmode,see

Object

BaseAddressOffset

RDAmode,seeSection24.5.4

Number

Section24.5.3

Number

1

0x0020

1

Parity

DataBytes4-7

0x0024

2

MXtd,MDir,Mask

DataBytes0-3

0x0028

3

Xtd,Dir,ID

ID[27:0],DLC

0x002C

4

Ctrl

Mask,Xtd,Dir,ID[28]

0x0030

5

DataBytes3-0

Parity,Ctrl,MXtd,MDir

0x0034

6

DataBytes7-4

--

..

...

...

...

...

31

0x03E0

1

Parity

DataBytes4-7

0x03E4

2

MXtd,MDir,Mask

DataBytes0-3

0x03E8

3

Xtd,Dir,ID

ID[27]:0,DLC

0x03EC

4

Ctrl

Mask,Xtd,Dir,ID[28]

0x03F0

5

DataBytes3-0

Parity,Ctrl,MXtd,MDir

0x03F4

6

DataBytes7-4

--

..

...

...

...

...

63

0x07E0

1

Parity

DataBytes4-7

0x07E4

2

MXtd,MDir,Mask

DataBytes0-3

0x07E8

3

Xtd,Dir,ID

ID[27:0],DLC

0x07EC

4

Ctrl

Mask,Xtd,Dir,ID[28]

0x07F0

5

DataBytes3-0

Parity,Ctrl,MXtd,MDir

0x07F4

6

DataBytes7-4

--

64

0x0000

1

Parity

DataBytes4-7

0x0004

2

MXtd,MDir,Mask

DataBytes0-3

0x0008

3

Xtd,Dir,ID

ID[27]:0,DLC

0x000C

4

Ctrl

Mask,Xtd,Dir,ID[28]

0x0010

5

DataBytes3-0

Parity,Ctrl,MXtd,MDir

0x0014

6

DataBytes7-4

--

1176

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageRAM

24.5.3MessageRAMRepresentationinDebug/SuspendMode

InDebug/Suspendmode,theMessageRAMwillbememorymapped.Thisallowstheexternaldebugunit

toaccesstheMessageRAM.

NOTE:DuringDebug/SuspendMode,theMessageRAMcannotbeaccessedviatheIFxregister

sets.

Figure24-5.MessageRAMRepresentationinDebug/SuspendMode

Bit

31

30

29

28

27

26

25

24

23

22

21

20

19

18

17

16

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

Reserved

MsgAddr+0x00

Reserved

Parity[4:0]

MXtd

MDir

Rsvd

Msk[28:16]

MsgAddr+0x04

Msk[15:0]

Rsvd

Xtd

Dir

ID[28:16]

MsgAddr+0x08

ID[15:0]

Reserved

MsgAddr+0x0C

Rsvd

MsgLst

Rsvd

UMask

TxIE

RxTE

RmtEn

Rsvd

EOB

Reserved

DLC[3:0]

Data3

Data2

MsgAddr+0x10

Data1

Data0

Data7

Data6

MsgAddr+0x14

Data5

Data4

24.5.4MessageRAMRepresentationinDirectAccessMode

WhentheRDAbitinTestRegisterissetwhiletheDCANmoduleisinTestMode(TestbitinCANcontrol

registerisset),theCPUhasdirectaccesstotheMessageRAM.Duetothe32-bitbusstructure,theRAM

issplitintowordlinestosupportthisfeature.TheCPUhasaccesstoonewordlineatatimeonly.

InRAMDirectAccessmode,theRAMisrepresentedbyacontinuousmemoryspacewithintheaddress

frameoftheDCANmodule,startingattheMessageRAMbaseaddress.

NOTE:DuringDirectAccessMode,theMessageRAMcannotbeaccessedviatheIFxregistersets.

BeforeenteringRDAmode,itmustbeensuredthattheInitbitissettoavoidanyconflicts

withthemessagehandleraccessingthemessageRAM.

AnyreadorwritetotheRAMaddressesforRamDirectAccessduringnormaloperationmode

(TestModebitorRDAbitisnotset)willbeignored.

WritestoReservedbitshavenoeffect.

Figure24-6.MessageRAMRepresentationinRAMDirectAccessMode

Bit

31

30

29

28

27

26

25

24

23

22

21

20

19

18

17

16

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

Data4

Data5

MsgAddr+0x00

Data6

Data7

Data0

Data1

MsgAddr+0x04

Data2

Data3

ID[27:12]

MsgAddr+0x08

ID[11:0]

DLC[3:0]

Msk[28:13]

MsgAddr+0x0C

Msk[12:0]

Xtd

Dir

ID[28]

Reserved

MsgAddr+0x10

Parity[3:0]

Reserved

MsgLst

UMask

TxIE

RxTE

RmtEn

EOB

MXtd

MDir

1177

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageInterfaceRegisterSetswww.ti.com

24.6MessageInterfaceRegisterSets

AccessestotheMessageRAMareperformedviatheInterfaceRegistersets.

1.InterfaceRegister1and2

2.InterfaceRegister3

ThethirdInterfaceRegistersetIF3canbeconfiguredtoautomaticallyreceivecontrolanduserdatafrom

theMessageRAMwhenamessageobjecthasbeenupdatedafterreceptionofaCANmessage.The

CPUdoesnotneedtoinitiatethetransferfromMessageRAMtoIF3Registerset.

TheMessageHandleravoidspotentialconflictsbetweenconcurrentaccessestoMessageRAMandCAN

framereception/transmission.

TherearetwomodeswheretheMessageRAMcanbedirectlyaccessedbytheCPU:

1.InDebug/Suspendmode(seeSection24.5.3)

2.InRAMDirectAccess(RDA)mode(seeSection24.5.4)

FortheMessageRAMBaseaddress,pleaserefertothedevicedatasheet.

Acompletemessageobject(seeSection24.5.1)orpartsofthemessageobjectmaybetransferred

betweentheMessageRAMandtheIF1/IF2Registerset(seeSection24.17.19)inonesingletransfer.

24.6.1MessageInterfaceRegisterSets1and2

TheInterfaceRegistersetsIF1andIF2provideindirectread/writeaccessfromtheCPUtotheMessage

RAM.TheIF1andIF2registersetscanbuffercontrolanduserdatatobetransferredtoandfromthe

messageobjects.

Table24-4.MessageInterfaceRegisterSets1and2

Address

IF1RegisterSet

Address

IF2RegisterSet

[CANBase+]

31

16

15

0

[CANBase+]

31

16

15

0

IF1Command

IF2Command

0x100

IF1CommandMask

0x120

IF2CommandMask

Request

Request

0x104

IF1Mask2

IF1Mask1

0x124

IF2Mask2

IF2Mask1

0x108

IF1Arbitration2

IF1Arbitration1

0x128

IF2Arbitration2

IF2Arbitration1

0x10C

Rsvd

IF1MessageControl

0x12C

Rsvd

IF2MessageControl

0x110

IF1DataA2

IF1DataA1

0x130

IF2DataA2

IF2DataA1

0x114

IF1DataB2

IF1DataB1

0x134

IF2DataB2

IF2DataB1

1178

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




STARTWR/RD=1Busy=0Busy=1ReadmessageobjecttoIF1/IF2WriteIF1/IF2tomessageRAMReadmessageobjecttoIF1/IF2NoYes

Writemessagenumbertocommandregister

NoYes



www.ti.comMessageInterfaceRegisterSets

24.6.2UsingMessageInterfaceRegisterSets1and2

TheCommandRegisteraddressesthedesiredmessageobjectintheMessageRAMandspecifies

whetheracompletemessageobjectoronlypartsshouldbetransferred.Thedatatransferisinitiatedby

writingthemessagenumbertothebits[7:0]oftheCommandRegister.

WhentheCPUinitiatesadatatransferbetweentheIF1/IF2RegistersandMessageRAM,theMessage

HandlersetstheBusybitintherespectiveCommandRegisterto‘1’.Afterthetransferhascompleted,the

Busybitissetbackto‘0’(seeFigure24-7).

Figure24-7.DataTransferBetweenIF1/IF2RegistersandMessageRAM

1179

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageInterfaceRegisterSetswww.ti.com

24.6.3MessageInterfaceRegister3

TheIF3registersetcanautomaticallybeupdatedwithreceivedmessageobjectswithouttheneedto

initiatethetransferfromMessageRAMbyCPU.TheintentionofthisfeatureofIF3istoprovidean

interfacefortheDMAtoreadpacketsefficiently.

Table24-5.MessageInterfaceRegister3

Address

IF3RegisterSet

[CANBase+]

31

16

15

0

0x140

reserved

IF3Observation

0x144

IF3Mask2

IF3Mask1

0x148

IF3Arbitration2

IF3Arbitration1

0x14C

reserved

IF3MessageControl

0x150

IF3DataA2

IF3DataA1

0x154

IF3DataB2

IF3DataB1

...

0x160

IF3UpdateEnable2

IF3UpdateEnable1

0x164

IF3UpdateEnable4

IF3UpdateEnable3

0x168

IF3UpdateEnable6

IF3UpdateEnable5

0x16C

IF3UpdateEnable8

IF3UpdateEnable7

Theautomaticupdatefunctionalitycanbeprogrammedforeachmessageobject(seeIF3UpdateEnable

Register,Section24.17.28).

AllvalidmessageobjectsinMessageRAMwhichareconfiguredforautomaticupdate,willbecheckedfor

activeNewDatflags.Ifsuchamessageobjectisfound,itwillbetransferredtotheIF3register(ifno

previousDMAtransfersareongoing),controlledbyIF3Observationregister.IfmorethanoneNewDat

flagisactive,themessageobjectwiththelowestnumberhasthehighestpriorityforautomaticIF3update.

TheNewDatbitinthemessageobjectwillberesetbyatransfertoIF3.

IfDCANinternalIF3updateiscomplete,aDMArequestisgenerated.TheDMArequeststaysactiveuntil

firstreadaccesstooneoftheIF3registers.TheDMAfunctionalityhastobeenabledbysettingbitDE3in

CANControlregister.PleaserefertothedevicedatasheettofindoutifthisDMAsourceisavailable.

NOTE:TheIF3registersetcannotbeusedfortransferringdataintomessageobjects.

1180

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageObjectConfigurations

24.7MessageObjectConfigurations

ThissectiondescribesthepossiblemessageobjectconfigurationsforCANcommunication.

24.7.1ConfigurationofaTransmitObjectforDataFrames

Figure24-8showshowaTransmitObjectcanbeinitialized.

Figure24-8.InitializationofaTransmitObject

MsgVal

Arb

Data

Mask

EoB

Dir

NewDat

MsgLst

RxIE

TxIE

IntPnd

RmtEn

TxRqst

1

appl.

appl.

appl.

1

1

0

0

0

appl.

0

appl.

0

TheArbitrationbits(ID[28:0]andXtdbit)aregivenbytheapplication.Theydefinetheidentifierandtype

oftheoutgoingmessage.Ifan11-bitIdentifier(StandardFrame)isused(Xtd=‘0’),itisprogrammedto

ID[28:18].Inthiscase,ID[17:0]canbeignored.

TheDataRegisters(DLC[3:0]andData0-7)aregivenbytheapplication,TxRqstandRmtEnshouldnotbe

setbeforethedataisvalid.

IftheTxIEbitisset,theIntPndbitwillbesetafterasuccessfultransmissionofthemessageobject.

IftheRmtEnbitisset,amatchingreceivedRemoteFramewillcausetheTxRqstbittobeset;theRemote

FramewillautonomouslybeansweredbyaDataFrame.

TheMaskbits(Msk[28:0],UMask,MXtd,andMDirbits)maybeused(UMask=’1’)toallowgroupsof

RemoteFrameswithsimilaridentifierstosettheTxRqstbit.TheDirbitshouldnotbemasked.Fordetails,

seeSection24.8.8.Identifiermaskingmustbedisabled(UMask=‘0’)ifnoRemoteFramesareallowedto

settheTxRqstbit(RmtEn=‘0’).

24.7.2ConfigurationofaTransmitObjectforRemoteFrames

ItisnotnecessarytoconfigureTransmitObjectsforthetransmissionofRemoteFrames.SettingTxRqst

foraReceiveObjectwillcausethetransmissionofaRemoteFramewiththesameidentifierastheData

FrameforwhichthisreceiveObjectisconfigured.

24.7.3ConfigurationofaSingleReceiveObjectforDataFrames

Figure24-9showshowaReceiveObjectforDataFramescanbeinitialized.

Figure24-9.InitializationofaSingleReceiveObjectforDataFrames

MsgVal

Arb

Data

Mask

EoB

Dir

NewDat

MsgLst

RxIE

TxIE

IntPnd

RmtEn

TxRqst

1

appl.

appl.

appl.

1

0

0

0

appl.

0

0

0

0

TheArbitrationbits(ID[28:0]andXtdbit)aregivenbytheapplication.Theydefinetheidentifierandtype

ofacceptedreceivedmessages.Ifan11-bitIdentifier(StandardFrame)isused(Xtd=‘0’),itis

programmedtoID[28:18].Inthiscase,ID[17:0]canbeignored.WhenaDataFramewithan11-bit

Identifierisreceived,ID[17:0]willbesetto‘0’.

TheDataLengthCode(DLC[3:0])isgivenbytheapplication.WhentheMessageHandlerstoresaData

Frameinthemessageobject,itwillstorethereceivedDataLengthCodeandeightdatabytes.IftheData

LengthCodeislessthan8,theremainingbytesofthemessageobjectmaybeoverwrittenbynon

specifiedvalues.

TheMaskbits(Msk[28:0],UMask,MXtd,andMDirbits)maybeused(UMask=’1’)toallowgroupsof

DataFrameswithsimilaridentifierstobeaccepted.TheDirbitshouldnotbemaskedintypical

applications.IfsomebitsoftheMaskbitsaresetto“don’tcare”,thecorrespondingbitsoftheArbitration

RegisterwillbeoverwrittenbythebitsofthestoredDataFrame.

IftheRxIEbitisset,theIntPndbitwillbesetwhenareceivedDataFrameisacceptedandstoredinthe

messageobject.

IftheTxRqstbitisset,thetransmissionofaRemoteFramewiththesameidentifierasactuallystoredin

theArbitrationbitswillbetriggered.ThecontentoftheArbitrationbitsmaychangeiftheMaskbitsare

used(UMask=’1’)foracceptancefiltering.

1181

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageObjectConfigurationswww.ti.com

24.7.4ConfigurationofaSingleReceiveObjectforRemoteFrames

Figure24-10showshowaReceiveObjectforRemoteFramescanbeinitialized.

Figure24-10.InitializationofaSingleReceiveObjectforRemoteFrames

MsgVal

Arb

Data

Mask

EoB

Dir

NewDat

MsgLst

RxIE

TxIE

IntPnd

RmtEn

TxRqst

1

appl.

appl.

appl.

1

1

0

0

appl.

0

0

0

0

ReceiveObjectsforRemoteFramesmaybeusedtomonitorRemoteFramesontheCANbus.The

RemoteFramestoredintheReceiveObjectwillnottriggerthetransmissionofaDataFrame.Receive

ObjectsforRemoteFramesmaybeexpandedtoaFIFObuffer,seeSection24.7.5.

UMaskmustbesetto‘1’.TheMaskbits(Msk[28:0],UMask,MXtd,andMDirbits)maybesetto“must-

match”orto“don’tcare”,toallowgroupsofRemoteFrameswithsimilaridentifierstobeaccepted.TheDir

bitshouldnotbemaskedintypicalapplications.Fordetails,seeSection24.8.8.

TheArbitrationbits(ID[28:0]andXtdbit)maybegivenbytheapplication.Theydefinetheidentifierand

typeofacceptedreceivedRemoteFrames.IfsomebitsoftheMaskbitsaresetto“don’tcare”,the

correspondingbitsoftheArbitrationbitswillbeoverwrittenbythebitsofthestoredRemoteFrame.Ifan

11-bitIdentifier(StandardFrame)isused(Xtd=‘0’),itisprogrammedtoID[28:18].Inthiscase,ID[17:0]

canbeignored.WhenaRemoteFramewithan11-bitIdentifierisreceived,ID[17:0]willbesetto‘0’.

TheDataLengthCode(DLC[3:0])maybegivenbytheapplication.WhentheMessageHandlerstoresa

RemoteFrameinthemessageobject,itwillstorethereceivedDataLengthCode.Thedatabytesofthe

messageobjectwillremainunchanged.

IftheRxIEbitisset,theIntPndbitwillbesetwhenareceivedRemoteFrameisacceptedandstoredin

themessageobject.

24.7.5ConfigurationofaFIFOBuffer

WiththeexceptionoftheEoBbit,theconfigurationofReceiveObjectsbelongingtoaFIFOBufferisthe

sameastheconfigurationofasingleReceiveObject.

ToconcatenatemultiplemessageobjectstoaFIFOBuffer,theidentifiersandmasks(ifused)ofthese

messageobjectshavetobeprogrammedtomatchingvalues.Duetotheimplicitpriorityofthemessage

objects,themessageobjectwiththelowestnumberwillbethefirstmessageobjectoftheFIFOBuffer.

TheEoBbitofallmessageobjectsofaFIFOBufferexceptthelastonehavetobeprogrammedtozero.

TheEoBbitsofthelastmessageobjectofaFIFOBufferissettoone,configuringitastheendofthe

block.

24.7.6ReconfigurationofMessageObjectsfortheReceptionofFrames

AmessageobjectwithDir=‘0’isconfiguredforthereceptionofdataframes,withDir=‘1’ANDUmask=

‘1’ANDRmtEn=‘0’itisconfiguredforthereceptionofremoteframes.

ItisneccessarytoresetMsgValtonotvalidbeforechanginganyofthefollowingconfigurationandcontrol

bits:ID[28:0],Xtd,Dir,DLC[3:0],RxIE,TxIE,RmtEn,EoB,Umask,Msk[28:0],MXtd,andMDir.

ThesepartsofamessageobjectmaybechangedwithoutclearingMsgVal:Data[7:0],TxRqst,NewDat,

MsgLst,andIntPnd.

24.7.7ReconfigurationofMessageObjectsfortheTransmissionofFrames

AmessageobjectwithDir=‘1’AND(Umask=‘0’ORRmtEn=‘1’)isconfiguredforthetransmissionof

dataframes.

ItisneccessarytoresetMsgValtonotvalidbeforechanginganyofthefollowingconfigurationandcontrol

bits:Dir,RxIE,TxIE,RmtEn,EoB,Umask,Msk[28:0],MXtd,andMDir

ThesepartsofamessageobjectmaybechangedwithoutclearingMsgVal:ID[28-0],Xtd,DLC[3:0],

Data[7:0],TxRqst,NewDat,MsgLst,andIntPnd.

1182

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageHandling

24.8MessageHandling

Wheninitializationisfinished,theDCANmodulesynchronizesitselftothetrafficontheCANbus.Itdoes

acceptancefilteringonreceivedmessagesandstoresthoseframesthatareacceptedintothedesignated

messageobjects.

Theapplicationhastoupdatethedataofthemessagestobetransmittedandenableandrequesttheir

transmission.ThetransmissionisrequestedautomaticallywhenamatchingRemoteFrameisreceived.

Theapplicationmayreadmessageswhicharereceivedandaccepted.Messagesthatarenotreadbefore

thenextmessagesisacceptedforthesamemessageobjectwillbeoverwritten.

Messagesmaybereadbasedoninterruptsorbypolling.

24.8.1MessageHandlerOverview

TheMessageHandlerstatemachinecontrolsthedatatransferbetweentheRx/TxShiftRegisterofthe

CANCoreandtheMessageRAM.Itperformsthefollowingtasks:

•DataTransferfromMessageRAMtoCANCore(messagestobetransmitted).

•DataTransferfromCANCoretotheMessageRAM(receivedmessages).

•DataTransferfromCANCoretotheAcceptanceFilteringunit.

•ScanningofMessageRAMforamatchingmessageobject(acceptancefiltering).

•ScanningthesamemessageobjectafterbeingchangedbyIF1/IF2registerswhenpriorityissameor

higherasmessagetheobjectfoundbylastscanning.

•HandlingofTxRqstflags.

•Handlingofinterruptflags.

TheMessageHandlerregisterscontainsstatusflagsofallmessageobjectsgroupedintothefollowing

topics:

•TransmissionRequestflags

•NewDataflags

•InterruptPendingFlags

•MessageValidRegisters

InsteadofcollectingthelistedstatusinformationofeachmessageobjectviaIFxregistersseparately,

theseMessageHandlerregistersprovidesafastandeasywaytogetanoverview(forexample,aboutall

pendingtransmissionrequests).

AllMessageHandlerregistersareread-only.

24.8.2Receive/TransmitPriority

Thereceive/transmitpriorityforthemessageobjectsisattachedtothemessagenumber,nottotheCAN

identifier.Messageobject1hasthehighestpriority,whilethelastimplementedmessageobjecthasthe

lowestpriority.Ifmorethanonetransmissionrequestispending,theyareservicedduetothepriorityof

thecorrespondingmessageobject,somessageswiththehighestprioritycanbeplacedinthemessage

objectswiththelowestnumbers.

TheacceptancefilteringforreceivedDataFramesorRemoteFramesisalsodoneinascendingorderof

messageobjects,soaframethathasbeenacceptedbyamessageobjectcannotbeacceptedbyanother

messageobjectwithahigherMessageNumber.Thelastmessageobjectmaybeconfiguredtoaccept

anyDataFrameorRemoteFramethatwasnotacceptedbyanyothermessageobject,fornodesthat

needtologthecompletemessagetrafficontheCANbus.

1183

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageHandlingwww.ti.com

24.8.3TransmissionofMessagesinEventDrivenCANCommunication

IftheshiftregisteroftheCANCoreisreadyforloadingandifthereisnodatatransferbetweentheIFx

RegistersandMessageRAM,thedbitsintheMessageValidRegisterandtheTxRqstbitsinthe

TransmissionRequestRegisterareevaluated.Thevalidmessageobjectwiththehighestprioritypending

transmissionrequestisloadedintotheshiftregisterbytheMessageHandlerandthetransmissionis

started.Themessageobject’sNewDatbitisreset.

Afterasuccessfultransmissionandifnonewdatawaswrittentothemessageobject(NewDat=‘0’)since

thestartofthetransmission,theTxRqstbitwillbereset.IfTxIEisset,IntPndwillbesetafterasuccessful

transmission.IftheDCANhaslostthearbitrationorifanerroroccurredduringthetransmission,the

messagewillberetransmittedassoonastheCANbusisfreeagain.Ifmeanwhilethetransmissionofa

messagewithhigherpriorityhasbeenrequested,themessageswillbetransmittedintheorderoftheir

priority.

IfAutomaticRetransmissionmodeisdisabledbysettingtheDARbitintheCANControlRegister,the

behaviorofbitsTxRqstandNewDatintheMessageControlRegisteroftheInterfaceRegistersetisas

follows:

•Whenatransmissionstarts,theTxRqstbitoftherespectiveInterfaceRegistersetisreset,whilebit

NewDatremainsset.

•Whenthetransmissionhasbeensuccessfullycompleted,theNewDatbitisreset.

Whenatransmissionfailed(lostarbitrationorerror)bitNewDatremainsset.Torestartthetransmission,

theapplicationhastosetTxRqstagain.

ReceivedRemoteFramesdonotrequireaReceiveObject.Theywillautomaticallytriggerthe

transmissionofaDataFrame,ifinthematchingTransmitObjecttheRmtEnbitisset.

24.8.4UpdatingaTransmitObject

TheCPUmayupdatethedatabytesofaTransmitObjectanytimeviatheIF1/IF2InterfaceRegisters,

neitherdnorTxRqsthavetoberesetbeforetheupdate.

Evenifonlyapartofthedatabytesaretobeupdated,allfourbytesinthecorrespondingIF1/IF2DataA

RegisterorIF1/IF2DataBRegisterhavetobevalidbeforethecontentofthatregisteristransferredtothe

messageobject.EithertheCPUhastowriteallfourbytesintotheIF1/IF2DataRegisterorthemessage

objectistransferredtotheIF1/IF2DataRegisterbeforetheCPUwritesthenewdatabytes.

Whenonlythedatabytesareupdated,first0x87canbewrittentobits[23:16]oftheCommandRegister

andthenthenumberofthemessageobjectiswrittentobits[7:0]oftheCommandRegister,concurrently

updatingthedatabytesandsettingTxRqstwithNewDat.

TopreventtheresetofTxRqstattheendofatransmissionthatmayalreadybeinprogresswhilethedata

isupdated,NewDathastobesettogetherwithTxRqstineventdrivenCANcommunication.Fordetails,

seeSection24.8.3.

WhenNewDatissettogetherwithTxRqst,NewDatwillberesetassoonasthenewtransmissionhas

started.

24.8.5ChangingaTransmitObject

Ifthenumberofimplementedmessageobjectsisnotsufficienttobeusedaspermanentmessageobjects

only,theTransmitObjectsmaybemanageddynamically.TheCPUcanwritethewholemessage

(Arbitration,Control,andData)intotheInterfaceRegister.Thebits[23:16]oftheCommandRegistercan

besetto0xB7forthetransferofthewholemessageobjectcontentintothemessageobject.Before

changingtheconfigurationofamessageobject,MsgValhastobereset(seeSection24.7.7).

Ifapreviouslyrequestedtransmissionofthismessageobjectisnotcompletedbutalreadyinprogress,it

willbecontinued;howeveritwillnotberepeatedifitisdisturbed.

Toonlyupdatethedatabytesofamessagetobetransmitted,bits[23:16]oftheCommandRegister

shouldbesetto0x87.

1184

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMessageHandling

NOTE:AftertheupdateoftheTransmitObject,theInterfaceRegistersetwillcontainacopyofthe

actualcontentsoftheobject,includingthepartthathadnotbeenupdated.

24.8.6AcceptanceFilteringofReceivedMessages

Whenthearbitrationandcontrolbits(Identifier+IDE+RTR+DLC)ofanincomingmessageis

completelyshiftedintotheshiftregisteroftheCANCore,theMessageHandlerstartstoscanofthe

MessageRAMforamatchingvalidmessageobject:

•TheAcceptanceFilteringunitisloadedwiththearbitrationbitsfromtheCANCoreshiftregister.

•Thenthearbitrationandmaskbits(includingMsgVal,UMask,NewDat,andEoB)ofMessageObject1

areloadedintotheAcceptanceFilteringunitandarecomparedwiththearbitrationbitsfromtheshift

register.Thisisrepeatedforallfollowingmessageobjectsuntilamatchingmessageobjectisfound,or

untiltheendoftheMessageRAMisreached.

•Ifamatchoccurs,thescanningisstoppedandtheMessageHandlerproceedsdependingonthetype

oftheframe(DataFrameorRemoteFrame)received.

24.8.7ReceptionofDataFrames

TheMessageHandlerstoresthemessagefromtheCANCoreshiftregisterintotherespectivemessage

objectintheMessageRAM.Notonlythedatabytes,butallarbitrationbitsandtheDataLengthCodeare

storedintothecorrespondingmessageobject.Thisensuresthatthedatabytesstayassociatedtothe

identifierevenifarbitrationmaskregistersareused.

TheNewDatbitissettoindicatethatnewdata(notyetseenbytheCPU)hasbeenreceived.TheCPU

shouldresettheNewDatbitwhenitreadsthemessageobject.IfatthetimeofthereceptiontheNewDat

bitwasalreadyset,MsgLstissettoindicatethatthepreviousdata(supposedlynotseenbytheCPU)is

lost.IftheRxIEbitisset,theIntPndbitisset,causingtheInterruptRegistertopointtothismessage

object.

TheTxRqstbitofthismessageobjectisresettopreventthetransmissionofaRemoteFrame,whilethe

requestedDataFramehasjustbeenreceived.

24.8.8ReceptionofRemoteFrames

WhenaRemoteFrameisreceived,threedifferentconfigurationsofthematchingmessageobjecthaveto

beconsidered:

1.Dir=‘1’(direction=transmit),RmtEn=‘1’,UMask=‘1’or‘0’TheTxRqstbitofthismessageobjectis

setatthereceptionofamatchingRemoteFrame.Therestofthemessageobjectremainsunchanged.

2.Dir=‘1’(direction=transmit),RmtEn=‘0’,UMask=‘0’TheRemoteFrameisignored,thismessage

objectremainsunchanged.

3.Dir=‘1’(direction=transmit),RmtEn=‘0’,UMask=‘1’TheRemoteFrameistreatedsimilartoa

receivedDataFrame.AtthereceptionofamatchingRemoteFrame,theTxRqstbitofthismessage

objectisreset.Thearbitrationandcontrolbits(Identifier+IDE+RTR+DLC)fromtheshiftregister

arestoredinthemessageobjectintheMessageRAMandtheNewDatbitofthismessageobjectis

set.Thedatabytesofthemessageobjectremainunchanged.

24.8.9ReadingReceivedMessages

TheCPUmayreadareceivedmessageanytimeviatheIFxInterfaceRegisters,thedataconsistencyis

guaranteedbytheMessageHandlerstatemachine.

TypicallytheCPUwillwritefirst0x7Ftobits[23:16]andthenthenumberofthemessageobjecttobits

[7:0]oftheCommandRegister.Thatcombinationwilltransferthewholereceivedmessagefromthe

MessageRAMintotheInterfaceRegisterset.Additionally,thebitsNewDatandIntPndareclearedinthe

MessageRAM(notintheInterfaceRegisterset).ThevaluesofthesebitsintheMessageControl

Registeralwaysreflectthestatusbeforeresettingthebits.

Ifthemessageobjectusesmasksforacceptancefiltering,thearbitrationbitsshowwhichofthedifferent

matchingmessageshasbeenreceived.

1185

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MessageHandlingwww.ti.com

TheactualvalueofNewDatshowswhetheranewmessagehasbeenreceivedsincelasttimewhenthis

messageobjectwasread.TheactualvalueofMsgLstshowswhethermorethanonemessagehavebeen

receivedsincethelasttimewhenthismessageobjectwasread.MsgLstwillnotbeautomaticallyreset.

24.8.10RequestingNewDataforaReceiveObject

BymeansofaRemoteFrame,theCPUmayrequestanotherCANnodetoprovidenewdataforareceive

object.SettingtheTxRqstbitofareceiveobjectwillcausethetransmissionofaRemoteFramewiththe

receiveobject’sidentifier.ThisRemoteFrametriggerstheotherCANnodetostartthetransmissionofthe

matchingDataFrame.IfthematchingDataFrameisreceivedbeforetheRemoteFramecouldbe

transmitted,theTxRqstbitisautomaticallyreset.

SettingtheTxRqstbitwithoutchangingthecontentsofamessageobjectrequiresthevalue0x84inbits

[23:16]oftheCommandRegister.

24.8.11StoringReceivedMessagesinFIFOBuffers

SeveralmessageobjectsmaybegroupedtoformoneormoreFIFOBuffers.EachFIFOBufferconfigured

tostorereceivedmessageswithaparticular(groupof)Identifier(s).ArbitrationandMaskRegistersofthe

FIFOBuffer’smessageobjectsareidentical.TheEoB(EndofBuffer)bitsofallbutthelastoftheFIFO

Buffer’smessageobjectsare‘0’,inthelastonetheEoBbitis‘1’.

ReceivedmessageswithidentifiersmatchingtoaFIFOBufferarestoredintoamessageobjectofthis

FIFOBuffer,startingwiththemessageobjectwiththelowestmessagenumber.

WhenamessageisstoredintoamessageobjectofaFIFOBuffertheNewDatbitofthismessageobject

isset.BysettingNewDatwhileEoBis‘0’themessageobjectislockedforfurtherwriteaccessesbythe

MessageHandleruntiltheCPUhasclearedtheNewDatbit.

MessagesarestoredintoaFIFOBufferuntilthelastmessageobjectofthisFIFOBufferisreached.If

noneoftheprecedingmessageobjectsisreleasedbywritingNewDatto‘0’,allfurthermessagesforthis

FIFOBufferwillbewrittenintothelastmessageobjectoftheFIFOBuffer(EoB=‘1’)andtherefore

overwritepreviousmessagesinthismessageobject.

24.8.12ReadingfromaFIFOBuffer

Severalmessagesmaybeaccumulatedinasetofmessageobjectswhichareconcatenatedtoforma

FIFOBufferbeforetheapplicationprogramisrequired(inordertoavoidthelossofdata)toemptythe

buffer.

AFIFOBufferoflengthNwillstoreN-1plusthelastreceivedmessagesincelasttimeitwascleared.

AFIFOBufferisclearedbyreadingandresettingtheNewDatbitsofallitsmessageobjects,startingat

theFIFOObjectwiththelowestmessagenumber.Thisshouldbedoneinasubroutinefollowingthe

exampleshowninFigure24-11.

NOTE:AllmessageobjectsofaFIFObufferneedstobereadandclearedbeforethenextbatchof

messagescanbestored.OtherwisetrueFIFOfunctionalitycannotbeguaranteed,sincethe

messageobjectsofapartlyreadbufferwillbere-filledaccordingtothenormal(descending)

priority.

ReadingfromaFIFOBuffermessageobjectandresettingitsNewDatbitishandledthesamewayas

readingfromasinglemessageobject.

1186

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Readinterruptidentifier

STARTcaseinterruptidentifier0x8000else                          0x0000StatusChangeENDIFxcommandregister[31:16]=0x007FWriteMessageNumbertoIF1/IF2commandregister(TransfermessagetoIF1/IF2registers,clearNewDatandIntPnd)ReadIF1/IF2messagecontrolNewDat=1ReaddatafromIF1/IF2DataA,BEoB=1NextMessageNumberinthisFIFOBuffer

YesNoYesNoMessageinterrupt

InterruptHandlingMessageNumber=interruptidentifier



www.ti.comMessageHandling

Figure24-11.CPUHandlingofaFIFOBuffer(InterruptDriven)

1187

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






CANMessageTransferwww.ti.com

24.9CANMessageTransfer

OncetheDCANisinitializedandInitbitisresettozero,theCANCoresynchronizesitselftotheCANbus

andisreadyformessagetransferaspertheconfiguredmessageobjects.

TheCPUmayenabletheinterruptlines(settingIE0andIE1to‘1’)atthesametimewhenitclearsInitand

CCE.ThestatusinterruptsEIEandSIEmaybeenabledsimultaneously.

TheCANcommunicationcanbecarriedoutinanyofthefollowingtwomodes:

1.Interruptmode

2.Pollingmode.

TheInterruptRegisterpointstothosemessageobjectswithIntPnd=‘1’.Itisupdatedeveniftheinterrupt

linestotheCPUaredisabled(IE0/IE1arezero).

TheCPUmaypollallMessageObject’sNewDatandTxRqstbitsinparallelfromtheNewDataX

RegistersandtheTransmissionRequestXRegisters.PollingcanbemadeeasierifallTransmitObjects

aregroupedatthelownumbers,allReceiveObjectsaregroupedatthehighnumbers.

Receivedmessagesarestoredintotheirappropriatemessageobjectsiftheypassacceptancefiltering.

Thewholemessage(includingallarbitrationbits,DLCanduptoeightdatabytes)isstoredintothe

messageobject.Asaconsequence,whentheidentifiermaskisused,thearbitrationbitswhichare

maskedto“don’tcare”maychangeinthemessageobjectwhenareceivedmessageisstored.

TheCPUmayreadorwriteeachmessageatanytimeviatheInterfaceRegisters,astheMessage

Handlerguaranteesdataconsistencyincaseofconcurrentaccesses(forreconfiguration,see

Section24.7.6)

Ifapermanentmessageobject(arbitrationandcontrolbitssetupduringconfigurationandleaving

unchangedformultipleCANtransfers)existsforthemessage,itispossibletoonlyupdatethedatabytes.

Ifseveraltransmitmessagesshouldbeassignedtoonemessageobject,thewholemessageobjecthas

tobeconfiguredbeforethetransmissionofthismessageisrequested.

Thetransmissionofmultiplemessageobjectsmayberequestedatthesametime.Theyaresubsequently

transmitted,accordingtotheirinternalpriority.

Messagesmaybeupdatedorsettonotvalidatanytime,evenifarequestedtransmissionisstillpending

(forreconfiguration,seeSection24.7.7).However,thedatabyteswillbediscardedifamessageis

updatedbeforeapendingtransmissionhasstarted.

Dependingontheconfigurationofthemessageobject,atransmissionmaybeautomaticallyrequestedby

thereceptionofaremoteframewithamatchingidentifier.

24.9.1AutomaticRetransmission

AccordingtotheCANSpecification(ISO11898),theDCANprovidesamechanismtoautomatically

retransmitframeswhichhavelostarbitrationorhavebeendisturbedbyerrorsduringtransmission.The

frametransmissionservicewillnotbeconfirmedtotheuserbeforethetransmissionissuccessfully

completed.

Bydefault,thisautomaticretransmissionisenabled.ItcanbedisabledbysettingbitDAR(Disable

AutomaticRetransmission)inCANControlRegister.Furtherdetailstothismodeareprovidedin

Section24.8.3.

24.9.2Auto-Bus-On

Perdefault,aftertheDCANhasenteredBus-Offstate,theCPUcanstartaBus-Off-Recoverysequence

byresettingInitbit.Ifthisisnotdone,themodulewillstayinBus-Offstate.

TheDCANprovidesanautomaticAuto-Bus-OnfeaturewhichisenabledbybitABOinCANControl

Register.Ifset,theDCANwillautomaticallystarttheBus-Off-Recoverysequence.Thesequencecanbe

delayedbyauser-definednumberofVCLKcycleswhichcanbedefinedinAuto-Bus-OnTimeRegister.

1188

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInterruptFunctionality

NOTE:IftheDCANgoesBus-OffduetomassiveoccurrenceofCANbuserrors,itstopsallbus

activitiesandautomaticallysetstheInitbit.OncetheInitbithasbeenresetbytheCPUor

duetotheAuto-Bus-Onfeature,thedevicewillwaitfor129occurrencesofBusIdle(equalto

129×11consecutiverecessivebits)beforeresumingnormaloperation.Attheendofthe

Bus-Offrecoverysequence,theerrorcounterswillbereset.

24.10InterruptFunctionality

Interruptscanbegeneratedontwointerruptlines:

1.DCAN0INTline

2.DCAN1INTline

TheselinescanbeenabledbysettingIE0andIE1bitsrespectivelyinCANControlRegister.

TheDCANprovidesthreegroupsofinterruptsources:MessageObjectInterrupts,StatusChange

InterruptsandErrorInterrupts(seeFigure24-12andFigure24-13).

ThesourceofaninterruptcanbedeterminedbytheinterruptidentifiersInt0ID/Int1IDintheInterrupt

Register(seeSection24.17.5).Whennointerruptispending,theregisterwillholdthevaluezero.

EachinterruptlineremainsactiveuntilthededicatedfieldintheInterruptRegisterDCANINT(Int0ID/

Int1ID)againreachzero(thismeansthecauseoftheinterruptisreset),oruntilIE0/IE1arereset.

Thevalue0x8000intheInt0IDfieldindicatesthataninterruptispendingbecausetheCANCorehas

updated(notnecessarilychanged)theErrorandStatusRegister(ErrorInterruptorStatusInterrupt).This

interrupthasthehighestpriority.TheCPUcanupdate(reset)thestatusbitsWakeUpPnd,RxOk,TxOk

andLECbyreadingtheErrorandStatusRegisterDCANES,butawriteaccessoftheCPUwillnever

generateorresetaninterrupt.

Valuesbetween1andthenumberofthelastmessageobjectindicatesthatthesourceoftheinterruptis

oneofthemessageobjects,Int0IDresp.Int1IDwillpointtothependingmessageinterruptwiththe

highestpriority.TheMessageObject1hasthehighestpriority,thelastmessageobjecthasthelowest

priority.

Aninterruptserviceroutinewhichreadsthemessagethatisthesourceoftheinterrupt,mayreadthe

messageandresetthemessageobject’sIntPndatthesametime(ClrIntPndbitintheIF1/IF2Command

Register).WhenIntPndiscleared,theInterruptRegisterwillpointtothenextmessageobjectwitha

pendinginterrupt.

24.10.1MessageObjectInterrupts

MessageObjectinterruptsaregeneratedbyeventsfromthemessageobjects.Theyarecontrolledbythe

flagsIntPND,TxIEandRxIE,whicharedescribedinSection24.5.1.

MessageObjectinterruptscanberoutedtoeitherDCAN0INTorDCAN1INTline,controlledbythe

InterruptMultiplexerRegister(seeSection24.17.17).

24.10.2StatusChangeInterrupts

TheeventsWakeUpPnd,RxOk,TxOkandLECinErrorandStatusRegister(DCANES)belongtothe

StatusChangeInterrupts.TheStatusChangeInterruptgroupcanbeenabledbybitinCANControl

Register.

IfSIEisset,aStatusChangeInterruptwillbegeneratedateachCANframe,independentofbuserrorsor

validCANcommunication,andalsoindependentoftheMessageRAMconfiguration.

StatusChangeinterruptscanonlyberoutedtointerruptlineDCAN0INTwhichhastobeenabledby

settingIE0intheCANControlRegister.

1189

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MessageObject1MessageObjectLastReceiveOKTransmitOKReceiveOKTransmitOK

MessageObjectInterruptBusOffErrorParity

WarningErrorWakeUpPndLECRXOKTXOK

EIESIEMessageObjectInterruptsStatusChangeInterruptsErrorInterruptsIE0DCAN0INTErrorandStatusChangeInterruptsareRoutedtoDCAN0INTline



InterruptFunctionalitywww.ti.com

NOTE:ReadingtheErrorandStatusRegisterwillcleartheWakeUpPndflag.Ifinglobalpower

downmode,theWakeUpPndflagisclearedbysuchareadaccessbeforetheDCANmodule

hasbeenwakenupbythesystem,theDCANmayre-asserttheWakeUpPndflag,anda

secondinterruptmayoccur(additionalinformationcanbefoundinSection24.11.2).

24.10.3ErrorInterrupts

TheeventsPER,BOffandEWarn(monitoredinErrorandStatusRegister,DCANES)belongtotheError

Interrupts.TheErrorInterruptgroupcanbeenabledbysettingbitEIEinCANControlRegister.

ErrorinterruptscanonlyberoutedtointerruptlineDCAN0INTwhichhastobeenabledbysettingIE0in

theCANControlRegister.

Figure24-12.CANInterruptTopology1

1190

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MessageObject1MessageObjectLastReceiveOKTransmitOKReceiveOKTransmitOK

MessageObjectInterruptsIE0DCAN0INT

IE1DCAN1INT

MessageObjectInterruptscanbeRoutedtoDCAN0INTorDCAN1INTLine

IntPndMux(n)IntPndMux(1)

ToStatusInterruptRxIETxIERxIETxIE



www.ti.comGlobalPowerDownMode

Figure24-13.CANInterruptTopology2

24.11GlobalPowerDownMode

Thedevicearchitecturesupportsacentralizedglobalpowerdowncontrolovertheperipheralmodules

throughthePeripheralCentralResource(PCR)module.

24.11.1EnteringGlobalPowerDownMode

TheglobalpowerdownmodefortheDCANisrequestedbysettingtheappropriatePeripheralPower

DownSetbit(PSPWRDWNSETx)inthePCRmodule.

TheDCANthenfinishesalltransmitrequestsofthemessageobjects.Whenallrequestsaredone,the

DCANwaitsuntilabusidlestateisrecognized.ThenitwillautomaticallysettheInitbittoindicatethatthe

globalpowerdownmodehasbeenentered.

24.11.2WakeupFromGlobalPowerDownMode

WhentheDCANmoduleisinglobalpowerdownmode,aCANbusactivitydetectioncircuitexists,which

canbeactive,ifenabled.Ifthiscircuitisactive,onoccurrenceofadominantCANbuslevel,theDCANwill

settheWakeUpPndbitinErrorandStatusRegister(DCANES).

IfStatusInterruptsareenabled,alsoaninterruptwillbegenerated.Thisinterruptcouldbeusedbythe

applicationtowakeuptheDCAN.Forthis,theapplicationneedstosettheappropriatePeripheralPower

DownClearbit(PSPWRDWNCLRx)inthePCRmodule,andtocleartheInitbitinCANControlRegister.

AftertheInitbithasbeencleared,theDCANmodulewaitsuntilitdetects11consecutiverecessivebitson

theCAN_RXpinandthengoesBus-Activeagain.

NOTE:TheCANtransceivercircuithastostayactiveduringCANbusactivitydetection.Thefirst

CANmessage,whichinitiatesthebusactivity,cannotbereceived.Thismeansthatthefirst

messagereceivedinpowerdownmodeislost.

1191

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






LocalPowerDownModewww.ti.com

24.12LocalPowerDownMode

BesidesthecentralizedpowerdownmechanismcontrolledbythePCRmodule(globalpowerdown,see

Section24.15),theDCANsupportsalocalpowerdownmodewhichcanbecontrolledwithintheDCAN

controlregisters.

24.12.1EnteringLocalPowerDownMode

ThelocalpowerdownmodeisrequestedbysettingthePDRbitinCANControlRegister.

TheDCANthenfinishesalltransmitrequestsofthemessageobjects.Whenallrequestsaredone,DCAN

waitsuntilabusidlestateisrecognized.ThenitwillautomaticallysettheInitbitinCANControlRegisterto

preventanyfurtherCANtransfers,anditwillalsosetthePDAbitinCANErrorandStatusRegister.With

settingthePDAbits,theDCANmoduleindicatesthatthelocalpowerdownmodehasbeenentered.

Duringlocalpowerdownmode,theinternalclocksoftheDCANmoduleareturnedoff,butthereisawake

uplogic(seeSection24.12.2)whichcanbeactive,ifenabled.Alsotheactualcontentsofthecontrol

registerscanbereadback.

NOTE:Inlocallowpowermode,theapplicationshouldnotcleartheInitbitwhilePDRisset.Ifthere

areanymessagesintheMessageRAMconfiguredastobetransmittedandtheapplication

resetstheinitbit,thesemessagesmaybesent.

24.12.2WakeupFromLocalPowerDown

TherearetwowaystowakeuptheDCANfromlocalpowerdownmode:

1.TheapplicationcouldwakeuptheDCANmodulemanuallybyclearingthePDRbitandthenclearing

theInitbitinCANControlRegister.

2.Alternatively,aCANbusactivitydetectioncircuitcanbeactivatedbysettingthewakeuponbus

activitybit(WUBA)inCANControlRegister.Ifthiscircuitisactive,onoccurrenceofadominantCAN

buslevel,theDCANwillautomaticallystartthewakeupsequence.ItwillclearthePDRbitinCAN

ControlRegisterandalsoclearthePDAbitinErrorandStatusRegister.TheWakeUpPndbitinCAN

ErrorandStatusRegisterwillbeset.IfStatusInterruptsareenabled,alsoaninterruptwillbe

generated.FinallytheInitbitinCANcontrolregisterwillbecleared.

AftertheInitbithasbeencleared,themodulewaitsuntilitdetects11consecutiverecessivebitsonthe

CAN_RXpinandthengoesBus-Activeagain.

NOTE:TheCANtransceivercircuithastostayactivewhileCANbusobservation.ThefirstCAN

message,whichinitiatesthebusactivity,cannotbereceived.Thismeansthatthefirst

messagereceivedinpowerdownandautomaticwake-upmode,islost.

Figure24-14showsaflowdiagramaboutenteringandleavinglocalpowerdownmode.

24.13GIOsupport

TheCAN_RXandCAN_TXpinsofeachDCANmodulecanbeusedasgeneralpurposeIOpins,ifCAN

functionalityisnotneeded.ThisfunctioniscontrolledbytheCANTXIOControlregister(see

Section24.17.29)andtheCANRXIOControlregister(seeSection24.17.30).

1192

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGIOsupport

Figure24-14.LocalPowerDownModeFlowDiagram

1193

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CAN_TXCAN_RXTxRxCANCore

=1

DCAN



TestModeswww.ti.com

24.14TestModes

TheDCANprovidesseveraltestmodeswhicharemainlyintendedforproductiontestsorselftest.

Foralltestmodes,TestbitintheCANControlRegisterneedstobesettoone.Thisenableswriteaccess

totheTestRegister.

NOTE:WhenusinganyoftheLoopBackmodes,itmustbeensuredbysoftwarethatallmessage

transfersarefinishedbeforesettingtheInitbitto‘1’.

24.14.1SilentMode

TheSilentModemaybeusedtoanalyzethetrafficontheCANbuswithoutaffectingitbysending

dominantbits(forexample,acknowledgebit,overloadflag,activeerrorflag).TheDCANisstillableto

receivevaliddataframesandvalidremoteframes,butitwillnotsendanydominantbits.However,these

areinternallyroutedtotheCANCore.

Figure24-15showstheconnectionofsignalsCAN_TXandCAN_RXtotheCANCoreinSilentMode.

SilentModecanbeactivatedbysettingtheSilentbitinTestRegistertoone.

InISO11898-1,theSilentModeiscalledtheBusMonitoringMode.

Figure24-15.CANCoreinSilentMode

1194

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TxRxCANCore

DCANCAN_RXCAN_TX



www.ti.comTestModes

24.14.2LoopBackMode

TheLoopBackModeismainlyintendedforhardwareself-testfunctions.Inthismode,theCANCoreuses

internalfeedbackfromTxoutputtoRxinput.Transmittedmessagesaretreatedasreceivedmessages,

andcanbestoredintomessageobjectsiftheypassacceptancefiltering.TheactualvalueoftheCAN_RX

inputpinisdisregardedbytheCANCore.TransmittedmessagesstillcanbemonitoredattheCAN_TX

pin.

Inordertobeindependentfromexternalstimulation,theCANCoreignoresacknowledgeerrors(recessive

bitsampledintheacknowledgeslotofadata/remoteframe)inLoopBackMode.

Figure24-16showstheconnectionofsignalsCAN_TXandCAN_RXtotheCANCoreinLoopBack

Mode.

LoopBackModecanbeactivatedbysettingbitLBackinTestRegistertoone.

NOTE:InLoopBackmode,thesignalpathfromCANCoretoTxpin,theTxpinitself,andthesignal

pathfromTxpinbacktoCANCorearedisregarded.Forincludingtheseintothetesting,see

ExternalLoopBackmode(Section24.14.3).

Figure24-16.CANCoreinLoopBackMode

1195

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DCAN

CAN_TX

CANCore

RxTx

pinCAN_RXpin



TestModeswww.ti.com

24.14.3ExternalLoopBackMode

TheExternalLoopBackModeissimilartotheLoopBackMode,howeveritincludesthesignalpathfrom

CANCoretoTxpin,theTxpinitself,andthesignalpathfromTxpinbacktoCANCore.WhenExternal

LoopBackModeisselected,theinputoftheCANcoreisconnectedtotheinputbufferoftheTxpin.

Withthisconfiguration,theTxpinIOcircuitcanbetested.

ExternalLoopBackModecanbeactivatedbysettingbitExLinTestRegistertoone.

Figure24-17showstheconnectionofsignalsCAN_TXandCAN_RXtotheCANCoreinExternalLoop

BackMode.

NOTE:WhenLoopBackModeisactive(LBackbitset),theExLbitwillbeignored.

Figure24-17.CANCoreinExternalLoopBackMode

1196

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TxRxCANCore

=1

DCANCAN_RXCAN_TX



www.ti.comTestModes

24.14.4LoopBackCombinedwithSilentMode

ItisalsopossibletocombineLoopBackModeandSilentModebysettingbitsLBackandSilentatthe

sametime.Thismodecanbeusedfora“HotSelftest”,thatis,theDCANhardwarecanbetestedwithout

affectingtheCANnetwork.Inthismode,theCAN_RXpinisdisconnectedfromtheCANCoreandno

dominantbitswillbesentontheCAN_TXpin.

Figure24-18showstheconnectionofthesignalsCAN_TXandCAN_RXtotheCANCoreincaseofthe

combinationofLoopBackModewithSilentMode.

Figure24-18.CANCoreinLoopBackCombinedwithSilentMode

24.14.5SoftwareControlofCAN_TXPin

FouroutputfunctionsareavailablefortheCANtransmitpinCAN_TX.Additionallytoitsdefaultfunction

(serialdataoutput),theCAN_TXpincandriveconstantdominantorrecessivevalues,oritcandrivethe

CANSamplePointsignaltomonitortheCANCore’sbittiming.

CombinedwiththereadablevalueoftheCAN_RXpin,thiscanbeusedtocheckthephysicallayerofthe

CANbus.

TheoutputmodeofpinCAN_TXisselectedbyprogrammingtheTestRegisterbitsTx[1:0]asdescribed

inSection24.17.6.

NOTE:ThesoftwarecontrolforpinCAN_TXinterfereswithCANprotocolfunctions.ForCAN

messagetransferoranyofthetestmodesLoopBackMode,ExternalLoopBackModeor

SilentMode,theCAN_TXpinshouldoperateinitsdefaultfunctionality.

1197

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ParityCheckMechanismwww.ti.com

24.15ParityCheckMechanism

TheDCANprovidesaparitycheckmechanismtoensuredataintegrityofMessageRAMdata.Foreach

word(32bits)inMessageRAM,oneparitybitwillbecalculated.Theformationofthedifferentwordsis

accordingtotheMessageRAMrepresentationinRDAmode(seeSection24.5.4).

ParityinformationisstoredintheMessageRAMonwriteaccessesandwillbecheckedagainstthestored

paritybitfromMessageRAMonreadaccesses.

TheparitycheckfunctionalitycanbeenabledordisabledbyPMDbitfieldinCANControlRegister.

Incaseofdisabledparitycheck,theparitybitsinmessageRAMwillbeleftunchangedonwriteaccessto

dataareaandnocheckwillbedoneonreadaccess.

Ifparitycheckingisenabled,paritybitswillbeautomaticallygeneratedandcheckedbytheDCAN.The

paritybitscouldbereadinDebug/Suspendmode(seeSection24.5.3)orinRDAmode(see

Section24.5.4).However,directwriteaccesstotheparitybitsisonlypossibleinthistwomodeswith

paritycheckdisabled.

Aparitybitwillbeset,ifthemodulo-2-sumofthedatabitsis1.Thisdefinitionisequivalentto:Theparity

bitwillbeset,ifthenumberof1bitsinthedataisodd.

NOTE:ParityschemecanbechangedviatheSystemmoduleDEVParityControlRegister1on

devicebasisforallperiRAMs.

24.15.1BehavioronParityError

OnanyreadaccesstoMessageRAM(forexample,duringstartofaCANframetransmission),theparity

ofthemessageobjectwillbechecked.Ifaparityerrorisdetected,thePERbitinErrorandStatus

Registerwillbeset.Iferrorinterruptsareenabled,alsoaninterruptwouldbegenerated.Inordertoavoid

thetransmissionofinvaliddataovertheCANbus,thedbitofthemessageobjectwillbereset.

ThemessageobjectdatacanbereadbythehostCPU,independentlyofparityerrors.Thus,the

applicationhastoensurethatthereaddataisvalid,forexample,byimmediatelycheckingtheParityError

Coderegisteronparityerrorinterrupt.

NOTE:DuringRAMinitialization,noparitycheckwillbedone.

24.15.2ParityTesting

TestingtheparitymechanismcanbedonebyenablingthebitRDA(RamDirectAccess)andmanually

writingtheparitybitsdirectlytothededicatedRAMlocations.Withthis,dataandparitybitscouldbe

checkedwhenreadingdirectlyfromRAM.

NOTE:Ifparitycheckwasdisabled,theapplicationhastoensurecorrectparitybithandlinginorder

topreventparityerrorslateronwhenparitycheckisenabled.

1198

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDebug/SuspendMode

24.16Debug/SuspendMode

ThemodulesupportstheusageofanexternaldebugunitbyprovidingfunctionslikepausingDCAN

activitiesandmakingMessageRAMcontentaccessibleviaVBUSPinterface.

Beforeenteringdebug/suspendmode,thecircuitwilleitherwaituntilastartedtransmissionorreception

willbefinishedandBusidlestateisrecognized,orimmediatelyinterruptacurrenttransmissionor

reception.ThisisdependingonbitIDSinCANControlRegister.

Afterwards,theDCANentersdebug/suspendmode,indicatedbyInitDbgflaginCANControlRegister.

DuringDebug/Suspendmode,allDCANregisterscanbeaccessed.Readingreservedbitswillreturn‘0’.

Writingtoreservedbitswillhavenoeffect.

Also,theMessageRAMwillbememorymapped.ThisallowstheexternaldebugunittoreadtheMessage

RAM.Forthememoryorganization,seeSection24.5.3).

NOTE:DuringDebug/SuspendMode,theMessageRAMcannotbeaccessedviatheIFxregister

sets.

Writingtocontrolregistersindebug/suspendmodemayinfluencetheCANstatemachine

andfurthermessagehandling.

Fordebugsupport,theautoclearfunctionalityofthefollowingDCANregistersisdisabled:

*ErrorandStatusRegister(clearofstatusflagsbyread)

*IF1/IF2CommandRegisters(clearofDMAActiveflagbyr/w)

24.17DCANControlRegisters

Table24-6liststhecontrolregistersoftheDCAN.Afterhardwarereset,theregistersoftheDCANhold

thevaluesshownintheregisterdescriptions.

Additionally,theBus-OffstateisresetandtheCAN_TXpinissettorecessive(HIGH).TheInitbitinthe

CANControlRegisterissettoenablethesoftwareinitialization.TheDCANwillnotinfluencetheCANbus

untiltheCPUresetsInitto0.

Table24-6.DCANControlRegisters

Offset

Acronym

RegisterDescription

Section

00

DCANCTL

CANControlRegister

Section24.17.1

04h

DCANES

ErrorandStatusRegister

Section24.17.2

08h

DCANERRC

ErrorCounterRegister

Section24.17.3

0Ch

DCANBTR

BitTimingRegister

Section24.17.4

10h

DCANINT

InterruptRegister

Section24.17.5

14h

DCANTEST

TestRegister

Section24.17.6

1Ch

DCANPERR

ParityErrorCodeRegister

Section24.17.7

80h

DCANABOTR

Auto-Bus-OnTimeRegister

Section24.17.8

84h

DCANTXRQX

TransmissionRequestXRegister

Section24.17.9

88h

DCANTXRQ12

TransmissionRequest12Register

Section24.17.10

8Ch

DCANTXRQ34

TransmissionRequest34Register

Section24.17.10

90h

DCANTXRQ56

TransmissionRequest56Register

Section24.17.10

94h

DCANTXRQ78

TransmissionRequest78Register

Section24.17.10

98h

DCANNWDATX

NewDataXRegister

Section24.17.11

9Ch

DCANNWDAT12

NewData12Register

Section24.17.12

A0h

DCANNWDAT34

NewData34Register

Section24.17.12

A4h

DCANNWDAT56

NewData56Register

Section24.17.12

A8h

DCANNWDAT78

NewData78Register

Section24.17.12

ACh

DCANINTPNDX

InterruptPendingXRegister

Section24.17.13

1199

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-6.DCANControlRegisters(continued)

Offset

Acronym

RegisterDescription

Section

B0h

DCANINTPND12

InterruptPending12Register

Section24.17.14

B4h

DCANINTPND34

InterruptPending34Register

Section24.17.14

B8h

DCANINTPND56

InterruptPending56Register

Section24.17.14

BCh

DCANINTPND78

InterruptPending78Register

Section24.17.14

C0h

DCANMSGVALX

MessageValidXRegister

Section24.17.15

C4h

DCANMSGVAL12

MessageValid12Register

Section24.17.16

C8h

DCANMSGVAL34

MessageValid34Register

Section24.17.16

CCh

DCANMSGVAL56

MessageValid56Register

Section24.17.16

D0h

DCANMSGVAL78

MessageValid78Register

Section24.17.16

D8h

DCANINTMUX12

InterruptMultiplexer12Register

Section24.17.17

DCh

DCANINTMUX34

InterruptMultiplexer34Register

Section24.17.17

E0h

DCANINTMUX56

InterruptMultiplexer56Register

Section24.17.17

E4h

DCANINTMUX78

InterruptMultiplexer78Register

Section24.17.17

100h

DCANIF1CMD

IF1CommandRegister

Section24.17.18

104h

DCANIF1MSK

IF1MaskRegister

Section24.17.19

108h

DCANIF1ARB

IF1ArbitrationRegister

Section24.17.20

10Ch

DCANIF1MCTL

IF1MessageControlRegister

Section24.17.21

110h

DCANIF1DATA

IF1DataARegister

Section24.17.22

114h

DCANIF1DATB

IF1DataBRegister

Section24.17.22

120h

DCANIF2CMD

IF2CommandRegister

Section24.17.18

124h

DCANIF2MSK

IF2MaskRegister

Section24.17.19

128h

DCANIF2ARB

IF2ArbitrationRegister

Section24.17.20

12Ch

DCANIF2MCTL

IF2MessageControlRegister

Section24.17.21

130h

DCANIF2DATA

IF2DataARegister

Section24.17.22

134h

DCANIF2DATB

IF2DataBRegister

Section24.17.22

140h

DCANIF3OBS

IF3ObservationRegister

Section24.17.23

144h

DCANIF3MSK

IF3MaskRegister

Section24.17.24

148h

DCANIF3ARB

IF3ArbitrationRegister

Section24.17.25

14Ch

DCANIF3MCTL

IF3MessageControlRegister

Section24.17.26

150h

DCANIF3DATA

IF3DataARegister

Section24.17.27

154h

DCANIF3DATB

IF3DataBRegister

Section24.17.27

160h

DCANIF3UPD12

IF3UpdateEnable12Register

Section24.17.28

164h

DCANIF3UPD34

IF3UpdateEnable34Register

Section24.17.28

168h

DCANIF3UPD56

IF3UpdateEnable56Register

Section24.17.28

16Ch

DCANIF3UPD78

IF3UpdateEnable78Register

Section24.17.28

1E0h

DCANTIOC

CANTXIOControlRegister

Section24.17.29

1E4h

DCANRIOC

CANRXIOControlRegister

Section24.17.30

1200

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.1CANControlRegister(DCANCTL)

Figure24-19.CANControlRegister(DCANCTL)[offset=00]

31

26

25

24

Reserved

WUBA

PDR

R-0

R/W-0

R/W-0

23

21

20

19

18

17

16

Reserved

DE3

DE2

DE1

IE1

InitDbg

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

15

14

13

10

9

8

SWR

Reserved

PMD

ABO

IDS

R/WP-0

R-0

R/W-5h

R/W-0

R/W-0

7

6

5

4

3

2

1

0

Test

CCE

DAR

Reserved

EIE

SIE

IE0

Init

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeprotectedbyinitbit;-n=valueafterreset

Table24-7.CANControlRegisterFieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

25

WUBA

Automaticwakeuponbusactivitywheninlocalpowerdownmode

0

NodetectionofadominantCANbuslevelwhileinlocalpowerdownmode.

1

DetectionofadominantCANbuslevelwhileinlocalpowerdownmodeisenabled.Onoccurrence

ofadominantCANbuslevel,thewakeupsequenceisstarted.(Additionalinformationcanbe

foundinSection24.12.)

Note:TheCANmessage,whichInitiatesthebusactivity,cannotbereceived.Thismeansthatthe

firstmessagereceivedinpowerdownandautomaticwake-upmode,willbelost.

24

PDR

Requestforlocallowpowerdownmode

0

Noapplicationrequestforlocallowpowerdownmode.Iftheapplicationhasclearedthisbitwhile

DCANinlocalpowerdownmode,alsotheInitbithastobecleared.

1

Localpowerdownmodehasbeenrequestedbyapplication.TheDCANwillacknowledgethelocal

powerdownmodebysettingbitPDAinErrorandStatusRegister.Thelocalclockswillbeturned

offbyDCANinternallogic(AdditionalinformationcanbefoundinSection24.12).

23-21

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

20

DE3

EnableDMArequestlineforIF3

0

Disabled

1

Enabled

Note:ApendingDMArequestforIF3remainsactiveuntilfirstaccesstooneoftheIF3registers.

19

DE2

EnableDMArequestlineforIF2

0

Disabled

1

Enabled

Note:ApendingDMArequestforIF2remainsactiveuntilfirstaccesstooneoftheIF2registers.

18

DE1

EnableDMArequestlineforIF1

0

Disabled

1

Enabled

Note:ApendingDMArequestforIF1remainsactiveuntilfirstaccesstooneoftheIF1registers.

17

IE1

Interruptline1Enable

0

Disabled-ModuleInterruptDCAN1INTisalwayslow.

1

Enabled-InterruptswillassertlineDCAN1INTtoone;lineremainsactiveuntilpendinginterrupts

areprocessed.

1201

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-7.CANControlRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

16

InitDbg

InternalInitstatewhiledebugaccess

0

Notindebugmode,ordebugmoderequestedbutnotentered.

1

Debugmoderequestedandinternallyentered;theDCANisreadyfordebugaccesses.

15

SWR

SWResetEnable

0

NormalOperation

1

Moduleisforcedtoresetstate.ThisbitwillautomaticallygetclearedafterexecutionofSWreset

afteroneVBUSPclockcycle.

Note:ToexecuteSWresetthefollowingprocedureisnecessary:

1.SetInitbittoshutdownCANcommunication.

2.SetSWRbitadditionallytoInitbit.

14

Reserved

0

Thisbitisalwaysreadas0.Writeshavenoeffect.

13-10

PMD

Parityon/off

5h

Parityfunctiondisabled

Others

Parityfunctionenabled

9

ABO

Auto-Bus-OnEnable

0

TheAuto-Bus-Onfeatureisdisabled

1

TheAuto-Bus-Onfeatureisenabled

8

IDS

InterruptionDebugSupportEnable

0

WhenDebug/Suspendmodeisrequested,DCANwillwaitforastartedtransmissionorreceptionto

becompletedbeforeenteringDebug/Suspendmode

1

WhenDebug/Suspendmodeisrequested,DCANwillinterruptanytransmissionorreception,and

enterDebug/Suspendmodeimmediately.

7

Test

TestModeEnable

0

NormalOperation

1

TestMode

6

CCE

ConfigurationChangeEnable

0

TheCPUhasnowriteaccesstotheBTRconfigregister

1

TheCPUhaswriteaccesstotheBTRconfigregister(whenInitbitisset).

5

DAR

DisableAutomaticRetransmission

0

AutomaticRetransmissionofnotsuccessfulmessagesenabled.

1

AutomaticRetransmissiondisabled.

4

Reserved

0

Thisbitisalwaysreadas0.Writeshavenoeffect.

3

EIE

ErrorInterruptEnable

0

Disabled-PER,BOffandEWarnbitscannotgenerateaninterrupt.

1

Enabled-PER,BOffandEWarnbitscangenerateaninterruptatDCAN0INTlineandaffectthe

InterruptRegister.

2

SIE

StatusChangeInterruptEnable

0

Disabled-WakeUpPnd,RxOk,TxOkandLECbitscannotgenerateaninterrupt.

1

Enabled-WakeUpPnd,RxOk,TxOkandLECcangenerateaninterruptatDCAN0INTlineand

affecttheInterruptRegister.

1

IE0

Interruptline0Enable

0

Disabled-ModuleInterruptDCAN0INTisalwayslow.

1

Enabled-InterruptswillassertlineDCAN0INTtoone;lineremainsactiveuntilpendinginterrupts

areprocessed.

0

Init

Initialization

0

NormalOperation

1

Initializationmodeisentered

1202

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

NOTE:TheBus-Offrecoverysequence(seeCANspecification)cannotbeshortenedbysettingor

resettingInitbit.IfthemodulegoesBus-Off,itwillautomaticallysettheInitbitandstopall

busactivities.

WhentheInitbitisclearedbytheapplicationagain,themodulewillthenwaitfor129

occurrencesofBusIdle(129*11consecutiverecessivebits)beforeresumingnormal

operation.AttheendoftheBus-Offrecoverysequence,theerrorcounterswillbereset.

AftertheInitbitisreset,eachtimewhenasequenceof11recessivebitsismonitored,aBit0

errorcodeiswrittentotheErrorandStatusRegister,enablingtheCPUtocheckwhetherthe

CANbusisstuckatdominantorcontinuouslydisturbed,andtomonitortheproceedingofthe

Bus-Offrecoverysequence.

24.17.2ErrorandStatusRegister(DCANES)

Figure24-20.ErrorandStatusRegister(DCANES)[offset=04h]

31

16

Reserved

R-0

15

11

10

9

8

Reserved

PDA

WakeUpPnd

PER

R-0

R-0

R/C-0

R-0

7

6

5

4

3

2

0

BOff

EWarn

EPass

RxOK

TxOK

LEC

R-0

R-0

R-0

R/C-0

R/C-0

R/S-7h

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;S=Set;-n=valueafterreset

Table24-8.ErrorandStatusRegisterFieldDescriptions

Bit

Field

Value

Description

31-11

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

10

PDA

Localpowerdownmodeacknowledge

0

DCANisnotinlocalpowerdownmode.

1

ApplicationrequestforsettingDCANtolocalpowerdownmodewassuccessful.DCANisinlocal

powerdownmode.

9

WakeUpPnd

WakeUpPending

ThisbitcanbeusedbytheCPUtoidentifytheDCANasthesourcetowakeupthesystem.

0

NoWakeUpisrequestedbyDCAN.

1

DCANhasinitiatedawakeupofthesystemduetodominantCANbuswhilemodulepowerdown.

ThisbitwillberesetifErrorandStatusRegisterisread.

8

PER

ParityErrorDetected

0

Noparityerrorhasbeendetectedsincelastreadaccess.

1

TheparitycheckmechanismhasdetectedaparityerrorintheMessageRAM.Thisbitwillbereset

ifErrorandStatusRegisterisread.

7

BOff

Bus-OffState

0

TheCANmoduleisnotBus-Offstate.

1

TheCANmoduleisinBus-Offstate.

6

EWarn

WarningState

0

Botherrorcountersarebelowtheerrorwarninglimitof96.

1

Atleastoneoftheerrorcountershasreachedtheerrorwarninglimitof96.

1203

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-8.ErrorandStatusRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

5

EPass

ErrorPassiveState

0

OnCANBuserror,theDCANcouldsendactiveerrorframes.

1

TheCANCoreisintheerrorpassivestateasdefinedintheCANSpecification.

4

RxOK

Receivedamessagesuccessfully

0

NomessagehasbeensuccessfullyreceivedsincethelasttimewhenthisbitwasreadbytheCPU.

ThisbitisneverresetbyDCANinternalevents.

1

Amessagehasbeensuccessfullyreceivedsincethelasttimewhenthisbitwasresetbyaread

accessoftheCPU(independentoftheresultofacceptancefiltering).ThisbitwillberesetifError

andStatusRegisterisread.

3

TxOK

Transmittedamessagesuccessfully

0

Nomessagehasbeensuccessfullytransmittedsincethelasttimewhenthisbitwasreadbythe

CPU.ThisbitisneverresetbyDCANinternalevents.

1

Amessagehasbeensuccessfullytransmitted(errorfreeandacknowledgedbyatleastoneother

node)sincethelasttimewhenthisbitwasresetbyareadaccessoftheCPU.Thisbitwillbereset

ifErrorandStatusRegisterisread.

2-0

LEC

LastErrorCode

TheLECfieldindicatesthetypeofthelasterrorontheCANbus.Thisfieldwillbeclearedto'0'

whenamessagehasbeentransferred(receptionortransmission)withouterror.

0

NoError

1h

StuffError:Morethanfiveequalbitsinarowhavebeendetectedinapartofareceivedmessage

wherethisisnotallowed.

2h

FormError:Afixedformatpartofareceivedframehasthewrongformat.

3h

AckError:ThemessagethisCANCoretransmittedwasnotacknowledgedbyanothernode.

4h

Bit1Error:Duringthetransmissionofamessage(withtheexceptionofthearbitrationfield),the

devicewantedtosendarecessivelevel(bitoflogicalvalue'1'),butthemonitoredbusvaluewas

dominant.

5h

Bit0Error:Duringthetransmissionofamessage(oracknowledgebit,oractiveerrorflag,or

overloadflag),thedevicewantedtosendadominantlevel(logicalvalue'0'),butthemonitoredbus

levelwasrecessive.DuringBus-Offrecovery,thisstatusisseteachtimeasequenceof11

recessivebitshasbeenmonitored.ThisenablestheCPUtomonitortheproceedingoftheBus-Off

recoverysequence(indicatingthebusisnotstuckatdominantorcontinuouslydisturbed).

6h

CRCError:Inareceivedmessage,theCRCchecksumwasincorrect.(CRCreceivedforan

incomingmessagedoesnotmatchthecalculatedCRCforthereceiveddata).

7h

NoCANbuseventwasdetectedsincethelasttimewhenCPUhasreadtheErrorandStatus

Register.AnyreadaccesstotheErrorandStatusRegisterre-InitializestheLECtovalue'7'.

InterruptsaregeneratedbybitsPER,BOffandEWarn(ifEIEbitinCANControlRegisterisset)andby

bitsWakeUpPnd,RxOk,TxOk,andLEC(ifSIEbitinCANControlRegisterisset).AchangeofbitEPass

willnotgenerateanInterrupt.

NOTE:ReadingtheErrorandStatusRegisterclearstheWakeUpPnd,PER,RxOkandTxOkbits

andsettheLECtovalue'7'.Additionally,theStatusInterruptvalue(8000h)intheInterrupt

Registerwillbereplacedbythenextlowerpriorityinterruptvalue.

Fordebugsupport,theautoclearfunctionalityofErrorandStatusRegister(clearofstatus

flagsbyread)isdisabledwheninDebug/Suspendmode.

1204

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.3ErrorCounterRegister(DCANERRC)

Figure24-21.ErrorCounterRegister(DCANERRC)[offset=08h]

31

16

Reserved

R-0

15

14

8

7

0

RP

REC

TEC

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-9.ErrorCounterRegisterFieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

15

RP

ReceiveErrorPassive

0

TheReceiveErrorCounterisbelowtheerrorpassivelevel.

1

TheReceiveErrorCounterhasreachedtheerrorpassivelevelasdefinedintheCANSpecification.

14-8

REC

0-7Fh

ReceiveErrorCounter.ActualstateoftheReceiveErrorCounter.(valuesfrom0to255).

7-0

TEC

0-FFh

TransmitErrorCounter.ActualstateoftheTransmitErrorCounter.(valuesfrom0to255).

1205

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.4BitTimingRegister(DCANBTR)

Figure24-22.BitTimingRegister(DCANBTR)[offset=0Ch]

31

20

19

16

Reserved

BRPE

R-0

R/WP-0

15

14

12

11

8

7

6

5

0

Rsvd

TSeg2

TSeg1

SJW

BRP

R-0

R/WP-2h

R/WP-3h

R/WP-0

R/WP-1h

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteProtectedbyCCEbit;-n=valueafterreset

Table24-10.BitTimingRegisterFieldDescriptions

Bit

Field

Value

Description

31-20

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

BRPE

0-Fh

BaudRatePrescalerExtension.

Validprogrammedvaluesare0to15.ByprogrammingBRPEtheBaudRatePrescalercanbe

extendedtovaluesupto1024.

15

Reserved

0

Thisbitisalwaysreadas0.Writeshavenoeffect.

14-12

TSeg2

0-7h

Timesegmentafterthesamplepoint

Validprogrammedvaluesare0to7.TheactualTSeg2valuewhichisinterpretedfortheBitTiming

willbetheprogrammedTSeg2value+1.

11-8

TSeg1

1h-Fh

Timesegmentbeforethesamplepoint

Validprogrammedvaluesare1to15.TheactualTSeg1valueinterpretedfortheBitTimingwillbe

theprogrammedTSeg1value+1.

7-6

SJW

0-3h

SynchronizationJumpWidth

Validprogrammedvaluesare0to3.TheactualSJWvalueinterpretedfortheSynchronizationwill

betheprogrammedSJWvalue+1.

5-0

BRP

0-3Fh

BaudRatePrescaler

ValuebywhichtheCAN_CLKfrequencyisdividedforgeneratingthebittimequanta.Thebittime

isbuiltupfromamultipleofthisquanta.Validprogrammedvaluesare0to63.TheactualBRP

valueinterpretedfortheBitTimingwillbetheprogrammedBRPvalue+1.

NOTE:ThisregisterisonlywritableifCCEandInitbitsintheCANControlRegisterareset.

TheCANbittimemaybeprogrammedintherangeof8to25timequanta.

TheCANtimequantummaybeprogrammedintherangeof1to1024CAN_CLKperiods.

WithaCAN_CLKof8MHzandBRPE=00,theresetvalueof2301hconfigurestheDCANforabitrateof

500kBit/s.

FordetailsseeSection24.3.2.1.

1206

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.5InterruptRegister(DCANINT)

Figure24-23.InterruptRegister(DCANINT)[offset=10h]

31

24

23

16

Reserved

Int1ID

R-0

R-0

15

0

Int0ID

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-11.InterruptRegisterFieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

23-16

Int1ID

Interrupt1Identifier(indicatesthemessageobjectwiththehighestpendinginterrupt)

0

Nointerruptispending

1h-80h

Numberofmessageobjectwhichcausedtheinterrupt.

81h-FFh

Unused

Ifseveralinterruptsarepending,theCANInterruptRegisterwillpointtothependinginterrupt

withthehighestpriority.TheDCAN1INTinterruptlineremainsactiveuntilInt1IDreaches

value0(thecauseoftheinterruptisreset)oruntilIE1iscleared.

Amessageinterruptisclearedbyclearingthemessageobject'sIntPndbit.

Amongthemessageinterrupts,themessageobject'sinterruptprioritydecreaseswith

increasingmessagenumber.

15-0

Int0ID

InterruptIdentifier(thenumberhereindicatesthesourceoftheinterrupt)

0

Nointerruptispending

1h-80h

Numberofmessageobjectwhichcausedtheinterrupt.

81h-7FFFh

Unused

8000h

ErrorandStatusRegistervalueisnot0x07.

8001h-FFFFh

Unused

Ifseveralinterruptsarepending,theCANInterruptRegisterwillpointtothependinginterrupt

withthehighestpriority.TheDCAN0INTinterruptlineremainsactiveuntilInt0IDreaches

value0(thecauseoftheinterruptisreset)oruntilIE0iscleared.

TheStatusInterrupthasthehighestpriority.Amongthemessageinterrupts,themessage

object'sinterruptprioritydecreaseswithincreasingmessagenumber.

1207

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.6TestRegister(DCANTEST)

Figure24-24.TestRegister(DCANTEST)[offset=14h]

31

16

Reserved

R-0

15

10

9

8

7

6

5

4

3

2

0

Reserved

RDA

EXL

Rx

Tx

LBack

Silent

Reserved

R-0

R/WP-0

R/WP-0

R-U

R/WP-0

R/WP-0

R/WP-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;WP=WriteProtectedbyTestbit;-n=valueafterreset;U=Undefined

Table24-12.TestRegisterFieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

9

RDA

RAMDirectAccessEnable

0

NormalOperation

1

DirectaccesstotheRAMisenabledwhileinTestMode.

8

EXL

ExternalLoopBackMode

0

Disabled

1

Enabled

7

Rx

ReceivePin.MonitorstheactualvalueoftheCAN_RXpin.

0

TheCANbusisdominant.

1

TheCANbusisrecessive.

6-5

Tx

ControlofCAN_TXpin

0

Normaloperation,CAN_TXiscontrolledbytheCANCore.

1h

SamplePointcanbemonitoredatCAN_TXpin.

2h

CAN_TXpindrivesadominantvalue.

3h

CAN_TXpindrivesarecessivevalue.

4

LBack

LoopBackMode

0

Disabled

1

Enabled

3

Silent

SilentMode

0

Disabled

1

Enabled

2-0

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

Foralltestmodes,theTestbitinCANControlRegisterneedstobesettoone.IfTestbitisset,theRDA,

EXL,Tx1,Tx0,LBackandSilentbitsarewritable.BitRxmonitorsthestateofpinCAN_RXandtherefore

isonlyreadable.AllTestRegisterfunctionsaredisabledwhenTestbitiscleared.

NOTE:TheTestRegisterisonlywritableifTestbitinCANControlRegisterisset.

SettingTx[1:0]otherthan'00'willdisturbmessagetransfer.

Whentheinternalloopbackmodeisactive(bitLBackisset),bitEXLwillbeignored.

1208

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.7ParityErrorCodeRegister(DCANPERR)

Figure24-25.ParityErrorCodeRegister(DCANPERR)[offset=1Ch]

31

16

Reserved

R-0

15

11

10

8

7

0

Reserved

WordNumber

MessageNumber

R-0

R-U

R-U

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;U=Undefined

Table24-13.ParityErrorCodeRegisterFieldDescriptions

Bit

Field

Value

Description

31-11

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

10-8

WordNumber

Wordnumberwhereparityerrorhasbeendetected

1h-5h

RDAwordnumber(1to5)ofthemessageobject(accordingtotheMessageRAMrepresentationin

RDAmode,seeSection24.5.4).

7-0

MessageNumber

1h-80h

Messageobjectnumberwhereparityerrorhasbeendetected

Ifaparityerrorisdetected,thePERflagwillbesetintheErrorandStatusRegister.Thisbitisnotreset

bytheparitycheckmechanism;itmustberesetbyreadingtheErrorandStatusRegister.

InadditiontothePERflag,theParityErrorCodeRegisterwillindicatethememoryareawheretheparity

errorhasbeendetected(messagenumberandwordnumber).

Ifmorethanonewordwithaparityerrorwasdetected,thehighestwordnumberwithaparityerrorwillbe

displayed.

Afteraparityerrorhasbeendetected,theregisterwillholdthelasterrorcodeuntilpowerisremoved.

1209

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.8Auto-Bus-OnTimeRegister(DCANABOTR)

Figure24-26.Auto-Bus-OnTimeRegister(DCANABOTR)[offset=80h]

31

16

ABOTime

R/W-0

15

0

ABOTime

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-14.Auto-Bus-OnTimeRegisterFieldDescriptions

Bit

Field

Value

Description

31-0

ABOTime

0-FFFFFFFFh

NumberofVBUSclockcyclesbeforeaBus-Offrecoverysequenceis

startedbyclearingtheInitbit.Thisfunctionhastobeenabledbysetting

bitABOinCANControlRegister.

TheAuto-Bus-Ontimerisrealizedbya32-bitcounterwhichstartsto

countdowntozerowhenthemodulegoesBus-Off.

ThecounterwillbereloadedwiththepreloadvalueoftheABOTime

registerafterthisphase.

NOTE:OnwriteaccesstotheCANControlregisterwhileAuto-Bus-Ontimerisrunning,theAuto-

Bus-Onprocedurewillbeaborted.

DuringDebug/Suspendmode,runningAuto-Bus-Ontimerwillbepaused.

24.17.9TransmissionRequestXRegister(DCANTXRQX)

WiththeTransmissionRequestXRegister,theCPUcandetectifoneormorebitsinthedifferent

TransmissionRequestRegistersareset.Eachregisterbitrepresentsagroupofeightmessageobjects.If

atleastoneoftheTxRqstbitsofthesemessageobjectsareset,thecorrespondingbitinthe

TransmissionRequestXRegisterwillbeset.

Figure24-27.TransmissionRequestXRegister(DCANTXRQX)[offset=84h]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

TxRqstReg8

TxRqstReg7

TxRqstReg6

TxRqstReg5

TxRqstReg4

TxRqstReg3

TxRqstReg2

TxRqstReg1

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Example1

Bit0oftheTransmissionRequestXRegisterrepresentsbyte0oftheTransmissionRequest1Register.If

oneormorebitsinthisbyteareset,bit0oftheTransmissionRequestXRegisterwillbeset.

1210

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.10TransmissionRequestRegisters(DCANTXRQ12toDCANTXRQ78)

TheseregistersholdtheTxRqstbitsoftheimplementedmessageobjects.Byreadingoutthesebits,the

CPUcancheckforpendingtransmissionrequests.TheTxRqstbitinaspecificmessageobjectcanbe

set/resetbytheCPUviatheIF1/IF2MessageInterfaceRegisters,orbytheMessageHandlerafter

receptionofaremoteframeorafterasuccessfultransmission.

Figure24-28.TransmissionRequest12Register[offset=88h]

31

0

TxRqst[32:1]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-29.TransmissionRequest34Register[offset=8Ch]

31

0

TxRqst[64:33]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-30.TransmissionRequest56Register[offset=90h]

31

0

TxRqst[96:65]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-31.TransmissionRequest78Register[offset=94h]

31

0

TxRqst[128:97]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-15.TransmissionRequestRegistersFieldDescriptions

Bit

Name

Value

Description

31-0

TxRqs[128:1]

TransmissionRequestBits(forallmessageobjects)

0

Notransmissionhasbeenrequestedforthismessageobject.

1

Thetransmissionofthismessageobjectisrequestedandisnotyetdone.

1211

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.11NewDataXRegister(DCANNWDATX)

WiththeNewDataXRegister,theCPUcandetectifoneormorebitsinthedifferentNewDataRegisters

areset.Eachregisterbitrepresentsagroupofeightmessageobjects.IfatleastonoftheNewDatbitsof

thesemessageobjectsareset,thecorrespondingbitintheNewDataXRegisterwillbeset.

Figure24-32.NewDataXRegister(DCANNWDATX)[offset=98h]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

NewDatReg8

NewDatReg7

NewDatReg6

NewDatReg5

NewDatReg4

NewDatReg3

NewDatReg2

NewDatReg1

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Equation1

Bit0oftheNewDataXRegisterrepresentsbyte0oftheNewData1Register.Ifoneormorebitsinthis

byteareset,bit0oftheNewDataXRegisterwillbeset.

1212

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.12NewDataRegisters(DCANNWDAT12toDCANNWDAT78)

TheseregistersholdtheNewDatbitsoftheimplementedmessageobjects.Byreadingoutthesebits,the

CPUcancheckfornewdatainthemessageobjects.TheNewDatbitofaspecificmessageobjectcanbe

set/resetbytheCPUviatheIF1/IF2InterfaceRegistersets,orbytheMessageHandlerafterreceptionof

adataframeorafterasuccessfultransmission.

Figure24-33.NewData12Register[offset=9Ch]

31

0

NewDat[32:1]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-34.NewData34Register[offset=A0h]

31

0

NewDat[64:33]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-35.NewData56Register[offset=A4h]

31

0

NewDat[96:65]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-36.NewData78Register[offset=A8h]

31

0

NewDat[128:97]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-16.NewDataRegistersFieldDescriptions

Bit

Name

Value

Description

31-0

NewDat[128:1]

NewDataBits(forallmessageobjects)

NonewdatahasbeenwrittenintothedataportionofthismessageobjectbytheMessageHandler

0

sincethelasttimewhenthisflagwasclearedbytheCPU.

TheMessageHandlerortheCPUhaswrittennewdataintothedataportionofthismessage

1

object.

1213

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.13InterruptPendingXRegister(DCANINTPNDX)

WiththeInterruptPendingXRegister,theCPUcandetectifoneormorebitsinthedifferentInterrupt

PendingRegistersareset.Eachbitofthisregisterrepresentsagroupofeightmessageobjects.Ifatleast

oneoftheIntPndbitsofthesemessageobjectsareset,thecorrespondingbitintheInterruptPendingX

Registerwillbeset.

Figure24-37.InterruptPendingXRegister(DCANINTPNDX)[offset=ACh]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

IntPndReg8

IntPndReg7

IntPndReg6

IntPndReg5

IntPndReg4

IntPndReg3

IntPndReg2

IntPndReg1

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Example2

Bit0oftheInterruptPendingXRegisterrepresentsbyte0oftheInterruptPending1Register.Ifoneor

morebitsinthisbyteareset,bit0oftheInterruptPendingXRegisterwillbeset.

1214

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.14InterruptPendingRegisters(DCANINTPND12toDCANINTPND78)

TheseregistersholdtheIntPndbitsoftheimplementedmessageobjects.Byreadingoutthesebits,the

CPUcancheckforpendinginterruptsinthemessageobjects.TheIntPndbitofaspecificmessageobject

canbeset/resetbytheCPUviatheIF1/IF2InterfaceRegistersets,orbytheMessageHandleraftera

receptionorasuccessfultransmission.

Figure24-38.InterruptPending12Register[offset=B0h]

31

0

IntPnd[32:1]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-39.InterruptPending34Register[offset=B4h]

31

0

IntPnd[64:33]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-40.InterruptPending56Register[offset=B8h]

31

0

IntPnd[96:65]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-41.InterruptPending78Register[offset=BCh]

31

0

IntPnd[128:97]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-17.InterruptPendingRegistersFieldDescriptions

Bit

Name

Value

Description

31-0

IntPnd[128:1]

InterruptPendingBits(forallmessageobjects)

0

Thismessageobjectisnotthesourceofaninterrupt.

1

Thismessageobjectisthesourceofaninterrupt.

1215

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.15MessageValidXRegister(DCANMSGVALX)

WiththeMessageValidXRegister,theCPUcandetectifoneormorebitsinthedifferentMessageValid

Registersareset.Eachbitofthisregisterrepresentsagroupofeightmessageobjects.Ifatleastoneof

theMsgValbitsofthesemessageobjectsareset,thecorrespondingbitintheMessageValidXRegister

willbeset.

Figure24-42.MessageValidXRegister(DCANMSGVALX)[offset=C0h]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

MsgValReg8

MsgValReg7

MsgValReg6

MsgValReg5

MsgValReg4

MsgValReg3

MsgValReg2

MsgValReg1

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Example3

Bit0oftheMessageValidXRegisterrepresentsbyte0oftheMessageValid1Register.Ifoneormore

bitsinthisbyteareset,bit0oftheMessageValidXRegisterwillbeset.

1216

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.16MessageValidRegisters(DCANMSGVAL12toDCANMSGVAL78)

TheseregistersholdtheMsgValbitsoftheimplementedmessageobjects.Byreadingoutthesebits,the

CPUcancheckwhichmessageobjectsarevalid.TheMsgValbitofaspecificmessageobjectcanbe

set/resetbytheCPUviatheIF1/IF2InterfaceRegistersets,orbytheMessageHandlerafterareception

orasuccessfultransmission.

Figure24-43.MessageValid12Register[offset=C4h]

31

0

MsgVal[32:1]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-44.MessageValid34Register[offset=C8h]

31

0

MsgVal[64:33]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-45.MessageValid56Register[offset=CCh]

31

0

MsgVal[96:65]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-46.MessageValid78Register[offset=D0h]

31

0

MsgVal[128:97]

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-18.MessageValidRegistersFieldDescriptions

Bit

Name

Value

Description

31-0

MsgVal[128:1]

MessageValidBits(forallmessageobjects)

0

ThismessageobjectisignoredbytheMessageHandler.

1

ThismessageobjectisconfiguredandwillbeconsideredbytheMessageHandler.

1217

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.17InterruptMultiplexerRegisters(DCANINTMUX12toDCANINTMUX78)

TheIntMuxflagdetermineforeachmessageobject,whichofthetwointerruptlines(DCAN0INTor

DCAN1INT)willbeassertedwhentheIntPndofthismessageobjectisset.Bothinterruptlinescanbe

globallyenabledordisabledbysettingorclearingIE0andIE1bitsinCANControlRegister.

TheIntPndbitofaspecificmessageobjectcanbesetorresetbytheCPUviatheIF1/IF2Interface

Registersets,orbyMessageHandlerafterreceptionorsuccessfultransmissionofaframe.Thiswillalso

affecttheInt0IDrespInt1IDflagsintheInterruptRegister.

Figure24-47.InterruptMultiplexer12Register[offset=D8h]

31

0

IntMux[32:1]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-48.InterruptMultiplexer34Register[offset=DCh]

31

0

IntMux[64:33]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-49.InterruptMultiplexer56Register[offset=E0h]

31

0

IntMux[96:65]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-50.InterruptMultiplexer78Register[offset=E4h]

31

0

IntMux[128:97]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-19.InterruptMultiplexerRegistersFieldDescriptions

Bit

Name

Value

Description

31-0

IntMux[127:0]

MultiplexesIntPndvaluetoeitherDCAN0INTorDCAN1INTinterruptlines.Themappingfromthe

bitstothemessageobjectsisasfollows:

Bit0->lastimplementedmessageobject.

Bit1->messageobjectnumber1

Bit2->messageobjectnumber2

0

DCAN0INTlineisactiveifcorrespondingIntPndflagisone.

1

DCAN1INTlineisactiveifcorrespondingIntPndflagisone.

1218

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.18IF1/IF2CommandRegisters(DCANIF1CMD,DCANIF2CMD)

TheIF1/IF2CommandRegisterconfigureandInitiatethetransferbetweentheIF1/IF2Registersetsand

theMessageRAM.Itisconfigurablewhichportionsofthemessageobjectshouldbetransferred.

AtransferisstartedwhentheCPUwritesthemessagenumbertobits[7:0]oftheIF1/IF2Command

Register.Withthiswriteoperation,theBusybitisautomaticallysetto'1'toindicatethatatransferisin

progress.

After4to14VBUSclockcycles,thetransferbetweentheInterfaceRegisterandtheMessageRAMwill

becompletedandtheBusybitiscleared.Themaximumnumberofcyclesisneededwhenthemessage

transferconcurswithaCANmessagetransmission,acceptancefiltering,ormessagestorage.

IftheCPUwritestobothIF1/IF2CommandRegistersconsecutively(requestofasecondtransferwhile

firsttransferisstillinprogress),thesecondtransferwillstartafterthefirstonehasbeencompleted.

NOTE:WhileBusybitisone,IF1/IF2Registersetsarewriteprotected.

Fordebugsupport,theautoclearfunctionalityoftheIF1/IF2CommandRegisters(clearof

DMAactiveflagbyr/w)isdisabledduringDebug/Suspendmode.

IfaninvalidMessageNumberiswrittentobits[7:0]oftheIF1/IF2CommandRegister,the

MessageHandlermayaccessanimplemented(valid)messageobjectinstead.

Figure24-51.IF1CommandRegisters(DCANIF1CMD)[offset=100h]

31

24

Reserved

R-0

23

22

21

20

19

18

17

16

WR/RD

Mask

Arb

Control

ClrIntPnd

TxRqst/NewDat

DataA

DataB

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

14

13

8

Busy

DMAActive

Reserved

R-0

R/WP/C-0

R-0

7

0

MessageNumber

R/WP-1h

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);C=ClearbyIF1Access;-n=valueafterreset

Figure24-52.IF2CommandRegisters(DCANIF2CMD)[offset=120h]

31

24

Reserved

R-0

23

22

21

20

19

18

17

16

WR/RD

Mask

Arb

Control

ClrIntPnd

TxRqst/NewDat

DataA

DataB

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

14

13

8

Busy

DMAActive

Reserved

R-0

R/WP/C-0

R-0

7

0

MessageNumber

R/WP-1h

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);C=ClearbyIF1Access;-n=valueafterreset

1219

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-20.IF1/IF2CommandRegisterFieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

23

WR/RD

Write/Read

0

Direction=Read:TransferdirectionisfromthemessageobjectaddressedbyMessage

Number(Bits[7:0])totheIF1/IF2registerset

1

Direction=Write:TransferdirectionisfromtheIF1/IF2registersettothemessageobject

addressedbyMessageNumber(Bits[7:0])

22

Mask

AccessMaskbits

0

Maskbitswillnotbechanged

1

Direction=Read:TheMaskbits(IdentifierMask+MDir+MXtd)willbetransferredfromthe

messageobjectaddressedbyMessageNumber(Bits[7:0])totheIF1/IF2Registerset.

Direction=Write:TheMaskbits(IdentifierMask+MDir+MXtd)willbetransferredfromthe

IF1/IF2RegistersettothemessageobjectaddressedbyMessageNumber(Bits[7:0])

21

Arb

AccessArbitrationbits

0

Arbitrationbitswillnotbechanged

1

Direction=Read:TheArbitrationbits(Identifier+Dir+Xtd+MsgVal)willbetransferredfrom

themessageobjectaddressedbyMessageNumber(Bits[7:0])tothecorrespondingIF1/IF2

Registerset

Direction=Write:TheArbitrationbits(Identifier+Dir+Xtd+MsgVal)willbetransferredfrom

theIF1/IF2RegistersettothemessageobjectaddressedbyMessageNumber(Bits[7:0])

20

Control

AccessControlbits

0

Controlbitswillnotbechanged

1

Direction=Read:TheMessageControlbitswillbetransferredfromthemessageobject

addressedbyMessageNumber(Bits[7:0])tothecorrespondingIF1/IF2Registerset

Direction=Write:TheMessageControlbitswillbetransferredfromtheIF1/IF2Registersetto

themessageobjectaddressedbyMessageNumber(Bits[7:0])

IftheTxRqst/NewDatbitinthisregister(Bit[18])isset,theTxRqst/NewDatbitintheIF1/IF2

MessageControlRegisterwillbeignored

19

ClrIntPnd

ClearInterruptPendingbit

0

IntPndbitwillnotbechanged

1

Direction=Read:ClearsIntPndbitinthemessageobject

Direction=Write:Thisbitisignored.CopyingofIntPndflagfromIF1/IF2RegisterstoMessage

RAMcanbecontrolledbyonlytheControlflag(Bit[20])

18

TxRqst/NewDat

AccessTransmissionRequestbit

0

Direction=Read:NewDatbitwillnotbechanged.

Direction=Write:TxRqst/NewDatbitwillbehandledaccordingtotheControlbit

1

Direction=Read:ClearsNewDatbitinthemessageobject.

Direction=Write:SetsTxRqst/NewDatinthemessageobject

Note:IfaCANtransmissionisrequestedbysettingTxRqst/NewDatinthisregister,the

TxRqst/NewDatbitsinthemessageobjectwillbesetto'1'andindependentofthevaluesin

IF1/IF2MessageControlRegister.

AreadaccesstoamessageobjectcanbecombinedwiththeresetofthecontrolbitsIntPnd

andNewDat.ThevaluesofthesebitstransferredtotheIF1/IF2MessageControlRegister

alwaysreflectthestatusbeforeresettingthem.

17

DataA

AccessDataBytes0–3

0

DataBytes0–3willnotbechanged

1

Direction=Read:TheDataBytes0–3willbetransferredfromthemessageobjectaddressed

bytheMessageNumber(Bits[7:0])tothecorrespondingIF1/IF2Registerset

Direction=Write:TheDataBytes0–3willbetransferredfromtheIF1/IF2Registersettothe

messageobjectaddressedbytheMessageNumber(Bits[7:0])

Note:Thedurationofthemessagetransferisindependentofthenumberofbytestobe

transferred.

1220

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

Table24-20.IF1/IF2CommandRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

16

DataB

AccessDataBytes4–7

0

DataBytes4–7willnotbechanged

1

Direction=Read:TheDataBytes4–7willbetransferredfromthemessageobjectaddressed

bytheMessageNumber(Bits[7:0])tothecorrespondingIF1/IF2Registerset

Direction=Write:TheDataBytes4–7willbetransferredfromtheIF1/IF2Registersettothe

messageobjectaddressedbytheMessageNumber(Bits[7:0])

Note:Thedurationofthemessagetransferisindependentofthenumberofbytestobe

transferred.

15

Busy

Busyflag

0

NotransferbetweenIF1/IF2RegistersetandMessageRAMisinprogress

1

TransferbetweenIF1/IF2RegistersetandMessageRAMisinprogress.

Thisbitissetto1afterthemessagenumberhasbeenwrittentobits[7:0].IF1/IF2Registerset

willbewrite-protected.Thebitisclearedafterread/writeactionhasfinished.

14

DMAActive

ActivationofDMAfeatureforsubsequentinternalIF1/IF2update

0

DMArequestlineisindependentofIF1/IF2activities

1

DMAisrequestedaftercompletedtransferbetweenIF1/IF2RegistersetandMessageRAM.

TheDMArequestremainsactiveuntilthefirstreadorwritetooneoftheIF1/IF2registers.An

exceptionisawritetoMessageNumber(Bits[7:0])whenDMAActiveis1.

Note:DuetotheautoresetfeatureoftheDMAActivebit,thisbithastobeseparatelysetfor

eachsubsequentDMAcycle.

13-8

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

7-0

MessageNumber

NumberofmessageobjectinMessageRAMthatisusedfordatatransfer

0

Invalidmessagenumber

1h-80h

Validmessagenumbersif128messageobjectsareimplemented

81h-FFh

Invalidmessagenumbersif128messageobjectsareimplemented

Note:WhenaninvalidmessagenumberiswrittentotheIF1/IF2CommandRegisterwhichis

higherthanthelastimplementedmessageobjectnumber,amoduloaddressingwilloccur.For

example,whenaccessingmessageobject33inaDCANmodulewith32messageobjectsonly,

themessageobject1willbeaccessedinstead.

1221

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.19IF1/IF2MaskRegisters(DCANIF1MSK,DCANIF2MSK)

ThebitsoftheIF1/IF2MaskRegistersmirrorthemaskbitsofamessageobject.Thefunctionofthe

relevantmessageobjectsbitsisdescribedinSection24.5.1.

NOTE:WhileBusybitofIF1/IF2CommandRegisterisone,IF1/IF2RegisterSetiswriteprotected.

Figure24-53.IF1MaskRegister(DCANIF1MSK)[offset=104h]

31

30

29

28

16

MXtd

MDir

Rsvd

Msk[28:16]

R/WP-1

R/WP-1

R-1

R/WP-1FFFh

15

0

Msk[15:0]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Figure24-54.IF2MaskRegister(DCANIF2MSK)[offset=124h]

31

30

29

28

16

MXtd

MDir

Rsvd

Msk[28:16]

R/WP-1

R/WP-1

R-1

R/WP-1FFFh

15

0

Msk[15:0]

R/WP-FFFFh

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Table24-21.IF1/IF2MaskRegisterFieldDescriptions

Bit

Field

Value

Description

31

MXtd

MaskExtendedIdentifier

0

Theextendedidentifierbit(IDE)hasnoeffectontheacceptancefiltering.

1

Theextendedidentifierbit(IDE)isusedforacceptancefiltering.

When11-bit("standard")identifiersareusedforamessageobject,theidentifiersofreceivedData

FramesarewrittenintobitsID[28:18].Foracceptancefiltering,onlythesebitswithmaskbits

Msk[28:18]areconsidered.

30

MDir

MaskMessageDirection

0

Themessagedirectionbit(Dir)hasnoeffectontheacceptancefiltering.

1

Themessagedirectionbit(Dir)isusedforacceptancefiltering.

29

Reserved

1

Thisbitisalwaysreadas1.Writeshavenoeffect.

28-0

Msk[28:0]

IdentifierMask

0

Thecorrespondingbitintheidentifierofthemessageobjectisnotusedforacceptancefiltering

(don'tcare).

1

Thecorrespondingbitintheidentifierofthemessageobjectisusedforacceptancefiltering

1222

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.20IF1/IF2ArbitrationRegisters(DCANIF1ARB,DCANIF2ARB)

ThebitsoftheIF1/IF2ArbitrationRegistersmirrorthearbitrationbitsofamessageobject.Thefunctionof

therelevantmessageobjectsbitsisdescribedinSection24.5.1.

NOTE:WhileBusybitofIF1/IF2CommandRegisterisone,IF1/IF2RegisterSetiswriteprotected.

Figure24-55.IF1ArbitrationRegister(DCANIF1ARB)[offset=108h]

31

30

29

28

16

MsgVal

Xtd

Dir

ID[28:16]

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

0

ID[15:0]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Figure24-56.IF2ArbitrationRegister(DCANIF2ARB)[offset=128h]

31

30

29

28

16

MsgVal

Xtd

Dir

ID[28:16]

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

0

ID[15:0]

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Table24-22.IF1/IF2ArbitrationRegisterFieldDescriptions

Bit

Field

Value

Description

31

MsgVal

MessageValid

0

ThemessageobjectisignoredbytheMessageHandler.

1

ThemessageobjectisusedbytheMessageHandler.

Note:TheCPUshouldresettheMsgValbitofallunusedMessagesObjectsduringthe

initializationbeforeitresetsbitInitintheCANControlRegister.MsgValmustalsoberesetif

themessagesobjectisnolongerusedinoperation.Forreconfigurationofmessageobjects

duringnormaloperation,seeSection24.7.6andSection24.7.7.

30

Xtd

ExtendedIdentifier

0

The11-bit("standard")identifierisusedforthismessageobject.

1

The29-bit("extended")identifierisusedforthismessageobject.

29

Dir

Messagedirection

0

Direction=Receive:OnTxRqst,aRemoteFramewiththeidentifierofthismessageobjectis

transmitted.OnreceivingaDataFramewithamatchingidentifier,thismessageisstoredinthis

messageobject.

1

Direction=Transmit:OnTxRqst,therespectivemessageobjectistransmittedasaData

Frame.OnreceivingaRemoteFramewithamatchingidentifier,theTxRqstbitofthismessage

objectisset(ifRmtEn=1).

28-0

ID[28:0]

MessageIdentifier

ID[28:0]

29-bitIdentifier("ExtendedFrame")

ID[28:18]

11-bitIdentifier("StandardFrame")

1223

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

TheArbitrationbitsID[28:0],Xtd,andDirareusedtodefinetheidentifierandtypeofoutgoingmessages

and(togetherwiththeMaskbitsMsk[28:0],MXtd,andMDir)foracceptancefilteringofincoming

messages.

AreceivedmessageisstoredintothevalidmessageobjectwithmatchingidentifierandDirection=

receive(DataFrame)orDirection=transmit(RemoteFrame).

ExtendedframescanbestoredonlyinmessageobjectswithXtd=one,standardframesinmessage

objectswithXtd=zero.

Ifareceivedmessage(DataFrameorRemoteFrame)matchesmorethanonevalidmessageobjects,it

isstoredintotheonewiththelowestmessagenumber.

24.17.21IF1/IF2MessageControlRegisters(DCANIF1MCTL,DCANIF2MCTL)

ThebitsoftheIF1/IF2MessageControlRegistersmirrorthemessagecontrolbitsofamessageobject.

ThefunctionoftherelevantmessageobjectsbitsisdescribedinSection24.5.1.

NOTE:WhileBusybitofIF1/IF2CommandRegisterisone,IF1/IF2RegisterSetiswriteprotected.

Figure24-57.IF1MessageControlRegister(DCANIF1MCTL)[offset=10Ch]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

NewDat

MsgLst

IntPnd

UMask

TxIE

RxIE

RmtEn

TxRqst

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

4

3

0

EoB

Reserved

DLC[3:0]

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Figure24-58.IF2MessageControlRegister(DCANIF2MCTL)[offset=12Ch]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

NewDat

MsgLst

IntPnd

UMask

TxIE

RxIE

RmtEn

TxRqst

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

4

3

0

EoB

Reserved

DLC[3:0]

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

1224

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

Table24-23.IF1/IF2MessageControlRegisterFieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

Thesebitsarealwaysreadas0.Writeshavenoeffect.

15

NewDat

NewData

0

NonewdatahasbeenwrittenintothedataportionofthismessageobjectbytheMessageHandler

sincethelasttimethisflagwasclearedbytheCPU.

1

TheMessageHandlerortheCPUhaswrittennewdataintothedataportionofthismessage

object.

14

MsgLst

MessageLost(onlyvalidformessageobjectswithdirection=receive)

0

NomessagelostsincethelasttimewhenthisbitwasresetbytheCPU.

1

TheMessageHandlerstoredanewmessageintothisobjectwhenNewDatwasstillset,sothe

previousmessagehasbeenoverwritten.

13

IntPnd

InterruptPending

0

Thismessageobjectisnotthesourceofaninterrupt.

1

Thismessageobjectisthesourceofaninterrupt.Theinterruptidentifierintheinterruptregisterwill

pointtothismessageobjectifthereisnootherinterruptsourcewithhigherpriority.

12

UMask

UseAcceptanceMask

0

Maskignored

1

UseMask(Msk[28:0],MXtd,andMDir)foracceptancefiltering.

IftheUMaskbitissetto1,themessageobject'smaskbitshavetobeprogrammedduring

initializationofthemessageobjectbeforeMsgValissetto1.

11

TxIE

TransmitInterruptEnable

0

IntPndwillnotbetriggeredafterthesuccessfultransmissionofaframe.

1

IntPndwillbetriggeredafterthesuccessfultransmissionofaframe.

10

RxIE

ReceiveInterruptEnable

0

IntPndwillnotbetriggeredafterthesuccessfulreceptionofaframe.

1

IntPndwillbetriggeredafterthesuccessfulreceptionofaframe.

9

RmtEn

RemoteEnable

0

AtthereceptionofaRemoteFrame,TxRqstisnotchanged.

1

AtthereceptionofaRemoteFrame,TxRqstisset.

8

TxRqst

TransmitRequest

0

Thismessageobjectisnotwaitingforatransmission.

1

Thetransmissionofthismessageobjectisrequestedandnotyetdone.

7

EoB

DataFramehas0–8databits

0

DataFramehas8databytes

1

Note:ThisbitisusedtoconcatenatemultiplemessageobjectstobuildaFIFOBuffer.Forsingle

messageobjects(notbelongingtoaFIFOBuffer),thisbitmustalwaysbesettoone.

6-4

Reserved

Thesebitsarealwaysreadas0.Writeshavenoeffect.

3-0

DLC[3:0]

DataLengthCode

0-8h

DataFramehas0–8databits.

9h-Fh

DataFramehas8databytes.

Note:TheDataLengthCodeofamessageobjectmustbedefinedthesameasinallthe

correspondingobjectswiththesameidentifieratothernodes.Whenthemessagehandlerstoresa

dataframe,itwillwritetheDLCtothevaluegivenbythereceivedmessage.

1225

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.22IF1/IF2DataAandDataBRegisters(DCANIF1DATA/DATB,DCANIF2DATA/DATB)

ThedatabytesofCANmessagesarestoredintheIF1/IF2registersinthefollowingorder.

InaCANDataFrame,Data0isthefirst,andData7isthelastbytetobetransmittedorreceived.In

CAN'sserialbitstream,theMSBofeachbytewillbetransmittedfirst

Figure24-59.IF1DataARegister(DCANIF1DATA)[offset=110h]

31

24

23

16

Data3

Data2

R/WP-0

R/WP-0

15

8

7

0

Data1

Data0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Figure24-60.IF1DataBRegister(DCANIF1DATB)[offset=114h]

31

24

23

16

Data7

Data6

R/WP-0

R/WP-0

15

8

7

0

Data5

Data4

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Figure24-61.IF2DataARegister(DCANIF2DATA)[offset=130h]

31

24

23

16

Data3

Data2

R/WP-0

R/WP-0

15

8

7

0

Data1

Data0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

Figure24-62.IF2DataBRegister(DCANIF2DATB)[offset=134h]

31

24

23

16

Data7

Data6

R/WP-0

R/WP-0

15

8

7

0

Data5

Data4

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyBusybit);-n=valueafterreset

1226

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.23IF3ObservationRegister(DCANIF3OBS)

TheIF3registersetcanautomaticallybeupdatedwithreceivedmessageobjectswithouttheneedto

InitiatethetransferfromMessageRAMbyCPU(AdditionalinformationcanbefoundinSection24.5.1).

Theobservationflags(Bits[4:0])intheIF3Observationregisterareusedtodetermine,whichdata

sectionsoftheIF3InterfaceRegistersethavetobereadinordertocompleteaDMAreadcycle.Afterall

markeddatasectionsareread,theDCANisenabledtoupdatetheIF3InterfaceRegistersetwithnew

data.

Anyaccessorderofsinglebytesorhalf-wordsissupported.Whenusingbyteorhalf-wordaccesses,a

datasectionismarkedascompleted,ifallbytesareread.

NOTE:IfIF3UpdateEnableisusedandnoObservationflagisset,thecorrespondingmessage

objectswillbecopiedtoIF3withoutactivatingtheDMArequestlineandwithoutwaitingfor

DMAreadaccesses.

AwriteaccesstothisregisterabortsapendingDMAcyclebyresettingtheDMAlineandenables

updatingofIF3InterfaceRegistersetwithnewdata.Toavoiddatainconsistency,theDMAcontroller

shouldbedisabledbeforereconfiguringIF3observationregister.

Thestatusofthecurrentread-cyclecanbeobservedviastatusflags(Bits[12:8]).

IfaninterruptlineisavailableforIF3,aninterruptwillbegeneratedbyIF3Updflag.Seethedevicedata

sheettofindoutifthisinterruptsourceisavailable

Withthis,theobservationstatusbitsandtheIF3Updbitcouldbeusedbytheapplicationtorealizethe

notificationaboutnewIF3contentinpollingorinterruptmode.

Figure24-63.IF3ObservationRegister(DCANIF3OBS)[offset=140h]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

7

5

4

3

2

1

0

IF3Upd

Reserved

IF3SDB

IF3SDA

IF3SC

IF3SA

IF3SM

Reserved

DataB

DataA

Ctrl

Arb

Mask

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Read;-n=valueafterreset

Table24-24.IF3ObservationRegisterFieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

15

IF3Upd

IF3UpdateData

0

NonewdatahasbeenloadedsinceIF3waslastread

1

NewdatahasbeenloadedsinceIF3waslastread

14-13

Reserved

Thesebitsarealwaysreadas0.Writeshavenoeffect

12

IF3SDB

IF3StatusofDataBreadaccess

0

AllDataBbytesarealreadyreadorarenotmarkedtoberead

1

DataBsectionstillhasdatatoread

11

IF3SDA

IF3StatusofDataAreadaccess

0

AllDataAbytesarealreadyreadorarenotmarkedtoberead

1

DataAsectionstillhasdatatoread

10

IF3SC

IF3StatusofControlbitsreadaccess

0

AllControlsectionbytesarealreadyreadorarenotmarkedtoberead

1

Controlsectionstillhasdatatoread

1227

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-24.IF3ObservationRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

9

IF3SA

IF3StatusofArbitrationdatareadaccess

0

AllArbitrationdatabytesarealreadyreadorarenotmarkedtoberead

1

Arbitrationsectionstillhasdatatoread

8

IF3SM

IF3StatusofMaskdatareadaccess

0

AllMaskdatabytesarealreadyreadorarenotmarkedtoberead

1

Masksectionstillhasdatatoread

7-5

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect

4

DataB

DataBreadobservation

0

DataBsectiondoesnotneedtoberead

1

DataBsectionhastobereadtoenablenextIF3update

3

DataA

DataAreadobservation

0

DataAsectiondoesnotneedtoberead

1

DataAsectionhastobereadtoenablenextIF3update

2

Ctrl

Ctrlreadobservation

0

Ctrlsectiondoesnotneedtoberead

1

CtrlsectionhastobereadtoenablenextIF3update

1

Arb

Arbitrationdatareadobservation

0

Arbitrationdatadoesnotneedtoberead

1

ArbitrationdatahastobereadtoenablenextIF3update

0

Mask

Maskdatareadobservation

0

Maskdatadoesnotneedtoberead

1

MaskdatahastobereadtoenablenextIF3update

1228

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.24IF3MaskRegister(DCANIF3MSK)

Figure24-64.IF3MaskRegister(DCANIF3MSK)[offset=144h]

31

30

29

28

16

MXtd

MDir

Rsvd

Msk[28:16]

R-1

R-1

R-1

R-1FFFh

15

0

Msk[15:0]

R-FFFFh

LEGEND:R=Read;-n=valueafterreset

Table24-25.IF3MaskRegisterFieldDescriptions

Bit

Field

Value

Description

31

MXtd

MaskExtendedIdentifier

0

Theextendedidentifierbit(IDE)hasnoeffectonacceptancefiltering.

1

Theextendedidentifierbit(IDE)isusedforacceptancefiltering

Note:When11-bit("standard")identifiersareusedforamessageobject,theidentifiersofreceived

DataFramesarewrittenintobitsID[28:18].Foracceptancefiltering,onlythesebits,togetherwith

maskbitsMsk[28:18],areconsidered.

30

MDir

MaskMessageDirection

0

Themessagedirectionbit(Dir)hasnoeffectonacceptancefiltering.

1

Themessagedirectionbit(Dir)isusedforacceptancefiltering.

29

Reserved

1

Thisbitisalwaysreadas1.Writeshavenoeffect.

28-0

Msk[28:0]

IdentifierMask

0

Thecorrespondingbitintheidentifierofthemessageobjectisnotusedforacceptancefiltering

(don'tcare).

1

Thecorrespondingbitintheidentifierofthemessageobjectisusedforacceptancefiltering.

1229

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.25IF3ArbitrationRegister(DCANIF3ARB)

Figure24-65.IF3ArbitrationRegister(DCANIF3ARB)[offset=148h]

31

30

29

28

16

MsgVal

Xtd

Dir

ID[28:16]

R-0

R-0

R-0

R-0

15

0

ID[15:0]

R-0

LEGEND:R=Read;-n=valueafterreset

Table24-26.IF3ArbitrationRegisterFieldDescriptions

Bit

Field

Value

Description

31

MsgVal

MessageValid

0

ThemessageobjectisignoredbytheMessageHandler.

1

ThemessageobjectistobeusedbytheMessageHandler.

Note:TheCPUshouldresettheMsgValbitofallunusedMessagesObjectsduringthe

initializationbeforeitresetsbitInitintheCANControlRegister.MsgValmustalsoberesetif

themessagesobjectisnolongerusedinoperation.Forreconfigurationofmessageobjects

duringnormaloperation,seeSection24.7.6andSection24.7.7.

30

Xtd

ExtendedIdentifier

0

The11-bit("standard")identifierisusedforthismessageobject.

1

The29-bit("extended")identifierisusedforthismessageobject.

29

Dir

Messagedirection

0

Direction=Receive:OnTxRqst,aremoteframewiththeidentifierofthismessageobjectis

transmitted.Onreceivingadataframewithamatchingidentifier,themessageisstoredinthis

messageobject.

1

Direction=Transmit:OnTxRqst,therespectivemessageobjectistransmittedasadataframe.

Onreceivingaremoteframewithamatchingidentifier,theTxRqstbitofthismessageobjectis

set(ifRmtEn=1).

28-0

ID[28:0]

MessageIdentifier

ID[28:0]

29-bitIdentifier("ExtendedFrame")

ID[28:18]

11-bitIdentifier("StandardFrame")

1230

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.26IF3MessageControlRegister(DCANIF3MCTL)

Figure24-66.IF3MessageControlRegister(DCANIF3MCTL)[offset=14Ch]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

NewDat

MsgLst

IntPnd

UMask

TxIE

RxIE

RmtEn

TxRqst

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

7

6

4

3

0

EoB

Reserved

DLC[3:0]

R-0

R-0

R-0

LEGEND:R=Read;-n=valueafterreset

Table24-27.IF3MessageControlRegisterFieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

15

NewDat

NewData

0

NonewdatahasbeenwrittenintothedataportionofthismessageobjectbytheMessageHandler

sincethelasttimethisflagwasclearedbytheCPU.

1

TheMessageHandlerortheCPUhaswrittennewdataintothedataportionofthismessage

object.

14

MsgLst

MessageLost(onlyvalidformessageobjectswithdirection=receive)

0

NomessagelostsincethelasttimewhenthisbitwasresetbytheCPU.

1

TheMessageHandlerstoredanewmessageintothisobjectwhenNewDatwasstillset,sothe

previousmessagehasbeenoverwritten.

13

IntPnd

InterruptPending

0

Thismessageobjectisnotthesourceofaninterrupt.

1

Thismessageobjectisthesourceofaninterrupt.Theinterruptidentifierintheinterruptregisterwill

pointtothismessageobjectifthereisnootherinterruptsourcewithhigherpriority.

12

UMask

UseAcceptanceMask

0

Maskignored

1

UseMask(Msk[28:0],MXtd,andMDir)foracceptancefiltering.

IftheUMaskbitissetto1,themessageobject'smaskbitshavetobeprogrammedduring

initializationofthemessageobjectbeforeMsgValissetto1.

11

TxIE

TransmitInterruptEnable

0

IntPndwillnotbetriggeredafterthesuccessfultransmissionofaframe.

1

IntPndwillbetriggeredafterthesuccessfultransmissionofaframe.

10

RxIE

ReceiveInterruptEnable

0

IntPndwillnotbetriggeredafterthesuccessfultransmissionofaframe.

1

IntPndwillbetriggeredafterthesuccessfultransmissionofaframe.

9

RmtEn

RemoteEnable

0

AtthereceptionofaRemoteFrame,TxRqstisnotchanged.

1

AtthereceptionofaRemoteFrame,TxRqstisset.

8

TxRqst

TransmitRequest

0

Thismessageobjectisnotwaitingforatransmission.

1

Thetransmissionofthismessageobjectisrequestedandnotyetdone.

1231

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-27.IF3MessageControlRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

7

EoB

EndofBlock

0

ThemessageobjectispartofaFIFOBufferblockandisnotthelastmessageobjectoftheFIFO

Bufferblock

1

ThemessageobjectisasinglemessageobjectorthelastmessageobjectinaFIFOBufferblock

Note:ThisbitisusedtoconcatenatemultiplemessageobjectstobuildaFIFOBuffer.Forsingle

messageobjects(notbelongingtoaFIFOBuffer),thisbitmustalwaysbesettoone.

6-4

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

3-0

DLC[3:0]

DataLengthCode

0-8h

DataFramehas0–8databits.

9h-Fh

DataFramehas8databytes.

Note:TheDataLengthCodeofamessageobjectmustbedefinedthesameasinallthe

correspondingobjectswiththesameidentifieratothernodes.Whenthemessagehandlerstoresa

dataframe,itwillwritetheDLCtothevaluegivenbythereceivedmessage.

24.17.27IF3DataAandDataBRegisters(DCANIF3DATA/DATB)

ThedatabytesofCANmessagesarestoredintheIF3registersinthefollowingorder.

InaCANDataFrame,Data0isthefirst,andData7isthelastbytetobetransmittedorreceived.In

CAN'sserialbitstream,theMSBofeachbytewillbetransmittedfirst.

Figure24-67.IF3DataARegister(DCANIF3DATA)[offset=150h]

31

24

23

16

Data3

Data2

R-0

R-0

15

8

7

0

Data1

Data0

R-0

R-0

LEGEND:R=Read;-n=valueafterreset

Figure24-68.IF3DataBRegister(DCANIF3DATB)[offset=154h]

31

24

23

16

Data7

Data6

R/WP-0

R/WP-0

15

8

7

0

Data5

Data4

R-0

R-0

LEGEND:R=Read;-n=valueafterreset

1232

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

24.17.28IF3UpdateEnableRegisters(DCANIF3UPD12toIF3UPD78)

TheautomaticupdatefunctionalityoftheIF3registersetcanbeconfiguredforeachmessageobject.A

messageobjectisenabledforautomaticIF3update,ifthededicatedIF3UpdEnflagisset.Thismeans

thatanactiveNewDatflagofthismessageobject(forexample,duetoreceptionofaCANframe)will

triggeranautomaticcopyofthewholemessageobjecttoIF3registerset.

NOTE:IF3Updateenableshouldnotbesetfortransmitobjects.

Figure24-69.IF3UpdateEnable12Register[offset=160h]

31

0

IF3UpdEn[32:1]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-70.IF3UpdateEnable34Register[offset=164h]

31

0

IF3UpdEn[64:33]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-71.IF3UpdateEnable56Register[offset=168h]

31

0

IF3UpdEn[96:65]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Figure24-72.IF3UpdateEnable78Register[offset=16Ch]

31

0

IF3UpdEn[128:97]

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table24-28.IF3UpdateControlRegisterFieldDescriptions

Bit

Name

Value

Description

31-0

IF3UpdEn[128:1]

IF3UpdateEnabled(forallmessageobjects)

0

AutomaticIF3updateisdisabledforthismessageobject.

AutomaticIF3updateisenabledforthismessageobject.Amessageobjectisscheduledtobe

1

copiedtoIF3registerset,ifNewDatflagofthemessageobjectisactive.

1233

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

24.17.29CANTXIOControlRegister(DCANTIOC)

TheCAN_TXpinoftheDCANmodulecanbeusedasgeneralpurposeIOpinifCANfunctionisnot

needed.

NOTE:ThevaluesoftheIOControlregistersareonlywritableifInitbitofCANControlRegisteris

Cleared.

TheOD,Func,DirandOutbitsoftheCANTXIOControlregisterareforcedtocertain

valueswhenInitbitofCANControlRegisterisreset(seebitdescriptions).

Figure24-73.CANTXIOControlRegister(DCANTIOC)[offset=1E0h]

31

19

18

17

16

Reserved

PU

PD

OD

R-0

R/W-D

R/W-D

R/WP-0

15

4

3

2

1

0

Reserved

Func

Dir

Out

In

R-0

R/WP-0

R/WP-0

R/WP-0

R-U

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyInitbit);D=Device-dependent;-n=valueafterreset

Table24-29.CANTXIOControlRegisterFieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

18

PU

CAN_TXPullup/Pulldownselect.ThisbitisonlyactivewhenCAN_TXisconfiguredtobeaninput.

0

CAN_TXPulldownisselected,whenpulllogicisactive(PD=0).

1

CAN_TXPullupisselected,whenpulllogicisactive(PD=0).

17

PD

CAN_TXpulldisable.ThisbitisonlyactivewhenCAN_TXisconfiguredtobeaninput.

0

CAN_TXpullisactive.

1

CAN_TXpullisdisabled.

16

OD

CAN_TXopendrainenable.ThisbitisonlyactivewhenCAN_TXisconfiguredtobeinGIOmode

(TIOC.Func=0).

0

TheCAN_TXpinisconfiguredinpush/pullmode.

1

TheCAN_TXpinisconfiguredinopendrainmode.

Forcedto'0'ifInitbitofCANcontrolregisterisreset.

15-4

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

3

Func

CAN_TXfunction.ThisbitchangesthefunctionoftheCAN_TXpin.

0

CAN_TXpinisinGIOmode.

1

CAN_TXpinisinfunctionalmode(asanoutputtotransmitCANdata).

Forcedto'1'ifInitbitofCANcontrolregisterisreset.

2

Dir

CAN_TXdatadirection.ThisbitcontrolsthedirectionoftheCAN_TXpinwhenitisconfiguredtobe

inGIOmodeonly(TIOC.Func=0).

0

TheCAN_TXpinisaninput.

1

TheCAN_TXpinisanoutput.

Forcedto'1'ifInitbitofCANcontrolregisterisreset.

1

Out

CAN_TXdataoutwrite.ThisbitisonlyactivewhenCAN_TXpinisconfiguredtobeinGIOmode

(TIOC.Func=0)andconfiguredtobeanoutputpin(TIOC.Dir=1).Thevalueofthisbitindicates

thevaluetobeoutputtotheCAN_TXpin.

0

TheCAN_TXpinisdriventologiclow(0).

1

TheCAN_TXpinisatlogichigh(1).

ForcedtoTxoutputoftheCANCore,ifInitbitofCANControlregisterisreset.

1234

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comDCANControlRegisters

Table24-29.CANTXIOControlRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

0

In

CAN_TXdatain.

0

TheCAN_TXpinisatlogiclow(0).

1

TheCAN_TXpinisatlogichigh(1).

Note:WhenCAN_TXpinisconnectedtoaCANtransceiver,anexternalpullupresistorhastobe

usedtoensurethattheCANbuswillnotbedisturbed(forexample,whiletheDCANmoduleis

reset).

24.17.30CANRXIOControlRegister(DCANRIOC)

TheCAN_RXpinoftheDCANmodulecanbeusedasgeneralpurposeIOpinifCANfunctionisnot

needed.

NOTE:ThevaluesoftheIOControlregistersarewritableonlyifInitbitofCANControlRegisteris

Cleared.

TheOD,FuncandDirbitsoftheCANRXIOControlregisterareforcedtocertainvalues

whenInitbitofCANControlRegisterisreset,seebitdescription.

Figure24-74.CANRXIOControlRegister(DCANRIOC)[offset=1E4h]

31

19

18

17

16

Reserved

PU

PD

OD

R-0

R/W-D

R/W-D

R/WP-0

15

4

3

2

1

0

Reserved

Func

Dir

Out

In

R-0

R/WP-0

R/WP-0

R/WP-0

R-U

LEGEND:R/W=Read/Write;R=Read;WP=ProtectedWrite(protectedbyInitbit);D=Device-dependent;-n=valueafterreset

Table24-30.CANRXIOControlRegisterFieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

18

PU

CAN_RXPullup/Pulldownselect.ThisbitisonlyactivewhenCAN_RXisconfiguredtobeaninput.

0

CAN_RXPulldownisselected,whenpulllogicisactive(PD=0).

1

CAN_RXPullupisselected,whenpulllogicisactive(PD=0).

17

PD

CAN_RXpulldisable.ThisbitisonlyactivewhenCAN_RXisconfiguredtobeaninput.

0

CAN_RXpullisactive.

1

CAN_RXpullisdisabled.

16

OD

CAN_RXopendrainenable.ThisbitisonlyactivewhenCAN_RXisconfiguredtobeinGIOmode

(RIOC.Func=0).

0

TheCAN_RXpinisconfiguredinpush/pullmode.

1

TheCAN_RXpinisconfiguredinopendrainmode.

Forcedto'0'ifInitbitofCANcontrolregisterisreset.

15-4

Reserved

0

Thesebitsarealwaysreadas0.Writeshavenoeffect.

3

Func

CAN_RXfunction.ThisbitchangesthefunctionoftheCAN_RXpin.

0

CAN_RXpinisinGIOmode.

1

CAN_RXpinisinfunctionalmode(asanoutputtotransmitCANdata).

Forcedto'1'ifInitbitofCANcontrolregisterisreset.

1235

SPNU499B–November2012–RevisedAugust2013

ControllerAreaNetwork(DCAN)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






DCANControlRegisterswww.ti.com

Table24-30.CANRXIOControlRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

2

Dir

CAN_RXdatadirection.ThisbitcontrolsthedirectionoftheCAN_RXpinwhenitisconfiguredto

beinGIOmodeonly(RIOC.Func=0).

0

TheCAN_RXpinisaninput.

1

TheCAN_RXpinisanoutput.

Forcedto'0'ifInitbitofCANcontrolregisterisreset.

1

Out

CAN_RXdataoutwrite.ThisbitisonlyactivewhenCAN_RXpinisconfiguredtobeinGIOmode

(RIOC.Func=0)andconfiguredtobeanoutputpin(RIOC.Dir=1).Thevalueofthisbitindicates

thevaluetobeoutputtotheCAN_RXpin.

0

TheCAN_RXpinisdriventologiclow(0).

1

TheCAN_RXpinisatlogichigh(1).

0

In

CAN_RXdatain.

0

TheCAN_RXpinisatlogiclow(0).

1

TheCAN_RXpinisatlogichigh(1).

Note:WhenCAN_RXpinisconnectedtoaCANtransceiver,anexternalpullupresistorhastobe

usedtoensurethattheCANbuswillnotbedisturbed(forexample,whiletheDCANmoduleis

reset).

1236

ControllerAreaNetwork(DCAN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter25

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)

withParallelPinOption(MibSPIP)

Thischapterprovidesthespecificationsfora16-bitconfigurablesynchronousmulti-bufferedmulti-pin

serialperipheralinterface(MibSPI).ThischapteralsoprovidesthespecificationsforMibSPIwithParallel

PinOption(MibSPIP).TheMibSPIisaprogrammable-lengthshiftregisterusedforhigh-speed

communicationbetweenexternalperipheralsorothermicrocontrollers.

Throughoutthischapter,allreferencestoSPIalsoapplytoMibSPI/MibSPIP,unlessotherwisenoted.

NOTE:ThischapterdescribesasupersetimplementationoftheMibSPI/SPImodulesthatincludes

featuresandfunctionalitythatmaynotbeavailableonsomedevices.Device-specificcontent

thatshouldbedeterminedbyreferencingthedatasheetincludesDMAfunctionality,MibSPI

RAMsize,numberoftransfergroups,numberofchipselects,parallelmodesupport,and

availabilityof5-pinoperation(SPInENA).

Topic...........................................................................................................................Page

25.1Overview.......................................................................................................1238

25.2OperatingModes...........................................................................................1239

25.3TestFeatures................................................................................................1260

25.4General-PurposeI/O.......................................................................................1262

25.5Low-PowerMode...........................................................................................1262

25.6Interrupts......................................................................................................1263

25.7DMAInterface................................................................................................1265

25.8ModuleConfiguration.....................................................................................1266

25.9ControlRegisters...........................................................................................1268

25.10Multi-BufferRAM..........................................................................................1329

25.11ParityMemory..............................................................................................1335

25.12MibSPIPinTimingParameters.......................................................................1338

1237

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

25.1Overview

TheMibSPI/MibSPIPisahigh-speedsynchronousserialinput/outputportthatallowsaserialbitstreamof

programmedlength(2to16bits)tobeshiftedinandoutofthedeviceataprogrammedbit-transferrate.

TypicalapplicationsfortheSPIincludeinterfacingtoexternalperipherals,suchasI/Os,memories,display

drivers,andanalog-to-digitalconverters.

TheSPIhasthefollowingattributes:

•16-bitshiftregister

•Receivebufferregister

•11-bitbaudclockgenerator,supportsmaxupto20MHzbaudrate

•Serialclock(SPICLK)pin

•1SPISOMI/SPISIMOpinfordatatransfer,withprogrammablepindirection

•SPIenable(SPIENA)pin

•Upto4slavechipselect(SPISCS[3:0])pins.

•SPICLKcanbeinternally-generated(anddriven)orreceivedfromanexternalclocksource

•Eachwordtransferredcanhaveauniqueformat

•SPIpinscanbeusedasfunctionalordigitalInput/Outputpins(GIOs)

NOTE:SIMO-SlaveInMasterOutPin

SOMI-SlaveOutMasterInPin

CS-SPIChipSelectPin

ENA-SPIEnablePin.

25.1.1WordFormatOptions

Eachwordtransferredcanhaveauniqueformat.Severalformatcharacteristicsareprogrammablefor

eachwordtransferred:

•SPICLKfrequency

•Characterlength(2to16bits)

•Phase(withandwithoutdelay)

•Polarity(highorlow)

•Parityenabled/disabled

•ChipSelect(CS)timersforsetupandhold

•Shiftdirection(MostSignificantBit(MSB)-firstorLeastSignificantBit(LSB)-first)

•Multi-pinparallelmodes

25.1.2Multi-buffering(Mib)support

TheMibSPIhasaprogrammablebuffermemorythatenablesprogrammedtransmissiontobecompleted

withoutCPUintervention.ThebuffersarecombinedindifferentTransferGroups(TGs)thatcanbe

triggeredbyexternalevents(timers,Input/Outputactivity,etc.)orbytheinternaltickcounter.Theinternal

tickcountersupportsperiodictriggerevents.EachbufferoftheMibSPIcanbeassociatedwithdifferent

DMAchannelsindifferentTGs,allowingtheusertomovedatabetweeninternalmemoryandanexternal

slavewithminimalCPUinteraction.

1238

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOperatingModes

25.1.2.1Multi-bufferMode

Multi-bufferModeisanextensiontotheSPI.Inmulti-buffermode,manyextendedfeaturesare

configurable:

•Numberofbuffersforeachperipheral(ordatasource/destination,upto128bufferssupported)or

group(upto8groupings)

•Triggersforeachgroups,triggertypes,triggersourcesforindividualgroups(14externaltrigger

sourcesand1internaltriggersourcesupported)

•Memoryfaultdetectionviaaninternalparitycircuit

•NumberofDMA-controlledbuffersandnumberofDMArequestchannels(upto8foreachoftransmit

andreceive)

•NumberofDMAtransfersforeachbuffer(upto65536wordsforupto8buffers)

•UninterruptedDMAbuffertransfer(NOBREAKbuffer)

25.1.2.2CompatibilityMode

CompatibilityModeoftheMibSPImakesitbehaveexactlylikeastandardplatformSPImoduleand

ensuresfullcompatibilitywithotherSPIs.AllfeaturesincompatibilitymodeoftheMibSPIaredirectly

applicabletoaSPI.Multi-bufferModefeaturesarenotavailableinCompatibilityMode.

NOTE:TheSPIDAT0registerisnotaccessibleinthemulti-buffermodeofMibSPI.Itisonly

accessibleincompatibilitymode.

25.1.3TransmissionLock(Multi-BufferModeMasterOnly)

Someslavedevicesrequiretransmissionofacommandfollowedbydata.InthiscasetheSPItransaction

shouldnotbeinterruptedbyanothergrouptransfer.TheLOCKbitwithineachbufferallowsaconsecutive

transfertohappenwithoutbeinginterruptedbyanotherhigher-prioritygrouptransfer.

25.2OperatingModes

TheSPIcanbeconfiguredviasoftwaretooperateaseitheramasteroraslave.TheMASTERbit

(SPIGCR1[0])selectstheconfigurationoftheSPISIMOandSPISOMIpins.CLKMODbit(SPIGCR1[1])

determineswhetheraninternalorexternalclocksourcewillbeused.

Theslavechipselect(SPISCS[3:0])pins,areusedwhencommunicatingwithmultipleslavedevices.

WhentheawriteoccurstoSPIDAT1inmastermode,theSPISCSpinsareautomaticallydriventoselect

thespecifiedslave.

Handshakingmechanism,providedbytheSPIENApin,enablesaslaveSPItodelaythegenerationofthe

clocksignalsuppliedbythemasterifitisnotpreparedforthenextexchangeofdata.

25.2.1PinConfigurations

TheSPIsupportsdataconnectionsasshowninTable25-1.

NOTE:

1.WhentheSPICS[3:0]signalsaredisabled,thechip-selectfieldinthetransmitdatais

notused.

2.WhentheSPIENAsignalisdisabled,theSPIENApinisignoredinmastermode,and

notdrivenaspartoftheSPItransactioninslavemode.

1239

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1Thisisarepresentativediagram,whichshowsthree-pinmodehardware.2TXBUF,RXBUF,andSHIFT_REGISTERareuser-invisibleregisters.3SPIDAT0andSPIDAT1areuser-visible,andarephysicallymappedtothecontentsofTXBUF.4SPISIMO,SPISOMI,SPICLKpindirectionsdependontheMasterorSlaveMode.

TXshiftregisterSPIBUFRXBUFTXBUF

PeripheralWritePeripheralRead

TXFULL

RXOVRNINT0RXOVRINT

16

1616

RXEMPTY

RXINTENA

Clockpolarity

Clockphase

Prescale

Charlen

SPISIMO

SPISOMI

Peripheralclock

SPIclockgenerationlogic

SPIDAT0/SPIDAT1

TXINTENA

KernelFSM

SPICLK

ModegenerationlogicCLKMOD

INT1

INT_LVL

RXshiftregister

16

PinDirectionsinSlaveModeENA



OperatingModeswww.ti.com

Table25-1.PinConfigurations

Pin

MasterMode

SlaveMode

SPICLK

Drivestheclocktoexternaldevices

Receivestheclockfromtheexternalmaster

SPISOMI

Receivesdatafromtheexternalslave

Sendsdatatotheexternalmaster

SPISIMO

Transmitsdatatotheexternalslave

Receivesdatafromtheexternalmaster

SPIENA

SPIENAdisabled:

SPIENAenabled:

SPIENAdisabled:

SPIENAenabled:

GIO

ReceivesENAsignal

GIO

ReceivesENAsignalfromthe

fromtheexternalslave

externalmaster

SPICS[3:0]

SPICSdisabled:

SPICSenabled:

SPICSdisabled:

SPICSenabled:

GIO

Selectsoneormore

GIO

ReceivestheCSsignalfrom

slavedevices

theexternalmaster

25.2.2DataHandling

Figure25-1showstheSPItransactionhardware.TXBUFandRXBUFareinternalbuffersthatare

intendedtoimprovetheoverallthroughputofdatatransfer.TXBUFisatransmitbuffer,whileRXBUFisa

receivebuffer.

Figure25-1.SPIFunctionalLogicDiagram

1240

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOperatingModes

25.2.2.1DataSequencingwhenSPIDAT0orSPIDAT1isWritten

•IfboththeTXshiftregisterandTXBUFareempty,thenthedataisdirectlycopiedtotheTXshift

register.FordeviceswithDMA,ifDMAisenabled,atransmitDMArequest(TX_DMA_REQ)is

generatedtocausethenextwordtobefetched.Iftransmitinterruptsareenabled,atransmitter-empty

interruptisgenerated.

•IftheTXshiftregisterisalreadyfullorisintheprocessofshiftingandifTXBUFisexptythenthedata

writtentoSPIDAT0/SPIDAT1iscopiedtoTXBUFandTXFULLflagissetto1atthesametime.

•Whenashiftoperationiscomplete,datafromtheTXBUF(ifitisfull)iscopiedintoTXshiftregister

andtheTXFULLflagisclearedto0toindicatethatnextdatacanbefetched.AtransmitDMArequest

(ifenabled)oratransmitter-emptyinterrupt(ifenabled)isgeneratedatthesametime.

25.2.2.2DataSequencingwhenAllBitsShiftedintoRXSHIFTRegister

•IfbothSPIBUFandRXBUFareempty,thereceiveddatainRXshiftregisterisdirectlycopiedinto

SPIBUFandthereceiveDMArequest(ifenabled)isgeneratedandthereceive-interrupt(ifenabled)is

generated.TheRXEMPTYflaginSPIBUFisclearedatthesametime.

•IfSPIBUFisalreadyfullattheendofreceivecompletion,theRXshiftregistercontentsiscopiedto

RXBUF.AreceiveDMArequestisgenerated,ifenabled.Thereceivecompleteinterruptlineremains

high.

•IfSPIBUFisreadbytheCPUorDMAandifRXBUFisfull,thenthecontentsofRXBUFarecopiedto

SPIBUFassoonasSPIBUFisread.RXEMPTYflagremainscleared,indicatingthatSPIBUFisstill

full.

•IfbothSPIBUFandRXBUFarefull,thenRXBUFwillbeoverwrittenandtheRXOVRinterruptflagis

setandaninterruptisgenerated,ifenabled.

1241

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MasterSlave(Master=1;CLKMOD=1)(Master=0;CLKMOD=0)

SPIDAT0SPIDAT0MSBLSBMSBLSBWritetoSPIDAT0

SPISOMISPISIMO

SPISOMISPISIMO

SPICLKSPICLK

WritetoSPIDAT

SPICLKSIMOSOMI



OperatingModeswww.ti.com

25.2.2.3Three-PinMode

Inmastermodeconfiguration(MASTER=1andCLKMOD=1),theSPIprovidestheserialclockonthe

SPICLKpin.DataistransmittedontheSPISIMOpinandreceivedontheSPISOMIpin(seeFigure25-2).

Datawrittentotheshiftregister(SPIDAT0/SPIDAT1)initiatesdatatransmissionontheSPISIMOpin,

MSBfirst.Simultaneously,receiveddataisshiftedthroughtheSPISOMIpinintotheLSBoftheSPIDAT0

register.Whentheselectednumberofbitshavebeentransmitted,thereceiveddataintheshiftregisteris

transferredtotheSPIBUFregisterfortheCPUtoread.Dataisstoredright-justifiedinSPIBUF.

SeeSection25.2.2.1andSection25.2.2.2fordetailsaboutthedatahandlingfortransmitandreceive

operations.

Inslavemodeconfiguration(MASTER=0andCLKMOD=0),datashiftsoutontheSPISOMIpinandin

ontheSPISIMOpin.TheSPICLKpinisusedastheinputfortheserialshiftclock,whichissuppliedfrom

theexternalnetworkmaster.Thetransferrateisdefinedbythisclock.

DatawrittentotheSPIDAT0orSPIDAT1registeristransmittedtothenetworkwhentheSPICLKsignalis

receivedfromthenetworkmaster.Toreceivedata,theSPIwaitsforthenetworkmastertosendthe

SPICLKsignalandthenshiftsdataontheSPISIMOpinintotheRXshiftregister.Ifdataistobe

transmittedbytheslavesimultaneously,itmustbewrittentotheSPIDAT0orSPIDAT1registerbeforethe

beginningoftheSPICLKsignal.

Figure25-2.SPIThree-PinOperation

1242

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MasterSlave(Master=1;CLKMOD=1)(Master=0;CLKMOD=0)

SPIDAT1SPIDAT0MSBLSBMSBLSBWritetoSPIDAT1

SPISOMI

SPISOMISPISIMO

SPICLKSPICLK

SPISCSSPISCS

Write to SPIDAT1

SPICLKSPISIMOSPISOMISPICSCS



www.ti.comOperatingModes

25.2.3OperationwithSPISCS

Inmastermode,eachchipselectsignalisusedtoselectaspecificslave.Inslavemode,chipselect

signalisusedtoenable/disablethetransfer.Chip-selectfunctionalityisenabledbysettingoneofthe

SPISCS[3:0]pinsaschipselects.ItisdisabledbysettingallSPISCS[3:0]pinsasGIOsinSPIPC0[3:0]

MultipleChipSelects

TheSPISCS[3:0]pinsthatareusedmustbeconfiguredasfunctionalpinsintheSPIPC0[3:0]register.

ThedefaultpatterntobeputontheSPISCS[3:0]whenalltheslavesaredeactivatedissetintheSPIDEF

register.Thispatternallowsdifferentslaveswithdifferentchip-selectpolaritytobeactivatedbytheSPI.

Themaster-modeSPIiscapableofdrivingeither0or1astheactivevalueforanySPISCS[3:0]output

pin.ThedrivestateforSPISCS[3:0]pinsiscontrolledbytheCSNRfieldofSPIDAT1.Thepatternthatis

drivenwillselecttheslavetowhichthetransmissionisdedicated.

Inslavemode,theSPIcanonlybeselectedbyanactivevalueof0onanyofitsselectedSPISCSinput

pin.

Figure25-3.OperationwithSPISCS

1243

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MasterSlave(Master=1;CLKMOD=1)(Master=0;CLKMOD=0)

SPIDAT0SPIDAT0MSBLSBMSBLSBWritetoSPIDAT0

SPISOMISPISIMO

SPISOSPISIMO

SPICLKSPICLK

SPIENASPIENA

WritetoSPIDAT0

WritetoSPIDAT0(SLAVE)

WritetoSPIDAT0(master)

SPICLKSPISIMOSPISOMISPIENA



OperatingModeswww.ti.com

25.2.4OperationwithSPIENA

TheSPIENAoperatesasaWAITsignalpin.Forboththeslaveandthemaster,theSPIENApinmustbe

configuredtobefunctional(SPIPC0[8]=1).Inthismode,anactivelowsignalfromtheslaveonthe

SPIENApinallowsthemasterSPItodrivetheclockpulsestream.Ahighsignaltellsthemastertohold

theclocksignal(anddelaySPIactivity).

IftheSPIENApinisinhigh-zmode(ENABLE_HIGHZ=1),theslavewillputSPIENAintothehigh-

impedanceonceitcompletesreceivinganewcharacter.IftheSPIENApinisinpush-pullmode

(ENABLE_HIGHZ=0),theslavewilldriveSPIENAto1onceitcompletesreceivinganewcharacter.The

slavewilldriveSPIENAlowagainforthenextwordtotransfer,afternewdataiswrittentotheslaveTX

shiftregister.

Inmastermode(CLKMOD=1),iftheSPIENApinisconfiguredasfunctional,thenthepinwillactasan

inputpin.IfconfiguredasaslaveSPIandasfunctional,theSPIENApinactsasanoutputpin.

NOTE:Duringatransfer,ifaslave-modeSPIdetectsadeassertionofitschipselectbeforeits

internalcharacterlengthcounteroverflows,thenitplacesSPISOMIandSPIENA(if

ENABLE_HIGHZbitissetto1)inhigh-zmode.Oncethisconditionhasoccurred,ifa

SPICLKedgeisdetectedwhilethechipselectisdeasserted,thentheSPIstopsthattransfer

andsetsanDLENERRerrorflagandgeneratesaninterrupt(ifenabled).

Figure25-4.OperationwithSPIENA

1244

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MasterSlave(Master=1;CLKMOD=1)(Master=0;CLKMOD=0)

SPIDAT1SPIDAT0MSBLSBMSBLSBWritetoSPIDAT1

SPISOMISPISIMO

SPISOMISPISIMO

SPICLKSPICLK

SPISCSSPISCS

WritetoSPIDAT0

WritetoSPIDAT0(SLAVE)

WritetoSPIDAT1(MASTER)SPISIMOSPISOMISPIENA

SPIENASPIENA

SPISCSSPICLK



www.ti.comOperatingModes

25.2.5Five-PinOperation(HardwareHandshaking)

Five-pinoperationcombinesthefunctionalityofthree-pinmode,plustheenablepinandoneormorechip

selectpins.Theresultisfullhardwarehandshaking.Tousethismode,boththeSPIENApinandthe

requirednumberofSPISCS[3:0]pinsmustbeconfiguredasfunctionalpins.

IftheSPIENApinisinhigh-zmode(ENABLE_HIGHZ=1),theslaveSPIwillputthissignalintothehigh-

impedancestatebydefault.TheslavewilldrivethesignalSPIENAlowwhennewdataiswrittentothe

slaveshiftregisterandtheslavehasbeenselectedbythemaster(SPISCSislow).

IftheSPIENApinisinpush-pullmode(ENABLE_HIGHZ=0),theslaveSPIdrivesthispinhighbydefault

whenitisinfunctionalmode.TheslaveSPIwilldrivetheSPIENAsignallowwhennewdataiswrittento

theslaveshiftregister(SPIDAT0/SPIDAT1)andtheslaveisselectedbythemaster(SPISCSislow).Ifthe

slaveisdeselectedbythemaster(SPISCSgoeshigh),theslaveSPIENAsignalisdrivenhigh.

NOTE:Push-pullmodeoftheSPIENApincanbeusedonlywhenthereisasingleslaveinthe

system.WhenmultipleSPIslavedevicesareconnectedtothecommonSPIENApin,allof

theslavesshouldconfiguretheirSPIENApinsinhigh-Zmode.

Inmastermode,iftheSPISCSpinsareconfiguredasfunctionalpins,thenthepinswillbeinoutputmode.

Awritetothemaster’sSPIDAT1/SPIDAT0registerwillautomaticallydrivetheSPISCSsignalslow.The

masterwilldrivetheSPISCSsignalshighagainaftercompletingthetransferofthebitsofthedata.

Inslavemode(CLKMOD=0),theSPISCSpinswillactasSPIfunctionalinputs.

Figure25-5.SPIFive-PinOptionwithSPIENAandSPISCS

1245

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






OperatingModeswww.ti.com

25.2.6DataFormats

TosupportmultipledifferenttypesofslavesinoneSPInetwork,fourindependentdatawordformatsare

implementedthatallowconfigurationofindividualdatawordlength,polarity,phase,andbitrate.Each

wordtransmittedcanselectwhichdataformattouseviathebitsDFSEL[1:0]initscontrolfieldfromoneof

thefourdatawordformats.Samedataformatcanbesupportedonmultiplechipselects.

Dataformats0,1,2,and3canbeconfiguredthroughSPIFMTxcontrolregisters.

EachSPIdataformatincludesthestandardSPIdataformatwithenhancedfeatures:

•Individually-configurableshiftdirectioncanbeusedtoselectMSBfirstorLSBfirst,whereasthe

positionoftheMSBdependsontheconfigureddatawordlength.

•Receivedataisautomaticallyright-aligned,independentofshiftdirectionanddatawordlength.

Transmitdatahastobewrittenright-alignedintotheSPIandtheinternalshiftregisterwilltransmit

accordingtotheselectedshiftdirectionanddatawordlengthforcorrecttransfer.

•Toincreasefaultdetectionofdatatransmissionandreception,anoddorevenparitybitcanbeadded

attheendofadataword.Theparitygeneratorcanbeenabledordisabledindividuallyforeachdata

format.Ifareceivedparitybitdoesnotmatchwiththelocallycalculatedparitybit,theparityerrorflag

(PARITYERR)issetandaninterruptisasserted(ifenabled).

Sincethemaster-modeSPIcandrivetwoconsecutiveaccessestothesameslave,an8-bitdelaycounter

isavailabletosatisfythedelaytimefordatatoberefreshedintheaccessedslave.Thedelaycountercan

beprogrammedaspartofthedataformat.

CHARLEN[4:0]specifiesthenumberofbits(2to16)inthedataword.TheCHARLEN[4:0]valuedirects

thestatecontrollogictocountthenumberofbitsreceivedortransmittedtodeterminewhenacomplete

wordistransferred.

Datawordlengthmustbeprogrammedtothesamelengthforboththemasterandtheslave.However,

whenchipselectsareused,theremaybemultipletargetswithdifferentlengthsinthesystem.

NOTE:Datamustberight-justifiedwhenitiswrittentotheSPIfortransmissionirrespectiveofits

characterlengthorwordlength.

Figure25-6showshowa12-bitword(0xEC9)needstobewrittentothetransmitbuffertobetransmitted

correctly.

Figure25-6.FormatforTransmittingan8-BitWord

D15

D14

D13

D12

D11

D10

D9

D8

D7

D6

D5

D4

D3

D2

D1

D0

x

x

x

x

x

x

x

x

1

1

0

0

1

0

0

1

NOTE:Thereceiveddataisalwaysstoredright-justifiedregardlessofthecharacterlengthor

directionofshiftingandispaddedwithleading0swhenthecharacterlengthislessthan16

bits.

Figure25-7showshowa10-bitword(0x0A2)isstoredinthebufferonceitisreceived.

Figure25-7.FormatforReceivingan8-BitWord

D15

D14

D13

D12

D11

D10

D9

D8

D7

D6

D5

D4

D3

D2

D1

D0

0

0

0

0

0

0

0

0

1

0

1

0

0

0

1

0

1246

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Dataisoutputone-halfcyclebeforethefirstrisingedgeofSPICLKandonsubsequentfallingedgesofSPICLKInputdataislatchedontherisingedgeofSPICLK

WriteSPIDAT

SPISIMOSPISOMIreceivesampleMSBD6D5D4          D3           D2D1LSBD6D5D4            D3D2D1D712345678

D0SPICLK

DataisoutputontherisingedgeofSPICLK.InputdataislatchedonthefallingedgeofSPICLK.

WriteSPIDAT

SPICLKSPISIMOreceivesampleMSBD6D5D4D3D2D1D0LSBD6D5          D4D3D2D1D712345678

SPISOMI



www.ti.comOperatingModes

25.2.7ClockingModes

SPICLKmayoperateinfourdifferentmodes,dependingonthechoiceofphase(delay/nodelay)andthe

polarity(risingedge/fallingedge)oftheclock.

ThedatainputandoutputedgesdependonthevaluesofbothPOLARITYandPHASEasshownin

Table25-2.

Table25-2.ClockingModes

POLARITY

PHASE

ACTION

0

0

DataisoutputontherisingedgeofSPICLK.Inputdataislatchedonthefallingedge.

0

1

Dataisoutputonehalf-cyclebeforethefirstrisingedgeofSPICLKandon

subsequentfallingedges.InputdataislatchedontherisingedgeofSPICLK.

1

0

DataisoutputonthefallingedgeofSPICLK.Inputdataislatchedontherisingedge.

1

1

Dataisoutputonehalf-cyclebeforethefirstfallingedgeofSPICLKandon

subsequentrisingedges.InputdataislatchedonthefallingedgeofSPICLK.

Figure25-8toFigure25-11illustratethefourpossibleconfigurationsofSPICLKcorrespondingtoeach

mode.HavingfoursignaloptionsallowstheSPItointerfacewithmanydifferenttypesofserialdevices.

Figure25-8.ClockModewithPolarity=0andPhase=0

Figure25-9.ClockModewithPolarity=0andPhase=1

1247

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Dataisoutputone-halfcyclebeforethefirstfallingedgeofSPICLKandonthesubsequentrisingedgesofSPICLK.InputdataislatchedonthefallingedgeofSPICLK.

WriteSPIDAT

SPICLKSPISIMOSPISOMIreceivesampleMSBD6D5D4D3         D2          D1D0LSBD6D5         D4D3D2         D1D712345678

DataisoutputonthefallingedgeofSPICLK.InputdataislatchedontherisingedgeofSPICLK.

WriteSPIDATSPISIMOSPISOMIreceivesampleMSBD6D5          D4D3D2D1D0LSBD6D5          D4         D3D2D1D712345678

SPICLK



OperatingModeswww.ti.com

Figure25-10.ClockModewithPolarity=1andPhase=0

Figure25-11.ClockModewithPolarity=1andPhase=1

1248

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




43210430124321043012MasterSPIInt.flagSlaveSPIInt.flagSPISOMIfromslaveSPISIMOfrommaster

Clockpolarity=1Clockphase=1

SPISCS

SPICLKsignaloptions:

SPIENA

Clockpolarity=1Clockphase=0Clockpolarity=0Clockpolarity=0Clockphase=0

Clockphase=1



www.ti.comOperatingModes

25.2.8DataTransferExample

Figure25-12illustratesaSPIdatatransferbetweentwodevicesusingacharacterlengthoffivebits.

Figure25-12.FiveBitsperCharacter(5-PinOption)

1249

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






OperatingModeswww.ti.com

25.2.9DecodedandEncodedChipSelect(MasterOnly)

InthisdevicetheSPIcanconnecttoupto4individualslavedevicesusingchip-selectsbyroutingone

wiretoeachslave.The4chipselectsinthecontrolfieldaredirectlyconnectedtothe4pins.Thedefault

valueofeachchipselect(notactive)canbeconfiguredviatheregisterCSDEF.Duringatransmission,

thevalueofthechipselectcontrolfield(CSNR[7:0])oftheSPIDAT1register(SPIDAT1[23:16])isdriven

ontheSPISCS[4:0]pins.Whenthetransmissionfinishesthedefaultchip-selectvalue(definedbythe

CSDEFregister)isputontheSPISCS[4:0]pins.

TheSPIcansupportmorethan4slavesbyusingencodedchipselects.ToconnecttheSPIwithencoded

slavesdevices,theCSNRfieldallowsmultipleactiveSPISCSpinsatthesametime,whichenablesbinary

encodedchipselectsfrom0to16.Touseencodedchipselects,allfourchipselectlineshavetobe

connectedtoeachslavedeviceandeachslaveneedstohaveauniquechip-selectaddress.TheCSDEF

registerisusedtoprovidetheaddressatwhichslavesdevicesareallde-selected.

Userscancombinedecodedandencodedchipselects.Forexample,nSPISCSpinscanbeusedfor

encodingan-bitaddressandtheremainingpinscanbeconnectedtodecoded-modeslaves.

25.2.10VariableChipSelectSetupandHoldTiming(MasterOnly)

Inordertosupportslowslavedevicesadelaycountercanbeconfiguredtodelaydatatransmissionafter

thechipselectisactivated.Aseconddelaycountercanbeconfiguredtodelaythechipselectdeactivation

afterthelastdatabitistransferred.Bothdelaycountersareclockedwithperipheralclock(VCLK).

Ifaparticulardataformatspecificallydoesnotrequiretheseadditionalset-uporholdtimesforthechip

selectpin(s),thentheycanbedisabledinthecorrespondingSPIFMTxregister.

25.2.11HoldChip-SelectActive

Someslavedevicesrequirethechipselectsignaltobeheldcontinuouslyactiveduringseveral

consecutivedatawordtransfers.Otherslavedevicesrequirethechipselectsignaltobedeactivated

betweenconsecutivedatawordtransfers.

CSHOLDisprogrammableinbothmasterandslavemodesofthemulti-buffermodeofSPI.However,the

meaningofCSHOLDinmastermodeandslavemodearedifferent.

NOTE:IftheCSHOLDbitissetwithinthecurrentdatacontrolfield,theprogrammedholdtimeand

thefollowingprogrammedset-uptimewillnotbeappliedbetweentransactions.

25.2.11.1TheCSHOLDBitinMasterMode

Eachwordinamaster-modeSPIcanbeindividuallyinitializedforoneofthetwomodesviatheCSHOLD

bitinitscontrolfield.

IftheCSHOLDbitissetinthecontrolfieldofaword,thechipselectsignalwillnotbedeactivateduntilthe

nextcontrolfieldisloadedwithnewchipselectinformation.Sincethechip-selectismaintainedactive

betweentwotransfers,thechip-selectholddelay(T2CDELAY)isnotappliedattheendofthecurrent

transaction,andthechip-selectset-uptimedelay(C2TDELAY)isnotappliedaswellatthebeginningof

thefollowingtransaction.However,thewaitdelay(WDELAY)willbestillappliedbetweenthetwo

transactions,iftheWDELbitissetwithinthecontrolfield.

Figure25-13showstheSPIpinswhenamaster-modeSPItransfersawordthathasitsCSHOLDbitset.

Thechip-selectpinswillnotbedeassertedafterthecompletionofthisword.Ifthenextwordtotransmit

hasthesamechip-selectnumber(CSNR)value,thechipselectpinswillbemaintaineduntilthe

completionofthesecondword,regardlessofwhethertheCSHOLDbitissetornot.

1250

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




WritetoSPIDAT0(SLAVE)

WritetoSPIDAT1SPICLKSPISIMOSPISOMISPIENA

SPISCS

WritetoSPIDAT1

WritetoSPIDAT0(SLAVE)

WORD1WORD2CSHOLD=1CSHOLD=0



www.ti.comOperatingModes

Figure25-13.TypicalDiagramwhenaBufferinMasterisinCSHOLDMode(SPI-SPI)

25.2.12DetectionofSlaveDesynchronization(MasterOnly)

Whenaslavesupportsgenerationofanenablesignal(ENA),de-synchronizationcanbedetected.With

theenablesignalaslaveindicatestothemasterthatitisreadytoexchangedata.Ade-synchronization

canoccurifoneormoreclockedgesaremissedbytheslave.InthiscasetheslavemayblocktheSOMI

lineuntilitdetectsclockedgescorrespondingtothenextdataword.Thiswouldcorruptthedatawordof

thede-synchronizedslaveandtheconsecutivedataword.Aconfigurable8bittime-outcounter,whichis

clockedwithSPICLK,isimplementedtodetectthisslavemalfunction.Afterthetransmissionhasfinished

(endoflastbittransferred:eitherlastdatabitorparitybit)thecounterisstarted.IftheENAsignal

generatedbytheslavedoesnotbecomeinactivebeforethecounteroverflows,theDESYNCflagisset

andaninterruptisasserted(ifenabled).

NOTE:InconsistencyofDesyncFlaginCompatibilityModeMibSPI

Becauseofthenatureofthiserror,undersomecircumstancesitispossibleforadesync

errordetectedforthepreviousbuffertobevisibleinthecurrentbuffer.Thisisduetothefact

thatreceivecompletionflag/interruptwillbegeneratedwhenthebuffertransferiscompleted.

Butdesyncwillbedetectedafterthebuffertransferiscompleted.So,ifVBUSmasterreads

thereceiveddataquicklywhenanRXINTisdetected,thenthestatusflagmaynotreflectthe

correctdesynccondition.Thisinconsistencyinthedesyncflagisvalidonlyincompatibility

modeofMibSPI.Inmulti-buffermode,thedesyncflagisalwaysguaranteedtobeforthe

currentbuffer.

25.2.13ENASignalTime-Out(MasterOnly)

TheSPIinmastermodewaitsforthehardwarehandshakesignal(ENA)comingfromtheaddressedslave

beforeperformingadatatransfer.ToavoidstallingtheSPIbyanon-responsiveslavedeviceatime-out

valuecanbeconfigured.Ifthetime-outcounteroverflowsbeforeanactiveENAsignalissampledthe

TIMEOUTflaginthestatusregisterSPIFLGissetandtheTIMEOUTflaginthestatusfieldofthe

correspondingbufferisset.

NOTE:Whenthechipselectsignalbecomesactive,nobreaksintransmissionareallowed.The

nextarbitrationisperformedwhilewaitingforthetime-outtooccur.

1251

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






OperatingModeswww.ti.com

25.2.14Data-LengthError

ASPIcangenerateanerrorflagbydetectinganymismatchinlengthofreceivedortransmitteddataand

theprogrammedcharacterlengthundercertainconditions.

Data-LengthErrorinMasterMode:Duringadatatransfer,iftheSPIdetectsade-assertionofthe

SPIENApin(bytheslave)whilethecharactercounterisnotoverflowed,thenanerrorflagissetto

indicateadata-lengtherror.Thiscanbecausedbyaslavereceivingextraclocks(forexample,dueto

noiseontheSPICLKline).

NOTE:InamastermodeSPI,thedatalengtherrorwillbegeneratedonlyiftheSPIENApinis

enabledasafunctionalpin.

Data-LengthErrorinSlaveMode:Duringatransfer,iftheSPIdetectsade-assertionoftheSPISCSpin

beforeitscharacterlengthcounteroverflows,thenanerrorflagissettoindicateadata-lengtherror.This

situationcanariseIftheslaveSPImissesoneormoreSPICLKpulsesfromthemaster.Thiserrorinslave

modeimpliesthatboththetransmittedandreceiveddatawerenotcomplete.

NOTE:Inaslave-modeSPI,thedata-lengtherrorflagwillbegeneratedonlyifatleastoneofthe

SPISCS(x)pinsareconfiguredasfunctional,andarebeingusedforselectingtheslave.

25.2.15ParallelMode(MultipleSIMO/SOMISupport,notavailableonalldevices)

Inordertoincreasethroughput,theparallelmodeoftheSPIenablesthemoduletosenddataovermore

thanonedataline(Parallel2,4or8).Whenparallelmodeisused,thedatalengthmustbesetas16bits.

OnlymoduleMIBSPIP5supportsParellelMode.

Thisfeatureincreasesthroughputby2for2pins,by4for4pins,orby8for8pins.

Parallelmodesupportsthefollowingfeatures:

•Scalabledatalines(1,2,4,8)perdirection.(SOMIandSIMOlines)

•Allclockschemesaresupported(clockphaseandpolarity)

•Parityissupported.Theparitybitwillbetransmittedonbit0oftheSIMO/SOMIlines.Thereceiveparity

isexpectedonbit0oftheSOMI/SIMOpins.

ParallelmodecanbeprogrammedusingthePMODEx[1:0]bitsofSPIPMCTRLregister.See

Section25.9.24fordetailsaboutthisregister.

Afterresettheparallelmodeselectionbitsarecleared(singleSIMO/SOMIlines).

1252

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1514131211  10987654321

SIMO[7:0]SOMI[7:0]SPIShiftregister0

SIMO7

SIMO6SIMO5SIMO4SIMO3SIMO2SIMO1SIMO0

MULTIPLEXERParallelmode

SOMI7SOMI6SOMI5SOMI4SOMI3SOMI2SOMI1SOMI0DEMULTIPLEXER

1514  13  12  1110987654321

SIMO[7:0]SOMI[7:0]

SPIShiftregister

SIMO7

SIMO6SIMO5SIMO4SIMO3SIMO2SIMO1SIMO0

MULTIPLEXERParallelmode0

SOMI7SOMI6SOMI5SOMI4SOMI3SOMI2SOMI1SOMI0DEMULTIPLEXER



www.ti.comOperatingModes

25.2.15.1ParallelModeBlockDiagram

Figure25-14andFigure25-15showtheparallelconnectionstotheSPIshiftregister.

Figure25-14.BlockDiagramShiftRegister,MSBFirst

Figure25-15.BlockDiagramShiftRegister,LSBFirst

1253

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






OperatingModeswww.ti.com

25.2.15.2ParallelModePinMapping,MSBFirst

Table25-3andTable25-4describetheSOMIandSIMOpinmappingwhentheSPIisusedinparallel

mode(1,2,4,8)pinmode,MSBfirst.

NOTE:MSB-firstorLSB-firstcanbeconfiguredusingtheSHIFTDIRxbitoftheSPIFMTxregisters.

Table25-3.PinMappingforSIMOPinwithMSBFirst

ParallelMode

ShiftRegisterBit

SIMO[7:0]

1

15

0

2

15

1

7

0

4

15

3

11

2

7

1

3

0

8

15

7

13

6

11

5

9

4

7

3

5

2

3

1

1

0

Table25-4.PinMappingforSOMIPinwithMSBFirst

ParallelMode

ShiftRegisterBit

SOMI[7:0]

1

0

0

2

0

0

8

1

4

0

0

4

1

8

2

12

3

8

0

0

2

1

4

2

6

3

8

4

10

5

12

6

14

7

1254

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOperatingModes

25.2.15.3ParallelModePinMapping,MSB-First,LSB-First

Table25-5andTable25-6describetheSIMOandSOMIpinmappingwhenSPIisusedinparallelmode

(1,2,4,8)pinmode,LSBfirst.

Table25-5.PinMappingforSIMOPinwithLSBFirst

ParallelMode

ShiftRegisterBit

SIMO[7:0]

1

0

0

2

8

1

0

0

4

12

3

8

2

4

1

0

0

8

14

7

12

6

10

5

8

4

6

3

4

2

2

1

0

0

Table25-6.PinMappingforSOMIPinwithLSBFirst

ParallelMode

ShiftRegisterBit

SOMI[7:0]

1

15

0

2

7

0

15

1

4

3

0

7

1

11

2

15

3

8

1

0

3

1

5

2

7

3

9

4

11

5

13

6

15

7

1255

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

VCLKSPICLKSIMO[1]SIMO[0]SOMI[1]SOMI[0]

Shiftregister

151413  12  11109876543210

SIMO[1]SIMO[0]SOMI[0]SOMI[1]

ConceptualBlockDiagram



OperatingModeswww.ti.com

25.2.15.42-DataLineMode(MSBFirst,Phase0,Polarity0)

In2-datalinemode(mastermode)theshiftregisterbits15and7willbeconnectedtothepinsSIMO[1]

andSIMO[0],andtheshiftregisterbits8and0willbeconnectedtothepinsSOMI[1]andSOMI[0]orvice

versainslavemode.AfterwritingtotheSPIDAT0/SPIDAT1register,thebits15and7willbeoutputon

SIMO[1]andSIMO[0]ontherisingedgeifSPICLK.WiththefallingclockedgeoftheSPICLK,the

receiveddataonSOMI[1]andSOMI[0]willbelatchedtotheshiftregisterbits8and0.Thesubsequent

risingedgeofSPICLKwillshiftthedataintheshiftregisterby1bittotheleft.(SIMO[1]willshiftthedata

outfrombit15to8,SIMO[0]willshiftthedataoutfrombit7to0).AftereightSPICLKcycles,whenthefull

datawordistransferred,theshiftregister(16bits)iscopiedtothereceivebuffer,andtheRXINTflagwill

beset.Figure25-16showstheclock/datadiagramofthe2-datalinemode.Figure25-17showsthe

timingofatwo-pinparalleltransfer.

Figure25-16.2-dataLineMode(Phase0,Polarity0)

Figure25-17.Two-PinParallelModeTimingDiagram(Phase0,Polarity0)

1256

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

VCLKSPICLKSIMO[3]SIMO[2]SIMO[1]SIMO[0]SOMI[3]SOMI[2]SOMI[1]SOMI[0]

Shift register

SIMO[3]SOMI[0]SOMI[1]

SIMO[1]SIMO[0]

SOMI[2]SOMI[3]

SIMO[2]

ConceptualBlockDiagram

15  14  13  12 11  10   9   8    7    6   5    4    3   2    1   0



www.ti.comOperatingModes

25.2.15.54-DataLineMode(MSBFirst,Phase0,Polarity0)

In4-datalinemode(mastermode)theshiftregisterbits15,11,7,and3willbeconnectedtothepins

SIMO[3],SIMO[2],SIMO[1],andSIMO[0],andtheshiftregisterbits12,8,4,and0willbeconnectedto

thepinsSOMI[3],SOMI[2],SOMI[1],andSOMI[0](orviceversainslavemode).Afterwritingto

SPIDAT1/SPIDAT0,thebits15,11,7,and3willbeoutputonSIMO[3],SIMO[2],SIMO[1],andSIMO[0]

ontherisingedgeofSPICLK.WiththefallingclockedgeoftheSPICLK,thereceiveddataonSOMI[3],

SOMI[2],SOMI[1]andSOMI[0]willbelatchedtoshiftregisterbits12,8,4,and0.Thesubsequentrising

edgeofSPICLKwillshiftdataintheshiftregisterby1bittotheleft(SIMO[3]willshiftthedataoutfrom

bit15to12,SIMO[2]willshiftthedataoutfrombit11to8,SIMO[1]willshiftthedataoutfrombit7to4,

SIMO[0]willshiftthedataoutfrombit3to0).AfterfourSPICLKcycles,whenthefulldatawordis

transferred,theshiftregister(16bits)iscopiedtothereceivebuffer,andtheRXINTflagwillbeset.

Figure25-18showstheclock/datadiagramofthefour-datalinemode.Figure25-19,showsthetiming

diagramforfour-datalinemode.

Figure25-18.4-DataLineMode(Phase0,Polarity0)

Figure25-19.4PinsParallelModeTimingDiagram(Phase0,Polarity0)

1257

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Shiftregister1514131211109876543210SOMI[0]SIMO[7]SIMO[6]SIMO[5]SIMO[4]SIMO[3]SIMO[2]SIMO[1]SIMO[0]

SOMI[1]SOMI[2]SOMI[3]SOMI[4]SOMI[5]SOMI[6]SOMI[7]

Conceptualblockdiagram



OperatingModeswww.ti.com

25.2.15.68-DataLineMode(MSBFirst,Phase0,Polarity0)

In8-datalinemode(mastermode)theshiftregisterbits15,13,11,9,7,5and3willbeconnectedtothe

pinsSIMO[7],SIMO[6],SIMO[5],SIMO[4],SIMO[3],SIMO[2],SIMO[1],andSIMO[0],andtheshift-register

bits14,12,10,8,6,4,and0willbeconnectedtothepinsSOMI[7],SOMI[6],SOMI[5],SOMI[4],SOMI[3],

SOMI[2],SOMI[1],andSOMI[0](orviceversainslavemode).

AfterwritingtoSPIDAT0/SPIDAT1,thebits15,13,11,9,7,5,3,and1willbeoutputonSIMO[7],

SIMO[6],SIMO[5],SIMO[4],SIMO[3],SIMO[2],SIMO[1],andSIMO[0],ontherisingedgeofSPICLK.On

thefallingclockedgeoftheSPICLK,thereceiveddataonSOMI[8],SOMI[7],SOMI[6],SOMI[5],SOMI[4],

SOMI[3],SOMI[2],SOMI[1],andSOMI[0]willbelatchedtotheshiftregisterbits14,12,10,8,6,4,2,and

0.

ThesubsequentrisingedgeofSPICLKwillshiftthedataintheshiftregisterbyonebittotheleft.Aftertwo

SPICLKcycles,whenthefulldatawordistransferredtheshiftregister(16bits)iscopiedtothereceive

buffer,andtheRXINTflagwillbeset.Figure25-20showstheclock/datadiagramofthe8-datalinemode.

Figure25-21showsthepintimingsfor8-datalinemode.

Figure25-20.Eight-dataLineMode(Phase0,Polarity0)

NOTE:ParitySupport

Usingtheparitysupportinparallelmodemayseriouslyaffectthroughput.Foraneight-line

modetotransfer16bitsofdata,onlytwoSPICLKpulsesareenough.Ifparityisenabled,

oneextraSPICLKpulsewillbeusedtotransferandreceivetheparitybit.Paritywillbe

transmittedandreceivedonthe0thlineregardlessof1/2/4/8-linemodes.Duringtheparity

bittransfer,otherdatabitsarenotvalid.

1258

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

15

14

13

12

11

10

9

8

7

6

5

4

3

2

1

0

VCLKSPICLKSIMO[7]SIMO[6]SIMO[5]SIMO[4]SIMO[3]SIMO[2]SIMO[1]SIMO[0]SOMI[7]SOMI[6]SOMI[5]SOMI[4]SOMI[3]SOMI[2]SOMI[1]SOMI[0]



www.ti.comOperatingModes

Figure25-21.8PinsParallelModeTimingDiagram(Phase0,Polarity0)

NOTE:ModuloCountParallelModeisnotsupportedinthisdevice.

1259

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






TestFeatureswww.ti.com

25.2.16ContinuousSelf-Test(Master/Slave)

Duringdatatransfer,theSPIcomparesitsowninternaltransmitdatawithitstransmitdataonthebus.The

samplepointforthecompareisatone-halfSPIclockaftertransmitpoint.Ifthedataonthebusdoesnot

matchtheexpectedvalue,thebit-error(BITERR)flagissetandaninterruptisassertedifenabled.

NOTE:Thecompareismadefromtheoutputpinusingitsinputbuffer.

25.2.17HalfDuplexMode

SPIbyprotocolisFullDuplexinnature,whichmeanssimultaneousTX&RXoperationshappenontwo

separatedatapinsSIMOandSOMI.However,itispossibletouseSPI/MibSPItodotheTX-only

operationalone(ignoringtheRXdata),andRX-onlyoperation(usingdummyTXdataandignoringtheTX

pin).ButthiswillrequirethatbothSOMI&SIMOlinesarebondedoutinachiptobeabletosupportboth

TX-onlyorRX-onlyfeatures.

25.2.17.1HalfDuplexModeinMaster

TheHalfDuplexModegivesanadditionalflexibilitytousetheSIMOpinwhichisnormallyusedTXpinin

MastermodetoworklikeanRXpinwhiletheHDUPLEX_ENAxbitissetto‘1’.InHalfDuplexMaster

mode,SIMOpinitselfactsasanRXpin.SwitchingbetweenFullDuplexandHalfDuplexcanbeachieved

usingtheSPIFMTxregistersbeingselectedusingtheDFSEL[1:0]bitsofSPIDATxorTXRAMlocations.

25.2.17.2HalfDuplexModeinSlave

IncaseofSlavemode,theSIMOpinwhichisnormallyanRXpin,willactasaTXpinwhilethe

HDUPLEX_ENAxbitissetto‘1’.InHalfDuplexSlavemode,SIMOpinitselfactsasaTXpin.Switching

betweenFullDuplexandHalfDuplexcanbeachievedusingtheSPIFMTxregistersbeingselectedusing

theDFSEL[1:0]bitsofSPIDATxorTXRAMlocations.

25.3TestFeatures

25.3.1InternalLoop-BackTestMode(MasterOnly)

Theinternalloop-backself-testmodecanbeutilizedtotesttheSPItransmitandreceivepaths,including

theshiftregisters,theSPIbufferregisters,andtheparitygenerator.Inthismodethetransmitsignalis

internallyfedbacktothereceiver,whereastheSIMO,SOMI,andCLKpinaredisconnected;thatis,the

transmitteddataisinternallytransferredtothecorrespondingreceivebufferwhileexternalsignalsremain

unchanged.

ThismodeallowstheCPUtowriteintothetransmitbuffer,andcheckthatthereceivebuffercontainsthe

correcttransmitdata.Ifanerroroccursthecorrespondingerrorissetwithinthestatusfield.

NOTE:Thismodecannotbechangedduringtransmission.

1260

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1Thisdiagramisintendedtoillustrateloopbackpathsandthereforemayomitsomenormal-modepaths.trReeeeeeeeee

TXRX

TXSHIFTREG

RXSHIFTREG

CheckstheanalogloopbackpaththroughthetransmitbufferCheckstheanalogloopbackpaththroughthereceivebuffer

Digital loopback path

RXP_ENALPBK_TYPE



www.ti.comTestFeatures

25.3.2Input/OutputLoopbackTestMode

Input/OutputLoopbackTestmodesupportsthetestingofallInput/Outputpinswithouttheaidofan

externalinterface.Loopbackcanbeconfiguredaseitheranalog-loopback(loopbackthroughthepin-level

input/outputbuffers)ordigitalloopback(internaltotheSPImodule).WithInput/OutputLoopback,all

functionalfeaturesoftheSPIcanbetested.Transmitdataisfedbackthroughthereceive-dataline(s).

SeeFigure25-22foradiagramofthetypesoffeedbackavailable.TheIOLPBKTSTCRregisterdefinesall

oftheavailablecontrolfields.

Inloopbackmode,itisalsopossibletoinducevariouserrorconditions.SeeSection25.9.42fordetailsof

theregisterfieldcontrollingthesefeatures.

InInput/Outputloopbacktestmodes,evenwhenthemoduleisinslavemode,theSPICLKisgenerated

internally.ThisSPICLKisusedforallloopback-modeSPItransactions.Slave-modefeaturescanbe

testedwithoutthehelpofanothermasterSPI,usingtheinternally-generatedSPICLK.Chipselectsare

alsogeneratedbytheslaveitselfwhileitisinInput/Outputloopbackmode.

InInput/Outputloopbacktestmodes,ifthemoduleisinmastermode,thenENAsignalisalsogenerated

byinternallogicsothatanexternalinterfaceisnotrequired.

NOTE:UsageGuidelineforInput/OutputLoopback

Input/OutputLoopbackmodeshouldbeusedwithcautionbecause,insomeconfigurations,

eventhereceivepinswillbedrivenwithtransmitdata.Duringtesting,itshouldbeensured

thatnoneoftheSPIpinsaredrivenbyanyotherdeviceconnectedtothem.Otherwise,if

analogloopbackisselectedinI/OLoopbackmode,thentestingmaydamagethedevice.

Figure25-22.I/OPathsduringI/OLoopbackModes

1261

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






General-PurposeI/Owww.ti.com

25.3.2.1IOLoopbackModeOperationinSlaveMode

Inmulti-bufferslavemode,therearesomeadditionalrequirementsforusingI/Oloopbackmode(IOLPBK).

Inmulti-bufferslavemode,thechip-selectpinsarethetriggersforvariousTGs.EnablingtheIOLPBK

modebywriting0xAtotheIOLPBTSTENAbitsoftheIOLPBKTSTCRregistertriggersTG0bydriving

SPISCS[3:0]to0x0.Theactualnumberofchipselectscanbeprogrammedtohaveanyorallofthe

SPISCSpinsasfunctional.AllotherconfigurationsshouldbecompletedbeforeenablingtheIOLPBK

modeinmulti-bufferslavemodesinceittriggersTG0.

Afterthefirstbuffertransferiscompleted,theCSNR[3:0]fieldofthecurrentbufferisusedtotriggerthe

nextbuffer.So,ifmultipleTGsaredesiredtobetested,thentheCSNRfieldofthefinalbufferineachTG

shouldholdthenumberofthenextTGtobetriggered.AslongasTGboundariesarewelldefinedandare

enabled,thecompletionofoneTGwilltriggerthenextTG.

Tostopthetransferinmulti-bufferslavemodeinI/OLoopbackconfiguration,eitherIOLPBKmodecanbe

disabledbywriting0x5totheIOLPBTSTENAbitsoralloftheTGscanbedisabled.

25.4General-PurposeI/O

AlloftheSPIpinsmaybeprogrammedviatheSPIPCxcontrolregisterstobeeitherfunctionalorgeneral-

purposeI/Opins.

IftheSPIfunctionistobeused,applicationsoftwaremustensurethatatleasttheSPICLKpinandthe

SOMIand/orSIMOpinsareconfiguredasSPIfunctionalpins,andnotasGIOpins,orelsetheSPIstate

machinewillbeheldinreset,preventingSPItransactions.

SPIpinssupport:

•internalpull-upresistors

•internalpull-downresistors

•open-drainorpush-pullmode

25.5Low-PowerMode

TheSPIcanbeputintoeitherlocalorgloballow-powermode.Globallow-powermodeisassertedbythe

systemandisnotcontrolledbytheSPI.Duringgloballow-powermode,allclockstotheSPIareturned

off,makingthemodulecompletelyinactive.

Locallow-powermodeisassertedbysettingthePOWERDOWN(SPIGCR1[8])bit;settingthisbitstops

theclockstotheSPIinternallogicandregisters.SettingthePOWERDOWNbitcausestheSPItoenter

locallow-powermodeandclearingthePOWERDOWNbitcausesSPItoexitfromlocallow-powermode.

Allregistersremainaccessibleduringlocalpower-downmode,sincetheclocktotheSPIregistersis

temporarilyre-enabledforeachaccess.RAMbuffersarealsoaccessibleduringlowpowermode.

NOTE:Sinceenteringalow-powermodehastheeffectofsuspendingallstate-machineactivities,

caremustbetakenwhenenteringsuchmodestoensurethatavalidstateisenteredwhen

low-powermodeisactive.Applicationsoftwaremustensurethatalowpowermodeisnot

enteredduringadatatransfer.

1262

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comInterrupts

25.6Interrupts

TherearetwolevelsofvectorizedinterruptssupportedbytheSPI.Theseinterruptscanbecausedunder

thefollowingcircumstances:

•Transmissionerror

•Receiveoverrun

•Receivecomplete(receivebufferfull)

•Transmitbufferempty

TheseinterruptsmaybeenabledordisabledviatheSPIINT0register.

Duringtransmission,ifoneofthefollowingerrorsoccurs:BITERR,DESYNC,DLENERR,PARITYERR,or

TIMEOUT,thecorrespondingbitintheSPIFLGregisterisset.Ifthecorrespondingenablebitisset,then

aninterruptisgenerated.ThelevelofalltheaboveinterruptsissetbythebitfieldsintheSPILVLregister.

Theerrorinterruptsareenabledandprioritizedindependentlyfromeachother,buttheinterruptgenerated

willbethesameifmultipleerrorsareenabledonthesamelevel.TheSPIFLGregistershouldbeusedto

determinetheactualcauseofanerror.

NOTE:Sincetherearetwointerruptlines,oneeachforLevel0andLevel1,itispossiblefora

programmertoseparateouttheinterruptsforreceivebufferfullandtransmitbufferempty.

ByprogrammingonetoLevel0andtheothertoLevel1,itispossibletoavoidacheckon

whetheraninterruptoccurredfortransmitorforreceive.Aprogrammercanalsochooseto

groupalloftheerrorinterruptsintooneinterruptlineandbothTX-emptyandRX-full

interruptsintoanotherinterruptlineusingtheLVLcontrolregister.Inthisway,itispossible

toseparateerror-checkingfromnormaldatahandling.

25.6.1InterruptsinMulti-BufferMode

Inmulti-buffermode,theSPIcangenerateinterruptsontwolevels.

Innormalmulti-bufferoperation,thereceiveandtransmitarenotusedandthereforetheenablebitsof

SPIINT0arenotused.

Theinterruptsavailableinmulti-buffermodeare:

•Transmissionerrorinterrupt

•Receiveoverruninterrupt

•TGsuspendedinterrupt

•TGcompletedinterrupt

WhenaTGhasfinishedandthecorrespondingenablebitintheTGINTENAregisterisset,atransfer-

finishedinterruptisgenerated.Thelevelofpriorityoftheinterruptisdeterminedbythecorrespondingbit

intheTGINTLVLregister.

WhenaTGissuspendedbyabufferthathasbeensetassuspendtowaituntilTXFULLflagor/and

RXEMPTYflagareset,andifthecorrespondingbitintheTGINTENAregisterisset,antransfer-

suspendedinterruptisgenerated.Thelevelofpriorityoftheinterruptisdeterminedbythecorresponding

bitintheTGINTLVLregister.

Figure25-23illustratestheTGinterrupts.

1263

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BITERR

DESYNC

PARITYERR

TIMEOUT

LVL0LVL1

DLENERR

ENAxLVLx

RXOVRN

010101010101

Finished

Suspended

LVL0LVL1

ENAxLVLx

ENAxLVLx

TGxVector

X+1

Bit00101



Interruptswww.ti.com

Figure25-23.TGInterruptStructure

Duringtransmission,ifoneofthefollowingerrorsoccurs,BITERR,DESYNC,PARITYERR,TIMEOUT,

DLENERR,thecorrespondingflagintheSPIFLGregisterisset.Iftheenablebitisset,thenaninterruptis

generated.TheleveloftheinterruptscouldbegeneratedaccordingtothebitfieldinSPILVLregister.

TheRXOVRNinterruptisgeneratedwhenabufferintheRXRAMisoverwrittenbyanewreceivedword.

WhilewritingnewlyreceiveddatatoaRXRAMlocation,iftheRXEMPTYbitofthecorrespondinglocation

is0,thentheRXOVRbitwillbesetto1duringthewriteoperation,sothatthebufferstartstoindicatean

overrun.ThisRXOVRflagisalsoreflectedinSPIFLGregisterasRXOVRNINTFLGandthecorresponding

vectornumberisupdatedinTGINTVECT0/TGINTVECT1register.Ifanoverruninterruptisenabled,then

aninterruptwillbegeneratedindicatinganoverruncondition.

Theerrorinterruptsareenabledandprioritizedindependentlyfromeachother,butthevectorgenerated

bytheSPIwillbethesameifmultipleerrorsareenabledonthesamelevel.

Figure25-24.SPIFLGInterruptStructure

Sincethepriorityofanerrorinterruptislowerthanacompletion/suspendinterruptforaTG,theinterrupts

canbesplitintotwolevels.ByprogrammingalltheerrorinterruptsintoLevel0andTG-complete/TG-

suspendinterruptsintoLevel1,itispossibletogetaclearindicationofthesourceoferrorinterrupts.

However,whenavectorregistershowsanerrorinterrupt,theactualbufferforwhichtheerrorhas

occurredisnotreadilyidentifiable.Sinceeachbufferinthemulti-bufferRAMisstoredalongwithits

individualstatusflags,eachbuffershouldbereaduntilabufferwithanyerrorflagsetisfound.

AseparateinterruptlineisprovidedtoindicatetheuncorrectableerrorconditionintheMibSPI.Thislineis

available(andvalid)onlyinthemulti-buffermodeoftheMibSPImoduleandiftheparityerrordetection

featureformulti-bufferRAMisenabled.

1264

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DMACHANNELx

BUFIDx

RXDMA_MAPx

TXDMA_MAPx

DMA_REQ(0)DMA_REQ(15)

4x16Decoder

4x16Decoder

COMBINELOGIC015015

015

44

TXRAMRXRAM015

ControlLogic

TXDMA_ENAx

RXDMA_ENAx

(combinesall8ChannelO/Ps)



www.ti.comDMAInterface

25.7DMAInterface

InordertoreduceCPUoverheadinhandlingSPImessagetrafficonacharacter-by-characterbasis,SPI

canusetheDMAcontrollertotransferthedata.TheDMArequestenablebit(DMAREQEN)controlsthe

assertionofrequeststotheDMAcontrollermodule.Whenacharacterisbeingtransmittedorreceived,

theSPIwillsignaltheDMAviatheDMArequestsignals,TX_DMA_REQandRX_DMA_REQ.TheDMA

controllerwillthenperformtherequireddatatransfer.

ForefficientbehaviorduringDMAoperations,thetransmitteremptyandreceive-bufferfullinterruptscan

bedisabled.ForspecificDMAfeatures,seetheDMAcontrollerspecification.

TheSPIgeneratesarequestontheTX_DMA_REQlineeachtimetheTXdataiscopiedtotheTXshift

registereitherfromtheTXBUForfromperipheraldatabus(whenTXBUFisempty).

ThefirstTX_DMA_REQpulseisgeneratedwheneitherofthefollowingistrue:

•DMAREQEN(SPIINT0[16])issetto1whileSPIEN(SPIGCR1[24])isalready1.

•SPIEN(SPIGCR1[24])issetto1whileDMAREQEN(SPIINT0[16])isalready1.

TheSPIgeneratesarequestontheRX_DMA_REQlineeachtimethereceiveddataiscopiedtothe

SPIBUF.

25.7.1DMAinMulti-BufferMode

TheMibSPIprovidessophisticatedprogrammableDMAcontrollogicthatcompletelyeliminatesthe

necessityofCPUinterventionfordatatransfers,onceprogrammed.Whenthemulti-buffermodeisused,

theDMAenablebitintheSPIINT0registerisignored.DMAsourceordestinationshouldbeonlythemulti-

bufferRAMandnotSPIDAT0/SPIDAT1orSPIBUFregisterasincaseofcompatibilitymodeDMA.

TheMibSPIoffersuptoeightDMAchannels(forSENDandRECEIVE).AlloftheDMAchannelsare

programmableindividuallyandcanbehookedtoanybuffer.TheMibSPIprovidesupto16DMArequest

lines,andDMArequestsfromanychannelcanbeprogrammedtoberoutedthroughanyofthese16

lines.ADMAtransfercantriggerbothtransmitandreceive.

EachDMAchannelhasthecapabilitytotransferablockofupto32datawordswithoutinterruptionusing

onlyonebufferofthearraybyconfiguringtheDMAxCTRLregister.UsingtheDMAxCOUNTand

DMACTNTLENregister,upto65535(64K)wordsofdatacanbetransferredwithoutanyinterruptionusing

justonebufferofthearray.ThisenablesthetransferofmemoryblocksfromorintoanexternalSPI

memory.

Figure25-25.DMAChannelandRequestLine(Logical)StructureinMultibufferMode

1265

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleConfigurationwww.ti.com

25.8ModuleConfiguration

MibSPI/MibSPIPcanbeconfiguredtofunctionasNormalSPIandMultibufferedSPI.Uponpower-upora

system-levelreset,eachbitinthemoduleregistersissettoadefaultstate.Theregistersarewritableonly

aftertheRESETbitissetto1.

25.8.1Compatibility(SPI)ModeConfiguration

Thefollowinglistdetailstheconfigurationstepsthatsoftwareshouldperformpriortothetransmissionor

receptionofdata.AslongasSPIENAisheldlowtheentiretimethattheSPIisbeingconfigured,theorder

inwhichtheregistersareprogrammedisnotimportant.

•EnableSPIbysettingRESETbit.

•ConfiguretheSIMO,SOMI,CLKandoptionalCSx,ENApinsforSPIfunctionalitybysettingthe

correspondingbitinSPIPC0register.

•ConfigurethemoduletofunctionasMasterorSlaveusingCLKMODandMASTERbits.

•ConfiguretherequiredSPIdataformatusingSPIFMTxregister.

•IfthemoduleisselectedtofunctionasMaster,thedelayparameterscanbeconfiguredusing

SPIDELAYregister.

•EnabletheInterruptsusingSPIINT0registerifrequired.

•SelecttheCStobeusedbysettingCSNRbitsinSPIDAT1register.

•ConfigureCSHOLDandWDELbitsinSPIDAT1registerifrequired.

•SelecttheDatawordformatbysettingDFSELbits.SelecttheNumberoftheconfiguredSPIFMTx

register(0to3)tousedforthecommunication.

•SetLOOPBACKbittoconnectthetransmittertothereceiverinternally.(Thisfeatureisusedtoperform

aself-test.Donotconfigurefornormalcommunicationtoexternaldevices).

•SetSPIENAto1aftertheSPIisconfigured.

•PerformTransmitandreceivedata,usingSPIDAT1andSPIBUFregister.

•UsermustwaitforTXFULLtoresetorTXINTbeforewrittingnextdatatoSPIDAT1register.

•UsermustwaitforRXEMPTYtoresetorRXINTbeforereadingthedatafromSPIBUFregister.

1266

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleConfiguration

25.8.2MibSPIModeConfiguration

Thefollowinglistdetailstheconfigurationstepsthatsoftwareshouldperformpriortothetransmissionor

receptionofdatainMIBSPImode.AslongasSPIENAisheldlowtheentiretimethattheSPIisbeing

configured,theorderinwhichtheregistersareprogrammedisnotimportant.

•EnableSPIbysettingRESETbit.

•SetMSPIENAto1togetaccesstomulti-buffermoderegisters.

•ConfiguretheSIMO,SOMI,CLKandoptionalCSx,ENApinsforSPIfunctionalitybysettingthe

correspondingbitinSPIPC0register.

•ConfigurethemoduletofunctionasMasterorSlaveusingCLKMODandMASTERbits.

•ConfiguretherequiredSPIdataformatusingSPIFMTxregister.

•IfthemoduleisselectedtofunctionasMaster,thedelayparameterscanbeconfiguredusing

SPIDELAYregister.

•CheckforBUFINITACTIVEbittobeactivebeforeconfiguringMIBSPIRAM.(FromDevicePowerOnit

takeNumberofBuffers*PeripheralclockperiodtoinitializecompleteRAM.)

•EnabletheTransferGroupinterruptsusingTGITENSTregisterifrequired.

•EnableerrorinterruptsusingSPIINT0registerifrequired.

•SetSPIENAto1aftertheSPIisconfigured.

•TheTriggerSource,TriggerEvent,TransferGroupstartaddressforthecorrespondingTransfer

groupscanbeconfiguredusingthecorrespondingTGxCTRLregister.

•ConfigureLPENDtospecifytheendaddressofthelastTG.

•SimilartoSPIDAT1register16BitControlfieldsineveryTXRAMbufferintheTGhastobe

configured.

•ConfigureoneoftheeightBUFMODEavailableforeachbuffer.

•FillthedatastobetransmittedinTXDATAfieldinTXRAMbuffers.

•ConfigureTGENAbittoenabletherequiredTransfergroups.(IncaseofTriggereventalwayssetting

TGENAwilltriggerthetransfergroup).

•AttheoccurenceofthecorrecttriggereventtheTransfergroupwillbetriggeredanddatagets

transmittedandreceivedoneaftertheotherwithoutanyCPUintervention.

•UsercanpollTransfer-groupinterruptflagorwaitforatransfer-completedinterrupttoreadandwrite

newdatatothebuffers.

1267

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9ControlRegisters

ThissectiondescribestheSPIcontrol,data,andpinregisters.Theregisterssupport8-bit,16-bitand32-

bitwrites.Theoffsetisrelativetotheassociatedbaseaddressofthismoduleinasystem.Thebase

addressforthecontrolregisterscanbefoundinthedevicedatasheet.

NOTE:TIhighlyrecommendsthatwritevaluescorrespondingtothereservedlocationsofregisters

bemaintainedas0consistently.Thisallowsfutureenhancementstousethesereservedbits

ascontrolbitswithoutaffectingthefunctionalityofthemodulewithanyolderversionsof

software.

Table25-7.SPIRegisters

Offset

Acronym

RegisterDescription

Section

00

SPIGCR0

SPIGlobalControlRegister0

Section25.9.1

04h

SPIGCR1

SPIGlobalControlRegister1

Section25.9.2

08h

SPIINT0

SPIInterruptRegister

Section25.9.3

0Ch

SPILVL

SPIInterruptLevelRegister

Section25.9.4

10h

SPIFLG

SPIFlagRegister

Section25.9.5

14h

SPIPC0

SPIPinControlRegister0

Section25.9.6

18h

SPIPC1

SPIPinControlRegister1

Section25.9.7

1Ch

SPIPC2

SPIPinControlRegister2

Section25.9.8

20h

SPIPC3

SPIPinControlRegister3

Section25.9.9

24h

SPIPC4

SPIPinControlRegister4

Section25.9.10

28h

SPIPC5

SPIPinControlRegister5

Section25.9.11

2Ch

SPIPC6

SPIPinControlRegister6

Section25.9.12

30h

SPIPC7

SPIPinControlRegister7

Section25.9.13

34h

SPIPC8

SPIPinControlRegister8

Section25.9.14

38h

SPIDAT0

SPITransmitDataRegister0

Section25.9.15

3Ch

SPIDAT1

SPITransmitDataRegister1

Section25.9.16

40h

SPIBUF

SPIReceiveBufferRegister

Section25.9.17

44h

SPIEMU

SPIEmulationRegister

Section25.9.18

48h

SPIDELAY

SPIDelayRegister

Section25.9.19

4Ch

SPIDEF

SPIDefaultChipSelectRegister

Section25.9.20

50h-5Ch

SPIFMT

SPIDataFormatRegisters

Section25.9.21

60h

INTVECT0

InterruptVector0

Section25.9.22

64h

INTVECT1

InterruptVector1

Section25.9.23

6Ch

SPIPMCTRL

Parallel/ModuloModeControlRegister

Section25.9.24

70h

MIBSPIE

Multi-bufferModeEnableRegister

Section25.9.25

74h

TGITENST

TGInterruptEnableSetRegister

Section25.9.26

78h

TGITENCR

TGInterruptEnableClearRegister

Section25.9.27

7Ch

TGITLVST

TransferGroupInterruptLevelSetRegister

Section25.9.28

80h

TGITLVCR

TransferGroupInterruptLevelClearRegister

Section25.9.29

84h

TGINTFLG

TransferGroupInterruptFlagRegister

Section25.9.30

88h-8Ch

Reserved

Reserved

90h

TICKCNT

TickCountRegister

Section25.9.31

94h

LTGPEND

LastTGEndPointer

Section25.9.32

98h-D4h

TGxCTRL

TGxControlRegisters

Section25.9.33

D8h-F4h

DMAxCTRL

DMAChannelControlRegister

Section25.9.34

F8h-114h

ICOUNT

DMAxCOUNTRegister

Section25.9.35

118h

DMACNTLEN

DMALargeCount

Section25.9.36

11Ch

Reserved

Reserved

1268

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-7.SPIRegisters(continued)

Offset

Acronym

RegisterDescription

Section

120h

UERRCTRL

Multi-bufferRAMUncorrectableParityErrorControlRegister

Section25.9.37

124h

UERRSTAT

Multi-bufferRAMUncorrectableParityErrorStatusRegister

Section25.9.38

128h

UERRADDR1

RXRAMUncorrectableParityErrorAddressRegister

Section25.9.39

12Ch

UERRADDR0

TXRAMUncorrectableParityErrorAddressRegister

Section25.9.40

130h

RXOVRN_BUF_ADDR

RXRAMOverrunBufferAddressRegister

Section25.9.41

134h

IOLPBKTSTCR

I/OLoopbackTestControlRegister

Section25.9.42

138h

EXTENDED_PRESCALE1

SPIExtendedPrescaleRegister1

Section25.9.43

13Ch

EXTENDED_PRESCALE2

SPIExtendedPrescaleRegister2

Section25.9.44

25.9.1SPIGlobalControlRegister0(SPIGCR0)

Figure25-26.SPIGlobalControlRegister0(SPIGCR0)[offset=00]

31

16

Reserved

R-0

15

1

0

Reserved

nRESET

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-8.SPIGlobalControlRegister0(SPIGCR0)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

nRESET

Thisisthelocalresetcontrolforthemodule.Thisbitneedstobesetto‘1’beforeanyoperation

onSPI/MibSPIcanbedone.Onlyaftersettingthisbitto‘1’,theAutoInitializationof

MultibufferRAMstarts.Clearingthisbitto‘0’willresultinallofthecontrolandstatusregister

valuestoreturntotheirdefaultvalues..

0

SPIisintheresetstate.

1

SPIisoutoftheresetstate.

1269

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.2SPIGlobalControlRegister1(SPIGCR1)

Figure25-27.SPIGlobalControlRegister1(SPIGCR1)[offset=04h]

31

25

24

23

17

16

Reserved

SPIEN

Reserved

LOOPBACK

R-0

R/W-0

R-0

R/WP-0

15

9

8

7

2

1

0

Reserved

POWERDOWN

Reserved

CLKMOD

MASTER

R-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-9.SPIGlobalControlRegister1(SPIGCR1)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

SPIEN

SPIenable.ThisbitenablesSPItransfers.Thisbitmustbesetto1afterallotherSPIconfiguration

bitshavebeenwritten.WhentheSPIENbitis0orclearedto0,thefollowingSPIregistersget

forcedtotheirdefaultstates:

•BothTXandRXshiftregisters

•TheTXDATAfieldsofError:ReferencesourcenotfoundandError:Referencesourcenotfound

registers

•AllthefieldsoftheSPIFlagRegister(SPIFLG)register

•ContentsofSPIBUFandtheinternalRXBUFregisters

0

TheSPIisnotactivatedfortransfers.

1

ActivatesSPI

23-17

Reserved

0

Readsreturns0.Writeshavenoeffect.

16

LOOPBACK

Internalloop-backtestmode.Theinternalself-testoptioncanbeenabledbysettingthisbit.Ifthe

SPISIMOandSPISOMIpinsareconfiguredwithSPIfunctionality,thentheSPISIMO[7:0]pins

areisinternallyconnectedtotheSPISOMI[7:0]pins(transmitdataisloopedbackasreceivedata).

GIOmodeforthesepinsisnotsupportedinloopbackmode.Externally,duringloop-back

operation,theSPICLKpinoutputsaninactivevalueandSPISOMI[7:0]remainsinthehigh-

impedancestate.IftheSPIisinitializedinslavemodeoradatatransferisongoing,errorsmay

result.

Note:Thisloopbackmodecanonlybeusedinmastermode.Mastermodemustbeselected

beforesettingLOOPBACK.Whenthismodeisselected,theCLKMODbitshouldbesetto1,

meaningthatSPICLKisinternallygenerated.

0

Internalloop-backtestmodedisabled.

1

Internalloop-backtestmodeenabled.

15-9

Reserved

0

Readsreturns0.Writeshavenoeffect.

8

POWERDOWN

Whenactive,theSPIstatemachineentersapower-downstate.

0

TheSPIisinactivemode.

1

TheSPIisinpower-downmode.

7-2

Reserved

0

Readsreturns0.Writeshavenoeffect.

1

CLKMOD

Clockmode.Thisbitselectseitheraninternalorexternalclocksource.Thisbitalsodeterminesthe

I/OdirectionoftheSPIENAandSPISCS[3:0]pinsinfunctionalmode.

0

Clockisexternal.

•SPIENAisanoutput.

•SPISCS[3:0]areinputs.

1

Clockisinternally-generated.

•SPIENAisanoutput.

•SPISCS[3:0]areoutputs.

1270

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-9.SPIGlobalControlRegister1(SPIGCR1)FieldDescriptions(continued)

Bit

Field

Value

Description

0

MASTER

SPISIMO/SPISOMIpindirectiondetermination.SetsthedirectionoftheSPISIMOandSPISOMI

pins.

Note:Formaster-modeoperationoftheSPI,MASTERbitshouldbesetto1andCLKMOD

bitcanbeseteither1or0.Themaster-modeSPIcanrunonanexternalclockonSPICLK.

Forslavemodeoperation,boththeMASTERandCLKMODbitsshouldbeclearedto0.Any

othercombinationsmayresultinunpredictablebehavioroftheSPI.Inslavemode.SPICLK

willnotbegeneratedinternallyinslavemode.

0

SPISIMO[7:0]pinsareinputs,SPISOMI[7:0]pinsareoutputs

1

SPISOMI[7:0]pinsareinputs,SPISIMO[7:0]pinsareoutputs

25.9.3SPIInterruptRegister(SPIINT0)

Figure25-28.SPIInterruptRegister(SPIINT0)[offset=08h]

31

25

24

Reserved

ENABLEHIGHZ

R-0

R/W-0

23

17

16

Reserved

DMAREQEN

R-0

R/W-0

15

10

9

8

Reserved

TXINTENA

RXINTENA

R-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

Reserved

RXOVRNINTENA

Reserved

BITERRENA

DESYNCENA

PARERRENA

TIMEOUTENA

DLENERRENA

R-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-10.SPIInterruptRegister(SPIINT0)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

ENABLEHIGHZ

SPIENApinhigh-impedanceenable.Whenactive,theSPIENApin(whenitisconfiguredas

aWAITfunctionaloutputsignalinaslaveSPI)isforcedtohigh-impedancewhennotdriving

alowsignal.Ifinactive,thenthepinwilloutputbothahighandalowsignal.

0

SPIENApinispulledhighwhennotactive.

1

SPIENApinremainshigh-impedancewhennotactive.

23-17

Reserved

0

Readreturns0.Writeshavenoeffect.

16

DMAREQEN

DMArequestenable.EnablestheDMArequestsignaltobegeneratedforbothreceiveand

transmitchannels.EnableDMAREQonlyaftersettingtheSPIENbitto1.

0

DMAisnotused.

1

DMArequestswillbegenerated.

Note:ADMArequestwillbegeneratedontheTXDMAREQlineeachtimeawordis

copiedtotheshiftregistereitherfromTXBUFordirectlyfromSPIDAT0/SPIDAT1

writes.

Note:ADMArequestwillbegeneratedontheRXDMAREQlineeachtimeawordis

copiedtotheSPIBUFregistereitherfromRXBUFordirectlyfromtheshiftregister.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

1271

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-10.SPIInterruptRegister(SPIINT0)FieldDescriptions(continued)

Bit

Field

Value

Description

9

TXINTENA

Causesaninterrupttobegeneratedeverytimedataiswrittentotheshiftregister,sothat

thenextwordcanbewrittentoTXBUF.Settingthisbitwillgenerateaninterruptifthe

TXINTFLGbit(SPIFlagRegister(SPIFLG)[9])issetto1.

0

NointerruptwillbegenerateduponTXINTFLGbeingsetto1.

1

AninterruptwillbegenerateduponTXINTFLGbeingsetto1.

ThetransmitteremptyinterruptisvalidincompatibilitymodeofSPIonly.Inmulti-buffered

mode,thisinterruptswillnotbegenerated,evenifitisenabled.

Note:Aninterruptrequestwillbegeneratedassoonasthisbitissetto1.Bydefault

itwillbegeneratedontheINT0line.TheSPILVLregistercanbeprogrammedto

changetheinterruptline.

8

RXINTENA

CausesaninterrupttobegeneratedwhentheRXINTFLAGbit(SPIFlagRegister

(SPIFLG)[8])issetbyhardware.

0

Interruptwillnotbegenerated.

1

Interruptwillbegenerated.

ThereceiverfullinterruptisvalidincompatibilitymodeofSPIonly.Inmulti-bufferedmode,

thisinterruptswillnotbegenerated,evenifitisenabled.

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

RXOVRNINTENA

Overruninterruptenable.

0

Overruninterruptwillnotbegenerated.

1

Overruninterruptwillbegenerated.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

BITERRENA

Enablesinterruptonbiterror.

0

Nointerruptasserteduponbiterror.

1

Enablesinterruptonbiterror.

3

DESYNCENA

Enablesinterruptondesynchronizedslave.DESYNCENAisusedinmastermodeonly.

0

Nointerruptassertedupondesynchronizationerror.

1

Aninterruptisassertedondesynchronizationoftheslave(DESYNC=1).

2

PARERRENA

Enablesinterrupt-on-parity-error.

0

Nointerruptassertedonparityerror.

1

Aninterruptisassertedonaparityerror.

1

TIMEOUTENA

EnablesinterruptonENAsignaltime-out.

0

NointerruptasserteduponENAsignaltime-out.

1

Aninterruptisassertedonatime-outoftheENAsignal.

0

DLENERRENA

Datalengtherrorinterruptenable.Adatalengtherroroccursunderthefollowingconditions.

Master:WhenSPIENAisused,iftheSPIENApinfromtheslaveisdeassertedbeforethe

masterhascompleteditstransfer,thedatalengtherrorisset.Thatis,ifthecharacterlength

counterhasnotoverflowedwhileSPIENAdeassertionisdetected,thenitmeansthatthe

slavehasneitherreceivedfulldatafromthemasternorhasittransmittedcompletedata.

Slave:WhenSPISCSpinsareused,iftheincomingvalidSPISCSpinisdeactivatedbefore

thecharacterlengthcounteroverflows,thenthedatalengtherrorisset.

0

Nointerruptisgeneratedupondatalengtherror.

1

Aninterruptisassertedwhenadata-lengtherroroccurs.

1272

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.4SPIInterruptLevelRegister(SPILVL)

Figure25-29.SPIInterruptLevelRegister(SPILVL)[offset=0Ch]

31

16

Reserved

R-0

15

10

9

8

Reserved

TXINTLVL

RXINTLVL

R-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

Reserved

RXOVRNINTL

Reserved

BITERRLVL

DESYNCLVL

PARERRLVL

TIMEOUTLVL

DLENERRLVL

R-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-11.SPIInterruptLevelRegister(SPILVL)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

TXINTLVL

Transmitinterruptlevel.

0

TransmitinterruptismappedtointerruptlineINT0.

1

TransmitinterruptismappedtointerruptlineINT1.

8

RXINTLVL

Receiveinterruptlevel.

0

ReceiveinterruptismappedtointerruptlineINT0.

1

ReceiveinterruptismappedtointerruptlineINT1.

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

RXOVRNINTLVL

Receiveoverruninterruptlevel.

0

ReceiveoverruninterruptismappedtointerruptlineINT0.

1

ReceiveoverruninterruptismappedtointerruptlineINT1.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

BITERRLVL

Biterrorinterruptlevel.

0

BiterrorinterruptismappedtointerruptlineINT0.

1

BiterrorinterruptismappedtointerruptlineINT1.

3

DESYNCLVL

Desynchronizedslaveinterruptlevel.(mastermodeonly).

0

AninterruptcausedbydesynchronizationoftheslaveismappedtointerruptlineINT0.

1

AninterruptcausedbydesynchronizationoftheslaveismappedtointerruptlineINT1.

2

PARERRLVL

Parityerrorinterruptlevel.

0

AparityerrorinterruptismappedtointerruptlineINT0.

1

AparityerrorinterruptismappedtointerruptlineINT1.

1

TIMEOUTLVL

SPIENApintime-outinterruptlevel.

0

Aninterruptonatime-outoftheENAsignal(TIMEOUT=1)ismappedtointerruptlineINT0.

1

Aninterruptonatime-outoftheENAsignal(TIMEOUT=1)ismappedtointerruptlineINT1.

0

DLENERRLVL

Datalengtherrorinterruptlevel(line)select.

0

AninterruptondatalengtherrorismappedtointerruptlineINT0.

1

AninterruptondatalengtherrorismappedtointerruptlineINT1.

1273

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.5SPIFlagRegister(SPIFLG)

Softwaremustcheckallflagbitswhenreadingthisregister.

Figure25-30.SPIFlagRegister(SPIFLG)[offset=10h]

31

25

24

23

16

Reserved

BUFINITACTIVE

Reserved

R-0

R-0

R-0

15

10

9

8

Reserved

TXINTFLG

RXINTFLG

R-0

R-0

R/WC-0

7

6

5

4

3

2

1

0

Reserved

RXOVRNINTFLG

Reserved

BITERRFLG

DESYNCFLG

PARERRFLG

TIMEOUTFLG

DLENERRFLG

R-0

R/WC-0

R-0

R/WC-0

R/WC-0

R/WC-0

R/WC-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table25-12.SPIFlagRegister(SPIFLG)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

BUFINITACTIVE

Indicatesthestatusofmulti-bufferinitializationprocess.Softwarecanpollforthisbitto

determineifitcanproceedwiththeregisterconfigurationofmulti-buffermoderegistersor

bufferhandling.

Note:IftheSPIFLGregisterisreadwhilethemulti-bufferRAMisbeinginitialized,the

BUFINITACTIVEbitwillbereadas1.IfSPIFLGisreadaftertheinternalautomatic

bufferinitializationiscomplete,thisbitwillbereadas0.Thisbitwillshowavalueof

1aslongasthenRESETbitis0,butdoesnotreallyindicatethatbufferinitialization

isunderway.BufferinitializationstartsonlywhenthenRESETbitissetto1.

0

Multi-bufferRAMinitializationiscomplete.

1

Multi-bufferRAMisstillbeinginitialized.Donotattempttowritetoeithermulti-bufferRAM

oranymulti-buffermoderegisters.

23-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

TXINTFLG

Transmitter-emptyinterruptflag.Servesasaninterruptflagindicatingthatthetransmit

buffer(TXBUF)isemptyandanewwordcanbewrittentoit.Thisflagissetwhenawordis

copiedtotheshiftregistereitherdirectlyfromSPIDAT0/SPIDAT1orfromtheTXBUF

register.Thisbitisclearedbyoneoffollowingmethods:

•WritinganewdatatoeitherSPIDAT0orSPIDAT1

•Writinga0toSPIEN(SPIGCR1[24])

0

Transmitbufferisnowfull.Nointerruptpendingfortransmitterempty.

1

Transmitbufferisempty.Aninterruptispendingtofillthetransmitter.

8

RXINTFLG

Receiver-fullinterruptflag.Thisflagissetwhenawordisreceivedandcopiedintothe

bufferregister(SPIBUF).IfRXINTENisenabled,aninterruptisalsogenerated.Thisbitis

clearedunderthefollowingmethods:

•ReadingtheSPIBUFregister

•ReadingTGINTVECT0orTGINTVECT1registerwhenthereisareceivebufferfull

interrupt

•Writinga1tothisbit

•Writinga0toSPIEN(SPIGCR1[24])

•Systemreset

Duringemulationmode,however,areadtotheemulationregister(SPIEMU)doesnotclear

thisflagbit.

0

Nonewreceiveddatapending.Receivebufferisempty.

1

Anewlyreceiveddataisreadytoberead.Receivebufferisfull.

Note:ClearingRXINTFLGbitbywritinga1beforereadingtheSPIBUFsetsthe

RXEMPTYbitoftheSPIBUFregistertoo.Inthisway,onecanignoreareceivedword.

However,iftheinternalRXBUFisalreadyfull,thedatafromRXBUFwillbecopiedto

SPIBUFandtheRXEMPTYbitwillbeclearedagain.TheSPIBUFcontentsshouldbe

readfirstifthissituationneedstobeavoided.

1274

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-12.SPIFlagRegister(SPIFLG)FieldDescriptions(continued)

Bit

Field

Value

Description

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

RXOVRNINTFLG

Receiveroverrunflag.TheSPIhardwaresetsthisbitwhenareceiveoperationcompletes

beforethepreviouscharacterhasbeenreadfromthereceivebuffer.Thebitindicatesthat

thelastreceivedcharacterhasbeenoverwrittenandthereforelost.TheSPIwillgenerate

aninterruptrequestifthisbitissetandtheRXOVRNINTENbit(SPIINT0.6)issethigh.

ThisbitisclearedunderthefollowingconditionsincompatibilitymodeofMibSPI:

•ReadingTGINTVECT0orTGINTVECT1registerwhenthereisareceive-buffer-overrun

interrupt

•Writinga1toRXOVRNINTFLGintheSPIFlagRegister(SPIFLG)registeritself

•Writinga0toSPIEN

•ReadingthedatafieldoftheSPIBUFregister

Note:ReadingtheSPIBUFregisterdoesnotclearthisRXOVRNINTFLGbit.Ifan

RXOVRNinterruptisdetected,thentheSPIBUFmayneedtobereadtwicetogetto

theoverrunbuffer.Thisisduetothefactthattheoverrunwillalwaysoccurtothe

internalRXBUF.EachreadtotheSPIBUFwillresultinRXBUFcontents(ifitisfull)

gettingcopiedtoSPIBUF.

Note:ThereisaspecialconditionunderwhichtheRXOVRNINTFLGflaggetsset.If

bothSPIBUFandRXBUFarealreadyfullandwhileanotherreceptionisunderway,if

anyerrors(TIMEOUT,BITERR,andDLEN_ERR)occur,thenRXOVRinRXBUFand

RXOVRNINTFLGinSPIFLGregisterswillbesettoindicatethatthestatusflagsare

gettingoverwrittenbythenewtransfer.Thisoverrunshouldbetreatedlikeareceive

overrun.

Inmulti-buffermodeofMibSPI,thisbitisclearedunderthefollowingconditions:

•ReadingtheRXOVRN_BUF_ADDRregister

•Writinga1toRXOVRNINTFLGintheSPIFlagRegister(SPIFLG)registeritself

Inmulti-buffermode,ifRXOVRNINTFLGisset,thentheaddressofthebufferwhich

experiencedtheoverrunisavailableinRXOVRN_BUF_ADDR.

0

Overrunconditiondidnotoccur.

1

Overrunconditionhasoccurred.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

BITERRFLG

Mismatchofinternaltransmitdataandtransmitteddata.Thisflagcanbeclearedbyoneof

thefollowingmethods.

•Writea1tothisbit.

•SettheSPIENAbitto0.

0

Nobiterroroccurred.

1

Abiterroroccurred.TheSPIsamplesthesignalofthetransmitpin(master:SIMO,slave:

SOMI)atthereceivepoint(halfclockcycleaftertransmitpoint).Ifthesampledvaluediffers

fromthetransmittedvalueabiterrorisdetectedandtheflagBITERRFLGisset.If

BITERRENAissetaninterruptisasserted.Possiblereasonsforabiterrorcanbean

excessivelyhighbitrate,capacitiveload,oranothermaster/slavetryingtotransmitatthe

sametime.

3

DESYNCFLG

Desynchronizationofslavedevice.Desynchronizationmonitorisactiveinmastermode

only.Thisflagcanbeclearedbyoneofthefollowingmethods:

•Writea1tothisbit.

•SetSPIENAbitto0.

0

Noslavedesynchronizationdetected.

1

Aslavedeviceisdesynchronized.ThemastermonitorstheENAblesignalcomingfromthe

slavedeviceandsetstheDESYNCflagafterthelastbitistransmittedplustT2EDELAY.If

DESYNCENAissetaninterruptisasserted.Desynchronizationcanoccurifaslavedevice

missesaclockedgecomingfromthemaster.

1275

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-12.SPIFlagRegister(SPIFLG)FieldDescriptions(continued)

Bit

Field

Value

Description

2

PARITYERRFLG

Calculatedparitydiffersfromreceivedparitybit.Iftheparitygeneratorisenabled(canbe

selectedindividuallyforeachbuffer)anevenoroddparitybitisaddedattheendofadata

word.Duringreceptionofthedatawordtheparitygeneratorcalculatesthereferenceparity

andcomparesittothereceivedparitybit.IntheeventofamismatchthePARITYERRflag

issetandaninterruptisassertedifPARERRENAisset.Thisflagcanbeclearedbyoneof

thefollowingmethods:

•Writea1tothisbit.

•SetSPIENAbitto0.

0

Noparityerrordetected.

1

Aparityerroroccurred.

1

TIMEOUTFLG

Time-outcausedbynonactivationofENAsignal.Thisflagcanbeclearedbyoneofthe

followingmethods:

•Writea1tothisbit.

•SetSPIENAbitto0.

0

NoENA-signaltime-outoccurred.

1

AnENAsignaltime-outoccurred.TheSPIgeneratesatime-outbecausetheslavehasn't

respondedintimebyactivatingtheENAsignalafterthechipselectsignalhasbeen

activated.Ifatime-outconditionisdetectedthecorrespondingchipselectisdeactivated

immediatelyandtheTIMEOUTflagisset.InadditiontheTIMEOUTflaginthestatusfieldof

thecorrespondingbufferisset.Thetransmitrequestoftheconcernedbufferiscleared,that

is,theSPIdoesnotre-startadatatransferfromthisbuffer.

0

DLENERRFLG

Data-lengtherrorflag.Thisflagcanbeclearedbyoneofthefollowingmethods:

•Writea1tothisbit.

•SetSPIENAbitto0.

Note:Wheneveranytransmissionerrors(TIMEOUT,BITERR,DLEN_ERR,

PARITY_ERR,DESYNC)aredetectedandtheerrorflagsareclearedbywritingtothe

errorbitintheSPIFLGregister,thecorrespondingerrorflaginSPIBUFdoesnotget

cleared.SoftwareneedstoreadtheSPIBUFuntilitbecomesemptybefore

proceeding.ThisensuresthatalloftheoldstatusbitsinSPIBUFareclearedbefore

startingthenexttransfer.

0

Nodatalengtherrorhasoccurred.

1

Adatalengtherrorhasoccurred.

1276

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.6SPIPinControlRegister0(SPIPC0)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofSPIPC0toSPIPC9reflectthenumberofSIMO/SOMIdata

linesperdevice.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.

Ondeviceswithlessthan8datalines,onlyasubsetofthesebitsareavailable.

Unimplementedbitsreturn0uponreadandarenotwritable.

Figure25-31.SPIPinControlRegister0(SPIPC0)[offset=14h]

31

24

23

16

SOMIFUN

SIMOFUN

R/W-0

R/W-0

15

12

11

10

9

8

Reserved

SOMIFUN0

SIMOFUN0

CLKFUN

ENAFUN

R-0

R/W-0

R/W-0

R/W-0

R/W-0

7

0

SCSFUN

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-13.SPIPinControl(SPIPC0)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIFUN

Slaveout,masterinfunction.DetermineswhetherSPISOMI[x]istobeusedasageneral-purposeI/O

pinorasaSPIfunctionalpin.

Note:DuplicateControlBitsforSPISOMI[0].Bit24isnotphysicallyimplemented.Itisamirror

ofBit11.Anywritetobit24willbereflectedonbit11.Whenbit24andbit11are

simultaneouslywritten,thevalueofbit11willcontroltheSPISOMI[0]pin.Thereadvalueof

Bit24alwaysreflectsthevalueofbit11.

0

SPISOMI[x]pinisaGIOpin

1

SPISOMI[x]pinisaSPIfunctionalpin

23-16

SIMOFUN

Slavein,masteroutfunction.DetermineswhetherSPISIMO[x]istobeusedasageneral-purposeI/O

pinorasaSPIfunctionalpin.

Note:DuplicateControlBitsforSPISIMO[x].Bit16isnotphysicallyimplemented.Itisamirror

ofBit10.Anywritetobit16willbereflectedonbit10.Whenbit16andbit10are

simultaneouslywritten,thevalueofbit10willcontroltheSPISOMI[x]pin.Thereadvalueof

Bit16alwaysreflectsthevalueofbit10.

0

TheSPISIMOxpinisaGIOpin.

1

TheSPISIMOxpinisaSPIfunctionalpin

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIFUN0

Slaveout,masterinfunction.ThisbitdetermineswhethertheSPISOMI0pinistobeusedasa

general-purposeI/OpinorasaSPIfunctionalpin.

0

TheSPISOMI0pinisaGIOpin.

1

TheSPISOMI0pinisaSPIfunctionalpin.

Note:Regardlessofthenumberofparallelpinsused,theSPISOMI0pinwillalwayshavetobe

programmedasfunctionalpinsforanySPItransfers.

10

SIMOFUN0

Slavein,masteroutfunction.ThisbitsdeterminewhethereachSPISIMO0pinistobeusedasa

general-purposeI/OpinorasaSPIfunctionalpin.

0

TheSPISIMO0pinisaGIOpin.

1

TheSPISIMO0pinisaSPIfunctionalpin.

Note:Regardlessofthenumberofparallelpinsused,theSPISIMO0pinwillalwayshavetobe

programmedasfunctionalpinsforanySPItransfers.

1277

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-13.SPIPinControl(SPIPC0)FieldDescriptions(continued)

Bit

Field

Value

Description

9

CLKFUN

SPIclockfunction.ThisbitdetermineswhethertheSPICLKpinistobeusedasageneral-purpose

I/Opin,orasaSPIfunctionalpin.

0

TheSPICLKpinisaGIOpin.

1

TheSPICLKpinisaSPIfunctionalpin.

8

ENAFUN

SPIENAfunction.ThisbitdetermineswhethertheSPIENApinistobeusedasageneral-purposeI/O

pinorasaSPIfunctionalpin.

0

TheSPIENApinisaGIOpin.

1

TheSPIENApinisaSPIfunctionalpin.

7-0

SCSFUN

SPISCSxfunction.DetermineswhethereachSPISCSxpinistobeusedasageneral-purposeI/Opin

orasaSPIfunctionalpin.IftheslaveSPISCSxpinsareinfunctionalmodeandreceiveaninactive

highsignal,theslaveSPIwillplaceitsoutputinhigh-zanddisableshifting.

0

TheSPISCSxpinisaGIOpin.

1

TheSPISCSxpinisaSPIfunctionalpin.

25.9.7SPIPinControlRegister1(SPIPC1)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

Figure25-32.SPIPinControlRegister1(SPIPC1)[offset=18h]

31

24

23

16

SOMIDIR

SIMODIR

R/W-0

R/W-0

15

12

11

10

9

8

Reserved

SOMIDIR0

SIMODIR0

CLKDIR

ENADIR

R-0

R/W-0

R/W-0

R/W-0

R/W-0

7

0

SCSDIR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-14.SPIPinControlRegister(SPIPC1)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIDIR

SPISOMIxdirection.ControlsthedirectionofSPISOMIxwhenusedforgeneral-purposeI/O.If

SPISOMIxpinisusedasaSPIfunctionalpin,theI/OdirectionisdeterminedbytheMASTERbitin

theSPIGCR1register.

Note:DuplicateControlBitsforSPISOMI0.Bit24isnotphysicallyimplemented.Itisamirror

ofBit11.Anywritetobit24willbereflectedonbit11.Whenbit24andbit11are

simultaneouslywritten,thevalueofbit11willcontroltheSPISOMIpin.ThereadvalueofBit

24alwaysreflectsthevalueofbit11.

0

SPISOMIxpinisaninput

1

SPISOMIxpinisanoutput

1278

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-14.SPIPinControlRegister(SPIPC1)FieldDescriptions(continued)

Bit

Field

Value

Description

23-16

SIMODIR

SPISIMOxdirection.ControlsthedirectionofSPISIMOxwhenusedforgeneral-purposeI/O.If

SPISIMOxpinisusedasaSPIfunctionalpin,theI/OdirectionisdeterminedbytheMASTERbitin

theSPIGCR1register.

Note:DuplicateControlBitsforSPISIMO.Bit16isnotphysicallyimplemented.Itisamirrorof

Bit10.Anywritetobit16willbereflectedonbit10.Whenbit16andbit10aresimultaneously

written,thevalueofbit10willcontroltheSPISOMIpin.ThereadvalueofBit16always

reflectsthevalueofbit10.

0

SPISOMIOxpinisaninput

1

SPISOMIOxpinisanoutput

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIDIR0

SPISOMI0direction.ThisbitcontrolsthedirectionoftheSPISOMI0pinwhenitisusedasageneral-

purposeI/Opin.IftheSPISOMI0pinisusedasaSPIfunctionalpin,theI/Odirectionisdetermined

bytheMASTERbitintheSPIGCR1register.

0

TheSPISOMI0pinisaninput.

1

TheSPISOMI0pinisanoutput.

10

SIMODIR0

SPISIMO0direction.ThisbitcontrolsthedirectionoftheSPISIMO0pinwhenitisusedasageneral-

purposeI/Opin.IftheSPISIMO0pinisusedasaSPIfunctionalpin,theI/Odirectionisdetermined

bytheMASTERbitintheSPIGCR1register.

0

TheSPISIMO0pinisaGIOpin.

1

TheSPISIMO0pinisaSPIfunctionalpin.

9

CLKDIR

SPICLKdirection.ThisbitcontrolsthedirectionoftheSPICLKpinwhenitisusedasageneral-

purposeI/Opin.Infunctionalmode,theI/OdirectionisdeterminedbytheCLKMODbit.}

0

TheSPICLKpinisaninput.

1

TheSPICLKpinisanoutput.

8

ENADIR

SPIENAdirection.ThisbitcontrolsthedirectionoftheSPIENApinwhenitisusedasageneral-

purposeI/O.IftheSPIENApinisusedasafunctionalpin,thentheI/Odirectionisdeterminedbythe

CLKMODbit(SPIGCR1[1])

0

TheSPIENApinisaninput.

1

TheSPIENApinisanoutput.

7-0

SCSDIR

SPISCSxdirection.ThesebitscontrolthedirectionofeachSPISCSxpinwhenitisusedasa

general-purposeI/Opin.EachpincouldbeconfiguredindependentlyfromtheothersIftheSPISCSx

isusedasaSPIfunctionalpin;theI/OdirectionisdeterminedbytheCLKMODbit(SPIGCR1[1]).

0

TheSPISCSxpinisaninput.

1

TheSPISCSxpinisanoutput.

1279

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.8SPIPinControlRegister2(SPIPC2)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

Figure25-33.SPIPinControlRegister2(SPIPC2)[offset=1Ch]

31

24

23

16

SOMIDIN

SIMODIN

R/W-U

R/W-U

15

12

11

10

9

8

Reserved

SOMIDIN0

SIMODIN0

CLKDIN

ENADIN

R-0

R-U

R-U

R-U

R-U

7

0

SCSDIN

R/W-U

LEGEND:R/W=Read/Write;R=Readonly;U=Undefined;-n=valueafterreset

Table25-15.SPIPinControlRegister2(SPIPC2)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIDIN

SPISOMIxdatain.ThevalueoftheSPISOMIxpins.

0

TheSPISOMIxpinislogic0.

1

TheSPISOMIxpinislogic1.

23-16

SIMODIN

SPISIMOxdatain.ThevalueoftheSPISIMOxpins.

0

TheSPISIMOxpinislogic0.

1

TheSPISIMOxpinislogic1.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIDIN0

SPISOMI0datain.ThevalueoftheSPISOMI0pin.

0

TheSPISOMI0pinislogic0.

1

TheSPISOMI0pinislogic1.

10

SIMODIN0

SPISIMO0datain.ThevalueoftheSPISIMO0pin.

0

TheSPISIMO0pinislogic0.

1

TheSPISIMO0pinislogic1.

9

CLKDIN

Clockdatain.ThevalueoftheSPICLKpin.pin.

0

TheSPICLKpinislogic0.

1

TheSPICLKpinislogic1.

8

ENADIN

SPIENAdatain.ThethevalueoftheSPIENApin.

0

TheSPIENApinislogic0.

1

TheSPIENApinislogic1.

7-0

SCSDIN

SPISCSxdatain.ThevalueoftheSPISCSxpin.

0

TheSPISCSxpinislogic0.

1

TheSPISCSxpinislogic1.

1280

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.9SPIPinControlRegister3(SPIPC3)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

Figure25-34.SPIPinControlRegister3(SPIPC3)[offset=20h]

31

24

23

16

SOMIDOUT

SIMODOUT

R/W-U

R/W-U

15

12

11

10

9

8

Reserved

SOMIDOUT0

SIMODOUT0

CLKDOUT

ENADOUT

R-0

R/W-U

R/W-U

R/W-U

R/W-U

7

0

SCSDOUT

R/W-U

LEGEND:R/W=Read/Write;R=Readonly;U=Undefined;-n=valueafterreset

Table25-16.SPIPinControlRegister3(SPIPC3)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIDOUT

SPISOMIxdataoutwrite.ThisbitisonlyactivewhentheSPISOMIxpinisconfiguredasageneral-

purposeI/Opinandconfiguredasanoutputpin.Thevalueofthisbitindicatesthevaluesenttothe

pin.

Bit11orbit24canbeusedtosetthedirectionforpinSPISOMI0.Ifa32-bitwriteis

performed,bit11willhavepriorityoverbit24.

0

CurrentvalueonSPISOMIxpinislogic0.

1

CurrentvalueonSPISOMIxpinislogic1

23-16

SIMODOUT

SPISIMOxdataoutwrite.ThisbitisonlyactivewhentheSPISIMOxpinisconfiguredasageneral-

purposeI/Opinandconfiguredasanoutputpin.Thevalueofthisbitindicatesthevaluesenttothe

pin.

Bit10orbit16canbeusedtosetthedirectionforpinSPISOMI0.Ifa32-bitwriteis

performed,bit10willhavepriorityoverbit16.

0

CurrentvalueonSPISIMOxpinislogic0.

1

CurrentvalueonSPISIMOxpinislogic1.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIDOUT0

SPISOMI0dataoutwrite.ThisbitisonlyactivewhentheSPISOMI0pinisconfiguredasageneral-

purposeI/Opinandconfiguredasanoutputpin.Thevalueofthisbitindicatesthevaluesenttothe

pin.

0

CurrentvalueonSPISOMI0pinislogic0.

1

CurrentvalueonSPISOMI0pinislogic1.

10

SIMODOUT0

SPISIMO0dataoutwrite.ThisbitisonlyactivewhentheSPISIMO0pinisconfiguredasageneral-

purposeI/Opinandconfiguredasanoutputpin.Thevalueofthisbitindicatesthevaluesenttothe

pin.

0

TheSPISIMO0pinislogic0.

1

TheSPISIMO0pinislogic1.

9

CLKDOUT

SPICLKdataoutwrite.ThisbitisonlyactivewhentheSPICLKpinisconfiguredasageneral-

purposeI/Opinandconfiguredasanoutputpin.Thevalueofthisbitindicatesthevaluesenttothe

pin.

0

TheSPICLKpinislogic0.

1

TheSPICLKpinislogic1.

1281

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-16.SPIPinControlRegister3(SPIPC3)FieldDescriptions(continued)

Bit

Field

Value

Description

8

ENADOUT

SPIENAdataoutwrite.OnlyactivewhentheSPIENApinisconfiguredasageneral-purposeI/Opin

andconfiguredasanoutputpin.Thevalueofthisbitindicatesthevaluesenttothepin.

0

TheSPIENApinislogic0.

1

TheSPIENApinislogic1.

7-0

SCSDOUT

SPISCSxdataoutwrite.OnlyactivewhentheSPISCSxpinsareconfiguredasageneral-purpose

I/Opinsandconfiguredasanoutputpins.Thevalueofthesebitsindicatesthevaluesenttothe

pins.

0

TheSPISCSxpinislogic0.

1

TheSPISCSxpinislogic1.

25.9.10SPIPinControlRegister4(SPIPC4)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

Figure25-35.SPIPinControlRegister4(SPIPC4)[offset=24h]

31

24

23

16

SOMISET

SIMOSET

R/W-U

R/W-U

15

12

11

10

9

8

Reserved

SOMISET0

SIMOSET0

CLKSET

ENASET

R-0

R/W-U

R/W-U

R/W-U

R/W-U

7

0

SCSSET

R/W-U

LEGEND:R/W=Read/Write;R=Readonly;U=Undefined;-n=valueafterreset

Table25-17.SPIPinControlRegister4(SPIPC4)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMISET

SPISOMIxdataoutset.ThispinisonlyactivewhentheSPISOMIxpinisconfiguredasageneral-

purposeoutputpin.

Bit11orbit24canbeusedtosettheSOMI0pin.Ifa32-bitwriteisperformed,bit11will

havepriorityoverbit24.

0

Read:SPISIMOxislogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:SPISOMIxislogic1.

Write:Logic1isplacedonSPISOMIxpinifitisingeneral-purposeoutputmode.

1282

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-17.SPIPinControlRegister4(SPIPC4)FieldDescriptions(continued)

Bit

Field

Value

Description

23-16

SIMOSET

SPISIMOxdataoutset.ThisbitisonlyactivewhentheSPISIMOxpinisconfiguredasageneral-

purposeoutputpin.

Bit10orbit16canbeusedtosettheSOMI0pin.Ifa32-bitwriteisperformed,bit10will

havepriorityoverbit16.

0

Read:SPISIMIxislogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:SPISIMIxislogic1.

Write:Logic1isplacedonSPISIMIxpinifitisingeneral-purposeoutputmode.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMISET0

SPISOMI0dataoutset.ThispinisonlyactivewhentheSPISOMI0pinisconfiguredasageneral-

purposeoutputpin.

0

Read:SPISOMI0islogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:SPISOMI0islogic1.

Write:Logic1isplacedonSPISOMI0pinifitisingeneral-purposeoutputmode.

10

SIMOSET0

SPISIMO0dataoutset.ThispinisonlyactivewhentheSPISIMO0pinisconfiguredasageneral-

purposeoutputpin.

0

Read:SPISIMO0islogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:SPISIMO0islogic1.

Write:Logic1isplacedonSPISIMO0pinifitisingeneral-purposeoutputmode.

9

CLKSET

SPICLKdataoutset.ThisbitisonlyactivewhentheSPICLKpinisconfiguredasageneral-purpose

outputpin.

0

Read:SPICLKislogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:SPICLKislogic1.

Write:Logic1isplacedonSPICLKpinifitisingeneral-purposeoutputmode.

8

ENASET

SPIENAdataoutset.ThisbitisonlyactivewhentheSPIENApinisconfiguredasageneral-

purposeoutputpin.

0

Read:TheSPIENApinislogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheSPIENApinislogic1.

Write:Logic1isplacedonSPIENApinifitisingeneral-purposeO/Pmode.

7-0

SCSSET

SPISCSxdataoutset.ThisbitisonlyactivewhentheSPISCSxpinisconfiguredasageneral-

purposeoutputpin.Avalueof1writtentothisbitsetsthecorrespondingSCSDOUTbitto1.

0

Read:TheSPISCSxpinislogic0.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheSPISCSxpinislogic1.

Write:Logic1placedonSPISCSxpinifitisingeneral-purposeoutputmode.

1283

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.11SPIPinControlRegister5(SPIPC5)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

Figure25-36.SPIPinControlRegister5(SPIPC5)[offset=28h]

31

24

23

16

SOMICLR

SIMOCLR

R/W-U

R/W-U

15

12

11

10

9

8

Reserved

SOMICLR0

SIMOCLR0

CLKCLR

ENACLR

R-0

R/W-U

R/W-U

R/W-U

R/W-U

7

0

SCSCLR

R/W-U

LEGEND:R/W=Read/Write;R=Readonly;U=Undefined;-n=valueafterreset

Table25-18.SPIPinControlRegister5(SPIPC5)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMICLR

SPISOMIxdataoutclear.ThispinisonlyactivewhentheSPISOMIxpinisconfiguredasageneral-

purposeoutputpin.

Bit11orbit24canbeusedtosettheSOMI0pin.Ifa32-bitwriteisperformed,bit11willhave

priorityoverbit24.

0

Read:ThecurrentvalueonSOMIDOUTxis0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonSOMIDOUTxis1.

Write:Logic0isplacedonSPISOMIxpinifitisingeneral-purposeoutputmode.

23-16

SIMOCLR

SPISIMOxdataoutclear.ThisbitisonlyactivewhentheSPISIMOxpinisconfiguredasageneral-

purposeoutputpin.

Bit10orbit16canbeusedtosettheSOMI0pin.Ifa32-bitwriteisperformed,bit10willhave

priorityoverbit16.

0

Read:ThecurrentvalueonSOMODOUTxis0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonSOMODOUTxis1.

Write:Logic0isplacedonSPISIMIxpinifitisingeneral-purposeoutputmode.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMICLR0

SPISOMI0dataoutcleart.ThispinisonlyactivewhentheSPISOMI0pinisconfiguredasageneral-

purposeoutputpin.

0

Read:ThecurrentvalueonSPISOMI0is0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonSPISOMI0is1.

Write:Logic0isplacedonSPISOMI0pinifitisingeneral-purposeoutputmode.

10

SIMOCLR0

SPISIMO0dataoutclear.ThispinisonlyactivewhentheSPISIMO0pinisconfiguredasageneral-

purposeoutputpin.

0

Read:ThecurrentvalueonSPISIMO0is0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonSPISIMO0is1.

Write:Logic0isplacedonSPISIMO0pinifitisingeneral-purposeoutputmode.

1284

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-18.SPIPinControlRegister5(SPIPC5)FieldDescriptions(continued)

Bit

Field

Value

Description

9

CLKCLR

SPICLKdataoutclear.ThisbitisonlyactivewhentheSPICLKpinisconfiguredasageneral-

purposeoutputpin.

0

Read:ThecurrentvalueonSPICLKis0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonSPICLKis1.

Write:Logic0isplacedonSPICLKpinifitisingeneral-purposeoutputmode.

8

ENACLR

SPIENAdataoutclear.ThisbitisonlyactivewhentheSPIENApinisconfiguredasageneral-

purposeoutputpin.Avalueof1writtentothisbitclearsthecorrespondingENABLEDOUTbitto0.

0

Read:ThecurrentvalueonENAis0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonENAis1.

Write:Logic0isplacedonSPIENApinifitisingeneral-purposeO/Pmode.

7-0

SCSCLR

SPISCSxdataoutclear.ThisbitisonlyactivewhentheSPISCSxpinisconfiguredasageneral-

purposeoutputpin.

0

Read:ThecurrentvalueonSCSDOUTxis0.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThecurrentvalueonSCSDOUTxis1.

Write:Logic0placedonSPISCSxpinifitisingeneral-purposeoutputmode.

25.9.12SPIPinControlRegister6(SPIPC6)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofSPIPC0toSPIPC9reflectthenumberofSIMO/SOMIdata

linesperdevice.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.

Ondeviceswithlessthan8datalines,onlyasubsetofthesebitsareavailable.

Unimplementedbitsreturn0uponreadandarenotwritable.

Figure25-37.SPIPinControlRegister6(SPIPC6)[offset=2Ch]

31

24

23

16

SOMIPDR

SIMOPDR

R/W-0

R/W-0

15

12

11

10

9

8

Reserved

SOMIPDR0

SIMOPDR0

CLKPDR

ENAPDR

R-0

R/W-0

R/W-0

R/W-0

R/W-0

7

0

SCSPDR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

1285

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-19.SPIPinControlRegister6(SPIPC6)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIPDR

SPISOMIxopendrainenable.ThisbitenablesopendraincapabilityfortheSPISOMIxpinifthe

followingconditionsaremet:

•SOMIDIRx=1(SPISOMIxpinconfiguredinGIOmodeasanoutput)

•SOMIDOUTx=1

Bit11orbit24canbothbeusedtoenableopen-drainforSOMI0.Ifa32-bitwriteisperformed,

bit11willhavepriorityoverbit24.

0

TheoutputvalueontheSPISOMIxpinislogic1.

1

OutputpinSPISOMIxisinahigh-impedancestate.

23-16

SIMOPDR

SPISIMOxopendrainenable.ThisbitenablesopendraincapabilityfortheSPISIMOxpinifthe

followingconditionsaremet:

•SIMODIRx=1(SPISIMOxpinconfiguredinGIOmodeasanoutput)

•SIMODOUTx=1

Bit10orbit16canbothbeusedtoenableopen-drainforSIMO0.Ifa32-bitwriteisperformed,

bit10willhavepriorityoverbit16.

0

TheoutputvalueonSPISIMOxpinislogic1.

1

OutputpinSPISIMOxisinahigh-impedancestate.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIPDR0

SOMI0open-drainenable.Thisbitenablesopen-draincapabilityforSOMI0ifthefollowingconditions

aremet.

•SOMI0pinconfiguredinGIOmodeasoutputpin

•OutputvalueonSPISOMI0pinislogic1.

0

Outputvalue1ofSPISOMI0pinislogic1.

1

Outputvalue1ofSPISOMI0ishigh-impedance.

10

SIMOPDR0

SPISIMO0open-drainenable.Thisbitenablesopen-draincapabilityfortheSPISIMO0pinifthe

followingconditionsaremet.

•SIMO0pinconfiguredinGIOmodeasoutputpin

•OutputvalueonSPISIMO0pinislogic1.

0

Outputvalue1ofSPISIMO0pinislogic1.

1

Outputvalue1ofSPISIMO0ishigh-impedance.

9

CLKPDR

CLKopendrainenable.ThisbitenablesopendraincapabilityforthepinCLKifthefollowing

conditionsaremet:

•SPICLKpinconfiguredinGIOmodeasanoutputpin

•SPICLKDOUT=1

0

OutputvalueonCLKpinislogic1.

1

OutputpinCLKisinahigh-impedancestate.

8

ENAPDR

SPIENApinopendrainenable.ThisbitenablesopendraincapabilityforSPIENAifthefollowing

conditionsaremet:

•SPIENApinconfiguredinGIOmodeasanoutputpin

•SPIENADOUT=1

0

OutputvalueSPIENAonpinislogic1.

1

OutputpinSPIENAisinahigh-impedancestate.

7-0

SCSPDR

SPISCSxopendrainenable.ThisbitenablesopendraincapabilityfortheSPISCSxpinifthe

followingconditionsaremet:

•SPISCSpinconfiguredinGIOmodeasanoutputpin

•SPISCSDOUTx=1

0

OutputvalueonSCSxpinislogic1.

1

OutputpinSCSxisinahigh-impedancestate.

1286

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.13SPIPinControlRegister7(SPIPC7)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

NOTE:DefaultRegisterValue

Thedefaultvaluesoftheseregisterbitsvarybydevice.Seeyourdevicedatasheetfor

informationaboutdefaultpinstates,whichcorrespondtotheregisterresetvalues(seethe

pin-listtable).

Figure25-38.SPIPinControlRegister7(SPIPC7)[offset=30h]

31

24

23

16

SOMIDIS

SIMODIS

R/W-x

R/W-x

15

12

11

10

9

8

Reserved

SOMIPDIS0

SIMOPDIS0

CLKPDIS

ENAPDIS

R-0

R/W-x

R/W-x

R/W-x

R/W-x

7

0

SCSPDIS

R/W-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-x=valuevariesbydevice

Table25-20.SPIPinControlRegister7(SPIPC7)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIDIS

SOMIxpullcontrolenable/disable.ThisbitenablespullcontrolcapabilityfortheSOMIxpinifitisin

inputmoderegardlessofwhetheritisinfunctionalorGIOmode.

Note:Bit11orbit24canbeusedtosetpull-disableforSOMIO.Ifa32-bitwriteisperformed,

bit11willhavepriorityoverbit24.

0

PullcontrolontheSPISOMIxpinisenabled.

1

PullcontrolontheSPISOMIxpinisdisabled.

23-16

SIMODIS

SIMOxpullcontrolenable/disable.ThisbitenablespullcontrolcapabilityfortheSIMOxpinifitisin

inputmoderegardlessofwhetheritisinfunctionalorGIOmode.

Note:Bit10orbit16canbeusedtosetpull-disableforSIMO0.Ifa32-bitwriteisperformed,

bit10willhavepriorityoverbit16.

0

PullcontrolonSPISIMOxpinisenabled.

1

PullcontrolonSPISIMOxpinisdisabled.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIPDIS0

SPISOMI0pullcontrolenable/disable.ThisbitenablespullcontrolcapabilityforthepinSPISOMI0

pinifitisininputmoderegardlessofwhetheritisinfunctionalorGIOmode.

0

PullcontrolontheSPISOMI0pinisenabled.

1

PullcontrolontheSPISOMI0pinisdisabled.

10

SIMOPDIS0

SPISIMO0pullcontrolenable/disable.ThisbitenablespullcontrolcapabilityforthepinSPISIMO0

pinifitisininputmoderegardlessofwhetheritisinfunctionalorGIOmode.

0

PullcontrolontheSPISIMO0pinisenabled.

1

PullcontrolontheSPISIMO0pinisdisabled.

1287

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-20.SPIPinControlRegister7(SPIPC7)FieldDescriptions(continued)

Bit

Field

Value

Description

9

CLKPDIS

CLKpullcontrolenable/disable.ThisbitenablespullcontrolcapabilityforthepinSPICLKpinifitisin

inputmoderegardlessofwhetheritisinfunctionalorGIOmode.

0

PullcontrolontheCLKpinisenabled.

1

PullcontrolontheCLKpinisdisabled.

8

ENAPDIS

ENABLEpullcontrolenable/disable.ThisbitenablespullcontrolcapabilityforthepinSPIENApinifit

isininputmoderegardlessofwhetheritisinfunctionalorGIOmode.

0

PullcontrolonENABLEpinisenabled.

1

PullcontrolonENABLEpinisdisabled.

7-0

SCSPDIS

SCSxpullcontrolenable/disable.ThisbitenablespullcontrolcapabilityforthepinSPISCSxpinifitis

ininputmoderegardlessofwhetheritisinfunctionalorGIOmode.

0

PullcontrolonSCSxpinisenabled.

1

PullcontrolonSCSxpinisdisabled.

25.9.14SPIPinControlRegister8(SPIPC8)

NOTE:Registerbitsvarybydevice

Registerbits31:24and23:16ofthisregisterreflectthenumberofSIMO/SOMIdatalinesper

device.Ondeviceswith8data-linesupport,allofbits31to16areimplemented.Ondevices

withlessthan8datalines,onlyasubsetofthesebitsareavailable.Unimplementedbits

return0uponreadandarenotwritable.

NOTE:DefaultRegisterValue

Thedefaultvaluesoftheseregisterbitsvarybydevice.Seeyourdevicedatasheetfor

informationaboutdefaultpinstates,whichcorrespondtotheregisterresetvalues(seethe

pin-listtable).

Figure25-39.SPIPinControlRegister8(SPIPC8)[offset=34h]

31

24

23

16

SOMIPSEL

SIMOPSEL

R/W-x

R/W-x

15

12

11

10

9

8

Reserved

SOMIPSEL0

SIMOPSEL0

CLKPSEL

ENAPSEL

R-0

R/W-x

R/W-x

R/W-x

R/W-x

7

0

SCSPSEL

R/W-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-x=valuevariesbydevice

Table25-21.SPIPinControlRegister8(SPIPC8)FieldDescriptions

Bit

Field

Value

Description

31-24

SOMIPSEL

SPISOMIxpullselect.ThisbitselectsthetypeofpulllogicattheSOMIxpin.

Note:Bit11orbit24canbeusedtosetpull-selectforSPISOMI0.Ifa32-bitwriteis

performed,bit11willhavepriorityoverbit24.

0

PulldownonSOMIxpin

1

PulluponSOMIxpin

1288

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-21.SPIPinControlRegister8(SPIPC8)FieldDescriptions(continued)

Bit

Field

Value

Description

23-16

SIMOPSEL

SPISIMOxpullselect.ThisbitselectsthetypeofpulllogicattheSPISIMOxpin.

Note:Bit10orbit16canbeusedtosetpull-selectforSPISOMI0.Ifa32-bitwriteis

performed,bit10willhavepriorityoverbit16.

0

PulldownonSPISIMOxpin

1

PulluponSPISIMOxpin

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

SOMIPSEL0

SOMIpullselect.ThisbitselectsthetypeofpulllogicattheSOMIpin.

0

PulldownontheSPISOMIpin

1

PullupontheSPISOMIpin

10

SIMOPSEL0

SPISIMOpullselect.ThisbitselectsthetypeofpulllogicattheSPISIMOpin.

0

PulldownonSPISIMOpin

1

PulluponSPISIMOpin

9

CLKPSEL

CLKpullselect.ThisbitselectsthetypeofpulllogicattheCLKpin.

0

PulldownonCLKpin

1

PulldownonCLKpin

8

ENAPSEL

ENABLEpullselect.ThisbitselectsthetypeofpulllogicattheENABLEpin.

0

PulldownonENABLEpin

1

PulldownonENABLEpin

7-0

SCSPSEL

SCSxpullselect.ThisbitselectsthetypeofpulllogicattheSCSxpin.

0

PulldownonSCSxpin

1

PulldownonSCSxpin

25.9.15SPITransmitDataRegister0(SPIDAT0)

Figure25-40.SPITransmitDataRegister0(SPIDAT0)[offset=38h]

31

16

Reserved

R-0

15

0

TXDATA

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-22.SPITransmitDataRegister0(SPIDAT0)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

TXDATA

0-FFFFh

SPItransmitdata.Whenwritten,thesebitswillbecopiedtotheshiftregisterifitisempty.If

theshiftregisterisnotempty,TXBUFholdsthewrittendata.SPIEN(SPICGR1[24])mustbe

setto1beforethisregistercanbewrittento.Writinga0totheSPIENregisterforcesthelower

16bitsoftheSPIDAT0to0x00.

Note:Whenthisregisterisread,thecontentsTXBUF,whichholdsthelatestwrittendata,

willbereturned.

Note:Regardlessofcharacterlength,thetransmitwordshouldberight-justifiedbefore

writingtotheSPIDAT1register.

Note:ThedefaultdataformatcontrolregisterforSPIDAT0isSPIFMT0.However,itis

possibletoreprogramtheDFSEL[1:0]fieldsofSPIDAT1beforeusingSPIDAT0,toselect

adifferentSPIFMTxregister.

1289

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.16SPITransmitDataRegister1(SPIDAT1)

Figure25-41.SPITransmitDataRegister1(SPIDAT1)[offset=3Ch]

31

29

28

27

26

25

24

23

16

Reserved

CSHOLD

Rsvd

WDEL

DFSEL

CSNR

R-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

15

0

TXDATA

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;S=Set;-n=valueafterreset

Table25-23.SPITransmitDataRegister1(SPIDAT1)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readreturns0.Writeshavenoeffect.

28

CSHOLD

Chipselectholdmode.TheCSHOLDbitissupportedinmastermodeonlyincompatibility-modeof

SPI,(itisignoredinslavemode).CSHOLDdefinesthebehaviorofthechipselectlineattheendofa

datatransfer.

0

ThechipselectsignalisdeactivatedattheendofatransferaftertheT2CDELAYtimehaspassed.If

twoconsecutivetransfersarededicatedtothesamechipselectthischipselectsignalwillbe

deactivatedforatleast2VCLKcyclesbeforeitisactivatedagain.

1

Thechipselectsignalisheldactiveattheendofatransferuntilacontrolfieldwithnewdataand

controlinformationisloadedintoSPIDAT1.Ifthenewchipselectnumberequalsthepreviousone,

theactivechipselectsignalisextendeduntiltheendoftransferwithCSHOLDcleared,oruntilthe

chip-selectnumberchanges.

27

Reserved

0

Readsreturns0.Writeshavenoeffect.

26

WDEL

Enablethedelaycounterattheendofthecurrenttransaction.

Note:TheWDELbitissupportedinmastermodeonly.Inslavemode,thisbitwillbeignored.

0

Nodelaywillbeinserted.However,SPISCSpinswillstillbede-activatedforatleastfor2VCLK

cyclesifCSHOLD=0.

Note:ThedurationforwhichtheSPISCSpinremainsdeactivateddependsuponthetime

takentosupplyanewwordaftercompletingtheshiftoperation.IfTXBUFisalreadyfull,then

theSPISCSwillbedeassertedforatleasttwoVCLKcycles(ifWDEL=0).

1

Afteratransaction,WDELAYofthecorrespondingdataformatwillbeloadedintothedelaycounter.

NotransactionwillbeperformeduntiltheWDELAYcounteroverflows.TheSPISCSpinswillbede-

activatedforatleast(WDELAY+2)*VCLK_Periodduration.

25-24

DFSEL

Datawordformatselect

0

Datawordformat0isselected

1h

Datawordformat1isselected

2h

Datawordformat2isselected

3h

Datawordformat3isselected

23-16

CSNR

0-FFh

Chipselectnumber.CSNRdefinesthechip-selectthatwillbeactivatedduringthedatatransfer.

Note:WritingtoonlythecontrolfielddoesnotinitiateanySPItransferinmastermode.This

featurecanbeusedtosetupSPICLKphaseorpolaritybeforeactuallystartingthetransferby

onlyupdatingtheDFSELfieldsinthecontrolfieldtoselecttherequiredphase/polarity

combination.

15-0

TXDATA

0-FFFFh

Transferdata.Whenwritten,thesebitsarecopiedtotheshiftregisterifitisempty.Iftheshiftregister

isnotempty,thentheyareheldinTXBUF.

SPIENmustbesetto1beforethisregistercanbewrittento.Writinga0toSPIENforcesthelower

16bitsofSPIDAT1to0x0000.

WritetothisregisterONLYwhenusingtheautomaticslavechip-selectfeature(seeSection25.2).A

writetothisregisterwilldrivethecontentsofCSNR[3:0]ontheSPISCS[3:0]pins,iftheyare

configuredasfunctionalpins.

Whenthisregisterisread,thecontentsofTXBUF,whichholdsthelatestdatawritten,willbe

returned.

Note:Regardlessofthecharacterlength,thetransmitdatashouldberight-justifiedbefore

writingtotheSPIDAT1register.

1290

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.17SPIReceiveBufferRegister(SPIBUF)

Figure25-42.SPIReceiveBufferRegister(SPIBUF)[offset=40h]

31

30

29

28

27

26

25

24

RXEMPTY

RXOVR

TXFULL

BITERR

DESYNC

PARITYERR

TIMEOUT

DLENERR

R-1

R-0

R-0

R-0

R-0

R-0

R-0

R-0

23

16

LCSNR

R-0

15

0

RXDATA

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-24.SPIReceiveBufferRegister(SPIBUF)FieldDescriptions

Bit

Field

Value

Description

31

RXEMPTY

Receivedatabufferempty.WhenthehostreadstheSPIBUFfieldortheentireSPIBUFregister,

itautomaticallysetstheRXEMPTYflag.Whenadatatransferiscompleted,thereceiveddatais

copiedintoSPIBUF,andtheRXEMPTYflagiscleared.

0

NewdatahasbeenreceivedandcopiedintotheSPIBUFfield.

1

NodatahasbeenreceivedsincethelastreadofSPIBUF.

Thisflaggetssetto1underthefollowingconditions:

•ReadingtheRXDATAportionoftheSPIBUFregister.

•Writinga1tocleartheRXINTFLGbitintheSPIFlagRegister(SPIFLG)register.

Write-clearingtheRXINTFLGbitbeforereadingtheSPIBUFindicatesthereceiveddataisbeing

ignored.Conversely,RXINTFLGcanbeclearedbyreadingtheRXDATAportionofSPIBUF(or

theentireregister).

30

RXOVR

Receivedatabufferoverrun.Whenadatatransferiscompletedandthereceiveddataiscopied

intoRXBUFwhileitisalreadyfull,RXOVRisset.OverrunsalwaysoccurtoRXBUF,notto

SPIBUF;thecontentsofSPIBUFareoverwrittenonlyafteritisreadbythePeripheral(VBUSP)

master(CPU,DMA,orotherhostprocessor).

Ifenabled,theRXOVRNinterruptisgeneratedwhenRXBUFisoverwritten,andreadingeitherSPI

FlagRegister(SPIFLG)orSPIVECTxshowstheRXOVRNcondition.Tworeadoperationsfrom

theSPIBUFregisterarerequiredtoreachtheoverwrittenbufferword(onetoreadSPIBUF,which

thentransfersRXDATAintoSPIBUFforthesecondread).

Thisflagisclearedto0whentheRXDATAisread.

Note:AspecialconditionunderwhichRXOVRflaggetsset.IfbothSPIBUFandRXBUFare

alreadyfullandwhileanotherbufferreceiveisunderway,ifanyerrorssuchasTIMEOUT,

BITERRandDLEN_ERRoccur,thenRXOVRinRXBUFandSPIFlagRegister(SPIFLG)

registerswillbesettoindicatethatthestatusflagsaregettingoverwrittenbythenew

transfer.Thisoverrunshouldbetreatedlikeanormalreceiveoverrun.

0

Noreceivedataoverrunconditionoccurredsincelastreadofthedatafield.

1

Areceivedataoverrunconditionoccurredsincelastreadofthedatafield.

29

TXFULL

Transmitdatabufferfull.Thisflagisaread-onlyflag.WritingintotheSPIDAT0orSPIDAT1field

whiletheTXshiftregisterisfullwillautomaticallysettheTXFULLflag.Oncethewordiscopiedto

theshiftregister,theTXFULLflagwillbecleared.WritingtoSPIDAT0orSPIDAT1whenboth

TXBUFandtheTXshiftregisterareemptydoesnotsettheTXFULLflag.

0

Thetransmitbufferisempty;SPIDAT0/SPIDAT1isreadytoacceptanewdata.

1

Thetransmitbufferisfull;SPIDAT0/SPIDAT1isnotreadytoacceptnewdata.

1291

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-24.SPIReceiveBufferRegister(SPIBUF)FieldDescriptions(continued)

Bit

Field

Value

Description

28

BITERR

Biterror.Therewasamismatchofinternaltransmitdataandtransmitteddata.

0

Nobiterroroccured.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

1

Abiterroroccurred.TheSPIsamplesthesignalofthetransmitpins(master:SIMOx,slave:

SOMIx)atthereceivepoint(one-halfclockcycleafterthetransmitpoint).Ifthesampledvalue

differsfromthetransmittedvalue,abiterrorisdetectedandtheBITERRflagisset.Possible

reasonsforabiterrorincludenoise,anexcessivelyhighbitrate,capacitiveload,oranother

master/slavetryingtotransmitatthesametime.

27

DESYNC

Desynchronizationofslavedevice.Thisbitisvalidinmastermodeonly.

ThemastermonitorstheENAsignalcomingfromtheslavedeviceandsetstheDESYNCflagif

ENAisdeactivatedbeforethelastreceptionpointorafterthelastbitistransmittedplustT2EDELAY.

IfDESYNCENAisset,aninterruptisasserted.Desynchronizationcanoccurifaslavedevice

missesaclockedgecomingfromthemaster.

Note:IntheCompatibilityModeMibSPI,undersomecircumstancesitispossiblefora

desyncerrordetectedforthepreviousbuffertobevisibleinthecurrentbuffer.Thisis

becausethereceivecompletionflag/interruptisgeneratedwhenthebuffertransferis

completed.Butdesynchronizationisdetectedafterthebuffertransferiscompleted.So,if

theVBUSmasterreadsthereceiveddataquicklywhenanRXINTisdetected,thenthe

statusflagmaynotreflectthecorrectdesynccondition.Inmulti-buffermode,thedesync

flagisalwaysguaranteedtobeforthecurrentbuffer.

0

Noslavedesynchronizationdetected.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

1

Aslavedeviceisdesynchronized.

26

PARITYERR

Parityerror.Thecalculatedparitydiffersfromthereceivedparitybit.

Iftheparitygeneratorisenabled(selectedindividuallyforeachbuffer)anevenoroddparitybitis

addedattheendofadataword.Duringreceptionofthedataword,theparitygeneratorcalculates

thereferenceparityandcomparesittothereceivedparitybit.Ifamismatchisdetected,the

PARITYERRflagisset.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

0

Noparityerrordetected.

1

Aparityerroroccured.

25

TIMEOUT

Time-outbecauseofnon-activationofENApin.

TheSPIgeneratesatime-outwhentheslavedoesnotrespondintimebyactivatingtheENA

signalafterthechipselectsignalhasbeenactivated.Ifatime-outconditionisdetected,the

correspondingchipselectisdeactivatedimmediatelyandtheTIMEOUTflagisset.Inaddition,the

TIMEOUTflaginthestatusfieldofthecorrespondingbufferandintheSPIFlagRegister

(SPIFLG)registerisset.

Thisbitisvalidonlyinmastermode.

Thisflagisclearedto0whenRXDATAportionoftheSPIBUFregisterisread.

0

NoENA-pintime-outoccured.

1

AnENAsignaltime-outoccured.

24

DLENERR

Datalengtherrorflag.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

0

Nodata-lengtherrorhasoccurred.

1

Adatalengtherrorhasoccurred.

23-16

LCSNR

0-FFh

Lastchipselectnumber.LCSNRinthestatusfieldisacopyofCSNRinthecorresponding

controlfield.Itcontainsthechipselectnumberthatwasactivatedduringthelastwordtransfer.

15-0

RXDATA

0-FFFFh

SPIreceivedata.Thisisthereceivedword,transferredfromthereceiveshift-registerattheend

ofatransfer.Regardlessoftheprogrammedcharacterlengthandthedirectionofshifting,the

receiveddataisstoredright-justifiedintheregister.

1292

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.18SPIEmulationRegister(SPIEMU)

Figure25-43.SPIEmulationRegister(SPIEMU)[offset=44h]

31

16

Reserved

R-8000h

15

0

EMU_RXDATA

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-25.SPIEmulationRegister(SPIEMU)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

8000h

Readreturns0.Writeshavenoeffect.

15-0

EMU_RXDATA

0-FFFFh

SPIreceivedata.TheSPIemulationregisterisamirroroftheSPIBUFregister.Theonly

differencebetweenSPIEMUandSPIBUFisthatareadfromSPIEMUdoesnotclearany

ofthestatusflags.

25.9.19SPIDelayRegister(SPIDELAY)

Figure25-44.SPIDelayRegister(SPIDELAY)[offset=48h]

31

24

23

16

C2TDELAY

T2CDELAY

R/W-0

R/W-0

15

8

7

0

T2EDELAY

C2EDELAY

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-26.SPIDelayRegister(SPIDELAY)FieldDescriptions

Bit

Field

Value

Description

31-24

C2TDELAY

0-1FFh

Chip-select-activetotransmit-startdelay.SeeFigure25-45foranexample.C2TDELAYisused

onlyinmastermode.Itdefinesasetuptime(fortheslavedevice)thatdelaysthedata

transmissionfromthechipselectactiveedgebyamultipleofVCLKcycles.

Thesetuptimevalueiscalculatedasfollows.

tC2TDELAY=(C2TDELAY+2)*VCLKPeriod

Note:IfC2TDELAY=0,thentC2TDELAY=0.

Example:VCLK=25MHz->VCLKPeriod=40ns;C2TDELAY=07h;

>tC2TDELAY=360ns

Whenthechipselectsignalbecomesactive,theslavehastopreparedatatransferwithin360ns.

Note:Ifphase=1,thedelaybetweenSPICSfallingedgetothefirstedgeofSPICLKwill

haveanadditional0.5SPICLKperioddelay.ThisdelayisaspertheSPIprotocol.

1293

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-26.SPIDelayRegister(SPIDELAY)FieldDescriptions(continued)

Bit

Field

Value

Description

23-16

T2CDELAY

0-1FFh

Transmit-end-to-chip-select-inactive-delay.SeeFigure25-46foranexample.T2CDELAYis

usedonlyinmastermode.Itdefinesaholdtimefortheslavedevicethatdelaysthechipselect

deactivationbyamultipleofVCLKcyclesafterthelastbitistransferred.Theholdtimevalueis

calculatedasfollows:

tT2CDELAY=(T2CDELAY+1)*VCLKPeriod

Note:IfT2CDELAY=0,thentT2CDELAY=0

Example:VCLK=25MHz->VCLKPeriod=40ns;T2CDELAY=03h;

>tT2CDELAY=160ns;

Afterthelastdatabit(orparitybit)isbeingtransferredthechipselectsignalisheldactivefor160

ns.

Note:Ifphase=0,thenbetweenthelastedgeofSPICLKandrise-edgeofSPICStherewill

beanadditionaldelayof0.5SPICLKperiod.ThisisaspertheSPIprotocol.

Note:C2TDELAYandT2CDELAYcountersdonotcountwhenSPIENAstopstransmission.

BothC2TDELAYandT2CDELAYcountersdonothaveanydependencyontheSPIENApin

value.EveniftheSPIENApinisassertedbytheslave,themasterwillcontinuetodelaythestart

ofSPICLKuntiltheC2TDELAYcounteroverflows.

Similarly,eveniftheSPIENApinisdeassertedbytheslave,themasterwillcontinuetoholdthe

SPISCSpinsactiveuntiltheT2CDELAYcounteroverflows.Inthisway,itisguaranteedthatthe

setupandholdtimesoftheSPISCSpinsaredeterminedbythedelaytimersalone.Toachieve

betterthroughput,itshouldbeensuredthatthesetwotimersarekeptattheminimumpossible

values.

15-8

T2EDELAY

0-1FFh

Transmit-data-finishedtoENA-pin-inactivetime-out.T2EDELAYisusedinmastermodeonly.

Itdefinesatime-outvalueasamultipleofSPIclockbeforeSPIENAsignalhastobecomeinactive

andafterSPISCSbecomesinactive.SPICLKdependsonwhichdataformatisselected.Ifthe

slavedeviceismissingoneormoreclockedges,itbecomesde-synchronized.Inthiscase,

althoughthemasterhasfinishedthedatatransfer,theslaveisstillwaitingforthemissedclock

pulsesandtheENAsignalisn'tdisabled.

TheT2EDELAYdefinesatime-outvaluethattriggerstheDESYNCflag,iftheSPIENAsignalisn't

deactivatedintime.TheDESYNCflagissettoindicatethattheslavedevicedidnotde-assertits

SPIENApinintimetoacknowledgethatitreceivedallbitsofthesentword.SeeFigure25-47for

anexampleofthiscondition.

Note:DESYNCisalsosetiftheSPIdetectsade-assertionofSPIENAbeforetheendofthe

transmission.Thetime-outvalueiscalculatedasfollows:

tT2EDELAY=T2EDELAY/SPIclock

Example:SPIclock=8Mbit/s;T2EDELAY=10h;

>tT2EDELAY=2µs;

TheslavedevicehastodisabletheENAsignalwithin2ïs,otherwiseDESYNCissetandan

interruptisasserted(ifenabled).

7-0

C2EDELAY

0-1FFh

Chip-select-activetoENA-signal-activetime-out.C2EDELAYisusedonlyinmastermodeand

itappliesonlyiftheaddressedslavegeneratesanENAsignalasahardwarehandshake

response.C2EDELAYdefinesthemaximumtimebetweenwhentheSPIactivatesthechip-select

signalandtheaddressedslavehastorespondbyactivatingtheENAsignal.C2EDELAYdefinesa

time-outvalueasamultipleofSPIclocks.TheSPIclockdependsonwhetherdataformat0or

dataformat1isselected.SeeFigure25-48foranexampleofthiscondition.

Note:IftheslavedevicedoesnotrespondwiththeENAsignalbeforethetime-outvalueis

reached,theTIMEOUTflagintheSPIFLGregisterissetandainterruptisasserted(if

enabled).

Ifatime-outoccurs,theSPIclearsthetransmitrequestofthetimed-outbuffer,setstheTIMEOUT

flagforthecurrentbuffer,andcontinueswiththetransferofthenextbufferinthesequencethatis

enabled.

Thetimeoutvalueiscalculatedasfollows:tC2EDELAY=C2EDELAY/SPIclock

Example:SPIclock=8Mbit/s;C2EDELAY=30h;

>tC2EDELAY=6ms;

TheslavedevicehastoactivatetheENAsignalwithin6msaftertheSPIhasactivatedthechip

selectsignal(SPISCS),otherwisetheTIMEOUTflagissetandaninterruptisasserted(if

enabled).

1294

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SCSENACLKSOMI

tC2EDELAY

SCSENACLKSOMI1t

SCSCLKSOMIVCLKtT2CDELAY

SCSCLKSOMI

VCLKtC2TDELAY



www.ti.comControlRegisters

Figure25-45.Example:tC2TDELAY=8VCLKCycles

Figure25-46.Example:tT2CDELAY=4VCLKCycles

Figure25-47.Transmit-Data-Finished-to-ENA-Inactive-Timeout

Figure25-48.Chip-Select-Active-to-ENA-Signal-Active-Timeout

1295

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.20SPIDefaultChipSelectRegister(SPIDEF)

Figure25-49.SPIDefaultChipSelectRegister(SPIDEF)[offset=4Ch]

31

16

Reserved

R-0

15

8

7

0

Reserved

CSDEF

R-0

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-27.SPIDefaultChipSelectRegister(SPIDEF)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

CDEF

0-FFh

Chipselectdefaultpattern.Master-modeonly.

TheCSDEFxbitsareoutputtotheSPISCSpinswhennotransmissionisbeingperformed.It

allowstheusertosetaprogrammablechip-selectpatternthatdeselectsalloftheSPIslaves.

0

SPISCSxissetto0whennotransferisactive.

1

SPISCSxissetto1whennotransferisactive.

1296

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.21SPIDataFormatRegisters(SPIFMT)

Figure25-50.SPIDataFormatRegisters(SPIFMT[3:0])[offset=5Ch-50h]

31

24

WDELAY

R/WP-0

23

22

21

20

19

18

17

16

PARPOL

PARITYENA

WAITENA

SHIFTDIR

HDUPLEX_ENAx

DISCSTIMERS

POLARITY

PHASE

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

8

7

5

4

0

PRESCALE

Reserved

CHARLEN

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-28.SPIDataFormatRegisters(SPIFMT[3:0])FieldDescriptions

Bit

Field

Value

Description

31-24

WDELAY

0-3Fh

Delayinbetweentransmissionsfordataformatx(x=0,1,2,3).Idletimethatwillbeapplied

attheendofthecurrenttransmissionifthebitWDELissetinthecurrentbuffer.The

delaytobeappliedisequalto:

WDELAY*PVCLK+2*PVCLK

PVCLK->PeriodofVCLK.

23

PARPOL

Paritypolarity:evenorodd.PARPOLxcanbemodifiedinprivilegemodeonly.Itcanbe

usedfordataformatx(x=0,1,2,3).

0

Anevenparityflagisaddedattheendofthetransmitdatastream.

1

Anoddparityflagisaddedattheendofthetransmitdatastream.

22

PARITYENA

Parityenablefordataformatx.

Noparitygeneration/verificationisperformedforthisdataformat.

0

Aparitybitistransmittedattheendofeachtransmittedword.Attheendofatransferthe

paritygeneratorcomparesthereceivedparitybitwiththelocally-calculatedparityflag.If

theparitybitsdonotmatchtheRXERRflagissetinthecorrespondingcontrolfield.The

paritytype(evenorodd)canbeselectedviathePARPOLbit.

1

Note:Ifanuncorrectableerrorflagissetinaslave-modeSPI,thenthewrongparity

bitwillbetransmittedtoindicatetothemasterthattherehasbeensomeissuewith

thedataparity.TheSOMIpinswillbeforcedtotransmitall0s,andtheparitybitwill

betransmittedas1ifevenparityisselectedandas0ifoddparityisselected

(usingthePARPOLxbitofthisregister).Thisbehavioroccursregardlessofan

uncorrectableparityerroroneitherTXRAMorRXRAM.

21

WAITENA

ThemasterwaitsfortheENAsignalfromslavefordataformatx.WAITENAisvalidin

mastermodeonly.WAITENAenablesaflexibleSPInetworkwhereslaveswithENA

signalandslaveswithoutENAsignalcanbemixed.WAITENAdefines,foreach

transferredword,whethertheaddressedslavegeneratestheENAsignalornot.

0

TheSPIdoesnotwaitfortheENAsignalfromtheslaveanddirectlystartsthetransfer.

1

BeforetheSPIstartsthedatatransferitwaitsfortheENAsignaltobecomelow.Ifthe

ENAsignalisnotpulleddownbytheaddressedslavebeforetheinternaltime-outcounter

(C2EDELAY)overflows,thenthemasterabortsthetransferandsetstheTIMEOUTerror

flag.

20

SHIFTDIR

Shiftdirectionfordataformatx.WithbitSHIFTDIRx,theshiftdirectionfordataformatx

(x=0,1,2,3)canbeselected.

0

MSBisshiftedoutfirst.

1

LSBisshiftedoutfirst.

1297

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-28.SPIDataFormatRegisters(SPIFMT[3:0])FieldDescriptions(continued)

Bit

Field

Value

Description

19

HDUPLEX_ENAx

HalfDuplextransfermodeenableforDataFormatx.ThisbitcontrolstheI/Ofunction

ofSOMI/SIMOlinesforaspecificrequirementwhereinthecaseofMastermode,TXpin-

SIMOwillactasanRXpin,andinthecaseofSlavemode,RXpin-SIMOwillactasa

TXpin..

0

NormalFullDuplextransfer.

1

IfMASTER=‘1’,SIMOpinwillactasanRXpin(NoTXpossible)IfMASTER=‘0’,SIMO

pinwillactasaTXpin(NoRXpossible).

Forallnormaloperations,HDUPLEX_ENAxbitsshouldalwaysremain‘0’.Itisintended

fortheusagewhentheSIMOpinisusedforbothTX&RXoperationsatdifferenttimes.

18

DISCSTIMERS

Disablechip-selecttimersforthisformat.TheC2TDELAYandT2CDELAYtimersare

bydefaultenabledforallthedataformatregisters.Usingthisbit,thesetimerscanbe

disabledforaparticulardataformat,iftheyarenotrequired.Whenamasterishandling

multipleslaves,withvariedset-upholdrequirement,theapplicationcanselectively

choosetoincludeornotincludethechip-selectdelaytimersforanyslaves.

0

BothC2TDELAYandT2CDELAYcountsareinsertedforthechipselects.

1

NoC2TDELAYorT2CDELAYisinsertedinthechipselecttimings.

17

POLARITY

SPIdataformatxclockpolarity.POLARITYxdefinestheclockpolarityofdataformatx.

Thefollowingrestrictionsapplywhenswitchingclockphaseand/orpolarity:

•In3-pin/4-pinwithnENApinconfigurationofaslaveSPI,theclockphaseandpolarity

cannotbechangedon-the-flybetweentwotransfers.Theslaveshouldberesetand

reconfiguredifclockphase/polarityneedstobeswitched.Insummary,SPIformat

switchingisnotfullysupportedinslavemode.

•Evenwhileusingchipselectpins,thepolarityofSPICLKcanbeswitchedonlywhile

theslaveisnotselectedbyavalidchipselect.ThemasterSPIshouldensurethat

whileswitchingSPICLKpolarity,ithasdeselectedallofitsslaves.Otherwise,the

switchingofSPICLKpolaritymaybeincorrectlytreatedasaclockedgebysome

slaves.

0

IfPOLARITYxisclearedto0,theSPIclocksignalislow-inactive,thatis,beforeandafter

datatransfertheclocksignalislow.

1

IfPOLARITYxissetto1,theSPIclocksignalishigh-inactive,thatis,beforeandafter

datatransfertheclocksignalishigh.

16

PHASE

SPIdataformatxclockdelay.PHASExdefinestheclockdelayofdataformatx.

0

IfPHASExisclearedto0,theSPIclocksignalisnotdelayedversusthetransmit/receive

datastream.Thefirstdatabitistransmittedwiththefirstclockedgeandthefirstbitis

receivedwiththesecond(inverse)clockedge.

1

IfPHASExissetto1,theSPIclocksignalisdelayedbyahalfSPIclockcycleversusthe

transmit/receivedatastream.Thefirsttransmitbithastooutputpriortothefirstclock

edge.Themasterandslavereceivethefirstbitwiththefirstedge.

15-8

PRESCALE

SPIdataformatxprescaler.PRESCALExdeterminesthebittransferrateofdataformatx

iftheSPIisthenetworkmaster.PRESCALExisusetoderiveSPICLKfromVCLK.Ifthe

SPIisconfiguredasslave,PRESCALExdoesnotneedtobeconfigured.Theclockrate

fordataformatxcanbecalculatedas:

BRFormatx=VBUSPCLK/(PRESCALEx÷1)

Note:WhenPRESCALExissetto0,theSPIclockratedefaultstoVCLK/2.

7-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

CHARLEN

0-1Fh

SPIdataformatxdata-wordlength.CHARLENxdefinesthewordlengthofdataformatx.

Legalvaluesare0x02(datawordlength=2bit)to10h(datawordlength=16).Illegal

values,suchas00or1Fharenotallowed;theireffectisindeterminate.

1298

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.22InterruptVector0(INTVECT0)

NOTE:TheTGinterruptisnotavailableinMibSPIincompatibilitymode.Therefore,thereisno

possibilitytoaccessthisregisterincompatibilitymode.

Figure25-51.InterruptVector0(NTVECT0)[offset=60h]

31

16

Reserved

R-0

15

6

5

1

0

Reserved

INTVECT0

SUSPEND0

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-29.TransferGroupInterruptVector0(INTVECT0)

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-1

INTVECT0

INTVECT0.InterruptvectorforinterruptlineINT0.

ReturnsthevectorofthependinginterruptatinterruptlineINT0.Ifmorethanoneinterruptis

pending,INTVECT0alwaysreferencesthehighestpriorinterruptsourcefirst.

Note:ThisfieldreflectsthestatusoftheSPIFLGregisterinvectorformat.Anyupdatestothe

SPIFLGregisterwillautomaticallycauseupdatestothisfield.

0

Thereisnopendinginterrupt.

1h÷x

Transfergroupx(x=0,..,15)hasapendinginterrupt.SUSPEND0reflectsthetypeofinterrupt(

suspendedorfinished).

11h

ErrorInterruptpending.ThelowerhalfofSPIFLGcontainsmoredetailsaboutthetypeoferror.

13h

Thependinginterruptisa"ReceiveBufferOverrun"interrupt.

12h

SPImode:Thependinginterruptisa"ReceiveBufferFull"interrupt.

Mibmode:Reserved.Thisbitcombinationshouldnotoccur.

14h

SPImode:Thependinginterruptisa"TransmitBufferEmpty"interrupt.

Mibmode:Reserved.Thisbitcombinationshouldnotoccur.

AllOther

SPImode:Reserved.Thesebitcombinationsshouldnotoccur.

Combinations

0

SUSPEND0

Transfersuspended/Transferfinishedinterruptflag.

EverytimeINTVECT0isreadbythehost,thecorrespondinginterruptflagofthereferenced

transfergroupisclearedandINTVECT0isupdatedwiththevectorcomingnextinthepriority

chain.

0

Theinterrupttypeisa"transferfinished"interrupt.Inotherwords,thebufferarrayreferencedby

INTVECT0hasassertedaninterruptbecauseallofdatafromthetransfergrouphasbeen

transferred.

1

Theinterrupttypeisa"transfersuspended"interrupt.Inotherwords,thetransfergroupreferenced

byINTVECT0hasassertedaninterruptbecausethebuffertobetransferrednextisin"suspend-

to-wait"mode.

NOTE:ReadingfromtheINTVECT0registerwhen"TransmitEmpty"isindicateddoesnotclearthe

TXINTFLGflagintheSPIFlagRegister(SPIFLG)register.Writinganewwordtothe

SPIDATxregisterclearsthe"TransmitEmpty"interrupt.

1299

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

NOTE:Inmulti-buffermode,INTVECT0containstheinterruptforthehighestprioritytransfergroup.

AreadfromINTVECT0automaticallycausesthenext-highestprioritytransfergroup's

interruptstatustogetloadedintoINTVECT0anditscorrespondingSUSPENDflagtoget

loadedintoSUSPEND0.Thetransfergroupwiththelowestnumberhasthehighestpriority,

andthetransfergroupwiththehighestnumberhasthelowestpriority.

ReadingtheINTVECT0registerwhentheRXOVRNinterruptisindicatedinmulti-buffer

modedoesnotcleartheRXOVRNflagandhencedoesnotclearthevector.TheRXOVRN

interruptvectormaybeclearedinmulti-buffermodeeitherbywrite-clearingtheRXOVRN

flagintheSPIFlagRegister(SPIFLG)registerorbyreadingtheRXRAMOverrunBuffer

AddressRegister(RXOVRN_BUF_ADDR)register.

25.9.23InterruptVector1(INTVECT1)

NOTE:TheTGinterruptisnotavailableinSPIincompatibilitymodecompatibilitymode.Therefore,

thereisnopossibilitytoaccessthisregisterincompatibilitymode.

Figure25-52.InterruptVector1(INTVECT1)[offset=64h]

31

16

Reserved

R-0

15

6

5

1

0

Reserved

INTVECT1

SUSPEND1

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-30.TransferGroupInterruptVector1(INTVECT1)

Bit

Field

Value

Description

31-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-1

INTVECT1

INTVECT1.InterruptvectorforinterruptlineINT1.

ReturnsthevectorofthependinginterruptatinterruptlineINT1.Ifmorethanoneinterruptis

pending,INTVECT1alwaysreferencesthehighestpriorinterruptsourcefirst.

Note:ThisfieldreflectsthestatusoftheSPIFLGregisterinvectorformat.Anyupdatestothe

SPIFLGregisterwillautomaticallycauseupdatestothisfield.

0

Thereisnopendinginterrupt.SPImodeonly.

11h

ErrorInterruptpending.ThelowerhalfofSPIINT1containsmoredetailsaboutthetypeoferror.

SPImodeonly.

13h

Thependinginterruptisa"ReceiveBufferOverrun"interrupt.SPImodeonly.

12h

Thependinginterruptisa"ReceiveBufferFull"interrupt.SPImodeonly.

14h

Thependinginterruptisa"TransmitBufferEmpty"interrupt.SPImodeonly.

AllOther

Reserved.Thesebitcombinationsshouldnotoccur.SPImodeonly.

Combinations

0

SUSPEND1

Transfersuspended/Transferfinishedinterruptflag.

EverytimeINTVECT1isreadbythehost,thecorrespondinginterruptflagofthereferenced

transfergroupisclearedandINTVECT1isupdatedwiththevectorcomingnextinthepriority

chain.

0

Theinterrupttypeisa"transferfinished"interrupt.Inotherwords,thebufferarrayreferencedby

INTVECT1hasassertedaninterruptbecauseallofdatafromthetransfergrouphasbeen

transferred.

1

Theinterrupttypeisa"transfersuspended"interrupt.Inotherwords,thetransfergroupreferenced

byINTVECT1hasassertedaninterruptbecausethebuffertobetransferrednextisin"suspend-

to-wait"mode.

1300

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

NOTE:ReadingfromtheINTVECT1registerwhen"TransmitEmpty"isindicateddoesnotclearthe

TXINTFLGflagintheSPIFlagRegister(SPIFLG)register.Writinganewwordtothe

SPIDATxregisterclearsthe"TransmitEmpty"interrupt.

NOTE:Inmulti-buffermode,INTVECT1containstheinterruptforthehighestprioritytransfergroup.

AreadfromINTVECT1automaticallycausesthenext-highestprioritytransfergroup's

interruptstatustogetloadedintoINTVECT1anditscorrespondingSUSPENDflagtoget

loadedintoSUSPEND1.Thetransfergroupwiththelowestnumberhasthehighestpriority,

andthetransfergroupwiththehighestnumberhasthelowestpriority.

ReadingtheINTVECT1registerwhentheRXOVRNinterruptisindicatedinmulti-buffer

modedoesnotcleartheRXOVRNflagandhencedoesnotclearthevector.TheRXOVRN

interruptvectormaybeclearedinmulti-buffermodeeitherbywrite-clearingtheRXOVRN

flagintheSPIFlagRegister(SPIFLG)registerorbyreadingtheRXOVERN_BUF_ADDR

register.

25.9.24Parallel/ModuloModeControlRegister(SPIPMCTRL)

NOTE:DonotconfigureMODCLKPOLxandMMODExbitssincethisdevicedoesnotsupport

modulomode.

NOTE:ThebitsofthisregisterareusedinconjunctionwiththeSPIFMTxregisters.Eachbyteofthis

registercorrespondstooneoftheSPIFMTxregisters.

1.Byte0(Bits7:0)areusedwhenSPIFMT0registerisselectedbyDFSEL[1:0]=00inthe

controlfieldofabuffer.

2.Byte1(Bits15:8)areusedwhenSPIFMT1registerisselectedbyDFSEL[1:0]=01inthe

controlfieldofabuffer.

3.Byte2(Bits23:16)areusedwhenSPIFMT2registerisselectedbyDFSEL[1:0]=10inthe

controlfieldofabuffer.

4.Byte3(Bits31:24)areusedwhenSPIFMT3registerisselectedbyDFSEL[1:0]=11inthe

controlfieldofabuffer.

Figure25-53.Parallel/ModuloModeControlRegister(SPIPMCTRL)[offset=6Ch]

31

30

29

28

26

25

24

Reserved

MODCLKPOL3

MMODE3

PMODE3

R-0

R/WP-0

R/WP-0

R/WP-0

23

22

21

20

18

17

16

Reserved

MODCLKPOL2

MMODE2

PMODE2

R-0

R/WP-0

R/WP-0

R/WP-0

15

14

13

12

10

9

8

Reserved

MODCLKPOL1

MMODE1

PMODE1

R-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

2

1

0

Reserved

MODCLKPOL0

MMODE0

PMODE0

R-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

1301

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-31.SPIParallel/ModuloModeControlRegister(SPIPMCTRL)FieldDescriptions

Bit

Field

Value

Description

31-30

Reserved

0

Readreturns0.Writeshavenoeffect.

29

MODCLKPOL3

ModulomodeSPICLKpolarity.ThisbitdeterminesthepolarityoftheSPICLKinmodulo

modeonly.IftheMMODE[2:0]bitsare000,thisbitwillbeignored.

0

NormalSPICLKinallthemodes.

1

PolarityoftheSPICLKwillbeinvertedifModulomodeisselected.

28-26

MMODE3

ThesebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4,5,or6datalines(if

modulooptionissupportedbythemodule).

0

Normalsingledatalinemode-Default(PMODEshouldbesetto00)

1h

2-datalinemode(PMODEshouldbesetto00)

2h

3-datalinemode(PMODEshouldbesetto00)

3h

4-datalinemode(PMODEshouldbesetto00)

4h

5-datalinemode(PMODEshouldbesetto00)

5h

6-datalinemode(PMODEshouldbesetto01)

6h-7h

Reserved

25-24

PMODE3

ParallelmodebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4or8datalines.

0

0=normaloperation/1-dataline(MMODEshouldbesetto000)

1h

1h=2-datalinemode(MMODEshouldbesetto000)

2h

2h=4-datalinemode(MMODEshouldbesetto000)

3h

3h=8-datalinemode(MMODEshouldbesetto000)

23-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21

MODCLKPOL2

ModulomodeSPICLKpolarity.ThisbitdeterminesthepolarityoftheSPICLKinmodulo

modeonly.IftheMMODE[2:0]bitsare000,thisbitwillbeignored.

0

NormalSPICLKinallthemodes.

1

PolarityoftheSPICLKwillbeinvertedifModulomodeisselected.

20-18

MMODE2

ThesebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4,5,or6datalines(if

modulooptionissupportedbythemodule).

0

000=1-datalineMode-Default(PMODEshouldbesetto00)

1h

001=2-datalineMode(PMODEshouldbesetto00)

2h

3-datalinemode(PMODEshouldbesetto00)

3h

4-datalinemode(PMODEshouldbesetto00)

4h

5-datalinemode(PMODEshouldbesetto00)

5h

6-datalinemode(PMODEshouldbesetto01)

6h-7h

Reserved

17-16

PMODE2

ParallelmodebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4or8datalines.

0

0=normaloperation/1-dataline(MMODEshouldbesetto000)

1h

1h=2-datalinemode(MMODEshouldbesetto000)

2h

2h=4-datalinemode(MMODEshouldbesetto000)

3h

3h=8-datalinemode(MMODEshouldbesetto000)

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

13

MODCLKPOL1

ModulomodeSPICLKpolarity.ThisbitdeterminesthepolarityoftheSPICLKinmodulo

modeonly.IftheMMODE[2:0]bitsare000,thisbitwillbeignored.

0

NormalSPICLKinallthemodes.

1

PolarityoftheSPICLKwillbeinvertedifModulomodeisselected.

1302

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-31.SPIParallel/ModuloModeControlRegister(SPIPMCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

12-10

MMODE1

ThesebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4,5,or6datalines(if

modulooptionissupportedbythemodule).

0

1-datalinemode-default(PMODEshouldbesetto00)

1h

2-datalinemode(PMODEshouldbesetto00)

2h

3-datalinemode(PMODEshouldbesetto00)

3h

4-datalinemode(PMODEshouldbesetto00)

4h

5-datalinemode(PMODEshouldbesetto00)

5h

6-datalinemode(PMODEshouldbesetto01)

6h-7h

Reserved

9-8

PMODE1

ParallelmodebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4or8datalines.

0

0=normaloperation/1-dataline(MMODEshouldbesetto000)

1h

1h=2-datalinemode(MMODEshouldbesetto000)

2h

2h=4-datalinemode(MMODEshouldbesetto000)

3h

3h=8-datalinemode(MMODEshouldbesetto000)

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5

MODCLKPOL0

ModulomodeSPICLKpolarity.ThisbitdeterminesthepolarityoftheSPICLKinmodulo

modeonly.IftheMMODE[2:0]bitsare000,thisbitwillbeignored.

0

NormalSPICLKinallthemodes.

1

PolarityoftheSPICLKwillbeinvertedifModulomodeisselected.

4-2

MMODE0

ThesebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4,5,or6datalines(if

modulooptionissupportedbythemodule).

0

1-datalinemode-default(PMODEshouldbesetto00)

1h

2-datalinemode(PMODEshouldbesetto00)

2h

3-datalinemode(PMODEshouldbesetto00)

3h

4-datalinemode(PMODEshouldbesetto00)

4h

5-datalinemode(PMODEshouldbesetto00)

5h

6-datalinemode(PMODEshouldbesetto01)

6h-7h

Reserved

1-0

PMODE0

ParallelmodebitsdeterminewhethertheSPI/MibSPIoperateswith1,2,4or8datalines.

0

0=normaloperation/1-dataline(MMODEshouldbesetto000)

1h

1h=2-datalinemode(MMODEshouldbesetto000)

2h

2h=4-datalinemode(MMODEshouldbesetto000)

3h

3h=8-datalinemode(MMODEshouldbesetto000)

1303

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.25Multi-bufferModeEnableRegister(MIBSPIE)

NOTE:AccessibilityofMulti-BufferRAM

Themulti-bufferRAMisnotaccessibleunlesstheMSPIENAbitsetto1.Theonlyexception

tothisisintestmode,where,bysettingRXRAMACCESSto1,themulti-bufferRAMcanbe

fullyaccessedforbothreadandwrite.

Figure25-54.Multi-bufferModeEnableRegister(MIBSPIE)[offset=70h]

31

17

16

Reserved

RXRAMACCESS

R-0

R/WP-0

15

1

0

Reserved

MSPIENA

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-32.Multi-bufferModeEnableRegister(MIBSPIE)FieldDescriptions

Bit

Field

Value

Description

31-17

Reserved

0

Readsreturns0.Writeshavenoeffect.

16

RXRAMACCESS

Receive-RAMaccesscontrol.DuringnormaloperatingmodeofSPI,thereceive

data/statusportionofmulti-bufferRAMisread-only.ToenabletestingofreceiveRAM,

directread/writeaccessisenabledbysettingthisbit.

0

TheRXportionofmulti-bufferRAMisnotwritablebytheCPU.

1

Thewholeofmulti-bufferRAMisfullyaccessibleforread/writebytheCPU.

Note:TheRXRAMACCESSbitremains0afterresetanditshouldremainsetto0at

alltimes,exceptwhentestingtheRAM.SPIshouldbegivenalocalresetbyusing

thenRESET(SPIGCR0[0])bitafterRAMtestingisperformedsothatthemulti-buffer

RAMgetsre-initialized.

15-1

Reserved

0

Readsreturns0.Writeshavenoeffect.

0

MSPIENA

Multi-buffermodeenable.Afterpower-uporreset,MSPIENAremainscleared,whichmeans

thattheSPIrunsincompatibilitymodebydefault.Ifmulti-buffermodeisdesired,this

registershouldbeconfiguredfirstafterconfiguringtheSPIGCR0register.IfMSPIENAisnot

setto1,themulti-buffermoderegistersarenotwritable.

0

TheSPIrunsincompatibilitymode,thatis,inthismodetheMibSPIisfullycode-compliant

tothestandarddeviceSPI.Nomulti-buffered-modefeaturesaresupported.

1

TheSPIisconfiguredtoruninmulti-buffermode.

NOTE:AccessibilityofRegisters

RegistersfromthisoffsetaddressonwardsarenotaccessibleinSPIcompatibilitymode.

Theyareaccessibleonlyinthemulti-buffermode.

1304

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.26TGInterruptEnableSetRegister(TGITENST)

TheregisterTGITENSTcontainstheTGinterruptenableflagsfortransfer-finishedandfortransfer-

suspendedevents.Eachoftheenablebitsinthehigherhalf-wordandthelowerhalf-wordofTGITENST

belongstooneTG.

TheregistermapshowninFigure25-55andTable25-33representsasuper-setdevicewiththe

maximumnumberofTGs(16)assumed.Theactualnumberofbitsavailablevariesperdevice.

Figure25-55.TGInterruptEnableSetRegister(TGITENST)[offset=74h]

31

16

SETINTENRDY

R/W-0

15

0

SETINTENSUS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-33.TGInterruptEnableSetRegister(TGITENST)FieldDescriptions

Bit

Field

Value

Description

31-16

SETINTENRDY

TGinterruptset(enable)whentransferfinished.

0

Read:TheTGx-completedinterruptisdisabled.Thisinterruptdoesnotgetgeneratedwhen

TGxcompletes.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-completedinterruptisenabled.TheinterruptgetsgeneratedwhenTGx

completes.

Write:EnabletheTGx-completedinterrupt.TheinterruptgetsgeneratedwhenTGx

completes.

15-0

SETINTENSUS

TGinterruptset(enabled)whentransfersuspended

0

Read:TheTGx-completedinterruptisdisabled.Thisinterruptdoesnotgetgeneratedwhen

TGxissuspended.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-completedinterruptisenabled.TheinterruptgetsgeneratedwhenTGxis

suspended.

Write:EnabletheTGx-completedinterrupt.TheinterruptgetsgeneratedwhenTGxis

suspended.

1305

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.27TGInterruptEnableClearRegister(TGITENCR)

TheregisterTGITENCRisusedtocleartheinterruptenablesfortheTG-completedinterruptandtheTG-

suspendedinterrupts.

TheregistermapshowninFigure25-56andTable25-34representsasuper-setdevicewiththe

maximumnumberofTGs(16)assumed.Theactualnumberofbitsavailablevariesperdevice.

Figure25-56.TGInterruptEnableClearRegister(TGITENCR)[offset=78h]

31

16

CLRINTENRDY

R/W-0

15

0

CLRINTENSUS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-34.TGInterruptEnableClearRegister(TGITENCR)FieldDescriptions

Bit

Field

Value

Description

31-16

CLRINTENRDY

TGinterruptclear(disabled)whentransferfinished.

0

Read:TheTGx-completedinterruptisdisabled.Thisinterruptdoesnotgetgeneratedwhen

TGxcompletes.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-completedinterruptisenabled.TheinterruptgetsgeneratedwhenTGx

completes.

Write:DisabletheTGx-completedinterrupt.TheinterruptgetsgeneratedwhenTGx

completes.

15-0

CLRINTENSUS

TGinterruptclear(disabled)whentransfersuspended.

0

Read:TheTGx-completedinterruptisdisabled.Thisinterruptdoesnotgetgeneratedwhen

TGxissuspended.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-completedinterruptisenabled.TheinterruptgetsgeneratedwhenTGxis

suspended.

Write:DisabletheTGx-completedinterrupt.TheinterruptgetsgeneratedwhenTGxis

suspended.

1306

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.28TransferGroupInterruptLevelSetRegister(TGITLVST)

TheregisterTGITLVSTsetsthelevelofinterruptsfortransfercompletedinterruptandfortransfer

suspendedinterrupttolevel1.

TheregistermapshowninFigure25-57andTable25-35representsasuper-setdevicewiththemaximum

numberofTGs(16)assumed.Theactualnumberofbitsavailablevariesperdevice.

Figure25-57.TransferGroupInterruptLevelSetRegister(TGITLVST)[offset=7Ch]

31

16

SETINTLVLRDY

R/W-0

15

0

SETINTLVLSUS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-35.TransferGroupInterruptLevelSetRegister(TGITLVST)FieldDescriptions

Bit

Field

Value

Description

31-16

SETINTLVLRDY

Transfer-groupcompletedinterruptlevelset.

0

Read:TheTGx-completedinterruptissettoINT0.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-completedinterruptissettoINT1.

Write:SettheTGx-completedinterrupttoINT1.

15-0

SETINTLVLSUS

Transfer-groupsuspendedinterruptlevelset.

0

Read:TGx-suspendedinterruptissettoINT0.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-suspendedinterruptissettoINT1.

Write:SettheTG-xsuspendedinterruptINT1.

1307

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.29TransferGroupInterruptLevelClearRegister(TGITLVCR)

TheregisterTGITLVCRclearsthelevelofinterruptsfortransfercompletedinterruptandfortransfer

suspendedinterrupttolevel0.

TheregistermapshowninFigure25-58andTable25-36representsasuper-setdevicewiththe

maximumnumberofTGs(16)assumed.Theactualnumberofbitsavailablevariesperdevice.

Figure25-58.TransferGroupInterruptLevelClearRegister(TGITLVCR)[offset=80h]

31

16

CLRINTLVLRDY

R/W-0

15

0

CLRINTLVLSUS

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-36.TransferGroupInterruptLevelClearRegister(TGITLVCR)FieldDescriptions

Bit

Field

Value

Description

31-16

CLRINTLVLRDY

Transfer-groupcompletedinterruptlevelclear.

0

Read:TheTGx-completedinterruptissettoINT0.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-completedinterruptissettoINT1.

Write:SettheTGx-completedinterrupttoINT0.

15-0

CLRINTLVLSUS

Transfergroupsuspendedinterruptlevelclear.

0

Read:TGx-suspendedinterruptissettoINT0.

Write:Awriteof0tothisbithasnoeffect.

1

Read:TheTGx-suspendedinterruptissettoINT1.

Write:SettheTG-xsuspendedinterruptINT0.

1308

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.30TransferGroupInterruptFlagRegister(TGINTFLG)

TheTGINTFLGregistercomprisesthetransfergroupinterruptflagsfortransfer-completedinterrupts

(INTFLGRDYx)andfortransfer-suspendedinterrupts(INTFLGSUSx).Eachoftheinterruptflagsinthe

higherhalf-wordandthelowerhalf-wordofTGINTFLGbelongstooneTG.

TheregistermapshowninFigure25-59andTable25-37representsasuper-setdevicewiththe

maximumnumberofTGs(16)assumed.Theactualnumberofbitsavailablevariesperdevice.

Figure25-59.TransferGroupInterruptFlagRegister(TGINTFLG)[offset=84h]

31

16

INTFLGRDY

R/WC-0

15

0

INTFLGSUS

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table25-37.TransferGroupInterruptFlagRegister(TGINTFLG)FieldDescriptions

Bit

Field

Value

Description

31-16

INTFLGRDY

Transfer-groupinterruptflagforatransfer-completedinterrupt.

Note:ReadClearBehavior.ReadingtheinterruptvectorregistersTGINTVECT0or

TGINTVECT1automaticallyclearstheinterruptflagbitINTFLGRDYxreferencedbythe

vectornumbergivenbyINTVECT0/INTVECT1bits,iftheSUSPEND[0:1]bitinthevector

registersis0.

0

Read:Notransfer-completedinterruptoccurredsincelastclearingoftheINTFLGRDYxflag.

Write:Awriteof0tothisbithasnoeffect.

1

Read:Atransferfinishedinterruptfromtransfergroupxoccurred.Nomatterwhethertheinterrupt

isenabledordisabled(INTENRDYx=don'tcare)orwhethertheinterruptismappedtoINT0or

INT1,INTFLGRDYxissetrightafterthetransferfromTGxisfinished.

Write:Thecorrespondingbitflagiscleared.

15-0

INTFLGSUS

Transfer-groupinterruptflagforatransfer-suspendinterrupt.

Note:ReadClearBehavior.ReadingtheinterruptvectorregistersTGINTVECT0or

TGINTVECT1automaticallyclearstheinterruptflagbitINTFLGSUSxreferencedbythe

vectornumbergivenbyINTVECT0/INTVECT1bits,iftheSUSPEND[0:1]bitinthe

correspondingvectorregistersis1.

0

Read:Notransfer-suspendedinterruptoccurredsincethelastclearingoftheINTFLGSUSxflag.

Write:Awriteof0tothisbithasnoeffect.

1

Read:Atransfer-suspendedinterruptfromTGxoccurred.Nomatterwhethertheinterruptis

enabledordisabled(INTENSUSx=don'tcare)orwhethertheinterruptismappedtoINT0or

INT1,INTFLGSUSxissetrightafterthetransferfromtransfergroupxissuspended.

Write:Thecorrespondingbitflagiscleared.

1309

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Tick counterTriggersignalCounterreload



ControlRegisterswww.ti.com

25.9.31TickCountRegister(TICKCNT)

OneofthetriggersourcesforTGsisaninternalperiodictimetrigger.Thistimetriggeriscalledatick

counterandisbasicallyadown-counterwithapreload/reloadvalue.Everytimethetickcounterdetectsan

underflowitreloadstheinitialvalueandtogglesthetriggersignalprovidedtotheTGs.

Thetriggersignal,showninFigure25-60asasquarewave,illustratesthedifferenttriggereventtypesfor

theTGs(forexample,risingedge,fallingedge,andbothedges).

Figure25-60.TickCounterOperation

ThisregisterisshowninFigure25-61anddescribedinTable25-38.

Figure25-61.TickCountRegister(TICKCNT)[offset=90h]

31

30

29

28

27

16

TICKENA

RELOAD

CLKCTRL

Reserved

R/W-0

R/S-0

R/W-0

R-0

15

0

TICKVALUE

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;S=Set;-n=valueafterreset

Table25-38.TickCountRegister(TICKCNT)FieldDescriptions

Bit

Field

Value

Description

31

TICKENA

Tickcounterenable.

0

Theinternaltickcounterisdisabled.Thecountervalueremainsunchanged.

Note:Whenthetickcounterisdisabled,thetriggersignalisforcedlow.

1

TheinternaltickcounterisenabledandisclockedbytheclocksourceselectedbyCLKCTRL[1:0].

Whenthetickcounterisenableditstartsdown-countingfromitscurrentvalue.WhenTICKENA

goesfrom0to1,thetickcounterisautomaticallyloadedwiththecontentsofTICKVALUE.

30

RELOAD

Pre-loadthetickcounter.RELOADisaset-onlybit;writinga1toitreloadsthetickcounterwith

thevaluestoredinTICKVALUE.ReadingRELOADalwaysreturnsa0.

Note:WhenthetickcounterisreloadedbytheRELOADbit,thetriggersignalisnot

toggled.

29-28

CLKCTRL

Tickcounterclocksourcecontrol.CLKCTRLdefinestheclocksourcethatisusedtoclockthe

internaltickcounter.

0

SPICLKofdatawordformat0isselectedastheclocksourceofthetickcounter

1h

SPICLKofdatawordformat1isselectedastheclocksourceofthetickcounter

1h

SPICLKofdatawordformat2isselectedastheclocksourceofthetickcounter

3h

SPICLKofdatawordformat3isselectedastheclocksourceofthetickcounter

27-16

Reserved

0

Readreturns0.Writeshavenoeffect.

15-0

TICKVALUE

0-FFFFh

Initialvalueforthetickcounter.TICKVALUEstorestheinitialvalueforthetickcounter.Thetick

counterisloadedwiththecontentsofTICKVALUEeverytimeanunderflowconditionoccursand

everytimetheRELOADflagissetbythehost.

1310

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.32LastTGEndPointer(LTGPEND)

Figure25-62.LastTGEndPointer(LTGPEND)[offset=94h]

31

29

28

24

23

16

Reserved

TGINSERVICE

Reserved

R-0

R-0

R-0

15

14

8

7

0

Rsvd

LPEND

Reserved

R-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-39.LastTGEndPointer(LTGPEND)FieldDescriptions

Bit

Field

Value

Description

31-29

Reserved

0

Readsreturns0.Writeshavenoeffect.

28-24

TGINSERVICE

TheTGnumbercurrentlybeingservicedbythesequencer.Thesebitsindicatethecurrent

TGthatisbeingserviced.Thisfieldcangenerallybeusedforcodedebugging.

0

NoTGisbeingservicedbythesequencer.

1h

TG0isbeingservicedbythesequencer.

...

...

10h

TG15isbeingservicedbythesequencer.

Note:Thenumberoftransfergroupsvariesbydevice.

11h-1Fh

Invalidvalues

23-15

Reserved

0

Readsreturns0.Writeshavenoeffect.

14-8

LPEND

0-7Fh

LastTGendpointer.UsuallytheTGendaddress(PEND)isinherentlydefinedbythestart

valueofthestartingpointerofthesubsequentTG(PSTART).TheTGendsoneword

beforethenextTGstarts(PEND[x]=PSTART[x+1]-1).ForafullconfigurationofMibSPI,

thelastTGhasnosubsequentTG,thatis,noendaddressisdefined.ThereforeLPEND

hastobeprogrammedtospecifyexplicitlytheendaddressofthelastTG.

Note:LPENDallowsSWcompatibilityforMibSPIvariants.Becauseofsoftware

compatibilityreasons,thelastTGendaddresshastobeconfigurable;otherwisea

super-setMibSPIcannotemulateaMibSPIwithlessTGswithoutsoftwarechanges.

Note:Thenumberoftransfergroupsvariesbydevice,thusthelastTGalsovariesby

device.

7-0

Reserved

0

Readsreturns0.Writeshavenoeffect.

1311

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.33TGxControlRegisters(TGxCTRL)

EachTGcanbeconfiguredviaonededicatedcontrolregister.Theregisterdescriptionbelowshowsone

controlregister(x)thatisidenticalforallTGs.Forexample,thecontrolregisterforTG2isnamed

TG2CTRLandislocatedatbaseaddress+98h+4×2.Theactualnumberofavailablecontrolregisters

variesbydevice.

Figure25-63.MibSPITGControlRegisters(TGxCTRL)[offsets=98h-D4h]

31

30

29

28

27

24

23

20

19

16

TGENA

ONESHOT

PRST

TGTD

Reserved

TRIGEVT

TRIGSRC

R/W-0

R/W-0

R/W-0

R-0

R-0

R/W-0

R/W-0

15

14

8

7

6

0

Rsvd

PSTART

Rsvd

PCURRENT

R-0

R/W-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-40.TGControlRegisters(TGxCTRL)FieldDescriptions

Bit

Field

Value

Description

31

TGENA

TGxenable.

Ifthecorrectevent(TRIGEVTx)occursattheselectedsource(TRIGSRCx)agrouptransferis

initiatedifnohigherpriorityTGisinactivetransfermodeorifoneormorehigher-priorityTGsare

intransfer-suspendmode.

DisablingaTGwhileatransferisongoingwillfinishtheongoingwordtransferbutnotthewhole

grouptransfer.

0

TGxisdisabled.

1

TGxisenabled.

30

ONESHOTx

SingletransferforTGx.

0

TGxinitiatesatransfereverytimeatriggereventoccursandTGENAisset.

1

AtransferfromTGxwillbeperformedonlyonce(oneshot)afteravalidtriggereventatthe

selectedtriggersource.AfterthetransferisfinishedtheTGENAxcontrolbitwillbeclearedand

thereforenoadditionaltransfercanbetriggeredbeforethehostenablestheTGagain.Thisone

shotmodeensuresthatafteronegrouptransferthehosthasenoughtimetoreadthereceived

dataandtoprovidenewtransmitdata.

29

PRSTx

TGxpointerresetmode.Configuresthewaytoresolvetriggereventsduringanongoingtransfer.

Thisbitismeaningfulonlyforlevel-triggeredTGs.Edge-triggeredTGscannotberestartedbefore

theircompletionbyanotheredge.ThePRSTbitwillhavenoeffectonthisbehavior.

Note:WhenthePRSTbitisset,ifthebufferbeingtransferredatthetimeofanewtrigger

eventisaLOCK,CSHOLDorNOBRKbuffer,thenonlyafterfinishingthosetransfers,the

TGwillberestarted.ThismeansthateveniftheTGisretriggered,theTGwillonlybe

restartedafterfinishingthetransferofthefirstnon-LOCKornon-CSHOLDbuffer.Inthe

caseoftheNOBRKbuffer,aftercompletingtheICOUNTnumberoftransfers,theTGwillbe

restartedfromitsPSTART.

ThismeansthatTXcontrolfieldssuchasLOCKandCSHOLD,andDMAcontrolfieldssuchas

NOBRKhavehigherpriorityoveranythingelse.Theyhavethecapabilitytodelaytherestartofthe

TGevenifitisretriggeredwhenPRSTis1.

0

IfatriggereventoccursduringatransferfromTGx,theeventisignoredandisnotstored

internally.TheTGxtransferhaspriorityoveradditionaltriggerevents.

1

TheTGxpointer(PCURRENTx)willberesettothestartaddress(PSTARTx)whenavalidtrigger

eventoccursattheselectedtriggersourcewhileatransferfromthesameTGisongoing.Every

triggereventresetsPCURRENTxnomatterwhethertheconcernedTGisintransfermodeornot.

Thetriggereventshavepriorityovertheongoingtransfer.

28

TGTDx

TGtriggered.

0

TGxhasnotbeentriggeredorisnolongerwaitingforservice.

1

TGxhasbeentriggeredandiseithercurrentlybeingservicedorwaitingforservicing.

27-24

Reserved

0

Readreturns0.Writeshavenoeffect.

1312

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table25-40.TGControlRegisters(TGxCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

23-20

TRIGEVTx

Typeoftriggerevent.Alevel-triggeredTGcanbestoppedbyde-activatingtheleveltrigger.

However,thefollowingrestrictionsapply.

•DeactivatingtheleveltriggerforaTGduringaNOBRKtransferdoesnotstopthetransfersuntil

alloftheICOUNTnumberofbuffersaretransferredfortheNOBRKbuffer.OnceaNOBRK

bufferisprefetched,thetriggereventlosescontrolovertheTGuntiltheNOBRKbuffertransfer

iscompleted.

•OncethetransferofabufferwithCSHOLDorLOCKbitsetstarts,deactivatingthetriggerlevel

doesnotstopthetransferuntilthesequencercompletesthetransferofthenextnon-CSHOLD

ornon-LOCKbufferinthesameTG.

•OncethelastbufferinaTGispre-fetched,de-activatingthetriggerleveldoesnotstopthe

transfergroupuntilthelastbuffertransferiscompleted.Thismeansevenifthetriggerlevelis

deactivatedatthebeginningofthepenultimate(one-before-last)buffertransfer,thesequencer

continueswiththesameTGuntilitiscompleted.

0

never

NevertriggerTGx.Thisisthedefaultvalueafterreset.

1h

rising

Arisingedge(0to1)attheselectedtriggersource(TRIGSRCx)initiatesatransferfor

edge

TGx

2h

falling

Afallingedge(1to0)attheselectedtriggersource(TRIGSRCx)initiatesatransferfor

edge

TGx

3h

both

Risingandfallingedgesattheselectedtriggersource(TRIGSRCx)initiatesatransfer

edges

forTGx

4h

Reserve

d

5h

high-

Whiletheselectedtriggersource(TRIGSRCx)isatalogichighlevel(1)thegroup

active

transferiscontinuedandattheendofonegrouptransferrestartedatthebeginning.If

thelogiclevelchangestolow(0)duringanongoinggrouptransfer,thewholegroup

transferwillbestopped.

Note:IfONESHOTxissetthetransferisperformedonlyonce.

6h

low-

Whiletheselectedtriggersource(TRIGSRCx)isatalogiclowlevel(0)thegroup

active

transferiscontinuedandattheendofonerestartedatthebeginning.Ifthelogiclevel

changestohigh(1)duringanongoinggrouptransfer,thewholegrouptransferwillbe

stopped.

Note:IfONESHOTxissetthetransferisperformedonlyonce.

7h

always

Arepetitivegrouptransferwillbeperformed.

Note:BysettingtheTRIGSRCto0,theTRIGEVTto7h(ALWAYS),andthe

ONESHOTxbitto1,softwarecantriggerthisTG.UponsettingtheTGENAbit,the

TGisimmediatelytriggered.

Note:IfONESHOTxissetthetransferisperformedonlyonce.

1xxx

Reserve

d

1313

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-40.TGControlRegisters(TGxCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

19-16

TRIGSRCx

Triggersource.Afterreset,thetriggersourcesofallTGsaredisabled.

0

Disabled

1h

EXT0

Externaltriggersource0.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

2h

EXT1

Externaltriggersource1.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

3h

EXT2

Externaltriggersource2.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

4h

EXT3

Externaltriggersource3.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

5h

EXT4

Externaltriggersource4.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

6h

EXT5

Externaltriggersource5.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

7h

EXT6

Externaltriggersource6.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

8h

EXT7

Externaltriggersource7.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

9h

EXT8

Externaltriggersource8.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

Ah

EXT9

Externaltriggersource9.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

Bh

EXT10

Externaltriggersource10.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

Ch

EXT11

Externaltriggersource11.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

Dh

EXT12

Externaltriggersource12.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

Eh

EXT13

Externaltriggersource13.Theactualsourcevariesperdevice(forexample,HETI/O

channel,eventpin).

Fh

TICK

Internalperiodiceventtrigger.Thetickcountercaninitiateperiodicgrouptransfers.

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-8

PSTARTx

0-7Fh

TGstartaddress.PSTARTxstoresthestartaddressofthecorrespondingTG.Thecorresponding

endaddressisinherentlydefinedbythesubsequentTG'sstartaddressminusone(PENDx[TGx]=

PSTARTx[TGx+1]-1).PSTARTxiscopiedintoPCURRENTxwhen:

•TheTGisenabled.

•TheendoftheTGisreachedduringatransfer.

•AtriggereventoccurswhilePRSTissetto1.

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6-0

PCURRENTx

0-7Fh

Pointertocurrentbuffer.PCURRENTisread-only.PCURRENTxstorestheaddress(0...127)of

thebufferthatcorrespondstothisTG.IftheTGswitchesfromactivetransfermodetosuspendto

wait,PCURRENTxcontainstheaddressofthecurrentlysuspendedword.AftertheTGresumes

fromsuspendtowaitmode,thenextbufferwillbetransferred;thatis,nobufferdataistransferred

becauseofsuspendtowaitmode.

NOTE:Registerbitsvarybydevice

TG0hasthehighestpriorityandTG15hasthelowestpriority.Underthefollowingconditions

alowerpriorityTGcannotbeinterruptedbyahigherpriorityTG.

1.WhenthereisaCSHOLDorLOCKbuffer,untilthecompletionofthenextbuffer

transferwhichisanon-CSHOLDornon-LOCKbuffer.

2.AnentiresequenceofwordstransferredforaNOBRKDMAbuffer.

3.OncethelastwordinaTGispre-fetched.

1314

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.34DMAChannelControlRegister(DMAxCTRL)

EachDMAchannelcanbeconfiguredviaonededicatedcontrolregister.Theregisterdescriptionbelow

showsoneexemplarycontrolregisterthatisidenticalforallDMAchannels;forexample,thecontrol

registerforDMAchannel0isnamedDMA0CTRL.TheMibSPIsupportsupto8bidirectionalDMA

channels.

ThenumberofbidirectionalDMAchannelsvariesbydevice.ThenumberofDMAchannelsandhencethe

numberofDMAchannelcontrolregistersmayvary.

Figure25-64.DMAChannelControlRegister(DMAxCTRL)[offset=D8h-F4h]

31

30

24

23

20

19

16

ONESHOT

BUFID

RXDMA_MAP

TXDMA_MAP

R/W-0

R/W-0

R/W-0

R/W-0

15

14

13

12

8

RXDMAENA

TXDMAENA

NOBRK

ICOUNT

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

0

Reserved

COUNTBIT17

COUNT

R-0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-41.DMAChannelControlRegister(DMAxCTRL)FieldDescriptions

Bit

Field

Value

Description

31

ONESHOT

Auto-disableofDMAchannelafterICOUNT+1transfers.

0

ThelengthoftheblocktransferisfullycontrolledbytheDMAcontroller.Theenablebits

RXDMAENAxandTXDMAENAxarenotmodifiedbytheMibSPI.

1

ONESHOTallowsablocktransferofdefinedlength(ICOUNTx+1),mainlycontrolledbythe

MibSPIandnotbytheDMAcontroller.AfterICOUNTx+1transfers,theenablebits

RXDMAENAxandTXDMAENAxareautomaticallyclearedbytheMibSPI,hencenomore

DMArequestsaregenerated.InconjunctionwithNOBRKx,abursttransfercanbeinitiated

withoutanyothertransferthroughanotherbuffer.

30-24

BUFIDx

0-7Fh

BufferutilizedforDMAtransfer.BUFIDxdefinesthebufferthatisutilizedfortheDMA

transfer.InordertosynchronizethetransferwiththeDMAcontrollerwiththeNOBRK

conditionthe"suspendtowaituntil..."modesmustbeused.

23-20

RXDMA_MAPx

0-Fh

EachMibSPIDMAchannelcanbelinkedtotwophysicalDMARequestlinesoftheDMA

controller.Onerequestlineforreceivedataandtheotherforrequestlinefortransmitdata.

RXDMA_MAPx[3:0]definesthenumberofthephysicalDMARequestlinethatisconnected

tothereceivepathoftheMibSPIDMAchannel.

IfRXDMAENAxandTXDMAENAxarebothsetto"˜1',thenRXDMA_MAPx[3:0]shalldiffer

fromTXDMA_MAPx[3:0]andshalldifferfromanyotherusedphysicalDMARequestline.

Otherwiseunexpectedinterferencemayoccur.

19-16

TXDMA_MAPx

0-Fh

EachMibSPIDMAchannelcanbelinkedtotwophysicalDMARequestlinesoftheDMA

controller.Onerequestlineforreceivedataandtheotherforrequestlinefortransmitdata.

TXDMA_MAPx[3:0]definesthenumberofthephysicalDMARequestlinethatisconnected

tothetransmitpathoftheMibSPIDMAchannel.

IfRXDMAENAxandTXDMAENAxarebothsetthenTXDMA_MAPx[3:0]shalldiffer

fromRXDMA_MAPx[3:0]andshalldifferfromanyotherusedphysicalDMARequestline.

Otherwiseunexpectedinterferencemayoccur.

15

RXDMAENAx

ReceivedataDMAchannelenable.

0

NoDMArequestuponnewreceivedata.

1

ThephysicalDMAchannelforthereceivepathisenabled.ThefirstDMArequestpulseis

generatedafterthefirsttransferfromthereferencedbuffer(BUFIDx)isfinished.Thebuffer

shouldbeconfiguredinas"skipuntilRXEMPTYisset"or"suspendtowaituntilRXEMPTY

isset"inordertoensuresynchronizationbetweentheDMAcontrollerandtheMibSPI

sequencer.

1315

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-41.DMAChannelControlRegister(DMAxCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

14

TXDAMENAx

TransmitdataDMAchannelenable.

0

NoDMArequestuponnewtransmitdata.

1

ThephysicalDMAchannelforthetransmitpathisenabled.ThefirstDMArequestpulseis

generatedrightaftersettingTXDMAENAxtoloadthefirsttransmitdata.Thebuffershould

beconfiguredintheas"skipuntilTXFULLisset"or"suspendtowaituntilTXFULLisset"in

ordertoensuresynchronizationbetweentheDMAcontrollerandtheMibSPIsequencer.

13

NOBRKx

Non-interleavedDMAblocktransfer.Thisbitisavailableinmastermodeonly.

Note:SpecialConditionsduringaNOBRKBufferTransfer.IfaNOBRKDMAbufferis

currentlybeingservicedbythesequencer,thenitisnotallowedtobedisabled

prematurely.

DuringaNOBRKtransfer,thefollowingoperationsarenotallowed:

•ClearingtheNOBRKxbitto0

•ClearingtheRXDMAENAxto0(ifitisalready1)

•ClearingtheTXDMAENAxto0(ifitisalready1)

•ClearingtheBUFMODE[2:0]bitsto000

AnyattemptstoperformtheseactionsduringaNOBRKtransferwillproduce

unpredictableresults.

0

DMAtransfersthroughthebufferreferencedbyBUFIDxareinterleavedbydatatransfers

fromotheractivebuffersorTGs.EverytimethesequencercheckstheDMAbuffer,it

performsonetransferandthenstepstothenextbuffer.

1

NOBRKxensuresthatICOUNTx+1datatransfersareperformedfromthebufferreferenced

byBUFIDxwithoutadatatransferfromanyotherbuffer.Thesequencerremainsatthe

DMAbufferuntilICOUNTx+1transfershavebeenprocessed.Forexample,thiscanbeused

togenerateabursttransfertoonedevicewithoutdisablingthechipselectsignalin-between

(theconcernedbufferhastobeconfiguredwithCSHOLD=1).Anotherexamplewouldbeto

haveadefinedblockdatatransferinslavemode,synchronoustothemasterSPI.

Note:TriggeringofhigherpriorityTGsorenablingofhigherpriorityDMAchannels

willnotinterruptaNOBRKblocktransfer.

12-8

ICOUNTx

0-1Fh

InitialcountofDMAtransfers.ICOUNTxisusedtopresetthetransfercounter

COUNTx[4:0].EverytimeCOUNTxhitszeroitisreloadedwithICOUNTx.Therealnumber

oftransfersequalsICOUNTxplusone.

IfONESHOTxisset,ICOUNTxdefinesthenumberofDMAtransfersthatareperformed

beforetheMibSPIautomaticallydisablestheDMAchannels.IfNOBRKxisset,ICOUNTx

definesthenumberofDMAtransfersthatareperformedinonesequencewithoutatransfer

fromanyotherbuffer.

Note:SeeSection25.9.35(ICOUNT)andSection25.9.36(DMACNTLEN)abouthowto

increasetheICOUNTtoa16-bitvalue.Withthisextendedcapability,MibSPIcan

transferablockofupto65535(65K)wordswithoutinterleaving(ifNOBRKisused)or

withoutdeassertingthechipselectbetweenthebuffers(ifCSHOLDisused).

7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

COUNTBIT17x

The17thbitoftheCOUNTfieldofDMAxCOUNTregister.

5-0

COUNTx

0-3Fh

ActualnumberofremainingDMAtransfers.ThisfieldcontainstheactualnumberofDMA

transfersthatremain,untiltheDMAchannelisdisabled,ifONESHOTxisset.

Note:IftheTXandRXDMArequestsareenabled,theCOUNTregisterwillbe

decrementedwhentheRXhasbeenserviced.

1316

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.35DMAxCOUNTRegister(ICOUNT)

NOTE:TheseregistersareusedonlyiftheLARGECOUNTbitintheDMACNTLENregisterisset.

ThenumberofbidirectionalDMAchannelsvariesbydevice.ThenumberofDMAchannels

andhencethenumberofDMAregistersvariesbydevice.

Figure25-65.DMAxCOUNTRegister(ICOUNT)[offset=F8h-114h]

31

16

ICOUNTx

R/W-0

15

0

COUNTx

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table25-42.MibSPIDMAxCOUNTRegister(ICOUNT)FieldDescriptions

Bit

Field

Value

Description

31-16

ICOUNTx

0-FFFFh

InitialnumberofDMAtransfers.ICOUNTxisusedtopresetthetransfercounterCOUNTx.

EverytimeCOUNTxhitszero,itisreloadedwithICOUNTx.Therealnumberoftransferequals

ICOUNTxplusone.IfONESHOTxisset,ICOUNTxdefinesthenumberofDMAtransfersthat

areperformedbeforetheMibSPIautomaticallydisablesthecorrespondingDMAchannel.If

NOBRKxisset,ICOUNTxdefinesthenumberofDMAtransfersthatareperformedinone

sequencewithoutatransferfromanyotherbuffer

15-0

COUNTx

0-FFFFh

TheactualnumberofremainingDMAtransfers.COUNTxContainstheactualnumberof

DMAtransfersthatremain,untiltheDMAchannelisdisabled,ifONESHOTxisset.Sincethe

realcountervalueisalwaysICOUNTx+1,the17thbitofCOUNTxisavailableon

DMACTRLx[6]bit.

Note:UsageTipforBlockTransferUsingaSingleDMARequest.Itispossibletousethe

multi-bufferRAMtotransferchunksofdatato/fromanexternalSPI.ADMAController

canbeusedtohandlethedatainbursts.Supposeachunkof64bytesofdataneedsto

betransferredandasingleDMArequestneedstobegeneratedattheendoftransferring

the64bytes.ThiscanbeeasilyachievedbyconfiguringaTGregisterforthe64buffer

locationsandusingtheDMAxCTRL/DMAxCOUNTregisterstoconfigurethelastbuffer

(64th)oftheTGastheBUFIDandenableRXDMA(NOBRK=0).Attheendofthetransfer

ofthe64thbuffer,aDMArequestwillbegeneratedontheselectedDMArequest

channel.TheDMAcontrollercandoaburstreadofall64bytesfromRXRAMand/orthen

doaburstwritetoall64bytestotheTXRAMforthenextchunk.

1317

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.36DMALargeCount(DMACNTLEN)

Figure25-66.DMALargeCountRegister(DMACNTLEN)[offset=118h]

31

16

Reserved

R-0

15

1

0

Reserved

LARGECOUNT

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-43.MibSPIDMALargeCountRegister(DMACNTLEN)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

LARGECOUNT

Selecteitherthe16-bitDMAxCOUNTcountersorthesmallercountersinDMAxCTRL.

0

SelecttheDMAxCTRLcounters.WritestotheDMAxCTRLregisterwillmodifytheICOUNT

value.ReadingICOUNTandCOUNTcanbedonefromtheDMAxCTRLregister.The

DMAxCOUNTregistershouldnotbeusedsinceanywritetothisregisterwillbeoverwritten

byasubsequentwritetotheDMAxCTRLregistertosettheTXDMAENAorRXDMAENA

bits.

1

SelecttheDMAxCOUNTcounters.WritestotheDMAxCTRLregisterwillnotmodifythe

ICOUNTvalue.TheICOUNTvaluemustbewrittentointheDMAxCOUNTregisterbefore

theRXDMAENAorTXDMAENAbitsaresetintheDMAxCTRLregister.TheDMAxCOUNT

registershouldbeusedforreadingCOUNTorICOUNT.

25.9.37Multi-bufferRAMUncorrectableParityErrorControlRegister(UERRCTRL)

Figure25-67.Multi-bufferRAMUncorrectableParityErrorControlRegister(UERRCTRL)

[offset=120h]

31

16

Reserved

R-0

15

9

8

7

4

3

0

Reserved

PTESTEN

Reserved

EDEN

R-0

R/WP-0

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-44.Multi-bufferRAMUncorrectableParityErrorControlRegister(UERRCTRL)

FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readsreturns0.Writeshavenoeffect.

8

PTESTEN

Paritymemorytestenable.Thisbitmapstheparitybitscorrespondingtomulti-bufferRAM

locationsintotheperipheralRAMframetomakethemaccessiblebytheCPU.See

Section25.11forfurtherdetailsaboutparitymemorytesting.

0

Paritybitsarenotmemory-mapped.

1

Paritybitsarememory-mapped.

7-4

Reserved

0

Readsreturns0.Writeshavenoeffect.

3-0

EDEN

Errordetectionenable.Thesebitsenableparityerrordetection.

5h

Parityerrordetectionlogic(default)isdisabled.

AllOtherValues

Parityerrordetectionlogicisenabled.

Note:Itisrecommendedtowritea1010toenableerrordetection,toguardagainsta

softerrorfromdisablingparityerrordetect

1318

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.38Multi-bufferRAMUncorrectableParityErrorStatusRegister(UERRSTAT)

Figure25-68.Multi-bufferRAMUncorrectableParityErrorStatusRegister(UERRSTAT)

[offset=124h]

31

16

Reserved

R-0

15

2

1

0

Reserved

EDFLG1

EDFLG0

R-0

R/WC-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table25-45.Multi-bufferRAMUncorrectableParityErrorStatusRegister(UERRSTAT)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Readsreturns0.Writeshavenoeffect.

1

EDFLG1

Uncorrectableparityerrordetectionflag.Thisflagindicatesifaparityerroroccurredinthe

RXRAM.

Note:ReadingtheUERRADDR1registerclearstheEDFLG1bit.

0

Read:Noerrorhasoccurred.

Write:Writingazerotothisbithasnoeffect.

1

Read:AnerrorwasdetectedandtheaddressiscapturedintheUERRADDR1register.

Write:Thebitisclearedto0.

0

EDFLG0

Uncorrectableparityerrordetectionflag.Thisflagindicatesifaparityerroroccurredinthe

TXRAM.

Note:ReadingtheUERRADDR0registerclearstheEDFLG0bit.

0

Read:Noerrorhasoccurred.

Write:Writingazerotothisbithasnoeffect.

1

Read:AnerrorwasdetectedandtheaddressiscapturedintheUERRADDR0register.

Write:Thebitisclearedto0.

1319

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.39RXRAMUncorrectableParityErrorAddressRegister(UERRADDR1)

Figure25-69.RXRAMUncorrectableParityErrorAddressRegister(UERRADDR1)[offset=128h]

31

16

Reserved

R-0

15

10

9

0

Reserved

OVERADDR1

R-0

R/C-x

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table25-46.RXRAMUncorrectableParityErrorAddressRegister(UERRADDR1)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

OVERADDR1

200-3FFh

UncorrectableparityerroraddressforRXRAM.Thisregisterholdstheaddresswhere

aparityerrorisgeneratedwhilereadingRXRAM.OnlytheCPUorDMAcanreadfrom

RXRAMlocations.Theaddresscapturedisbyte-aligned.Thiserroraddressisfrozenfrom

beingupdateduntilitisreadbytheCPU.TheoffsetaddressofRXRAMvariesfrom200h

-3FFh.

Theregisterdoesnotclearitscontentsduringoraftermodule-levelreset,system-level

resetorevenpower-upreset.

Areadoperationtothisregisterclearsitscontentstothedefaultvalue200h.Aftera

power-upresetthecontentswillbeunpredictable.Areadoperationcanbeperformed

afterpower-uptokeeptheregisteratitsdefaultvalue,ifrequired.However,thecontents

ofthisregisteraremeaningfulonlywhenEDFLG1issetto1.

Note:AreadoftheUERRADDR1registerwillclearEDFLG1intheUERRSTAT

register.However,inemulationmodewhentheSUSPENDsignalishigh,aread

fromtheUERRADDR1registerdoesnotclearEDFLG1.

1320

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.40TXRAMUncorrectableParityErrorAddressRegister(UERRADDR0)

Figure25-70.TXRAMUncorrectableParityErrorAddressRegister(UERRADDR0)[offset=12Ch]

31

16

Reserved

R-0

15

9

8

0

Reserved

UERRADDR0

R-0

R/C-x

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table25-47.TXRAMUncorrectableParityErrorAddressRegister(UERRADDR0)FieldDescriptions

Bit

Field

Value

Description

31-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8-0

UERRADDR0

0-1FFh

UncorrectableparityerroraddressforTXRAM.Thisregisterholdstheaddresswhere

aparityerrorisgeneratedwhilereadingfromTXRAM.TheTXRAMcanbereadeitherby

CPUorbytheMibSPIsequencerlogicfortransmission.Theaddresscapturedisbyte-

aligned.ThiserroraddressisfrozenfrombeingupdateduntilitisreadbytheCPU.The

offsetaddressofTXRAMvariesfrom0-1FFh.

Theregisterdoesnotclearitscontentsduringoraftermodule-levelreset,system-level

reset,orevenpower-upreset.

Areadoperationtothisregisterclearsitscontentstoall0s.Afterapower-upreset,the

contentsofthisregisterwillbeunpredictable.Areadoperationcanbeperformedafter

power-uptoclearthethisregister'scontents,ifrequired.However,thecontentsofthis

registeraremeaningfulonlywhenEDFLG0issetto1.

Note:AreadfromtheUERRADDR0registerwillclearEDFLG0intheUERRSTAT

register.However,inemulationmodewhentheSUSPENDsignalishigh,aread

fromtheUERRADDR0registerdoesnotclearEDFLG0.

1321

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

25.9.41RXRAMOverrunBufferAddressRegister(RXOVRN_BUF_ADDR)

Inmulti-buffermode,ifaparticularRXRAMlocationiswrittenbytheMibSPIsequencerlogicafterthe

completionofanewtransferwhenthatlocationalreadycontainsvaliddata,theRX_OVRbitwillbesetto

1whilethedataisbeingwritten.TheRXOVRN_BUF_ADDRregistercapturestheaddressoftheRXRAM

locationforwhichareceiveroverrunconditionoccurred.

Figure25-71.RXRAMOverrunBufferAddressRegister(RXOVRN_BUF_ADDR)[offset=130h]

31

16

Reserved

R-0

15

10

9

0

Reserved

RXOVRN_BUF_ADDR

R-0

R-200h

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table25-48.RXRAMOverrunBufferAddressRegister(RXOVRN_BUF_ADDR)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

RXOVRN_BUF_ADDR

200-3FCh

AddressinRXRAMatwhichanoverwriteoccurred.Thisaddressvaluewillshow

onlytheoffsetaddressoftheRAMlocationinthemulti-bufferRAMaddressspace.

Refertothedevice-specificdatasheetfortheactualabsoluteaddressofRXRAM.

Thisword-alignedaddresscanvaryfrom0x200-0x3FC.Contentsofthisregisterare

validonlywhenanyoftheINTVECT0orINTVECT1andSPIFLGregistersshowan

RXOVRNerrorvectorwhileinmulti-buffermode.Iftherearemultipleoverrunerrors,

thenthisregisterholdstheaddressoffirstoverrunaddressuntilitisread.

Note:ReadingthisregisterclearstheRXOVRNinterruptflagintheSPIFLG

registerandtheTGINTVECTx.

Note:Receiveroverrunerrorsinmulti-buffermodecanbecompletelyavoided

byusingtheSUSPENDuntilRXEMPTYfeature,whichcanbeprogrammedinto

eachbufferofanyTG.However,usingtheSUSPENDuntilRXEMPTYfeaturewill

makethesequencerwaituntilthecurrentRXRAMlocationisreadbytheVBUS

masterbeforeitcanstartthetransferforthesamebufferlocationagain.This

mayaffecttheoverallthroughputoftheSPItransfer.Byenablingtheinterrupt

onRXOVRNinmulti-buffermode,theusercanrelyoninterruptstoknowifa

receiveroverrunhasoccurred.TheaddressoftheoverruninRXRAMis

indicatedinthisRXOVRN_BUF_ADDRregister.

1322

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.42I/O-LoopbackTestControlRegister(IOLPBKTSTCR)

ThisregistercontrolstestmodeforI/Opins.Italsocontrolswhetherloop-backshouldbedigitaloranalog.

Inaddition,itcontainscontrolbitstoinduceerrorconditionsintothemodule.Thesearetobeusedonlyfor

moduletesting.

Allofthecontrol/statusbitsinthisregisterarevalidonlywhentheIOLPBKTSTENAfieldissettoAh.

Figure25-72.I/O-LoopbackTestControlRegister(IOLPBKTSTCR)[offset=134h]

31

25

24

Reserved

SCSFAILFLG

R-0

R/WC-0

23

21

20

19

18

17

16

Reserved

CTRLBITERR

CTRLDESYNC

CTRLPARERR

CTRLTIMEOUT

CTRLDLENERR

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

12

11

8

Reserved

IOLPBKTSTENA

R-0

R/WP-0

7

6

5

3

2

1

0

Reserved

ERRSCSPIN

CTRLSCSPINERR

LPBKTYPE

RXPENA

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-49.I/O-LoopbackTestControlRegister(IOLPBKTSTCR)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

SCSFAILFLG

BitindicatingafailureonSPISCSpincompareduringanalogloopback.

0

Read:Nomiscomparesoccurredonanyoftheeightchipselectpins(vs.theinternal

chipselectnumberCSNRduringtransfers).

Write:Writingazerotothisbithasnoeffect.

1

Read:AcomparisonbetweentheinternalCSNRfieldandtheanaloglooped-back

valueofoneormoreoftheSPISCS[3:0]pinsfailed.Astuck-atfaultisdetectedonone

oftheSPISCS[3:0].Comparisonisdoneonlyonthepinsthatareconfiguredas

functionalandduringtransferoperation.

Write:Thisflagbitiscleared.

23-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20

CTRLBITERR

ControlsinducingofBITERRduringI/Oloopbacktestmode.

0

Donotinterferewithlooped-backdata.

1

Inducesbiterrorsbyinvertingthevalueoftheincomingdataduringloopback.

19

CTRLDESYNC

ControlsinducingofthedesyncerrorduringI/Oloopbacktestmode.

0

Donotcauseadesyncerror.

1

InduceadesyncerrorbyforcingtheincomingSPIENApin(iffunctional)toremain0

evenafterthetransferiscomplete.Thisforcingwillberetaineduntilthekernelreaches

theidlestate.

18

CTRLPARERR

ControlsinducingoftheparityerrorsduringI/Oloopbacktestmode.

0

Donotcauseaparityerror.

1

Induceaparityerrorbyinvertingthepolarityoftheparitybit.

17

CTRLTIMEOUT

ControlsinducingofthetimeouterrorduringI/Oloopbacktestmode.

0

Donotcauseatimeouterror.

1

InduceatimeouterrorbyforcingtheincomingSPIENApin(iffunctional)toremain1

whentransmissionisinitiated.Theforcingwillberetaineduntilthekernelreachesthe

idlestate.

1323

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-49.I/O-LoopbackTestControlRegister(IOLPBKTSTCR)FieldDescriptions(continued)

Bit

Field

Value

Description

16

CTRLDLENERR

ControlsinducingofthedatalengtherrorduringI/Oloopbacktestmode.

0

Donotcauseadata-lengtherror.

1

Induceadata-lengtherror.

Mastermode:TheSPIENApin(iffunctional)isforcedto1whenthemodulestarts

shiftingdata.

Slavemode:TheincomingSPISCSpin(iffunctional)isforcedto1whenthemodule

startsshiftingdata.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

IOLPBKSTENA

ModuleI/Oloopbacktestenablekey.

Ah

EnableI/Oloopbacktestmode.

AllOtherValues

DisableI/Oloopbacktestmode.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5-3

ERRSCSPIN

Injecterroronchip-selectpinnumberx.Thevalueinthisfieldisdecodedasthe

numberofthechipselectpinonwhichtoinjectanerror.Duringanalogloopback,if

CTRLSCSPINERRbitissetto1,thenthechipselectpinselectedbythisfieldis

forcedtotheoppositeofitsvalueintheCSNR.

0

SelectSPISCS[0]forinjectingerror

1h

SelectSPISCS[1]forinjectingerror

...

...

7h

SelectSPISCS[7]forinjectingerror.

2

CTRLSCSPIN

Enable/disabletheinjectionofanerrorontheSPISCS[3:0]pins.Theindividual

ERR

SPISCS[3:0]pinscanbechosenusingtheERRSCSPINfield.

0

DisabletheSPISCS[3:0]error-inducinglogic.

1

EnabletheSPISCS[3:0]error-inducinglogic.

1

LPBKTYPE

ModuleI/Oloopbacktype(analog/digital).SeeFigure25-22forthedifferenttypesof

loopbackmodes.

0

EnableDigitalloopbackwhenIOLPBKTSTENA=1010.

1

EnableAnalogloopbackwhenIOLPBKTSTENA=1010.

0

RXPENA

Enableanalogloopbackthroughthereceivepin.

Note:ThisbitisvalidonlywhenLPBKTYPE=1,whichchoosesanalog

loopbackmode.

0

Analogloopbackisthroughthetransmitpin.

1

Analogloopbackisthroughthereceivepin.

1324

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.43SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1forSPIFMT0and

SPIFMT1)

ThisregisterprovidesanextendedPrescalevaluesforSPICLKgenerationtobeabletointerfacewith

muchslowerSPISlaves.ThisisanextensionofSPIFMT0andSPIFMT1registers.Forexample,

EPRESCALE_FMT1(7:0)ofEXTENDED_PRESCALE1andPRESCALE1(7:0)ofSPIFMT1registerwill

alwaysreflectthesamecontents.SimilarlyEPRESCALE_FMT0(7:0)andPRESCALE0(7:0)ofSPIFMT0

reflectthesamecontents.

Figure25-73.SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1forSPIFMT0and

SPIFMT1)[offset=138h]

31

27

26

24

Reserved

EPRESCALE_FMT1(8:10)

R-0

RWP-0

23

16

EPRESCALE_FMT1(0:7)

RWP-0

15

11

10

8

Reserved

EPRESCALE_FMT0(8:10)

R-0

RWP-0

7

0

EPRESCALE_FMT0(0:7)

RWP-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-50.SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

EPRESCALE_FMT1

0-7FFh

EPRESCALE_FMT1.ExtendedPrescalevalueforSPIFMT1.

EPRESCALE_FMT1determinesthebittransferrateofdataformat1iftheSPI/MibSPI

isthenetworkmaster.EPRESCALE_FMT1isusetoderiveSPICLKfromVCLK.Ifthe

SPIisconfiguredasslave,EPRESCALE_FMT1doesnotneedtobeconfigured.

TheseEPRESCALE_FMT1(7:0)bitsandPRESCALE1(7:0)bitsofSPIFMT1register

willpointtothesamephysicallyimplementedregister.Theclockratefordataformat1

canbecalculatedas:

BRFormat1=VBUSPCLK/(EPRESCALE_FMT1+1)

Write:ThisregisterfieldshouldbewrittenifaSPICLKprescalerofmore

VBUSPCLK/256isrequired.ThisfieldprovidesaprescalerofuptoVBUSPCLK/2048

forSPICLK.WritingtothisregisterfieldwillalsogetreflectedinSPIFMT1(15:8).

Read:ReadingthisfieldwillreflectthePRESCALEvaluebasedonthelastwritten

registerfield,thatis,EXTENDED_PRESCALE1(26:16)orSPIFMT1(15:8)register.

Note:IfExtendedPrescalerisrequired,itshouldbeensuredthat

EXTENDED_PRESCALE1registerisprogrammedafterSPIFMT1registeris

programmed.ThisistoensurethatthefinalSPICLKprescalevalueiscontrolled

byEXTENDED_PRESCALE1registerwhenaprescaleofmore256isintendedon

SPICLK.WritingtoPRESCALE1fieldofSPIFMT1willautomaticallyclear

EPRESCALE_FMT1(10:8)bitsto‘000’sothattheintegrityofPRESCALEvalueis

maintained.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

1325

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-50.SPIExtendedPrescaleRegister1(EXTENDED_PRESCALE1)FieldDescriptions(continued)

Bit

Field

Value

Description

10-0

EPRESCALE_FMT0

0-7FFh

EPRESCALE_FMT0.ExtendedPrescalevalueforSPIFMT0.

EPRESCALE_FMT0determinesthebittransferrateofdataformat0iftheSPI/MibSPI

isthenetworkmaster.EPRESCALE_FMT0isusetoderiveSPICLKfromVCLK.Ifthe

SPIisconfiguredasslave,EPRESCALE_FMT0doesnotneedtobeconfigured.

TheseEPRESCALE_FMT0(7:0)bitsandPRESCALE0(7:0)bitsofSPIFMT0register

willpointtothesamephysicallyimplementedregister.Theclockratefordataformat0

canbecalculatedas:

BRFormat0=VBUSPCLK/(EPRESCALE_FMT0+1)

Write:ThisregisterfieldshouldbewrittenifaSPICLKprescalerofmore

VBUSPCLK/256isrequired.ThisfieldprovidesaprescalerofuptoVBUSPCLK/2048

forSPICLK.WritingtothisregisterfieldwillalsogetreflectedinSPIFMT0(15:8).

Read:ReadingthisfieldwillreflectthePRESCALEvaluebasedonthelastwritten

registerfield,thatis,EXTENDED_PRESCALE0(10:0)orSPIFMT0(15:8)register.

Note:IfExtendedPrescalerisrequired,itshouldbeensuredthat

EXTENDED_PRESCALE1registerisprogrammedafterSPIFMT0registeris

programmed.ThisistoensurethatthefinalSPICLKprescalevalueiscontrolled

byEXTENDED_PRESCALE1registerwhenaprescaleofmore256isintendedon

SPICLK.WritingtoPRESCALE0fieldofSPIFMT0willautomaticallyclear

EPRESCALE_FMT0(10:8)bitsto‘000’sothattheintegrityofPRESCALEvalueis

maintained.

1326

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

25.9.44SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2forSPIFMT2and

SPIFMT3)

ThisregisterprovidesanextendedPrescalevaluesforSPICLKgenerationtobeabletointerfacewith

muchslowerSPISlaves.ThisisanextensionofSPIFMT2andSPIFMT3registers.Forexample,

EPRESCALE_FMT3(7:0)ofEXTENDED_PRESCALE2andPRESCALE3(7:0)ofSPIFMT3registerwill

alwaysreflectthesamecontents.SimilarlyEPRESCALE_FMT2(7:0)andPRESCALE2(7:0)ofSPIFMT2

reflectthesamecontents.

Figure25-74.SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2forSPIFMT2and

SPIFMT3)[offset=13Ch]

31

27

26

24

Reserved

EPRESCALE_FMT3(8:10)

R-0

RWP-0

23

16

EPRESCALE_FMT3(0:7)

RWP-0

15

10

9

8

Reserved

EPRESCALE_FMT2(8:10)

R-0

RWP-0

7

0

EPRESCALE_FMT2(0:7)

RWP-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table25-51.SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26-16

EPRESCALE_FMT3

0-7FFh

EPRESCALE_FMT3.ExtendedPrescalevalueforSPIFMT1.

EPRESCALE_FMT1determinesthebittransferrateofdataformat3iftheSPI/MibSPI

isthenetworkmaster.EPRESCALE_FMT3isusetoderiveSPICLKfromVCLK.Ifthe

SPIisconfiguredasslave,EPRESCALE_FMT3doesnotneedtobeconfigured.

TheseEPRESCALE_FMT3(7:0)bitsandPRESCALE3(7:0)bitsofSPIFMT1register

willpointtothesamephysicallyimplementedregister.Theclockratefordataformat1

canbecalculatedas:

BRFormat3=VBUSPCLK/(EPRESCALE_FMT3+1)

Write:ThisregisterfieldshouldbewrittenifaSPICLKprescalerofmore

VBUSPCLK/256isrequired.ThisfieldprovidesaprescalerofuptoVBUSPCLK/2048

forSPICLK.WritingtothisregisterfieldwillalsogetreflectedinSPIFMT3(15:8).

Read:ReadingthisfieldwillreflectthePRESCALEvaluebasedonthelastwritten

registerfield,thatis,EXTENDED_PRESCALE3(26:16)orSPIFMT3(15:8)register.

Note:IfExtendedPrescalerisrequired,itshouldbeensuredthat

EXTENDED_PRESCALE2registerisprogrammedafterSPIFMT3registeris

programmed.ThisistoensurethatthefinalSPICLKprescalevalueiscontrolled

byEXTENDED_PRESCALE2registerwhenaprescaleofmore256isintendedon

SPICLK.WritingtoPRESCALE3fieldofSPIFMT3willautomaticallyclear

EPRESCALE_FMT3(10:8)bitsto‘000’sothattheintegrityofPRESCALEvalueis

maintained.

15-11

Reserved

0

Readreturns0.Writeshavenoeffect.

1327

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table25-51.SPIExtendedPrescaleRegister2(EXTENDED_PRESCALE2)FieldDescriptions(continued)

Bit

Field

Value

Description

10-0

EPRESCALE_FMT2

0-7FFh

EPRESCALE_FMT2.ExtendedPrescalevalueforSPIFMT2.

EPRESCALE_FMT0determinesthebittransferrateofdataformat2iftheSPI/MibSPI

isthenetworkmaster.EPRESCALE_FMT2isusetoderiveSPICLKfromVCLK.Ifthe

SPIisconfiguredasslave,EPRESCALE_FMT2doesnotneedtobeconfigured.

TheseEPRESCALE_FMT2(7:0)bitsandPRESCALE2(7:0)bitsofSPIFMT2register

willpointtothesamephysicallyimplementedregister.Theclockratefordataformat0

canbecalculatedas:

BRFormat2=VBUSPCLK/(EPRESCALE_FMT2+1)

Write:ThisregisterfieldshouldbewrittenifaSPICLKprescalerofmore

VBUSPCLK/256isrequired.ThisfieldprovidesaprescalerofuptoVBUSPCLK/2048

forSPICLK.WritingtothisregisterfieldwillalsogetreflectedinSPIFMT2(15:8).

Read:ReadingthisfieldwillreflectthePRESCALEvaluebasedonthelastwritten

registerfield,thatis,EXTENDED_PRESCALE2(10:0)orSPIFMT2(15:8)register.

Note:IfExtendedPrescalerisrequired,itshouldbeensuredthat

EXTENDED_PRESCALE2registerisprogrammedafterSPIFMT2registeris

programmed.ThisistoensurethatthefinalSPICLKprescalevalueiscontrolled

byEXTENDED_PRESCALE2registerwhenaprescaleofmore256isintendedon

SPICLK.WritingtoPRESCALE2fieldofSPIFMT2willautomaticallyclear

EPRESCALE_FMT2(10:8)bitsto‘000’sothattheintegrityofPRESCALEvalueis

maintained.

1328

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Parity0Parity1Parity2Parity3Control0Transmit0Control1Transmit1Control2Transmit2Control3Transmit3Control126Transmit126Control127Transmit127Parity126Parity127

Buffer0123...126127

0151631323501516313235TXRAMBank

RXRAMBank

OptionalOptional

Parity0            Status0         Receive0Parity127        Status127     Receive127Parity126        Status126     Receive126Parity3            Status3         Receive3Parity2            Status2         Receive2Parity1            Status1         Receive1



www.ti.comMulti-BufferRAM

25.10Multi-BufferRAM

Themulti-bufferRAMisusedforholdingtransit&receiveddata,controlandstatusinformation.Themulti-

bufferRAMcontainstwobanksofupto12832-bitwordsforamaximumconfiguration.Onebank

(TXRAM)containsentriesfortransmitdata(replicatingtheSPIDAT1register).Theotherbank(RXRAM)

containsreceiveddata(replicatingtheSPIBUFregister).ThebufferscanbepartitionedintomultipleTGs,

eachcontainingaprogrammablenumberofbuffers.Eachofthebufferscanbesubdividedinto16-bit

transmitfield,16-bitreceivefield,16-bitcontrolfield,and16-bitstatusfield,asdisplayedinFigure25-75.

A4-bitparityfieldperwordisalsoincludedineachbankofRAM.

Figure25-75.Multi-BufferRAMConfiguration

Allfieldscanbereadandwrittenwith8-bit,16-bit,or32-bitaccesses.

Thetransmitfieldscanbewrittenandreadintheaddressrange000hto1FFh.Thetransmitwords

containdataandcontrolfields.

ThereceiveRAMfieldsareread-onlyandcanbeaccessedthroughtheaddressrange200hto3FCh.The

receivewordscontaindataandstatusfields.

ThechipselectnumberbitfieldCSNR[7:0]ofthecontrolfieldforagivenwordismirroredintothe

correspondingreceive-bufferstatusfieldaftertransmission.

TheParityisautomaticallycalculatedandcopiedtoParitylocation

NOTE:Pleaserefertothespecificdevicedatasheetfortheactualnumberoftransmitandreceive

buffers.

Writetounimplementedbufferisoverwritingthecorrespondingimplementedbuffer.In

MIBSPI,iftheRAMSIZEspecifiedis32buffers,writeto33rdbufferoverwrites1stbuffer,

writeto34thbufferoverwrites2stbufferandsoon.

1329

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Multi-BufferRAMwww.ti.com

25.10.1Multi-BufferRAMAutoInitialization

WhentheMIBSPIisoutofresetmode,autoinitializationofmulti-bufferRAMstarts.Theapplicationcode

mustcheckforBUFINITACTIVEbittobe‘0’(MultibufferRAMinitializationiscomplete)beforeconfiguring

multi-bufferRAM.

Besidesthedefaultautoinitialisationafterreset,theauto-initializationsequencecanalsobedonein

followingways:

1.Enabletheglobalhardwarememoryinitializationkeybyprogrammingavalueof1010btothebits[3:0]

oftheMINITGCRregisteroftheSystemmodule.

2.Setthecontrolbitforthemulti-bufferRAMintheMSINENASystemmoduleregister.Thisbitisdevice-

specificforeachmemorythatsupportauto-initialization.Pleaserefertothedevicedatasheettoidentify

thecontrolbitforthemulti-bufferRAM.Thisstartstheinitializationprocess.TheBUFINITACTIVEbit

willgetsettoreflectthattheinitializationisongoing.

3.Whenthememoryinitializationiscompleted,thecorrespondingstatusbitintheMINISTATregisterwill

beset.Also,theBUFINITACTIVEbitwillgetcleared.

4.Disabletheglobalhardwarememoryinitializationkeybyprogrammingavalueof0101tothebits[3:0]

oftheMINITGCRregisteroftheSystemmodule.

PleaserefertotheArchitectureUserGuideformoredetailsonthememoryauto-initializationprocess.

NOTE:DuringAutoInitializationprocess,alltheMultibuffermoderegisters(exceptMIBSPIE)willbe

resettotheirdefaultvalues.So,itshouldbeensuredthatAutoInitializationiscompleted

beforeconfiguringtheMultibuffermoderegisterse.

25.10.2Multi-bufferRAMRegisterSummary

ThissectiondescribestheMulti-bufferRAMcontrolandtransmit-datafieldsofeachwordofTXRAM,and

thestatusandreceive-datafieldsofeachwordofRXRAM.Theoffsetofthemulti-bufferRAMis

FF0E0000h.

Table25-52.Multi-bufferRAMRegisterSummary

Offset

Acronym

RegisterDescription

Section

Base+000-1FFh

TXRAM

Multi-bufferRAMTransmitDataRegister

Section25.10.3

Base+200-3FFh

RXRAM

Multi-bufferRAMReceiveBufferRegister

Section25.10.4

1330

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMulti-BufferRAM

25.10.3Multi-bufferRAMTransmitDataRegister

EachwordofTXRAMisatransmit-bufferregister.

Figure25-76.Multi-bufferRAMTransmitDataRegister[offset=Base+000-1FFh]

31

29

28

27

26

25

24

23

16

BUFMODE

CSHOLD

LOCK

WDEL

DFSEL

CSNR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

15

0

TXDATA

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;-n=valueafterreset

Table25-53.Multi-bufferRAMTransmitDataRegisterFieldDescriptions

Bit

Field

Value

Description

31-29

BUFMODE

Specifyconditionsthatarerecognizedbythesequencertoinitiatetransfersofeachbufferword.

Whenoneofthe"skip"modesisselected,thesequencerchecksthebufferstatuseverytimeit

readsfromthisbuffer.Ifthecurrentbufferstatus(TXFULL,RXEMPTY)doesnotmatch,thebuffer

isskippedwithoutadatatransfer.

Whenoneofthe"suspend"modesisselected,thesequencerchecksthebufferstatuswhenit

readsfromthisbuffer.IfTXFULLand/orRXEMPTYdonotmatch,thesequencerwaitsuntila

matchoccurs.Nodatatransferisinitiateduntilthestatusconditionofthisbufferchanges.

0

disabled.Thebufferisdisabled

1h

skipsingle-transfermode.SkipthisbufferuntilthecorrespondingTXFULLflagisset(new

transmitdataisavailable).

2h

skipoverwrite-protectmode.SkipthisbufferuntilthecorrespondingRXEMPTYflagisset(new

receivedatacanbestoredinRXDATAwithoutdataloss).

3h

skipsingle-transferoverwrite-protectmode.Skipthisbufferuntilbothofthecorresponding

TXFULLandRXEMPTYflagsareset.(newtransmitdataavailableandpreviousdatareceivedby

thehost).

4h

continuousmode.Initiateatransfereachtimethesequencerchecksthisbuffer.Datawordsare

retransmittedifthebufferhasnotbeenupdated.Receivedataisoverwritten,evenifithasnot

beenread.

5h

suspendsingle-transfermode.Suspend-to-waituntilthecorrespondingTXFULLflagisset(the

sequencerstopsatthecurrentbufferuntilnewtransmitdataiswrittenintheTXDATAfield).

6h

suspendoverwrite-protectmode.Suspend-to-waituntilthecorrespondingRXEMPTYflagisset

(thesequencerstopsatthecurrentbufferuntilthepreviously-receiveddataisreadbythehost.

7h

suspendsingle-transferoverwrite-protectmode.Suspend-to-waituntilthecorresponding

TXFULLandRXEMPTYflagsareset(thesequencerstopsatthecurrentbufferuntilnewtransmit

dataiswrittenintotheTXDATAfieldandthepreviously-receiveddataisreadbythehost).

28

CSHOLD

Chipselectholdmode.TheCSHOLDbitissupportedinmastermodeonlyincompatibility-modeof

MibSPI,(itisignoredinslavemode).CSHOLDdefinesthebehaviorofthechipselectlineatthe

endofadatatransfer.

0

ThechipselectsignalisdeactivatedattheendofatransferaftertheT2CDELAYtimehaspassed.

Iftwoconsecutivetransfersarededicatedtothesamechipselectthischipselectsignalwillbe

deactivatedforatleast2VCLKcyclesbeforeitisactivatedagain.

1

Thechipselectsignalisheldactiveattheendofatransferuntilacontrolfieldwithnewdataand

controlinformationisloadedintoSPIDAT1.Ifthenewchipselectnumberequalsthepreviousone,

theactivechipselectsignalisextendeduntiltheendoftransferwithCSHOLDcleared,oruntilthe

chip-selectnumberchanges.

27

LOCK

Locktwoconsecutivebufferwords.DonotallowinterruptionbyTG'swithhigherpriority.

0

Anyhigher-priorityTGcanbeginattheendofthecurrenttransaction.

1

Ahigher-priorityTGcannotoccuruntilafterthenextunlockedbufferwordistransferred.

1331

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Multi-BufferRAMwww.ti.com

Table25-53.Multi-bufferRAMTransmitDataRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

26

WDEL

Enablethedelaycounterattheendofthecurrenttransaction.

Note:TheWDELbitissupportedinmastermodeonly.Inslavemode,thisbitwillbeignored.

0

Nodelaywillbeinserted.However,SPISCSpinswillstillbede-activatedforatleastfor2VCLK

cyclesifCSHOLD=0.

Note:ThedurationforwhichtheSPISCSpinremainsdeactivatedalsodependsuponthetime

takentosupplyanewwordaftercompletingtheshiftoperation(incompatibilitymode).IfTXBUFis

alreadyfull,thentheSPISCSwillbedeassertedforatleasttwoVCLKcycles(ifWDEL=0).

1

Afteratransaction,WDELAYofthecorrespondingdataformatwillbeloadedintothedelay

counter.NotransactionwillbeperformeduntiltheWDELAYcounteroverflows.TheSPISCSpins

willbede-activatedforatleast(WDELAY+2)*VCLK_Periodduration.

25-24

DFSEL

Datawordformatselect

0

Datawordformat0isselected

1h

Datawordformat1isselected

2h

Datawordformat2isselected

3h

Datawordformat3isselected

32-16

CSNR

0-FFh

Chipselectnumber.CSNRdefinesthechip-selectthatwillbeactivatedduringthedatatransfer.

Note:1)Writingtoonlythecontrolfield(usingbytewrites)doesnotinitiateanySPItransfer

inmastermode.ThisfeaturecanbeusedtosetupSPICLKphaseorpolaritybeforeactually

startingthetransferbyonlyupdatingtheDFSELfieldsinthecontrolfieldtoselectthe

requiredphase/polaritycombination.

Note:2)Bits[23:20]isnotwritableinthedeviceduetononavailabilityofChipselectpins

CS[4:7].

15-0

TXDATA

0-7FFFh

Transferdata.Whenwritten,thesebitsarecopiedtotheshiftregisterifitisempty.Iftheshift

registerisnotempty,thentheyareheldinTXBUF.

SPIENmustbesetto1beforethisregistercanbewrittento.Writinga0toSPIENforcesthelower

16bitsofSPIDAT1to0.

WritetothisregisterONLYwhenusingtheautomaticslavechip-selectfeature(seeSection25.2

formoreinformation).AwritetothisregisterwilldrivethecontentsofCSNR[7:0]onthe

SPISCS[3:0]pins,iftheyareconfiguredasfunctionalpins.

Whenthisregisterisread,thecontentsofTXBUF,whichholdsthelatestdatawritten,willbe

returned.

Note:Regardlessofthecharacterlength,thetransmitdatashouldberight-justifiedbefore

writingtotheSPIDAT1register.

1332

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMulti-BufferRAM

25.10.4Multi-bufferRAMReceiveBufferRegister

EachwordofRXRAMisareceive-bufferregister.

Figure25-77.Multi-bufferRAMReceiveBufferRegister[offset=RAMBase+200-3FFh]

31

30

29

28

27

26

25

24

RXEMPTY

RXOVR

TXFULL

BITERR

DESYNC

PARITYERR

TIMEOUT

DLENERR

RS-1

RC-0

R-0

RC-0

RC-0

RC-0

RC-0

RC-0

23

16

LCSNR

R-0

15

0

RXDATA

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;C=Clear;S=Set;-n=valueafterreset

Table25-54.Multi-bufferReceiveBufferRegisterFieldDescriptions

Bit

Field

Value

Description

31

RXEMPTY

Receivedatabufferempty.WhenthehostreadstheSPIBUFfieldortheentireSPIBUFregister,

itautomaticallysetstheRXEMPTYflag.Whenadatatransferiscompleted,thereceiveddatais

copiedintoSPIBUF,andtheRXEMPTYflagiscleared.

0

NewdatahasbeenreceivedandcopiedintotheSPIBUFfield.

1

NodatahasbeenreceivedsincethelastreadofSPIBUF.

Thisflaggetssetto1underthefollowingconditions:

•ReadingtheRXDATAportionoftheSPIBUFregister.

•Writinga1tocleartheRXINTFLGbitintheSPIFlagRegister(SPIFLG)register.

Write-clearingtheRXINTFLGbitbeforereadingtheSPIBUFindicatesthereceiveddataisbeing

ignored.Conversely,RXINTFLGcanbeclearedbyreadingtheRXDATAportionofSPIBUF(or

theentireregister).

30

RXOVR

Receivedatabufferoverrun.Whenadatatransferiscompletedandthereceiveddataiscopied

intoRXBUFwhileitisalreadyfull,RXOVRisset.OverrunsalwaysoccurtoRXBUF,notto

SPIBUF;thecontentsofSPIBUFareoverwrittenonlyafteritisreadbythePeripheral(VBUSP)

master(CPU,DMA,orotherhostprocessor).

Ifenabled,theRXOVRNinterruptisgeneratedwhenRXBUFisoverwritten,andreadingeitherSPI

FlagRegister(SPIFLG)orSPIVECTxshowstheRXOVRNcondition.Tworeadoperationsfrom

theSPIBUFregisterarerequiredtoreachtheoverwrittenbufferword(onetoreadSPIBUF,which

thentransfersRXDATAintoSPIBUFforthesecondread).

Thisflagisclearedto0whentheRXDATAisread.

Note:AspecialconditionunderwhichRXOVRflaggetsset.IfbothSPIBUFandRXBUFare

alreadyfullandwhileanotherbufferreceiveisunderway,ifanyerrorssuchasTIMEOUT,

BITERRandDLEN_ERRoccur,thenRXOVRinRXBUFandSPIFlagRegister(SPIFLG)

registerswillbesettoindicatethatthestatusflagsaregettingoverwrittenbythenew

transfer.Thisoverrunshouldbetreatedlikeanormalreceiveoverrun.

0

Noreceivedataoverrunconditionoccurredsincelastreadofthedatafield.

1

Areceivedataoverrunconditionoccurredsincelastreadofthedatafield.

29

TXFULL

Transmitdatabufferfull.Thisflagisaread-onlyflag.WritingintotheSPIDAT0orSPIDAT1field

whiletheTXshiftregisterisfullwillautomaticallysettheTXFULLflag.Oncethewordiscopiedto

theshiftregister,theTXFULLflagwillbecleared.WritingtoSPIDAT0orSPIDAT1whenboth

TXBUFandtheTXshiftregisterareemptydoesnotsettheTXFULLflag.

0

Thetransmitbufferisempty;SPIDAT0/SPIDAT1isreadytoacceptanewdata.

1

Thetransmitbufferisfull;SPIDAT0/SPIDAT1isnotreadytoacceptnewdata.

1333

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Multi-BufferRAMwww.ti.com

Table25-54.Multi-bufferReceiveBufferRegisterFieldDescriptions(continued)

Bit

Field

Value

Description

28

BITERR

Biterror.Therewasamismatchofinternaltransmitdataandtransmitteddata.

0

Nobiterroroccured.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

1

Abiterroroccurred.TheSPIsamplesthesignalofthetransmitpins(master:SIMOx,slave:

SOMIx)atthereceivepoint(one-halfclockcycleafterthetransmitpoint).Ifthesampledvalue

differsfromthetransmittedvalue,abiterrorisdetectedandtheBITERRflagisset.Possible

reasonsforabiterrorincludenoise,anexcessivelyhighbitrate,capacitiveload,oranother

master/slavetryingtotransmitatthesametime.

27

DESYNC

Desynchronizationofslavedevice.Thisbitisvalidinmastermodeonly.

ThemastermonitorstheENAsignalcomingfromtheslavedeviceandsetstheDESYNCflagif

ENAisdeactivatedbeforethelastreceptionpointorafterthelastbitistransmittedplustT2EDELAY.

IfDESYNCENAisset,aninterruptisasserted.Desynchronizationcanoccurifaslavedevice

missesaclockedgecomingfromthemaster.

Note:IntheCompatibilityModeMibSPI,undersomecircumstancesitispossiblefora

desyncerrordetectedforthepreviousbuffertobevisibleinthecurrentbuffer.Thisis

becausethereceivecompletionflag/interruptisgeneratedwhenthebuffertransferis

completed.Butdesynchronizationisdetectedafterthebuffertransferiscompleted.So,if

theVBUSmasterreadsthereceiveddataquicklywhenanRXINTisdetected,thenthe

statusflagmaynotreflectthecorrectdesynccondition.Inmulti-buffermode,thedesync

flagisalwaysguaranteedtobeforthecurrentbuffer.

0

Noslavedesynchronizationdetected.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

1

Aslavedeviceisdesynchronized.

26

PARITYERR

Parityerror.Thecalculatedparitydiffersfromthereceivedparitybit.

Iftheparitygeneratorisenabled(selectedindividuallyforeachbuffer)anevenoroddparitybitis

addedattheendofadataword.Duringreceptionofthedataword,theparitygeneratorcalculates

thereferenceparityandcomparesittothereceivedparitybit.Ifamismatchisdetected,the

PARITYERRflagisset.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

0

Noparityerrordetected.

1

Aparityerroroccured.

25

TIMEOUT

Time-outbecauseofnon-activationofENApin.

TheSPIgeneratesatime-outwhentheslavedoesnotrespondintimebyactivatingtheENA

signalafterthechipselectsignalhasbeenactivated.Ifatime-outconditionisdetected,the

correspondingchipselectisdeactivatedimmediatelyandtheTIMEOUTflagisset.Inaddition,the

TIMEOUTflaginthestatusfieldofthecorrespondingbufferandintheSPIFlagRegister

(SPIFLG)registerisset.

Thisbitisvalidonlyinmastermode.

Thisflagisclearedto0whenRXDATAportionoftheSPIBUFregisterisread.

0

NoENA-pintime-outoccured.

1

AnENAsignaltime-outoccured.

24

DLENERR

Datalengtherrorflag.

Note:Thisflagisclearedto0whentheRXDATAportionoftheSPIBUFregisterisread.

0

Nodata-lengtherrorhasoccurred.

1

Adatalengtherrorhasoccurred.

23-16

LCSNR

0-FFh

Lastchipselectnumber.LCSNRinthestatusfieldisacopyofCSNRinthecorresponding

controlfield.Itcontainsthechipselectnumberthatwasactivatedduringthelastwordtransfer.

15-0

RXDATA

0-FFFFh

SPIreceivedata.Thisisthereceivedword,transferredfromthereceiveshift-registerattheend

ofatransfer.Regardlessoftheprogrammedcharacterlengthandthedirectionofshifting,the

receiveddataisstoredright-justifiedintheregister.

1334

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comParityMemory

25.11ParityMemory

Theparityportionofmulti-bufferRAMisnotaccessiblebytheCPUduringnormaloperatingmodes.

However,eachreadorwriteoperationtothecontrol/data/statusportionofthemulti-bufferRAMcauses

reads/writestotheparityportionaswell.

•Eachwritetothemulti-bufferRAM(eitherfromthePeripheralinterfaceorbytheMibSPIitself)causes

awriteoperationtotheparityportionofRAMsimultaneouslytoupdatetheequivalentparitybits.

•Eachreadoperationfromthemulti-bufferRAM(eitherfromthePeripheralinterfaceorbytheMibSPI

itself)causesareadoperationfromtheparityportionoftheRAMforparitycomparisonpurpose.

•Reads/Writestomulti-bufferRAMcaneitherbecausedbyanyCPU/DMAaccessesorbythe

sequencerlogicofMibSPIitself.

•IncaseofParityerrorESMmoduleisnotifiedtogenerateMIBSPIParityESMinterrupt.Usercancheck

theerrorstatusandaddresslocationcapturedintheUERRSTATandUERRADDRxregisters

respectively.

Fortestingtheparityportionofthemulti-bufferRAM,whichisa4-bitfieldperwordaddress(1bitper

byte),aseparateparitymemorytestmodeisavailable.Paritymemorytestmodecanbeenabledand

disabledbythePTESTENbitintheUERRCTRLregister.

Duringtheparitytestmode,theparitylocationsareaddressableattheaddressbetween

RAM_BASE_ADDR+0x400handRAM_BASE_ADDR+0x7FFh.Eachlocationcorresponds,

sequentially,toeachTXRAMword,thentoeachRXRAMword.SeeFigure25-78foradiagramofthe

memorymapofparitymemoryduringnormaloperatingmodeandduringparitytestmode.

Duringparitytestmode,afterwritingthedata/controlportionoftheRAM,theparitylocationscanbe

writtenwithincorrectparitybitstointentionallycauseparityerrors.

Seethedevice-specificdatasheettogettheactualbaseaddressofthemulti-bufferRAM.

NOTE:TheRX_RAM_ACCESSbitcanalsobesetto1duringtheparitytestmodetobeenable

writestoRXRAMlocations.BothparityRAMtestingandRXRAMtestingcanbedone

together.

Thereare4bitsofparitycorrespondingtoeachofthe32-bitmulti-bufferlocations.Individualbitsinthe

paritymemoryarebyte-addressableinparitytestmode.SeetheexampleinFigure25-79forfurther

details.

NOTE:Polarityoftheparity(odd/even)variesbydevice.Insomedevices,acontrolregisterinthe

systemmodulecanbeusedtoselectoddorevenparity.

1335

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




...TXBUF0TXBUF1TXBUF126TXBUF127Parity0Parity1031Multi-BufferRAMAddressBASE+0x000hBASE+0x1FFhBASE+0x200hBASE+0x3FFh

......TXBUF0TXBUF1TXBUF126TXBUF127RXBUF0RXBUF1RXBUF126RXBUF127031Multi-BufferRAMAddressBASE+0x000hBASE+0x1FFhBASE+0x200hBASE+0x3FFhParityMemoryBASE+0x400hBASE+0x7FFh

BASE-BaseAddressofMulti-BufferRAMRefertospecificDeviceDatasheetfortheactualvalueofBASE.*2481631

..03

Parity127

Parity126

...RXBUF0RXBUF1RXBUF126RXBUF127Parity0Parity1031

..03

Parity127

Parity126(ParitylocationsarenotaccessiblebyCPU)

TXParity0TXParity10*Shadedareasindicatetheyarephysicallynotpresent.MemoryMapDuringNormalOperationMemoryMapDuringParityTestMode(ParitylocationsareaccessiblebyCPU)

TXParity126TXParity127

RXParity0RXParity1

RXParity126RXParity127BASE+0x600hBASE+0x5FFh



ParityMemorywww.ti.com

Figure25-78.MemoryMapforParityLocationsduringNormalandTestMode

1336

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1Shadedareasindicatereadsreturn0,writeshavenoeffect.Theseregistersarenotphysicallypresent.

A001AA55TXBUF5031Parity530BASE+014hMemoryorganizationduringnormalmode

000000031Parity5TXBUF5A001AA55310

1

0000000

0000000

0000000

1

1

0081624

1

1

0

1BASE+014hBASE+400h+014hParitymemorylocationsduringtestmode(memorymapped)



www.ti.comParityMemory

25.11.1ExampleofParityMemoryOrganization

SupposeTXBUF5(6thlocationinTXRAM)inthemulti-bufferRAMiswrittenwithavalueofA001_AA55.

Ifthepolarityoftheparityissettoodd,thecorrespondingparitylocationparity5willgetupdatedwith

equivalentparityof1011initsfield.

Duringparity-memorytestmode,thesebitscanbeindividuallybyteaddressed.Thereturndatawillbea

byteadjustedwithactualparitybitintheLSBofthebyte.Ifawordisreadfromtheword-boundary

addressofparitylocations,theneachbitofthe4-bitparityisbyte-adjustedanda32-bitwordisreturned.

0swillbepaddedintotheparitybitstogeteachbyte.SeeFigure25-79foradiagram.

Figure25-79.ExampleofMemoryMappedParityLocationsduringTestMode

NOTE:ReadAccesstoParityMemoryLocations

Paritymemorylocationscanbereadevenwithoutenteringintoparitymemorytestmode.

Theiraddressremainsasinmemorytestmode.Itisonlytoenterparity-memorytestmode

toenablewriteaccesstotheparitymemorylocations.

1337

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




WritetoSPIDAT

VCLKSPISCS

SPICLKSPISIMOSPISOMI*Dottedverticallinesindicatethereceiveedges

VCLKWritetoSPIDATSPICLKSPISIMOSPISOMI*Dottedverticallinesindicatethereceiveedges



MibSPIPinTimingParameterswww.ti.com

25.12MibSPIPinTimingParameters

ThepintimingsofSPIcanbeclassifiedbasedonitsmodeofoperation.Ineachmode,different

configurationslikePhase&Polarityaffectthepintimings.

Thepindirectionsarebasedonthemodeofoperation.

MastermodeSPI:

•SPICLK(SPIClock)-Output

•SPISIMO(SPISlaveInMasterOut)-Output

•SPISCS[7:0](SPISlaveChipSelects)-Output

•SPISOMI(SPISlaveOutMasterIn)-Input

•SPIENA(SPIslavereadyEnable)-Input

SlavemodeSPI:

•SPICLK-Input

•SPISIMO-Input

•SPISCS-Input

•SPISOMI-Output

•SPIENA-Output

NOTE:AllthetimingdiagramsgivenbelowarewithPhase=’0’&Polarity=‘0’unlessexplicitlystated

otherwise.

25.12.1MasterModeTimingsforSPI/MibSPI

Figure25-80.SPI/MibSPIPinsduringMastermode3-pinconfiguration

Figure25-81.SPI/MibSPIpinsduringMastermode4-pinwithSPISCSconfiguation.

1338

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




* Dotted vertical  lines indicatethe receive edges for the Master*ENABLE_HIGHZissetto‘0’inSlaveSPI

VCLK

SPICLKSPIENA

WritetoSPIDAT

WritetoSPIDATSPISCS

SPISIMOSPISOMI

MasterSlave

*De-activationofSPIENA

piniscontrolledbytheSlave.SPISOMISPISIMOSPICLKSPIENA

VCLKWritetoSPIDAT

*Dottedverticallinesindicatethereceiveedges



www.ti.comMibSPIPinTimingParameters

Figure25-82.SPI/MibSPIpinsduringMastermodein4pinwithSPIENAconfiguration

Figure25-83.SPI/MibSPIpinsduringMaster/Slavemodewith5-pinconfiguration

1339

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SPIDAT

SPISCS

*ENABLE_HIGHZissetto‘1’inSlaveSPIVCLKWritetoSPIENA

SPICLK

*DiagramshowsrelationshipbetweentheSPISCS

fromaMastertoSPIENA

fromSlaveSPIwhenSPIENA

isconfiguredinHigh-Zmode

SPIDAT

SPISCS

*ENABLE_HIGHZissetto‘0’inSlaveSPIVCLKWritetoSPIENA

SPICLK

*DiagramshowsrelationshipbetweentheSPISCS

fromaMastertoSPIENA

fromSlaveSPIwhenSPIENA

isconfiguredinPush-Pullmode

VCLKWritetoSPIDATSPIENA

SPICLK

*DiagramshowsarelationshipbetweentheSPIENA

fromSlaveand SPICLK from Master

VCLKSPICLKSPISOMISPISIMO*Dottedverticallinesindicatethereceiveedges

WritetoSPIDAT



MibSPIPinTimingParameterswww.ti.com

25.12.2SlaveModeTimingsforSPI/MibSPI

Figure25-84.SPI/MibSPIpinsduringSlavemode3-pinconfiguration

Figure25-85.SPI/MibSPIpinsduringSlavemodein4pinwithSPIENAconfiguration

Figure25-86.SPI/MibSPIpinsduringSlavemodein5pinconfiguration-(SingleSlave).

Figure25-87.SPI/MibSPIpinsduringSlavemodein5pinconfiguration-(Single/MultiSlave).

1340

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMibSPIPinTimingParameters

25.12.3MasterModeTimingParameterDetails

IncaseofMaster,themoduledrivesoutSPICLK.ItalsodrivesouttheTransmitdataonSPISIMOw.r.tits

internalSPICLK.IncaseofMastermode,theRXdataonSPISOMIpinisregisteredw.r.tSPICLK

receivedthroughInputbufferfromtheI/Opad.

IfChipSelectpinisfunctional,thenMasterwilldriveoutSPISCSpin(s)beforestartingtheSPICLK.If

SPIENApinisfunctional,thenMasterwillwaitforanactive‘low’fromSlaveontheinputpintostartthe

SPICLK.

Table25-55.TimingParametersofSPI/MibSPIPinsinMasterMode

SI

DelayItem

Min

Max

Note

No.

1

CycleTimeSPICLK

2VCLK

256VCLK

SPICLKfrequencyisprogrammableinMaster

mode.

2a

SPISCS-SPICLKedge

2VCLK

(C2TDELAY+

ThistimingisbasedonCSHOLDbeing‘0’forthe

Phase=‘0’

2)*VCLK+tdd

currentandthepreviousbuffertransfer.

(4pinCSconfiguration-CSHOLD

=’0’)

2b

SPISCS-SPICLKedge

3VCLK

(C2TDELAY+

ThistimingisbasedonCSHOLDbeing‘1’forthe

Phase=‘0’

3)*VCLK+tdd

currentorthepreviousbuffertransfer.

(4pinCSconfiguration-CSHOLD

=’1’)

3a

SPISCS-SPICLKedge

0.5SPICLK+

(C2TDELAY+

ThistimingisbasedonCSHOLDbeing‘0’forthe

Phase=‘1’

2VCLK

2)*VCLK+

currentandthepreviousbuffertransfer.

(4pinCSconfiguration-CSHOLD

0.5SPICLK+tdd

=’0’)

3b

SPISCS-SPICLKedge

0.5SPICLK+

(C2TDELAY+

ThistimingisbasedonCSHOLDbeing‘1’forthe

Phase=‘1’

3VCLK

3)*VCLK+

currentorthepreviousbuffertransfer.

(4pinCSconfiguration-CSHOLD

0.5SPICLK+tdd

=’1’)

4

OutputDelaytime,SPICLKTX

+/-tdd

-

Actualanalogdelaydependsondifferenceof

edgetoSPISIMOvalid

SPICLKandSPISIMOpindelays(tdd)fromtheir

generationpoints.

5

OutputHoldtime,SPICLKRX

0.5SPICLK+/-tdd

-

Actualanalogdelaydependsondifferenceof

edgetoSPISIMOvalid

SPICLKandSPISIMOpindelays(tdd)fromtheir

generationpoints.

6

InputSetuptimerequirementon

+/-tpdd

-

TheincomingdataonSPISOMIpinissampled

SPISOMIpinwithrespectto

w.r.tincoming(fedback)SPICLK.So,the

(w.r.t)SPICLK

differencebetweenpropagationdelay(tpdd)-

SPICLKpinreachingasclockandSPISOMI

reachingasadatatothesamplingregister

determinestheactualsetuptime.

7

InputHoldtimerequirementon

+/-tpdd

-

TheincomingdataonSPISOMIpinissampled

SPISOMIpinw.r.tSPICLK

w.r.tincoming(fedback)SPICLK.So,the

differencebetweenpropagationdelay(tpdd)-

SPICLKpinreachingasclockandSPISOMI

reachingasadatatothesamplingregister

determinestheactualholdtime.

8

SPIENA-SPICLKedge

2VCLK

3VCLK

DelaybetweenSPIENAassertionfromtheSlave

Phase=‘0’

tothestartoffirstedgeofSPICLKbytheMaster.

(4pinENAor5pinconfiguration)

9

SPIENA-SPICLKedge

0.5SPICLK+

0.5SPICLK+

Phase=‘1

2VCLK

3VCLK

’(4pinENAor5pinconfiguration)

10

SPICLK-SPISCS

0.5SPICLK+

-

DelaybetweenthelastedgeofSPICLKto

Phase=‘0’,Master

1VCLK

deactivationofSPISCSpinbytheMaster.

11

SPICLK-SPISCS

1VCLK

-

Phase=‘1’,Master

1341

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MibSPIPinTimingParameterswww.ti.com

Table25-55.TimingParametersofSPI/MibSPIPinsinMasterMode(continued)

SI

DelayItem

Min

Max

Note

No.

12

MaximumholdtimeonSPIENA

-

0.5SPICLK+

AfterthelastedgeofSPICLK,themaximumdelay

afterthefinalSPICLKedge

(WDELAY+1)*

withinwhichSPIENApinshouldbedeassertedso

supportedbyMaster

VCLK

thattheMasterdoesnotstartthenextbuffer(if

(Phase=‘0’)

available)transfer.SlaveSPI/MibSPIshould

deassertSPIENAbeforethistimeifitisnotready

withthenextTXdatafortransfer.

13

MaximumholdtimeonSPIENA

-

(WDELAY+1)*

AfterthelastedgeofSPICLK,themaximumdelay

afterthefinalSPICLKedge

VCLK

withinwhichENApinshouldbedeassertedso

supportedbyMaster

thattheMasterdoesnotstartthenextbuffer(if

(Phase=‘1’)

available)transfer.SlaveSPI/MibSPIshould

deassertSPIENAbeforethistimeifitisnotready

withthenextTXdatafortransfer.

14a

MinimuminactivetimeofSPISCS

2VCLK+

-

ThiscanbeincreasedbyusingWDELAYcounter.

pin(s)betweentwodatawords

(WDELAY)*

ApplicablewhenCSHOLDis‘0’forthecurrent

(CSHOLD=0)

VCLK

andthepreviousbuffertransfers.

14b

MinimuminactivetimeofSPISCS

1VCLK+

-

ThiscanbeincreasedbyusingWDELAYcounter.

pin(s)betweentwodatawords

(WDELAY)*

ThisisapplicablewhenCSHOLDissetto‘1’for

(CSHOLD=1)

VCLK

thecurrentbufferandwas‘0’forthepreviousone.

15

TimeatwhichSPIENApinwillbe

C2TDELAY

-

IfC2TDELAYisnotprogrammedor‘0’,thenthe

sampledafterSPISCSgoes

FSMwilllookfortheENApinvalue1VCLKafter

active

theassertingtheChipSelect.TheFSMalways

looksattheregisteredversionofENApinvalue.

tdd-delaydifferencesbetweenthetworelatedpins;tpdd-propagationdelaydifferencesbetweenthetworelatedpins

1342

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

SPNU499B–November2012–RevisedAugust2013

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMibSPIPinTimingParameters

25.12.4SlaveModeTimingParameterDetails

IncaseofSlavemode,themodulewilldriveonlySPISOMIandSPIENApins.Allotherpinsareinputsto

it.TheRXdataonSPISIMOpinwillberegisteredw.r.tSPICLKpin.SlavewilluseSPISCSpintodriveout

SPIENApinifbotharefunctional.If4pinwithSPIENAisconfigured,thenSlavewilldriveoutactivelow

signalonSPIENApinwhenanewdataiswrittentotheTXShiftRegister.Irrespectiveof4pinwith

SPIENAor5pinconfiguration,theSlavewilldeasserttheSPIENApinafterthelastbitisreceived.If

ENABLE_HIGHZ(SPIINT0.24)bitis‘0’,thede-assertedvalueofSPIENApinwillbe‘1’.Otherwise,itwill

dependupontheinternalPullUporPullDownresistor(ifimplemented)dependingupontheSpecification

oftheChip.

Table25-56.TimingParametersofSPI/MibSPIPinsinSlaveMode.

SINo.

DelayItem

Min

Max

Note

1

CycleTimeofSPICLK

2VCLK

-

SlavesupportsanyslowerfrequencyofSPICLK

aboveDClevels.

4

OutputDelaytime,SPICLKTX

tpd

-

Actualdelaydependsonthepropagationdelayof

edgetoSPISOMIvalid

SPICLKpintotheClockinputoftheregisterdriving

theTXDATAandtheO/PbufferdelayonSPISOMI

pin.

5

OutputHoldtime,SPICLKRXedge

0.5SPICLK

-

Actualdelaydependsonthepropagationdelayof

toSPISOMIvalid

+tpd

SPICLKpintotheClockinputoftheregisterdriving

theTXDATAandtheO/PbufferdelayonSPISOMI

pin.

6

InputSetuptimerequirementon

+/-tpdd

-

TheincomingdataonSPISIMOpinissampledw.r.t

SPISIMOpinwithrespectto(w.r.t)

incomingSPICLK.So,thedifferencebetween

SPICLK

propagationdelay(tpdd)ofboththepinsdetermines

theactualsetuptime.

7

InputHoldtimerequirementon

+/-tpdd

-

TheincomingdataonSPISIMOpinissampledw.r.t

SPISIMOpinw.r.tSPICLK

incomingSPICLK.So,thedifferencebetween

propagationdelay(tpdd)ofboththepinsdetermines

theactualholdtime.

16

SPICLK-SPIENA

1VCLK

2.5VCLK

DelaybetweenthefinalRX-edgeofSPICLKtothe

(4pin/5pinconfiguration)

deassertionofSPIENApinbytheSlave

17

SPISCS-SPIENA

0

-

DelaybetweenassertionofSPISCSbytheMaster

(5pin)

totheassertionofSPIENApinbytheSlave

(assumingSlaveisreadywiththeTXdata).

18

Minimumdelaybetween

2VCLK

-

ASPICLKedgewithin2VCLKofdeassertionof

deselectingtheSlaveusingits

SPISCSwillbetreatedavalidedgeinSlavemode.

SPISCSpinandclockingadifferent

Slave

19

SPISCSdeassertiontoSPISOMI

-

1VCLK+tpd

SlavewilltristatetheSPISOMIpinifitisdeselected

tristate

bySPISCS(whenCSisfunctional).

1343

SPNU499B–November2012–RevisedAugust2013

Multi-BufferedSerialPeripheralInterfaceModule(MibSPI)withParallelPin

Option(MibSPIP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter26

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnect

Network(LIN)Module

Thischapterdescribestheserialcommunicationinterface(SCI)/localinterconnectnetwork(LIN)module.

TheSCI/LINiscomplianttotheLIN2.1protocolspecifiedintheLINSpecificationPackage.Thismodule

canbeconfiguredtooperateineitherSCI(UART)orLINmode.

NOTE:ThischapterdescribesasupersetimplementationoftheLIN/SCImodulethatincludes

featuresandfunctionalitythatrequireDMA.SincenotalldeviceshaveDMAcapability,

consultyourdevice-specificdatasheettodetermineapplicabilityofthesefeaturesand

functionstoyourdevicebeingused.

Topic...........................................................................................................................Page

26.1IntroductionandFeatures...............................................................................1345

26.2SCICommunicationFormats...........................................................................1350

26.3SCIInterrupts................................................................................................1358

26.4SCIDMAInterface..........................................................................................1361

26.5SCIConfigurations.........................................................................................1362

26.6SCILowPowerMode.....................................................................................1364

26.7LINCommunicationFormats...........................................................................1365

26.8LINInterrupts................................................................................................1382

26.9LINDMAInterface..........................................................................................1382

26.10LINConfigurations........................................................................................1383

26.11Low-PowerMode..........................................................................................1385

26.12EmulationMode............................................................................................1387

26.13SCI/LINControlRegisters..............................................................................1388

26.14GPIOFunctionality........................................................................................1435

1344

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroductionandFeatures

26.1IntroductionandFeatures

TheSCI/LINmodulecanbeprogrammedtoworkeitherasanSCIorasaLIN.Thecoreofthemoduleis

anSCI.TheSCI’shardwarefeaturesareaugmentedtoachieveLINcompatibility.

TheSCImoduleisauniversalasynchronousreceiver-transmitterthatimplementsthestandardnonreturn

tozeroformat.TheSCIcanbeusedtocommunicate,forexample,throughanRS-232portoroveraK-

line.

TheLINstandardisbasedontheSCI(UART)serialdatalinkformat.Thecommunicationconceptis

single-master/multiple-slavewithamessageidentificationformulti-casttransmissionbetweenanynetwork

nodes.

ThroughoutthechapterCompatibilityModereferstoSCIModefunctionaryofSCI/LINModule.Theinitial

partofthechapterexplainsabouttheSCIfunctionalityandlaterpartabouttheLINfunctionality.Though

theregisterarecommonforLINandSCI,theregisterdescriptionshasnotestoidentifytheregister/bit

usageindifferentmodes.

26.1.1SCIFeatures

ThefollowingarethefeaturesoftheSCImodule:

•Standarduniversalasynchronousreceiver-transmitter(UART)communication

•Supportsfull-orhalf-duplexoperation

•Standardnonreturntozero(NRZ)format

•Double-bufferedreceiveandtransmitfunctionsincompatibilitymode

•Supportstwoindividuallyenabledinterruptlines:level0andlevel1

•Configurableframeformatof3to13bitspercharacterbasedonthefollowing:

–Datawordlengthprogrammablefromonetoeightbits

–Additionaladdressbitinaddress-bitmode

–Parityprogrammableforzerooroneparitybit,oddorevenparity

–Stopprogrammableforoneortwostopbits

•Asynchronousorisosynchronouscommunicationmodes

•Twomultiprocessorcommunicationformatsallowcommunicationbetweenmorethantwodevices

•SleepmodeisavailabletofreeCPUresourcesduringmultiprocessorcommunicationandthenwake

uptoreceiveanincomingmessage

•The24-bitprogrammablebaudratesupports224differentbaudratesprovidehighaccuracybaudrate

selection

•At100MHzPeripheralClock,3.125Mbits/sistheMaxBaudRateachievable

•CapabilitytouseDirectMemoryAccess(DMA)fortransmitandreceivedata

•FiveerrorflagsandSevenstatusflagsprovidedetailedinformationregardingSCIevents

•Twoexternalpins:LINRXandLINTX

•Multi-bufferedreceiveandtransmitunits

NOTE:SCI/LINmoduledoesnotsupportUARThardwareflowcontrol.Thisfeaturecanbe

implementedinsoftwareusingageneralpurposeI/Opin.

1345

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






IntroductionandFeatureswww.ti.com

26.1.2LINFeatures

ThefollowingarethefeaturesoftheLINmodule:

•CompatibilitywithLIN1.3,2.0and2.1protocols

•ConfigurableBaudRateupto20Kbits/s

•Twoexternalpins:LINRXandLINTX.

•Multi-bufferedreceiveandtransmitunits

•Identificationmasksformessagefiltering

•Automaticmasterheadergeneration

–Programmablesynchronizationbreakfield

–Synchronizationfield

–Identifierfield

•Slaveautomaticsynchronization

–Synchronizationbreakdetection

–Optionalbaudrateupdate

–Synchronizationvalidation

•231programmabletransmissionrateswith7fractionalbits

•WakeuponLINRXdominantlevelfromtransceiver

•Automaticwakeupsupport

–Wakeupsignalgeneration

–Expirationtimesonwakeupsignals

•Automaticbusidledetection

•Errordetection

–Biterror

–Buserror

–No-responseerror

–Checksumerror

–Synchronizationfielderror

–Parityerror

•CapabilitytouseDirectMemoryAccess(DMA)fortransmitandreceivedata.

•2Interruptlineswithpriorityencodingfor:

–Receive

–Transmit

–ID,error,andstatus

•SupportforLIN2.0checksum

•Enhancedsynchronizerfinitestatemachine(FSM)supportforframeprocessing

•Enhancedhandlingofextendedframes

•Enhancedbaudrategenerator

•Updatewakeup/gotosleep

1346

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroductionandFeatures

26.1.3BlockDiagram

TheSCI/LINmodulecontainscoreSCIblockwithaddedsub-blockstosupportLINprotocol.

ThreeMajorcomponentsoftheSCIModuleare:

•Transmitter

•BaudClockGenerator

•Receiver

Transmitter(TX)containstwomajorregisterstoperformthedouble-buffering:

•Thetransmitterdatabufferregister(SCITD)containsdataloadedbytheCPUtobetransferredtothe

shiftregisterfortransmission.

•Thetransmittershiftregister(SCITXSHF)loadsdatafromthedatabuffer(SCITD)andshiftsdataonto

theLINTXpin,onebitatatime.

BaudClockGenerator

•AprogrammablebaudgeneratorproduceseitherabaudclockscaledfromVBUSPCLK.

Receiver(RX)containstwomajorregisterstoperformthedouble-buffering:

•Thereceivershiftregister(SCIRXSHF)shiftsdatainfromtheLINRXpinonebitatatimeandtransfers

completeddataintothereceivedatabuffer.

•Thereceiverdatabufferregister(SCIRD)containsreceiveddatatransferredfromthereceivershift

register

TheSCIreceiverandtransmitteraredouble-buffered,andeachhasitsownseparateenableandinterrupt

bits.Thereceiverandtransmittermayeachbeoperatedindependentlyorsimultaneouslyinfullduplex

mode.

Toensuredataintegrity,theSCIchecksthedataitreceivesforbreaks,parity,overrun,andframing

errors.Thebitrate(baud)isprogrammabletoover16milliondifferentratesthrougha24-bitbaud-select

register.Figure26-1showsthedetailedSCIblockdiagram.

TheSCI/LINmoduleisbasedonthestandaloneSCIwiththeadditionofanerrordetector(parity

calculator,checksumcalculator,andbitmonitor),amaskfilter,asynchronizer,andamultibuffered

receiverandtransmitter.TheSCIinterface,theDMAcontrolsubblocksandthebaudgeneratorare

modifiedaspartofthehardwareenhancementsforLINcompatibility.Figure26-2showstheSCI/LIN

blockdiagram.

1347

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TXRDYTXEMPTYSCIFLR.8SCIFLR.11

TXINTENATXINT

TXWAKE

Addressbit†

Shiftregister

Transmitbuffer

18

LINRX

SCIGCR1.248

ReceivebufferSCIRD

RXRDYBRKDTSCIFLR.9SCIFLR.0

RXINTENA

RXWAKESCIFLR.12

RXINT

Shiftregister

WAKEUP

SCIFLR.1SCITD

SCITXSHFSCIRXSHF

ERRINT

SCIFLR24:26

SCIGCR1.25TXENA

SCIFLR.10

BRKDTINTENAWAKEUPINTENA

PEOE  FERECEIVERTRANSMITTERCLOCK

BaudclockSCIBAUDgenerator

Baudrateregisters

LINTX

RXENA

SCISETINT.9SCISETINT.0SCISETINT.1

SCIGCR1.5SCISETINT.8

SCI

VCLKPeripheral



IntroductionandFeatureswww.ti.com

Figure26-1.DetailedSCIBlockDiagram

1348

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroductionandFeatures

Figure26-2.SCI/LINBlockDiagram

1349

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Start0(LSBit)1234567(MSBit)AddrParity

Start0(LSBit)1234567(MSBit)Parity

Idle-linemodeAddressbitmode

AddressbitStopStop



SCICommunicationFormatswww.ti.com

26.2SCICommunicationFormats

TheSCImodulecanbeconfiguredtomeettherequirementsofmanyapplications.Because

communicationformatsvarydependingonthespecificapplication,manyattributesoftheSCI/LINareuser

configurable.Thelistbelowdescribestheseconfigurationoptions:

•SCIFrameformat

•SCITimingmodes

•SCIBaudrate

•SCIMultiprocessormodes

26.2.1SCIFrameFormats

TheSCIusesaprogrammableframeformat.Allframesconsistofthefollowing:

•Onestartbit

•Onetoeightdatabits

•Zerooroneaddressbit

•Zerooroneparitybit

•Oneortwostopbits

TheframeformatforboththetransmitterandreceiverisprogrammablethroughthebitsintheSCIGCR1

register.Bothreceiveandtransmitdataisinnonreturntozero(NRZ)format,whichmeansthatthe

transmitandreceivelinesareatlogichighwhenidle.Eachframetransmissionbeginswithastartbit,in

whichthetransmitterpullstheSCIlinelow(logiclow).Followingthestartbit,theframedataissentand

receivedleastsignificantbitfirst(LSB).

AnaddressbitispresentineachframeiftheSCIisconfiguredtobeinaddress-bitmodebutisnot

presentinanyframeiftheSCIisconfiguredforidle-linemode.Theformatofframeswithandwithoutthe

addressbitisillustratedinFigure26-3.

AparitybitispresentineveryframewhenthePARITYENAbitisset.Thevalueoftheparitybitdepends

onthenumberofonebitsintheframeandwhetheroddorevenparityhasbeenselectedviathePARITY

ENAbit.BothexamplesinFigure26-3haveparityenabled.

Allframesincludeonestopbit,whichisalwaysahighlevel.Thishighlevelattheendofeachframeis

usedtoindicatetheendofaframetoensuresynchronizationbetweencommunicatingdevices.Twostop

bitsaretransmittediftheSTOPbitinSCIGCR1registerisset.TheexamplesshowninFigure26-3use

onestopbitperframe.

Figure26-3.TypicalSCIDataFrameFormats

1350

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




16SCIbaudclockperiods/bit

Majorityvote

LSBofdata

StartbitLINRX

Fallingedgedetected1  2  3  4  5  6  7  8  9 10 11 1213 14 15 16 1 2 3 4 5 6  7  8  9 10 11 12 13 14 15 161 2 3 4 5



www.ti.comSCICommunicationFormats

26.2.2SCITimingMode

TheSCIcanbeconfiguredtouseasynchronousorisosynchronoustimingusingTIMINGMODEbitin

SCIGCR1register.

26.2.2.1AsynchronousTimingMode

Theasynchronoustimingmodeusesonlythereceiveandtransmitdatalinestointerfacewithdevices

usingthestandarduniversalasynchronousreceiver-transmitter(UART)protocol.

Intheasynchronoustimingmode,eachbitinaframehasadurationof16SCIbaudclockperiods.Each

bitthereforeconsistsof16samples(oneforeachclockperiod).WhentheSCIisusingasynchronous

mode,thebaudratesofallcommunicatingdevicesmustmatchascloselyaspossible.Receiveerrors

resultfromdevicescommunicatingatdifferentbaudrates.

Withthereceiverintheasynchronoustimingmode,theSCIdetectsavalidstartbitifthefirstfoursamples

afterafallingedgeontheLINRXpinareoflogiclevel0.AssoonasafallingedgeisdetectedonLINRX,

theSCIassumesthataframeisbeingreceivedandsynchronizesitselftothebus.

TopreventinterpretingnoiseasStartbitSCIexpectsLINRXlinetobelowforatleastfourcontiguousSCI

baudclockperiodstodetectavalidstartbit.Thebusisconsideredidleifthisconditionisnotmet.Whena

validstartbitisdetected,theSCIdeterminesthevalueofeachbitbysamplingtheLINRXlinevalue

duringtheseventh,eighth,andninthSCIbaudclockperiods.Amajorityvoteofthesethreesamplesis

usedtodeterminethevaluestoredintheSCIreceivershiftregister.Bysamplinginthemiddleofthebit,

theSCIreduceserrorscausedbypropagationdelaysandriseandfalltimesanddatalinenoises.

Figure26-4illustrateshowthereceiversamplesastartbitandadatabitinasynchronoustimingmode.

Thetransmittertransmitseachbitforadurationof16SCIbaudclockperiods.Duringthefirstclockperiod

forabit,thetransmittershiftsthevalueofthatbitontotheLINTXpin.Thetransmitterthenholdsthe

currentbitvalueonLINTXfor16SCIbaudclockperiods.

Figure26-4.AsynchronousCommunicationBitTiming

26.2.2.2IsosynchronousTimingMode

Inisosynchronoustimingmode,eachbitinaframehasadurationofexactly1baudclockperiodand

thereforeconsistsofasinglesample.Withthistimingconfiguration,thetransmitterandreceiverare

requiredtomakeuseoftheSCICLKpintosynchronizecommunicationwithotherSCI.Thismodeisnot

supportedonthisdevicebecauseSCICLKpinisnotavailable.

26.2.3SCIBaudRate

TheSCI/LINhasaninternallygeneratedserialclockdeterminedbytheperipheralVCLKandthe

prescalersPandMinthisregister.TheSCIusesthe24-bitintegerprescalerPvalueofBRSRregisterto

selecttherequiredbaudrates.Theadditional4-bitfractionaldividerMrefinesthebaudrateselection.

Inasynchronoustimingmode,theSCIgeneratesabaudclockaccordingtothefollowingformula:

1351

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




VCLKaTdMPbitTúûùêëé+÷øöçèæ++=16116

VCLKiTdMPbitTúûùêëé+÷øöçèæ++=16116

SCICLKFrequency=Asynchronousbaudvalue=ForP=0,Asynchronousbaudvalue=VCLKFrequencyP1M16------++----------------------------------------------------SCICLKFrequency16----------------------------------------------------------VCLKFrequency32-------------------------------------------------



SCICommunicationFormatswww.ti.com

(41)

26.2.3.1SuperfractionalDivider,SCIAsynchronousMode

ThesuperfractionaldividerisavailableinSCIasynchronousmode(idle-lineandaddress-bitmode).

Buildingonthe4-bitfractionaldividerM(BRSR[27:24]),thesuperfractionaldividerusesanadditional3-bit

modulatingvalue,illustratedinTable26-2.Thebitswitha1inthetablewillhaveanadditionalVCLK

periodaddedtotheirTbit.Ifthecharacterlengthismorethan10,thenthemodulationtablewillbearolled-

overversionoftheoriginaltable(Table26-1),asshowninTable26-2.

ThebaudratewillvaryoveradatafieldtoaverageaccordingtotheBRSR[30:28]valuebya“d”fraction

oftheperipheralinternalclock:0<d<1.ReferFigure26-5forasimpleAverage“d’calculationbasedon

“U”value(BRSR[30:28]).

TheinstantaneousbittimeisexpressedintermsofTVCLKasfollows:

ForallPotherthan0,andallMandd(0or1),

(42)

ForP=0Tbit=32TVCLK

TheaveragedbittimeisexpressedintermsofTVCLKasfollows:

ForallPotherthan0,andallMandd(0<d<1),

(43)

ForP=0Tbit=32TVCLK

Table26-1.SuperfractionalBitModulationforSCIMode(NormalConfiguration)(1)

BRS[30:28]

StartBit

D[0]

D[1]

D[2]

D[3]

D[4]

D[5]

D[6]

D[7]

StopBit

0

0

0

0

0

0

0

0

0

0

0

1

1

0

0

0

0

0

0

0

1

0

2

1

0

0

0

1

0

0

0

1

0

3

1

0

1

0

1

0

0

0

1

0

4

1

0

1

0

1

0

1

0

1

0

5

1

1

1

0

1

0

1

0

1

1

6

1

1

1

0

1

1

1

0

1

1

7

1

1

1

1

1

1

1

0

1

1

(1)Normalconfiguration=Start+8DataBits+StopBit

1352

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ST01234567STOPNormalDataFramewithBRS[31:28]=0NormalDataFramewithBRS[31:28]=1ST01234567STOPTbit

Tbit

Tvclk+d=NumberofVclkAdded/TotalNumberofBits=2/10=0.2



www.ti.comSCICommunicationFormats

Table26-2.SuperfractionalBitModulationforSCIMode(MaximumConfiguration)(1)

BRS[30:28]

StartBit

D[0]

D[1]

D[2]

D[3]

D[4]

D[5]

D[6]

D[7]

Addr

Parity

Stop0

Stop1

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

1

0

0

0

0

0

0

0

1

0

0

0

0

2

1

0

0

0

1

0

0

0

1

0

0

0

1

3

1

0

1

0

1

0

0

0

1

0

1

0

1

4

1

0

1

0

1

0

1

0

1

0

1

0

1

5

1

1

1

0

1

0

1

0

1

1

1

0

1

6

1

1

1

0

1

1

1

0

1

1

1

0

1

7

1

1

1

1

1

1

1

0

1

1

1

1

1

(1)Maximumconfiguration=Start+8DataBits+AddrBit+ParityBit+StopBit0+StopBit1

Table26-3.SCIMode(MinimumConfiguration)(1)

BRS[30:28]

StartBit

D[0]

Stop

0

0

0

0

1

1

0

0

2

1

0

0

3

1

0

1

4

1

0

1

5

1

1

1

6

1

1

1

7

1

1

1

(1)Minimumconfiguration=Start+1DataBits+StopBit

Figure26-5.SuperfractionalDividerExample

1353

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCICommunicationFormatswww.ti.com

26.2.4SCIMultiprocessorCommunicationModes

Insomeapplications,theSCImaybeconnectedtomorethanoneserialcommunicationdevice.Insucha

multiprocessorconfiguration,severalframesofdatamaybesenttoallconnecteddevicesortoan

individualdevice.Inthecaseofdatasenttoanindividualdevice,thereceivingdevicesmustdetermine

whentheyarebeingaddressed.Whenamessageisnotintendedforthem,thedevicescanignorethe

followingdata.WhenonlytwodevicesmakeuptheSCInetwork,addressingisnotneeded,so

multiprocessorcommunicationschemesarenotrequired.

SCIsupportstwomultiprocessorcommunicationmodeswhichcanbeselectedusingCOMMMODEbit:

•Idle-LineMode

•AddressBitMode

WhentheSCIisnotusedinamultiprocessorenvironment,softwarecanconsiderallframesasdata

frames.Inthiscase,theonlydistinctionbetweentheidle-lineandaddress-bitmodesisthepresenceofan

extrabit(theaddressbit)ineachframesentwiththeaddress-bitprotocol.

TheSCIallowsfull-duplexcommunicationwheredatacanbesentandreceivedviathetransmitand

receivepinssimultaneously.However,theprotocolusedbytheSCIassumesthatonlyonedevice

transmitsdataonthesamebuslineatanyonetime.NoarbitrationisdonebytheSCI.

26.2.4.1Idle-LineMultiprocessorModes

Inidle-linemultiprocessormode,aframethatisprecededbyanidleperiod(10ormoreidlebits)isan

addressframe.Aframethatisprecededbyfewerthan10idlebitsisadataframe.Figure26-6illustrates

theformatofseveralblocksandframeswithidle-linemode.

Therearetwowaystotransmitanaddressframeusingidle-linemode:

Method1:Insoftware,deliberatelyleaveanidleperiodbetweenthetransmissionofthelastdataframeof

thepreviousblockandtheaddressframeofthenewblock.

Method2:ConfiguretheSCItoautomaticallysendanidleperiodbetweenthelastdataframeofthe

previousblockandtheaddressframeofthenewblock.

AlthoughMethod1isonlyaccomplishedbyadelayloopinsoftware,Method2canbeimplementedby

usingthetransmitbufferandtheTXWAKEbitinthefollowingmanner:

Step1:Writea1totheTXWAKEbit.

Step2:WriteadummydatavaluetotheSCITDregister.ThistriggerstheSCItobegintheidleperiodas

soonasthetransmittershiftregisterisempty.

Step3:WaitfortheSCItocleartheTXWAKEflag.

Step4:WritetheaddressvaluetoSCITD.

AsindicatedbyStep3,softwareshouldwaitfortheSCItocleartheTXWAKEbit.However,theSCI

clearstheTXWAKEbitatthesametimeitsetsTXRDY(thatis,transfersdatafromSCITDinto

SCITXSHF).Therefore,iftheTXINTENAbitisset,thetransferofdatafromSCITDtoSCITXSHFcauses

aninterrupttobegeneratedatthesametimethattheSCIclearstheTXWAKEbit.Ifthisinterruptmethod

isused,softwareisnotrequiredtopolltheTXWAKEbitwaitingfortheSCItoclearit.

Whenidle-linemultiprocessorcommunicationsareused,softwaremustensurethattheidletimeexceeds

10bitperiodsbeforeaddresses(usingoneofthemethodsmentionedabove),andsoftwaremustalso

ensurethatdataframesarewrittentothetransmitterquicklyenoughtobesentwithoutadelayof10bit

periodsbetweenframes.Failuretocomplywiththeseconditionswillresultindatainterpretationerrorsby

otherdevicesreceivingthetransmission.

1354

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




AddrDataAddr

StartStartAddressframe(address bit = 1)Dataframe(addressbit=0)Idletimeisofnosignificance

Oneblock

Severalblocksofframes

Dataformat(pinsLINRX,LINTX)Dataformatexpanded

Start

1

0

1

Idletimeisnotsignificant

ParityStopParity

StopParityStop

Idletimeisofnosignificance

Addressframe(addressbit=1)

AddressDataLastdata

StartStartStartAddressframeDataframeFewerthan10idlebitsIdleperiodOneblockofframes

Blocksseparatedby10ormoreidlebitsBlocksofframes

Dataformat(pinsLINRX,LINTX)DataformatexpandedStop

StopStop

Dataframe

Parity

Parity

Parity



www.ti.comSCICommunicationFormats

Figure26-6.Idle-LineMultiprocessorCommunicationFormat

26.2.4.2Address-BitMultiprocessorMode

Intheaddress-bitprotocol,eachframehasanextrabitimmediatelyfollowingthedatafieldcalledan

addressbit.Aframewiththeaddressbitsetto1isanaddressframe;aframewiththeaddressbitsetto0

isadataframe.Theidleperiodtimingisirrelevantinthismode.Figure26-7illustratestheformatof

severalblocksandframeswiththeaddress-bitmode.

Whenaddress-bitmodeisused,thevalueoftheTXWAKEbitisthevaluesentastheaddressbit.To

sendanaddressframe,softwaremustsettheTXWAKEbit.Thisbitisclearedasthecontentsofthe

SCITDareshiftedfromtheTXWAKEregistersothatallframessentaredataexceptwhentheTXWAKE

bitiswrittenasa1.

NodummywritetoSCITDisrequiredbeforeanaddressframeissentinaddress-bitmode.Thefirstbyte

writtentoSCITDaftertheTXWAKEbitiswrittento1istransmittedwiththeaddressbitsetwhenaddress-

bitmodeisused.

Figure26-7.Address-BitMultiprocessorCommunicationFormat

1355

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




RD0

RD1

RD2

RD3

RD4

RD5

RD6

RD70707070707070707

3-bitCounter

CEFlag

3-bitCompare

=

RXDMARequest

CHECKSUMCALCULATOR

MBUFMODERXReadyFlag

NotMBUFMODE

NoReceiveErrors

SCIRXSHF07

RX



SCICommunicationFormatswww.ti.com

26.2.5SCIMultiBufferedMode

ToreduceCPUloadwhenReceivingorTransmittingdataininterruptmodeorDMAmode,theSCI/LIN

modulehaseightseparateReceiveandtransmitbuffers.Multibufferedmodeisenabledbysettingthe

MBUFMODEbit.

Themultibuffer3-bitcountercountsthedatabytestransferredfromtheSCIRXSHFregistertotheRDy

receivebuffersandTDytransmitbuffersregistertoSCITXSHFregister.The3-bitcompareregister

containsthenumberofdatabytesexpectedtobereceivedortransmitted.theLENGTHvaluein

SCIFORMATregisterindicatestheexpectedlengthandisusedtoloadthe3-bitcompareregister.

Areceiveinterrupt(RXinterrupt;seetheSCIINTVECT0andSCIINTVECT1registers),andareceiveready

RXRDYflagsetinSCIFLRregister,aswellasaDMArequest(RXDMA)couldoccurafterreceivinga

responseiftherearenoresponsereceiveerrorsfortheframe(suchas,thereis,frameerror,andoverrun

error).

Atransmitinterrupt(TXinterrupt),andatransmitreadyflag(TXRDYflaginSCIFLRregister),andaDMA

request(TXDMA)couldoccuraftertransmittingaresponse.

Figure26-8andFigure26-9showsthereceiveandtransmitmultibufferfunctionalblockdiagram.

Figure26-8.ReceiveBuffers

1356

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TD0

TD1

TD2

TD3

TD4

TD5

TD6

TD707

SCITXSHF0707070707070707

3-bitCounter

CEFlag

3-bitCompare

=

TXDMARequest

CHECKSUMCALCULATOR

TX

MBUFMODETXReadyFlag

NotMBUFMODE



www.ti.comSCICommunicationFormats

Figure26-9.TransmitBuffers

1357

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




INT0

INT1

INT2

INT3

INT4

INT5

INT6

INT7

INT8

INT9

PriorityEncoder1

PriorityEncoder0

SCIINTFLR

SCISETINT

SCICLRINT

SCISETINTL

SCICLRL

INT1INT0

SCIINTVECT1

SCIINTVECT0

INT10

INT11

INT12

INT13

INT14

INT15

INT16



SCIInterruptswww.ti.com

26.3SCIInterrupts

TheSCI/LINmodulehastwointerruptlines,level0andlevel1,tothevectoredinterruptmanager(VIM)

module(seeFigure26-10).TwooffsetregistersSCIINTVECT0andSCIINTVECT1determinewhichflag

triggeredtheinterruptaccordingtotherespectivepriorityencoders.Eachinterruptconditionhasabitto

enable/disabletheinterruptintheSCISETINTandSCICLRINTregistersrespectively.

Eachinterruptalsohasabitthatcanbesetasinterruptlevel0(INT0)orasinterruptlevel1(INT1).By

default,interruptsareininterruptlevel0.SCISETINTLVLsetsagiveninterrupttolevel1.

SCICLEARINTLVLresetsagiveninterruptleveltothedefaultlevel0.

TheinterruptvectorregistersSCIINTVECT0andSCIINTVECT1returnthevectorofthependinginterrupt

lineINT0orINT1.Ifmorethanoneinterruptispending,theinterruptvectorregisterholdsthehighest

priorityinterrupt.

Figure26-10.GeneralInterruptScheme

1358

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ENAINTx

INT1

...INT0

FLAGxINTxLVL

......

PriorityEncoder0

...

PriorityEncoder1

5-bitINTVECT0

5-bitINTVECT1



www.ti.comSCIInterrupts

Figure26-11.InterruptGenerationforGivenFlags

26.3.1TransmitInterrupt

Tousetransmitinterruptfunctionality,SETTXINTbitmustbeenabledandSETTXDMAbitmustbe

cleared.Thetransmitready(TXRDY)flagissetwhentheSCItransfersthecontentsofSCITDtotheshift

register,SCITXSHF.TheTXRDYflagindicatesthatSCITDisreadytobeloadedwithmoredata.In

addition,theSCIsetstheTXEMPTYbitifboththeSCITDandSCITXSHFregistersareempty.IftheSET

TXINTbitisset,thenatransmitinterruptisgeneratedwhentheTXRDYflaggoeshigh.TransmitInterrupt

isnotgeneratedimmediatelyaftersettingtheSETTXINTbitunliketransmitDMArequest.Transmit

InterruptisgeneratedonlyafterthefirsttransferfromSCITDtoSCITXSHF,thatisfirstdatahastobe

writtentoSCITDbytheUserbeforeanyinterruptgetsgenerated.Totransmitfurtherdatatheusercan

writedatatoSCITDinthetransmitInterruptserviceroutine.

WritingdatatotheSCITDregisterclearstheTXRDYbit.Whenthisdatahasbeenmovedtothe

SCITXSHFregister,theTXRDYbitissetagain.Theinterruptrequestcanbesuspendedbysettingthe

CLRTXINTbit;however,whentheSETTXINTbitisagainsetto1,theTXRDYinterruptisasserted

again.ThetransmitinterruptrequestcanbeeliminateduntilthenextseriesofvaluesiswrittentoSCITD,

bydisablingthetransmitterviatheTXENAbit,byasoftwareresetSWnRST,orbyadevicehardware

reset.

26.3.2ReceiveInterrupt

Thereceiveready(RXRDY)flagissetwhentheSCItransfersnewlyreceiveddatafromSCIRXSHFto

SCIRD.TheRXRDYflagthereforeindicatesthattheSCIhasnewdatatoberead.Receiveinterruptsare

enabledbytheSETRXINTbit.IftheSETRXINTissetwhentheSCIsetstheRXRDYflag,thena

receiveinterruptisgenerated.ThereceiveddatacanbereadintheInterruptServiceroutine.

OnadevicewithbothSCIandaDMAcontroller,thebitsSETRXDMAALLandSETRXDMAmustbe

clearedtoselectinterruptfunctionality.

26.3.3WakeUpInterrupt

SCIsetstheWAKEUPflagifbusactivityontheRXlineeitherpreventspower-downmodefrombeing

entered,orRXlineactivitycausesanexitfrompower-downmode.Ifenabled(SETWAKEUPINT),

wakeupinterruptistriggeredonceWAKEUPflagisset.

1359

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIInterruptswww.ti.com

26.3.4ErrorInterrupts

ThefollowingerrordetectionaresupportedwithInterruptbytheSCImodule:

•Parityerrors(PE)

•Frameerrors(FE)

•BreakDetecterrors(BRKDT)

•Overrunerrors(OE)

•Biterrors(BE)

Ifalloftheseerrors(PE,FE,BRKDT,OE,BE)areflagged,aninterruptfortheflaggederrorswillbe

generatedifenabled.Amessageisvalidforboththetransmitterandthereceiverifthereisnoerror

detecteduntiltheendoftheframe.Eachoftheseflagsislocatedinthereceiverstatus(SCIFLR)register.

Thereare16interruptsourcesintheSCI/LINmodule,InSCImode8interruptsaresupported,asseenin

Table26-4.

Table26-4.SCI/LINInterrupts

Offset(1)

Interrupt

ApplicabletoSCI

ApplicabletoLIN

0

Nointerrupt

1

Wakeup

Yes

Yes

2

Inconsistent-synch-fielderror

No

Yes

3

Parityerror

Yes

Yes

4

ID

No

Yes

5

Physicalbuserror

No

Yes

6

Frameerror

Yes

Yes

7

Breakdetect

Yes

No

8

Checksumerror

No

Yes

9

Overrunerror

Yes

Yes

10

Biterror

Yes

Yes

11

Receive

Yes

Yes

12

Transmit

Yes

Yes

13

No-responseerror

No

Yes

14

Timeoutafterwakeupsignal(150ms)

No

Yes

15

Timeoutafterthreewakeupsignals(1.5s)

No

Yes

16

Timeout(BusIdle,4s)

No

Yes

(1)Offset1isthehighestpriority.Offset16isthelowestpriority.

1360

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIDMAInterface

26.4SCIDMAInterface

DMArequestsforreceive(RXDMArequest)andtransmit(TXDMArequest)areavailablefortheSCI/LIN

module.TheDMAtransfersdependingonwhethermultibuffermodebit(MBUFMODE)isenabledornot.

ForDMAmoduleconfigurationrefer

26.4.1ReceiveDMARequests

ThisDMAfunctionalityisenabled/disabledbytheCPUusingtheSETRXDMA/CLRRXDMAbits,

respectively.

InMultiBufferedSCImodewithDMAenabled,thereceiverloadstheRDybuffersforeachreceived

character.RXDMArequestistriggeredoncethelastcharacteroftheprogrammednumberofcharacters

(LENGTH)arereceivedandcopiedtothecorrespondingRDybuffersucessfully.

Ifthemultibufferoptionisdisabled,thenDMArequestswillbegeneratedonabyte-per-bytebasisuntilall

theexpectedresponsedatafieldsarereceived.

Inmultiprocessormode,theSCIcangeneratereceiverinterruptsforaddressframesandDMArequests

fordataframesorDMArequestsforboth.ThisiscontrolledbytheSETRXDMAALLbit.

InmultiprocessormodewiththeSLEEPbitset,noDMAisgeneratedforreceiveddataframes.The

softwaremustcleartheSLEEPbitbeforedataframescanbereceived.

26.4.2TransmitDMARequests

DMAfunctionalityisenabled/disabledbytheCPUwithSETTXDMA/CLRTXDMAbits,respectively.

InMultiBufferedSCImodeonceTXRDYbitissetorafteratransmissionofprogrammedno.ofcharacters

(LENGTH)(uptoeightdatabytesstoredinthetransmitbuffer(s)TDyintheLINTD0andLINTD1

registers),aDMArequestisgeneratedinordertoreloadthetransmitbufferforthenexttransmission.If

themultibufferoptionisdisabled,thenDMArequestswillbegeneratedonabyte-per-bytebasisuntilall

bytesaretransferred.

1361

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIConfigurationswww.ti.com

26.5SCIConfigurations

BeforetheSCIsendsorreceivesdata,itsregistersshouldbeproperlyconfigured.Uponpower-upora

system-levelreset,eachbitintheSCIregistersissettoadefaultstate.Theregistersarewritableonly

aftertheRESETbitissetto1.OfparticularimportanceistheSWnRSTbit.Thisactive-lowbitisinitialized

to0andkeepstheSCIinaresetstateuntilitisprogrammedto1.Therefore,allSCIconfigurationshould

becompletedbeforea1(one)iswrittentotheSWnRSTbit.

Thefollowinglistdetailstheconfigurationstepsthatsoftwareshouldperformpriortothetransmissionor

receptionofdata.AslongasSWnRSTisheldlowtheentiretimethattheSCIisbeingconfigured,the

orderinwhichtheregistersareprogrammedisnotimportant.

•EnableSCIbysettingRESETbit.

•ClearSWnRSTto0beforeconfiguringtheSCI.

•SelectthedesiredframeformatbyprogrammingSCIGCR1.

•ConfiguretheLINRXandLINTXpinsforSCIfunctionalitybysettingtheRXFUNCandTXFUNCbit.

•SelectthebaudratetobeusedforcommunicationbyprogrammingBRSR.

•SelectinternalclockbyprogrammingtheCLOCKbit.

•SettheCONTbittomakeSCInottohaltforanemulationbreakpointuntilitscurrentreceptionor

transmissioniscomplete(thisbitisusedonlyinanemulationenvironment).

•SetLOOPBACKbittoconnectthetransmittertothereceiverinternally(thisfeatureisusedtoperform

aself-test).

•SelectthereceiverenableRXENAbitifdataistobereceived.

•SelectthetransmitenableTXENAbitifdataistobetransmitted.

•SetSWnRSTto1aftertheSCIisconfigured.

•PerformReceiveorTransmitdata..

26.5.1ReceivingData

TheSCIreceiverisenabledtoreceivemessagesiftheRXFUNCbitandtheRXENAbitaresetto1.If

theRXFUNCbitisnotset,theLINRXpinfunctionsasageneralpurposeI/OpinratherthanasanSCI

functionpin.

SCImodulecanreceivedatainoneofthefollowingmodes:

•Single-Buffer(Normal)Mode

•Multi-BufferMode

Afteravalididleperiodisdetected,dataisautomaticallyreceivedasitarrivesontheLINRXpin.

26.5.1.1ReceivingDatainSingle-BufferMode

SingleBufferModeisselectedwhenMBUFMODEbitis0.InthismodeSCIsetstheRXRDYbitwhenit

transfersnewlyreceiveddatafromSCIRXSHFtoSCIRD.TheSCIclearstheRXRDYbitafterthenew

datainSCIRDhasbeenread.Also,asdataistransferredfromSCIRXSHFtoSCIRD,theSCIsetsFE,

OE,orPEifanyoftheseerrorconditionsweredetectedinthereceiveddata.Theseerrorconditionsare

supportedwithconfigurableInterruptcapability.Thewake-upandbreak-detectstatusbitsarealsosetif

oneoftheseerrorsoccurs,buttheydonotnecessarilyoccuratthesametimethatnewdataisbeing

loadedintoSCIRD.

Usercanreceivedataby:

1.PollingReceiveReadyFlag

2.ReceiveInterrupt

3.DMA

Inpollingmethod,softwarecanpollforRXRDYbitandreadthedatafromSCIRDregisteronceRXRDYis

sethigh.CPUisunnecessarilyoverloadedbyselectingPollingmode.Toavoidthisusercanuseeither

InterruptorDMAmethod.TouseinterruptmethodSETRXINTbitshouldbesetandtouseDMASETRX

DMAbitshouldbeset.EitheranInterruptoraDMArequestisgeneratedthemomentRXRDYisset.

1362

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIConfigurations

26.5.1.2ReceivingDatainMulti-BufferMode

Multi-BufferModeisselectedwhenMBUFMODEbitis1.InthismodeSCIsetstheRXRDYbitwhen

programmednumberofdataarereceivedinthereceivebuffer,thecompleteframe.Theerrorcondition

detectionlogicissameasSingleBufferMode,exceptthatitmonitorsforthecompleteframe.LikeSingle

BufferModetheusercanuseeitherInterrupt,DMAorpollingmethodtoreadthedata.Thereceiveddata

hastobereadfromtheLINRD0andLINRD1register,basedonthenumberofbytes.ForLENGTHless

thanorequalto4,ReadtoLINRD0registerwillclearthe“RXRDY”flag.ForLENGTHgreaterthan4,

ReadtoLINRD1registerwillclearthe“RXRDY”flag.

26.5.2TransmittingData

TheSCItransmitterisenablediftheTXFUNCbitandtheTXENAbitaresetto1.IftheTXFUNCbitis

notset,theLINTXpinfunctionsasageneralpurposeI/OpinratherthanasanSCIfunctionpin.Any

valuewrittentotheSCITDbeforeTXENAissetto1isnottransmitted.Bothofthesecontrolbitsallowfor

theSCItransmittertobeheldinactiveindependentlyofthereceiver.

SCImodulecantransmitdatainoneofthefollowingmodes:

•Single-Buffer(Normal)Mode

•Multi-BufferedorBufferedSCIMode.

26.5.2.1TransmittingDatainSingle-BufferMode

SingleBufferModeisselectedwhenMBUFMODEbitis0.InthismodeSCIwaitsfordatatobewrittento

SCITD,transfersittoSCITXSHF,andtransmitsit.TheflagsTXRDYandTXEMPTYindicatethestatusof

thetransmitbuffers.Thatis,whenthetransmitterisreadyfordatatobewrittentoSCITD,theTXRDYbit

isset.Additionally,ifbothSCITDandSCITXSHFareempty,thentheTXEMPTYbitisalsoset.

Usercantransmitdataby:

1.PollingTransmitReadyFlag

2.ReceiveInterrupt

3.DMA

Inpollingmethod,softwarecanpollforTXRDYbittogohighbeforewritingthedatatoSCITDregister.

CPUisunnecessarilyoverloadedbydoingthisPollingmethod.ToavoidthisusercanuseeitherInterrupt

orDMAmethod.TouseinterruptmethodSETTXINTbitshouldbesetandtouseDMASETTXDMAbit

shouldbeset.EitheranInterruptoraDMArequestisgeneratedthemomentTXRDYisset.Whenthe

SCIhascompletedtransmissionofallpendingframes,theSCITXSHFregisterandSCITDareempty,the

TXRDYbitisset,andaninterrupt/DMArequestisgenerated,ifenabled.Becausealldatahasbeen

transmitted,theinterrupt/DMArequestshouldbehalted.Thiscanbedonebyeitherdisablingthetransmit

interrupt(CLRTXINT)/DMArequest(CLRTXDMAbit)orbydisablingthetransmitter(clearTXENAbit).

NOTE:TheTXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0orSCIINTVECT1register.

26.5.2.2TransmittingDatainMulti-BufferMode

Multi-BufferModeisselectedwhenMBUFMODEbitis1.SimilartoSingleBufferModethesoftwarecan

usepolling,InterruptorDMAmethodtowritethedatatobetransmitted.Thedatatobetransmittedhasto

bewrittentoLINTD0andLINTD1register,basedonthenumberofbytes.SCIwaitsfordatatobewritten

toByte0(TD0)ofLINTD0registerandtransferstheprogrammednumberofbytestoSCITXSHFto

transmitonebyoneautomatically.

1363

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCILowPowerModewww.ti.com

26.6SCILowPowerMode

TheSCI/LINcanbeputineitherlocalorgloballow-powermode.Globallow-powermodeisassertedby

thesystemandisnotcontrolledbytheSCI/LIN.Duringgloballow-powermode,allclockstotheSCI/LIN

areturnedoffsothemoduleiscompletelyinactive.

Locallow-powermodeisassertedbysettingthePOWERDOWNbit;settingthisbitstopstheclockstothe

SCI/LINinternallogicandthemoduleregisters.SettingthePOWERDOWNbitcausestheSCItoenter

locallow-powermodeandclearingthePOWERDOWNbitcausesSCI/LINtoexitfromlocallow-power

mode.Alltheregistersareaccessibleduringlocalpower-downmodeasanyregisteraccessenablesthe

clocktoSCIforthatparticularaccessalone.

Thewake-upinterruptisusedtoallowtheSCItoexitlow-powermodeautomaticallywhenalowlevelis

detectedontheLINRXpinandalsothisclearsthePOWERDOWNbit.Ifwake-upinterruptisdisabled,

thentheSCI/LINimmediatelyenterslow-powermodewheneveritisrequestedandalsoanyactivityon

theLINRXpindoesnotcausetheSCItoexitlow-powermode.

NOTE:EnablingLocalLow-PowerModeDuringReceiveandTransmit

Ifthewake-upinterruptisenabledandlow-powermodeisrequestedwhilethereceiveris

receivingdata,thentheSCIimmediatelygeneratesawake-upinterrupttoclearthe

powerdownbitandpreventstheSCIfromenteringlow-powermodeandthuscompletesthe

currentreception.Otherwise,ifthewake-upinterruptisdisabled,thentheSCIcompletesthe

currentreceptionandthenentersthelow-powermode.

26.6.1SleepModeforMultiprocessorCommunication

WhentheSCIreceivesdataandtransfersthatdatafromSCIRXSHFtoSCIRD,theRXRDYbitissetand

ifRXINTENAisset,theSCIalsogeneratesaninterrupt.TheinterrupttriggerstheCPUtoreadthenewly

receivedframebeforeanotheroneisreceived.Inmultiprocessorcommunicationmodes,thisdefault

behaviormaybeenhancedtoprovideselectiveindicationofnewdata.WhenSCIreceivesanaddress

framethatdoesnotmatchitsaddress,thedevicecanignorethedatafollowingthisnon-matchingaddress

untilthenextaddressframebyusingsleepmode.Sleepmodecanbeusedwithbothidle-lineand

address-bitmultiprocessormodes.

IfsleepmodeisenabledbytheSLEEPbit,thentheSCItransfersdatafromSCIRXSHFtoSCIRDonlyfor

addressframes.Therefore,insleepmode,alldataframesareassembledintheSCIRXSHFregister

withoutbeingshiftedintotheSCIRDandwithoutinitiatingareceiveinterruptorDMArequest.Upon

receptionofanaddressframe,thecontentsoftheSCIRXSHFaremovedintoSCIRD,andthesoftware

mustreadSCIRDanddetermineiftheSCIisbeingaddressedbycomparingthereceivedaddressagainst

theaddresspreviouslysetinthesoftwareandstoredsomewhereinmemory(theSCIdoesnothave

hardwareavailableforaddresscomparison).IftheSCIisbeingaddressed,thesoftwaremustclearthe

SLEEPbitsothattheSCIwillloadSCIRDwiththedataofthedataframesthatfollowtheaddressframe.

WhentheSCIhasbeenaddressedandsleepmodehasbeendisabled(insoftware)toallowthereceiptof

data,theSCIshouldchecktheRXWAKEbit(SCIFLR.12)todeterminewhenthenextaddresshasbeen

received.Thisbitissetto1ifthecurrentvalueinSCIRDisanaddressandsetto0ifSCIRDcontains

data.IftheRXWAKEbitisset,thensoftwareshouldchecktheaddressinSCIRDagainstitsownaddress.

Ifitisstillbeingaddressed,thensleepmodeshouldremaindisabled.Otherwise,theSLEEPbitshouldbe

setagain.

1364

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comLINCommunicationFormats

Followingisasequenceofeventstypicalofsleepmodeoperation:

•TheSCIisconfiguredandbothsleepmodeandreceiveactionsareenabled.

•Anaddressframeisreceivedandareceiveinterruptisgenerated.

•Softwarecomparesthereceivedaddressframeagainstthatsetbysoftwareanddeterminesthatthe

SCIisnotbeingaddressed,sothevalueoftheSLEEPbitisnotchanged.

•SeveraldataframesareshiftedintoSCIRXSHF,butnodataismovedtoSCIRDandnoreceive

interruptsaregenerated.

•Anewaddressframeisreceivedandareceiveinterruptisgenerated.

•Softwarecomparesthereceivedaddressframeagainstthatsetbysoftwareanddeterminesthatthe

SCIisbeingaddressedandclearstheSLEEPbit.

•DatashiftedintoSCIRXSHFistransferredtoSCIRD,andareceiveinterruptisgeneratedaftereach

dataframeisreceived.

•Ineachinterruptroutine,softwarechecksRXWAKEtodetermineifthecurrentframeisanaddress

frame.

•Anotheraddressframeisreceived,RXWAKEisset,softwaredeterminesthattheSCIisnotbeing

addressedandsetstheSLEEPbitbackto1.Noreceiveinterruptsaregeneratedforthedataframes

followingthisaddressframe.

Byignoringdataframesthatarenotintendedforthedevice,fewerinterruptsaregenerated.These

interruptswouldotherwiserequireCPUinterventiontoreaddatathatisofnosignificancetothisspecific

device.UsingsleepmodecanhelpfreesomeCPUresources.

ExceptfortheRXRDYflag,theSCIcontinuestoupdatethereceiverstatusflags(seeTable26-12)while

sleepmodeisactive.Inthisway,ifanerroroccursonthereceiveline,anapplicationcanimmediately

respondtotheerrorandtaketheappropriatecorrectiveaction.

BecausetheRXRDYbitisnotupdatedfordataframeswhensleepmodeisenabled,theSCIcanenable

sleepmodeanduseapollingalgorithmifdesired.Inthiscase,whenRXRDYisset,softwareknowsthata

newaddresshasbeenreceived.IftheSCIisnotbeingaddressed,thenthesoftwareshouldnotchange

thevalueoftheSLEEPbitandshouldcontinuetopollRXRDY.

26.7LINCommunicationFormats

TheSCI/LINmodulecanbeusedinLINmodeorSCImode.Theenhancementsforbaudgeneration,

DMAcontrolsandadditionalreceive/transmitbuffersnecessaryforLINmodeoperationarealsopartof

theenhancedbufferedSCImodule.LINmodeisselectedbyenablingLINMODEbitinSCIGCR1register.

NOTE:TheSCI/LINisbuiltaroundtheSCIplatformandusesasimilarsamplingscheme:16

samplesforeachbitwithmajorityvoteonsamples8,9,and10.

TheSCI/LINcontrolregistersarelocatedattheSCI/LINbaseaddress.Foradetaileddescriptionofeach

register,seeSection26.13.

26.7.1LINStandards

ForcompatibilitywithLIN2.0standardthefollowingadditionalfeaturesareimplementedoverLIN1.3:

(i)SupportforLIN2.0checksum

(ii)EnhancedsynchronizerFSMsupportforframeprocessing

(iii)Enhancedhandlingofextendedframes

(iv)Enhancedbaudrategenerator

(v)Updatewakeup/gotosleep

TheLINmodulecoverstheCPUperformance-consumingfeatures,definedintheLINSpecification

PackageRevision1.3and2.0byhardware.

TheMasterModeofLINmoduleiscompatiblewithLIN2.1standard.

1365

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SYNCHBREAKFIELD

SYNCH FIELD

IDFIELD

SyncBreakSyncFieldIDField

1, 2, 3, ...8 DataFields

Checksum

MasterHeader

Slave Response

MessageFrame

In-framespace

MasterorSlave



LINCommunicationFormatswww.ti.com

26.7.2MessageFrame

TheLINprotocoldefinesamessageframeformat,illustratedinFigure26-12.Eachframeincludesone

masterheader,oneresponse,onein-frameresponsespace,andinter-bytespaces.In-frame-response

andinter-bytespacesmaybe0.

ThereisnoarbitrationinthedefinitionoftheLINprotocol;therefore,multipleslavenodesrespondingtoa

headermightbedetectedasanerror.

TheLINbusisasinglechannelwired-AND.Thebushasabinarylevel:eitherdominantforavalueof0,

orrecessiveforavalueof1.

Figure26-12.LINProtocolMessageFrameFormat:MasterHeaderandSlaveResponse

26.7.2.1MessageHeader

Theheaderofamessageisinitiatedbyamaster(seeFigure26-13)andconsistsofathreefield-

sequence:

•Thesynchbreakfieldsignalingthebeginningofamessage

•ThesynchfieldconveyingbitrateinformationoftheLINbus

•TheIDfielddenotingthecontentofamessage

Figure26-13.Header3Fields:SynchBreak,Synch,andID

1366

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1to8DataFields

Response

ChecksumField

interbytespaces



www.ti.comLINCommunicationFormats

26.7.2.2Response

TheformatoftheresponseisasillustratedinFigure26-14.Therearetwotypesoffieldsinaresponse:

dataandchecksum.Thedatafieldconsistsofexactlyonedatabyte,onestartbit,andonestopbit,fora

totalof10bits.TheLSBistransmittedfirst.Thechecksumfieldconsistsofonechecksumbyte,onestart

bitandonestopbit.Thechecksumbyteistheinvertedmodulo-256sumoveralldatabytesinthedata

fieldsoftheresponse.

Figure26-14.ResponseFormatofLINMessageFrame

TheformatoftheresponseisastreamofNdatafieldsandonechecksumfield.TypicallyNisfrom1to8,

withtheexceptionoftheextendedcommandframes(Section26.7.6).ThelengthNoftheresponseis

indicatedeitherwiththeoptionallengthcontrolbitsoftheIDField(thisisusedinstandardsearlierthan

LIN1.x);seeTable26-5,orbyLENGTHvalueinSCIFORMAT[18:16]register;seeTable26-6.The

SCI/LINmodulesupportsresponselengthsfrom1to8bytesincompliancewithLIN2.0.

Table26-5.ResponseLengthInfoUsingIDBYTEFieldBits[5:4]forLINStandardsEarlierthan1.3

ID5

ID4

NumberofDatabytes

0

0

2

0

1

2

1

0

4

1

1

8

Table26-6.ResponseLengthwithSCIFORMAT[18:16]Programming

SCIFORMAT[18:16]

No.ofBytes

000

1

001

2

010

3

011

4

100

5

101

6

110

7

111

8

1367

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




FLINCLKFVCLK16(P+1 +M )16-------------------------------------------ForallPotherthanzero=FLINCLKFVCLK32--------------------ForP=0=

VCLKbitTMPT÷øöçèæ++=16116



LINCommunicationFormatswww.ti.com

26.7.3Synchronizer

Thesynchronizerhasthreemajorfunctionsinthemessagingbetweenmasterandslavenodes.It

generatesthemasterheaderdatastream,itsynchronizestotheLINbusforresponding,anditlocally

detectstimeouts.AbitrateisprogrammedusingtheprescalersintheBRSRregistertomatchthe

indicatedLIN_speedvalueintheLINdescriptionfile.

TheLINsynchronizerwillperformthefollowingfunctions:masterheadersignalgeneration,slave

detectionandsynchronizationtomessageheaderwithoptionalbaudrateadjustment,response

transmissiontimingandtimeoutcontrol.

TheLINsynchronizeriscapableofdetectinganincomingbreakandinitializingcommunicationatall

times.

26.7.4BaudRate

ThetransmissionbaudrateofanynodeisconfiguredbytheCPUatthebeginning;thisdefinesthebit

timeTbit.ThebittimeisderivedfromthefieldsPandMinthebaudrateselectionregister(BRSR).There

isanadditional3-bitfractionaldividervalue,fieldUintheBRSR,whichfurtherfine-tunesthedatafield

baudrate.

TherangesfortheprescalervaluesintheBRSRregisterare:

P=0,1,2,3,...,224-1

M=0,1,2,...,15

U=0,1,2,3,4,5,6,7

TheP,M,andUvaluesintheBRSRregisterareuserprogrammable.ThePandMdividerscouldbe

usedforbothSCImodeandLINmodetoselectabaudrate.TheUvalueisanadditional3-bitvalue

determiningthat“aTVCLK“(witha=0,1)isaddedtoeachTbitasexplainedinSection26.7.4.2.Ifthe

ADAPTbitissetandtheLINslaveisinadaptivebaudratemode,thenallthesedividervaluesare

automaticallyobtainedduringheaderreceptionwhenthesynchronizationfieldismeasured.

TheLINprotocoldefinesbaudrateboundariesasfollows:

1kHz≤FLINCLK≤20kHz

AlltransmittedbitsareshiftedinandoutatTbitperiods.

26.7.4.1FractionalDivider

TheMfieldoftheBRSRregistermodifiestheintegerprescalerPforfinertuningofthebaudrate.TheM

valueaddsinincrementsof1/16ofthePvalue.

Thebittime,TbitisexpressedintermsoftheVCLKperiodTVCLKasfollows:

ForallPotherthan0,andallM,

(44)

ForP=0:Tbit=32TVCLK

Therefore,theLINCLKfrequencyisgivenby:

(45)

1368

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




VCLKaTdMPbitTúûùêëé+÷øöçèæ++=16116

VCLKiTdMPbitTúûùêëé+÷øöçèæ++=16116



www.ti.comLINCommunicationFormats

26.7.4.2SuperfractionalDivider

Thesuperfractionaldividerschemeappliestothefollowingmodes:

•LINmastermode(synchfield+identifierfield+responsefield+checksumfield)

•LINslavemode(responsefield+checksumfield)

26.7.4.3SuperfractionalDividerInLINMode

Buildingonthe4-bitfractionaldividerM(BRSR[27:24],thesuperfractionaldividerusesanadditional3-bit

modulatingvalue,illustratedinTable26-7.Thesyncfield(0x55),theidentifierfieldandtheresponsefield

canallbeseenas8-bitdatabytesflankedbyastartbitandastopbit.Thebitswitha1inthetablewill

haveanadditionalVCLKperiodaddedtotheirTbit.

Table26-7.SuperfractionalBitModulationforLINMasterModeandSlaveMode(1)

BRS[30:28]

StartBit

D[0]

D[1]

D[2]

D[3]

D[4]

D[5]

D[6]

D[7]

StopBit

0

0

0

0

0

0

0

0

0

0

0

1

1

0

0

0

0

0

0

0

1

0

2

1

0

0

0

1

0

0

0

1

0

3

1

0

1

0

1

0

0

0

1

0

4

1

0

1

0

1

0

1

0

1

0

5

1

1

1

0

1

0

1

0

1

1

6

1

1

1

0

1

1

1

0

1

1

7

1

1

1

1

1

1

1

0

1

1

(1)

1.InLINmastermodebitmodulationappliestosynchfield+identifierfield+responsefield

2.InLINslavemodebitmodulationappliestoidentifierfield+responsefield

ThebaudratewillvaryoveraLINdatafieldtoaverageaccordingtotheBRSR[30:28]valuebyad

fractionoftheperipheralinternalclock:0<d<1.

TheinstantaneousbittimeisexpressedintermsofTVCLKasfollows:

ForallPotherthan0,andallMandd(0or1),

(46)

ForP=0Tbit=32TVCLK

TheaveragedbittimeisexpressedintermsofTVCLKasfollows:

ForallPotherthan0,andallMandd(0<d<1),

(47)

ForP=0Tbit=32TVCLK

Withthesuperfractionaldivider,aLINbaudrateof20kbpsisachievablewithaninternalclockVCLKof

726kHz.Furthermore,arateof400kbpsisachievablewithanVCLKof14.6MHz.

1369

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ID0

ID1

ID2

ID3

ID4

ID5

P0

P1

StartBitStopBit

OptionalLengthControlBits

IDField

OptionalParityBits

SDEL1..4Tbit

SYNCHBREAK13+(0...7)Tbit

SYNCHFIELD10Tbit

IDFIELD10Tbit

STARTBITSTOPBIT0101

0101



LINCommunicationFormatswww.ti.com

26.7.5HeaderGeneration

AutomaticgenerationoftheLINprotocolheaderdatastreamissupportedwithoutCPUinteraction.The

CPUprtheDMAwilltriggeramessageheadergenerationandtheLINstatemachinewillhandlethe

generationitself.AmasternodeinitiatesheadergenerationonCPUorDMAwritestotheIDBYTEinthe

LINIDregister.TheheaderisalwayssentbythemastertoinitiateaLINcommunicationandconsistsof

threefields:breakfield,synchronizationfield,andidentificationfield,asseeninFigure26-15.

Figure26-15.MessageHeaderinTermsofTbit

•Thebreakfieldconsistsoftwocomponents:

–Thesynchronizationbreak(SYNCHBREAK)consistsofaminimumof13(dominant)lowbitstoa

maximumof20dominantbits.Thesynchbreaklengthmaybeextendedfromtheminimumwiththe

3-bitSBREAKvalueintheLINCOMPregister.

–Thesynchronizationbreakdelimiter(SDEL)consistsofaminimumof1(recessive)highbittoa

maximumof4recessivebits.Thedelimitermarkstheendofthesynchronizationbreakfield.The

synchbreakdelimiterlengthdependsonthe2-bitSDELvalueintheLINCOMPregister.

•Thesynchronizationfield(SYNCHFIELD)consistsofonestartbit,byte0x55,andastopbit.Itisused

toconveyTbitinformationandresynchronizeLINbusnodes.

•Theidentifierfield’sIDbytemayusesixbitsasanidentifier,withoptionallengthcontrol(see

Note:OptionalControlLengthBits),andtwooptionalbitsasparityoftheidentifier.Theidentifierparity

isusedandcheckedifthePARITYENAbitisset.Iflengthcontrolbitsarenotused,thentherecanbe

atotalof64identifiersplusparity.Ifneitherlengthcontrolorparityareusedtherecanbeupto256

identifiers.SeeFigure26-16foranillustrationoftheIDfield.

Figure26-16.IDField

NOTE:OptionalControlLengthBits

ThecontrollengthbitsonlyapplytoLINstandardspriortoLIN1.3.IDBYTEfieldconveys

responselengthinformationifcomplianttostandardsearlierthanLIN1.3.TheSCIFORMAT

registerstoresthelengthoftheresponseforlaterversionsoftheLINprotocol.

1370

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comLINCommunicationFormats

NOTE:IftheBLINmodule,configuredasSlaveinmultibuffermode,isintheprocessoftransmitting

datawhileanewheadercomesin,themodulemightendupinrespondingwiththedata

fromthepreviousinterruptedresponse(notthedatacorrespondingtothenewID).Toavoid

thisscenariothefollowingprocedurecouldbeused:

1.CheckfortheBitError(BE)duringtheresponsetransmission.IftheBEflagisset,this

indicatesthatacollisionhashappenedontheLINbus(herebecauseofthenewSynch

Break).

2.IntheBitErrorISR,configuretheTD0andTD1registerswiththenextsetofdatatobe

transmittedonaTXMatchfortheincomingID.BeforewritingtoTD0/TD1makesure

thattherewasnotalreadyanupdatebecauseofaBitError;otherwiseTD0/TD1might

bewrittentwiceforoneID.

3.OncethecompleteIDisreceived,basedonthematch,thenewlyconfigureddatawillbe

transmittedbythenode.

26.7.5.1EventTriggeredFrameHandlingProposal

TheLIN2.0protocolusesevent-triggeredframesthatmayoccasionallycausecollisions.Event-triggered

frameshavetobehandledinsoftware.

Ifnoslaveanswerstoaneventtriggeredframeheader,themasternodewillsettheNREflag,andaNRE

interruptwilloccurifenabled.Ifacollisionoccurs,aframeerrorandchecksumerrormayarisebeforethe

NREerror.Thoseerrorsareflaggedandtheappropriateinterruptswilloccur,ifenabled.

Frameerrorsandchecksumerrorsdependonthebehaviorandsynchronizationoftherespondingslaves.

Iftheslavesaretotallysynchronizedandstoptransmissiononcethecollisionoccurred,itispossiblethat

onlytheNREerrorisflaggeddespitetheoccurrenceofacollision.Todetectiftherehasbeenareception

ofonebytebeforetheNREerrorisflagged,theBUSBUSYflagcanbeusedasanindicator.

Thebusbusyflagissetonthereceptionofthefirstbitoftheheaderandremainssetuntiltheheader

receptioniscomplete,andagainissetonthereceptionofthefirstbitoftheresponse.Inthecaseofa

collisiontheflagisclearedinthesamecycleastheNREflagisset.

Softwarecouldimplementthefollowingsequence:

•Oncethereceptionoftheheaderisdone(pollforRXIDflag),waitforthebusbusyflagtogetsetor

NREflagtogetset.

•IfbusbusyflagisnotsetbeforeNREflag,thenitisatruenoresponsecase(nodatahasbeen

transmittedontothebus).

•Ifbusbusyflaggetsset,thenwaitforNREflagtogetsetorforsuccessfulreception.IfNREflagisset,

theninthiscaseacollisionhasoccurredonthebus.

Eveninthecaseofacollision,thereceived(corrupted)dataisaccessibleintheRXbuffers;registers

LINRD0andLINRD1.

1371

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BRK_count

SDEL

BAUD_count

SYNCHBREAK

SYNCH FIELD10Tbit

IDFIELD10Tbit

STARTBITSTOPBIT0101

0101

1

2

3

4



LINCommunicationFormatswww.ti.com

26.7.5.2HeaderReceptionandAdaptiveBaudRate

AslavenodebaudratecanoptionallybeadjustedtothedetectedbitrateasanoptiontotheLINmodule.

TheadaptivebaudrateoptionisenabledbysettingtheADAPTbit.Duringheaderreception,aslave

measuresthebaudrateduringdetectionofthesynchfield.IfADAPTbitisset,thenthemeasuredbaud

rateiscomparedtotheslavenode’sprogrammedbaudrateandadjustedtotheLINbusbaudrateif

necessary.

TheLINsynchronizerdeterminestwomeasurements:BRK_countandBAUD_count(Figure26-17).These

valuesarealwayscalculatedduringtheHeaderreceptionforsynchfieldvalidation(Figure26-18).

Figure26-17.MeasurementsforSynchronization

BymeasuringthevaluesBRK_countandBAUD_count,avalidsynchbreaksequencecanbedetectedas

describedinFigure26-18.ThefournumberedeventsinFigure26-17signalthestart/stopofthe

synchronizercounter.ThesynchronizercounterusesVCLKasthetimebase.

ThesynchronizercounterisusedtomeasurethesynchbreakrelativetothedetectingnodeTbit.Fora

slavenodereceivingthesynchbreak,athresholdof11TbitisusedasrequiredbytheLINprotocol.For

detectionofthedominantdatastreamofthesynchbreak,thesynchronizercounterisstartedonafalling

edgeandstoppedonarisingedgeoftheLINRX.Ondetectionofthesynchbreakdelimiter,the

synchronizercountervalueissavedandthenreset.

Ondetectionoffiveconsecutivefallingedges,theBAUD_countismeasured.Bittimingcalculationand

consistencytorequiredaccuracyisimplementedfollowingtherecommendationsofLINrevision2.0.A

slavenodecancalculateasingleTbittimebydivisionofBAUD_countby8.Inaddition,forconsistency

betweenthedetectededgesthefollowingisevaluated:

BAUD_count+BAUD_count»2+BAUD_count»3≤BRK_count

TheBAUD_countvalueisshifted3timestotherightandroundedusingthefirstinsignificantbittoobtain

aTbitunit.IftheADAPTbitisset,thenthedetectedbaudrateiscomparedtotheprogrammedbaudrate.

DuringtheheaderreceptionprocessingasillustratedinFigure26-18,ifthemeasuredBRK_countvalueis

lessthan11Tbit,thesynchbreakisnotvalidaccordingtotheprotocolforafixedrate.IftheADAPTbitis

set,thentheMBRSisusedformeasuringBRK_countandBAUD_countvaluesandautomaticallyadjusts

toanyallowedLINbusrate(refertoLINSpecificationPackage2.0).

NOTE:InadaptivemodetheMBRSdividershouldbesettoallowamaximumbaudratethatisnot

morethan10%abovetheexpectedoperatingbaudrateintheLINnetwork.Otherwisea

0x00databytecouldmistakenlybedetectedasasynchbreak.

Thebreak-thresholdrelativetotheslavenodeis11Tbit.Thebreakis13Tbitasspecifiedin

LINversion1.3.

1372

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Waitforfallingedge

Incrementcounter

whileLINRX=0

LINRX=1

No

Yes

IncrementcounterLINRX=0

Savecounter(SBRK_count)andresetit

OnLINRX11?bitcounter≥T

incrementcounter

On1stLINRXfallingedge

ReceiveIDFieldWaitforResponse

On5thLINRXfallingedgeOnLINRX

oResetcounter

2

3

1

4

Savecounter(BAUD_count)VerifyvalidSynchFieldIfADAPT=1,comparebaudrateandBaudUpdateflagissetifbaudratesdiffer



www.ti.comLINCommunicationFormats

Figure26-18.SynchronizationValidationProcessandBaudRateAdjustment

1373

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SyncBreakSyncFieldIDField

Checksum

MasterHeader

NDataFieldsResponse

ExtendedFrameWithEmbeddedChecksumBytes

In-framespace

Checksum

Checksum



LINCommunicationFormatswww.ti.com

Ifthesynchfieldisnotdetectedwithinthegiventolerances,theinconsistent-synch-field-error(ISFE)flag

willbeset.AnISFEinterruptwillbegenerated,ifenabledbyitsrespectivebitintheSCISETINTregister.

TheIDbyteshouldbereceivedafterthesynchfieldvalidationwassuccessful.Anytimeavalidbreak

(largerthan11Tbit)isdetected,thereceiver’sstatemachineshouldresettoreceptionofthisnewframe.

Thisresetconditionisonlyvalidduringresponsestate,notifanadditionalsynchbreakoccursduring

headerreception.

NOTE:Whenaninconsistentsynchfield(ISFE)erroroccurs,suggestedactionfortheapplicationis

toResettheSWnRSTbitandSettheSWnRSTbittomakesurethattheinternalstate

machinesarebacktotheirnormalstates

26.7.6ExtendedFramesHandling

TheLINprotocol2.0andpriorincludestwoextendedframeswithidentifiers62(userdefined)and63

(reservedextended).Theresponsedatalengthoftheuser-definedframe(ID62,or0x3E)isunlimited.

ThelengthforthisidentifierwillbesetatnetworkconfigurationtimetobesharedwiththeLINbusnodes.

Extendedframecommunicationistriggeredonreceptionofaheaderwithidentifier0x3E;seeFigure26-

19.Oncetheextendedframecommunicationistriggered,unlikenormalframes,thiscommunication

needstobestoppedbeforeissuinganotherheader.Tostoptheextendedframecommunicationthe

STOPEXTFRAMEbitmustbeset.

Figure26-19.OptionalEmbeddedChecksuminResponseforExtendedFrames

AnIDinterruptwillbegenerated(ifenabledandthereisamatch)onreceptionofID62(0x3E).This

interruptallowstheCPUusingasoftwarecountertokeeptrackofthebytesthatarebeingsentoutand

decideswhentocalculateandinsertachecksumbyte(recommendedatperiodicrates).Tohandlethis

procedure,SCbitisused.AwritetothesendchecksumbitSCwillinitiateanautomaticsendofthe

checksumbyte.ThelastdatafieldshouldalwaysbeachecksumincompliancewiththeLINprotocol.

Theperiodicityofthechecksuminsertion,definedatnetworkconfigurationtime,isusedbythereceiving

nodetoevaluatethechecksumoftheongoingmessage,andhasthebenefitofenhancedreliability.

Forthesendingnode,thechecksumisautomaticallyembeddedeachtimethesendchecksumbitSCis

set.Forthereceivingnode,thechecksumiscomparedeachtimethecomparechecksumbitCCisset;

seeFigure26-20.

NOTE:TheLIN2.0enhancedchecksumdoesnotapplytothereservedidentifiers.Thereserved

identifiersalwaysusetheclassicchecksum.

1374

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SCIRXSHF

70

SCITXSHF70

RXTX

CHECKSUMCALCULATOR

CompareChecksumSendChecksum



www.ti.comLINCommunicationFormats

Figure26-20.ChecksumCompareandSendforExtendedFrames

26.7.7TimeoutControl

AnyLINnodelisteningtothebusandexpectingaresponseinitiatedfromamasternodecouldflagano-

responseerrortimeoutevent.TheLINprotocoldefinesfourtypesoftimeoutevents,whichareallhandled

bythehardwareoftheLINmodule.ThefourLINprotocoleventsare:

•No-responsetimeouterror

•Busidledetection

•Timeoutafterwakeupsignal

•Timeoutafterthreewakeupsignals

26.7.7.1No-ResponseError(NRE)

Theno-responseerrorwilloccurwhenanynodeexpectingaresponsewaitsforTFRAME_MAXtimeandthe

messageframeisnotfullycompletedwithinthemaximumlengthallowed,TFRAME_MAX.Afterthistimeano-

responseerror(NRE)isflaggedintheNREbitoftheSCIFLRregister.Aninterruptistriggeredifenabled.

AsspecifiedintheLIN1.3standard,theminimumtimetotransmitaframeis:

TFRAME_MIN=THEADER_MIN+TDATA_FIELD+TCHECKSUM_FIELD

=44+10N

whereN=numberofdatafields.

Andthemaximumtimeframeisgivenby:

TFRAME_MAX=TFRAME_MIN*1.4

=(44+10N)*1.4

ThetimeoutvalueTFRAME_MAXisderivedfromtheNnumberofdatafieldsvalue.TheNvalueiseither

embeddedintheheader’sIDfieldformessagesorispartofthedescriptionfile.Inthelattercase,the3-

bitCHARvalueinSCIFORMATregister,willindicatethevalueforN.

NOTE:ThelengthcodingoftheIDfielddoesnotapplytotwoextendedframeidentifiers,IDfieldsof

0x3E(62)and0x3F(63).Inthesecases,theIDfieldcanbefollowedbyanarbitrarynumber

ofdatabytefields.Also,theLIN2.0protocolspecificationmentionsthatIDfield0x3F(63)

cannotbeused.Forthesetwocases,theNREwillnotbehandledbytheLINcontroller

hardware.

1375

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






LINCommunicationFormatswww.ti.com

Table26-8.TimeoutValuesinTbitUnits

N

TDATA_FIELD

TFRAME_MIN

TFRAME_MAX

1

10

54

76

2

20

64

90

3

30

74

104

4

40

84

118

5

50

94

132

6

60

104

146

7

70

114

160

8

80

124

174

26.7.7.2BusIdleDetection

ThesecondtypeoftimeoutcanoccurwhenanodedetectsaninactiveLINbus:notransitionsbetween

recessiveanddominantvaluesaredetectedonthebus.Thishappensafteraminimumof4s(thisis

80,000FLINCLKcycleswiththefastestbusrateof20kbps).Ifanodedetectsnoactivityinthebusasthe

TIMEOUTbitisset,thenitcanbeassumedthattheLINbusisinsleepmode.Applicationsoftwarecan

usetheTimeoutflagtodeterminewhentheLINbusisinactiveandputtheLINintosleepmodebywriting

thePOWERDOWNbit.

NOTE:Afterthetimeoutwasflagged,aSWnRESETshouldbeassertedbeforeenteringLowPower

Mode.Thisisrequiredtoresetthereceiverincasethatanincompleteframewasonthebus

beforetheidleperiod.

26.7.7.3TimeoutafterWakeupSignalandTimeoutafterThreeWakeupSignals

Thethirdandfourthtypesoftimeoutarerelatedtothewakeupsignal.Anodeinitiatingawakeupshould

expectaheaderfromthemasterwithinadefinedamountoftime:timeoutafterwakeupsignal.See

Section26.11.3formoredetails.

26.7.8TXRXErrorDetector(TED)

ThefollowingsourcesoferroraredetectedbytheTXRXerrordetectorlogic(TED).TheTEDlogic

consistsofabitmonitor,anIDparitychecker,andachecksumerror.Thefollowingerrorsaredetected:

•Biterrors(BE)

•Physicalbuserrors(PBE)

•Identifierparityerrors(PE)

•Checksumerrors(CE)

Alloftheseerrors(BE,PBE,PE,CE)areflagged.Aninterruptfortheflaggederrorswillbegeneratedif

enabled.Amessageisvalidforboththetransmitterandthereceiverifthereisnoerrordetecteduntilthe

endoftheframe.

1376

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




)(54311)(42100ParityoddIDIDIDIDPParityevenIDIDIDIDPÅÅÅ=ÅÅÅ=

BITMONITOR

SCITXSHF

07TX

GND

VBAT

SCIRXSHF

=

RX07

LINBUS

Bit-ErrorFlagBit-ErrorInt.(ifenabled)Bus-ErrorFlagBus-ErrorInt.(ifenabled)

IDPARITYCHECKER

CHECKSUMCALCULATOR

Checksum-ErrorFlagChecksum-ErrorInt.(ifenabled)

ID-Parity-ErrorID-ParityErrorFlagID-PairtyInterrupt(ifenabled)



www.ti.comLINCommunicationFormats

26.7.8.1BitErrors

Abiterror(BE)isdetectedatthebittimewhenthebitvaluethatismonitoredisdifferentfromthebitvalue

thatissent.AbiterrorisindicatedbytheBEflaginSCIFLR.AftersignalingaBE,thetransmissionis

abortednolaterthanthenextbyte.ThebitmonitorensuresthatthetransmittedbitinLINTXisthecorrect

valueontheLINbusbyreadingbackontheLINRXpinasshowninFigure26-21.

NOTE:IfBEOccursduetoNewHeaderreceptionduringaSlaveResponse,NRE/TIMEOUTflag

willnotbesetforthenewFrame.

Figure26-21.TXRXErrorDetector

26.7.8.2PhysicalBusErrors

APhysicalBusError(PBE)hastobedetectedbyamasterifnovalidmessagecanbegeneratedonthe

bus(BusshortedtoGNDorVBAT).ThebitmonitordetectsaPBEduringtheheadertransmission,ifno

SynchBreakcanbegenerated(forexample,becauseofabusshortagetoVBAT)orifnoSynchbreak

Delimitercanbegenerated(forexample,becauseofabusshortagetoGND).OncetheSynchBreak

Delimiterwasvalidated,allotherdeviationsbetweenthemonitoredandthesentbitvalueareflaggedas

BitErrors(BE)forthisframe.

26.7.8.3IDParityErrors

Ifparityisenabled,anIDparityerror(PE)isdetectedifanyofthetwoparitybitsofthesentIDbyteare

notequaltothecalculatedparityonthereceivernode.Thetwoparitybitsaregeneratedusingthe

followingmixedparityalgorithm.

(48)

IfanID-parityerrorisdetected,theID-parityerrorisflagged,andthereceivedIDisnotvalid.See

Section26.7.9fordetails.

1377

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1to8DataFields

ChecksumField

Response

+

INVERT

Modulo-256sumCheckbyte

IDField

FromHeader

1to8DataFields

ChecksumField

Response

+

INVERT

Modulo-256sumCheckbyte



LINCommunicationFormatswww.ti.com

26.7.8.4ChecksumErrors

Achecksumerror(CE)isdetectedandflaggedatthereceivingendifthecalculatedmodulo-256sumover

allreceiveddatabytes(includingtheIDbyteifitistheenhancedchecksumtype)plusthechecksumbyte

doesnotresultin0xFF.Themodulo-256sumiscalculatedovereachbytebyaddingwithcarry,wherethe

carrybitofeachadditionisaddedtotheLSBofitsresultingsum.

Forthetransmittingnode,thechecksumbytesentattheendofamessageistheinvertedsumofallthe

databytes(seeFigure26-22)forclassicchecksumimplementation.Thechecksumbyteistheinverted

sumoftheidentifierbyteandallthedatabytes(seeFigure26-23)fortheLIN2.0compliantenhanced

checksumimplementation.Theclassicchecksumimplementationshouldalwaysbeusedforreserved

identifiers60to63;therefore,theCTYPEbitwillbeoverriddeninthiscase.Forsignal-carrying-frame

identifiers(0to59)thetypeofchecksumuseddependsontheCTYPEbit.

Figure26-22.ClassicChecksumGenerationatTransmittingNode

Figure26-23.LIN2.0-CompliantChecksumGenerationatTransmittingNode

1378

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




070200)250260(xxxx=Å+



www.ti.comLINCommunicationFormats

26.7.9MessageFilteringandValidation

Messagefilteringusestheentireidentifiertodeterminewhichnodeswillparticipateinaresponse,either

receivingortransmittingaresponse.Therefore,twoacceptancemasksareused,asshowninFigure26-

24.Duringheaderreception,allnodesfiltertheID-Field(ID-Fieldisthepartoftheheaderexplainedin

Figure26-16)todeterminewhethertheytransmitaresponseorreceivearesponseforthecurrent

message.TherearetwomasksformessageIDfiltering:onetoacceptaresponsereception,theotherto

initiatearesponsetransmission.SeeFigure26-24.AllnodescomparethereceivedIDtotheidentifier

storedintheID-SlaveTaskBYTEoftheLINIDregisterandusetheRXIDMASKandtheTXIDMASK

fieldsintheLINMASKregistertofilterthebitsoftheidentifierthatshouldnotbecompared.

IfthereisanRXmatchwithnoparityerrorandtheRXENAbitisset,therewillbeanIDRXflagandan

interruptwillbetriggeredifenabled.IfthereisaTXmatchwithnoparityerrorandtheTXENAbitisset,

therewillbeanIDTXflagandaninterruptwillbetriggeredifenabledintheSCISETINTregister.

Themaskedbitsbecomedon’tcaresforthecomparison.Tobuildamaskforasetofidentifiers,anXOR

functioncouldbeused.

Forexample,tobuildamasktoacceptIDs0x26and0x25usingLINID[7:0]=0x20;thatis,compare5

mostsignificantbits(MSBs)andfilter3leastsignificantbits(LSBs),theacceptancemaskcouldbe:

(49)

AmaskofallzeroswillcompareallbitsofthereceivedidentifierintheshiftregisterwiththeID-BYTEin

LINID[7:0].IfHGENCTRLissetto1,amaskof0xFFwillalwayscauseamatch.Amaskofall1swill

filterallbitsofthereceivedidentifier,andthustherewillbeanIDmatchregardlessofthecontentofthe

ID-SlaveTaskBYTEfieldintheLINIDregister.

NOTE:WhentheHGENCTRLbit=0,theLINnodescomparethereceivedIDtotheID-BYTEfield

intheLINIDregister,andusetheRXIDMASKandtheTXIDMASKintheLINMASK

registertofilterthebitsoftheidentifierthatshouldnotbecompared.

IfthereisanRXmatchwithnoparityerrorandtheRXENAbitisset,therewillbeanIDRX

flagandaninterruptwillbetriggeredifenabled.Amaskofall0swillcompareallbitsofthe

receivedidentifierintheshiftregisterwiththeID-BYTEfieldinLINID[7:0].Amaskofall1s

willfilterallbitsofthereceivedidentifierandtherewillbenomatch.

Duringheaderreception,thereceivedidentifieriscopiedtotheReceivedIDfieldLINID[23:16].Ifthereis

noparityerrorandthereiseitheraTXmatchoranRXmatch,thenthecorrespondingTXorRXIDflagis

set.IftheIDinterruptisenabled,thenanIDinterruptisgenerated.

AftertheIDinterruptisgenerated,theCPUmayreadtheReceivedIDfieldLINID[23:16]anddetermine

whatresponsetoloadintothetransmitbuffers.

NOTE:Whenbyte0iswrittentoTD0(LINTD0[31:24]),theresponsetransmissionisautomatically

generated.

Inmultibuffermode,theTXRDYflagwillbesetwhenalltheresponsedatabytesandchecksumbyteare

copiedtotheshiftregisterSCITXSHF.Innonmultibuffermode,theTXRDYflagisseteachtimeabyteis

copiedtotheSCITXSHFregister,andalsoforthelastbyteoftheframeafterthechecksumbyteiscopied

totheSCITXSHFregister.

Inmultibuffermode,theTXEMPTYflagissetwhenboththetransmitbuffer(s)TDyandtheSCITXSHF

shiftregisterareemptiedandthechecksumhasbeensent.Innonmultibuffermode,TXEMPTYisset

eachtimeTD0andSCITXSHFareemptied,exceptforthelastbyteoftheframewherethechecksum

bytemustalsobetransmitted.

Ifparityisenabled,allslavereceivingnodeswillvalidatetheidentifierusingalleightbitsofthereceived

IDbyte.TheSCI/LINwillflagacorruptedidentifierifanID-parityerrorisdetected.

1379

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




IDINT

23LINID16

7SCIRXSHF0

7RXIDMask0

7ID-Byte0

7ID-SlaveTask Byte0

7TXIDMask0

7ID-Byte0

7ID-SlaveTaskByte0

IDParityChecker

01

HGENCTRL

01

=

=

FromSCIRXSHF

AND

AND

RX

NoID-ParityErrorRXMatchTXMatchID-RXFlagID-TXFlag

ParityEnableIDParityError

NoID-ParityError

HGENCTRL

IDINT

01

01

=

=

From

AND

AND

RX

NoID-ParityErrorRXENARXMatchTXMatchID-RXFlagID-TXFlag

NoID-ParityError

HGENCTRL



LINCommunicationFormatswww.ti.com

Figure26-24.IDReception,FilteringandValidation

1380

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comLINCommunicationFormats

26.7.10ReceiveBuffers

ToreduceCPUloadwhenreceivingaLINN-byte(withN=1–8)responseininterruptmodeorDMA

mode,theSCI/LINmodulehaseightreceivebuffers.ThesebufferscanstoreanentireLINresponsein

theRDyreceivebuffers.

Thechecksumbytefollowingthedatabytesisvalidatedbytheinternalchecksumcalculator.The

checksumerror(CE)flagindicatesachecksumerrorandaCEinterruptwillbegeneratedifenabledinthe

SCISETINTregister.

Themultibuffer3-bitcountercountsthedatabytestransferredfromtheSCIRXSHFregistertotheRDy

receivebuffersifmultibuffermodeisenabled,ortoRD0ifmultibuffermodeisdisabled.The3-bitcompare

registercontainsthenumberofdatabytesexpectedtobereceived.IncaseswheretheIDBYTEfield

doesnotconveymessagelength(seeNote:OptionalControlLengthBitsinSection26.7.5),theLENGTH

value,indicatestheexpectedlengthandisusedtoloadthe3-bitcompareregister.Whetherthelength

controlfieldortheLENGTHvalueisusedisselectablewiththeCOMMMODEbit.

Figure26-8illustratesthereceivebuffers.

Areceiveinterrupt,andareceivereadyRXRDYflagsetaswellasaDMArequest(RXDMA)couldoccur

afterreceivingaresponseiftherearenoresponsereceiveerrorsfortheframe(suchas,thereisno

checksumerror,frameerror,andoverrunerror).Thechecksumbytewillbecomparedbefore

acknowledgingareception.ADMArequestcanbegeneratedforeachreceivedbyteorfortheentire

responsedependingonwhetherthemultibuffermodeisenabledornot(MBUFMODEbit).

NOTE:Inmultibuffermodefollowingarethescenariosassociatedwithclearingthe"RXRDY"flag

bit:

1.TheRXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0/1register.

2.ForLENGTHlessthanorequalto4,ReadtoRD0registerwillclearthe“RXRDY”flag.

3.ForLENGTHgreaterthan4,ReadtoRD1registerwillclearthe“RXRDY”flag.

26.7.11TransmitBuffers

ToreducetheCPUloadwhentransmittingaLINN-byte(withN=1–8)responseininterruptmodeor

DMAmode,theSCI/LINmodulehaseighttransmitbuffers,TD0–TD7inLINTD0andLINTD1.Withthese

transmitbuffers,anentireLINresponsefieldcanbepreloadedintheTXytransmitbuffers.Optionally,a

DMAtransfercouldbedoneonabyte-per-bytebasiswhenmultibuffermodeisnotenabled(MBUF

MODEbit).

Themultibuffer3-bitcountercountsthedatabytestransferredfromtheTDytransmitbuffersregisterif

multibuffermodeisenabled,orfromTD0toSCITXSHFifmultibuffermodeisdisabled.The3-bitcompare

registercontainsthenumberofdatabytesexpectedtobetransmitted.IftheIDfieldisnotusedtoconvey

messagelength(seeNote:OptionalControlLengthBitsinSection26.7.5),theLENGTHvalueindicates

theexpectedlengthandisusedinsteadtoloadthe3-bitcompareregister.Whetherthelengthcontrolfield

ortheLENGTHvalueisusedisselectablewiththeCOMMMODEbit.

Atransmitinterrupt(TXinterrupt),andatransmitreadyflag(TXRDYflag),andaDMArequest(TXDMA)

couldoccuraftertransmittingaresponse.ADMArequestcanbegeneratedforeachtransmittedbyteor

fortheentireresponsedependingonwhethermultibuffermodeisenabledornot(MBUFMODEbit).

Figure26-9illustratesthetransmitbuffers.

Thechecksumbytewillbeautomaticallygeneratedbythechecksumcalculatorandsentafterthedata-

fieldstransmissionisfinished.Themultibuffer3-bitcountercountsthedatabytestransferredfromtheTDy

buffersintotheSCITXSHFregister.

NOTE:Thetransmitinterruptrequestcanbeeliminateduntilthenextseriesofdataiswritteninto

thetransmitbuffersLINTD0andLINTD1,bydisablingthecorrespondinginterruptviathe

SCICLRINTregisterorbydisablingthetransmitterviatheTXENAbit.

1381

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SyncBreakSyncFieldIDField

1,2,3,...8DataFields

Checksum

MasterHeader

SlaveResponse

In-framespace

TFrameMax

TBusIdle(4s)

ParityErrorInt.IDInterrupt

NoResponseErrorInt.

Timeout-BusIdle(4s)Int.

ISFErrorInt.

PhysicalBusErrorInt.(Master)

FE

FE

ChecksumErrorInt.RXInt.(multi-buffer/lastbytesinglebuffer)

RXInt.(singlebuffer)

RXInt.(singlebuffer)OverrunErrorInt.

BitErrorInt.

FE

FE

TXInt.(singlebuffer)

TXInt.(singlebuffer)

TXInt.(singlebuffer)

TXInt.(multibuffer/lastbytesinglebuffer)

FrameErrorInt.(FE)



LINInterruptswww.ti.com

26.8LINInterrupts

LINandSCImodehaveacommonInterruptblockasexplainedinSection26.3.Thereare16interrupt

sourcesintheSCI/LINmodule,with8ofthembeingLINmodeonly,asseeninTable26-4.

ALINmessageframeindicatingthetimingandsequenceoftheLINinterruptsthatcouldoccurisshownin

Figure26-25.

Figure26-25.LINMessageFrameShowingLINInterruptTimingandSequence

26.9LINDMAInterface

LINDMAInterfaceusestheSCIDMAinterfacelogic.DMArequestsforreceive(RXDMArequest)and

transmit(TXDMArequest)areavailablefortheSCI/LINmodule.TherearetwomodesforDMAtransfers

dependingonwhethermultibuffermodeisenabledornotviathemultibufferenablecontrolbit(MBUF

MODE).

26.9.1LINReceiveDMARequests

InLINmode,whenthemultibufferoptionisenabled,ifareceivedresponse(uptoeightdatabytes)is

transferredtothereceivebuffers(RDy),thenaDMArequestisgenerated.Ifthemultibufferoptionis

disabled,thenDMArequestswillbegeneratedonabyte-per-bytebasisuntilalltheexpectedresponse

datafieldsarereceived.ThisDMAfunctionalityisenabled/disabledbytheuserusingSETRXDMA/CLR

RXDMAbits,respectively.

26.9.2LINTransmitDMARequests

InLINmodewiththemultibufferoptionenabled,afteratransmission(uptoeightdatabytesstoredinthe

transmitbuffer(s)TDyintheLINTD0andLINTD1registers),aDMArequestisgeneratedinorderto

reloadthetransmitbufferforthenexttransmission.Ifthemultibufferoptionisdisabled,thenDMA

requestswillbegeneratedonabyte-per-bytebasisuntilallbytesaretransferred.ThisDMAfunctionality

isenabled/disabledbytheuserusingSETTXDMA/CLRTXDMAbits,respectively.

1382

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comLINConfigurations

26.10LINConfigurations

Thefollowinglistdetailstheconfigurationstepsthatsoftwareshouldperformpriortothetransmissionor

receptionofdatainLINmode.AslongasSWnRSTisheldlowtheentiretimethattheLINisbeing

configured,theorderinwhichtheregistersareprogrammedisnotimportant.

•EnableLINbysettingRESETbit.

•ClearSWnRSTto0beforeconfiguringtheLIN.

•ConfiguretheLINRXandLINTXpinsasSCIfunctionalbysettingtheRXFUNCandTXFUNCbit.

•SelectLINmodebyprogrammingLINMODEbit.

•SelectMasterorSlavemodebyprogrammingtheCLOCKbit.

•Selectthedesiredframeformat(checksum,parity,lengthcontrol)byprogrammingSCIGCR1.

•Selectmulti-buffermodebyprogrammingMBUFMODEbit.

•SelectthebaudratetobeusedforcommunicationbyprogrammingBRSR.

•SettheMaximumbaudratetobeusedforcommunicationbyprogrammingBRSR.

•SettheCONTbittomakeLINnottohaltforanemulationbreakpointuntilitscurrentreceptionor

transmissioniscomplete(thisbitisusedonlyinanemulationenvironment).

•SetLOOPBACKbittoconnectthetransmittertothereceiverinternally(thisfeatureisusedtoperform

aself-test).

•SelectthereceiverenableRXENAbitifdataistobereceived.

•SelectthetransmitenableTXENAbitifdataistobetransmitted.

•SelecttheRXIDMASKandtheTXIDMASKfieldsintheLINMASKregister.

•SetSWnRSTto1aftertheSCIisconfigured.

•PerformReceiveorTransmitdata(seeSection26.7.9,Section26.7.10,orSection26.10.2).

26.10.1ReceivingData

TheLINreceiverisenabledtoreceivemessagesiftheRXFUNCbitandtheRXENAbitaresetto1.Ifthe

RXFUNCbitisnotset,theLINRXpinfunctionsasageneralpurposeI/OpinratherthanasanSCI/LIN

functionpin.

IDRXflagissetafteravalidLINIDisreceivedwithRXMatch,generatedIDinterruptifenabled.

26.10.1.1ReceivingDatainSingle-BufferMode

SingleBufferModeisselectedwhenMBUFMODEbitis0.InthismodeSCI/LINsetstheRXRDYbit

whenittransfersnewlyreceiveddatafromSCIRXSHFtoRD0.TheSCIclearstheRXRDYbitafterthe

newdatainRD0hasbeenread.Also,asdataistransferredfromSCIRXSHFtoRD0,theLINsetsFE,

OE,orPEifanyoftheseerrorconditionsweredetectedinthereceiveddata.Theseerrorconditionsare

supportedwithconfigurableInterruptcapability.

UsercanreadtheReceiveddataby:

1.PollingReceiveReadyFlag

2.ReceiveInterrupt

3.DMA

Inpollingmethod,softwarecanpollforRXRDYbitandreadthedatafromRD0byteofLINRD0register

onceRXRDYissethigh.CPUisunnecessarilyoverloadedbyselectingPollingmode.Toavoidthisuser

canuseeitherInterruptorDMAmethod.TouseinterruptmethodSETRXINTbitshouldbesetandto

useDMASETRXDMAbitshouldbeset.EitheranInterruptoraDMArequestisgeneratedthemoment

RXRDYisset.IfchecksumschemeisusedonceCompareChecksumCCbitisset,thechecksumwillbe

comparedonthebytethatiscurrentlybeingreceived,expectedtobethecheckbytebeenabledduringthe

lastbyteofthedata.CCbitwillbeclearedonceChecksumisreceived.ACEwillimmediatelybeflagged

ifthereisachecksumerror.

1383

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






LINConfigurationswww.ti.com

26.10.1.2ReceivingDatainMulti-BufferMode

Multi-BufferModeisselectedwhenMBUFMODEbitis1.InthismodeSCI/LINsetstheRXRDYbitafter

receivingtheprogrammednumberofdatainthereceivebufferandthechecksumfield,thecomplete

frame.TheerrorconditiondetectionlogicissameasSingleBuffermode,exceptthatitmonitorsforthe

completeframe.LikeSingleBuffermodetheusercanuseeitherInterrupt,DMAorpollingmethodtoread

thedata.ThereceiveddatahastobereadfromtheLINRD0andLINRD1register,basedonthenumber

ofbytes.ForLENGTHlessthanorequalto4,ReadtoLINRD0registerwillclearthe“RXRDY”flag.For

LENGTHgreaterthan4,ReadtoLINRD1registerwillclearthe“RXRDY”flag.Ifchecksumschemeis

enabledbysettingCCbitduringthereceptionofthedata,thenthebytethatisreceivedafterthereception

oftheprogrammedno.ofdatabytesindicatedbyLENGTHistreatedasachecksumbyteandcompared.

26.10.2TransmittingData

TheSCItransmitterisenablediftheTXFUNCbitandtheTXENAbitaresetto1.IftheTXFUNCbitis

notset,theLINTXpinfunctionsasageneralpurposeI/OpinratherthanasanSCIfunctionpin.Any

valuewrittentotheTD0beforeTXENAissetto1isnottransmitted.Bothofthesecontrolbitsallowfor

theSCItransmittertobeheldinactiveindependentlyofthereceiver.

IDTXflagissetafteravalidLINIDisreceivedwithTXMatch,generatedIDinterruptifenabled.

26.10.2.1TransmittingDatainSingle-BufferMode

SingleBufferModeisselectedwhenMBUFMODEbitis0.InthismodeLINwaitsfordatatobewrittento

TD0,transfersittoSCITXSHF,andtransmitsit.TheflagsTXRDYandTXEMPTYindicatethestatusof

thetransmitbuffers.Thatis,whenthetransmitterisreadyfordatatobewrittentoTD0,theTXRDYbitis

set.Additionally,ifbothTD0andSCITXSHFareempty,thentheTXEMPTYbitisalsoset.

Usercantransmitdataby:

1.PollingTransmitReadyFlag

2.ReceiveInterrupt

3.DMA

Inpollingmethod,softwarecanpollforTXRDYbittogohighbeforewritingthedatatoTD0register.CPU

isunnecessarilyoverloadedbydoingthisPollingmethod.ToavoidthisusercanuseeitherInterruptor

DMAmethod.TouseinterruptmethodSETTXINTbitshouldbesetandtouseDMASETTXDMAbit

shouldbeset.EitheranInterruptoraDMArequestisgeneratedthemomentTXRDYisset.Whenthe

SCIhascompletedtransmissionofallpendingframes,theSCITXSHFregisterandTD0areempty,the

TXRDYbitisset,andaninterrupt/DMArequestisgenerated,ifenabled.Becausealldatahasbeen

transmitted,theinterrupt/DMArequestshouldbehalted.Thiscanbedonebyeitherdisablingthetransmit

interrupt(CLRTXINT)/DMArequest(CLRTXDMAbit)orbydisablingthetransmitter(clearTXENAbit).

InchecksumschemeonceSendChecksumSCbitisset,thechecksumwillbesentafterthecurrent

transmission.

NOTE:TheTXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0orSCIINTVECT1register.

26.10.2.2TransmittingDatainMulti-BufferMode

Multi-BufferModeisselectedwhenMBUFMODEbitis1.SimilartoSingleBuffermodethesoftwarecan

usepolling,InterruptorDMAmethodtowritethedatatobetransmitted.Thedatatobetransmittedhasto

bewrittentoLINTD0andLINTD1register,basedonthenumberofbytes.SCI/LINwaitsfordatatobe

writtentoByte0(TD0)ofLINTD0registerandtransferstheprogrammednumberofbytestoSCITXSHFto

transmitonebyoneautomatically.InchecksumschemeonceSendChecksumSCbitisset,the

checksumwillbesentaftertransmissionofprogrammedno.ofdatabytesindicatedbyLENGTHfield.

1384

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comLow-PowerMode

26.11Low-PowerMode

TheSCI/LINmodulecanbeputineitherlocalorgloballow-powermode.Globallow-powermodeis

assertedbythesystemandisnotcontrolledbytheSCI/LINmodule.Duringgloballow-powermode,all

clockstotheSCI/LINareturnedoffsothemoduleiscompletelyinactive.Ifgloballow-powermodeis

requestedwhilethereceiverisreceivingdata,thentheSCI/BLINcompletesthecurrentreceptionand

thenentersthelow-powermode,thatis,moduleenterslowpowermodeonlywhenBusybit(SCIFLR.3)is

cleared.

TheBLINmodulemayenterlowpowermodeeitherwhentherewasnoactivityontheLINRXpinformore

than4s(thiscanbeeitheraconstantrecessiveordominantlevel)orwhenaSleepCommandframewas

received.OncetheTimeoutflag(SCIFLR.4)wassetoronceaSleepCommandwasreceived,the

POWERDOWNbit(SCIGCR2.0)mustbesetbytheapplicationsoftwaretomakethemoduleenterlocal

low-powermode.AwakeupsignalwillterminatethesleepmodeoftheLINbus.

NOTE:EnablingLocalLow-PowerModeDuringReceiveandTransmit

Ifthewakeupinterruptisenabledandlow-powermodeisrequestedwhilethereceiveris

receivingdata,thentheSCI/LINimmediatelygeneratesawake-upinterrupttoclearthe

powerdownbit.Thus,theSCI/LINispreventedfromenteringlow-powermodeand

completesthecurrentreception.Otherwise,ifthewakeupinterruptisdisabled,theSCI/LIN

completesthecurrentreceptionandthenentersthelow-powermode.

26.11.1EnteringSleepMode

InLINprotocol,asleepcommandisusedtobroadcastthesleepmodetoallnodes.Thesleepcommand

consistsofadiagnosticmasterrequestframewithidentifier0x3C(60),withthefirstdatafieldas0x00.

Thereshouldbenoactivityinthebusonceallnodesreceivethesleepcommand:thebusisinsleep

mode.

Locallow-powermodeisassertedbysettingthePOWERDOWNbit;settingthisbitstopstheclockstothe

SCI/LINinternallogicandregisters.ClearingthePOWERDOWNbitcausesSCI/LINtoexitfromlocallow-

powermode.Alltheregistersareaccessibleduringlocalpower-downmode.Ifaregisterisaccessedin

low-powermode,thisaccessresultsinenablingtheclocktothemoduleforthatparticularaccessalone.

1385

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




0.25msT5ms≤≤WUSIG

WAKEUPSIGNAL

BUSINSLEEPMODE

TWUSIG

SYNCHBREAK

TINITIALIZE

BUSINOPERATIONALMODE



Low-PowerModewww.ti.com

26.11.2Wakeup

ThewakeupinterruptisusedtoallowtheSCI/LINmoduletoautomaticallyexitlow-powermode.A

SCI/LINwakeupistriggeredwhenalowlevelisdetectedonthereceiveRXpin,andthisclearsthe

POWERDOWNbit.

NOTE:IfthewakeupinterruptisdisabledthentheSCI/LINenterslow-powermodewheneveritis

requestedtodoso,butalowlevelonthereceiveRXpindoesNOTcausetheSCI/LINto

exitlow-powermode.

InLINmode,anynodecanterminatesleepmodebysendingawakeupsignal;seeFigure26-26.Aslave

nodethatdetectsthebusinsleepmode,andwithawakeuprequestpending,willsendawakeupsignal.

ThewakeupsignalisadominantvalueontheLINbusforTWUSIG;thisisatleast5TbitsfortheLINbus

baudrates.Thewakeupsignalisgeneratedbysendingan0xF0bytecontaining5dominantTbitsand5

recessiveTbits.

Figure26-26.WakeupSignalGeneration

(50)

Assumingaperfectbuswithnonoiseorloadingeffects,awriteof0xF0toTD0willloadthetransmitterto

meetthewakeupsignaltimingrequirementforTWUSIG.Then,settingtheGENWUbitwilltransmitthe

preloadedvalueinTD0forawakeupsignaltransmission.

NOTE:TheGENWUbitcanbeset/resetonlywhenSWnRSTissetto’1’andthenodeisinpower

downmode.Thebitwillbeclearedonavalidsynchbreakdetection.Amastersendinga

wakeuprequest,willexitpowerdownmodeuponreceptionofthewakeuppulse.Thebitwill

beclearedonaSWnRST.Thiscanbeusedtostopamasterfromsendingfurtherwakeup

requests.

TheTITPIC1021LINtransceiver,uponreceivingawakeupsignal,willtranslateittothemicrocontroller

forwakeupwithadominantlevelontheRXpin,orasignaltothevoltageregulator.Whilethe

POWERDOWNbitisset,iftheLINmoduledetectsarecessive-to-dominantedge(fallingedge)ontheRX

pin,itwillgenerateawakeupinterruptifenabledintheSCISETINTregister.

AccordingtoLINprotocol2.0,theTITPIC1021LINtransceiverdetectingadominantlevelonthebus

longerthan150mswilldetectitasawakeuprequest.TheLINcontroller’sslaveisreadytolistentothe

businlessthan100ms(TINITIALIZE<100ms)afteradominant-to-recessiveedge(end-of-wakeupsignal).

1386

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEmulationMode

26.11.3WakeupTimeouts

TheLINprotocoldefinesthefollowingtimeoutsforawakeupsequence.Afterawakeupsignalhasbeen

senttothebus,allnodeswaitforthemastertosendaheader.Ifnosynchfieldisdetectedbefore150ms

(3,000cyclesat20kHz)afterwakeupsignalistransmitted,anewwakeupissentbythesamenodethat

requestedthefirstwakeup.Thissequenceisnotrepeatedmorethantwotimes.Afterthreeattemptsto

wakeuptheLINbus,wakeupsignalgenerationissuspendedfora1.5s(30,000cyclesat20kHz)period

afterthreebreaks.

NOTE:ToachievecompatibilitytoLIN1.3timeoutconditions,theMBRSregistermustbesetto

assurethattheLIN2.0(real-time-based)timingsmeettheLIN1.3bittimebase.Anode

triggeringthewakeupshouldsettheMBRSregisteraccordinglytomeetthetargetedtimeas

128Tbitsxprogrammedprescaler.

TheLINcontrollerhandlesthewakeupexpirationtimesdefinedbytheLINprotocolwitha

hardwareimplementation.

26.12EmulationMode

Inemulationmode,theCONTbitdetermineshowtheSCI/LINoperateswhentheprogramissuspended.

TheSCI/LINcountersareaffectedbythisbitduringdebugmode.whenset,thecountersarenotstopped

andwhencleared,thecountersarestoppeddebugmode.

AnyreadsinemulationmodetoaSCI/LINregisterwillnothaveanyeffectontheflagsintheSCIFLR

register.

NOTE:WhenemulationmodeisenteredduringtheFrametransmissionorreceptionoftheframe

andCONTbitisnotset,Communicationisnotexpectedtobesuccessful.Thesuggested

usageistosetCONTbitduringemulationmodeforsuccessfulcommunication.

1387

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13SCI/LINControlRegisters

TheSCI/LINmoduleregistersarebasedontheSCIregisters,withaddedfunctionalityregistersenabled

bytheLINMODEbitintheSCIGCR1register.

Theseregistersareaccessiblein8-,16-,and32-bitreadsorwrites.TheSCI/LINiscontrolledand

accessedthroughtheregisterslistedinTable26-9.Amongthefeaturesthatcanbeprogrammedarethe

LINprotocolmode,communicationandtimingmodes,baudratevalue,frameformat,DMArequests,and

interruptconfiguration.

Table26-9.SCI/LINControlRegisters

Offset

Acronym

RegisterDescription

Section

00

SCIGCR0

SCIGlobalControlRegister0

Section26.13.1

04h

SCIGCR1

SCIGlobalControlRegister1

Section26.13.2

08h

SCIGCR2

SCIGlobalControlRegister2

Section26.13.3

0Ch

SCISETINT

SCISetInterruptRegister

Section26.13.4

10h

SCICLEARINT

SCIClearInterruptRegister

Section26.13.5

14h

SCISETINTLVL

SCISetInterruptLevelRegister

Section26.13.6

18h

SCICLEARINTLVL

SCIClearInterruptLevelRegister

Section26.13.7

1Ch

SCIFLR

SCIFlagsRegister

Section26.13.8

20h

SCIINTVECT0

SCIInterruptVectorOffset0

Section26.13.9

24h

SCIINTVECT1

SCIInterruptVectorOffset1

Section26.13.10

28h

SCIFORMAT

SCIFormatControlRegister

Section26.13.11

2Ch

BRS

BaudRateSelectionRegister

Section26.13.12

30h

SCIED

ReceiverEmulationDataBuffer

Section26.13.13.1

34h

SCIRD

ReceiverDataBuffer

Section26.13.13.2

38h

SCITD

TransmitDataBuffer

Section26.13.13.3

3Ch

SCIPIO0

SCIPinI/OControlRegister0

Section26.13.14

40h

SCIPIO1

SCIPinI/OControlRegister1

Section26.13.15

44h

SCIPIO2

SCIPinI/OControlRegister2

Section26.13.16

48h

SCIPIO3

SCIPinI/OControlRegister3

Section26.13.17

4Ch

SCIPIO4

SCIPinI/OControlRegister4

Section26.13.18

50h

SCIPIO5

SCIPinI/OControlRegister5

Section26.13.19

54h

SCIPIO6

SCIPinI/OControlRegister6

Section26.13.20

58h

SCIPIO7

SCIPinI/OControlRegister7

Section26.13.21

5Ch

SCIPIO8

SCIPinI/OControlRegister8

Section26.13.22

60h

LINCOMPARE

LINCompareRegister

Section26.13.23

64h

LINRD0

LINReceiveBuffer0Register

Section26.13.24

68h

LINRD1

LINReceiveBuffer1Register

Section26.13.25

5Ch

LINMASK

LINMaskRegister

Section26.13.26

70h

LINID

LINIdentificationRegister

Section26.13.27

74h

LINTD0

LINTransmitBuffer0

Section26.13.28

78h

LINTD1

LINTransmitBuffer1

Section26.13.29

7Ch

MBRS

MaximumBaudRateSelectionRegister

Section26.13.30

90h

IODFTCTRL

Input/OutputErrorEnableRegister

Section26.13.31

1388

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.1SCIGlobalControlRegister0(SCIGCR0)

TheSCIGCR0registerdefinesthemodulereset.Figure26-27andTable26-10illustratethisregister.

Figure26-27.SCIGlobalControlRegister0(SCIGCR0)[offset=00]

31

16

Reserved

R-0

15

1

0

Reserved

RESET

R-0

RWP-0

LEGEND:R/W=Read/Write;R=Readonly;RWP=Read/Writeinprivilegedmodeonly;-n=valueafterreset

Table26-10.SCIGlobalControlRegister0(SCIGCR0)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

RESET

ThisbitresetstheSCI/LINmodule.ThisbitiseffectiveinSCIandLINmode.

0

SCI/LINmoduleisinreset.

1

SCI/LINmoduleisoutofreset.

Note:Read/Writeinprivilegedmodeonly.

1389

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.2SCIGlobalControlRegister1(SCIGCR1)

TheSCIGCR1registerdefinestheframeformat,protocol,andcommunicationmodeusedbytheSCI.

Figure26-28andTable26-11illustratethisregister.

Figure26-28.SCIGlobalControlRegister1(SCIGCR1)[offset=04h]

31

26

25

24

Reserved

TXENA

RXENA

R-0

R/W-0

R/W-0

23

18

17

16

Reserved

CONT

LOOPBACK

R-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

Reserved

STOPEXTFRAME

HGENCTRL

CTYPE

MBUFMODE

ADAPT

SLEEP

R-0

R/WL-0

R/WL-0

R/WL-0

R/W-0

R/WL-0

R/W-0

7

6

5

4

3

2

1

0

SWnRST

LINMODE

CLOCK

STOP

PARITY

PARITYENA

TIMINGMODE

COMMMODE

R/W-0

R/W-0

R/W-0

R/WC-0

R/WC-0

R/W-0

R/WC-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;WC=WriteinSCI-compatiblemodeonly;WL=Writein

LINmodeonly;-n=valueafterreset

Table26-11.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25

TXENA

Transmitenable.ThisbitiseffectiveinLINandSCImodes.DataistransferredfromSCITD,or

theTDy(withy=0,1,...7)buffersinLINmodetotheSCITXSHFshiftoutregisteronlywhenthe

TXENAbitisset.

0

TransfersfromSCITDorTDytoSCITXSHFaredisabled.

1

TransfersfromSCITDorTDytoSCITXSHFareenabled.

Note:DatawrittentoSCITDorthetransmitmulti-bufferbeforeTXENAissetisnot

transmitted.IfTXENAisclearedwhiletransmissionisongoing,thedatapreviously

writtentoSCITDissent(includingthechecksumbyteinLINmode).

24

RXENA

Receiveenable.ThisbitiseffectiveinLINandSCImodes.RXENAallowsorpreventsthe

transferofdatafromSCIRXSHFtoSCIRDorthereceivemultibuffers.

0

Thereceiverwillnottransferdatafromtheshiftbuffertothereceivebufferormulti-buffers.

1

Thereceiverwilltransferdatafromtheshiftbuffertothereceivebufferormulti-buffers.

Note:ClearingRXENAstopsreceivedcharactersfrombeingtransferredintothereceive

bufferormulti-buffers,preventstheRXstatusflags(seeTable26-10)frombeingupdated

byreceivedata,andinhibitsbothreceiveanderrorinterrupts.However,theshiftregister

continuestoassembledataregardlessofthestateofRXENA.

Note:IfRXENAisclearedbeforeaframeiscompletelyreceived,thedatafromtheframe

isnottransferredintothereceivebuffer.

Note:IfRXENAissetbeforeaframeiscompletelyreceived,thedatafromtheframeis

transferredintothereceivebuffer.IfRXENAissetwhileSCIRXSHFisintheprocessof

assemblingaframe,thestatusflagsarenotguaranteedtobeaccurateforthatframe.To

ensurethatthestatusflagscorrectlyreflectwhatwasdetectedonthebusduringa

particularframe,RXENAshouldbesetbeforethedetectionofthatframe.

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

CONT

Continueonsuspend.ThisbitiseffectiveinLINandSCImodes.Thisbithasaneffectonly

whenaprogramisbeingdebuggedwithanemulator,anditdetermineshowtheSCI/LIN

operateswhentheprogramissuspended.TheSCI/LINcountersareaffectedbythisbit:when

thebitissetthecountersarenotstopped,whenthebitisclearedthecountersarestopped

duringdebugmode.

0

Whendebugmodeisentered,theSCI/LINstatemachineisfrozen.TransmissionsandLIN

countersarehaltedandresumewhendebugmodeisexited.

1

Whendebugmodeisentered,theSCI/LINcontinuestooperateuntilthecurrenttransmitand

receivefunctionsarecomplete.

1390

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-11.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions(continued)

Bit

Field

Value

Description

16

LOOPBACK

Loopbackbit.ThisbitiseffectiveinLINandSCImodes.Theself-checkingoptionforthe

SCI/LINcanbeselectedwiththisbit.IftheLINITXandLINRXpinsareconfiguredwithSCI/LIN

functionality,thentheLINTXpinisinternallyconnectedtotheLINRXpin.Externally,duringloop

backoperation,theLINTXpinoutputsahighvalueandtheLINRXpinisinahigh-impedance

state.IfthisbitvalueischangedwhiletheSCI/LINistransmittingorreceivingdata,errorsmay

result.

0

Loopbackmodeisdisabled.

1

Loopbackmodeisenabled.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13

STOPEXTFRAME

Stopextendedframecommunication.ThisbitiseffectiveinLINmodeonly.Thisbitcanbe

writtenonlyduringextendedframecommunication.Whentheextendedframecommunicationis

stopped,thisbitisclearedautomatically.

0

Thisbithasnoeffect.

1

Extendedframecommunicationwillbestoppedwhencurrentframetransmission/receptionis

completed.

12

HGENCTRL

HGENcontrol.ThisbitiseffectiveinLINmodeonly.Thisbitcontrolsthetypeofmaskfiltering

comparison

0

IDfilteringusingtheID-BYTEfieldinLINIdentificationRegister(LINID)occurs.

MaskofFFhinLINMaskRegister(LINMASK)registerwillresultinnomatch.

1

IDfilteringusesID-SlaveTaskBYTE(recommended).

MaskofFFhinLINMaskRegister(LINMASK)registerwillresultinALWAYSmatch.

Note:ForsoftwarecompatibilitywithfutureLINmodulestheHGENCTRLbitmustbeset

to1,theRXIDMASKmustbesettoFFhandtheTXIDMASKmustbesettoFFh.

11

CTYPE

Checksumtype.ThisbitiseffectiveinLINmodeonly.Thisbitcontrolsthetypeofchecksumto

beused:classicorenhanced.

0

Classicchecksumisused.

1

Enhancedchecksumisused.

10

MBUFMODE

Multibuffermode.ThisbitiseffectiveinLINandSCImodes.Thisbitcontrolsreceive/transmit

bufferusage,thatis,whethertheRX/TXmultibuffersareusedorasingleregister,RD0/TD0,is

used.

0

Themulti-buffermodeisdisabled.

1

Themulti-buffermodeisenabled.

9

ADAPT

Adapt.ThismodeiseffectiveinLINmodeonly.Thisbithasaneffectduringthedetectionofthe

synchfield.TwoLINprotocolbitratemodescouldbeenabledwiththisbitaccordingtothe

nodecapabilityfiledefinition:automaticorselect.Thesoftwareandnetworkconfigurationwill

decidewhichofthesetwomodesareenabled.Whenthisbitiscleared,theLIN2.0protocol

fixedbitrateshouldbeused.IftheADAPTbitisset,aSCI/LINslavenodedetectingthebaud

ratewillcompareittotheprescalersinBRSregisterandupdateitiftheyaredifferent.TheBRS

registerwillbeupdatedwiththenewvalue.Ifthisbitisnotsettherewillbenoadjustmentto

theBRSregister.

0

Automaticbaudrateadjustmentisdisabled.

1

Automaticbaudrateadjustmentisenabled.

8

SLEEP

SCIsleep.ThisbitiseffectiveinSCImodeonly.Inamultiprocessorconfiguration,thisbit

controlsthereceivesleepfunction.ClearingthisbitbringstheSCI/LINoutofsleepmode.

0

Sleepmodeisdisabled.

1

Sleepmodeisenabled.

Note:ThereceiverstilloperateswhentheSLEEPbitisset;however,RXRDYisupdated

andSCIRDisloadedwithnewdataonlywhenanaddressframeisdetected.The

remainingreceiverstatusflags(seeTable26-10)areupdatedandanerrorinterruptis

requestedifthecorrespondinginterruptenablebitisset,regardlessofthevalueofthe

SLEEPbit.Inthisway,ifanerrorisdetectedonthereceivedatalinewhiletheSCIis

asleep,softwarecanpromptlydealwiththeerrorcondition.

Note:TheSLEEPbitisnotautomaticallyclearedwhenanaddressbyteisdetected.

SeeSection26.6.1formoreinformationonusingtheSLEEPbitformultiprocessor

communication.

1391

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-11.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions(continued)

Bit

Field

Value

Description

7

SWnRST

Softwarereset(activelow).ThisbitiseffectiveinLINandSCImodes.

0

TheSCI/LINisinitsresetstate;nodatawillbetransmittedorreceived.Writinga0tothisbit

initializestheSCI/LINstatemachinesandoperatingflagsasdefinedinTable26-12and

Table26-13.Allaffectedlogicisheldintheresetstateuntila1iswrittentothisbit.

1

TheSCI/LINisinitsreadystate;transmissionandreceptioncanbedone.Afterthisbitissetto

1,theconfigurationofthemoduleshouldnotchange.

Note:TheSCI/LINshouldonlybeconfiguredwhileSWnRESET=0.

6

LINMODE

LINmode.ThisbitiseffectiveinLINandSCImode.Thisbitcontrolsthemodulemodeof

operation.

0

LINmodeisdisabled;SCImodeisenabled.

1

LINmodeisenabled;SCImodeisdisabled.

5

CLOCK

SCIinternalclockenable.TheCLOCKbitdeterminesthesourceofthemoduleclockonthe

SCICLKpin.ItalsodetermineswhetheraLINnodeisaslaveormaster.

SCImode

0

TheexternalSCICLKistheclocksource.

Note:Ifanexternalclockisselected,thentheinternalbaudrategeneratorandbaudrate

registersarebypassed.ThemaximumfrequencyallowedforanexternallysourcedSCI

clockisVCLK/16.

1

TheinternalSCICLKistheclocksource.

LINmode

0

Thenodeisinslavemode.

1

Thenodeisinmastermode.

4

STOP

SCInumberofstopbitsperframe.ThisbitiseffectiveinSCImodeonly.

0

Onestopbitisused.

1

Twostopbitsareused.

Note:Thereceiverchecksforonlyonestopbit.Howeverinidle-linemode,thereceiver

waitsuntiltheendofthesecondstopbit(ifSTOP=1)tobegincheckingforanidle

period.

3

PARITY

SCIparityodd/evenselection.ThisbitiseffectiveinSCImodeonly.IfthePARITYENAbitis

set,PARITYdesignatesoddorevenparity.

0

Oddparityisused.

1

Evenparityisused.

Theparitybitiscalculatedbasedonthedatabitsineachframeandtheaddressbit(in

address-bitmode).Thestartandstopfieldsintheframearenotincludedintheparity

calculation.

Foroddparity,theSCItransmitsandexpectstoreceiveavalueintheparitybitthat

makesoddthetotalnumberofbitsintheframewiththevalueof1.

Forevenparity,theSCItransmitsandexpectstoreceiveavalueintheparitybitthat

makeseventhetotalnumberofbitsintheframewiththevalueof1.

2

PARITYENA

Parityenable.Thisbitenablesordisablestheparityfunction.

SCIorbufferedSCImode

0

Parityisdisabled;noparitybitisgeneratedduringtransmissionorisexpectedduringreception.

1

Parityisenabled.Aparitybitisgeneratedduringtransmissionandisexpectedduringreception.

LINmode

0

IDfieldparityverificationisdisabled.

1

IDfieldparityverificationisenabled.

1

TIMINGMODE

SCItimingmodebit.ThisbitiseffectiveinSCImodeonly.itselectstheSCItimingmode.

0

Synchronoustimingisused.

1

Asynchronoustimingisused.

1392

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-11.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions(continued)

Bit

Field

Value

Description

0

COMMMODE

SCI/LINcommunicationmodebit.IncompatibilitymodeitselectstheSCIcommunicationmode.

InLINmodeitselectslengthcontroloptionforID-fieldbitsID4andID5.

SCImode

1

Idle-linemodeisused.

0

Address-bitmodeisused.

LINmode

0

ID4andID5arenotusedforlengthcontrol.

1

ID4andID5areusedforlengthcontrol.

Table26-12.SCIReceiverStatusFlags

SCIFlag

Register

Bit

ValueAfterSWnRESET(1)

CE

SCIFLR

29

0

ISFE

SCIFLR

28

0

NRE

SCIFLR

27

0

FE

SCIFLR

26

0

OE

SCIFLR

25

0

PE

SCIFLR

24

0

RXWAKE

SCIFLR

12

0

RXRDY

SCIFLR

9

0

BUSY

SCIFLR

3

0

IDLE

SCIFLR

2

0

WAKEUP

SCIFLR

1

0

BRKDT

SCIFLR

0

0

(1)TheflagsarefrozenwiththeirresetvaluewhileSWnRESET=0.

Table26-13.SCITransmitterStatusFlags

SCIFlag

Register

Bit

ValueAfterSWnRESET(1)

BE

SCIFLR

31

0

PBE

SCIFLR

30

0

TXWAKE

SCIFLR

10

0

TXEMPTY

SCIFLR

11

1

TXRDY

SCIFLR

8

1

(1)TheflagsarefrozenwiththeirresetvaluewhileSWnRESET=0.

1393

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.3SCIGlobalControlRegister2(SCIGCR2)

TheSCIGCR2registerisusedtosendorcompareachecksumbyteduringextendedframes,togenerate

awakeupandforlow-powermodecontroloftheLINmodule.Figure26-29andTable26-14illustratethis

register.

Figure26-29.SCIGlobalControlRegister2(SCIGCR2)[offset=08h]

31

18

17

16

Reserved

CC

SC

R-0

R/WL-0

R/WL-0

15

9

8

7

1

0

Reserved

GENWU

Reserved

POWERDOWN

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;-n=valueafterreset

Table26-14.SCIGlobalControlRegister2(SCIGCR2)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

CC

Comparechecksum.LINmodeonly.Thisbitisusedbythereceiverforextendedframestotrigger

achecksumcompare.Theuserwillinitiatethistransactionbywritingaonetothisbit.CCbithasto

besetonlyafterRX_RDYflagissetforthelastreceiveddata.

Innon-multibuffermode,whentheCCbitisset,thechecksumwillbecomparedonthebytethatis

expectedtobethechecksumbyte.

Duringmulti-buffermode,thefollowingscenariosareassociatedwiththeCCbit:

a)IftheCCbitissetduringthereceptionofthedata,thenthebytethatisreceivedafterthe

receptionoftheprogrammednumberofdatabytesasindicatedbySCIFORMAT[18:16]istreated

asachecksumbyte.

b)IftheCCbitissetduringtheidleperiod(thatis,duringtheinter-framespace),thenthe

immediatenextbytewillbetreatedasachecksumbyte.

c)CCbitwillbeautoclearedafterthecheckbytehasbeenreceivedandcompared.Checksum

receptionisnotguaranteedifCCbitiswriteclearedbysoftwareduringthechecksumreception.

SeeSection26.7.6formoredetails.

0

Nochecksumcomparewilloccur.

1

Comparechecksumonexpectedchecksumbyte.

16

SC

Sendchecksumbyte.ThisbitiseffectiveinLINmodeonly.Thisbitisusedbythetransmitterwith

extendedframestosendachecksumbyte.Innon-multibuffermode,thechecksumbytewillbesent

afterthecurrentbytetransmission.Inmultibuffermode,thechecksumbytewillbesentafterthe

lastbytecount,indicatedbytheSCIFORMAT[18:16]).SeeSection26.7.6formoredetails.This

bytewillbeclearedafterthechecksumbytehasbeentransmitted.

Innon-multibuffermode,thechecksumbytewillbesentafterthecurrentbytetransmission.

Duringmulti-buffermode,thefollowingscenariosareassociatedwiththeSCbit:

a)Thecheckbytewillbesentafterthelastbytecount,indicatedbytheSCIFORMAT[18:16]).

b)ChecksumwillnotbesentifSCissetbeforetransmittingtheveryfirstbyte(thatis,during

interframespace).

c)SCbitwillbeautoclearedafterthecheckbytehasbeentransmitted.Checksumtransmissionis

notguaranteedifSCbitiswriteclearedbysoftwareduringthechecksumtransmission.See

Section26.7.6formoredetails.

0

Nochecksumbytewillbesent.

1

Achecksumbytewillbesent.

15-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

GENWU

Generatewakeupsignal.ThisbitiseffectiveinLINmodeonly.Thisbitcontrolsthegenerationofa

wakeupsignal,bytransmittingtheTDObuffervalue.TheLINprotocolspecifiesthatthissignal

shouldbeadominantforTWUSIG.Thisbitisclearedonreceptionofavalidsynchbreak.

0

Nowakeupsignalwillbegenerated.

1

TheTDObuffervaluewillbetransmittedforawakeupsignal.ThebitwillbeclearedonaSWnRST.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

1394

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-14.SCIGlobalControlRegister2(SCIGCR2)FieldDescriptions(continued)

Bit

Field

Value

Description

0

POWERDOWN

Powerdown.ThisbitiseffectiveinLINorSCImode.Whenthisbitisset,theSCI/LINmodule

attemptstoenterlocallow-powermode.IfthePOWERDOWNbitissetwhilethereceiverisactively

receivingdataandthewakeupinterruptisdisabled,thentheSCI/LINwilldelayenteringlow-power

modeuntilthereceptioniscompleted.InLINmode,theusermaysetthePOWERDOWNbitafter

receivingasleepcommandoronidlebusdetection(morethan4seconds).SeeSection26.11for

moreinformationonlow-powermode.

0

TheSCI/LINmoduleisinnormaloperation.

1

TheSCI/LINmoduleenterslocallow-powermode.

26.13.4SCISetInterruptRegister(SCISETINT)

Figure26-30andTable26-15illustratethisregister.ReferFigure26-30fordetailsonwhendifferent

interruptflagsgetsetinaframeduringLINMode.

Figure26-30.SCISetInterruptRegister(SCISETINT)[offset=0Ch]

31

30

29

28

27

26

25

24

SETBEINT

SETPBEINT

SETCEINT

SETISFEINT

SETNREINT

SETFEINT

SETOEINT

SETPEINT

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

Reserved

SETRXDMAALL

SETRXDMA

SETTXDMA

R-0

R/WC-0

R/W-0

R/W-0

15

14

13

12

10

9

8

Reserved

SETIDINT

Reserved

SETRXINT

SETTXINT

R-0

R/WL-0

R-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

SET

SETTOAWUS

SETTIMEOUT

SETWAKEUP

SETBRKDT

Reserved

Reserved

TOA3WUSINT

INT

INT

INT

INT

R/WL-0

R/WL-0

R-0

R/WL-0

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;WC=WriteinSCI-compatiblemodeonly;-n=valueafterreset

Table26-15.SCISetInterruptRegister(SCISETINT)FieldDescriptions

Bit

Field

Value

Description

31

SETBEINT

Setbiterrorinterrupt.ThisbitiseffectiveinLINmodeonly.SettingthisbitenablestheSCI/LIN

moduletogenerateaninterruptwhenthereisabiterror.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

30

SETPBEINT

Setphysicalbuserrorinterrupt.ThisbitiseffectiveinLINmodeonly.Settingthisbitenables

theSCI/LINmoduletogenerateaninterruptwhenaphysicalbuserroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

29

SETCEINT

Setchecksum-errorinterrupt.ThisbitiseffectiveinLINmodeonly.Settingthisbitenablesthe

SCI/LINmoduletogenerateaninterruptwhenthereisachecksumerror.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

1395

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-15.SCISetInterruptRegister(SCISETINT)FieldDescriptions(continued)

Bit

Field

Value

Description

28

SETISFEINT

Setinconsistent-synch-field-errorinterrupt.ThisbitiseffectiveinLINmodeonly.Settingthisbit

enablestheSCI/LINmoduletogenerateaninterruptwhenthereisaninconsistentsynchfield

error.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

27

SETNREINT

Setno-response-errorinterrupt.ThisbitiseffectiveinLINmodeonly.Settingthisbitenables

theSCI/LINmoduletogenerateaninterruptwhenano-responseerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

26

SETFEINT

Setframing-errorinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.Settingthisbit

enablestheSCI/LINmoduletogenerateaninterruptwhenaframingerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

25

SETOEINT

Setoverrun-errorinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.Settingthisbit

enablestheSCI/LINmoduletogenerateaninterruptwhenanoverrunerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

24

SETPEINT

Setparityinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.Settingthisbitenables

theSCI/LINmoduletogenerateaninterruptwhenaparityerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

SETRXDMAALL

SetreceiveDMAall.ThisbitiseffectiveinSCI-compatiblemodeonly.Thisbitdeterminesifa

separateinterruptisgeneratedfortheaddressframessentinmultiprocessorcommunications.

Whenthisbitis0,RXinterruptrequestsaregeneratedforaddressframesandDMArequests

aregeneratedfordataframes.Whenthisbitis1,RXDMArequestsaregeneratedforboth

addressanddataframes.

0

Read:TheDMArequestisdisabledforaddressframes(thereceiveinterruptrequestisenabled

foraddressframes).

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheDMArequestisenabledforaddressanddataframes.

17

SETRXDMA

SetreceiverDMA.ThisbitiseffectiveinLINorSCI-compatiblemode.ToenablereceiverDMA

requests,thisbitmustbeset.Ifitiscleared,interruptrequestsaregenerateddependingonbit

SCISETINT.

0

Read:TheDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheDMArequestisenabledforaddressanddataframes.

16

SETTXDMA

SettransmitDMA.ThisbitiseffectiveinLINorSCI-compatiblemode.ToenableDMArequests

forthetransmitter,thisbitmustbeset.Ifitiscleared,interruptrequestsaregenerated

dependingonSETTXINTbit(SCISETINT).

0

Read:TransmitDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TransmitDMArequestisenabled.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

1396

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-15.SCISetInterruptRegister(SCISETINT)FieldDescriptions(continued)

Bit

Field

Value

Description

13

SETIDINT

Setidentificationinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbitissettoenablean

interruptwhenavalidmatchingidentifierisreceived.SeeSection26.7.9formoredetails.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

12-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

SETRXINT

Receiverinterruptenable.ThisbitiseffectiveinLINorSCI-compatiblemode.Settingthisbit

enablestheSCI/LINtogenerateareceiveinterruptafteraframehasbeencompletelyreceived

andthedataisbeingtransferredfromSCIRXSHFtoSCIRD.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

8

SETTXINT

Settransmitterinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.Settingthisbit

enablestheSCI/LINtogenerateatransmitinterruptasdataisbeingtransferredfromSCITDto

SCITXSHFandtheTXRDYbitisbeingset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

7

SETTOA3WUSINT

Settimeoutafterthreewakeupsignalsinterrupt.ThisbitiseffectiveinLINmodeonly.Setting

thisbitenablestheSCI/LINtogenerateaninterruptwhenatimeoutoccursafterthreewakeup

signalshavebeensent.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

6

SETTOAWUSINT

Settimeoutafterwakeupsignalinterrupt.ThisbitiseffectiveinLINmodeonly.Settingthisbit

enablestheSCI/LINtogenerateaninterruptwhenatimeoutoccursafteronewakeupsignal

hasbeensent.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

SETTIMEOUTINT

Settimeoutinterrupt.ThisbitiseffectiveinLINmodeonly.SettingthisbitenablestheSCI/LIN

togenerateaninterruptwhenthereisnoLINbusactivity(busidle)foratleastfourseconds.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

3-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SETWAKEUPINT

Setwake-upinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.Settingthisbit

enablestheSCI/LINtogenerateawakeupinterruptandtherebyexitlow-powermode.If

enabled,thewakeupinterruptisassertedwhenlocallow-powermodeisrequestedwhilethe

receiverisbusyorifalowlevelisdetectedontheLINRXpinduringlow-powermode.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

0

SETBRKDTINT

Setbreak-detectinterrupt.ThisbitiseffectiveinSCI-compatiblemodeonly.Settingthisbit

enablestheSCI/LINtogenerateanerrorinterruptifabreakconditionisdetectedontheLINRX

pin.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

1397

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.5SCIClearInterruptRegister(SCICLEARINT)

Figure26-31andTable26-16illustratethisregister.SCICLEARINTregisterisusedtocleartheenabled

interruptswithoutaccessingSCISETINTregister.

Figure26-31.SCIClearInterruptRegister(SCICLEARINT)[offset=10h]

31

30

29

28

27

26

25

24

CLRBEINT

SETPBEINT

CLRCEINT

CLRISFEINT

CLRREINT

CLRFEINT

CLROEINT

CLRPEINT

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

Reserved

CLRRXDMAALL

CLRRXDMA

CLRTXDMA

R-0

R/WC-0

R/W-0

R/W-0

15

14

13

12

10

9

8

Reserved

CLRIDINT

Reserved

CLRRXINT

CLRTXINT

R-0

R/WL-0

R-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

CLR

CLRTOAWUS

CLRTIMEOUT

CLRWAKEUP

CLRBRKDT

Reserved

Reserved

TOA3WUSINT

INT

INT

INT

INT

R/WL-0

R/WL-0

R-0

R/WL-0

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;WC=WriteinSCI-compatiblemodeonly;-n=valueafterreset

Table26-16.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions

Bit

Field

Value

Description

31

CLRBEINT

Clearbiterrorinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbitdisablesthebiterror

interruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

30

CLRPBEINT

Clearphysicalbuserrorinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbitdisablesthe

physical-buserrorinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

29

CLRCEINT

Clearchecksum-errorinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbitdisablesthe

checksuminterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

28

CLRISFEINT

Clearinconsistent-synch-field-error(ISFE)interrupt.ThisbitiseffectiveinLINmodeonly.This

bitdisablestheISFEinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

1398

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-16.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions(continued)

Bit

Field

Value

Description

27

CLRNREINT

Clearno-response-errorinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbitdisablesthe

NREinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

26

CLRFEINT

Clearframing-errorinterrupt.ThisbitiseffectiveinLINorSCImode.Thisbitdisablesthe

framing-errorinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

25

CLROEINT

Clearoverrun-errorinterrupt.ThisbitiseffectiveinLINorSCImode.Thisbitdisablesthe

SCI/LINoverrunerrorinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

24

CLRPEINT

Clearparityinterrupt.ThisbitiseffectiveinLINorSCImode.Thisbitdisablestheparityerror

interruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

CLRRXDMAALL

ClearreceiveDMAall.ThisbitiseffectiveinSCImodeonly.ThisbitclearsthereceiveDMA

requestforaddressframeswhenset.OnlyreceivedataframesgenerateaDMArequest.

0

Read:ReceiveDMArequestforaddressframesisdisabled;Instead,RXinterruptrequestsare

enabledforaddressframes.ReceiveDMArequestsarestillenabledfordataframes.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThereceiveDMArequestforaddressanddataframesisenabled.

Write:ThereceiveDMArequestforaddressanddataframesisdisabled.

17

CLRRXDMA

ClearreceiveDMArequest.ThisbitiseffectiveinLINorSCImode.Thisbitdisablesthe

receiveDMArequestwhenset.

0

Read:TheDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThereceiveDMArequestisenabled.

Write:ThereceiveDMArequestforisdisabled.

16

CLRTXDMA

CleartransmitDMArequest.ThisbitiseffectiveinLINorSCImode.Thisbitdisablesthe

transmitDMArequestwhenset.

0

Read:TransmitDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThetransmitDMArequestisenabled.

Write:ThetransmitDMArequestforisdisabled.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

1399

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-16.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions(continued)

Bit

Field

Value

Description

13

CLRIDINT

ClearIDinterrupt.ThisbitiseffectiveinLINmodeonly.ThisbitdisablestheIDinterruptwhen

set.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

12-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

CLRRXINT

Clearreceiverinterrupt.ThisbitiseffectiveinLINorSCImode.Thisbitdisablesthereceiver

interruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

8

CLRTXINT

Cleartransmitterinterrupt.ThisbitiseffectiveinLINorSCImode.Thisbitdisablesthe

transmitterinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

7

CLRTOA3WUSINT

Cleartimeoutafterthreewakeupsignalsinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbit

disablesthetimeoutafterthreewakeupsignalsinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

6

CLRTOAWUSINT

Cleartimeoutafterwakeupsignalinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbit

disablesthetimeoutafteronewakeupsignalinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

CLRTIMEOUTINT

Cleartimeoutinterrupt.ThisbitiseffectiveinLINmodeonly.Thisbitdisablesthetimeout(LIN

busidle)interruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

3-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

CLRWAKEUPINT

Clearwake-upinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.Thisbitdisables

thewakeupinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

1400

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-16.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions(continued)

Bit

Field

Value

Description

0

CLRBRKDTINT

Clearbreak-detectinterrupt.ThisbitiseffectiveinSCI-compatiblemodeonly.Thisbitdisables

thebreak-detectinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

26.13.6SCISetInterruptLevelRegister(SCISETINTLVL)

Figure26-32andTable26-17illustratethisregister.

Figure26-32.SCISetInterruptLevelRegister(SCISETINTLVL)[offset=14h]

31

30

29

28

27

26

25

24

SETBEINTLVL

SETPBEINTLVL

SETCEINTLVL

SETISFEINTLVL

SETNREINTLVL

SETFEINTLVL

SETOEINTLVL

SETPEINTLVL

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

SETRXDMA

Reserved

Reserved

ALLINTLVL

R-0

R/WC-0

R-0

15

14

13

12

10

9

8

Reserved

SETIDINTLVL

Reserved

SETRXINTLVL

SETTXINTLVL

R-0

R/WL-0

R-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

SETTOA3WUS

SETTOAWUSINT

SETTIMEOUTINT

SETWAKEUPINT

SETBRKDTINT

Reserved

Reserved

INTLVL

LVL

LVL

LVL

LVL

R/WL-0

R/WL-0

R-0

R/WL-0

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;WC=WriteinSCI-compatiblemodeonly;-n=valueafterreset

Table26-17.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions

Bit

Field

Value

Description

31

SETBEINTLVL

Setbiterrorinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

30

SETPBEINTLVL

Setphysicalbuserrorinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

29

SETCEINTLVL

Setchecksum-errorinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

28

SETISFEINTLVL

Setinconsistent-synch-field-errorinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

1401

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-17.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

27

SETNREINTLVL

Setno-response-errorinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

26

SETFEINTLVL

Setframing-errorinterruptlevel.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

25

SETOEINTLVL

Setoverrun-errorinterruptlevel.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

24

SETPEINTLVL

Setparityerrorinterruptlevel.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

SETRXDMAALLLVL

SetreceiveDMAallinterruptlevels.ThisbitiseffectiveinSCImodeonly.

0

Read:ThereceiveinterruptrequestforaddressframesismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:ThereceiveinterruptrequestforaddressframesismappedtotheINT1line.

17-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13

SETIDINTLVL

SetIDinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

12-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

SETRXINTLVL

Setreceiverinterruptlevel.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

8

SETTXINTLVL

Settransmitterinterruptlevel.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

7

SETTOA3WUSINTLVL

Settimeoutafterthreewakeupsignalsinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

6

SETTOAWUSINTLVL

Settimeoutafterwakeupsignalinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

1402

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-17.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

4

SETTIMEOUTINTLVL

Settimeoutinterruptlevel.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

3-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SETWAKEUPINTLVL

Setwake-upinterruptlevel.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

0

SETBRKDTINTLVL

Setbreak-detectinterruptlevel.ThisbitiseffectiveinSCI-compatiblemodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

1403

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.7SCIClearInterruptLevelRegister(SCICLEARINTLVL)

Figure26-33andTable26-18illustratethisregister.

Figure26-33.SCIClearInterruptLevelRegister(SCICLEARINTLVL)[offset=18h]

31

30

29

28

27

26

25

24

CLRBEINTLVL

CLRPBEINTLVL

CLRCEINTLVL

CLRISFEINTLVL

CLRNREINTLVL

CLRFEINTLVL

CLROEINTLVL

CLRPEINTLVL

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

CLRRXDMA

Reserved

Reserved

ALLINTLVL

R-0

R/WC-0

R-0

15

14

13

12

10

9

8

Reserved

CLRIDINTLVL

Reserved

CLRRXINTLVL

CLRTXINTLVL

R-0

R/WL-0

R-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

CLRTOA3WUS

CLRTOAWUSINT

CLRTIMEOUT

CLRWAKEUP

CLRBRKDTINT

Reserved

Reserved

INTLVL

LVL

INTLVL

INTLVL

LVL

R/WL-0

R/WL-0

R-0

R/WL-0

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;WC=WriteinSCI-compatiblemodeonly;-n=valueafterreset

Table26-18.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions

Bit

Field

Value

Description

31

CLRBEINTLVL

Clearbiterrorinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

30

CLRPBEINTLVL

Clearphysicalbuserrorinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

29

CLRCEINTLVL

Clearchecksum-errorinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

28

CLRISFEINTLVL

Clearinconsistent-synch-field-error(ISFE)interrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

27

CLRNREINTLVL

Clearno-response-errorinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

1404

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-18.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

26

CLRFEINTLVL

Clearframing-errorinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

25

CLROEINTLVL

Clearoverrun-errorinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

24

CLRPEINTLVL

Clearparityinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

CLRRXDMAALLLVL

ClearreceiveDMAinterruptlevel.ThisbitiseffectiveinSCI-compatiblemodeonly.

0

Read:ThereceiveinterruptrequestforaddressframesismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThereceiveinterruptrequestforaddressframesismappedtotheINT1line.

Write:ThereceiveinterruptrequestforaddressframesismappedtotheINT0line.

17-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13

CLRIDINTLVL

ClearIDinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

12-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

CLRRXINTLVL

Clearreceiverinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

8

CLRTXINTLVL

Cleartransmitterinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

7

CLRTOA3WUSINTLVL

Cleartimeoutafterthreewakeupsignalsinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

1405

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-18.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

6

CLRTOAWUSINTLVL

Cleartimeoutafterwakeupsignalinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

CLRTIMEOUTINTLVL

Cleartimeoutinterrupt.ThisbitiseffectiveinLINmodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

3-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

CLRWAKEUPINTLVL

Clearwake-upinterrupt.ThisbitiseffectiveinLINorSCI-compatiblemode.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

0

CLRBRKDTINTLVL

Clearbreak-detectinterrupt.ThisbitiseffectiveinSCI-compatiblemodeonly.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

1406

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.8SCIFlagsRegister(SCIFLR)

Figure26-34andTable26-19illustratethisregister.

Figure26-34.SCIFlagsRegister(SCIFLR)[offset=1Ch]

31

30

29

28

27

26

25

24

BE

PBE

CE

ISFE

NRE

FE

OE

PE

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R/W-0

R/W-0

R/W-0

23

16

Reserved

R-0

15

14

13

12

11

10

9

8

Reserved

IDRX

IDTX

RXWAKE

TXEMPTY

TXWAKE

RXRDY

TXRDY

R-0

R/WL-0

R/WL-0

R/WC-0

R/W-1

R/WC-0

R/W-0

R/W-1

7

6

5

4

3

2

1

0

TOA3WUS

TOAWUS

Reserved

TIMEOUT

BUSY

IDLE

WAKEUP

BRKDT

R/WL-0

R/WL-0

R-0

R/WL-0

R/W-0

R-0

R/WL-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=WriteinSCI-compatiblemodeonly;WL=WriteinLINmodeonly;-n=valueafterreset

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions

Bit

Field

Value

Description

31

BE

Biterrorflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetwhenabiterrorhasoccurred.

Thisisdetectedbytheinternalbitmonitor.SeeSection26.7.8formoreinformation.Thebiterror

flagisclearedbyanyofthefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Onreceptionofanewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Noerrorhasbeendetectedsincethisbitwaslastcleared.

Write:Writinga0tothisbithasnoeffect.

1

Read:Anerrorhasbeendetectedsincethisbitwaslastcleared.

Write:Thebitisclearedto0.

30

PBE

Physicalbuserrorflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetwhenaphysicalbus

errorhasbeendetectedbythebitmonitorinTED.SeeSection26.7.8formoreinformation.The

physicalbuserrorflagisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Onreceptionofanewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

Note:ThePBEwillonlybeflagged,ifnoSynchBreakcanbegenerated(forexample,

becauseofabusshortagetoVBAT)orifnoSynchBreakDelimitercanbegenerated(for

example,becauseofabusshortagetoGND).

0

Read:Noerrorhasbeendetectedsincethisbitwaslastcleared.

Write:Writinga0tothisbithasnoeffect.

1

Read:Anerrorhasbeendetectedsincethisbitwaslastcleared.

Write:Thebitisclearedto0.

1407

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

29

CE

Checksumerrorflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetwhenachecksumerror

hasbeendetectedbyareceivingnode.ThiserrorisdetectedbytheTEDlogic.SeeSection26.7.8

formoreinformation.ThetypeofchecksumtobeuseddependsontheCTYPEbitinSCIGCR1.

Thechecksumerrorflagisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Receptionofanewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Noerrorhasbeendetectedsincethisbitwaslastcleared.

Write:Writinga0tothisbithasnoeffect.

1

Read:Anerrorhasbeendetectedsincethisbitwaslastcleared.

Write:Thebitisclearedto0.

28

ISFE

Inconsistentsynchfielderrorflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetwhenan

inconsistentsynchfielderrorhasbeendetectedbythesynchronizerduringheaderreception.See

Section26.7.5.2formoreinformation.Theinconsistentsynchfielderrorflagisclearedbythe

following:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Receptionofanewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Noinconsistentsynchfielderrorhasbeendetected.

Write:Writinga0tothisbithasnoeffect.

1

Read:Aninconsistentsynchfielderrorhasbeendetected.

Write:Thebitisclearedto0.

27

NRE

No-responseerrorflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetwhenthereisno

responsetoamaster'sheadercompletedwithinTFRAME_MAX.Thistimeoutperiodisappliedfor

messageframesofknownlength(identifiers0to61).Thiserrorisdetectedbythesynchronizer.

SeeSection26.7.7formoreinformation.Theno-responseerrorflagisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Receptionofanewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Nono-responseerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Ano-responseerrorhasbeendetected.

Write:Thebitisclearedto0.

1408

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

26

FE

Framingerrorflag.ThisbitiseffectiveinLINorSCI-compatiblemode.Thisbitissetwhenan

expectedstopbitisnotfound.InSCIcompatibilitymode,onlythefirststopbitischecked.The

missingstopbitindicatesthatsynchronizationwiththestartbithasbeenlostandthatthecharacter

isincorrectlyframed.DetectionofaframingerrorcausestheSCI/LINtogenerateanerrorinterrupt

iftheSETFEINTbitissetintheregisterSCISETINT.Theframingerrorflagisclearedbythe

following:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

•Receptionofanewcharacter/frame,dependingonwhetherthemoduleisinSCIcompatibleor

LINmode

InmultibuffermodetheframeisdefinedintheSCIFORMATregister.

0

Read:Noframingerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Aframingerrorhasbeendetectedsincethelastclear.

Write:Thebitisclearedto0.

25

OE

Overrunerrorflag.ThisbitiseffectiveinLINorSCI-compatiblemode.Thisbitissetwhenthe

transferofdatafromSCIRXSHFtoSCIRDoverwritesunreaddataalreadyinSCIRDortheRDy

buffersinLINRD0andLINRD1.DetectionofanoverrunerrorcausestheLINtogenerateanerror

interruptiftheSETOEINTbit=1.TheOEflagisresetbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Nooverrunerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Anoverrunerrorhasbeendetected.

Write:Thebitisclearedto0.

24

PE

Parityerrorflag.ThisbitiseffectiveinLINorSCI-compatiblemode.Thisbitissetwhenaparity

errorisdetectedinthereceiveddata.InSCIaddress-bitmode,theparityiscalculatedonthedata

andaddressbitfieldsofthereceivedframe.Inidle-linemode,onlythedataisusedtocalculate

parity.Anerrorisgeneratedwhenacharacterisreceivedwithamismatchbetweenthenumberof

1sanditsparitybit.Iftheparityfunctionisdisabled(SCIGCR[2]=0),thePEflagisdisabledand

readas0.DetectionofaparityerrorcausestheLINtogenerateanerrorinterruptiftheSETPE

INTbit=1.ThePEbitisresetbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Receptionofanewcharacterorframe,dependingonwhetherthemoduleisinSCIcompatible

orLINmode,respectively.

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Noparityerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Aparityerrorhasbeendetected.

Write:Thebitisclearedto0.

23-15

Reserved

0

Readreturns0.Writeshavenoeffect.

1409

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

14

IDRXFLAG

Identifieronreceiveflag.ThisbitiseffectiveinLINmodeonly.Thisflagissetonceanidentifieris

receivedwithanreceivematchandnoID-parityerror.SeeSection26.7.9formoredetails.Thisflag

indicatesthatanewvalididentifierhasbeenreceivedonanRXmatch.Thisbitisclearedbythe

following:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingtheLINIDregister

•Receptionofanewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:NovalidIDhasbeenreceivedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:AvalidIDRXhasbeenreceivedinLINID[23:16]onanRXmatch.

Write:Thebitisclearedto0.

13

IDTXFLAG

dentifierontransmitflag.ThisbitiseffectiveinLINmodeonly.Thisflagissetwhenanidentifieris

receivedwithatransmitmatchandnoID-parityerror.SeeSection26.7.9formoredetails.Thisflag

indicatesthatanewvalididentifierhasbeenreceivedonaTXmatch.Thisbitisclearedbythe

following:

•SettingtheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingtheLINIDregister

•Receivinganewsynchbreak

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:NovalidIDhasbeenreceivedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:AvalidIDTXhasbeenreceivedinLINID[23:16]onanTXmatch.

Write:Thebitisclearedto0.

12

RXWAKE

Receiverwakeupdetectflag.ThisbitiseffectiveinSCI-compatiblemodeonly.TheSCIsetsthisbit

toindicatethatthedatacurrentlyinSCIRDisanaddress.RXWAKEisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Uponreceiptofadataframe.

0

ThedatainSCIRDisnotanaddress.

1

ThedatainSCIRDisanaddress.

11

TXEMPTY

Transmitteremptyflag.Thisflagindicatesthetransmitter'sbufferregister(s)(SCITD/TDy)andshift

register(SCITXSHF)areempty.Inmultibuffermode,thisflagindicatestheTDxregistersandshift

register(SCITXSHF)areempty.Innon-multibuffermode,thisflagindicatestheLINTD0byteand

theshiftregister(SCITXSHF)areempty.

Note:TheRESETbit,anactiveSWnRESET(SCIGCR1[7])orasystemresetsetsthisbit.

Thisbitdoesnotcauseaninterruptrequest.

SCImodeorLINnon-multibuffermode

0

Transmitterbufferorshiftregister(orboth)areloadedwithdata.

1

Transmitterbufferandshiftregistersarebothempty.

InLINmodeusingmultibuffermode

0

Multibufferorshiftregister(orall)areloadedwithdata

1

Multibufferandshiftregistersareallempty.

1410

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

10

TXWAKE

Transmitterwakeupmethodselect.ThisbitiseffectiveinSCImodeonly.TheTXWAKEbitcontrols

whetherthedatainSCITDshouldbesentasanaddressordataframeusingmultiprocessor

communicationformat.Thisbitissetto1or0bysoftwarebeforeabyteiswrittentoSCITDandis

clearedbytheSCIwhendataistransferredfromSCITDtoSCITXSHForbyasystemreset.

Note:TXWAKEisnotclearedbytheSWnRESETbit.

Address-bitmode

0

Frametobetransmittedwillbedata(addressbit=0).

1

Frametobetransmittedwillbeanaddress(addressbit=1).

Idle-linemode

0

Theframetobetransmittedwillbedata.

1

Thefollowingframetobetransmittedwillbeanaddress(writinga1tothisbitfollowedbywriting

dummydatatotheSCITDwillresultinaidleperiodof11bitperiodsbeforethenextframeis

transmitted).

9

RXRDY

Receiverreadyflag.InSCI-compatiblemode,thereceiversetsthisbittoindicatethattheSCIRD

containsnewdataandisreadytobereadbytheCPU.InLINmode,RXRDYissetonceavalid

frameisreceivedinmultibuffermode,avalidframebeingamessageframereceivedwithnoerrors.

Innon-multibuffermode,RXRDYissetforeachreceivedbyteandwillbesetforthelastbyteofthe

frameiftherearenoerrors.TheSCI/LINgeneratesareceiveinterruptwhenRXRDYflagbitissetif

theinterrupt-enablebitisset(SCISETINT[9]);RXRDYisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingtheSCIRDregisterincompatibilitymode

•ReadingthelastdatabyteRDyoftheresponseinLINmode

Note:TheRXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0/1register.

0

Read:NonewdataisinSCIRD.

Write:Writinga0tothisbithasnoeffect.

1

Read:NewdataisreadytobereadfromSCIRD.

Write:Thebitisclearedto0.

8

TXRDY

Transmitterbufferregisterreadyflag.Whenset,thisbitindicatesthatthetransmitbuffer(s)

register(s)(SCITDincompatibilitymodeandLINTD0/LINTD1inmultibuffermode)arereadytoget

anothercharacterfromaCPUwrite.

InSCI,writingdatatoSCITDautomaticallyclearsthisbit.InLINmode,thisbitisclearedoncebyte

0(TD0)iswrittentoLINTD0.ThisbitissetafterthedataoftheTXbufferisshiftedintothe

SCITXSHFregister.ThiseventcantriggeratransmitinterruptafterdataiscopiedtotheTXshift

registerSCITXSHF,iftheinterruptenablebitTXINTisset.

Note:

1)TXRDYisalsosetto1eitherbysettingoftheRESETbit,enablingSWnRSTorbya

systemreset.

2)TheTXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0/1register.

3)Thetransmitinterruptrequestcanbeeliminateduntilthenextseriesofdatawritteninto

thetransmitbuffersLINTD0andLINTD1,bydisablingthecorrespondinginterruptviathe

SCICLEARINTregisterorbydisablingthetransmitterviatheTXENAbit.

SCImode

0

SCITDisfull.

1

SCITDisreadytoreceivethenextcharacter.

LINmode

0

Themultibuffersarefull.

1

Themultibuffersarereadytoreceivethenextcharacter(s).

Formoreinformationontransmitinterrupthandling,seetheSCIdocumentforcompatibilitymode

andSection26.7.9forLINmode.

1411

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

7

TOA3WUS

Timeoutafterthreewakeupsignalsflag.ThisbitiseffectiveinLINmodeonly.Thisflagissetif

thereisnosynchbreakreceivedafterthreewakeupsignalsandaperiodof1.5secondshas

passed.Suchexpirationtimeisusedbeforeissuinganotherroundofwakeupsignals.Thisbitis

clearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

SeeSection26.11.3formoreinformation.

0

Read:Notimeoutoccuredafterthreewakeupsignals.

Write:Writinga0tothisbithasnoeffect.

1

Read:Timeoutoccuredafterthreewakeupsignalsand1.5secondstime.

Write:Thebitisclearedto0.

6

TOAWUS

Timeoutafterwakeupsignalflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetifthereisno

synchbreakreceivedafterawakeupsignalhasbeensent.Aminimumof150msexpirationtimeis

usedbeforeissuinganotherwakeupsignal.Thisbitisclearedbythefollowing:

•SettingtheSWnRSTbit

•SettingoftheRESETbit

•Asystemresetoccurring

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

SeeSection26.11.3sformoreinformation.

0

Read:Notimeoutoccuredafteronewakeupsignal(150ms).

Write:Writinga0tothisbithasnoeffect.

1

Read:Timeoutoccuredafteronewakeupsignal.

Write:Thebitisclearedto0.

5

Reserved

0

Readreturns0.Writeshavenoeffect.

4

TIMEOUT

LINbusidletimeoutflag.ThisbitiseffectiveinLINmodeonly.Thisbitissetearliestafteratleast

foursecondsofbusinactivity.Businactivityisdefinedasnotransactionsbetweenrecessiveand

dominant(andviceversa).Thisbitisclearedbythefollowing:

•SettingtheSWnRSTbit

•SettingoftheRESETbit

•Asystemresetoccurring

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

SeeSection26.7.7formoreinformation.

0

Read:Nobusidlehasbeendetectedsincethisbitwaslastcleared.

Write:Writinga0tothisbithasnoeffect.

1

Read:ALINbusidlehasbeendetected.

Write:Thebitisclearedto0.

3

BUSY

Busbusyflag.ThisbitiseffectiveinLINmodeandSCI-compatiblemode.Thisbitindicates

whetherthereceiverisintheprocessofreceivingaframe.Assoonasthereceiverdetectsthe

beginningofastartbit,theBUSYbitissetto1.Whenthereceptionofaframeiscomplete,the

SCI/LINclearstheBUSYbit.IfSETWAKEUPINTissetandpowerdownisrequestedwhilethisbit

isset,theSCI/LINautomaticallypreventslowpowermodefrombeingenteredandgenerates

wakeupinterrupt.TheBUSYbitiscontrolleddirectlybytheSCI/LINreceiver,butthisbitcanalso

beclearedbythefollowing:

•SettingtheSWnRSTbit

•SettingoftheRESETbit

•Asystemresetoccurring

0

Thereceiverisnotcurrentlyreceivingaframe.

1

Thereceiveriscurrentlyreceivingaframe.

1412

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-19.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

2

IDLE

SCIreceiverinidlestate.ThisbitiseffectiveinSCI-compatiblemodeonly.Whilethisbitisset,the

SCIlooksforanidleperiodtoresynchronizeitselfwiththebitstream.Thereceiverdoesnot

receiveanydatawhilethebitisset.Thebusmustbeidlefor11bitperiodstoclearthisbit.The

SCIenterstheidlestateifoneofthefollowingeventsoccurs:

•Asystemreset

•AnSCIsoftwarereset

•Apowerdown

•TheRXpinisconfiguredasageneralI/Opin

0

Theidleperiodhasbeendetected;theSCIisreadytoreceive.

1

Theidleperiodhasnotbeendetected;theSCIwillnotreceiveanydata.

1

WAKEUP

Wakeupflag.ThisbitiseffectiveinLINmodeonly.ThisbitissetbytheSCI/LINwhenreceiveror

transmitteractivityhastakenthemoduleoutofpower-downmode.Aninterruptisgeneratedifthe

SETWAKEUPINTbit(SCISETINT[2])isset.Itisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

Forcompatibilitymode,seetheSCIdocumentformoreinformationonlow-powermode.

0

Read:Themodulewillnotwakeupfrompower-downmode.

Write:Writinga0tothisbithasnoeffect.

1

Read:Wakeupfrompower-downmode.

Write:Thebitisclearedto0.

0

BRKDT

SCIbreak-detectflag.ThisbitiseffectiveinSCI-compatiblemodeonly.ThisbitissetwhentheSCI

detectsabreakconditionontheLINRXpin.AbreakconditionoccurswhentheLINRXpinremains

continuouslylowforatleast10bitsafteramissingfirststopbit,thatis,afteraframingerror.

DetectionofabreakconditioncausestheSCItogenerateanerrorinterruptiftheBRKDTINTENA

bitisset.TheBRKDTbitisresetbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Nobreakconditionhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Abreakconditionhasbeendetected.

Write:Thebitisclearedto0.

1413

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.9SCIInterruptVectorOffset0(SCIINTVECT0)

Figure26-35andTable26-20illustratethisregister.

Figure26-35.SCIInterruptVectorOffset0(SCIINTVECT0)[offset=20h]

31

16

Reserved

R-0

15

5

4

0

Reserved

INTVECT0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-20.SCIInterruptVectorOffset0(SCIINTVECT0)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

INVECT0

0-1Fh

InterruptvectoroffsetforINT0.ThisregisterindicatestheoffsetforinterruptlineINT0.Areadto

thisregisterupdatesitsvaluetothenexthighestprioritypendinginterruptinSCIFLRandclears

theflaginSCIFLRcorrespondingtotheoffsetthatwasread.SeeTable26-4foralistofthe

interrupts.

Note:Theflagsforthereceive(SCIFLR[9])andthetransmit(SCIFLR[8])interruptcannotbe

clearedbyreadingthecorrespondingoffsetvectorinthisregister(seedetaileddescription

inSCIFLRregister).

26.13.10SCIInterruptVectorOffset1(SCIINTVECT1)

Figure26-36andTable26-21illustratethisregister.

Figure26-36.SCIInterruptVectorOffset1(SCIINTVECT1)[offset=24h]

31

16

Reserved

R-0

15

5

4

0

Reserved

INTVECT1

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-21.SCIInterruptVectorOffset1(SCIINTVECT1)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

INVECT1

0-1Fh

InterruptvectoroffsetforINT1.ThisregisterindicatestheoffsetforinterruptlineINT1.Areadto

thisregisterupdatesitsvaluetothenexthighestprioritypendinginterruptinSCIFLRandclears

theflaginSCIFLRcorrespondingtotheoffsetthatwasread.SeeTable26-4forlistofinterrupts.

Note:Theflagsforthereceive(SCIFLR[9])andthetransmit(SCIFLR[8])interruptcannotbe

clearedbyreadingthecorrespondingoffsetvectorinthisregister(seedetaileddescription

inSCIFLRregister).

1414

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.11SCIFormatControlRegister(SCIFORMAT)

Figure26-37andTable26-22illustratethisregister.

Figure26-37.SCIFormatControlRegister(SCIFORMAT)[offset=28h]

31

19

18

16

Reserved

LENGTH

R-0

R/W-0

15

3

2

0

Reserved

CHAR

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=WriteinSCI-compatiblemodeonly;-n=valueafterreset

Table26-22.SCIFormatControlRegister(SCIFORMAT)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18-16

LENGTH

0-3h

Framelengthcontrolbits.InLINmode,thesebitsindicatethenumberofbytesintheresponse

fieldfrom1to8bytes.InbufferedSCImode,thesebitsindicatethenumberofcharacters,withthe

numberofbitspercharacterspecifiedinCHAR(SCIFORMAT[2:0]).

WhenthesebitsareusedtoindicateLINresponselength(SCIGCR1[0]=1),thenwhenthereis

anIDRXmatch,thisvalueshouldbeupdatedwiththeexpectedlengthoftheresponse.In

bufferedSCImode,thesebitsindicatethetransmitter/receiverformatforthenumberofcharacters:

1to8.Therecanbeuptoeightcharacterswitheightbitseach.

0

Theresponsefieldhas1byte/character.

1h

Theresponsefieldhas2bytes/characters.

2h

Theresponsefieldhas3bytes/characters.

3h

Theresponsefieldhas4bytes/characters.

4h

Theresponsefieldhas5bytes/characters.

5h

Theresponsefieldhas6bytes/characters.

6h

Theresponsefieldhas7bytes/characters.

7h

Theresponsefieldhas8bytes/characters.

15-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

CHAR

0-7h

Characterlengthcontrolbits.Thesebitsareeffectiveinnon-bufferedSCIandbufferedSCImodes

only.ThesebitssettheSCIcharacterlengthfrom1to8bits.

Innon-bufferedSCIandbufferedSCImode,whendataoffewerthaneightbitsinlengthis

received,itisleftjustifiedinSCIRD/RDyandpaddedwithtrailingzeros.Datareadfromthe

SCIRDshouldbeshiftedbysoftwaretomakethereceiveddatarightjustified.

DatawrittentotheSCITDshouldberightjustifiedbutdoesnotneedtobepaddedwith

leadingzeros.

0

Thecharacteris1bitlong.

1h

Thecharacteris2bitslong.

2h

Thecharacteris3bitslong.

3h

Thecharacteris4bitslong.

4h

Thecharacteris5bitslong.

5h

Thecharacteris6bitslong.

6h

Thecharacteris7bitslong.

7h

Thecharacteris8bitslong.

1415

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Isosynchronous baud value=)(VCLK Frequency

2

Asynchronous baud value=)(VCLK Frequency

32

Isosynchronous baud value=)(VCLK Frequency

P+ 1

Asynchronous baud value=()VCLK Frequency

16P+ 1 +M

16)(



SCI/LINControlRegisterswww.ti.com

26.13.12BaudRateSelectionRegister(BRS)

Thissectiondescribesthebaudrateselectionregister.Figure26-38andTable26-23illustratethis

register.

Figure26-38.BaudRateSelectionRegister(BRS)[offset=2Ch]

31

30

28

27

24

23

16

Rsvd.

U

M

PRESCALERP

R-0

R/W-0

R/W-0

R/W-0

15

0

PRESCALERP

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-23.BaudRateSelectionRegister(BRS)FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-28

U

0-2h

SCI/LINsuperfractionaldividerselection.ThesebitsareeffectiveinLINorSCI

asynchronousmode.Thesebitsareanadditionalfractionalpartforthebaudrate

specification.Thesebitsallowasuper-finetuningofthefractionalbaudratewithsevenmore

intermediatevaluesforeachoftheMfractionaldividervalues.SeeSection26.7.4.1formore

details.

27-24

M

0-3h

SCI/LIN4-bitfractionaldividerselection.ThesebitsareeffectiveinLINorSCIasynchronous

mode.ThesebitsareusedtoselectabaudratefortheSCI/LINmodule,andtheyarea

fractionalpartforthebaudratespecification.TheMdividerallowsfine-tuningofthebaud

rateoverthePprescalerwith15additionalintermediatevaluesforeachofthePinteger

values.SeeSection26.7.4.1formoredetails.

23-0

PRESCALERP

0-FFFFFFh

ThesebitsareusedtoselectabaudratefortheSCI/LINmodule.Thesebitsareeffectivein

LINmodeandSCIcompatibility..

TheSCI/LINhasaninternallygeneratedserialclockdeterminedbytheVCLKandthe

prescalersPandMinthisregister.TheLINusesthe24-bitintegerprescalerPvalueofthis

registertoselectoneofover16,700,000.Theadditional4-bitfractionaldividerMrefinesthe

baudrateselectionPRESCALER[27:24].

NOTE:InLINmode,ONLYtheasynchronousmodeandbaurdratevaluesareused.

Thebaudratecanbecalculatedusingthefollowingformulas:

(51)

(52)

ForP=0,

(53)

(54)

Table26-24containscomparativebaudvaluesfordifferentPvalues,withVCLK=50MHz,

forasynchronousmode.

1416

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

Table26-24.ComparativeBaudValuesforDifferentPValues,AsynchronousMode(1)(2)

24-BitRegisterValue

BaudSelected

PercentError

Decimal

Hex

Ideal

Actual

26

00001A

115200

115740

0.47

53

000035

57600

57870

0.47

80

000050

38400

38580

0.47

162

0000A2

19200

19172

-0.15

299

00012B

10400

10417

0.16

325

000145

9600

9586

-0.15

399

00018F

7812.5

7812.5

0.00

650

00028A

4800

4800

0.00

15624

003BA0

200

200

0.00

624999

098967

5

5

0.00

(1)VCLK=50MHz

(2)Valuesareindecimalexceptforcolumn2.

26.13.13SCIDataBuffers(SCIED,SCIRD,SCITD)

TheSCIhasthreeaddressableregistersinwhichtransmitandreceivedataisstored.Thesethree

registersareavailableinSCImodeonly.

26.13.13.1ReceiverEmulationDataBuffer(SCIED)

TheSCIEDregisterisaddressedatalocationdifferentfromSCIRD,butisphysicallythesameregister.

Figure26-39andTable26-25illustratethisregister.

Figure26-39.ReceiverEmulationDataBuffer(SCIED)[offset=30h]

31

16

Reserved

R-0

15

8

7

0

Reserved

ED

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-25.ReceiverEmulationDataBuffer(SCIED)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

ED

0-FFh

Emulatordata.ThisbitiseffectiveinSCI-compatiblemodeonly.ReadingSCIED[7:0]doesnot

cleartheRXRDYflag,unlikereadingSCIRD.Thisregistershouldbeusedonlybyanemulator

thatmustcontinuallyreadthedatabufferwithoutaffectingtheRXRDYflag.

1417

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.13.2ReceiverDataBuffer(SCIRD)

Thisregisterprovidesalocationforthereceiverdata.Figure26-40andTable26-26illustratethisregister.

Figure26-40.ReceiverDataBuffer(SCIRD)[offset=34h]

31

16

Reserved

R-0

15

8

7

0

Reserved

RD

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-26.ReceiverDataBuffer(SCIRD)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

RD

0-FFh

Receiverdata.ThisbitiseffectiveinSCI-compatiblemodeonly.Whenaframehasbeen

completelyreceived,thedataintheframeistransferredfromthereceivershiftregisterSCIRXSHF

tothisregister.Asthistransferoccurs,theRXRDYflagissetandareceiveinterruptisgenerated

ifSETRXINTisset.

Note:WhenthedataisreadfromSCIRD,theRXRDYflagisautomaticallycleared.

NOTE:WhentheSCIreceivesdatathatisfewerthaneightbitsinlength,itloadsthedataintothis

registerinaleftjustifiedformatpaddedwithtrailingzeros.Therefore,theusersoftware

shouldperformalogicalshiftonthedatabythecorrectnumberofpositionstomakeitright

justified.

1418

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.13.3TransmitDataBufferRegister(SCITD)

DatatobetransmittediswrittentotheSCITDregister.Figure26-41andTable26-27illustratethis

register.

Figure26-41.TransmitDataBufferRegister(SCITD)[offset=38h]

31

16

Reserved

R-0

15

8

7

0

Reserved

TD

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-27.TransmitDataBufferRegister(SCITD)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

TD

0-FFh

Transmitdata.ThisbitiseffectiveinSCI-compatiblemodeonly.Datatobetransmittediswritten

totheSCITDregister.Thetransferofdatafromthisregistertothetransmitshiftregister

SCITXSHFsetstheTXRDYflag,whichindicatesthatSCITDisreadytobeloadedwithanother

byteofdata.

Note:IfTXINTENAisset,thisdatatransferalsocausesaninterrupt.

NOTE:DatawrittentotheSCITDregisterthatisfewerthaneightbitslongmustberightjustified,but

itdoesnotneedtobepaddedwithleadingzeros.

26.13.14SCIPinI/OControlRegister0(SCIPIO0)

Figure26-42andTable26-28illustratethisregister.

Figure26-42.SCIPinI/OControlRegister0(SCIPIO0)[offset=3Ch]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXFUNC

RXFUNC

Reserved

R-0

R/W-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-28.SCIPinI/OControlRegister0(SCIPIO0)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXFUNC

Transferfunction.ThisbitiseffectiveinLINorSCImode.ThisbitdefinesthefunctionofpinLINTX.

0

LINTXisageneral-purposedigitalI/Opin.

1

LINTXistheSCI/LINtransmitpin.

1

RXFUNC

Receivefunction.ThisbitiseffectiveinLINorSCImode.ThisbitdefinesthefunctionofpinLINRX.

0

LINRXisageneral-purposedigitalI/Opin.

1

LINRXistheSCI/LINreceivepin.

0

Reserved

0

Readreturns0.Writeshavenoeffect.

1419

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.15SCIPinI/OControlRegister1(SCIPIO1)

Figure26-43andTable26-29illustratethisregister.

Figure26-43.SCIPinI/OControlRegister1(SCIPIO1)[offset=40h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXDIR

RXDIR

Reserved

R-0

R/W-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-29.SCIPinI/OControlRegister1(SCIPIO1)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXDIR

Transmitpindirection.ThisbitiseffectiveinLINorSCImode.Thisbitdeterminesthedatadirectionon

theLINTXpinifitisconfiguredwithgeneral-purposeI/Ofunctionality(TXFUNC=0).SeeTable26-30

fortheLINTXpincontrolwiththisbitandothers.

0

LINTXisageneral-purposelinputpin.

1

LINTXisageneral-purposeoutputpin.

1

RXDIR

Receivepindirection.ThisbitiseffectiveinLINorSCImode.Thisbitdeterminesthedatadirectionon

theLINRXpinifitisconfiguredwithgeneral-purposeI/Ofunctionality(RXFUNC=0).SeeTable26-31

fortheLINRXpincontrolwiththisbitandothers.

0

LINRXisageneral-purposeinputpin.

1

LINRXisageneral-purposeoutputpin.

0

Reserved

0

Readreturns0.Writeshavenoeffect.

Table26-30.LINTXPinControl

Function

TXIN(1)

TXOUT

TXFUNC

TXDIR

LINTX

X

X

1

X

Generalpurposeinput

X

X

0

0

Generalpurposeoutput,high

X

1

0

1

Generalpurposeoutput,low

X

0

0

1

(1)TXINisaread-onlybit.ItsvaluealwaysreflectstheleveloftheSCITXpin.

Table26-31.LINRXPinControl

Function

RXIN(1)

RXOUT

RXFUNC

RXDIR

LINRX

X

X

1

X

Generalpurposeinput

X

X

0

0

Generalpurposeoutput,high

X

1

0

1

Generalpurposeoutput,low

X

0

0

1

(1)RXINisaread-onlybit.ItsvaluealwaysreflectstheleveloftheSCIRXpin.

1420

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.16SCIPinI/OControlRegister2(SCIPIO2)

Figure26-44andTable26-32illustratethisregister.

Figure26-44.SCIPinI/OControlRegister2(SCIPIO2)[offset=44h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXIN

RXIN

Reserved

R-0

R-X

R-X

R-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-x=Indeterminate

Table26-32.SCIPinI/OControlRegister2(SCIPIO2)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXIN

Transmitpinin.ThisbitiseffectiveinLINorSCImode.ThisbitcontainsthecurrentvalueontheLINTX

pin.

0

TheLINTXpinisatlogiclow(0).

1

TheLINTXpinisatlogichigh(1).

1

RXIN

Receivepinin.ThisbitiseffectiveinLINorSCImode.ThisbitcontainsthecurrentvalueontheLINRX

pin.

0

TheLINRXpinisatlogiclow(0).

1

TheLINRXpinisatlogichigh(1).

0

Reserved

Writeshavenoeffect.

1421

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.17SCIPinI/OControlRegister3(SCIPIO3)

Figure26-45andTable26-33illustratethisregister.

Figure26-45.SCIPinI/OControlRegister3(SCIPIO3)[offset=48h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXOUT

RXOUT

Reserved

R-0

R/W-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-33.SCIPinI/OControlRegister3(SCIPIO3)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXOUT

Transmitpinout.ThisbitiseffectiveinLINorSCImode.Thispinspecifiesthelogictobeoutputonpin

LINTXifthefollowingconditionsaremet:

•TXFUNC=0(LINTXpinisageneral-purposeI/O.)

•TXDIR=1(LINTXpinisageneral-purposeoutput.)

SeeTable26-30foranexplanationofthisbit’seffectincombinationwithotherbits.

0

TheoutputontheLINTXisatlogiclow(0).

1

TheoutputontheLINTXpinisatlogichigh(1).(OutputvoltageisVOHorhigherifTXPDR=0and

outputisinhighimpedancestateifTXPDR=1)

1

RXOUT

Receivepinout.ThisbitiseffectiveinLINorSCImode.Thisbitspecifiesthelogictobeoutputonpin

LINRXifthefollowingconditionsaremet:

•RXFUNC=0(LINRXpinisageneral-purposeI/O.)

•RXDIR=1(LINRXpinisageneral-purposeoutput.)

SeeTable26-31foranexplanationofthisbit’seffectincombinationwiththeotherbits.

0

TheoutputontheLINRXpinisatlogiclow(0).

1

TheoutputontheLINRXpinisatlogichigh(1).(OutputvoltageisVOHorhigherifRXPDR=0,and

outputisinhighimpedancestateifRXPDR=1)

0

Reserved

0

Readreturns0.Writeshavenoeffect.

1422

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.18SCIPinI/OControlRegister4(SCIPIO4)

Figure26-46andTable26-34illustratethisregister.

Figure26-46.SCIPinI/OControlRegister4(SCIPIO4)[offset=4Ch]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXSET

RXSET

Reserved

R-0

R/W-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-34.SCIPinI/OControlRegister4(SCIPIO4)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXSET

Transmitpinset.ThisbitiseffectiveinLINorSCImode.Thisbitsetsthelogictobeoutputonpin

LINTXifthefollowingconditionsaremet:

•TXFUNC=0(LINTXpinisageneral-purposeI/O.)

•TXDIR=1(LINTXpinisageneral-purposeoutput.)

SeeTable26-30foranexplanationofthisbit’seffectincombinationwithotherbits.

0

Read:TheoutputonLINTXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheoutputonLINTXisatlogichigh(1).

1

RXSET

Receivepinset.ThisbitiseffectiveinLINorSCImode.Thisbitsetsthedatatobeoutputonpin

LINRXifthefollowingconditionsaremet:

•RXFUNC=0(LINRXpinisageneral-purposeI/O.)

•RXDIR=1(LINRXpinisageneral-purposeoutput.)

SeeTable26-31foranexplanationofthisbit’seffectincombinationwiththeotherbits.

0

Read:TheoutputonLINRXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheoutputonLINRXisatlogichigh(1).

0

Reserved

0

Readreturns0.Writeshavenoeffect.

1423

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.19SCIPinI/OControlRegister5(SCIPIO5)

Figure26-47andTable26-35illustratethisregister.

Figure26-47.SCIPinI/OControlRegister5(SCIPIO5)[offset=50h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXCLR

RXCLR

Reserved

R-0

R/W-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-35.SCIPinI/OControlRegister5(SCIPIO5)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXCLR

Transmitpinclear.ThisbitiseffectiveinLINorSCImode.Thisbitclearsthelogictobeoutputonpin

LINTXifthefollowingconditionsaremet:

•TXFUNC=0(LINTXpinisageneral-purposeI/O.)

•TXDIR=1(LINTXpinisageneral-purposeoutput.)

0

Read:TheoutputonLINTXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Read:TheoutputonLINTXisatlogichigh(1).

Write:TheoutputonLINTXisatlogiclow(0).

1

RXCLR

Receivepinclear.ThisbitiseffectiveinLINorSCImode.Thisbitclearsthelogictobeoutputonpin

LINRXifthefollowingconditionsaremet:

•RXFUNC=0(LINRXpinisageneral-purposeI/O.)

•RXDIR=1(LINRXpinisageneral-purposeoutput.)

0

Read:TheoutputonLINRXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Read:TheoutputonLINRXisatlogichigh(1).

Write:TheoutputonLINRXisatlogiclow(0).

0

Reserved

0

Readreturns0.Writeshavenoeffect.

1424

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.20SCIPinI/OControlRegister6(SCIPIO6)

Figure26-48andTable26-36illustratethisregister.

Figure26-48.SCIPinI/OControlRegister6(SCIPIO6)[offset=54h]

31

8

Reserved

R-0

3

2

1

0

Reserved

TXFUNC

RXFUNC

Reserved

R-0

R/W-0

R/W-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-36.SCIPinI/OControlRegister6(SCIPIO6)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXPDR

Transmitpinopendrainenable.ThisbitiseffectiveinLINorSCImode.Thisbitenablesopen-drain

capabilityintheoutputpinLINTXifthefollowingconditionsaremet:

•TXFUNC=0(LINTXpinisageneral-purposeI/O.)

•TXDIR=1(LINTXpinisageneral-purposeoutput.)

0

Opendrainfunctionalityisdisabled;theoutputvoltageisVOLorlowerifTXOUT=0andVOHorhigherif

TXOUT=1.

1

Opendrainfunctionalityisenabled;theoutputvoltageisVOLorlowerifTXOUT=0andhighimpedance

ifTXOUT=1.

1

RXPDR

Receivepinopentrainenable.ThisbitiseffectiveinLINorSCImode.Thisbitenablesopen-drain

capabilityintheoutputpinLINRXifthefollowingconditionsaremet:

•RXFUNC=0(LINRXpinisageneral-purposeI/O.)

•RXDIR=1(LINRXpinisageneral-purposeoutput.)

0

Opendrainfunctionalityisdisabled;theoutputvoltageisVOLorlowerifRXOUT=0andVOHorhigherif

RXOUT=1.

1

Opendrainfunctionalityisenabled;theoutputvoltageisVOLorlowerifRXOUT=0andhighimpedance

ifRXOUT=1.

0

Reserved

0

Readreturns0.Writeshavenoeffect.

1425

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.21SCIPinI/OControlRegister7(SCIPIO7)

Figure26-49andTable26-37illustratethisregister.

Figure26-49.SCIPinI/OControlRegister7(SCIPIO7)[offset=58h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXPD

RXPD

Reserved

R-0

R/W-n

R/W-n

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset,RefertotheTerminalFunctionsinthedevicedatasheetfordefaultpin

settings.

Table26-37.SCIPinI/OControlRegister7(SCIPIO7)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXPD

Transmitpinpullcontroldisable.ThisbitiseffectiveinLINorSCImode.Thisbitdisablespullcontrol

capabilityontheinputpinLINTX.

0

ThepullcontrolontheLINTXpinisenabled.

1

ThepullcontrolontheLINTXpinisdisabled.

1

RXPD

Receivepinpullcontroldisable.ThisbitiseffectiveinLINorSCImode.Thisbitdisablespullcontrol

capabilityontheinputpinLINRX.

0

PullcontrolontheLINRXpinisenabled.

1

PullcontrolontheLINRXpinisdisabled.

0

Reserved

Writeshavenoeffect.

26.13.22SCIPinI/OControlRegister8(SCIPIO8)

Figure26-50andTable26-38illustratethisregister.

Figure26-50.SCIPinI/OControlRegister8(SCIPIO8)[offset=5Ch]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXPSL

RXPSL

Reserved

R-0

R/W-n

R/W-n

R-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset,RefertotheTerminalFunctionsinthedevicedatasheetfordefaultpin

settings.

Table26-38.SCIPinI/OControlRegister8(SCIPIO8)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXPSL

TXpinpullselect.ThisbitiseffectiveinLINorSCImode.Thisbitselectspulltypeintheinputpin

LINTX.

0

TheLINTXpinisapulldown.

1

TheLINTXpinisapullup.

1

RXPSL

RXpinpullselect.ThisbitiseffectiveinLINorSCImode.Thisbitselectspulltypeintheinputpin

LINRX.

0

TheLINRXpinisapulldown.

1

TheLINRXpinisapullup.

0

Reserved

Writeshavenoeffect.

1426

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.23LINCompareRegister(LINCOMPARE)

Figure26-51andTable26-39illustratethisregister.

Figure26-51.LINCompareRegister(LINCOMPARE)[offset=60h]

31

16

Reserved

R-0

15

10

9

8

7

3

2

0

Reserved

SDEL

Reserved

SBREAK

R-0

RWP-0

R-0

RWP-0

LEGEND:R/W=Read/Write;R=Readonly;RWP=Read/Writeinprivilegedmodeonly;--n=valueafterreset

Table26-39.LINCompareRegister(LINCOMPARE)FieldDescriptions

Bit

Field

Value

Description

31-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-8

SDEL

2-bitsynchdelimitercompare.ThesebitsareeffectiveinLINmodeonly.Thesebitsareusedto

configurethenumberofTbitforthesynchdelimiterinthesynchfield.Thedefaultvalueis00.

Theformulatoprogramthevalue(inTbits)forthesynchronizationdelimiteris:

TSDEL=(SDEL+1)Tbit

0

Thesynchdelimiterhas1Tbit.

1h

Thesynchdelimiterhas2Tbit.

2h

Thesynchdelimiterhas3Tbit.

3h

Thesynchdelimiterhas4Tbit.

7-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

SBREAK

Synchbreakextend.ThesebitsareeffectiveinLINmodeonly.Thesebitsareusedtoconfigurethe

numberofTbitforthesynchbreaktoextendtheminimum13Tbitbreakfieldtoamaximumof20T

bitlong.

Note:Thedefaultvalueis0x0,whichaddsnothingtotheautomaticallygeneratedSYNCHBREAK.

Theformulatoprogramthevalue(inTbits)fortheSYNCHBREAKis:

TSYNBRK=13Tbit+SBREAK×Tbit

0

ThesynchbreakhasnoadditionalTbit.

1h

Thesynchbreakhas1additionalTbit.

2h

Thesynchbreakhas2additionalTbit.

3h

Thesynchbreakhas3additionalTbit.

4h

Thesynchbreakhas4additionalTbit.

5h

Thesynchbreakhas5additionalTbit.

6h

Thesynchbreakhas6additionalTbit.

7h

Thesynchbreakhas7additionalTbit.

1427

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.24LINReceiveBuffer0Register(LINRD0)

Figure26-52andTable26-40illustratethisregister.

Figure26-52.LINReceiveBuffer0Register(LINRD0)[offset=64h]

31

24

23

16

RD0

RD1

R-0

R-0

15

8

7

0

RD2

RD3

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-40.LINReceiveBuffer0Register(LINRD0)FieldDescriptions

Bit

Field

Value

Description

31-24

RD0

0-FFh

Receivebuffer0.Byte0oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingRDybitfieldaccordingtothenumber

ofbytesreceived.AreadofthisbyteclearstheRXDYbyte.

Note:RD<x-1>isequivalenttodatabyte<x>oftheLINframe.

23-16

RD1

0-FFh

Receivebuffer1.Byte1oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingRDyregisteraccordingtothenumber

ofbytesreceived.

15-8

RD2

0-FFh

Receivebuffer2.Byte2oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingRDyregisteraccordingtothenumber

ofbytesreceived.

7-0

RD3

0-FFh

Receivebuffer3.Byte3oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingRDyregisteraccordingtothenumber

ofbytesreceived.

26.13.25LINReceiveBuffer1Register(LINRD1)

Figure26-53andTable26-41illustratethisregister.

Figure26-53.LINReceiveBuffer1Register(RD1)[offset=68h]

31

24

23

16

RD4

RD5

R-0

R-0

15

8

7

0

RD6

RD7

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-41.LINReceiveBuffer1Register(RD1)FieldDescriptions

Bit

Field

Value

Description

31-24

RD4

0-FFh

Receivebuffer4.Byte4oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingregisteraccordingtothenumberof

bytesreceived.

Note:RD<x-1>isequivalenttodatabyte<x>oftheLINframe.

23-16

RD5

0-FFh

Receivebuffer5.Byte5oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingregisteraccordingtothenumberof

bytesreceived.

15-8

RD6

0-FFh

Receivebuffer6.Byte6oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingregisteraccordingtothenumberof

bytesreceived.

7-0

RD7

0-FFh

Receivebuffer7.Byte7oftheresponsedatabyte.Eachresponsedata-bytethatisreceivedin

theSCIRXSHFTregisteristransferredtothecorrespondingregisteraccordingtothenumberof

bytesreceived.

1428

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.26LINMaskRegister(LINMASK)

Figure26-54andTable26-42illustratethisregister.

Figure26-54.LINMaskRegister(LINMASK)[offset=6Ch]

31

24

23

16

Reserved

RXIDMASK

R-0

R/WL-0

15

8

7

0

Reserved

TXIDMASK

R-0

R/WL-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;-n=valueafterreset

Table26-42.LINMaskRegister(LINMASK)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturn0.Writeshavenoeffect.

23-16

RXIDMASK

0-FFh

ReceiveIDmask.ThesebitsareeffectiveinLINmodeonly.This8-bitmaskisusedforfilteringan

incomingIDmessageandcomparingittotheID-byte.AcomparematchofthereceivedIDwith

theRXIDmaskwillsettheIDRXflagandtriggeranIDinterruptifenabled(SETIDINTin

SCISETINT).A0bitinthemaskindicatesthatbitiscomparedtotheID-byte.A1bitinthemask

indicatesthatbitisfilteredandthereforeisnotusedinthecompare.

15-8

Reserved

0

Readsreturn0.Writeshavenoeffect.

7-0

TXIDMASK

0-FFh

TransmitIDmask.ThesebitsareeffectiveinLINmodeonly.This8-bitmaskisusedforfiltering

anincomingIDmessageandcomparingittotheID-byte.AcomparematchofthereceivedIDwith

theTXIDmaskwillsettheIDTXflagandtriggeranIDinterruptifenabled(SETIDINTin

SCISETINT).A0bitinthemaskindicatesthatbitiscomparedtotheID-byte.A1bitinthemask

indicatesthatbitisfilteredandthereforeisnotusedforthecompare.

1429

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

26.13.27LINIdentificationRegister(LINID)

Figure26-55andTable26-43illustratethisregister.

Figure26-55.LINIdentificationRegister(LINID)[offset=70h]

31

24

23

16

Reserved

RECEIVEDID

R-0

R-0

15

8

7

0

ID-SlaveTaskBYTE

IDBYTE

R/WL-0

R/WL-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;-n=valueafterreset

Table26-43.LINIdentificationRegister(LINID)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readsreturn0.Writeshavenoeffect.

23-16

RECEIVEDID

0-FFh

Receivedidentification.ThesebitsareeffectiveinLINmodeonly.Thisbytecontainsthe

currentmessageidentifier.DuringheaderreceptionthereceivedIDiscopiedfromthe

SCIRXSHFregistertothisbyteifthereisnoID-parityerrorandtherehasbeenanRX/TX

match.

15-8

ID-SLAVETASKBYTE

0-FFh

ID-SlaveTaskByte.ThesebitsareeffectiveinLINmodeonly.Thisfieldcontainsthe

identifiertowhichthereceivedIDofanincomingheaderwillbecomparedtodecide

whetherareceiveresponse,atransmitresponse,ornoactionneedstobeperformedby

theLINnodewhenaheaderwiththatparticularIDisreceived.

7-0

IDBYTE

0-FFh

IDbyte.ThisfieldiseffectiveinLINmodeonly.ThisbyteistheLINmodemessageID.

Onamasternode,awritetothisregisterbytheCPUinitiatesaheadertransmission.For

aslavetask,thisbyteisusedformessagefilteringwhenHGENCTRL=0.

NOTE:ForsoftwarecompatibilitywithfutureLINmodulestheHGENCTRLbitmustbesetto1,the

RXIDMASKmustbesettoFFhandtheTXIDMASKmustbesettoFFh.

1430

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.28LINTransmitBuffer0Register(LINTD0)

Figure26-56andTable26-44illustratethisregister.

Figure26-56.LINTransmitBuffer0Register(LINTD0)[offset=74h]

31

24

23

16

TD0

TD1

R/W-0

R/W-0

15

8

7

0

TD2

TD3

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-44.LINTransmitBuffer0Register(LINTD0)FieldDescriptions

Bit

Field

Value

Description

31-24

TD0

0-FFh

8-Bittransmitbuffer0.Byte0tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.Oncebyte0iswritteninTD0buffer,transmissionwillbeinitiated.

Note:TD<x-1>isequivalenttodatabyte<x>oftheLINframe.

23-16

TD1

0-FFh

8-Bittransmitbuffer1.Byte1tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

15-8

TD2

0-FFh

8-Bittransmitbuffer2.Byte2tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

7-0

TD3

0-FFh

8-Bittransmitbuffer3.Byte3tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

26.13.29LINTransmitBuffer1Register(LINTD1)

Figure26-57andTable26-45illustratethisregister.

Figure26-57.LINTransmitBuffer1Register(LINTD1)[offset=78h]

31

24

23

16

TD4

TD5

R/W-0

R/W-0

15

8

7

0

TD6

TD7

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table26-45.LINTransmitBuffer1Register(LINTD1)FieldDescriptions

Bit

Field

Value

Description

31-24

TD4

0-FFh

8-Bittransmitbuffer4.Byte4tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

Note:TD<x-1>isequivalenttodatabyte<x>oftheLINframe.

23-16

TD5

0-FFh

8-Bittransmitbuffer5.Byte5tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

15-8

TD6

0-FFh

8-Bittransmitbuffer6.Byte6tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

7-0

TD7

0-FFh

8-Bittransmitbuffer7.Byte7tobetransmittediswrittenintothisregisterandthencopiedto

SCITXSHFfortransmission.

1431

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MBR =0.9x VCLKmaxbaudrate



SCI/LINControlRegisterswww.ti.com

26.13.30MaximumBaudRateSelectionRegister(MBRS)

Figure26-58andTable26-46illustratethisregister.

Figure26-58.MaximumBaudRateSelectionRegister(MBRS)[offset=7Ch]

31

16

Reserved

R-0

15

13

12

0

Reserved

MBR

R-0

R/WL-0

R/WL-1

R/WL-1

R/WL-0

R/WL-1

R/WL-1

R/WL-0

R/WL-1

R/WL-0

R/WL-1

R/WL-1

R/WL-0

R/WL-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;-n=valueafterreset

Table26-46.MaximumBaudRateSelectionRegister(MBRS)FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12-0

MBR

0-1FFFh

Maximumbaudrateprescaler.ThisbitiseffectiveinLINmodeonly.This13-bitprescaleris

usedduringthesynchronizationphase(seeSection26.7.5.2)ofaslavemoduleiftheADAPT

bitisset.Inthisway,aSCI/LINslaveusinganautomaticorselectbitratemodesdetectsany

LINbuslegalrateautomatically.

TheMBRvalueshouldbeprogrammedtoallowamaximumbaudratethatisnotmorethan

10%abovetheexpectedoperatingbaudrateintheLINnetwork.Otherwise,a0x00databyte

couldmistakinglybedetectedasasyncbreak.

Thedefaultvaluefora70MhzVCLKis0xDAC.

ThisMBRprescalerisusedbythewake-upandidletimecountersforaconstantexpiration

timerelativetoa20kHzrate.

(55)

1432

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCI/LINControlRegisters

26.13.31Input/OutputErrorEnable(IODFTCTRL)Register

AllthebitsintheIODFTCTRLregisterareusedinIODFT(I/Odesignfortest)modeonly.Figure26-59

andTable26-47illustratethisregister.AfterthebasicSCI/LINmoduleconfiguration,enabletherequired

ErrormodetobecreeatedfollowedbyIODFTKeyenable.

Figure26-59.Input/OutputErrorEnableRegister(IODFTCTRL)[offset=90h]

31

30

29

28

27

26

25

24

BEN

PBEN

CEN

ISFE

Reserved

FEN

PEN

BRKDTENA

R/WL-0

R/WL-0

R/WL-0

R/WL-0

R-0

R/W-0

R/WC-0

R/WC-0

23

21

20

19

18

16

Reserved

PINSAMPLEMASK

TXSHIFT

R-0

R/W-0

R/W-0

15

12

11

8

Reserved

IODFTENA

R-0

R/WP-5h

7

2

1

0

Reserved

LPBENA

RXPENA

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WL=WriteinLINmodeonly;WC=WriteinSCI-compatiblemodeonly;WP=Writein

privilegemodeonly;-n=valueafterreset

NOTE:1)AllthebitsareusedinIODFTmodeonly.

2)EachIODFTareexpectedtobecheckedindividually.

3)ISFEErrorwillnotbeFlaggedduringIODFTmode.

Table26-47.Input/OutputErrorEnableRegister(IODFTCTRL)FieldDescriptions

Bit

Field

Value

Description

31

BEN

Biterrorenable.ThisbitiseffectiveinLINmodeonly.Thisbitisusedtocreateabiterror.

0

Nobiterroriscreated.

1

ThebitreceivedisORedwith1andpassedtothebitmonitorcircuitry.

30

PBEN

Physicalbuserrorenable.ThisbitiseffectiveinLINmodeonly.Thisbitisusedtocreatea

physicalbuserror.

0

Noerroriscreated.

1

ThebitreceivedduringsynchbreakfieldtransmissionisORedwith1andpassedtothebit

monitorcircuitry.

29

CEN

Checksumerrorenable.ThisbitiseffectiveinLINmodeonly.Thisbitisusedtocreatea

checksumerror.

0

Noerroriscreated.

1

ThepolarityoftheCTYPE(checksumtype)inthereceivechecksumcalculatorischanged

sothatachecksumerrorisoccurred.

28

ISFE

Inconsistentsynchfield(ISF)errorenable.ThisbitiseffectiveinLINmodeonly.Thisbitis

usedtocreateanISFerror.

0

Noerroriscreated.

1

ThebitwidthsinthesynchfieldarevariedsothattheISFcheckfailsandtheerrorflagis

set.

27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

FEN

Frameerrorenable.Thisbitisusedtocreateaframeerror.

0

Noerroriscreated.

1

ThestopbitreceivedisANDedwith0andpassedtothestopbitcheckcircuitry.

1433

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCI/LINControlRegisterswww.ti.com

Table26-47.Input/OutputErrorEnableRegister(IODFTCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

25

PEN

Parityerrorenable.ThisbitiseffectiveinSCI-compatiblemodeonly.Thisbitisusedto

createaparityerror.

0

Noparityerroroccurs.

1

Theparitybitreceivedistoggledsothataparityerroroccurs.

24

BRKDTENA

Breakdetecterrorenable.ThisbitiseffectiveinSCI-compatiblemodeonly.Thisbitisused

tocreateaBRKDTerror.

0

Noerroriscreated.

1

ThestopbitoftheframeisANDedwith0andpassedtotheRSMsothataframeerror

occurs.ThentheRXpinisforcedtocontinuouslowfor10TBITSsothataBRKDTerror

occurs.

32-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20-19

PINSAMPLEMASK

Pinsamplemask.ThesebitsdefinethesamplenumberatwhichtheTXpinvaluethatis

beingtransmittedwillbeinvertedtoverifythereceivepinsamplesmajoritydetection

circuitry.

Note:InIODFTmodetestingforpin_samplemaskmustbedonewithprescalarP

programmedgreaterthan2(P>2).

0

Nomaskisused.

1h

InverttheTXPinvalueatTBIT_CENTER.

2h

InverttheTXPinvalueatTBIT_CENTER+SCLK.

3h

InverttheTXPinvalueatTBIT_CENTER+2SCLK.

18-16

TXSHIFT

Transmitshift.ThesebitsdefinetheamountbywhichthevalueonTXpinisdelayedsothat

thevalueontheRXpinisasynchronous.Thisfeatureisnotapplicabletothestartbit.

0

Nodelayoccurs.

1h

Thevalueisdelayedby1SCLK.

2h

Thevalueisdelayedby2SCLK.

3h

Thevalueisdelayedby3SCLK.

4h

Thevalueisdelayedby4SCLK.

5h

Thevalueisdelayedby5SCLK.

6h

Thevalueisdelayedby6SCLK.

7h

Thevalueisdelayedby7SCLK.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

IODFTENA

IODFTenablekey.WriteaccesspermittedinPriviledgemodeonly.

Ah

IODFTisenabled.

AllOthers

IODFTisdisabled.

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

LPBENA

Moduleloopbackenable.WriteaccesspermittedinPriviledgemodeonly.

Note:InanalogloopbackmodethecompletecommunicationpaththroughtheI/Os

canbetested,whereasindigitalloopbackmodetheI/Obuffersareexcludedfrom

thispath.

0

Digitalloopbackisenabled.

1

AnalogloopbackisenabledinmoduleI/ODFTmodewhenIODFTENA=1010.

0

RXPENA

Moduleanalogloopbackthroughreceivepinenable.WriteaccesspermittedinPriviledge

modeonly.ThisbitdefineswhethertheI/Obuffersforthetransmitorthereceivepinare

includedinthecommunicationpath(inanalogloopbackmode).

0

Analogloopbackthroughthetransmitpinisenabled.

1

Analogloopbackthroughthereceivepinisenabled.

1434

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Outputenable

Dataout

Datain

Pullcontroldisable

PullselectDevicepin

Pullcontrollogic

Inputenable

Outputenable

Dataout

Datain

PullcontroldisableDevicepin

Pullcontrollogic

Inputenable



www.ti.comGPIOFunctionality

26.14GPIOFunctionality

Thefollowingsectionsapplytoalldevicepinsthatcanbeconfiguredasfunctionalorgeneral-purposeI/O

pins.

26.14.1GPIOFunctionality

Figure26-60illustratestheGPIOfunctionality.

Figure26-60.GPIOFunctionality

26.14.2UnderReset

Thefollowingapplyifadeviceisunderreset:

•Pullcontrol.Theresetpullcontrolonthepinsisenabledordisableddependingonadevice-specific

option.Thisfeatureisconfigurableforeachmoduleseparately.

•Inputbuffer.Theinputbufferisenabled.

•Outputbuffer.Theoutputbufferisdisabled.

1435

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GPIOFunctionalitywww.ti.com

26.14.3OutofReset

Thefollowingapplyifthedeviceisoutofreset:

•Pullcontrol.ThepullcontrolisenabledbyclearingthePD(pullcontroldisable)bitintheSCIPIO7

register(Section26.13.21).Inthiscase,ifthePSL(pullselect)bitintheSCIPIO8register

(Section26.13.22)isset,thepinwillhaveapull-up.IfthePSLbitiscleared,thepinwillhaveapull-

down.IfthePDbitissetinthecontrolregister,thereisnopull-uporpull-downonthepin.

•Inputbuffer.Theinputbufferispermanentlyenabledinthisdevice.

NOTE:Thepull-disablelogicdependsonthepindirection.Itisindependentofwhetherthedeviceis

inI/Oorfunctionalmode.Ifthepinisconfiguredasoutputortransmit,thenthepullsare

disabledautomatically.

•Outputbuffer.ApincanbedrivenasanoutputpiniftheTXDIRbitissetinthepindirectioncontrol

register(SCIPIO1;Section26.13.15)ANDtheopen-drainfeatureisnotenabledintheSCIPIO6

register(Section26.13.20).

26.14.4Open-DrainFeatureEnabledonaPin

Thefollowingapplyiftheopen-drainfeatureisenabledonapin:

•Theoutputbufferisenabledifalowsignalisbeingdrivenontothepin.

•Theoutputbufferisdisabled(thedirectioncontrolsignalDIRisinternallyforcedlow)ifahighsignalis

beingdrivenontothepin.

NOTE:Theopen-drainfeatureisavailableonlyinI/Omode(SCIPIO0;Section26.13.14).

26.14.5Summary

Thebehavioroftheinputbuffer,outputbuffer,andthepullcontrolissummarizedinTable26-48.

Table26-48.InputBuffer,OutputBuffer,andPullControlBehaviorasGPIOPins(1)

Device

Pin

under

Direction

PullDisable

PullSelect

Reset?

(DIR)(2)

(PULDIS)(3)

(PULSEL)(4)

PullControl

OutputBuffer

InputBuffer

Yes

X

X

X

Device-andmodule-

Disabled

Enabled

specific

No

0

0

0

Pulldown

Disabled

Enabled

No

0

0

1

Pullup

Disabled

Enabled

No

0

1

0

Disabled

Disabled

Enabled

No

0

1

1

Disabled

Disabled

Enabled

No

1

X

X

Disabled

Enabled

Enabled

(1)X=Don’tcare

(2)DIR=0forinput,1foroutput

(3)PULDIS=0forenablingpullcontrol=1fordisablingpullcontrol

(4)PULSEL=0forpull-downfunctionality=1forpull-upfunctionality

1436

SerialCommunicationInterface(SCI)/LocalInterconnectNetwork(LIN)

SPNU499B–November2012–RevisedAugust2013

Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter27

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

Thischaptercontainsthedescriptionoftheserialcommunicationinterface(SCI)module.

Topic...........................................................................................................................Page

27.1Introduction...................................................................................................1438

27.2SCICommunicationFormats...........................................................................1440

27.3SCIInterrupts................................................................................................1445

27.4SCIDMAInterface..........................................................................................1448

27.5SCIConfigurations.........................................................................................1449

27.6SCILowPowerMode.....................................................................................1450

27.7SCIControlRegisters.....................................................................................1452

27.8GPIOFunctionality.........................................................................................1482

1437

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Introductionwww.ti.com

27.1Introduction

TheSCImoduleisauniversalasynchronousreceiver-transmitterthatimplementsthestandardnonreturn

tozeroformat.TheSCIcanbeusedtocommunicate,forexample,throughanRS-232portoroveraK-

line.

27.1.1SCIFeatures

ThefollowingarethefeaturesoftheSCImodule:

•Standarduniversalasynchronousreceiver-transmitter(UART)communication

•Supportsfull-orhalf-duplexoperation

•Standardnonreturntozero(NRZ)format

•Double-bufferedreceiveandtransmitfunctions

•Supportstwoindividuallyenabledinterruptlines:level0andlevel1

•Configurableframeformatof3to13bitspercharacterbasedonthefollowing:

–Datawordlengthprogrammablefromonetoeightbits

–Additionaladdressbitinaddress-bitmode

–Parityprogrammableforzerooroneparitybit,oddorevenparity

–Stopprogrammableforoneortwostopbits

•AsynchronousorisosynchronouscommunicationmodeswithnoCLKpin

•Twomultiprocessorcommunicationformatsallowcommunicationbetweenmorethantwodevices

•SleepmodeisavailabletofreeCPUresourcesduringmultiprocessorcommunicationandthenwake

uptoreceiveanincomingmessage

•The24-bitprogrammablebaudratesupports224differentbaudratesprovidehighaccuracybaudrate

selection

•CapabilitytouseDirectMemoryAccess(DMA)fortransmitandreceivedata

•FourerrorflagsandFivestatusflagsprovidedetailedinformationregardingSCIevents

•Twoexternalpins:SCIRXandSCITX

NOTE:SCImoduledoesnotsupportUARTHardwareFlowControl.Thisfeaturecanbe

implementedinSoftwareusingaGeneralPurposeI/Opin.

27.1.2BlockDiagram

ThreeMajorcomponentsoftheSCIModuleare:

•Transmitter

•BaudClockGenerator

•Receiver

Transmitter(TX)containstwomajorregisterstoperformdoublebuffering:

•Thetransmitterdatabufferregister(SCITD)containsdataloadedbytheCPUtobetransferredtothe

shiftregisterfortransmission.

•Thetransmittershiftregister(SCITXSHF)loadsdatafromthedatabuffer(SCITD)andshiftsdataonto

theSCITXpin,onebitatatime.

BaudClockGenerator

•AprogrammablebaudgeneratorproducesabaudclockscaledfromVBUSPCLK.

Receiver(RX)containstwomajorregisterstoperformdoublebuffering:

•Thereceivershiftregister(SCIRXSHF)shiftsdatainfromtheSCIRXpinonebitatatimeand

transferscompleteddataintothereceivedatabuffer.

•Thereceiverdatabufferregister(SCIRD)containsreceiveddatatransferredfromthereceivershift

register

1438

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




TXRDYTXEMPTYSCIFLR.8SCIFLR.11

TXINTENATXINT

TXWAKE

Addressbit†

Shiftregister

Transmitbuffer

18

LINRX

SCIGCR1.248

ReceivebufferSCIRD

RXRDYBRKDTSCIFLR.9SCIFLR.0

RXINTENA

RXWAKESCIFLR.12

RXINT

Shiftregister

WAKEUP

SCIFLR.1SCITD

SCITXSHFSCIRXSHF

ERRINT

SCIFLR24:26

SCIGCR1.25TXENA

SCIFLR.10

BRKDTINTENAWAKEUPINTENA

PEOE  FERECEIVERTRANSMITTERCLOCK

BaudclockSCIBAUDgenerator

Baudrateregisters

LINTX

RXENA

SCISETINT.9SCISETINT.0SCISETINT.1

SCIGCR1.5SCISETINT.8

SCI

VCLKPeripheral



www.ti.comIntroduction

TheSCIreceiverandtransmitteraredouble-buffered,andeachhasitsownseparateenableandinterrupt

bits.Thereceiverandtransmittermayeachbeoperatedindependentlyorsimultaneouslyinfullduplex

mode.

Toensuredataintegrity,theSCIchecksthedataitreceivesforbreaks,parity,overrun,andframing

errors.Thebitrate(baud)isprogrammabletoover16milliondifferentratesthrougha24-bitbaud-select

register.Figure27-1showsthedetailedSCIblockdiagram.

Figure27-1.DetailedSCIBlockDiagram

1439

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Start0(LSBit)1234567(MSBit)AddrParity

Start0(LSBit)1234567(MSBit)Parity

Idle-linemodeAddressbitmode

AddressbitStopStop



SCICommunicationFormatswww.ti.com

27.2SCICommunicationFormats

TheSCImodulecanbeconfiguredtomeettherequirementsofmanyapplications.Because

communicationformatsvarydependingonthespecificapplication,manyattributesoftheSCIareuser

configurable.Thelistbelowdescribestheseconfigurationoptions:

•SCIFrameformat

•SCITimingmodes

•SCIBaudrate

•SCIMultiprocessormodes

27.2.1SCIFrameFormats

TheSCIusesaprogrammableframeformat.Allframesconsistofthefollowing:

•Onestartbit

•Onetoeightdatabits

•Zerooroneaddressbit

•Zerooroneparitybit

•Oneortwostopbits

TheframeformatforboththetransmitterandreceiverisprogrammablethroughthebitsintheSCIGCR1

register.Bothreceiveandtransmitdataisinnonreturntozero(NRZ)format,whichmeansthatthe

transmitandreceivelinesareatlogichighwhenidle.Eachframetransmissionbeginswithastartbit,in

whichthetransmitterpullstheSCIlinelow(logiclow).Followingthestartbit,theframedataissentand

receivedleastsignificantbitfirst(LSB).

AnaddressbitispresentineachframeiftheSCIisconfiguredtobeinaddress-bitmodebutisnot

presentinanyframeiftheSCIisconfiguredforidle-linemode.Theformatofframeswithandwithoutthe

addressbitisillustratedinFigure27-2.

AparitybitispresentineveryframewhenthePARITYENAbitisset.Thevalueoftheparitybitdepends

onthenumberofonebitsintheframeandwhetheroddorevenparityhasbeenselectedviathePARITY

ENAbit.BothexamplesinFigure27-2haveparityenabled.

Allframesincludeonestopbit,whichisalwaysahighlevel.Thishighlevelattheendofeachframeis

usedtoindicatetheendofaframetoensuresynchronizationbetweencommunicatingdevices.Twostop

bitsaretransmittediftheSTOPbitinSCIGCR1registerisset.TheexamplesshowninFigure27-2use

onestopbitperframe.

Figure27-2.TypicalSCIDataFrameFormats

27.2.2SCITimingMode

TheSCIcanbeconfiguredtouseasynchronousorisosynchronoustimingusingTIMINGMODEbitin

SCIGCR1register.

1440

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Asynchronousbaudvalue=ForBAUD=0,Asynchronousbaudvalue=VBUSPCLKFrequency16BAUD + 1-----------------------------------------------------------------VCLKFrequency32-------------------------------------------------

16SCIbaudclockperiods/bit

Majorityvote

LSBofdata

StartbitSCIRX

Fallingedgedetected1  2  3  4  5  6  7  8  9 10 11 1213 14 15 16 1 2 3 4 5 6  7  8  9 10 11 12 13 14 15 161 2 3 4 5



www.ti.comSCICommunicationFormats

27.2.2.1AsynchronousTimingMode

Theasynchronoustimingmodeusesonlythereceiveandtransmitdatalinestointerfacewithdevices

usingthestandarduniversalasynchronousreceiver-transmitter(UART)protocol.

Intheasynchronoustimingmode,eachbitinaframehasadurationof16SCIbaudclockperiods.Each

bitthereforeconsistsof16samples(oneforeachclockperiod).WhentheSCIisusingasynchronous

mode,thebaudratesofallcommunicatingdevicesmustmatchascloselyaspossible.Receiveerrors

resultfromdevicescommunicatingatdifferentbaudrates.

Withthereceiverintheasynchronoustimingmode,theSCIdetectsavalidstartbitifthefirstfoursamples

afterafallingedgeontheSCIRXpinareoflogiclevel0.AssoonasafallingedgeisdetectedonSCIRX,

theSCIassumesthataframeisbeingreceivedandsynchronizesitselftothebus.

TopreventinterpretingnoiseasStartbitSCIexpectsSCIRXlinetobelowforatleastfourcontiguousSCI

baudclockperiodstodetectavalidstartbit.Thebusisconsideredidleifthisconditionisnotmet.Whena

validstartbitisdetected,theSCIdeterminesthevalueofeachbitbysamplingtheSCIRXlinevalue

duringtheseventh,eighth,andninthSCIbaudclockperiods.Amajorityvoteofthesethreesamplesis

usedtodeterminethevaluestoredintheSCIreceivershiftregister.Bysamplinginthemiddleofthebit,

theSCIreduceserrorscausedbypropagationdelaysandriseandfalltimesanddatalinenoises.

Figure27-3illustrateshowthereceiversamplesastartbitandadatabitinasynchronoustimingmode.

Thetransmittertransmitseachbitforadurationof16SCIbaudclockperiods.Duringthefirstclockperiod

forabit,thetransmittershiftsthevalueofthatbitontotheSCITXpin.Thetransmitterthenholdsthe

currentbitvalueonSCITXfor16SCIbaudclockperiods.

Figure27-3.AsynchronousCommunicationBitTiming

27.2.2.2IsosynchronousTimingMode

Inisosynchronoustimingmode,eachbitinaframehasadurationofexactly1baudclockperiodand

thereforeconsistsofasinglesample.Withthistimingconfiguration,thetransmitterandreceiverare

requiredtomakeuseoftheSCICLKpintosynchronizecommunicationwithotherSCI.Thismodeisnot

fullysupportedonthisdevicebecauseSCICLKpinisnotavailable.

27.2.3SCIBaudRate

TheSCIhasaninternallygeneratedserialclockdeterminedbytheperipheralVCLKandtheprescalers

BAUD.TheSCIusesthe24-bitintegerprescalerBAUDvalueofBRSRregistertoselecttherequired

baudrates.

Inasynchronoustimingmode,theSCIgeneratesabaudclockaccordingtothefollowingformula:

(56)

1441

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Isosynchronousbaudvalue=ForBAUD=0,Isosynchronousbaudvalue=VBUSPCLKFrequencyBAUD1+-----------------------------------------------------------------VCLKFrequency32-------------------------------------------------



SCICommunicationFormatswww.ti.com

Inisosynchronoustimingmode,theSCIgeneratesabaudclockaccordingtothefollowingformula:

(57)

27.2.4SCIMultiprocessorCommunicationModes

Insomeapplications,theSCImaybeconnectedtomorethanoneserialcommunicationdevice.Insucha

multiprocessorconfiguration,severalframesofdatamaybesenttoallconnecteddevicesortoan

individualdevice.Inthecaseofdatasenttoanindividualdevice,thereceivingdevicesmustdetermine

whentheyarebeingaddressed.Whenamessageisnotintendedforthem,thedevicescanignorethe

followingdata.WhenonlytwodevicesmakeuptheSCInetwork,addressingisnotneeded,so

multiprocessorcommunicationschemesarenotrequired.

SCIsupportstwomultiprocessorCommunicationModeswhichcanbeselectedusingCOMMMODEbit:

•Idle-LineMode

•AddressBitMode

WhentheSCIisnotusedinamultiprocessorenvironment,softwarecanconsiderallframesasdata

frames.Inthiscase,theonlydistinctionbetweentheidle-lineandaddress-bitmodesisthepresenceofan

extrabit(theaddressbit)ineachframesentwiththeaddress-bitprotocol.

TheSCIallowsfull-duplexcommunicationwheredatacanbesentandreceivedviathetransmitand

receivepinssimultaneously.However,theprotocolusedbytheSCIassumesthatonlyonedevice

transmitsdataonthesamebuslineatanyonetime.NoarbitrationisdonebytheSCI.

NOTE:AvoidTransmittingSimultaneouslyontheSameSerialBus

Thesystemdesignermustensurethatdevicesconnectedtothesameserialbuslinedonot

attempttotransmitsimultaneously.Iftwodevicesaretransmittingdifferentdata,theresulting

busconflictcoulddamagethedevice..

27.2.4.1Idle-LineMultiprocessorModes

Inidle-linemultiprocessormode,aframethatisprecededbyanidleperiod(10ormoreidlebits)isan

addressframe.Aframethatisprecededbyfewerthan10idlebitsisadataframe.Figure27-4illustrates

theformatofseveralblocksandframeswithidle-linemode.

Therearetwowaystotransmitanaddressframeusingidle-linemode:

Method1:Insoftware,deliberatelyleaveanidleperiodbetweenthetransmissionofthelastdataframeof

thepreviousblockandtheaddressframeofthenewblock.

Method2:ConfiguretheSCItoautomaticallysendanidleperiodbetweenthelastdataframeofthe

previousblockandtheaddressframeofthenewblock.

AlthoughMethod1isonlyaccomplishedbyadelayloopinsoftware,Method2canbeimplementedby

usingthetransmitbufferandtheTXWAKEbitinthefollowingmanner:

Step1:Writea1totheTXWAKEbit.

Step2:WriteadummydatavaluetotheSCITDregister.ThistriggerstheSCItobegintheidleperiodas

soonasthetransmittershiftregisterisempty.

Step3:WaitfortheSCItocleartheTXWAKEflag.

Step4:WritetheaddressvaluetoSCITD.

1442

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




AddressDataLastdata

StartStartStartAddressframeDataframeFewerthan10idlebitsIdleperiodOneblockofframes

Blocksseparatedby10ormoreidlebitsBlocksofframes

Dataformat(pinsSCIRX,SCITX)DataformatexpandedStop

StopStop

Dataframe

Parity

Parity

Parity



www.ti.comSCICommunicationFormats

AsindicatedbyStep3,softwareshouldwaitfortheSCItocleartheTXWAKEbit.However,theSCI

clearstheTXWAKEbitatthesametimeitsetsTXRDY(thatis,transfersdatafromSCITDinto

SCITXSHF).Therefore,iftheTXINTENAbitisset,thetransferofdatafromSCITDtoSCITXSHFcauses

aninterrupttobegeneratedatthesametimethattheSCIclearstheTXWAKEbit.Ifthisinterruptmethod

isused,softwareisnotrequiredtopolltheTXWAKEbitwaitingfortheSCItoclearit.

Whenidle-linemultiprocessorcommunicationsareused,softwaremustensurethattheidletimeexceeds

10bitperiodsbeforeaddresses(usingoneofthemethodsmentionedabove),andsoftwaremustalso

ensurethatdataframesarewrittentothetransmitterquicklyenoughtobesentwithoutadelayof10bit

periodsbetweenframes.Failuretocomplywiththeseconditionswillresultindatainterpretationerrorsby

otherdevicesreceivingthetransmission.

Figure27-4.Idle-LineMultiprocessorCommunicationFormat

1443

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




AddrDataAddr

StartStartAddressframe(address bit = 1)Dataframe(addressbit=0)Idletimeisofnosignificance

Oneblock

Severalblocksofframes

Dataformat(pinsSCIRX,SCITX)Dataformatexpanded

Start

1

0

1

Idletimeisnotsignificant

ParityStopParity

StopParityStop

Idletimeisofnosignificance

Addressframe(addressbit=1)



SCICommunicationFormatswww.ti.com

27.2.4.2Address-BitMultiprocessorMode

Intheaddress-bitprotocol,eachframehasanextrabitimmediatelyfollowingthedatafieldcalledan

addressbit.Aframewiththeaddressbitsetto1isanaddressframe;aframewiththeaddressbitsetto0

isadataframe.Theidleperiodtimingisirrelevantinthismode.Figure27-5illustratestheformatof

severalblocksandframeswiththeaddress-bitmode.

Whenaddress-bitmodeisused,thevalueoftheTXWAKEbitisthevaluesentastheaddressbit.To

sendanaddressframe,softwaremustsettheTXWAKEbit.Thisbitisclearedasthecontentsofthe

SCITDareshiftedfromtheTXWAKEregistersothatallframessentaredataexceptwhentheTXWAKE

bitiswrittenasa1.

NodummywritetoSCITDisrequiredbeforeanaddressframeissentinaddress-bitmode.Thefirstbyte

writtentoSCITDaftertheTXWAKEbitiswrittento1istransmittedwiththeaddressbitsetwhenaddress-

bitmodeisused.

Figure27-5.Address-BitMultiprocessorCommunicationFormat

1444

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




INT0

INT1

INT2

INT3

INT4

INT5

INT6

INT7

INT8

INT9

PriorityEncoder1

PriorityEncoder0

SCIINTFLR

SCISETINT

SCICLRINT

SCISETINTL

SCICLRL

INT1INT0

SCIINTVECT1

SCIINTVECT0

INT10

INT11

INT12

INT13

INT14

INT15

INT16



www.ti.comSCIInterrupts

27.3SCIInterrupts

TheSCImodulehastwointerruptlines,level0andlevel1,tothevectoredinterruptmanager(VIM)

module(seeFigure27-6).TwooffsetregistersSCIINTVECT0andSCIINTVECT1determinewhichflag

triggeredtheinterruptaccordingtotherespectivepriorityencoders.Eachinterruptconditionhasabitto

enable/disabletheinterruptintheSCISETINTandSCICLRINTregistersrespectively.

Eachinterruptalsohasabitthatcanbesetasinterruptlevel0(INT0)orasinterruptlevel1(INT1).By

default,interruptsareininterruptlevel0.SCISETINTLVLsetsagiveninterrupttolevel1.

SCICLEARINTLVLresetsagiveninterruptleveltothedefaultlevel0.

TheinterruptvectorregistersSCIINTVECT0andSCIINTVECT1returnthevectorofthependinginterrupt

lineINT0orINT1.Ifmorethanoneinterruptispending,theinterruptvectorregisterholdsthehighest

priorityinterrupt.

Figure27-6.GeneralInterruptScheme

1445

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




ENAINTx

INT1

...INT0

FLAGxINTxLVL

......

PriorityEncoder0

...

PriorityEncoder1

5-bitINTVECT0

5-bitINTVECT1



SCIInterruptswww.ti.com

Figure27-7.InterruptGenerationforGivenFlags

27.3.1TransmitInterrupt

Tousetransmitinterruptfunctionality,SETTXINTbitmustbeenabledandSETTXDMAbitmustbe

cleared.Thetransmitready(TXRDY)flagissetwhentheSCItransfersthecontentsofSCITDtotheshift

register,SCITXSHF.TheTXRDYflagindicatesthatSCITDisreadytobeloadedwithmoredata.In

addition,theSCIsetstheTXEMPTYbitifboththeSCITDandSCITXSHFregistersareempty.IftheSET

TXINTbitisset,thenatransmitinterruptisgeneratedwhentheTXRDYflaggoeshigh.TransmitInterrupt

isnotgeneratedimmediatelyaftersettingtheSETTXINTbitunliketransmitDMArequest.Transmit

InterruptisgeneratedonlyafterthefirsttransferfromSCITDtoSCITXSHF,thatisfirstdatahastobe

writtentoSCITDbytheUserbeforeanyinterruptgetsgenerated.Totransmitfurtherdatatheusercan

writedatatoSCITDinthetransmitInterruptserviceroutine.

WritingdatatotheSCITDregisterclearstheTXRDYbit.Whenthisdatahasbeenmovedtothe

SCITXSHFregister,theTXRDYbitissetagain.Theinterruptrequestcanbesuspendedbysettingthe

CLRTXINTbit;however,whentheSETTXINTbitisagainsetto1,theTXRDYinterruptisasserted

again.ThetransmitinterruptrequestcanbeeliminateduntilthenextseriesofvaluesiswrittentoSCITD,

bydisablingthetransmitterviatheTXENAbit,byasoftwareresetSWnRST,orbyadevicehardware

reset.

27.3.2ReceiveInterrupt

Thereceiveready(RXRDY)flagissetwhentheSCItransfersnewlyreceiveddatafromSCIRXSHFto

SCIRD.TheRXRDYflagthereforeindicatesthattheSCIhasnewdatatoberead.Receiveinterruptsare

enabledbytheSETRXINTbit.IftheSETRXINTissetwhentheSCIsetstheRXRDYflag,thena

receiveinterruptisgenerated.ThereceiveddatacanbereadintheInterruptServiceroutine.

OnadevicewithbothSCIandaDMAcontroller,thebitsSETRXDMAALLandSETRXDMAmustbe

clearedtoselectinterruptfunctionality.

27.3.3WakeUpInterrupt

SCIsetstheWAKEUPflagifbusactivityontheRXlineeitherpreventspower-downmodefrombeing

entered,orRXlineactivitycausesanexitfrompower-downmode.Ifenabled(SETWAKEUPINT),

wakeupinteruptistriggeredonceWAKEUPflagisset.

1446

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIInterrupts

27.3.4ErrorInterrupts

ThefollowingerrordetectionfeaturesaresupportedwithInterruptbytheSCImodule:

•Parityerrors(PE)

•Frameerrors(FE)

•BreakDetecterrors(BRKDT)

•Overrunerrors(OE)

Ifalloftheseerrors(PE,FE,BRKDT,OE)areflagged,aninterruptfortheflaggederrorswillbegenerated

ifenabled.Amessageisvalidforboththetransmitterandthereceiverifthereisnoerrordetecteduntil

theendoftheframe.Eachoftheseflagsislocatedinthereceiverstatus(SCIFLR)register.Further

detailsontheseflagsareexplainedinSCIFLRregisterdescription.

TheSCImodulesupportsfollowing7interruptsasseeninTable27-1.

Table27-1.SCIInterrupts

Offset(1)

Interrupt

0

Reserved

1

Wakeup

2

Reserved

3

Parityerror

4

Reserved

5

Reserved

6

Frameerror

7

Breakdetecterror

8

Reserved

9

Overrunerror

10

Reserved

11

Receive

12

Transmit

13-15

Reserved

(1)Offset1isthehighestpriority.Offset16isthelowestpriority.

1447

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIDMAInterfacewww.ti.com

27.4SCIDMAInterface

DMArequestsforreceive(RXDMArequest)andtransmit(TXDMArequest)areavailablefortheSCI

module.RefertotheDMAmodulechapterforDMAmoduleconfigurations.

27.4.1ReceiveDMARequests

ThisDMAfunctionalityisenabled/disabledbytheCPUusingtheSETRXDMA/CLRRXDMAbits,

respectively.

ThereceiverDMArequestissetwhenaframeisreceivedsuccessfullyandDMAfunctionalityhasbeen

previouslyenabled.TheRXRDYflagissetwhentheSCItransfersnewlyreceiveddatafromthe

SCIRXSHFregistertotheSCIRDbuffer.TheRXRDYflagthereforeindicatesthattheSCIhasnewdatato

beread.ReceiveDMArequestsareenabledbytheSETRXINTbit.

Parity,overrun,breakdetect,wake-up,andframingerrorsgenerateanerrorinterruptrequestimmediately

upondetection,ifenabled,evenifthedeviceisintheprocessofaDMAdatatransfer.TheDMAtransfer

ispostponeduntiltheerrorinterruptisserved.TheerrorinterruptcandeletethisparticularDMArequest

byreadingthereceivebuffer.

Inmultiprocessormode,theSCIcangeneratereceiverinterruptsforaddressframesandDMArequests

fordataframes.ThisiscontrolledbyanextraselectbitSETRXDMAALL.

IftheSETRXDMAALLbitissetandtheSETRXDMAbitissetwhentheSCIsetstheRXRDYflag,then

areceiveDMArequestisgeneratedforaddressanddataframes.

IftheSETRXDMAALLbitisclearedandtheSETRXDMAbitissetwhentheSCIsetstheRXRDYflag

uponreceiptofadataframe,thenareceiveDMArequestisgenerated.Receiveinterruptrequestsare

generatedforaddressframes.

InmultiprocessormodewiththeSLEEPbitset,noDMAisgeneratedforreceiveddataframes.The

softwaremustcleartheSLEEPbitbeforedataframescanbereceived.Table27-2specifiesthebitvalues

forDMArequestsinmultiprocessormodes.

Table27-2.DMAandInterruptRequestsinMultiprocessorModes

SETRXDMA

ADDRFRAME

ADDRFRAME

DATAFRAME

DATAFRAME

SETRXINT

SETRXDMA

ALL

INT

DMA

INT

DMA

0

0

x

N

N

N

N

0

1

0

Y

N

N

Y

0

1

1

N

Y

N

Y

1

0

x

Y

N

Y

N

1

1

0

Y

N

Y

Y

1

1

1

Y

Y

Y

Y

Inmultiprocessormode,theSCIcangeneratereceiverinterruptsforaddressframesandDMArequests

fordataframesorDMArequestsforboth.ThisiscontrolledbytheSETRXDMAALLbit.

InmultiprocessormodewiththeSLEEPbitset,noDMAisgeneratedforreceiveddataframes.The

softwaremustcleartheSLEEPbitbeforedataframescanbereceived.

27.4.2TransmitDMARequests

DMAfunctionalityisenabled/disabledbytheCPUwithSETTXDMA/CLRTXDMAbits,respectively.

TheTXRDYflagissetwhentheSCItransfersthecontentsofSCITDtoSCITXSHF.TheTXRDYflag

indicatesthatSCITDisreadytobeloadedwithmoredata.Inaddition,theSCIsetstheTXEMPTYbitif

boththeSCITDandSCITXSHFregistersareempty.

TransmitDMArequestsareenabledbythesettingSETTXDMAandSETTXINTbits.

IftheSETTXDMAbitisset,thenaTXDMArequestissenttotheDMAwhendataiswrittentoSCITD

andTXRDYisset.

TheDMAwillwritethefirstbytetothetransmitbuffer.

1448

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIConfigurations

27.5SCIConfigurations

BeforetheSCIsendsorreceivesdata,itsregistersshouldbeproperlyconfigured.Uponpower-upora

system-levelreset,eachbitintheSCIregistersissettoadefaultstate.Theregistersarewritableonly

aftertheRESETbitissetto1.OfparticularimportanceistheSWnRSTbit.Thisactive-lowbitisinitialized

to0andkeepstheSCIinaresetstateuntilitisprogrammedto1.Therefore,allSCIconfigurationshould

becompletedbeforea1(one)iswrittentotheSWnRSTbit.

Thefollowinglistdetailstheconfigurationstepsthatsoftwareshouldperformpriortothetransmissionor

receptionofdata.AslongasSWnRSTisheldlowtheentiretimethattheSCIisbeingconfigured,the

orderinwhichtheregistersareprogrammedisnotimportant.

•EnableSCIbysettingRESETbit.

•ClearSWnRSTto0beforeconfiguringtheSCI.

•SelectthedesiredframeformatbyprogrammingSCIGCR1.

•ConfiguretheSCIRXandSCITXpinsforSCIfunctionalitybysettingtheRXFUNCandTXFUNCbit.

•SelectthebaudratetobeusedforcommunicationbyprogrammingBRSR.

•SelectinternalclockbyprogrammingtheCLOCKbit.

•SettheCONTbittomakeSCInottohaltforanemulationbreakpointuntilitscurrentreceptionor

transmissioniscomplete(thisbitisusedonlyinanemulationenvironment).

•SetLOOPBACKbittoconnectthetransmittertothereceiverinternally(thisfeatureisusedtoperform

aself-test).

•SelectthereceiverenableRXENAbitifdataistobereceived.

•SelectthetransmitenableTXENAbitifdataistobetransmitted.

•SetSWnRSTto1aftertheSCIisconfigured.

•PerformReceiveorTransmitdata(seeSection27.5.1/Section27.5.2).

27.5.1ReceivingData

TheSCIreceiverisenabledtoreceivemessagesiftheRXFUNCbitandtheRXENAbitaresetto1.If

theRXFUNCbitisnotset,theSCIRXpinfunctionsasageneralpurposeI/OpinratherthanasanSCI

functionpin.Afteravalididleperiodisdetected,dataisautomaticallyreceivedasitarrivesontheSCIRX

pin.

SCIsetstheRXRDYbitwhenittransfersnewlyreceiveddatafromSCIRXSHFtoSCIRD.TheSCIclears

theRXRDYbitafterthenewdatainSCIRDhasbeenread.Also,asdataistransferredfromSCIRXSHF

toSCIRD,theSCIsetsFE,OE,orPEifanyoftheseerrorconditionsweredetectedinthereceiveddata.

TheseerrorconditionsaresupportedwithconfigurableInterruptcapability.Thewake-upandbreak-detect

statusbitsarealsosetifoneoftheseerrorsoccurs,buttheydonotnecessarilyoccuratthesametime

thatnewdataisbeingloadedintoSCIRD.

Usercanreceivedataby:

1.PollingReceiveReadyFlag

2.ReceiveInterrupt

3.DMA

Inpollingmethod,softwarecanpollforRXRDYbitandreadthedatafromSCIRDregisteronceRXRDYis

sethigh.CPUisunnecessarlyoverloadedbyselectingPollingmode.Toavoidthisusercanuseeither

InterruptorDMAmethod.TouseinterruptmethodSETRXINTbitshouldbesetandtouseDMASETRX

DMAbitshouldbeset.EitheranInterruptoraDMArequestisgeneratedthemomentRXRDYisset.

1449

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCILowPowerModewww.ti.com

27.5.2TransmittingData

TheSCItransmitterisenablediftheTXFUNCbitandtheTXENAbitaresetto1.IftheTXFUNCbitis

notset,theSCITXpinfunctionsasageneralpurposeI/OpinratherthanasanSCIfunctionpin.Any

valuewrittentotheSCITDbeforeTXENAissetto1isnottransmitted.Bothofthesecontrolbitsallowfor

theSCItransmittertobeheldinactiveindependentlyofthereceiver.

SCIwaitsfordatatobewrittentoSCITD,transfersittoSCITXSHF,andtransmitsit.TheflagsTXRDY

andTXEMPTYindicatethestatusofthetransmitbuffers.Thatis,whenthetransmitterisreadyfordatato

bewrittentoSCITD,theTXRDYbitisset.Additionally,ifbothSCITDandSCITXSHFareempty,thenthe

TXEMPTYbitisalsoset.

Usercantransmitdataby:

1.PollingTransmitReadyFlag

2.ReceiveInterrupt

3.DMA

Inpollingmethod,softwarecanpollforTXRDYbittogohighbeforewritingthedatatoSCITDregister.

CPUisunnecessarlyoverloadedbydoingthisPollingmethod.ToavoidthisusercanuseeitherInterrupt

orDMAmethod.TouseinterruptmethodSETTXINTbitshouldbesetandtouseDMASETTXDMAbit

shouldbeset.EitheranInterruptoraDMArequestisgeneratedthemomentTXRDYisset.Whenthe

SCIhascompletedtransmissionofallpendingframes,theSCITXSHFregisterandSCITDareempty,the

TXRDYbitisset,andaninterrupt/DMArequestisgenerated,ifenabled.Becausealldatahasbeen

transmitted,theinterrupt/DMArequestshouldbehalted.Thiscanbedonebyeitherdisablingthetransmit

interrupt(CLRTXINT)/DMArequest(CLRTXDMAbit)orbydisablingthetransmitter(clearTXENAbit).

NOTE:TheTXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0orSCIINTVECT1register.

27.6SCILowPowerMode

TheSCIcanbeputineitherlocalorgloballow-powermode.Globallow-powermodeisassertedbythe

systemandisnotcontrolledbytheSCI.Duringgloballow-powermode,allclockstotheSCIareturnedoff

sothemoduleiscompletelyinactive.

Locallow-powermodeisassertedbysettingthePOWERDOWNbit;settingthisbitstopstheclockstothe

SCIinternallogicandthemoduleregisters.SettingthePOWERDOWNbitcausestheSCItoenterlocal

low-powermodeandclearingthePOWERDOWNbitcausesSCItoexitfromlocallow-powermode.All

theregistersareaccessibleduringlocalpower-downmodeasanyregisteraccessenablestheclockto

SCIforthatparticularaccessalone.

Thewake-upinterruptisusedtoallowtheSCItoexitlow-powermodeautomaticallywhenalowlevelis

detectedontheSCIRXpinandalsothisclearsthePOWERDOWNbit.Ifwake-upinterruptisdisabled,

thentheSCIimmediatelyenterslow-powermodewheneveritisrequestedandalsoanyactivityonthe

SCIRXpindoesnotcausetheSCItoexitlow-powermode.

NOTE:EnablingLocalLow-PowerModeDuringReceiveandTransmit

Ifthewake-upinterruptisenabledandlow-powermodeisrequestedwhilethereceiveris

receivingdata,thentheSCIimmediatelygeneratesawake-upinterrupttoclearthe

powerdownbitandpreventstheSCIfromenteringlow-powermodeandthuscompletesthe

currentreception.Otherwise,ifthewake-upinterruptisdisabled,thentheSCIcompletesthe

currentreceptionandthenentersthelow-powermode.

1450

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCILowPowerMode

27.6.1SleepModeforMultiprocessorCommunication

WhentheSCIreceivesdataandtransfersthatdatafromSCIRXSHFtoSCIRD,theRXRDYbitissetand

ifRXINTENAisset,theSCIalsogeneratesaninterrupt.TheinterrupttriggerstheCPUtoreadthenewly

receivedframebeforeanotheroneisreceived.Inmultiprocessorcommunicationmodes,thisdefault

behaviormaybeenhancedtoprovideselectiveindicationofnewdata.WhenSCIreceivesanaddress

framethatdoesnotmatchitsaddress,thedevicecanignorethedatafollowingthisnon-matchingaddress

untilthenextaddressframebyusingsleepmode.Sleepmodecanbeusedwithbothidle-lineand

address-bitmultiprocessormodes.

IfsleepmodeisenabledbytheSLEEPbit,thentheSCItransfersdatafromSCIRXSHFtoSCIRDonlyfor

addressframes.Therefore,insleepmode,alldataframesareassembledintheSCIRXSHFregister

withoutbeingshiftedintotheSCIRDandwithoutinitiatingareceiveinterruptorDMArequest.Upon

receptionofanaddressframe,thecontentsoftheSCIRXSHFaremovedintoSCIRD,andthesoftware

mustreadSCIRDanddetermineiftheSCIisbeingaddressedbycomparingthereceivedaddressagainst

theaddresspreviouslysetinthesoftwareandstoredsomewhereinmemory(theSCIdoesnothave

hardwareavailableforaddresscomparison).IftheSCIisbeingaddressed,thesoftwaremustclearthe

SLEEPbitsothattheSCIwillloadSCIRDwiththedataofthedataframesthatfollowtheaddressframe.

WhentheSCIhasbeenaddressedandsleepmodehasbeendisabled(insoftware)toallowthereceiptof

data,theSCIshouldchecktheRXWAKEbit(SCIFLR.12)todeterminewhenthenextaddresshasbeen

received.Thisbitissetto1ifthecurrentvalueinSCIRDisanaddressandsetto0ifSCIRDcontains

data.IftheRXWAKEbitisset,thensoftwareshouldchecktheaddressinSCIRDagainstitsownaddress.

Ifitisstillbeingaddressed,thensleepmodeshouldremaindisabled.Otherwise,theSLEEPbitshouldbe

setagain.

Followingisasequenceofeventstypicalofsleepmodeoperation:

•TheSCIisconfiguredandbothsleepmodeandreceiveactionsareenabled.

•Anaddressframeisreceivedandareceiveinterruptisgenerated.

•Softwarecomparesthereceivedaddressframeagainstthatsetbysoftwareanddeterminesthatthe

SCIisnotbeingaddressed,sothevalueoftheSLEEPbitisnotchanged.

•SeveraldataframesareshiftedintoSCIRXSHF,butnodataismovedtoSCIRDandnoreceive

interruptsaregenerated.

•Anewaddressframeisreceivedandareceiveinterruptisgenerated.

•Softwarecomparesthereceivedaddressframeagainstthatsetbysoftwareanddeterminesthatthe

SCIisbeingaddressedandclearstheSLEEPbit.

•DatashiftedintoSCIRXSHFistransferredtoSCIRD,andareceiveinterruptisgeneratedaftereach

dataframeisreceived.

•Ineachinterruptroutine,softwarechecksRXWAKEtodetermineifthecurrentframeisanaddress

frame.

•Anotheraddressframeisreceived,RXWAKEisset,softwaredeterminesthattheSCIisnotbeing

addressedandsetstheSLEEPbitbackto1.Noreceiveinterruptsaregeneratedforthedataframes

followingthisaddressframe.

Byignoringdataframesthatarenotintendedforthedevice,fewerinterruptsaregenerated.These

interruptswouldotherwiserequireCPUinterventiontoreaddatathatisofnosignificancetothisspecific

device.UsingsleepmodecanhelpfreesomeCPUresources.

ExceptfortheRXRDYflag,theSCIcontinuestoupdatethereceiverstatusflags(seeTable27-11)while

sleepmodeisactive.Inthisway,ifanerroroccursonthereceiveline,anapplicationcanimmediately

respondtotheerrorandtaketheappropriatecorrectiveaction.

BecausetheRXRDYbitisnotupdatedfordataframeswhensleepmodeisenabled,theSCIcanenable

sleepmodeanduseapollingalgorithmifdesired.Inthiscase,whenRXRDYisset,softwareknowsthata

newaddresshasbeenreceived.IftheSCIisnotbeingaddressed,thenthesoftwareshouldnotchange

thevalueoftheSLEEPbitandshouldcontinuetopollRXRDY.

1451

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7SCIControlRegisters

Theseregistersareaccessiblein8-,16-,and32-bitreadsorwrites.TheSCIiscontrolledandaccessed

throughtheregisterslistedinTable27-3.AmongthefeaturesthatcanbeprogrammedaretheSCI

communicationandtimingmodes,baudratevalue,frameformat,DMArequests,andinterrupt

configuration.

Table27-3.SCIControlRegistersSummary

Offset

Acronym

RegisterDescription

Section

00

SCIGCR0

SCIGlobalControlRegister0

Section27.7.1

04h

SCIGCR1

SCIGlobalControlRegister1

Section27.7.2

0Ch

SCISETINT

SCISetInterruptRegister

Section27.7.3

10h

SCICLEARINT

SCIClearInterruptRegister

Section27.7.4

14h

SCISETINTLVL

SCISetInterruptLevelRegister

Section27.7.5

18h

SCICLEARINTLVL

SCIClearInterruptLevelRegister

Section27.7.6

1Ch

SCIFLR

SCIFlagsRegister

Section27.7.7

20h

SCIINTVECT0

SCIInterruptVectorOffset0

Section27.7.8

24h

SCIINTVECT1

SCIInterruptVectorOffset1

Section27.7.9

28h

SCIFORMAT

SCIFormatControlRegister

Section27.7.10

2Ch

BRS

BaudRateSelectionRegister

Section27.7.11

30h

SCIED

ReceiverEmulationDataBuffer

Section27.7.12.1

34h

SCIRD

ReceiverDataBuffer

Section27.7.12.2

38h

SCITD

TransmitDataBuffer

Section27.7.12.3

3Ch

SCIPIO0

SCIPinI/OControlRegister0

Section27.7.13

40h

SCIPIO1

SCIPinI/OControlRegister1

Section27.7.14

44h

SCIPIO2

SCIPinI/OControlRegister2

Section27.7.15

48h

SCIPIO3

SCIPinI/OControlRegister3

Section27.7.16

4Ch

SCIPIO4

SCIPinI/OControlRegister4

Section27.7.17

50h

SCIPIO5

SCIPinI/OControlRegister5

Section27.7.18

54h

SCIPIO6

SCIPinI/OControlRegister6

Section27.7.19

58h

SCIPIO7

SCIPinI/OControlRegister7

Section27.7.20

5Ch

SCIPIO8

SCIPinI/OControlRegister8

Section27.7.21

90h

IODFTCTRL

Input/OutputErrorEnableRegister

Section27.7.22

1452

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.1SCIGlobalControlRegister0(SCIGCR0)

TheSCIGCR0registerdefinesthemodulereset.Figure27-8andTable27-4illustratethisregister.

Figure27-8.SCIGlobalControlRegister0(SCIGCR0)[offset=00]

31

16

Reserved

R-0

15

1

0

Reserved

RESET

R-0

RWP-0

LEGEND:R/W=Read/Write;R=Readonly;RWP=Read/Writeinprivilegedmodeonly;-n=valueafterreset

Table27-4.SCIGlobalControlRegister0(SCIGCR0)FiedDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

RESET

ThisbitresetstheSCImodule.

0

SCImoduleisinreset.

1

SCImoduleisoutofreset.

Note:Read/Writeinprivilegedmodeonly.

1453

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.2SCIGlobalControlRegister1(SCIGCR1)

TheSCIGCR1registerdefinestheframeformat,protocol,andcommunicationmodeusedbytheSCI.

Figure27-9andTable27-5illustratethisregister.

Figure27-9.SCIGlobalControlRegister1(SCIGCR1)[offset=04h]

31

26

25

24

Reserved

TXENA

RXENA

R-0

R/W-0

R/W-0

23

18

17

16

Reserved

CONT

LOOPBACK

R-0

R/W-0

R/W-0

15

10

9

8

Reserved

POWERDOWN

SLEEP

R-0

R/WP-0

R/W-0

7

6

5

4

3

2

1

0

SWnRST

Reserved

CLOCK

STOP

PARITY

PARITYENA

TIMINGMODE

COMMMODE

R/W-0

R-0

R/W-0

R/WC-0

R/WC-0

R/W-0

R/WC-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;WC=Writeinsci-compatiblemodeonly;-n=valueafter

reset

NOTE:TheSCIGCR1ControlRegisterBitsshouldnotbechangedduringFrameTransmissionor

Reception..

Table27-5.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Readreturns0.Writeshavenoeffect.

25

TXENA

Transmitenable.DataistransferredfromSCITDtotheSCITXSHFshiftoutregisteronlywhenthe

TXENAbitisset.

0

DisabletransfersfromSCITDtoSCITXSHF.

1

EnableSCItotransferdatafromSCITDtoSCITXSHF.

Note:DatawrittentoSCITDorthetransmitmulti-bufferbeforeTXENAissetisnot

transmitted.IfTXENAisclearedwhiletransmissionisongoing,thedatapreviouslywritten

toSCITDissent.

24

RXENA

Receiveenable.RXENAallowsorpreventsthetransferofdatafromSCIRXSHFtoSCIRD.

0

Thereceiverwillnottransferdatafromtheshiftbuffertothereceivebuffe.

1

Thereceiverwilltransferdatafromtheshiftbuffertothereceivebuffer.

Note:ClearingRXENAstopsreceivedcharactersfrombeingtransferredintothereceive

bufferormulti-buffers,preventstheRXstatusflags(seeTable27-4)frombeingupdatedby

receivedata,andinhibitsbothreceiveanderrorinterrupts.However,theshiftregister

continuestoassembledataregardlessofthestateofRXENA.

Note:IfRXENAisclearedbeforeaframeiscompletelyreceived,thedatafromtheframeis

nottransferredintothereceivebuffer.

Note:IfRXENAissetbeforeaframeiscompletelyreceived,thedatafromtheframeis

transferredintothereceivebuffer.IfRXENAissetwhileSCIRXSHFisintheprocessof

assemblingaframe,thestatusflagsarenotguaranteedtobeaccurateforthatframe.To

ensurethatthestatusflagscorrectlyreflectwhatwasdetectedonthebusduringa

particularframe,RXENAshouldbesetbeforethedetectionofthatframe.

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17

CONT

Continueonsuspend.Thisbithasaneffectonlywhenaprogramisbeingdebuggedwithan

emulator,anditdetermineshowtheSCIoperateswhentheprogramissuspended.The

0

Whendebugmodeisentered,theSCIstatemachineisfrozen.Transmissionsarehaltedand

resumewhendebugmodeisexited.

1

Whendebugmodeisentered,theSCIcontinuestooperateuntilthecurrenttransmitandreceive

functionsarecomplete.

1454

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

Table27-5.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions(continued)

Bit

Field

Value

Description

16

LOOPBACK

Loopbackbit.Theself-checkingoptionfortheSCIcanbeselectedwiththisbit.IftheSCITXand

SCIRXpinsareconfiguredwithSCIfunctionality,thentheSCITXpinisinternallyconnectedtothe

SCIRXpin.Externally,duringloopbackoperation,theSCITXpinoutputsahighvalueandthe

SCIRXpinisinahigh-impedancestate.IfthisbitvalueischangedwhiletheSCIistransmittingor

receivingdata,errorsmayresult.

0

Loopbackmodeisdisabled.

1

Loopbackmodeisenabled.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

POWERDOWN

Powerdown.WhenthePOWERDOWNbitisset,theSCIattemptstoenterlocallow-powermode.

IfthePOWERDOWNbitissetwhilethereceiverisactivelyreceivingdataandthewake-up

interruptisenabled,thentheSCIimmediatelyassertsanerrorinterrupttopreventlow-powermode

frombeingentered.OnlyPrivilegemodewritesallowed.

0

Normaloperation.

1

Low-powermodeisenabled.

8

SLEEP

SCIsleep.Inamultiprocessorconfiguration,thisbitcontrolsthereceivesleepfunction.Clearing

thisbitbringstheSCIoutofsleepmode.

0

Sleepmodeisdisabled.

1

Sleepmodeisenabled.

Note:ThereceiverstilloperateswhentheSLEEPbitisset;however,RXRDYisupdatedand

SCIRDisloadedwithnewdataonlywhenanaddressframeisdetected.Theremaining

receiverstatusflags(seeTable27-4)areupdatedandanerrorinterruptisrequestedifthe

correspondinginterruptenablebitisset,regardlessofthevalueoftheSLEEPbit.Inthis

way,ifanerrorisdetectedonthereceivedatalinewhiletheSCIisasleep,softwarecan

promptlydealwiththeerrorcondition.

Note:TheSLEEPbitisnotautomaticallyclearedwhenanaddressbyteisdetected.

SeeSection27.6formoreinformationonusingtheSLEEPbitformultiprocessorcommunication.

7

SWnRST

Softwarereset(activelow).ThisbitiseffectiveinLINandSCImodes.

0

TheSCIisinitsresetstate;nodatawillbetransmittedorreceived.Writinga0tothisbitinitializes

theSCIstatemachinesandoperatingflagsasdefinedinTable27-11andTable27-12.Allaffected

logicisheldintheresetstateuntila1iswrittentothisbit.

1

TheSCIisinitsreadystate;transmissionandreceptioncanbedone.Afterthisbitissetto1,the

configurationofthemoduleshouldnotchange.

Note:TheSCIshouldonlybeconfiguredwhileSWnRESET=0.

6

Reserved

0

Readreturns0.Writeshavenoeffect.

5

CLOCK

SCIinternalclockenable.TheCLOCKbitdeterminesthesourceofthemoduleclockonthe

SCICLKpin.

0

TheexternalSCICLKistheclocksource.

1

TheinternalSCICLKistheclocksource.

Note:Ifanexternalclockisselected,thentheinternalbaudrategeneratorandbaudrate

registersarebypassed.ThemaximumfrequencyallowedforanexternallysourcedSCIclock

isVCLK/16.

4

STOP

SCInumberofstopbitsperframe.

0

Onestopbitisused.

1

Twostopbitsareused.

Note:Thereceiverchecksforonlyonestopbit.Howeverinidle-linemode,thereceiver

waitsuntiltheendofthesecondstopbit(ifSTOP=1)tobegincheckingforanidleperiod.

1455

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

Table27-5.SCIGlobalControlRegister1(SCIGCR1)FieldDescriptions(continued)

Bit

Field

Value

Description

3

PARITY

SCIparityodd/evenselection.IfthePARITYENAbitisset,PARITYdesignatesoddorevenparity.

0

Oddparityisused.

1

Evenparityisused.

Theparitybitiscalculatedbasedonthedatabitsineachframeandtheaddressbit(in

address-bitmode).Thestartandstopfieldsintheframearenotincludedintheparity

calculation.

Foroddparity,theSCItransmitsandexpectstoreceiveavalueintheparitybitthatmakes

oddthetotalnumberofbitsintheframewiththevalueof1.

Forevenparity,theSCItransmitsandexpectstoreceiveavalueintheparitybitthatmakes

eventhetotalnumberofbitsintheframewiththevalueof1.

2

PARITYENA

Parityenable.Thisbitenablesordisablestheparityfunction.

0

Parityisdisabled;noparitybitisgeneratedduringtransmissionorisexpectedduringreception.

1

Parityisenabled.Aparitybitisgeneratedduringtransmissionandisexpectedduringreception.

1

TIMINGMODE

SCItimingmodebit.

0

Synchronoustimingisused.

1

Asynchronoustimingisused.

0

COMMMODE

SCIcommunicationmodebit.

0

Idle-linemodeisused.

1

Address-bitmodeisused.

1456

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.3SCISetInterruptRegister(SCISETINT)

Figure27-10andTable27-6illustratethisregister.SCISETINTregisterisusedtoenabletherequired

interruptssupportedbythemodule.

Figure27-10.SCISetInterruptRegister(SCISETINT)[offset=0Ch]

31

27

26

25

24

Reserved

SETFEINT

SETOEINT

SETPEINT

R-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

Reserved

SETRXDMAALL

SETRXDMA

SETTXDMA

R-0

R/WC-0

R/W-0

R/W-0

15

10

9

8

Reserved

SETRXINT

SETTXINT

R-0

R/W-0

R/W-0

7

2

1

0

Reserved

SETWAKEUPINT

SETBRKDTINT

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=Writeinsci-compatiblemodeonly;-n=valueafterreset

Table27-6.SCISetInterruptRegister(SCISETINT)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

SETFEINT

Setframing-errorinterrupt.SettingthisbitenablestheSCImoduletogenerateaninterrupt

whenaframingerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

25

SETOEINT

Setoverrun-errorinterrupt.SettingthisbitenablestheSCImoduletogenerateaninterrupt

whenanoverrunerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

24

SETPEINT

Setparityinterrupt.SettingthisbitenablestheSCImoduletogenerateaninterruptwhena

parityerroroccurs.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

SETRXDMAALL

SetreceiveDMAall.Thisbitdeterminesifaseparateinterruptisgeneratedfortheaddress

framessentinmultiprocessorcommunications.Whenthisbitis0,RXinterruptrequestsare

generatedforaddressframesandDMArequestsaregeneratedfordataframes.Whenthisbit

is1,RXDMArequestsaregeneratedforbothaddressanddataframes.

0

Read:TheDMArequestisdisabledforaddressframes(thereceiveinterruptrequestisenabled

foraddressframes).

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheDMArequestisenabledforaddressanddataframes

17

SETRXDMA

SetreceiverDMA.ToenablereceiverDMArequests,thisbitmustbeset.Ifitiscleared,

interruptrequestsaregenerateddependingonbitSCISETINT.

0

Read:TheDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheDMArequestisenabledforaddressanddataframes

1457

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

Table27-6.SCISetInterruptRegister(SCISETINT)FieldDescriptions(continued)

Bit

Field

Value

Description

16

SETTXDMA

SettransmitDMA.ToenableDMArequestsforthetransmitter,thisbitmustbeset.Ifitis

cleared,interruptrequestsaregenerateddependingonSETTXINTbit(SCISETINT).

0

Read:TransmitDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TransmitDMArequestisenabled.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

SETRXINT

Receiverinterruptenable.SettingthisbitenablestheSCItogenerateareceiveinterruptaftera

framehasbeencompletelyreceivedandthedataisbeingtransferredfromSCIRXSHFto

SCIRD.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

8

SETTXINT

Settransmitterinterrupt.SettingthisbitenablestheSCItogenerateatransmitinterruptasdata

isbeingtransferredfromSCITDtoSCITXSHFandtheTXRDYbitisbeingset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SETWAKEUPINT

Setwakeupinterrupt.SettingthisbitenablestheSCItogenerateawakeupinterruptand

therebyexitlowpowermode.Ifenabled,thewakeupinterruptisassertedwhenlocallowpower

modeisrequestedwhilethereceiverisbusyorifalowlevelisdetectedontheSCIRXpin

duringlowpowermode.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

0

SETBRKDTINT

Setbreakdetectinterrupt.SettingthisbitenablestheSCItogenerateanerrorinterruptifa

breakconditionisdetectedontheSCIRXpin.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:Theinterruptisenabled.

1458

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.4SCIClearInterruptRegister(SCICLEARINT)

Figure27-11andTable27-7illustratethisregister.SCICLEARINTregisterisusedtocleartheselected

enabledinterruptswithoutaccessingSCISETINTregister.

Figure27-11.SCIClearInterruptRegister(SCICLEARINT)[offset=10h]

31

27

26

25

24

Reserved

CLRFEINT

CLROEINT

CLRPEINT

R-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

Reserved

CLRRXDMAALL

CLRRXDMA

CLRTXDMA

R-0

R/WC-0

R/W-0

R/W-0

15

10

9

8

Reserved

CLRRXINT

CLRTXINT

R-0

R/W-0

R/W-0

7

2

1

0

Reserved

CLRWAKEUPINT

CLRBRKDTINT

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=Writeinsci-compatiblemodeonly;-n=valueafterreset

Table27-7.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

CLRFEINT

Clearframing-errorinterrupt.Thisbitdisablestheframing-errorinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

25

CLRCEINT

Clearoverrun-errorinterrupt.ThisbitdisablestheSCIoverrunerrorinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

24

CLRPEINT

Clearparityinterrupt.Thisbitdisablestheparityerrorinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

CLRRXDMAALL

ClearreceiveDMAall.ThisbitclearsthereceiveDMArequestforaddressframeswhenset.

OnlyreceivedataframesgenerateaDMArequest.

0

Read:ReceiveDMArequestforaddressframesisdisabled;Instead,RXinterruptrequestsare

enabledforaddressframes.ReceiveDMArequestsarestillenabledfordataframes.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThereceiveDMArequestforaddressanddataframesisenabled.

Write:ThereceiveDMArequestforaddressanddataframesisdisabled.

17

CLRRXDMA

ClearreceiveDMArequest.ThisbitdisablesthereceiveDMArequestwhenset.

0

Read:TheDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThereceiveDMArequestisenabled.

Write:ThereceiveDMArequestforisdisabled.

1459

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

Table27-7.SCIClearInterruptRegister(SCICLEARINT)FieldDescriptions(continued)

Bit

Field

Value

Description

16

CLRTXDMA

CleartransmitDMArequest.ThisbitdisablesthetransmitDMArequestwhenset.

0

Read:TransmitDMArequestisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThetransmitDMArequestisenabled.

Write:ThetransmitDMArequestforisdisabled.

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

CLRRXINT

Clearreceiverinterrupt.Thisbitdisablesthereceiverinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

8

CLRTXINT

Cleartransmitterinterrupt.Thisbitdisablesthetransmitterinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

CLRWAKEUPINT

Clearwakeupinterrupt.Thisbitdisablesthewakeupinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

0

CLRBRKDTINT

Clearbreakdetectinterrupt.Thisbitdisablesthebreak-detectinterruptwhenset.

0

Read:Theinterruptisdisabled.

Write:Writinga0tothisbithasnoeffect.

1

Read:Theinterruptisenabled.

Write:Theinterruptisdisabled.

1460

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.5SCISetInterruptLevelRegister(SCISETINTLVL)

Figure27-12andTable27-8illustratethisregister.Thisregisterisusedtosettheinterruptlevelforthe

supportedinterrupts.

Figure27-12.SCISetInterruptLevelRegister(SCISETINTLVL)[offset=14h]

31

27

26

25

24

Reserved

SETFEINTLVL

SETOEINTLVL

SETPEINTLVL

R-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

SETRXDMA

Reserved

Reserved

ALLINTLVL

R-0

R/WC-0

R-0

15

10

9

8

Reserved

SETRXINTLVL

SETTXINTLVL

R-0

R/W-0

R/W-0

7

2

1

0

SETWAKEUP

SETBRKDT

Reserved

INTLVL

INTLVL

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=Writeinsci-compatiblemodeonly;-n=valueafterreset

Table27-8.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

SETFEINTLVL

Setframing-errorinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

25

SETCEINTLVL

Setoverrun-errorinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

24

SETPEINTLVL

Setparityerrorinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

SETRXDMAALLLVL

SetreceiveDMAallinterruptlevels.

0

Read:ThereceiveinterruptrequestforaddressframesismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:ThereceiveinterruptrequestforaddressframesismappedtotheINT1line.

17-14

Reserved

0

Readreturns0.Writeshavenoeffect.

9

SETRXINTLVL

Setreceiverinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

8

SETTXINTLVL

Settransmitterinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

1461

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

Table27-8.SCISetInterruptLevelRegister(SCISETINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SETWAKEUPINTLVL

Setwakeupinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

0

SETBRKDTINTLVL

Setbreakdetectinterruptlevel.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Readorwrite:TheinterruptlevelismappedtotheINT1line.

27.7.6SCIClearInterruptLevelRegister(SCICLEARINTLVL)

Figure27-13andTable27-9illustratethisregister.

Figure27-13.SCIClearInterruptLevelRegister(SCICLEARINTLVL)[offset=18h]

31

27

26

25

24

Reserved

CLRFEINTLVL

CLROEINTLVL

CLRPEINTLVL

R-0

R/W-0

R/W-0

R/W-0

23

19

18

17

16

CLRRXDMA

Reserved

Reserved

ALLINTLVL

R-0

R/WC-0

R-0

15

10

9

8

Reserved

CLRRXINTLVL

CLRTXINTLVL

R-0

R/W-0

R/W-0

7

2

1

0

CLRWAKE

CLRBRKDT

Reserved

UPINTLVL

INTLVL

R-0

R/W-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=Writeinsci-compatiblemodeonly;-n=valueafterreset

Table27-9.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

CLRFEINTLVL

Clearframing-errorinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

25

CLRCEINTLVL

Clearoverrun-errorinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

1462

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

Table27-9.SCIClearInterruptLevelRegister(SCICLEARINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

24

CLRPEINTLVL

Clearparityinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

23-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

CLRRXDMAALLLVL

ClearreceiveDMAinterruptlevel.

0

Read:ThereceiveinterruptrequestforaddressframesismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:ThereceiveinterruptrequestforaddressframesismappedtotheINT1line.

Write:ThereceiveinterruptrequestforaddressframesismappedtotheINT0line.

17-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

CLRRXINTLVL

Clearreceiverinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

8

CLRTXINTLVL

Cleartransmitterinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

CLRWAKEUPINTLVL

Clearwakeupinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

0

CLRBRKDTINTLVL

Clearbreakdetectinterrupt.

0

Read:TheinterruptlevelismappedtotheINT0line.

Write:Writinga0tothisbithasnoeffect.

1

Read:TheinterruptlevelismappedtotheINT1line.

Write:TheinterruptlevelismappedtotheINT0line.

1463

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.7SCIFlagsRegister(SCIFLR)

Figure27-14andTable27-10illustratethisregister.

Figure27-14.SCIFlagsRegister(SCIFLR)[offset=1Ch]

31

27

26

25

24

Reserved

FE

OE

PE

R-0

R/W-0

R/W-0

R/W-0

23

16

Reserved

R-0

15

13

12

11

10

9

8

Reserved

RXWAKE

TXEMPTY

TXWAKE

RXRDY

TXRDY

R-0

R/WC-0

R/W-1

R/WC-0

R/W-0

R/W-1

7

4

3

2

1

0

Reserved

BUSY

IDLE

WAKEUP

BRKDT

R-0

R/W-0

R-0

R/WL-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=Writeinsci-compatiblemodeonly;-n=valueafterreset

Table27-10.SCIFlagsRegister(SCIFLR)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

Readreturns0.Writeshavenoeffect.

26

FE

Framingerrorflag.ThisbitiseffectiveinLINorSCI-compatiblemode.Thisbitissetwhenan

expectedstopbitisnotfound.InSCIcompatibilitymode,onlythefirststopbitischecked.The

missingstopbitindicatesthatsynchronizationwiththestartbithasbeenlostandthatthecharacter

isincorrectlyframed.DetectionofaframingerrorcausestheSCI/LINtogenerateanerrorinterrupt

iftheSETFEINTbitissetintheregisterSCISETINT(SCISetInterruptRegister(SCISETINT)).

Theframingerrorflagisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

•Receptionofanewcharacter/frame,dependingonwhetherthemoduleisinSCIcompatibleor

LINmode

InmultibuffermodetheframeisdefinedintheSCIFORMATregister.

0

Read:Noframingerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Aframingerrorhasbeendetectedsincethelastclear.

Write:Thebitisclearedto0.

25

OE

Overrunerrorflag.ThisbitissetwhenthetransferofdatafromSCIRXSHFtoSCIRDoverwrites

unreaddataalreadyinSCIRD.DetectionofanoverrunerrorcausestheLINtogenerateanerror

interruptiftheSETOEINTbit=1.TheOEflagisresetbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Nooverrunerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Anoverrunerrorhasbeendetectedsincethelastclear.

Write:Thebitisclearedto0.

1464

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

Table27-10.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

24

PE

Parityerrorflag.Thisbitissetwhenaparityerrorisdetectedinthereceiveddata.InSCIaddress-

bitmode,theparityiscalculatedonthedataandaddressbitfieldsofthereceivedframe.Inidle-

linemode,onlythedataisusedtocalculateparity.Anerrorisgeneratedwhenacharacteris

receivedwithamismatchbetweenthenumberof1sanditsparitybit.Iftheparityfunctionis

disabled(SCIGCR[2]=0),thePEflagisdisabledandreadas0.Detectionofaparityerrorcauses

theLINtogenerateanerrorinterruptiftheSETPEINTbit=1.ThePEbitisresetbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•Receptionofanewcharacterorframe,dependingonwhetherthemoduleisinSCIcompatible

orLINmode,respectively.

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Noparityerrorhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Aparityerrorhasbeendetectedsincethelastclear.

Write:Thebitisclearedto0.

23-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

RXWAKE

Receiverwakeupdetectflag.TheSCIsetsthisbittoindicatethatthedatacurrentlyinSCIRDisan

address.RXWAKEisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Uponreceiptofadataframe.

0

ThedatainSCIRDisnotanaddress.

1

ThedatainSCIRDisanaddress.

11

TXEMPTY

Transmitteremptyflag.Thisflagindicatesthetransmitter'sbufferregister(s)(SCITD/TDy)andshift

register(SCITXSHF)areempty.

Note:TheRESETbit,anactiveSWnRESET(SCIGCR1[7])orasystemresetsetsthisbit.

Thisbitdoesnotcauseaninterruptrequest.

0

Transmitterbufferorshiftregister(orboth)areloadedwithdata.

1

Transmitterbufferandshiftregistersarebothempty.

10

TXWAKE

Transmitterwakeupmethodselect.TheTXWAKEbitcontrolswhetherthedatainSCITDshouldbe

sentasanaddressordataframeusingmultiprocessorcommunicationformat.Thisbitissetto1or

0bysoftwarebeforeabyteiswrittentoSCITDandisclearedbytheSCIwhendataistransferred

fromSCITDtoSCITXSHForbyasystemreset.

Note:TXWAKEisnotclearedbytheSWnRESETbit.

Address-bitmode

0

Frametobetransmittedwillbedata(addressbit=0).

1

Frametobetransmittedwillbeanaddress(addressbit=1).

Idle-linemode

0

Theframetobetransmittedwillbedata.

1

Thefollowingframetobetransmittedwillbeanaddress(writinga1tothisbitfollowedbywriting

dummydatatotheSCITDwillresultinaidleperiodof11bitperiodsbeforethenextframeis

transmitted).

1465

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

Table27-10.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

9

RXRDY

Receiverreadyflag.ThereceiversetsthisbittoindicatethattheSCIRDcontainsnewdataandis

readytobereadbytheCPUorDMA.TheSCIgeneratesareceiveinterruptwhenRXRDYflagbit

issetiftheinterrupt-enablebitisset(SCISETINT[9]);RXRDYisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingtheSCIRDregisterincompatibilitymode

•ReadingthelastdatabyteRDyoftheresponseinLINmode

Note:TheRXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0/1register.

0

Read:NonewdataisinSCIRD.

Write:Writinga0tothisbithasnoeffect.

1

Read:NewdataisreadytobereadfromSCIRD.

Write:Thebitisclearedto0.

8

TXRDY

Transmitterbufferregisterreadyflag.Whenset,thisbitindicatesthatthetransmitbufferisreadyto

getanothercharacterfromaCPUorDMAwrite.

WritingdatatoSCITDautomaticallyclearsthisbit.ThisbitissetafterthedataoftheTXbufferis

shiftedintotheSCITXSHFregister.Thiseventcantriggeratransmitinterruptafterdataiscopiedto

theTXshiftregisterSCITXSHF,iftheinterruptenablebitTXINTisset.

Note:1)TXRDYisalsosetto1eitherbysettingoftheRESETbit,enablingSWnRSTorbya

systemreset.

2)TheTXRDYflagcannotbeclearedbyreadingthecorrespondinginterruptoffsetinthe

SCIINTVECT0/1register.

3)Thetransmitinterruptrequestcanbeeliminateduntilthenextseriesofdatawritteninto

thetransmitbuffersLINTD0andLINTD1,bydisablingthecorrespondinginterruptviathe

SCICLEARINTregisterorbydisablingthetransmitterviatheTXENAbit.

0

SCITDisfull.

1

SCITDisreadytoreceivethenextcharacter.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3

BUSY

Busbusyflag.TThisbitindicateswhetherthereceiverisintheprocessofreceivingaframe.As

soonasthereceiverdetectsthebeginningofastartbit,theBUSYbitissetto1.Whenthe

receptionofaframeiscomplete,theSCIclearstheBUSYbit.IfSETWAKEUPINTissetand

powerdownisrequestedwhilethisbitisset,theSCIautomaticallypreventslowpowermodefrom

beingenteredandgenerateswakeupinterrupt.TheBUSYbitiscontrolleddirectlybytheSCI

receiver,butthisbitcanalsobeclearedbythefollowing:

•SettingtheSWnRSTbit

•SettingoftheRESETbit

•Asystemresetoccurring

0

Thereceiverisnotcurrentlyreceivingaframe.

1

Thereceiveriscurrentlyreceivingaframe.

2

IDLE

SCIreceiverinidlestate.Whilethisbitisset,theSCIlooksforanidleperiodtoresynchronizeitself

withthebitstream.Thereceiverdoesnotreceiveanydatawhilethebitisset.Thebusmustbeidle

for11bitperiodstoclearthisbit.TheSCIenterstheidlestateifoneofthefollowingeventsoccurs:

•Asystemreset

•AnSCIsoftwarereset

•Apowerdown

•TheRXpinisconfiguredasageneralI/Opin

0

Theidleperiodhasbeendetected;theSCIisreadytoreceive.

1

Theidleperiodhasnotbeendetected;theSCIwillnotreceiveanydata.

1466

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

Table27-10.SCIFlagsRegister(SCIFLR)FieldDescriptions(continued)

Bit

Field

Value

Description

1

WAKEUP

Wakeupflag.ThisbitissetbytheSCIwhenreceiverortransmitteractivityhastakenthemodule

outofpower-downmode.AninterruptisgeneratediftheSETWAKEUPINTbit(SCISETINT[2])is

set.Itisclearedbythefollowing:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

Forcompatibilitymode,seetheSCIdocumentformoreinformationonlowpowermode.

0

Read:Themodulewillnotwakeupfrompower-downmode.

Write:Writinga0tothisbithasnoeffect.

1

Read:Wakeupfrompower-downmode.

Write:Thebitisclearedto0.

0

BRKDT

SCIbreak-detectflag.ThisbitissetwhentheSCIdetectsabreakconditionontheLINRXpin.A

breakconditionoccurswhentheSCIRXpinremainscontinuouslylowforatleast10bitsaftera

missingfirststopbit,thatis,afteraframingerror.DetectionofabreakconditioncausestheSCIto

generateanerrorinterruptiftheBRKDTINTENAbitisset.TheBRKDTbitisresetbythe

following:

•SettingoftheSWnRSTbit

•SettingoftheRESETbit

•Asystemreset

•Writinga1tothisbit

•ReadingthecorrespondinginterruptoffsetinSCIINTVECT0/1

0

Read:Nobreakconditionhasbeendetectedsincethelastclear.

Write:Writinga0tothisbithasnoeffect.

1

Read:Abreakconditionhasbeendetected.

Write:Thebitisclearedto0.

Table27-11.SCIReceiverStatusFlags

SCIFlag

Register

Bit

ValueAfterSWnRESET(1)

FE

SCIFLR

26

0

OE

SCIFLR

25

0

PE

SCIFLR

24

0

RXWAKE

SCIFLR

12

0

RXRDY

SCIFLR

9

0

BRKDT

SCIFLR

0

0

(1)TheflagsarefrozenwiththeirresetvaluewhileSWnRESET=0.

Table27-12.SCITransmitterStatusFlags

SCIFlag

Register

Bit

ValueAfterSWnRESET(1)

TXEMPTY

SCIFLR

11

1

TXRDY

SCIFLR

8

1

(1)TheflagsarefrozenwiththeirresetvaluewhileSWnRESET=0.

1467

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.8SCIInterruptVectorOffset0(SCIINTVECT0)

Figure27-15andTable27-13illustratethisregister.

Figure27-15.SCIInterruptVectorOffset0(SCIINTVECT0)[offset=20h]

31

16

Reserved

R-0

15

4

3

0

Reserved

INTVECT0

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-13.SCIInterruptVectorOffset0(SCIINTVECT0)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

INVECT0

0-Fh

InterruptvectoroffsetforINT0.ThisregisterindicatestheoffsetforinterruptlineINT0.Areadto

thisregisterupdatesitsvaluetothenexthighestprioritypendinginterruptinSCIFLRandclears

theflaginSCIFLRcorrespondingtotheoffsetthatwasread.SeeTable27-1foralistofthe

interrupts.

Note:Theflagsforthereceive(SCIFLR[9])andthetransmit(SCIFLR[8])interruptcannotbe

clearedbyreadingthecorrespondingoffsetvectorinthisregister(seedetaileddescription

inSCIFLRregister).

27.7.9SCIInterruptVectorOffset1(SCIINTVECT1)

Figure27-16andTable27-14illustratethisregister.

Figure27-16.SCIInterruptVectorOffset1(SCIINTVECT1)[offset=24h]

31

16

Reserved

R-0

15

4

3

0

Reserved

INTVECT1

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-14.SCIInterruptVectorOffset1(SCIINTVECT1)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

INVECT1

0-Fh

InterruptvectoroffsetforINT1.ThisregisterindicatestheoffsetforinterruptlineINT1.Areadto

thisregisterupdatesitsvaluetothenexthighestprioritypendinginterruptinSCIFLRandclears

theflaginSCIFLRcorrespondingtotheoffsetthatwasread.SeeTable27-1forlistofinterrupts.

Note:Theflagsforthereceive(SCIFLR[9])andthetransmit(SCIFLR[8])interruptcannotbe

clearedbyreadingthecorrespondingoffsetvectorinthisregister(seedetaileddescription

inSCIFLRregister).

1468

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.10SCIFormatControlRegister(SCIFORMAT)

Figure27-17andTable27-15illustratethisregister.

Figure27-17.SCIFormatControlRegister(SCIFORMAT)[offset=28h]

31

16

Reserved

R-0

15

3

2

0

Reserved

CHAR

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;WC=WriteinSCI-compatiblemodeonly;-n=valueafterreset

Table27-15.SCIFormatControlRegister(SCIFORMAT)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

CHAR

0-7h

Characterlengthcontrolbits.ThesebitssettheSCIcharacterlengthfrom1to8bits.

Whendataoffewerthaneightbitsinlengthisreceived,itisleftjustifiedinSCIRDand

paddedwithtrailingzeros.DatareadfromtheSCIRDshouldbeshiftedbysoftwaretomake

thereceiveddatarightjustified.

DatawrittentotheSCITDshouldberightjustifiedbutdoesnotneedtobepaddedwith

leadingzeros.

0

Thecharacteris1bitlong.

1h

Thecharacteris2bitslong.

2h

Thecharacteris3bitslong.

3h

Thecharacteris4bitslong.

4h

Thecharacteris5bitslong.

5h

Thecharacteris6bitslong.

6h

Thecharacteris7bitslong.

7h

Thecharacteris8bitslong.

1469

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Isosynchronous baud value=)(VCLK Frequency

2

Asynchronous baud value=)(VCLK Frequency

32

Isosynchronous baud value=)(VBUSPLCK Frequency

Baud + 1

Asynchronous baud value=)(VBUSPLCK Frequency

16(Baud + 1)



SCIControlRegisterswww.ti.com

27.7.11BaudRateSelectionRegister(BRS)

Thissectiondescribesthebaudrateselectionregister.Figure27-18andTable27-16illustratethis

register.

Figure27-18.BaudRateSelectionRegister(BRS)[offset=2Ch]

31

24

23

16

Reserved

BAUD

R-0

R/W-0

15

0

BAUD

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-16.BaudRateSelectionRegister(BRS)FieldDescriptions

Bit

Field

Value

Description

31-24

Reserved

0

Readreturns0.Writeshavenoeffect.

23-0

BAUD

0-FFFFFFh

SCI24-bitbaudselection.

TheSCIhasaninternallygeneratedserialclockdeterminedbytheVCLKandtheprescalers

BAUDinthisregister.TheSCIusesthe24-bitintegerprescalerBAUDvalueofthisregisterto

selectoneofover16,700,000.

Thebaudratecanbecalculatedusingthefollowingformulas:

(58)

(59)

ForBAUD=0,

(60)

(61)

Table27-17containscomparativebaudvaluesfordifferentPvalues,withVCLK=50MHz,for

asynchronousmode..

Table27-17.ComparativeBaudValuesforDifferentPValues,AsynchronousMode(1)(2)

24-BitRegisterValue

BaudSelected

PercentError

Decimal

Hex

Ideal

Actual

26

00001A

115200

115740

0.47

53

000035

57600

57870

0.47

80

000050

38400

38580

0.47

162

0000A2

19200

19172

-0.15

299

00012B

10400

10417

0.16

325

000145

9600

9586

-0.15

399

00018F

7812.5

7812.5

0.00

650

00028A

4800

4800

0.00

15624

003BA0

200

200

0.00

624999

098967

5

5

0.00

(1)VCLK=50MHz

(2)Valuesareindecimalexceptforcolumn2.

1470

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.12SCIDataBuffers(SCIED,SCIRD,SCITD)

TheSCIhasthreeaddressableregistersinwhichtransmitandreceivedataisstored.

27.7.12.1ReceiverEmulationDataBuffer(SCIED)

TheSCIEDregisterisaddressedatalocationdifferentfromSCIRD,butisphysicallythesameregister.

Figure27-19andTable27-18illustratethisregister.

Figure27-19.ReceiverEmulationDataBuffer(SCIED)[offset=30h]

31

16

Reserved

R-0

15

8

7

0

Reserved

ED

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-18.ReceiverEmulationDataBuffer(SCIED)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

ED

0-FFh

Emulatordata.ReadingSCIED[7:0]doesnotcleartheRXRDYflag,unlikereadingSCIRD.This

registershouldbeusedonlybyanemulatorthatmustcontinuallyreadthedatabufferwithout

affectingtheRXRDYflag.

27.7.12.2ReceiverDataBuffer(SCIRD)

Thisregisterprovidesalocationforthereceiverdata.Figure27-20andTable27-19illustratethisregister.

Figure27-20.ReceiverDataBuffer(SCIRD)[offset=34h]

31

16

Reserved

R-0

15

8

7

0

Reserved

RD

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-19.ReceiverDataBuffer(SCIRD)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

RD

0-FFh

Receiverdata.Whenaframehasbeencompletelyreceived,thedataintheframeistransferred

fromthereceivershiftregisterSCIRXSHFtothisregister.Asthistransferoccurs,theRXRDY

flagissetandareceiveinterruptisgeneratedifSETRXINTisset.

Note:WhenthedataisreadfromSCIRD,theRXRDYflagisautomaticallycleared.

NOTE:WhentheSCIreceivesdatathatisfewerthaneightbitsinlength,itloadsthedataintothis

registerinaleft-justifiedformatpaddedwithtrailingzeros.Therefore,theusersoftware

shouldperformalogicalshiftonthedatabythecorrectnumberofpositionstomakeitright

justified.

1471

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.12.3TransmitDataBufferRegister(SCITD)

DatatobetransmittediswrittentotheSCITDregister.Figure27-21andTable27-20illustratethis

register.

Figure27-21.TransmitDataBufferRegister(SCITD)[offset=38h]

31

16

Reserved

R-0

15

8

7

0

Reserved

TD

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-20.TransmitDataBufferRegister(SCITD)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

TD

0-FFh

Transmitdata.DatatobetransmittediswrittentotheSCITDregister.Thetransferofdatafrom

thisregistertothetransmitshiftregisterSCITXSHFsetstheTXRDYflag,whichindicatesthat

SCITDisreadytobeloadedwithanotherbyteofdata.

Note:IfTXINTENAisset,thisdatatransferalsocausesaninterrupt.

NOTE:DatawrittentotheSCITDregisterthatisfewerthaneightbitslongmustberightjustified,but

itdoesnotneedtobepaddedwithleadingzeros.

27.7.13SCIPinI/OControlRegister0(SCIPIO0)

Figure27-22andTable27-21illustratethisregister.

Figure27-22.SCIPinI/OControlRegister0(SCIPIO0)[offset=3Ch]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXFUNC

RXFUNC

Reserved

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-21.SCIPinI/OControlRegister0(SCIPIO0)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXFUNC

Transferfunction.ThisbitdefinesthefunctionofpinSCITX.

0

SCITXisageneral-purposedigitalI/Opin.

1

SCITXistheSCItransmitpin.

1

RXFUNC

Receivefunction.ThisbitdefinesthefunctionofpinSCIRX.

0

SCIRXisageneral-purposedigitalI/Opin.

1

SCIRXistheSCIreceivepin.

0

Reserved

0

Writeshavenoeffect.

1472

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.14SCIPinI/OControlRegister1(SCIPIO1)

Figure27-23andTable27-22illustratethisregister.

Figure27-23.SCIPinI/OControlRegister1(SCIPIO1)[offset=40h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXDIR

RXDIR

Reserved

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-22.SCIPinI/OControlRegister1(SCIPIO1)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXDIR

Transmitpindirection.ThisbitdeterminesthedatadirectionontheSCITXpinifitisconfigured

withgeneral-purposeI/Ofunctionality(TXFUNC=0).SeeTable27-23fortheSCITXpincontrol

withthisbitandothers.

0

SCITXisageneral-purposeinputpin.

1

SCITXisageneral-purposeoutputpin.

1

RXDIR

Receivepindirection.ThisbitdeterminesthedatadirectionontheSCIRXpinifitisconfigured

withgeneral-purposeI/Ofunctionality(RXFUNC=0).SeeTable27-24fortheSCIRXpincontrol

withthisbitandothers.

0

SCIRXisageneral-purposeinputpin.

1

SCIRXisageneral-purposeoutputpin.

0

Reserved

0

Writeshavenoeffect.

Table27-23.SCITXPinControl

Function

TXIN(1)

TXOUT

TXFUNC

TXDIR

SCITX

X

X

1

X

General-purposeinput

X

X

0

0

General-purposeoutput,high

X

1

0

1

General-purposeoutput,low

X

0

0

1

(1)TXINisaread-onlybit.ItsvaluealwaysreflectstheleveloftheSCITXpin.

Table27-24.SCIRXPinControl

Function

RXIN(1)

RXOUT

RXFUNC

RXDIR

SCIRX

X

X

1

X

General-purposeinput

X

X

0

0

General-purposeoutput,high

X

1

0

1

General-purposeoutput,low

X

0

0

1

(1)RXINisaread-onlybit.ItsvaluealwaysreflectstheleveloftheSCIRXpin.

1473

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.15SCIPinI/OControlRegister2(SCIPIO2)

Figure27-24andTable27-25illustratethisregister.

Figure27-24.SCIPinI/OControlRegister2(SCIPIO2)[offset=44h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXIN

RXIN

Reserved

R-0

R-X

R-X

R-X

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-x=Indeterminate

Table27-25.SCIPinI/OControlRegister2(SCIPIO2)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXIN

Transmitpinin.ThisbitcontainsthecurrentvalueontheSCITXpin.

0

TheSCITXpinisatlogiclow(0).

1

TheSCITXpinisatlogichigh(1).

1

RXIN

Receivepinin.ThisbitcontainsthecurrentvalueontheSCIRXpin.

0

TheSCIRXpinisatlogiclow(0).

1

TheSCIRXpinisatlogichigh(1).

0

Reserved

0

Writeshavenoeffect.

1474

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.16SCIPinI/OControlRegister3(SCIPIO3)

Figure27-25andTable27-26illustratethisregister.

Figure27-25.SCIPinI/OControlRegister3(SCIPIO3)[offset=48h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXOUT

RXOUT

Reserved

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-26.SCIPinI/OControlRegister3(SCIPIO3)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXOUT

Transmitpinout.ThispinspecifiesthelogictobeoutputonpinSCITXifthefollowingconditions

aremet:

•TXFUNC=0(SCITXpinisageneral-purposeI/O.)

•TXDIR=1(SCITXpinisageneral-purposeoutput.)

SeeTable27-23foranexplanationofthisbit’seffectincombinationwithotherbits.

0

TheoutputontheSCITXisatlogiclow(0).

1

TheoutputontheSCITXpinisatlogichigh(1).(OutputvoltageisVOHorhigherifTXPDR=0and

outputisinhighimpedancestateifTXPDR=1)

1

RXOUT

Receivepinout.ThisbitspecifiesthelogictobeoutputonpinSCIRXifthefollowingconditions

aremet:

•RXFUNC=0(SCIRXpinisageneral-purposeI/O.)

•RXDIR=1(SCIRXpinisageneral-purposeoutput.)

SeeTable27-24foranexplanationofthisbit’seffectincombinationwiththeotherbits.

0

TheoutputontheSCIRXpinisatlogiclow(0).

1

TheoutputontheSCIRXpinisatlogichigh(1).(OutputvoltageisVOHorhigherifRXPDR=0,

andoutputisinhighimpedancestateifRXPDR=1)

0

Reserved

0

Writeshavenoeffect.

1475

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.17SCIPinI/OControlRegister4(SCIPIO4)

Figure27-26andTable27-27illustratethisregister.

Figure27-26.SCIPinI/OControlRegister4(SCIPIO4)[offset=4Ch]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXSET

RXSET

Reserved

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-27.SCIPinI/OControlRegister4(SCIPIO4)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXSET

Transmitpinset.ThisbitsetsthelogictobeoutputonpinSCITXifthefollowingconditionsare

met:

•TXFUNC=0(SCITXpinisageneral-purposeI/O.)

•TXDIR=1(SCITXpinisageneral-purposeoutput.)

SeeTable27-23foranexplanationofthisbit’seffectincombinationwithotherbits.

0

Read:TheoutputonSCITXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheoutputonSCITXisatlogichigh(1).

1

RXSET

Receivepinset.ThisbitsetsthedatatobeoutputonpinSCIRXifthefollowingconditionsare

met:

•RXFUNC=0(SCIRXpinisageneral-purposeI/O.)

•RXDIR=1(SCIRXpinisageneral-purposeoutput.)

SeeTable27-24foranexplanationofthisbit’seffectincombinationwiththeotherbits.

0

Read:TheoutputonSCIRXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Readandwrite:TheoutputonSCIRXisatlogichigh(1).

0

Reserved

0

Writeshavenoeffect.

1476

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.18SCIPinI/OControlRegister5(SCIPIO5)

Figure27-27andTable27-28illustratethisregister.

Figure27-27.SCIPinI/OControlRegister5(SCIPIO5)[offset=50h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXCLR

RXCLR

Reserved

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-28.SCIPinI/OControlRegister5(SCIPIO5)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXCLR

Transmitpinclear.ThisbitclearsthelogictobeoutputonpinSCITXifthefollowingconditionsare

met:

•TXFUNC=0(SCITXpinisageneral-purposeI/O.)

•TXDIR=1(SCITXpinisageneral-purposeoutput.)

0

Read:TheoutputonSCITXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Read:TheoutputonSCITXisatlogichigh(1).

Write:TheoutputonSCITXisatlogiclow(0).

1

RXCLR

Receivepinclear.ThisbitclearsthelogictobeoutputonpinSCIRXifthefollowingconditionsare

met:

•RXFUNC=0(SCIRXpinisageneral-purposeI/O.)

•RXDIR=1(SCIRXpinisageneral-purposeoutput.)

0

Read:TheoutputonSCIRXisatlogiclow(0).

Write:Writinga0tothisbithasnoeffect.

1

Read:TheoutputonSCIRXisatlogichigh(1).

Write:TheoutputonSCIRXisatlogiclow(0).

0

Reserved

0

Writeshavenoeffect.

1477

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.19SCIPinI/OControlRegister6(SCIPIO6)

Figure27-28andTable27-29illustratethisregister.

Figure27-28.SCIPinI/OControlRegister6(SCIPIO6)[offset=54h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXPDR

RXPDR

Reserved

R-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table27-29.SCIPinI/OControlRegister6(SCIPIO6)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXPDR

Transmitpinopendrainenable.Thisbitenablesopen-draincapabilityintheoutputpinSCITXif

thefollowingconditionsaremet:

•TXFUNC=0(SCITXpinisageneral-purposeI/O.)

•TXDIR=1(SCITXpinisageneral-purposeoutput.)

0

Opendrainfunctionalityisdisabled;theoutputvoltageisVOLorlowerifTXOUT=0andVOHor

higherifTXOUT=1.

1

Opendrainfunctionalityisenabled;theoutputvoltageisVOLorlowerifTXOUT=0andhigh

impedanceifTXOUT=1.

1

RXPDR

Receivepinopendrainenable.Thisbitenablesopen-draincapabilityintheoutputpinSCIRXif

thefollowingconditionsaremet:

•RXFUNC=0(SCIRXpinisageneral-purposeI/O.)

•RXDIR=1(SCIRXpinisageneral-purposeoutput.)

0

Opendrainfunctionalityisdisabled;theoutputvoltageisVOLorlowerifRXOUT=0andVOHor

higherifRXOUT=1.

1

Opendrainfunctionalityisenabled;theoutputvoltageisVOLorlowerifRXOUT=0andhigh

impedanceifRXOUT=1.

0

Reserved

0

Writeshavenoeffect.

1478

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

27.7.20SCIPinI/OControlRegister7(SCIPIO7)

Figure27-29andTable27-30illustratethisregister.

Figure27-29.SCIPinI/OControlRegister7(SCIPIO7)[offset=58h]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXPD

RXPD

Reserved

R-0

R/W-n

R/W-n

R/W-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset,RefertotheTerminalFunctionsinthedevicedatasheetfordefaultpin

settings.

Table27-30.SCIPinI/OControlRegister7(SCIPIO7)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXPD

Transmitpinpullcontroldisable.ThisbitdisablespullcontrolcapabilityontheinputpinSCITX.

0

ThepullcontrolontheSCITXpinisenabled.

1

ThepullcontrolontheSCITXpinisdisabled.

1

RXPD

Receivepinpullcontroldisable.ThisbitdisablespullcontrolcapabilityontheinputpinSCIRX.

0

PullcontrolontheSCIRXpinisenabled.

1

PullcontrolontheSCIRXpinisdisabled.

0

Reserved

0

Writeshavenoeffect.

27.7.21SCIPinI/OControlRegister8(SCIPIO8)

Figure27-30andTable27-31illustratethisregister.

Figure27-30.SCIPinI/OControlRegister8(SCIPIO8)[offset=5Ch]

31

8

Reserved

R-0

7

3

2

1

0

Reserved

TXPSL

RXPSL

Reserved

R-0

R/W-n

R/W-n

R/W-n

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset,RefertotheTerminalFunctionsinthedevicedatasheetfordefaultpin

settings.

Table27-31.SCIPinI/OControlRegister8(SCIPIO8)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2

TXPSL

TXpinpullselect.ThisbitselectspulltypeintheinputpinSCITX.

0

TheSCITXpinisapulldown.

1

TheSCITXpinisapullup.

1

RXPSL

RXpinpullselect.ThisbitselectspulltypeintheinputpinSCIRX.

0

TheSCIRXpinisapulldown.

1

TheSCIRXpinisapullup.

0

Reserved

0

Writeshavenoeffect.

1479

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






SCIControlRegisterswww.ti.com

27.7.22Input/OutputErrorEnable(IODFTCTRL)Register

AllthebitsintheIODFTCTRLregisterareusedinIODFT(I/Odesignfortest)modeonly.Figure27-31

andTable27-32illustratethisregister.AfterthebasicSCImoduleconfiguration,enabletherequiredError

modetobecreatedfollowedbyIODFTKeyenable.

Figure27-31.Input/OutputErrorEnableRegister(IODFTCTRL)[offset=90h]

31

27

26

25

24

Reserved

FEN

PEN

BRKDTENA

R-0

R/W-0

R/WC-0

R/WC-0

23

21

20

19

18

16

Reserved

PINSAMPLEMASK

TXSHIFT

R-0

R/W-0

R/W-0

15

12

11

8

Reserved

IODFTENA

R-0

R/WP-0

R/WP-1

R/WP-0

R/WP-1

7

2

1

0

Reserved

LPBENA

RXPENA

R-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WC=Writeinsci-compatiblemodeonly;WP=Writeinprivilegemodeonly;-n=valueafter

reset

NOTE:

1.AllthebitsareusedinIODFTmodeonly.

2.EachIODFTareexpectedtobecheckedindividually.

Table27-32.Input/OutputErrorEnableRegister(IODFTCTRL)FieldDescriptions

Bit

Field

Value

Description

31-27

Reserved

0

Readreturns0.Writeshavenoeffect.

26

FEN

Frameerrorenable.Thisbitisusedtocreateaframeerror.

0

Noerroriscreated.

1

ThestopbitreceivedisANDedwith0andpassedtothestopbitcheckcircuitry.

25

PEN

Parityerrorenable.Thisbitisusedtocreateaparityerror.

0

Noparityerroroccurs.

1

Theparitybitreceivedistoggledsothataparityerroroccurs.

24

BRKDTENA

Breakdetecterrorenable.ThisbitisusedtocreateaBRKDTerror.

0

Noerroriscreated.

1

ThestopbitoftheframeisANDedwith0andpassedtotheRSMsothataframeerror

occurs.ThentheRXpinisforcedtocontinuouslowfor10TBITSsothataBRKDTerror

occurs.

32-21

Reserved

0

Readreturns0.Writeshavenoeffect.

20-19

PINSAMPLEMASK

Pinsamplemask.ThesebitsdefinethesamplenumberatwhichtheTXpinvaluethatis

beingtransmittedwillbeinvertedtoverifythereceivepinsamplesmajoritydetection

circuitry.

0

Nomaskisused.

1h

InverttheTXPinvalueat7th.SCLK.

2h

InverttheTXPinvalueat8th.SCLK.

3h

InverttheTXPinvalueat9th.SCLK.

1480

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSCIControlRegisters

Table27-32.Input/OutputErrorEnableRegister(IODFTCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

18-16

TXSHIFT

Transmitshift.ThesebitsdefinetheamountbywhichthevalueonTXpinisdelayedsothat

thevalueontheRXpinisasynchronous.Thisfeatureisnotapplicabletothestartbit.

0

Nodelayoccurs.

1h

Thevalueisdelayedby1SCLK.

2h

Thevalueisdelayedby2SCLK.

3h

Thevalueisdelayedby3SCLK.

4h

Thevalueisdelayedby4SCLK.

5h

Thevalueisdelayedby5SCLK.

6h

Thevalueisdelayedby6SCLK.

7h

Nodelayoccurs.

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

IODFTENA

IODFTenablekey.WriteaccesspermittedinPrivilegemodeonly.

Ah

IODFTisenabled.

AllOthers

IODFTisdisabled.

7-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

LPBENA

Moduleloopbackenable.WriteaccesspermittedinPrivilegemodeonly.

Note:InanalogloopbackmodethecompletecommunicationpaththroughtheI/Os

canbetested,whereasindigitalloopbackmodetheI/Obuffersareexcludedfrom

thispath.

0

Digitalloopbackisenabled.

1

AnalogloopbackisenabledinmoduleI/ODFTmodewhenIODFTENA=1010.

0

RXPENA

Moduleanalogloopbackthroughreceivepinenable.WriteaccesspermittedinPrivilege

modeonly.

ThisbitdefineswhethertheI/Obuffersforthetransmitorthereceivepinareincludedinthe

communicationpath(inanalogloopbackmode)

0

Analogloopbackthroughthetransmitpinisenabled.

1

Analogloopbackthroughthereceivepinisenabled.

1481

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Outputenable

Dataout

Datain

Pullcontroldisable

PullselectDevicepin

Pullcontrollogic

Inputenable

Outputenable

Dataout

Datain

PullcontroldisableDevicepin

Pullcontrollogic

Inputenable



GPIOFunctionalitywww.ti.com

27.8GPIOFunctionality

Thefollowingsectionsapplytoalldevicepinsthatcanbeconfiguredasfunctionalorgeneral-purposeI/O

pins.

27.8.1GPIOFunctionality

Figure27-32illustratestheGPIOfunctionality.

Figure27-32.GPIOFunctionality

27.8.2UnderReset

Thefollowingapplyifadeviceisunderreset:

•Pullcontrol.Theresetpullcontrolonthepinsisenabledordisableddependingonadevice-specific

option.Thisfeatureisconfigurableforeachmoduleseparately.

•Inputbuffer.inputbufferisenabled.

•Outputbuffer.Theoutputbufferisdisabled.

1482

SerialCommunicationInterface(SCI)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comGPIOFunctionality

27.8.3OutofReset

Thefollowingapplyifthedeviceisoutofreset:

•Pullcontrol.ThepullcontrolisenabledbyclearingthePD(pullcontroldisable)bitintheSCIPIO7

register(Section27.7.20).Inthiscase,ifthePSL(pullselect)bitintheSCIPIO8register

(Section27.7.21)isset,thepinwillhaveapull-up.IfthePSLbitiscleared,thepinwillhaveapull-

down.IfthePDbitissetinthecontrolregister,thereisnopull-uporpull-downonthepin.

•Inputbuffer.Theinputbufferisalwaysenabledinfunctionalmode.

NOTE:Thepull-disablelogicdependsonthepindirection.Itisindependentofwhetherthedeviceis

inI/Oorfunctionalmode.Ifthepinisconfiguredasoutputortransmit,thenthepullsare

disabledautomatically.Ifthepinisconfiguredasinputorreceive,thepullsareenabledor

disableddependingonbitPDinthepulldisableregisterSCIPIO7(Section27.7.20).

•Outputbuffer.ApincanbedrivenasanoutputpiniftheTXDIRbitissetinthepindirectioncontrol

register(SCIPIO1;Section27.7.14)ANDtheopen-drainfeatureisnotenabledintheSCIPIO6register

(Section27.7.19).

27.8.4Open-DrainFeatureEnabledonaPin

Thefollowingapplyiftheopen-drainfeatureisenabledonapin:

•Theoutputbufferisenabledifalowsignalisbeingdrivenontothepin.

•Theoutputbufferisdisabled(thedirectioncontrolsignalDIRisinternallyforcedlow)ifahighsignalis

beingdrivenontothepin.

NOTE:Theopen-drainfeatureisavailableonlyinI/Omode(SCIPIO0;Section27.7.13).

27.8.5Summary

Thebehavioroftheinputbuffer,outputbuffer,andthepullcontrolissummarizedinTable27-33.

Table27-33.InputBuffer,OutputBuffer,andPullControlBehaviorasGPIOPins(1)

Device

Pin

under

Direction

PullDisable

PullSelect

Reset?

(DIR)(2)

(PULDIS)(3)

(PULSEL)(4)

PullControl

OutputBuffer

InputBuffer

Yes

X

X

X

Device-andmodule-

Disabled

Enabled

specific

No

0

0

0

Pulldown

Disabled

Enabled

No

0

0

1

Pullup

Disabled

Enabled

No

0

1

0

Disabled

Disabled

Enabled

No

0

1

1

Disabled

Disabled

Enabled

No

1

X

X

Disabled

Enabled

Enabled

(1)X=Don’tcare

(2)DIR=0forinput,1foroutput

(3)PULDIS=0forenablingpullcontrol

=1fordisablingpullcontrol

(4)PULSEL=0forpull-downfunctionality

=1forpull-upfunctionality

1483

SPNU499B–November2012–RevisedAugust2013

SerialCommunicationInterface(SCI)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter28

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

Thischapterdescribestheinter-integratedcircuit(I2CorI2C)module.TheI2Cisamulti-master

communicationmoduleprovidinganinterfacebetweentheTexasInstruments(TI)microcontrollerand

devicescompliantwithPhilipsSemiconductorI2C-busspecificationversion2.1andconnectedbyanI2C-

bus.ThismodulewillsupportanyslaveormasterI2Ccompatibledevice.

Topic...........................................................................................................................Page

28.1Overview.......................................................................................................1485

28.2I2CModuleOperation.....................................................................................1489

28.3I2COperationModes......................................................................................1493

28.4I2CModuleIntegrity.......................................................................................1495

28.5OperationalInformation..................................................................................1497

28.6I2CRegisters.................................................................................................1500

28.7SampleWaveforms........................................................................................1521

1484

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1

2

3

.

.

n

SCLSDAMasterSlaves



www.ti.comOverview

28.1Overview

TheI2Chasthefollowingfeatures:

•CompliancetothePhilipsI2Cbusspecification,v2.1(TheI2CSpecification,Philipsdocumentnumber

939839340011)

–Bit/Byteformattransfer

–7-bitand10-bitdeviceaddressingmodes

–Generalcall

–STARTbyte

–Multi-mastertransmitter/slavereceivermode

–Multi-masterreceiver/slavetransmittermode

–Combinedmastertransmit/receiveandreceive/transmitmode

–Transferratesof10kbpsupto400kbps(Phillipsfast-moderate)

•Freedataformat

•TwoDMAevents(transmitandreceive)

•DMAeventenable/disablecapability

•SeveninterruptsthatcanbeusedbytheCPU

•OperateswithVBUSfrequencyfrom6.7MHzup

•Operateswithmodulefrequencybetween6.7MHzto13.3MHz

•Moduleenable/disablecapability

•TheSDAandSCLareoptionallyconfigurableasgeneralpurposeI/O

•Slewratecontroloftheoutputs

•Opendraincontroloftheoutputs

•Programmablepullup/pulldowncapabilityontheinputs

•SupportsIgnoreNACKmode

NOTE:ThisI2Cmoduledoesnotsupport:

•High-speed(HS)mode

•C-buscompatibilitymode

•Thecombinedformatin10-bitaddressmode(theI2Csendstheslaveaddresssecond

byteeverytimeitsendstheslaveaddressfirstbyte)

28.1.1IntroductiontotheI2CModule

TheI2CmodulesupportsanyslaveormasterI2C-compatibledevice.Figure28-1showsanexampleof

multipleI2Cserialportsconnectedforatwo-waytransferfromonedevicetoanotherdevice.

Figure28-1.MultipleI2CModulesConnectionDiagram

1485

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

28.1.2FunctionalOverview

TheI2Cmoduleisaserialbusthatsupportsmultiplemasterdevices.Inmultimastermode,oneormore

devicescanbeconnectedtothesamebusandarecapableofcontrollingthebus.EachI2Cdeviceonthe

busisrecognizedbyauniqueaddressandcanoperateaseitheratransmitterorareceiver,dependingon

thefunctionofthedevice.Inadditiontobeingatransmitterorreceiver,adeviceconnectedtotheI2Cbus

canalsobeconsideredamasteroraslavewhenperformingdatatransfers.

NOTE:Amasterdeviceisthedevicethatinitiatesthedatatransferonabusandgeneratesthe

clocksignalthatpermitsthetransfer.Duringthetransmission,anydeviceaddressedbythe

masterisconsideredtheslave.

DataiscommunicatedtodevicesinterfacingtotheI2Cmoduleusingtheserialdatapin(SDA)andthe

serialclockpin(SCL)asshowninFigure28-2.Thesetwowirescarryinformationbetweenthedeviceand

theotherdevicesconnectedtotheI2Cbus.BothSDAandSCLpinsonthedevicearebidirectional.They

mustbeconnectedtoapositivesupplyvoltagethroughapull-upresistor.Whenthebusisfree,bothpins

arehigh.Thedriverofthesetwopinshasanopen-drainconfigurationtoperformthewired-ANDfunction.

ThedevicehasaspecialmodethatcanbeenteredtoignoreaNACKgeneratedfromnon-compliantI2C

devicesthatareincapableofgeneratinganACK.

TheI2Cmoduleconsistsofthefollowingprimaryblocks:

•AserialInterface:onedatapin(SDA)andoneclockpin(SCL)

•Thedeviceregisterinterface

–DataregisterstotemporarilyholdreceiveddataandtransmitteddatatravelingbetweentheSDA

pinandtheCPUortheDMA

–Controlandstatusregisters

•AprescalertodividedowntheinputclockthatisdriventotheI2Cmodule

•AperipheralbusinterfacetoenabletheCPUandDMAtoaccesstheI2Cmoduleregisters

•AnarbitratortohandlearbitrationbetweentheI2Cmodule(whenconfiguredasamaster)andanother

master

•Interruptgenerationlogic(interruptscanbesenttotheCPU)

•AclocksynchronizerthatsynchronizestheI2Cinputclock(fromthesystemmodule)andtheclockon

theSCLpin,andsynchronizesdatatransferswithmastersofdifferentclockspeeds.

•Anoisefilteroneachofthetwoserialpins

•DMAeventgenerationlogicthatsynchronizesdatareceptionanddatatransmissionintheI2Cmodule

forDMAtransmission

InFigure28-2,theCPUortheDMAwritesdatafortransmissiontoI2CDXRandreadsreceiveddata

fromI2CDRR.WhentheI2Cmoduleisconfiguredasatransmitter,datawrittentoI2CDXRiscopiedto

I2CXSRandshiftedoutonebitatatime.WhentheI2Cmoduleisconfiguredasareceiver,received

dataisshiftedintoI2CRSRandthencopiedtoI2CDRR.

WhentheI2Cfunctionisnotneeded,thepinsmaybecontrolledasgeneral-purposeinput/output

(GPIO)pins.TheI/Ostructureofeachpinincludes:

•programmableslewratecontroloftheoutputs

•opendrainmode

•programmablepullenable/disableontheinput

•programmablepullup/pulldownfunctionontheinput

1486

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




I2CXSR

I2CRSR

I2CIVR

I2CIMR

I2CISR

Arbitrator

VBUSP

StateMachine

I2CDXR

I2CDRR

I2CMDR

ClockgeneratorSCL

I2CPSC

I2CCNT

I2CDOUT

I2CPDIR

I2CDIN

I2CCKL

I2CCKH

NoiseInterrupttoVIM

I2COAR

I2CSAR

I2CPFNC

I2CDSET

I2CDCLR

I2CPDR

I2CPDIS

I2CSRS

SDA

I2CEMDR

Filter

NoiseFilter

Clocksynchronizer

I2CPDIR

I2CPDR

I2CPDIS

I2CSRS

I2CPFNC

I2CDOUT

I2CDSET

I2CDCLR

TXDMAREQ

I2CDMACR

RXDMAREQ

I2CSTR

I2CPSEL

I2CPSEL



www.ti.comOverview

Figure28-2.SimpleI2CBlockDiagram

1487

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




))2()2)((12(2dCCKHIdCCKLICPSCIkFrequencyCInputClocIkFrequencyMasterCloc++++=

)2()2(dCCKHIdCCKLIkFrequencyModuleClockFrequencyMasterCloc+++=

)12(2+=CPSCIkFrequencyCInputClocIkFrequencyModuleCloc

GeneratorClockOSCINI2CModule(VBUS_CLK)I2CInputClockI2CPSCI2CCKLI2CCKHModuleClockforI2CModuleOperationonSCLpinMasterClockToI2CBus



Overviewwww.ti.com

28.1.3ClockGeneration

AsshowninFigure28-3,theI2Cmoduleusestheinputclockgeneratedfromthedeviceclockgenerator

togeneratethemoduleclockandmasterclock.TheI2Cinputclockisthedeviceperipheralclock

(VBUS_CLK).TheclockisthendividedtwicemoreinsidetheI2Cmoduletoproducethemoduleclock

andthemasterclock.

Figure28-3.ClockingDiagramfortheI2CModule

ThemoduleclockdeterminesthefrequencyatwhichtheI2Cmoduleoperates.Aprogrammableprescaler

intheI2Cmoduledividesdowntheinputclocktoproducethemoduleclock.Tospecifythedivide-down

value,initializetheI2CPSCfieldoftheprescalerregister,I2CPSC.Theresultingfrequencyis:

(62)

Themoduleclockfrequencymustbebetween6.7MHzand13.3MHz.Theprescalercanonlybeinitialized

whiletheI2Cmoduleisintheresetstate(IRS=0inI2CMDR).Theprescaledfrequencytakeseffectonly

whenIRSischangedto1.ChangingtheI2CPSCvaluewhileIRS=1hasnoeffect.

ThemasterclockappearsontheSCLpinwhentheI2CmoduleisconfiguredtobeamasterontheI2C

bus.ThisclockcontrolsthetimingofthecommunicationbetweentheI2Cmoduleandaslave.Asshown

inFigure28-3,asecondclockdividerintheI2Cmoduledividesdownthemoduleclocktoproducethe

masterclock.TheclockdividerusestheI2CCKLtodividedownthelowportionofthemoduleclocksignal

andusestheI2CCKHtodividedownthehighportionofthemoduleclocksignal.

Theresultingfrequencyis:

(63)

(64)

whereddependsonthevalueofI2CPSC:

I2CPSC

d

0

7

1

6

Greaterthan1

5

1488

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DatalineSDASCLstabledata

Changeofdataallowed



www.ti.comI2CModuleOperation

NOTE:Themasterclockfrequencydefinedabovedoesnotincluderise/falltimeandlatencyofthe

synchronizerinsidethemodule.Theactualtransferratewillbeslowerthanthevalue

calculatedfromtheformulaabove.Also,duetothenatureofSCLsynchronization,theSCL

clockperiodcouldchangeifSCLsynchronizationistakingplace.

28.2I2CModuleOperation

ThefollowingsectiondiscusseshowtheI2Cmoduleoperates.

28.2.1InputandOutputVoltageLevels

Oneclockpulseisgeneratedbythemasterdeviceforeachdatabittransferred.Becauseofavarietyof

differenttechnologydevicesthatcanbeconnectedtotheI2C-bus,thelevelsoflogic0(low)andlogic1

(high)arenotfixedanddependontheassociatedlevelofVCCIO.Fordetails,seethedevicespecificdata

sheet.

28.2.2I2CModuleResetConditions

TheI2Cmodulecanberesetinthefollowingtwoways:

•Throughtheglobalperipheralreset.Adeviceresetcausesaglobalperipheralreset.

•ByclearingtheIRSbitintheI2Cmoderegister(I2CMDR).Whentheglobalperipheralresetis

removed,theIRSbitisclearedto0,keepingtheI2Cmoduleintheresetstate.

28.2.3I2CModuleDataValidity

ThedataontheSDAmustbestableduringthehighperiodoftheclock.SeeFigure28-4.Thehighand

lowstateofthedataline,theSDA,canonlychangewhentheclocksignalislow.

Figure28-4.BitTransferontheI2CBus

1489

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




~~~~

~~~~

~~

~~

SDASCL

STARTcondition(S)STOPcondition(PMSB126789123789R/WACKACKAcknowledgesignalfromreceiverAcknowledgesignalfromreceiver

~~~~

3

~~

~~~~

SDASCL

STARTcondition(S)

STOPcondition(P)



I2CModuleOperationwww.ti.com

28.2.4I2CModuleStartandStopConditions

STARTandSTOPconditionsaregeneratedbyamasterI2Cmodule.

•TheSTARTconditionisdefinedasahigh-to-lowtransitionontheSDAlinewhileSCLishigh.A

masterdrivesthisconditiontoindicatethestartofdatatransfer.Thebusisconsideredtobebusyafter

theSTARTcondition,andthebusbusybit(BB)inI2CSRissetto1.

•TheSTOPconditionisdefinedasalow-to-hightransitionontheSDAlinewhileSCLishigh.Amaster

drivesthisconditiontoindicatetheendofdatatransfer.Thebusisconsideredtobefreeafterthe

STOPcondition,thereforetheBBbitinI2CSRisclearedto0.

Figure28-5.I2CModuleSTARTandSTOPConditions

FortheI2CmoduletostartadatatransferwithaSTARTcondition,themastermodebit(MST)andthe

STARTconditionbit(STT)intheI2CMDRmustbothbesetto1.FortheI2Cmoduletoendadata

transferwithaSTOPcondition,theSTOPconditionbit(STP)mustbesetto1.WhentheBBbitissetto1

andtheSTTbitissetto1,arepeatedSTARTconditionisgenerated.

28.2.5SerialDataFormats

TheI2Cmoduleoperatesinbytedataformat.EachmessageputontheSDAlineis2to8-bitslong.The

numberofmessagesthatcanbetransmittedorreceivedisunrestricted.Thedataistransferredwiththe

mostsignificantbit(MSB)first(Figure28-6).Eachmessageisfollowedbyanacknowledgebitfromthe

I2Cifitisinreceivermode.TheI2Cmoduledoesnotsupportlittleendiansystems.

Figure28-6.I2CModuleDataTransfer

ThefirstbyteafteraSTARTcondition(S)alwaysconsistsof8bitsthatcompriseeithera7-bitaddress

plustheR/Wbit,or8databits.Theeighthbit,R/W,inthefirstbytedeterminesthedirectionofthedata.

WhentheR/Wbitis0,themasterwrites(transmits)datatoaselectedslavedevice;whentheR/Wbitis

1,themasterreads(receives)datafromtheslavedevice.Inacknowledgemode,anextrabitdedicated

fortheacknowledgement(ACK)bitisinsertedaftereachmessage.

TheI2Cmodulesupportsthefollowingformats:

•7-bitaddressingformat(Figure28-7)

•10-bitaddressingformat(Figure28-8)

•7-bit/10-bitaddressingformatwithrepeatedSTARTcondition(Figure28-9)

•Free-dataformat(Figure28-10)

1490

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




111

7

1

1

1

111878SSlave addressR/W

R/W

ACKACKACKACKDataDataPSSlave address

1

11

718811SSlave address 1st byteR/W

ACKACKACKSlave address 2nd byteDataP

11178181

SSlave addressR/W

ACKDataACK1DataACKP



www.ti.comI2CModuleOperation

28.2.5.17-BitAddressingFormat

Inthe7-bitaddressingformat(Figure28-7),thefirstbyteaftertheSTARTconditionconsistsofa7-bit

slaveaddressfollowedbytheR/Wbit(intheLSB).TheR/Wbitdeterminesthedirectionofthedata

transfer:

•R/W=0:Themasterwrites(transmits)datatotheaddressedslave.

•R/W=1:Themasterreads(receives)datafromtheslave.

Anextraclockcyclededicatedforacknowledgement(ACK)isinsertedaftereachbyte.IftheACKis

insertedbytheslaveafterthefirstbytefromthemaster,itisfollowedbynbitsofdatafromthetransmitter

(masterorslave,dependingontheR/Wbit).ThedeviceI2Callowsntobeanumberbetween2to8,

programmablebythebitcount(BC)fieldofI2CMDR.Afterthedatabitshavebeentransferred,the

receiverinsertsanACKbit.

Toselectthe7-bitaddressingformat,write0totheexpandedaddressenable(XA)bitofI2CMDRand

makesurethefreedataformatmodeisoff(FDF=0inI2CMDR).

Figure28-7.I2CModule7-BitAddressingFormat

28.2.5.210-BitAddressingFormat

The10-bitaddressingformatissimilartothe7-bitaddressingformat,butthemastersendstheslave

addressintwoseparatebytetransfers.Inthe10-bitaddressingformat(Figure28-8),thefirstbyteis

11110b,thetwoMSBsofthe10-bitslaveaddress,andtheR/Wbit.TheACKbitisinsertedaftereach

byte.Thesecondbyteistheremaining8bitsofthe10-bitslaveaddress.Theslavemustsendan

acknowledgementaftereachofthetwobytetransfers.Oncethemasterhaswrittenthesecondbytetothe

slave,themastercaneitherwritedataoruserepeatedaSTARTconditiontochangethedatadirection.

Toselectthe10-bitaddressingformat,write1totheexpandedaddressenable(XA)bitofI2CMDRand

makesurethefreedataformatmodeisoff(FDF=0inI2CMDR).

Figure28-8.I2CModule10-bitAddressingFormat

28.2.5.3UsingtheRepeatedSTARTCondition

Attheendofeachbyte,themastercandriveanotherSTARTcondition(Figure28-9).Usingthis

capability,amastercantransmit/receiveanynumberofdatabytesbeforegeneratingaSTOPcondition.

Thelengthofadatabytecanbefrom2to8bits.TherepeatedSTARTconditioncanbeusedwiththe7-

bitaddressing,10-bitaddressing,orthefreedataformats.

Figure28-9.I2CModule7-BitAddressingFormatwithRepeatedSTART

1491

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




1188181

1SDataACKPDataDataACKACK



I2CModuleOperationwww.ti.com

28.2.5.4FreeDataFormat

Inthisformat(Figure28-10),thefirstbyteafteraSTARTconditionisadatabyte.TheACKbitisinserted

aftereachbyte,followedbyanother8bitsofdata.Noaddressordatadirectionbitissent.Therefore,the

transmitterandreceivermustbothsupportthefreedataformat.Thedirectionofdatatransmission

(transmitorreceive)remainsconstantthroughoutthetransfer.

Toselectthefreedataformat,writea1tothefreedataformat(FDF)bitoftheI2CMDR.Thefreedata

formatisnotsupportedinthedigitalloopbackmode.

Figure28-10.I2CModuleinFreeDataFormat

28.2.6NACKBitGeneration

WhentheI2Cmoduleisareceiver(masterorslave),itcanacknowledgeorignorebitssentbythe

transmitter.Toignoreanynewbits,theI2Cmodulemustsendano-acknowledge(NACK)bitduringthe

acknowledgecycleonthebus.Table28-1summarizesthevariouswaysaNACKcanbegenerated.

Table28-1.WaystoGenerateaNACKBit

I2CModuleCondition

BasicNACKBitGenerationOptions

AdditionalOption

Slavereceivermode

Disabledatatransfers(STT=0)Allowan

SettheNACKMODbitbeforetherising

overruncondition(RSFULL=1)Resetthe

edgeofthelastdatabityouintendto

module(IRS=0)

receive.

Masterreceivermodeandrepeat

GenerateaSTOPcondition(STP=1)Reset

SettheNACKMODbitbeforetherising

mode(RM=1)

themodule(IRS=0)

edgeofthelastdatabityouintendto

receive.

Masterreceivermodewithnon-repeat

IfSTP=1,allowtheinternaldatacounterto

SettheNACKMODbitbeforetherising

mode(RM=0)

countdownto0andthusforceaSTOP

edgeofthelastdatabityouintendto

condition.IfSTP=0,makeSTP=1to

receive.

generateaSTOPcondition.Resetthemodule

(IRS=0)

Insomeapplications,theslavecannotgeneratetheACKsignal.IftheIGNACKbitissetintheI2CEMDR

register,theresultingNACKwillbeignoredandtheI2Cblockwillcontinuethedatatransfer.

1492

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2COperationModes

28.3I2COperationModes

28.3.1MasterTransmitterMode

Allmastersbegininthismode.TheI2Cmoduleisamasterandtransmitscontrolinformationanddatato

aslave.Inthismode,dataassembledinanyoftheaddressingformatsshowninFigure28-7,Figure28-8,

orFigure28-9isshiftedoutontotheSDApinandsynchronizedwiththeself-generatedclockpulseson

theSCLpin.TheclockpulsesareinhibitedandtheSCLpinisheldlowwhentheinterventionofthe

deviceisrequired(XSMT=0)afterabytehasbeentransmitted.

NOTE:IftheI2Cisconfiguredfortwosimultaneousmastertransmissions,waituntiltheMSTand

BBhavebeenresetbeforeperformingthesecondmastertransmission.

FailuretowaitfortheMSTandBBtoresetwillpreventthestartconditiononthesecondtransferfrom

beingissuedandthebusBBwillnotbeset.TypicallytheendofthefirsttransferishandledbypollingBB.

However,theMSTbitisnotresetatthesameinstantastheBBbit.Asaresult,whenthesecondmaster

transmissionisinitiatedbeforetheresettingoftheMST,theMSTbitforthesecondtransferisreset.This

preventstheI2Cfromrecognizingitselfasthemaster,thusfailingtooccupythebus.

28.3.2MasterReceiverMode

Inthismode,theI2Cmoduleisamasterandreceivesdatafromaslave.Thismodecanonlybeentered

fromthemastertransmittermode(theI2Cmodulemustfirsttransmitacommandtotheslave).Inanyof

theaddressingformatsshowninFigure28-7,Figure28-8,orFigure28-9,themasterreceivermodeis

enteredaftertheslaveaddressbyteandtheR/Wbithavebeentransmitted(iftheR/Wbitis1).Serial

databitsreceivedontheSDApinareshiftedinwiththeself-generatedclockpulsesontheSCLpin.The

clockpulsesareinhibitedandtheSCLisheldlowwhentheinterventionofthedeviceisrequired

(RSFULL=1)afterabytehasbeenreceived.Attheendofthetransfer,themaster-receiversignalsthe

endofdatatotheslave-transmitterbynotgeneratinganacknowledgeonthelastbytethatwasclocked

outoftheslave.Theslave-transmitterthenreleasesthedatalineallowingthemaster-receivertogenerate

aSTOPconditionorarepeatedSTARTcondition.

Inmanyapplications,thesizeofthemessageisintheinitialbytesofthemessageitself.Sincethesizeof

themessageisnotknowntothemasterbeforethetransmission/receptionstarts,themastermustusethe

repeatmodeinordertoforcethestopconditionwhenthereceptioniscompleted.Therepeatmodeis

enabledbysettingtheRMbitto1.Duetothedoublebufferimplementationonthereceiveside,the

mastermustgeneratethestopcondition(STP=1)afterreadingthe(messagesize-1)thdata.

28.3.3SlaveTransmitterMode

Inthismode,theI2Cmoduleisaslaveandtransmitsdatatoamaster.Thismodecanonlybeentered

fromtheslavereceivermode(TheI2Cmodulemustfirstreceiveacommandfromthemaster).Inanyof

theaddressingformatsshowninFigure28-7,Figure28-8,orFigure28-9,theslavetransmittermodeis

enterediftheslaveaddressbyteisthesameasitsownaddressandtheR/Wbithasbeentransmitted(if

theR/Wbitissetto1).TheslavetransmittershiftstheserialdataoutontheSDApinwiththeclock

pulsesthataregeneratedbythemasterdevice.Theslavedevicedoesnotgeneratetheclock,butitcan

holdtheSCLpinlowwheninterventionofthedeviceisrequired(XSMT=0)afterabytehasbeen

transmitted.

28.3.4SlaveReceiverMode

Inthismode,theI2Cmoduleisaslaveandreceivesdatafromamaster.Allslavesbegininthismode.

SerialdatabitsreceivedontheSDApinareshiftedinwiththeclockpulsesthataregeneratedbythe

masterdevice.Theslavedevicedoesnotgeneratetheclock,butitcanholdtheSCLpinlowwhile

interventionofthedeviceisrequired(RSFULL=1)afterabytehasbeenreceived.

1493

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2COperationModeswww.ti.com

28.3.5LowPowerMode

TheI2Cmodulecanbeplacedinlow-powermodebyagloballow-powermodeinitiatedbythesystem(by

writingtothePeripheralPower-DownSetRegisterinthePeripheralCentralResource(PCR)module.

Ineffect,low-powermodeshutsdownalltheclockstothemodule.Ingloballow-powermode,noregisters

arevisibletothesoftware;nothingcanbewrittentoorreadfromanyregister.

28.3.6FreeRunMode

TheI2CmodulecanbeplacedinfreerunmodewhentheFREEbit(I2CMDR.14)issetto1.Thisbitis

primarilyusedonanemulatorwhenencounteringabreakpointwhiledebuggingsoftware.WhentheFREE

bitissetto0,theI2CrespondsdifferentlydependingonwhethertheSCLishighorlow.IftheSCLislow,

theI2CstopsimmediatelyandkeepsdrivingtheSCLlowwhethertheI2Cisthemastertransmitteror

receiver.IftheSCLishigh,theI2CwaitsuntiltheSCLbecomesalowandthenstops.IftheI2Cisa

slave,itstopswhenthetransmission/receptioncompletes.

28.3.7IgnoreNACKMode

TheI2CmodulecanbeplacedintheignoreNACKmodebysettingtheIGNACKbitintheI2CEMDR

register.ThismodeallowsanI2CmodulethatisconfiguredasamastertransmittertoignoreaNACK

fromaslavedevicethatisnotcapableofgeneratingaproperACKsignal.

1494

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BuslineSCLDatafromdevice#1Datafromdevice#2BuslineSDA1111100000Device#1lostarbitrationandswitchesoff00



www.ti.comI2CModuleIntegrity

28.4I2CModuleIntegrity

ThefollowingsectiondiscusseshowtheI2Cmodulemaintainsprioritiesandorderamongsignalsand

commands.

28.4.1Arbitration

Iftwoormoremastertransmitterssimultaneouslystartatransmissiononthesamebus,anarbitration

procedureisinvoked.Figure28-11illustratesthearbitrationprocedurebetweentwodevices.The

arbitrationprocedureusesthedatapresentedontheSDAbusbythecompetingtransmitters.Thefirst

mastertransmitterthatgeneratesahighisoverruledbytheothermasterthatgeneratesalow.The

arbitrationproceduregivesprioritytothedevicethattransmitstheserialdatastreamwiththelowest

binaryvalue.Themastertransmitterthatlosesthearbitrationswitchestotheslavereceivermode,sets

thearbitrationlost(AL)flag,andgeneratesthearbitration-lostinterrupt.Thedatatransmittedbytheother

mastermoduleissalvaged,andtheI2Ccontinuestoreceivedatafromthemastermodule.Shouldtwoor

moredevicessendidenticalfirstbytes,arbitrationcontinuesonthesubsequentbytes.

If,duringaserialtransfer,thearbitrationprocedureisstillinprogresswhenarepeatedSTARTcondition

orSTOPconditionistransmittedtoI2Cbus,themastertransmittersinvolvedmustsendtherepeated

STARTconditionorSTOPconditionatthesamepositionintheformatframe.Inotherwords,arbitrationis

notallowedbetween:

•ArepeatedSTARTconditionandadatabit

•ASTOPconditionandadatabit

•ArepeatedSTARTconditionandaSTOPcondition

Slavesarenotinvolvedinthearbitrationprocedure.

Figure28-11.ArbitrationProcedureBetweenTwoMasterTransmitters

1495

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




BuslineSCLfromSCLfromSCLdevice#2device#1

WaitState

StartHIGHperiod

Busline



I2CModuleIntegritywww.ti.com

28.4.2I2CClockGenerationandSynchronization

Undernormalconditionsonlyonemasterdevicegeneratestheclocksignal;theSCL.Duringthe

arbitrationprocedure,however,therearetwoormoremasterdevicesandtheclockmustbesynchronized

sothatthedataoutputcanbecompared.Figure28-12illustratesclocksynchronization.Thewired-AND

propertyoftheSCLlinemeansthatadevicethatfirstgeneratesalowperiodontheSCLoverrulesthe

otherdevices.Atthishigh-to-lowtransition,theclockgeneratorsoftheotherdevicesareforcedtostart

theirownlowperiod.TheSCLlineisheldlowbythedevicewiththelongestlowperiod.Theotherdevices

thatfinishtheirlowperiodsmustwaitfortheSCLlinetobereleasedbeforestartingtheirhighperiods.A

synchronizedsignalontheSCLisobtainedwheretheslowestdevicedeterminesthelengthofthelow

periodandthefastestdevicedeterminesthelengthofthehighperiod.

Ifadevicepullsdowntheclocklineforalongertime,theresultisthatallclockgeneratorsmustenterthe

waitstate.Inthisway,aslaveslowsdownafastmasterandtheslowdevicecreatesenoughtimetostore

areceivedbyteortoprepareabytetobetransmitted.

NOTE:I2CProtocolFault

ThefollowingconditionsviolatetheclockspecasdefinedinthePhilipsI2Cbusspecification,

v2.1(TheI2CSpecification,Philipsdocumentnumber939839340011),andwillresultinan

I2Cprotocolfault:I2CCLKH=2I2CCLKL=2I2CPSC=2ThiswillcausetheSDAdata

transitiontooccurwhiletheSCLishigh.

Figure28-12.SynchronizationofTwoI2CClockGeneratorsDuringArbitration

28.4.3Prescaler

TheI2Cmoduleisoperatedbythemoduleclock.ThisclockisgeneratedbywayoftheI2Cprescaler

block.Theprescalerblockconsistsofa8-bitregister,I2CPSC,usedfordividingdownthedevice

peripheralclock(VBUS_CLK)toobtainamoduleclockbetween6.7MHzand13.3MHz.

28.4.4NoiseFilter

Thenoisefilterisusedtosuppressanynoisesthatare50nsorless.Itisdesignedtosuppressnoisewith

onemoduleclock,assumingthelowerandupperlimitsofthemoduleclockare6.7MHzand13.3MHz,

respectively.

1496

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOperationalInformation

28.5OperationalInformation

ThefollowingsectionprovidesspecificinformationabouthowtheI2Cmoduleoperates.

28.5.1I2CModuleInterrupts

TheI2Cmodulegeneratesseventypesofinterrupts.Theseseveninterruptsareaccompaniedwithseven

interruptmaskbitsintheinterruptmaskregister(I2CIMR)andwithseveninterruptflagbitsinthestatus

register(I2CSR).

28.5.1.1I2CInterruptRequests

TheI2Cmodulegeneratestheinterruptrequestsdescribedbelow.Allrequestsaremultiplexedthroughan

arbiterintoasingleI2CinterruptrequesttotheCPU.Eachinterruptrequesthasaflagbitandanenable

bit.Interruptsmustbeenabledpriortotheoccuranceoftheexpectedinterruptcondition.Whenoneofthe

specifiedeventsoccurs,theflagbitisset.Ifthecorrespondingenablebitis0,theinterruptrequestis

blocked.Iftheenablebitis1,theinterruptrequestisforwardedtotheCPUasanI2Cinterruptrequest.As

analternative,theCPUcanpollallofthebitsshowninTable28-2.

Table28-2.InterruptRequestsGeneratedbyI2CModule

Flag

Name

Generated

AL

Arbitration-lostinterrupt

GeneratedwhentheI2Cmodulehaslostanarbitrationcontestwithanother

master-transmitter

NACK

No-acknowledgeinterrupt

GeneratedwhenthemasterI2Cdoesnotreceiveanacknowledgefromthe

receiver

ARDY

Register-access-readyinterrupt

Generatedwhenthepreviouslyprogrammedaddress,dataandcommand

havebeenperformedandthestatusbitshavebeenupdated.Theinterruptis

usedtonotifythedevicethattheI2Cregistersarereadytobeaccessed.

RXRDY

Receive-data-readyinterrupt

Generatedwhenthereceiveddatainthereceive-shiftregister(I2CSR)has

beencopiedintothedatareceiveregister(I2CDRR).TheRXRDYbitcanalso

bepolledbythedevicetodeterminewhentoreadthereceiveddatainthe

I2CDRR.

TXRDY

Transmit-data-readyinterrupt

Generatedwhenthetransmitteddatahasbeencopiedfromthedatatransmit

register(I2CDXR)intothetransmit-shiftregister(I2CXSR).TheTXRDYbit

canalsobepolledbythedevicetodeterminewhentowritethenextdatainto

I2CDXR.

SCD

Stop-condition-detectinterrupt

GeneratedwhenaSTOPconditionhasbeendetected.

AAS

Address-as-slaveinterrupt

GeneratedwhentheI2Chasrecognizeditsownslaveaddressoranaddress

ofallzeroes.

Theinterruptvectorregister(I2CIVR)containsthebinary-coded-interruptvectorthatindicatesthehighest

priorityinterruptthatispendingandenabled.WhenI2CIVRisread,thecorrespondinginterruptflagsfor

AL,NACKandSCDareautomaticallycleared,iftheirinterruptsareenabled.ReadingtheI2CIVRwillnot

cleartheAAS,ARDY,RXRDY,orTXRDYinterruptpendingflags.PleaseseesectionSection28.6.3,I2C

StatusRegister(I2CSTR)forthemethodtoclearthesefourflags.

Ifmorethanoneinterruptispending,anewinterruptwillbegeneratedforthenexthighestprioritypending

interruptwhenyoure-enabletheI2Cinterrupt.

AtransmitinterruptisgeneratedjustaftertheSTARTconditioninmastertransmittermode.Thisensures

thattheCPUwillgetaninterruptevenifnoslavereturnsanACKtotheslaveaddressfollowingthe

STARTcondition.

ItisimportanttonotethatwhentheI2Cisconfiguredtogenerateinterruptsasaslavetransmitterandthe

backwardcompatibilitymode(BCM)bitissetto1,anextratransmitinterruptoccurs.Theapplication

shouldmonitortheACKfromthemastertodeterminewhethertoloadanotherbyteintoI2CDXR.See

AppendixA:BackwardCompatibilityMode,formoreinformation.

1497

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






OperationalInformationwww.ti.com

28.5.2DMAControllerEvents

TheI2CmodulehastwoeventsthatusetheDMAcontrollertosynchronouslyreadreceiveddata

(I2CREVNT)fromI2CDRR,andsynchronouslywritedata(I2CWEVNT)tothetransmitbuffer,I2CDXR.

ThereadandwriteeventshavethesametimingasI2CRRDY(I2CRINT)andI2CXRDY(I2CXINT),

respectively.

TheCPUortheDMAcontrollerreadsthereceiveddatafromI2CDRRandwritesthedatatobe

transmittedtoI2CDXR.TheRXRDYbitisautomaticallyclearedwhentheDMAcontrollerreadsthe

I2CDRRregister,andtheTXRDYbitisautomaticallyclearedwhentheDMAcontrollerwritestothe

I2CDXRregister.

DatawrittentoI2CDXRiscopiedtoI2CXSRandshiftedoutfromtheSDApinwhentheI2Cmoduleis

configuredasatransmitter.WhentheI2Cmoduleisconfiguredasareceiver,receiveddataisshiftedinto

ICRSRandcopiedtoI2CDRR,whichcanbereadbytheCPUortheDMAcontroller.

Atransmitevent(I2CWEVNT)isgeneratedafteraSTARTconditioninmastertransmittermode.This

ensuresthattheDMAgetsaneventevenifnoslavereturnsanACKtotheslaveaddressfollowingthe

STARTcondition.

NOTE:UnexpectedDMAtransmitandreceiveevent

AnunexpectedDMAtransmitevent(ICXEVT)andaDMAreceiveevent(ICXRDY)are

generatedin10-bit,mastertransmit,repeatmode.Thiseventoccurssoonafterthestart

conditionbutbeforethefirstbitoftheaddressistransmitted.Inthisevent,noDMAactivity

shouldbeinitiatedwithouttheslaveACKbeingreceived.

28.5.3I2CEnable/Disable

TheI2CmodulecanbeenabledordisabledwiththeI2Cresetenablebit(IRS)intheI2Cmoduleregister

(I2CMDR).Thisoccursinoneoftwoways:

•Write0totheI2Cresetbit(IRS)inI2CMDR.AllstatusbitsareforcedtothedefaultvaluesandtheI2C

moderemainsdisableduntilIRSischangedto1.TheSDAandSCLpinsareinthehighimpedance

state.

•InitiateadeviceresetbydrivingthePORRSTpinlow.Theentiredeviceisresetandisheldinthe

resetstateuntilthepinisreleasedandisdrivenhigh.WhenPORRSTisreleased,allI2Cmodule

registersareresettotheirdefaultvalues.TheIRSbitisforcedto0,whichresetstheI2Cmodule.The

I2Cmodulestaysintheresetstateuntila1iswrittentotheIRSbit.

IRSmustbe0whiletheI2Cmoduleisbeingconfigured.ForcingIRSto0canbeusedtosavepowerand

alsoclearerrorconditions.

28.5.4GeneralPurposeI/O

BothoftheI2Cpinscanbeprogrammedtobegeneral-purposeI/OpinsviatheI2Cpincontrolregisters

(I2CPFNC,I2CDIR,I2CDOUT,andI2CDIN).

WhentheI2Cmoduleisnotused,theI2Cpinsmaybeprogrammedtobeeithergeneralpurposeinputor

general-purposeoutputpins.ThisfunctioniscontrolledintheI2CDIRandI2CPFNCregisters.Notethat

eachpincanbeprogrammedtobeeitheranI2CpinoraGIOpin.

IftheI2Cfunctionistobeused,theapplicationsoftwaremustensurethateachpinisconfiguredasan

I2CpinandnotaGIOpin,orelseunexpectedbehaviormayresult.

1498

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comOperationalInformation

28.5.5PullUp/PullDownFunction

I2Cmodulepinscanhaveeitheranactivepulluporactivepulldownthatmakesitpossibletoleavethe

pinsunconnectedexternally.Thepinscanbeprogrammedtohavetheactivepullfunctionenabledor

disabledbywritingtothecorrespondingbitintheI2CPDISregister.Pleaseseethedevice-specificdata

sheetforthedefaultinternalpull(pull-up,pull-downornopull)onthepins.

Thepullonthepinsisprogrammabletoasettingotherthanthedefaultinternalpullasspecifiedinthe

datasheet.Thepinscanbeprogrammedtohaveeitheranactivepulluporanactivepulldownfunction

bywritingtothecorrespondingbitinI2CPSELregister.Thepullup/pulldownfunctionisactiveonthepin

onlywhenthepullenabledisprogrammedintheI2CPDISregister.

Thepullup/pulldownfunctionsaredeactivatedwhenabidirectionalpinisconfiguredasanoutput.At

systemreset,thepullupfunctionofallthepinsisdisabled.Pleaseseethedevice-specificdatasheetfor

thecurrentsuppliedbythepullup/pulldown.

28.5.6OpenDrainFunction

TheI2Cpinscanbeprogrammedtoincludeanopendrainfunctionwhentheyareconfiguredasoutput

pins.ThisisdonebywritingtothecorrespondingbitoftheI2CPDRregister.Whentheopendrainfunction

isenabled,alowvalue(0)writtentothedataoutputregisterforcesthepintoalowoutputvoltage(VOLor

lower),whereasahighvalue(1)writtentothedataoutputregisterforcesthepintoahighimpedence

state.Theopendrainfunctionisdisabledwhenthepinisconfiguredasaninputpin.

1499

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6I2CRegisters

Table28-3providesasummaryoftheregisters.

Theupperword(upper16bits)ofthebelowregistersareallreadas0s.Writeshavenoeffectonthese

bits.Foramoredetaileddescriptionoftheindividualbits,seethefollowingsections.

Table28-3.I2CControlRegisterSummary

Offset

Acronym

RegisterDescription

Section

00

I2COAR

I2COwnAddressManager

Section28.6.1

04h

I2CIMR

I2CInteruptMaskRegister

Section28.6.2

08h

I2CSTR

I2CStatusRegister

Section28.6.3

0Ch

I2CCKL

I2CClockDividerLowRegister

Section28.6.4

10h

I2CCKH

I2CClockControlHighRegister

Section28.6.5

14h

I2CCNT

I2CDataCountRegister

Section28.6.6

18h

I2CDRR

I2CDataReceiveRegister

Section28.6.7

1Ch

I2CSAR

I2CSlaveAddressRegister

Section28.6.8

20h

I2CDXR

I2CDataTransmitRegister

Section28.6.9

24h

I2CMDR

I2CModeRegister

Section28.6.10

28h

I2CIVR

I2CInterruptVectorRegister

Section28.6.11

2Ch

I2CEMDR

I2CExtendedModeRegister

Section28.6.12

30h

I2CPSC

I2CPrescaleRegister

Section28.6.13

34h

I2CPID1

I2CPeripheralIDRegister1

Section28.6.14

38h

I2CPID2

I2CPeripheralIDRegister2

Section28.6.15

3Ch

I2CDMACR

I2CDMAControlRegister

Section28.6.16

40h-44h

Reserved

Reserved

48h

I2CPFNC

I2CPinFunctionRegister

Section28.6.17

4Ch

I2CPDIR

I2CPinDirectionRegister

Section28.6.18

50h

I2CDIN

I2CDataInputRegister

Section28.6.19

54h

I2CDOUT

I2CDataOutputRegister

Section28.6.20

58h

I2CDSET

I2CDataSetRegister

Section28.6.21

5Ch

I2CDCLR

I2CDataClearRegister

Section28.6.22

60h

I2CPDR

I2CPinOpenDrainRegister

Section28.6.23

64h

I2CPDIS

I2CPullDisableRegister

Section28.6.24

68h

I2CPSEL

I2CPullSelectRegister

Section28.6.25

6Ch

I2CSRS

I2CPinsSlewRateSelectRegister

Section28.6.26

NOTE:Theactualbaseaddressoftheseregistersaredevice-andCPU-specific.Seethespecific

devicedatasheettoverifytheI2Cregisteraddresses.

1500

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.1I2COwnAddressManager(I2COAR)

The16-bitmemory-mappedI2Cownaddressregisterisusedtospecifyitsownaddress.Figure28-13

andTable28-4describethisregister.

Figure28-13.I2COwnAddressManagerRegister(I2COAR)[Offset=00]

15

10

9

0

Reserved

OA

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-4.I2COwnAddressManagerRegister(I2COAR)FieldDescriptions

Bit

Field

Value

Description

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

OA

0-3FFh

Ownaddress

ThesebitsreflectthebusaddressoftheI2Cmodule.Whentheexpandaddress(XA)bit

I2CMDR.8issetto1,theI2Cisinexpandaddressmode(10-bitaddressingmode).Ineither7

or10-bitaddressmode,all10-bitsarebothreadableandwritable.Bits7,8,and9shouldonly

beusedin10-bitaddressmode.Table28-5providesthecorrectmodesforthesebits.Notethat

theusercanprogramtheI2Cownaddresstoanyvalueaslongasitdoesnotconflictwith

othercomponentsinthesystem.

Table28-5.CorrectModeforBitsOA.9:0

BitsUsed

Mode

ValueofXA

OA.6:0

7BitAddressing

0

OA.9:0

10BitAddressing

1

1501

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.2I2CInterruptMaskRegister(I2CIMR)

The7-bitmemorymappedI2Cinterruptmaskregisterisusedbythedevicetoenable/disablethe

interrupts.Figure28-14andTable28-6describethisregister.

Figure28-14.I2CInterruptMaskRegister(I2CIMR)[Offset=04h]

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

Reserved

AASEN

SCDEN

TXRDYEN

RXRDYRN

ARDYEN

NACKEN

ALEN

R-0

RW-0

RW-0

RW-0

RW-0

RW-0

RW-0

RW-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-6.I2CInterruptMaskRegister(I2CIMR)FieldDescriptions

Bit

Field

Value

Description

15-7

Reserved

0

Readreturns0.Writeshavenoeffect.

6

AASEN

AddressAsSlaveInterruptEnable

0

TheAASENinterruptisdisabled.

1

TheAASENinterruptisenabled.

5

SCDEN

StopConditionInterruptEnable

0

TheSCDENinterruptisdisabled.

1

TheSCDENinterruptisenabled.

4

TXRDYEN

TransmitDataReadyInterruptEnable

0

TheTXRDYENinterruptisdisabled.

1

TheTXRDYENinterruptisenabled.

3

RXRDYEN

ReceiveDataReadyInterruptEnable

0

TheRXRDYENinterruptisdisabled.

1

TheRXRDYENinterruptisenabled.

2

ARDYEN

RegisterAccessReadyInterruptEnable

0

TheARDYENinterruptisdisabled.

1

TheARDYENinterruptisenabled.

1

NACKEN

NoAcknowledgementInterruptEnable

0

TheNACKENinterruptisdisabled.

1

TheNACKENinterruptisenabled.

0

ALEN

ArbitrationLostInterruptEnable

0

TheALENinterruptisdisabled.

1

TheALENinterruptisenabled.

1502

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.3I2CStatusRegister(I2CSTR)

Figure28-15andTable28-7describethisregister.

Figure28-15.I2CStatusRegister(I2CSR)[Offset=08h]

15

14

13

12

11

10

9

8

Reserved

SDIR

NACKSNT

BB

RSFULL

XSMT

AAS

AD0

R-0

R/W-0

R/W-0

R-0

R-0

R/W-1

R-0

R-0

7

6

5

4

3

2

1

0

Reserved

SCD

TXRDY

RXRDY

ARDY

NACK

AL

R-0

R/W-0

R/W-1

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-7.I2CStatusRegister(I2CSTR)FieldDescriptions

Bit

Field

Value

Description

15

Reserved

0

Readreturns0.Writeshavenoeffect.

14

SDIR

Slavedirection

Settingthisbitto1indicatesthattheI2Cslaveisatransmitter.Clearingthisbitto0indicatesthat

theI2Cisamastertransmitter/receiveroraslavereceiver.ThisbitisalsoclearedbytheSTOPor

STARTconditions.InDLBmode(inwhichtheconfigurationshouldbemaster-transmitterslave-

receiver),thisbitisclearedto0.

Writinga1tothisbitwillclearit.

0

TheI2Cisamastertransmitter/receiveroraslavereceiver.

1

TheI2Cisaslavetransmitter.

13

NACKSNT

Noacknowledgesent

Thisbitissetto1toindicatethatanoacknowledgement(NACK)hasbeensentbecausethe

NACKMODbitwassetto1.

Writinga1tothisbitwillclearit.

0

ANACKhasnotbeensent.

1

ANACKwassentbecausetheNACKMODwassetto1.

12

BB

Busbusy

Thisbitindicatesthestateoftheserialbus.

OnreceptionofaSTARTconditionoriftheI2CdetectsalowstateonI2CSCL,thedevicesetsBB

=1.IfthenIRSissetto1duringtransactionbetweenotherI2Cdevices,theBBbitissetatthe

firstfallingedgeofSCLorSTARTcondition.

BBisclearedto0afterthereceptionofaSTOPcondition.BBiskeptto0regardlessoftheSCL

statewhentheI2Cisinreset(nIRS=0).

0

Thebusisfree.

1

Thebusisbusy.

11

RSFULL

Receivershiftfull

Thisbitissetto1toindicatethatthereceiverhasexperiencedoverrun.Overrunoccurswhenthe

receiveshiftregisterisfullandI2CDRRhasnotbeenreadsincethereceiveshiftregisterto

I2CDRRtransfer.ThecontentsofI2CDRRarenotlost.TheI2CcorelogicisholdingforI2CDRR

readaccess.Thisbitisalsosetwhen,inmaster-repeat-mode,theI2Creceivesabyteofdata.

ThereisnodifferencebetweenRXRDYandRSFULLinthiscase.TheI2Cmasterwillnot

continuethetransferaslongasthereceiveddataisintheI2CDRRorreceiveshiftregister.

RSFULLisclearedwhenreadingtheI2CDRR,resettingtheI2C(IRS_=0),orresettingthe

device.

0

Nooverrunhasoccurred.

1

Anoverrunhasoccurred.

1503

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

Table28-7.I2CStatusRegister(I2CSTR)FieldDescriptions(continued)

Bit

Field

Value

Description

10

XSMT

Transmitshiftempty

Thisbitisclearedto0toindicatethatthetransmitterhasexperiencedunderflow.Underflow

occurswhenthetransmitshiftregisterisemptyandI2CDXRhasnotbeenloadedsincethelast

I2CDXRtotransmitshiftregistertransfer.TheI2CcorelogiciswaitingforI2CDXRwriteaccess.

XMSTnissetto1asaresultofwritingtoI2CDXR,byresettingtheI2Cblock(IRS=0),orby

resettingthedevice.

Inrepeatmode,iftheI2CinmastertransmittermodeisholdingtransferwithXSMTn=0(i.e.

waitingforfurtheraction)andtheSTTorSTPbitisset,XSMTnissetto1byhardware.

0

Anunderflowhasoccurred.

1

Nounderflowhasoccurred.

9

AAS

Addressasslave

Thisbitcannotbeclearedbywritinga1tothebitorbyreadingtheI2CIVRregister.

0

ThisbitisclearedbyaSTOPconditionordetectionofanyaddressbytethatdoesnotmatch

I2COAR.

1

Thisbitissetto1bythedevicewhenithasrecognizeditsownslaveaddressoranaddressofall

zeros(generalcall).

8

AD0

Addresszerostatus

0

ASTARTorSTOPconditionwasdetected.Nogeneralcallwasdetected.

1

Anaddressofallzeros(generalcall)wasdetected.

7-6

Reserved

0

Readreturns0.Writeshavenoeffect.

5

SCD

Stopconditiondetectinterruptflag

Thisbitissetto1whentheI2CreceivesorsendsaSTOPcondition.

Thisbitisclearedto0bywritinga1tothisbitorreadingthevalue0x0006fromI2CIVR.

Writinga1tothisbitwillclearthevalue0x0006fromI2CIVR.

0

NoSTOPconditionhasbeensentorreceived.

1

ASTOPconditionhasbeensentorreceived.

4

TXRDY

Transmitdatareadyinterruptflag

Thisbitissetto1toindicatewhendatainthetransmitdataregister,I2CDXR,hasbeencopied

intothetransmitshiftregister.Thisbitcanalsobepolledbythedevicetoindicatewhentowrite

thenexttransmitteddataintotheI2CDXR.Writinga1tothisbitwillsetit.

Thisbitisclearedto0andcode0x0005inI2CIVRisclearedwhentheI2CDXRiswritten.

ThisbitcannotbeclearedbyreadingtheI2CIVRregister.

0

I2CDXRcontainsdatatotransmit.

1

I2CDXRisempty.

3

RXRDY

Receivedatareadyinterruptflag

Thisbitissetto1toindicatewhenthedatainthereceiveshiftregisterhasbeencopiedintothe

datareceiveregister(I2CDRR).Thisbitcanalsobepolledbythedevicetoindicatewhentoread

thereceiveddataintheI2CDRR.

Writinga1tothisbitorreadingfromI2CDRRwillclearthisbit,andwillalsoclearcode

0x0004fromI2CIVR.ThisbitcannotbeclearedbyreadingtheI2CIVRregister.

0

TheI2CDRRhasbeenread.

1

ThereceiveddatahasbeenwrittenintotheI2CDRR.

1504

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

Table28-7.I2CStatusRegister(I2CSTR)FieldDescriptions(continued)

Bit

Field

Value

Description

2

ARDY

Registeraccessreadyinterruptflag

Thisbitissetto1whenthepreviouslyprogrammedaddress,dataandcommandhasbeen

performedandthestatusbithasbeenupdated.Theflagisusedbythedevicetoindicatethatthe

I2Cregistersarereadytobeaccessedagain.

ThisbitisautomaticallyclearedbyhardwarewhenwritingdatatoI2CDXRintransmit

mode,readingdatafromI2CDRRinreceivemode,orsettingSTTorSTPbit.Writinga1to

thisbitwillclearthisbit.ThisbitcannotbeclearedbyreadingtheI2CIVRregister.

WhenRM=0,ARDYissetwhenI2CCNTispassed0ifSTPregisterbithasnotbeenset.When

RM=1,ARDYissetateachbyteend.

WhenFDFis0,ARDYisassertedaftertheACKfortheslaveaddress.WhenFDFis1,thereisno

slaveaddress.Therefore,ARDYisassertedaftersendingthestartcondition.

0

Nonrepeatmode,(RM=0):I2Cregistersarenotreadytobeaccessed.

Repeatmode(RM=1):I2Cregistersarenotreadytobeaccessed.

1

Nonrepeatmode,(RM=0):ICCNTpasses0(ifSTPbithasnotbeenset).

Repeatmode(RM=1):TheendofeachbytewastransmittedfromI2CDXR.

1

NACK

Noacknowledgementinterrupt

Thisbitissetto1whenthemasterI2Cdoesnotreceiveanacknowledgementfromthereceiver.

ThisbitissetonlywhentheI2Chasreceivedano-acknowledgeinmastermode.ThisbitisNOT

setbyno-acknowledgementafterStartbyte.Inmasterstartbytemode,thefirstbyte(addressof

allzeroes)receivesaNACKbutdoesnotclearthestopbit.

Writinga1tothisbitorreadingthevalue0x0002fromI2CIVRwillclearthisbit.

0

Anacknowledgewasdetected.

1

NoacknowledgewasdetectedortheI2Cisoperatinginthegeneralcall,eventhoughan

acknowledgementwasreceived.ThisvalueclearstheSTPbit.

0

AL

Arbitrationlostinterruptflag

Thisbitissetto1whenarbitrationhasbeenlost.

Writinga1tothisbitorreadingthevalue0x0001fromI2CIVRwillclearthisbit.

0

Nolossofarbitrationhasbeendetected.

1

Thedeviceinthemastertransmittermodesensesithaslostanarbitration.Thisoccurswhentwo

ormoretransmittersstartatransmissionalmostsimultaneouslyorwhentheI2Cattemptstostarta

transferwhileBB=1.Whenthisissetto1duetoarbitrationlost,thedevicebecomesaslave

receiverandtheMST,STTandSTPbitsinI2CMDRareclearedto0.

1505

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




÷÷øöççèæ+=kFrequencyModuleClocdCCLKHIHighTime2

÷÷øöççèæ+=kFrequencyModuleClocdCCLKLILowTime2



I2CRegisterswww.ti.com

28.6.4I2CClockDividerLowRegister(I2CCKL)

TheI2Cclockdividerlowregisterisa16-bitmemorymappedregisterusedtodividethemasterclock

downtoobtaintheI2Cserialclocklowtime.Figure28-16andTable28-8describethisregister.

Figure28-16.I2CClockDividerLowRegister(I2CCKL)[Offset=0Ch]

15

0

CLKL

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-8.I2CClockDividerLowRegister(I2CCKL)FieldDescriptions

Bit

Field

Value

Description

15-0

CLKL

0-FFFFh

Lowtimeclockdivisionfactor

Usedtodividedownthemoduleclocktocreatethelowtimeportionofthemasterclocksignal

thatwillappearontheSCLpin.:

(65)

wheredisthevaluethatdependsontheI2CPSC(seeSection28.1.3).

ThisregistermustbeconfiguredwhiletheI2Cisstillinreset(nIRS=0).

28.6.5I2CClockControlHighRegister(I2CCKH)

TheI2Cclockdividerhighregisterisa16-bitmemorymappedregisterusedtodividethemasterclock

downtoobtaintheI2Cserialclockhightime.Figure28-17andTable28-9describethisregister.

Figure28-17.I2CClockControlHighRegister(I2CCKH)[Offset=10h]

15

0

CLKH

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-9.I2CClockControlHighRegister(I2CCKH)FieldDescriptions

Bit

Field

Value

Description

15-0

CLKH

0-FFFFh

Hightimeclockdivisionfactor

Usedtodividedownthemoduleclocktocreatethehightimeportionofthemasterclocksignal

thatwillappearontheSCLpin:

(66)

wheredisthevaluethatdependsontheI2CPSC(seeSection28.1.3).

ThisregistermustbeconfiguredwhiletheI2Cisstillinreset(nIRS=0).

1506

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.6I2CDataCountRegister(I2CCNT)

TheI2Cdatacountregisterisa16-bitmemorymappedregisterusedtocountreceivedortransmitted

databytes.ThisregisterisalsousedtogeneratetheSTOPconditionwhichterminatesthetransferafter

thecounterreacheszero.Figure28-18andTable28-10describethisregister.

Figure28-18.I2CDataCountRegister(I2CCNT)[Offset=14h]

15

0

CNT

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-10.I2CDataCountRegister(I2CCNT)FieldDescriptions

Bit

Field

Value

Description

15-0

CNT

0-FFFFh

Datacounter

Thisdowncounterisusedtogenerateastopconditionifastopconditionisspecified(STP=1).

Note:ICCNTisadon’tcarewhenRMissetto1.

00

Thedatacounteris65536.

1h

Thedatacounteris1.

28.6.7I2CDataReceiveRegister(I2CDRR)

TheI2Cdatareceiveregisterisa16-bitmemorymappedregisterusedbythedevicetoreadthereceived

data.Figure28-19andTable28-11describethisregister.

Figure28-19.I2CDataReceiveRegister(I2CDRR)[Offset=18h]

15

8

7

0

Reserved

DATARX

R-0

R-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-11.I2CDataReceiveRegister(I2CDRR)FieldDescriptions

Bit

Field

Value

Description

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

DATARX

0-FFh

Receivedata

AreadfromthisregisterclearstheRXRDYbitandclearscode4hfromtheI2CIVRregister.

1507

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.8I2CSlaveAddressRegister(I2CSAR)

TheI2Cslaveaddressregisterisa16-bitmemory-mappedregisterusedtospecifytheaddressofthe

slavedevicetocommunicatetoontheI2Cbus.Figure28-20andTable28-12describethisregister.

Figure28-20.I2CSlaveAddressRegister(I2CSAR)[Offset=1Ch]

15

10

9

0

Reserved

SA

R-0

R/W-3FFh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-12.I2CSlaveAddressRegister(I2CSAR)FieldDescriptions

Bit

Field

Value

Description

15-10

Reserved

0

Readreturns0.Writeshavenoeffect.

9-0

SA

7-or10-bitprogrammableslaveaddress

Ineithermode,all10-bitsarereadableandwritable.Bits7,8,and9shouldonlybeusedin10-

bitaddressmode.Table28-13illustratesthecorrectmodeforeachbit.

Table28-13.CorrectModesforBitsSA(9–0)

BitsUsed

Mode

ValueofXA

SA(6–0)

7-bitaddressing

0

SA(9–0)

10-bitaddressing

1

28.6.9I2CDataTransmitRegister(I2CDXR)

Figure28-21andTable28-14describethisregister.

Figure28-21.I2CDataTransmitRegister(I2CDXR)[Offset=20h]

15

8

7

0

Reserved

DATATX

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-14.I2CDataTransmitRegister(I2CDXR)FieldDescriptions

Bit

Field

Value

Description

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

DATATX

0-FFh

Transmitdata

DatawrittentothisregisterwillbetransmittedontheI2Cbus.Awritetothisregisterclearsthe

TXRDYbitandclearscode0x05fromtheI2CIVRregister.

1508

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.10I2CModeRegister(I2CMDR)

Figure28-22andTable28-15describethisregister.

Figure28-22.I2CModeRegister(I2CMDR)[Offset=24h]

15

14

13

12

11

10

9

8

NACKMOD

FREE

STT

Reserved

STP

MST

TRX

XA

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

0

RM

DLB

nIRS

STB

FDF

BC

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-15.I2CModeRegister(I2CMDR)FieldDescriptions

Bit

Field

Value

Description

15

NACKMOD

No-acknowledge(NACK)mode

Thisbitisusedtosendanacknowledge(ACK)orano-acknowledge(NACK)tothetransmitter.

ThisbitisonlyapplicablewhentheI2Cisinreceivermode.Inmasterreceivermode,whenthe

internaldatacounterdecrementstozero,theI2CsendsaNACK.ThemasterreceiverI2Cfinshes

atransferwhenitsendsaNACK.TheI2CignoresICCNTwhenNACKMODis1.TheNACKMOD

bitshouldbesetbeforetherisingedgeofthelastdatabitifaNACKmustbesent,andthisbitis

clearedonceaNACKhasbeensent.

0

TheI2CsendsanACKtothetransmitterduringtheacknowledgecycle.

1

TheI2CsendsaNACKtothetransmitterduringtheacknowledgecycle.

14

FREE

Freerunningbit

ThisbitisusedtodeterminethestateoftheI2Cwhenabreakpointisencounteredinthehigh

levellanguage(HLL)debugger.

0

TheI2CstopsimmediatelyifSCLislowandkeepsdrivingSCLlowiftheI2Cmasterisa

transmitter/receiver.IfSCLishigh,I2CwaitsuntilSCLbecomeslowandthenstops.IftheI2Cisa

slave,itwillstopwhenthetransmission/receptioncompletes.

1

TheI2Crunsfree.

13

STT

Startcondition

ThestartconditionbitworkswiththeSTPbit(masteronlymode).TheSTTandSTPbitsare

configuredtogeneratedifferenttransferformats(seeTable28-16).TheSTTandSTPbitscanbe

usedtoterminatetherepeatmode.ThisbittakesoneI2Cmoduleclockcycletoset.

0

TheSTTisresetto0bythehardwareaftertheSTARTconditionhasbeengenerated.

1

STTissetto1bythedevicetogenerateaSTARTcondition.Inmastermode,settingSTTto1

generatesaSTARTcondition.

12

Reserved

0

Readreturns0.Writeshavenoeffect.

11

STP

Stopcondition

1(Mastermodeonly)Thisbitcanbesettoa1bytheCPUtogenerateastopcondition.Itisreset

to0bythehardwareafterthestopconditionhasbeengenerated.Thestopconditionisgenerated

whenICCNTpasses0whentheI2Cisinnon-repeatmode(RM=0).Inrepeatmode(RM=1),the

stopconditionisgeneratedifSTPbitis1.Intransmittermode,I2CTXRDYneedstobe1(i.e.you

havetosetSTPbitunlessyouwritedataintoI2CDXR).

0

STPisresetto0bythehardwareaftertheSTOPconditionhasbeengenerated.

1

STPissetto1bythedevicetogenerateaSTOPcondition.

10

MST

Master/slavemodebit

Thisbitdetermineswhetherthemodulewilloperateinmasterorslavemode;seeTable28-17.

ThisbitisclearedaftergeneratingaSTOPcondition.TheBBbitisclearedfirst,andMSTbitis

clearedsecond.Beforestartingthenexttransactioninmastermode,thisbitmustbeconfirmedto

becleared.

0

Themoduleisintheslavemodeandtheclockisreceivedfromthemasterdevice.

1

Themoduleisinthemastermodeanditgeneratestheclock.Thisbitisclearedwhenthetransfer

hascompleted.

1509

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

Table28-15.I2CModeRegister(I2CMDR)FieldDescriptions(continued)

Bit

Field

Value

Description

9

TRX

Transmit/receivebit

ThisbitdeterminesthedirectionofdatatransmissionoftheI2Cmodule.SeeTable28-17.

0

ThemoduleisinthereceivemodeanddataontheSDAlineisshiftedintothedataregister

I2CDRR.

1

ThemoduleisinthetransmitmodeandthedataintheI2CDXRisshiftedoutontheSDAline.

8

XA

Expandaddressenablebit

Thisbitcontrolstheaddressingmode.WhenXAissetto1,theI2Cdoesnotsupportthe

combinedformatinmastermodeoperations.However,theI2Cwillacknowledgeandsupportthe

formatswhenconfiguredasaslave.ThisbitneedstobeconfiguredeveniftheI2Cisinslave

mode.

0

Themodeissetto7-bitaddressingmode(normaladdressmode).

1

Themodeissetto10-bitaddressingmode(expandedaddressmode).

7

RM

Repeatmodeenablebit(Mastermodeonly)

Thisbitisa‘don’tcare’ifthemoduleisconfiguredinslavemode(MST=0);seeTable28-16.

Eachtimeabyteofdataisreceived,theusershoulddecidewhetherornottocontinuereceiving

moredata.SeeFigure28-23foradiagramofthisfunction.

0

Themodeisnotinrepeatmode.

1

Inrepeatmode,dataiscontinuouslytransmittedoutoftheICDXRorreceivedintotheICDRRuntil

theSTPbitissetto1regardlessofICCNTvalue.SeeTable28-16formoduleconditions.

6

DLB

Digitalloopbackenablebit

ThisbitdisablesorenablesthedigitalloopbackmodeoftheI2C.ThisbitonlyappliesinMaster

transmittermode.

0

Digitalloopbackmodeisdisabled.

1

Digitalloopbackmodeisenabled.Indigitalloopbackmode,datatransmittedoutoftheI2CDXR

willbereceivedintheI2CDRR.TheaddressoftheI2COARisoutputonSDA.

5

nIRS

I2Cresetenablebit

Whensetto0,thisbitwillplaceallstatusregistersinthismoduletotheirdefaultstate.Resetting

nIRSduringadatatransfercanhangtheI2Cbus.

0

I2Cisinreset.

1

I2Cisoutofreset.

4

STB

Startbytemodeenablebit(Mastermodeonly)

TheStartbytemodebitissetto1bytheCPUtoconfiguretheI2CinStartbytemode.TheI2C

sends“00000001”regardlessoftheI2CSARvalue.RefertothePhilipsI2Cspecificationformore

details.

0

ThemoduleisnotinSTARTbytemode.

1

ThemoduleisinSTARTbytemode.

3

FDF

Freedataformatenablebit

Thisbitonfiguresthemoduletooperateinfreedataformatmode(seeTable28-17)inbothmaster

andslavemodes.WhenFDFis0,ARDYisassertedafterACKfortheslaveaddress.WhenFDF

is1,thereisnoslaveaddress.Therefore,ARDYisassertedaftersendingthestartcondition.FDF

modeisnotsupportedindigitalloopbackmode.

0

Themoduleisnotinfreedataformatmode.

1

Themoduleisinfreedataformatmode.

2-0

BC

Bitcount

ThisbitdefinesthenumberofbitsstartingfromtheLSB(excludingtheacknowledgebit)thatare

sentonthebuswhendataiswrittentothedatatransmitregister.

IfthebitsBC0,BC1,andBC2areall0,thenthenumberofbitssentonthebusis8.Ifthebit

countbitsareanon-zerovalue,thenthenumberofbitssentonthebusisthatvalue.Thevalue

“001”isreserved.Whenperformingatransferusingthebitcountof,forexample,n(wherenis

nonzero),onlythenleastsignificantbitsinthedatareceiveregisterarevalidandcorrect.Therest

ofthebitsshouldbedisregarded.SeeTable28-18formoreinformation.

1510

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Master-transmitter (repeat mode)(Please note that this behavior is independent of BCM bit)

SAAAnAPWSlave addressDataDataDataInterrupt

Set STPbit



www.ti.comI2CRegisters

Figure28-23.TypicalTimingDiagramofRepeatMode

Table28-16.I2CModuleCondition,BusActivity,andMode

RM

STT

STP

Condition

BusActivities(1)

Mode

0

0

0

Idle

None

N/A

0

0

1

Stop

P

N/A

0

1

0

(Repeat)Start

S-A-D..(n)..D

Repeatn

0

1

1

(Repeat)Start-Stop

S-A-D..(n)..D-P

Repeatn

1

0

0

Idle

none

N/A

1

0

1

Stop

P

N/A

1

1

0

(Repeat)Start

S-A-D-D-D-....

Continuous

1

1

1

Reserved

none

N/A

(1)P=Stopcondition;S=Startcondition;A=Acknowledgebit;D=data

Table28-17.I2CModuleOperatingModes

FDF

MST

TRX

OperatingMode

0

0

x

Slaveinnon-FDFmode

0

1

0

Masterreceiveinnon-FDFmode

0

1

1

Mastertransmitinnon-FDFmode

1

0

0

SlavereceiveinFDFmode

1

0

1

SlavetransmitinFDFmode

1

1

0

MasterreceiveinFDFmode

1

1

1

MastertransmitinFDFmode

Table28-18.NumberofBitsSentonBus

BC2

BC1

BC0

BitsinFDF

BitswithACK

0

0

0

8

9

0

0

1

NA(reserved)

NA(reserved)

0

1

0

2

3

0

1

1

3

4

1

0

0

4

5

1

0

1

5

6

1

1

0

6

7

1

1

1

7

8

1511

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.11I2CInterruptVectorRegister(I2CIVR)

TheI2Cinterruptvectorregisterisa16-bitmemory-mappedregisterusedtoindicatetheoccurrenceofan

interrupt.Figure28-24andTable28-19describethisregister.

Figure28-24.I2CInterruptVectorRegister(I2CIVR)[Offset=28h]

15

12

11

8

7

3

2

0

Reserved

TESTMD

Reserved

INTCODE

R-0

R/W-0

R-0

R/WC-0

LEGEND:R/W=Read/Write;R=Readonly;C=Clear;-n=valueafterreset

Table28-19.I2CInterruptVectorRegister(I2CIVR)FieldDescriptions

Bit

Field

Value

Description

15-12

Reserved

0

Readreturns0.Writeshavenoeffect.

11-8

TESTMD

0-3h

Reservedforinternaltesting.

7-3

Reserved

0

Readreturns0.Writeshavenoeffect.

2-0

INTCODE

0-3h

InterruptCodeBits

Thisbinarycodedinterruptvectorindicateswhichinterrupthasoccurred.Ifthereismorethan

oneinterruptpending,readingI2CIVRprovidesthevectorforthehighestpriorityinterruptthatis

pending.

ReadingtheI2CIVRwillclearthecorrespondingflagsinI2CSTRforAL,NACKandSCDas

longasthoseinterruptsareenabled.Anewinterruptwillbegeneratedforeachpendingsource.

ReadingI2CIVRwillcleartheINTCODEforAL,NACK,SCD,AAS,RXRDYandTXRDY.

ReadingI2CIVRwillnotcleartheINTCODEforARDY.

TheINTCODEforcertainscodescanalsobeclearedbyeitherwritinga1tothecorresponding

interruptflagbitsinI2CSTR,orbyreadingandwritingtothereceiveortransmitregisters.

PleaseseeSection28.6.3,I2CStatusRegister(I2CSTR)formoredetails.

Usersmustread(clear)theI2CIVRbeforedoinganotherstartotherwisetheI2CIVRcould

containincorrect(oldinterruptflag)value.

Table28-20.InterruptCodesforINTCODEBit

Code

INTCODE(2–0)

InterruptOccurred

00

000

none

01h

001(highestpriority)

Arbitrationlost(AL)

02h

010

Noacknowledgement(NACK)

03h

011

Receiveaccessready(ARDY)

04h

100

Receivedataready(RXRDY)

05h

101

Transmitdataready(TXRDY)

06h

110

Stopconditiondetection(SCD)

07h

111(lowestpriority)

Addressasslave(AAS)

1512

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.12I2CExtendedModeRegister(I2CEMDR)

TheI2Cextendedmoderegisterisa16-bitmemory-mappedregisterthatcontainsadditionalmodeselect

bits.Figure28-25andTable28-21describethisregister.

Figure28-25.I2CExtendedModeRegister(I2CEMDR)[Offset=2Ch]

15

2

1

0

Reserved

IGNACK

BCM

R-0

R/W-0

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-21.I2CExtendedModeRegister(I2CEMDR)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

IGNACK

IgnoreNACKmode

0

Themastertransmitterwilloperatenormally,discontinuethedatatransfer,andsettheARDYand

NACKstatusbitswhenaNACKsignalisreceivedfromtheslave.

1

ThemastertransmitterwillignoreaNACKreceivedfromtheslave.

0

BCM

Backwardscompatibilitymode

Whensetto1,theI2CiscompatiblewithpreviousversionsoftheI2C.ThismeanstheTXRDY

interruptisgeneratedinslave-transmitmodewhenTXRDYissetandtheI2Cneedsmoredatato

transmit.ThisbehaviorcausesanextraTXRDYinterrupttobegeneratedbecausetheI2C

recognizestheendoftransferaftergeneratinganinterruptforthenextbyteofdata.

WhenBCMis0,theTXRDYinterruptinslave-transmitmodeisgeneratedwhenXSMT=1.Inthis

case,theI2CgeneratesaninterruptforthenextbyteafterreceivingtheACKfrompreviousdata.

Thesettingofthisbitonlyappliestoslavetransmitmode.

0

TheI2Cisnotincompatibilitymode.

1

TheI2Cisincompatibilitymode.

28.6.13I2CPrescaleRegister(I2CPSC)

TheI2Cprescalerregisterisa16-bitmemory-mappedregisterusedfordividingdowntheVBUS_CLKto

obtainamoduleclockfrequencybetween6.7MHzand13.3MHz.Figure28-26andTable28-22describe

thisregister.

Figure28-26.I2CPrescaleRegister(I2CPSC)[Offset=30h]

15

8

7

0

Reserved

PSC

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-22.I2CPrescaleRegister(I2CPSC)FieldDescriptions

Bit

Field

Value

Description

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

PSC

0-FFh

Prescale

8-bitprescalertodividedowntheVBUSclocktoobtaintheI2Cmoduleclock.Thisregister

mustbeinitializedwhiletheI2Cisstillinreset(nIRS=0).Thevaluetakeseffectontherising

edgeofnIRS.SeeSection28.1.3formoreinformation.

1513

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.14I2CPeripheralIDRegister1(I2CPID1)

Figure28-27andTable28-23describethisregister.

Figure28-27.I2CPeripheralIDRegister1(I2CPID1)[Offset=34h]

15

8

7

0

CLASS

REVISION

R-1

R-46h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-23.I2CPeripheralIDRegister1(I2CPID1)FieldDescriptions

Bit

Field

Value

Description

15-8

CLASS

0-FFh

Peripheralclass

Thesebitsidentifytheclassofperipheral.

7-0

REVISION

0-FFh

RevisionleveloftheI2C

ThesebitsidentifytherevisionleveloftheI2C.

28.6.15I2CPeripheralIDRegister2(I2CPID2)

Figure28-28andTable28-24describethisregister.

Figure28-28.I2CPeripheralIDRegister2(I2CPID2)[Offset=38h]

15

8

7

0

Reserved

TYPE

R-0

R-5

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-24.I2CPeripheralIDRegister2(I2CPID2)FieldDescriptions

Bit

Field

Value

Description

15-8

Reserved

0

Readreturns0.Writeshavenoeffect.

7-0

TYPE

0-FFh

Peripheraltype

Thesebitsidentifythetypeofperipheral.

1514

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.16I2CDMAControlRegister(I2CDMACR)

ThisregistercontainsthetransmitandreceiveDMAenablebits.Figure28-29andTable28-25describe

thisregister.

Figure28-29.I2CDMAControlRegister(I2CDMACR)[Offset=3Ch]

15

2

1

0

Reserved

TXDMAEN

RXDMAEN

R-0

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-25.I2CDMAControlRegister(I2CDMACR)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

TXDMAEN

TransmitterDMAenable

ThisbitcontrolsthetransmitDMAeventpintothesystem.Whenthisbitisa1,theDMAtransmit

eventisenabledandtheDMAcanoccur.Whenthisbitisa0,theDMAtransmiteventisdisabled.

Writinga1tothisbitwillsendaTXDMArequesttotheDMAmoduleifPINFUNCisalsosetto0.

0

ThetransmitDMAisdisabled.

1

ThetransmitDMAisenabled.

0

RXDMAEN

ReceiveDMAenable

ThisbitcontrolsthereceiveDMAeventpintothesystem.Whenthisbitis1,theDMAreceive

eventisenabledandtheDMAcanoccur.Whenthisbitisa0,theDMAreceiveeventisdisabled.

0

ThereceiveDMAisdisabled.

1

ThereceiveDMAisenabled.

28.6.17I2CPinFunctionRegister(I2CPFNC)

Figure28-30andTable28-26describethisregister.

Figure28-30.I2CPinFunctionRegister(I2CPFNC)[Offset=48h]

15

1

0

Reserved

PINFUNC

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-26.I2CPinFunctionRegister(I2CPFNC)FieldDescriptions

Bit

Field

Value

Description

15-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

PINFUNC

SDAandSCLPinFunction

ThisbitcontrolswhethertheSDAandSCLpinsfunctionasI2CpinsorasI/Opins.

0

TheSDAandSCLpinsfunctionasI2Cpins.

1

TheSDAandSCLpinsfunctionasI/Opins.

1515

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.18I2CPinDirectionRegister(I2CPDIR)

ThisregisterisusedtoindependentlyconfigureeachI2Cpin,whenconfiguredasageneralpurposeI/O,

aseitheraninputoroutput.Figure28-31andTable28-27describethisregister.

Figure28-31.I2CPinDirectionRegister(I2CPDIR)[Offset=4Ch]

15

2

1

0

Reserved

SDADIR

SCLDIR

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-27.I2CPinDirectionRegister(I2CPDIR)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDADIR

SDAdirection

ThisbitcontrolsthedirectionoftheI2CSDApinwhenconfiguredasaGPIO.

0

TheSDApinfunctionsasaninput.

1

SDApinfunctionsasanoutput.

0

SCLDIR

SCLdirection

ThisbitcontrolsthedirectionoftheI2CSCLpinwhenconfiguredasaGPIO.

0

TheSCLpinfunctionsasaninput.

1

TheSCLpinfunctionsasanoutput.

28.6.19I2CDataInputRegister(I2CDIN)

Figure28-32andTable28-28describethisregister.

Figure28-32.I2CDataInputRegister(I2CDIN)[Offset=50h]

15

2

1

0

Reserved

SDAIN

SCLIN

R-0

R-X

R-X

LEGEND:R/W=Read/Write;R=Readonly;-x=valueafterreset

Table28-28.I2CDataInputRegister(I2CDIN)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDAIN

Serialdatain

ThevalueofthisbitreflectsthevalueontheSDApin.

0

SCLIN

Serialclockdatain

ThevalueofthisbitreflectsthevalueontheSCLpin.

1516

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.20I2CDataOutputRegister(I2CDOUT)

ThisregistercontainsthevaluessenttotheI2Cpins.Figure28-33andTable28-29describethisregister.

Figure28-33.I2CDataOutputRegister(I2CDOUT)[Offset0x54]

15

2

1

0

Reserved

SDAOUT

SCLOUT

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-29.I2CDataOutputRegister(I2CDOUT)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDAOUT

SDADataOutput

ThisfunctionisonlyactiveiftheSDApinisconfiguredasanI/OpinwithPINFUNC=1.Thisbit

containsthevaluesenttotheSDApin.

0

Thepinisdrivenlow.

1

Thepinisdrivenhigh.

0

SCLOUT

SCLDataOutput

ThisfunctionisonlyactiveiftheSCLpinisconfiguredasanI/OpinwithPINFUNC=1.Thisbit

containsthevaluesenttotheSCLpin.

0

Thepinisdrivenlow.

1

Thepinisdrivenhigh.

28.6.21I2CDataSetRegister(I2CDSET)

TheI2CDSETregisterisanaliasoftheI2CDOUTregister.Whenwrittentoatthisaddress,writinga1to

abitsetsthecorrespondingbitinI2CDOUTtoa1,whilewritinga0leavesitunchanged.Figure28-34

andTable28-30describethisregister.

Figure28-34.I2CDataSetRegister(I2CDSET)[Offset=58h]

15

2

1

0

Reserved

SDASET

SCLSET

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-30.I2CDataSetRegister(I2CDSET)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDASET

SerialDataSet

ThisbitisusedtosettheSDAGPIOpin.

0

Read:ReadsreturnvalueofSDAOUT.

Write:Writinga0tothisbithasnoeffect.

1

Read:ReadsreturnvalueofSDAOUT.

Write:SDAOUTissettologichigh(1).

0

SCLSET

SerialClockSet

ThisbitisusedtosettheSCLGPIOpin.

0

Read:ReadsreturnvalueofSCLOUT.

Write:Writinga0tothisbithasnoeffect.

1

Read:ReadsreturnvalueofSCLOUT.

Write:SCLOUTissettologichigh(1).

1517

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.22I2CDataClearRegister(I2CDCLR)

TheI2CDCLRregisterisanaliasoftheI2CDOUTregister.Whenwrittentoatthisaddress,writinga1to

abitclearsthecorrespondingbitinI2CDOUTtoa0,whilewritinga0leavesitunchanged.Figure28-35

andTable28-31describethisregister.

Figure28-35.I2CDataClearRegister(I2CDCLR)[Offset=5Ch]

15

2

1

0

Reserved

SDACLR

SCLCLR

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-31.I2CDataClearRegister(I2CDSET)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDACLR

SerialDataClear

ThisbitisusedtocleartheSDAGPIOpin.

0

Read:ReadsreturnvalueofSDAOUT.

Write:Writinga0tothisbithasnoeffect.

1

Read:ReadsreturnvalueofSDAOUT.

Write:SDAOUTisclearedtologiclow.

0

SCLCLR

SerialClockClear

ThisbitisusedtocleartheSCLGPIOpin.

0

Read:ReadsreturnvalueofSCLOUT.

Write:Writinga0tothisbithasnoeffect.

1

Read:ReadsreturnvalueofSCLOUT.

Write:SCLOUTisclearedtologiclow.

28.6.23I2CPinOpenDrainRegister(I2CPDR)

Avalueof1intheI2CPDRregisterconfiguresthecorrespondingpinforopendraincapability.Avalueof

0disablesthisopendraincapabilityofthepin.Figure28-36andTable28-32describethisregister.

Figure28-36.I2CPinOpenDrainRegister(I2CPDR)[Offset=60h]

15

2

1

0

Reserved

SDAPDR

SCLPDR

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-32.I2CPinOpenDrainRegister(I2CPDR)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDAPDR

SDApinopendrainenable

0

Theopendrainfunctionisenabled(theoutputvoltageVOLorlowerifSDAOUT=0andhigh-zif

SDAOUT=1).

1

Theopendrainfunctionisdisabled(outputvoltageisVOLorlowerifSDAOUT=0andVOHor

higherifSDAOUT=1.)

0

SCLPDR

SCLpinopendrainenable

0

Theopendrainfunctionisenabled(theoutputvoltageVOLorlowerifSCLOUT=0andhigh-zif

SCLOUT=1).

1

Theopendrainfunctionisdisabled(outputvoltageisVOLorlowerifSCLOUT=0andVOHor

higherifSCLOUT=1).

1518

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comI2CRegisters

28.6.24I2CPullDisableRegister(I2CPDIS)

ValuesintheI2CPDISregisterenableordisablethepullcontrolcapabilityofthepins.A0intheI2CPDIS

registerenablesthepullfunctionofthecorrespondingpin,whilea1disablesthepullfunction.Figure28-

37andTable28-33describethisregister.

Figure28-37.I2CPullDisableRegister(I2CPDIS)[Offset=64h]

15

2

1

0

Reserved

SDAPDIS

SCLPDIS

R-0

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-33.I2CPullDisableRegister(I2CPDIS)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDAPDIS

SDApulldisable

0

Thepullfunctionisenabled.

1

Thepullfunctionisdisabled.

0

SCLPDIS

SCLpulldisable

0

Thepullfunctionisenabled.

1

Thepullfunctionisdisabled.

28.6.25I2CPullSelectRegister(I2CPSEL)

ValuesintheI2CPSELregisterselectthepulluporpulldownfunctionsofthecorrespondingpins.A0in

theI2CPSELregisterenablesthepulldownfunctionofthecorrespondingpin,whilea1enablesthepull

upfunctionofthecorrespondingpin.Figure28-38andTable28-34describethisregister.

Figure28-38.I2CPullSelectRegister(I2CPSEL)[Offset=68h]

15

2

1

0

Reserved

SDAPSEL

SCLPSEL

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-34.I2CPullSelectRegister(I2CPSEL)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDAPSEL

SDApullselect

0

Thepulldownfunctionisenabled.

1

Thepullupfunctionisenabled.

0

SCLPSEL

SCLpullselect

0

Thepulldownfunctionisenabled.

1

Thepullupfunctionisenabled.

1519

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






I2CRegisterswww.ti.com

28.6.25.1Summary

Thebehavioroftheinputbuffer,outputbuffer,andthepullcontrolissummarizedinTable28-35.

Table28-35.InputBuffer,OutputBuffer,andPullControlBehaviorasGPIOPins(1)

Device

Pin

under

Direction

PullDisable

PullSelect

Reset?

(DIR)(2)

(PULDIS)(3)

(PULSEL)(4)

PullControl

OutputBuffer

InputBuffer

Yes

X

X

X

Device-specific,check

Disabled

Enabled

devicedatasheet

No

0

0

0

Pulldown

Disabled

Enabled

No

0

0

1

Pullup

Disabled

Enabled

No

0

1

0

Disabled

Disabled

Enabled

No

0

1

1

Disabled

Disabled

Enabled

No

1

X

X

Disabled

Enabled

Enabled

(1)1.X=Don’tcare

(2)2.DIR=0forinput,1foroutput

(3)3.PULDIS=0forenablingpullcontrol=1fordisablingpullcontrol

(4)4.PULSEL=0forpull-downfunctionality=1forpull-upfunctionality

28.6.26I2CPinsSlewRateSelectRegister(I2CSRS)

ThisregistercontrolstheslewrateofthesignalontheI2Cpins.Figure28-39andTable28-36describe

thisregister.

Figure28-39.I2CPinsSlewRateSelectRegister(I2CSRS)[Offset=6Ch]

15

2

1

0

Reserved

SDASRS

SCLSRS

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table28-36.I2CPinsSlewRateSelectRegister(I2CSRS)FieldDescriptions

Bit

Field

Value

Description

15-2

Reserved

0

Readreturns0.Writeshavenoeffect.

1

SDASRS

SDASlewRateselect

0

Theslowbufferisselected.

1

Thenormalbufferisselected.

0

SCLSRS

SCLSlewRateselect

0

Theslowbufferisselected.

1

Thenormalbufferisselected.

1520

Inter-IntegratedCircuit(I2C)Module

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comSampleWaveforms

28.7SampleWaveforms

Figure28-40provideswaveformstoillustratethedifferencebetweennormaloperationandbackward

compatibilitymode.

Figure28-40.DifferencebetweenNormalOperationandBackwardCompatibilityMode

1521

SPNU499B–November2012–RevisedAugust2013

Inter-IntegratedCircuit(I2C)Module

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter29

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

ThischapterdescribestheEthernetMediaAccessController(EMAC)andphysicallayer(PHY)device

ManagementDataInput/Output(MDIO)module.

Topic...........................................................................................................................Page

29.1Introduction...................................................................................................1523

29.2Architecture..................................................................................................1526

29.3EMACControlModuleRegisters......................................................................1569

29.4MDIORegisters..............................................................................................1582

29.5EMACModuleRegisters.................................................................................1595

1522

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroduction

29.1Introduction

ThisdocumentprovidesafunctionaldescriptionoftheEthernetMediaAccessController(EMAC)and

physicallayer(PHY)deviceManagementDataInput/Output(MDIO)moduleintegratedinthe

microcontroller.IncludedarethefeaturesoftheEMACandMDIOmodules,adiscussionoftheir

architectureandoperation,howthesemodulesconnecttotheoutsideworld,andadescriptionofthe

registersforeachmodule.

TheEMACcontrolstheflowofpacketdatafromthesystemtothePHY.TheMDIOmodulecontrolsPHY

configurationandstatusmonitoring.

BoththeEMACandtheMDIOmodulesinterfacetothesystemcorethroughacustominterfacethat

allowsefficientdatatransmissionandreception.ThiscustominterfaceisreferredtoastheEMACcontrol

moduleandisconsideredintegraltotheEMAC/MDIOperipheral.

29.1.1PurposeofthePeripheral

TheEMACmoduleisusedtomovedatabetweenthedeviceandanotherhostconnectedtothesame

network,incompliancewiththeEthernetprotocol.

29.1.2Features

TheEMAC/MDIOhasthefollowingfeatures:

•Synchronous10/100Mbpsoperation.

•StandardMediaIndependentInterface(MII)and/orReducedMediaIndependentInterface(RMII)to

physicallayerdevice(PHY).

•EMACactsasDMAmastertoeitherinternalorexternaldevicememoryspace.

•EightreceivechannelswithVLANtagdiscriminationforreceivequality-of-service(QOS)support.

•Eighttransmitchannelswithround-robinorfixedpriorityfortransmitquality-of-service(QOS)support.

•Ether-Statsand802.3-Statsstatisticsgathering.

•TransmitCRCgenerationselectableonaperchannelbasis.

•Broadcastframesselectionforreceptiononasinglechannel.

•Multicastframesselectionforreceptiononasinglechannel.

•Promiscuousreceivemodeframesselectionforreceptiononasinglechannel(allframes,allgood

frames,shortframes,errorframes).

•Hardwareflowcontrol.

•8k-bytelocalEMACdescriptormemorythatallowstheperipheraltooperateondescriptorswithout

affectingtheCPU.Thedescriptormemoryholdsenoughinformationtotransferupto512Ethernet

packetswithoutCPUintervention.(ThismemoryisalsoknownasCPPIRAM.)

•Programmableinterruptlogicpermitsthesoftwaredrivertorestrictthegenerationofback-to-back

interrupts,whichallowsmoreworktobeperformedinasinglecalltotheinterruptserviceroutine.

1523

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMACInterrupts

DMAMaster

8k CPPIRAM

EMACModule

Host CPUInterfaceDMABusMII/RMIIBus

InterruptCombiner

C0

InterruptsMDIOInterrupts

MDIOModuleControl ModuleEMAC SubSystem

MDIOBus



Introductionwww.ti.com

29.1.3FunctionalBlockDiagram

Figure29-1showsthethreemainfunctionalmodulesoftheEMAC/MDIOperipheral:

•EMACcontrolmodule

•EMACmodule

•MDIOmodule

TheEMACcontrolmoduleisthemaininterfacebetweenthedevicecoreprocessortotheEMACand

MDIOmodules.TheEMACcontrolmodulecontrolsdeviceinterruptsandincorporatesan8k-byteinternal

RAMtoholdEMACbufferdescriptors(alsoknownasCPPIRAM).

TheMDIOmoduleimplementsthe802.3serialmanagementinterfacetointerrogateandcontrolupto32

EthernetPHYsconnectedtothedevicebyusingasharedtwo-wirebus.HostsoftwareusestheMDIO

moduletoconfiguretheautonegotiationparametersofeachPHYattachedtotheEMAC,retrievethe

negotiationresults,andconfigurerequiredparametersintheEMACmoduleforcorrectoperation.The

moduleisdesignedtoallowalmosttransparentoperationoftheMDIOinterface,withverylittle

maintenancefromthecoreprocessor.

TheEMACmoduleprovidesanefficientinterfacebetweentheprocessorandthenetwork.TheEMACon

thisdevicesupports10Base-T(10Mbits/sec)and100BaseTX(100Mbits/sec),half-duplexandfull-duplex

mode,andhardwareflowcontrolandquality-of-service(QOS)support.

Figure29-1showsthemaininterfacebetweentheEMACcontrolmoduleandtheCPU.Thefollowing

connectionsaremadetothedevicecore:

•TheDMAbusconnectionfromtheEMACcontrolmoduleallowstheEMACmoduletoreadandwrite

bothinternalandexternalmemorythroughtheDMAmemorytransfercontroller.

•TheEMACcontrol,EMAC,andMDIOmodulesallhavecontrolregisters.Theseregistersarememory-

mappedintodevicememoryspace.Alongwiththeseregisters,thecontrolmodule’sinternalCPPI

RAMismappedintothissamerange.

•TheEMACandMDIOinterruptsarecombinedintofourinterruptsignalswithinthecontrolmodule.The

VectoredInterruptManager(VIM)receivesallfourinterruptsignalsfromthecombinerandsubmits

theseinterruptrequeststotheCPU.

Figure29-1.EMACandMDIOBlockDiagram

1524

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comIntroduction

29.1.4IndustryStandard(s)ComplianceStatement

TheEMACperipheralconformstotheIEEE802.3standard,describingtheCarrierSenseMultipleAccess

withCollisionDetection(CSMA/CD)AccessMethodandPhysicalLayerspecifications.TheIEEE802.3

standardhasalsobeenadoptedbyISO/IECandre-designatedasISO/IEC8802-3:2000(E).

However,theEMACdeviatesfromthestandardinthewayithandlestransmitunderflowerrors.The

EMACMIIinterfacedoesnotusetheTransmitCodingErrorsignalMTXER.Insteadofdrivingtheerrorpin

whenanunderflowconditionoccursonatransmittedframe,theEMACintentionallygeneratesanincorrect

checksumbyinvertingtheframeCRC,sothatthetransmittedframeisdetectedasanerrorbythe

network.

1525

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2Architecture

ThissectiondiscussesthearchitectureandbasicfunctionoftheEMACperipheral.

29.2.1ClockControl

AllinternalEMAClogicisclockedsynchronouslyontheVCLKA4domain.Pleaserefertothe

"Architecture"chapterofthetechnicalreferencemanualformoredetails.

TheMDIOclockisbasedonadivide-downoftheVCLK3peripheralbusclockandisspecifiedtorunupto

2.5MHz(althoughtypicaloperationwouldbe1.0MHz).BecausetheVCLK3peripheralclockfrequencyis

configurable,theapplicationsoftwareordrivermustcontrolthedivide-downvalue.

ThetransmitandreceiveclocksourcesareprovidedbytheexternalPHYtotheMII_TXCLKand

MII_RXCLKpinsortotheRMIIreferenceclockpin.Dataistransmittedandreceivedwithrespecttothe

referenceclocksoftheinterfacepins.

TheMIIinterfacefrequenciesforthetransmitandreceiveclocksarefixedbytheIEEE802.3specification

as:

•2.5MHzat10Mbps

•25MHzat100Mbps

TheRMIIinterfacefrequencyforthetransmitandreceiveclocksarefixedat50MHzforboth10Mbps

and100Mbps.

29.2.2MemoryMap

TheEMACperipheralincludesinternalmemorythatisusedtoholdbufferdescriptionsoftheEthernet

packetstobereceivedandtransmitted.ThisinternalRAMis2K×32bitsinsize.Datacanbewrittento

andreadfromtheEMACinternalmemorybyeithertheEMACortheCPU.Itisusedtostorebuffer

descriptorsthatare4-words(16-bytes)deep.This8Klocalmemoryholdsenoughinformationtotransfer

upto512EthernetpacketswithoutCPUintervention.ThisEMACRAMisalsoreferredtoastheCPPI

bufferdescriptormemorybecauseitcomplieswiththeCommunicationsPortProgrammingInterface

(CPPI)v3.0standard.

Thepacketbufferdescriptorscanalsobeplacedinotheron-andoff-chipmemoriessuchastheCPU

RAM.Therearesometradeoffsintermsofinterconnectbandwidthwhendescriptorsareplacedinthe

CPURAM,versuswhentheyareplacedintheEMAC’sinternalmemory.Ingeneral,theEMAC

throughputisbetterwhenthedescriptorsareplacedinthelocalEMACCPPIRAM.

29.2.3SignalDescriptions

ThemicrocontrollerssupportboththeMIIandtheRMIIinterfaces.Onlyoneofthesetwointerfacescanbe

usedatatime.AseparatecontrolregisterintheI/OMultiplexingModule(IOMM)allowstheapplicationto

indicatetheactualinterfacebeingused.Thisisthebit24ofthePINMMR29controlregister.Thisbitisset

bydefaultandselectstheRMIIinterface.TheapplicationcanselecttheMIIinterfacebyclearingthisbit.

PleaserefertheI/OMultiplexingModulechapterofthetechnicalreferencemanualformoredetailsonthe

proceduretoconfigurethePINMMRregisters.

EachoftheEMACandMDIOsignalsfortheMIIandRMIIinterfacesaremultiplexedwithotherI/O

functionsonthismicrocontroller.PleaserefertoSection29.2.4forinformationonconfigurationofthe

multiplexingcontrolregisterstoenabletheMII/RMIIconnectionstotheseI/Os.

29.2.3.1MediaIndependentInterface(MII)Connections

Figure29-2showsadevicewithintegratedEMACandMDIOinterfacedviaaMIIconnectioninatypical

system.TheEMACmoduledoesnotincludeatransmiterror(MTXER)pin.Inthecaseoftransmiterror,

CRCinversionisusedtonegatethevalidityofthetransmittedframe.

TheindividualEMACandMDIOsignalsfortheMIIinterfacearesummarizedinTable29-1.Formore

information,refertoeithertheIEEE802.3standardorISO/IEC8802-3:2000(E).

1526

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




MII_TXCLKMII_TXD[3−0]MII_TXENMII_COLMII_CRSMII_RXCLKMII_RXD[3−0]MII_RXDVMII_RXERMDIO_CLKMDIO_D

Physicallayerdevice(PHY)

Systemcore

Transformer2.5 MHzor25 MHz

RJ−45

EMACMDIO



www.ti.comArchitecture

Figure29-2.EthernetConfiguration—MIIConnections

Table29-1.EMACandMDIOSignalsforMIIInterface

Signal

Type

Description

MII_TXCLK

I

Transmitclock(MII_TXCLK).Thetransmitclockisacontinuousclockthatprovidesthetiming

referencefortransmitoperations.TheMII_TXDandMII_TXENsignalsaretiedtothisclock.The

clockisgeneratedbythePHYandis2.5MHzat10Mbpsoperationand25MHzat100Mbps

operation.

MII_TXD[3-0]

O

Transmitdata(MII_TXD).Thetransmitdatapinsareacollectionof4datasignalscomprising4bits

ofdata.MTDX0istheleast-significantbit(LSB).ThesignalsaresynchronizedbyMII_TXCLKand

validonlywhenMII_TXENisasserted.

MII_TXEN

O

Transmitenable(MII_TXEN).ThetransmitenablesignalindicatesthattheMII_TXDpinsare

generatingnibbledataforusebythePHY.ItisdrivensynchronouslytoMII_TXCLK.

MII_COL

I

Collisiondetected(MII_COL).Inhalf-duplexoperation,theMII_COLpinisassertedbythePHY

whenitdetectsacollisiononthenetwork.Itremainsassertedwhilethecollisionconditionpersists.

ThissignalisnotnecessarilysynchronoustoMII_TXCLKnorMII_RXCLK.

Infull-duplexoperation,theMII_COLpinisusedforhardwaretransmitflowcontrol.Assertingthe

MII_COLpinwillstoppackettransmissions;packetsintheprocessofbeingtransmittedwhen

MII_COLisassertedwillcompletetransmission.TheMII_COLpinshouldbeheldlowifhardware

transmitflowcontrolisnotused.

MII_CRS

I

Carriersense(MII_CRS).Inhalf-duplexoperation,theMII_CRSpinisassertedbythePHYwhen

thenetworkisnotidleineithertransmitorreceive.Thepinisdeassertedwhenbothtransmitand

receiveareidle.ThissignalisnotnecessarilysynchronoustoMII_TXCLKnorMII_RXCLK.

Infull-duplexoperation,theMII_CRSpinshouldbeheldlow.

MII_RXCLK

I

Receiveclock(MII_RXCLK).Thereceiveclockisacontinuousclockthatprovidesthetiming

referenceforreceiveoperations.TheMII_RXD,MII_RXDV,andMII_RXERsignalsaretiedtothis

clock.TheclockisgeneratedbythePHYandis2.5MHzat10Mbpsoperationand25MHzat

100Mbpsoperation.

MII_RXD[3-0]

I

Receivedata(MII_RXD).Thereceivedatapinsareacollectionof4datasignalscomprising4bitsof

data.MRDX0istheleast-significantbit(LSB).ThesignalsaresynchronizedbyMII_RXCLKand

validonlywhenMII_RXDVisasserted.

MII_RXDV

I

Receivedatavalid(MII_RXDV).ThereceivedatavalidsignalindicatesthattheMII_RXDpinsare

generatingnibbledataforusebytheEMAC.ItisdrivensynchronouslytoMII_RXCLK.

MII_RXER

I

Receiveerror(MII_RXER).ThereceiveerrorsignalisassertedforoneormoreMII_RXCLKperiods

toindicatethatanerrorwasdetectedinthereceivedframe.Thisismeaningfulonlyduringdata

receptionwhenMII_RXDVisactive.

MDIO_CLK

O

Managementdataclock(MDIO_CLK).TheMDIOdataclockissourcedbytheMDIOmoduleonthe

system.ItisusedtosynchronizeMDIOdataaccessoperationsdoneontheMDIOpin.The

frequencyofthisclockiscontrolledbytheCLKDIVbitsintheMDIOcontrolregister(CONTROL).

1527

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




RMII_TXD[1-0]RMII_TXEN

RMII_MHZ_50_CLK

RMII_RXD[1-0]RMII_CRS_DV

RMII_RXER

MDIO_CLK

MDIO_D

MDIOEMACPhysicalLayerDevice(PHY)

Transformer

50 MHz

RJ-45



Architecturewww.ti.com

Table29-1.EMACandMDIOSignalsforMIIInterface(continued)

Signal

Type

Description

MDIO_D

I/O

Managementdatainputoutput(MDIO_D).TheMDIOdatapindrivesPHYmanagementdatainto

andoutofthePHYbywayofanaccessframeconsistingofstartofframe,read/writeindication,

PHYaddress,registeraddress,anddatabitcycles.TheMDIO_Dpinactsasanoutputforallbutthe

databitcyclesatwhichtimeitisaninputforreadoperations.

29.2.3.2ReducedMediaIndependentInterface(RMII)Connections

Figure29-3showsadevicewithintegratedEMACandMDIOinterfacedviaaRMIIconnectioninatypical

system.

TheindividualEMACandMDIOsignalsfortheRMIIinterfacearesummarizedinTable29-2.Formore

information,refertoeithertheIEEE802.3standardorISO/IEC8802-3:2000(E).

Figure29-3.EthernetConfiguration—RMIIConnections

Table29-2.EMACandMDIOSignalsforRMIIInterface

Signal

Type

Description

RMII_TXD[1-0]

O

Transmitdata(RMII_TXD).Thetransmitdatapinsareacollectionof2bitsofdata.RMTDX0is

theleast-significantbit(LSB).ThesignalsaresynchronizedbyRMII_MHZ_50_CLKandvalidonly

whenRMII_TXENisasserted.

RMII_TXEN

O

Transmitenable(RMII_TXEN).ThetransmitenablesignalindicatesthattheRMII_TXDpinsare

generatingdataforusebythePHY.RMII_TXENissynchronoustoRMII_MHZ_50_CLK.

RMII_MHZ_50_CLK

I

RMIIreferenceclock(RMII_MHZ_50_CLK).ThereferenceclockisusedtosynchronizeallRMII

signals.RMII_MHZ_50_CLKmustbecontinuousandfixedat50MHz.

RMII_RXD[1-0]

I

Receivedata(RMII_RXD).Thereceivedatapinsareacollectionof2bitsofdata.RMRDX0isthe

least-significantbit(LSB).ThesignalsaresynchronizedbyRMII_MHZ_50_CLKandvalidonly

whenRMII_CRS_DVisassertedandRMII_RXERisdeasserted.

RMII_CRS_DV

I

Carriersense/receivedatavalid(RMII_CRS_DV).Multiplexedsignalbetweencarriersenseand

receivedatavalid.

RMII_RXER

I

Receiveerror(RMII_RXER).Thereceiveerrorsignalisassertedtoindicatethatanerrorwas

detectedinthereceivedframe.

MDIO_CLK

O

Managementdataclock(MDIO_CLK).TheMDIOdataclockissourcedbytheMDIOmoduleon

thesystem.ItisusedtosynchronizeMDIOdataaccessoperationsdoneontheMDIOpin.The

frequencyofthisclockiscontrolledbytheCLKDIVbitsintheMDIOcontrolregister(CONTROL).

MDIO_D

I/O

Managementdatainputoutput(MDIO_D).TheMDIOdatapindrivesPHYmanagementdatainto

andoutofthePHYbywayofanaccessframeconsistingofstartofframe,read/writeindication,

PHYaddress,registeraddress,anddatabitcycles.TheMDIO_Dpinactsasanoutputforallbut

thedatabitcyclesatwhichtimeitisaninputforreadoperations.

1528

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




PreambleSFD

DestinationSourceLenData7166246-15004FCSNumber of bytesLegend: SFD=Start Frame Delimeter; FCS=Frame Check Sequence (CRC)



www.ti.comArchitecture

29.2.4MII/RMIISignalMultiplexingControl

EachoftheMIIandRMIIinterfacesignalsaremultiplexedwithotherfunctionsonthismicrocontroller.The

applicationmustconfigurethecontrolregistersintheI/Omultiplexingmoduleinordertoenablethe

MII/RMIIfunctionalityonthecorrespondingI/Os.Table29-3showsthebytetobeconfiguredtoenablethe

MDIOfunctions.Table29-4showsthebytetobeconfiguredtoenabletheMIIorRMIIfunctions.Please

refertheI/OMultiplexingModulechapterofthetechnicalreferencemanualformoredetailsonthe

proceduretoconfigurethePINMMRregisters.

Table29-3.MDIOMultiplexingControl

MDIOSignalName

ControlforSelectingEMAC/MDIOSignal

MDIO_CLK

PINMMR7[15:8]=0b00000100

MDIO_D

PINMMR8[15:8]=0b00000100

Table29-4.MII/RMIIMultiplexingControl

MII/RMIISignalName

ControlforSelectingMIISignal

ControlforSelectingRMIISignal

MII_TXCLK

PINMMR17[7:0]=0b00000010

-

MII_TXD[3]

PINMMR14[7:0]=0b00000100

-

MII_TXD[2]

PINMMR13[31:24]=0b00000100

-

MII_TXD[1]/RMII_TXD[1]

PINMMR13[15:8]=0b00000100

PINMMR13[15:8]=0b00001000

MII_TXD[0]/RMII_TXD[0]

PINMMR13[7:0]=0b00000100

PINMMR13[7:0]=0b00001000

MII_TXEN/RMII_TXEN

PINMMR13[23:16]=0b00000100

PINMMR13[23:16]=0b00001000

MII_COL

PINMMR20[23:16]=0b00000100

-

MII_CRS/RMII_CRSDV

PINMMR17[23:16]=0b00000010

PINMMR17[23:16]=0b00000100

MII_RXCLK/RMII_50MHZ_CLK

PINMMR14[15:8]=0b00000010

PINMMR14[15:8]=0b00000100

MII_RXD[3]

PINMMR12[31:24]=0b00000100

-

MII_RXD[2]

PINMMR12[23:16]=0b00000100

-

MII_RXD[1]/RMII_RXD[1]

PINMMR12[7:0]=0b00000010

PINMMR12[7:0]=0b00000100

MII_RXD[0]/RMII_RXD[0]

PINMMR11[31:24]=0b00000100

PINMMR11[31:24]=0b00001000

MII_RXDV

PINMMR19[15:8]=0b00000010

-

MII_RXER/RMII_RXER

PINMMR10[7:0]=0b00000010

PINMMR10[7:0]=0b00000100

29.2.5EthernetProtocolOverview

AbriefoverviewoftheEthernetprotocolisgiveninthefollowingsubsections.SeetheIEEE802.3

standarddocumentforin-depthinformationontheCarrierSenseMultipleAccesswithCollisionDetection

(CSMA/CD)AccessMethod.

29.2.5.1EthernetFrameFormat

AlltheEthernettechnologiesusethesameframestructure.TheformatofanEthernetframeisshownin

Figure29-4anddescribedinTable29-5.TheEthernetpacket,whichisthecollectionofbytes

representingthedataportionofasingleEthernetframeonthewire,isshownoutlinedinbold.The

Ethernetframesareofvariablelengths,withnoframesmallerthan64bytesorlargerthanRXMAXLEN

bytes(header,data,andCRC).

Figure29-4.EthernetFrameFormat

1529

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

Table29-5.EthernetFrameDescription

Field

Bytes

Description

Preamble

7

Preamble.These7byteshaveafixedvalueof55handservetowakeupthereceiving

EMACportsandtosynchronizetheirclockstothatofthesender’sclock.

SFD

1

StartofFrameDelimiter.Thisfieldwithavalueof5Dhimmediatelyfollowsthepreamble

patternandindicatesthestartofimportantdata.

Destination

6

Destinationaddress.ThisfieldcontainstheEthernetMACaddressoftheEMACportfor

whichtheframeisintended.Itmaybeanindividualormulticast(includingbroadcast)

address.WhenthedestinationEMACportreceivesanEthernetframewithadestination

addressthatdoesnotmatchanyofitsMACphysicaladdresses,andnopromiscuous,

multicastorbroadcastchannelisenabled,itdiscardstheframe.

Source

6

Sourceaddress.ThisfieldcontainstheMACaddressoftheEthernetportthattransmitsthe

frametotheLocalAreaNetwork.

Len

2

Length/Typefield.ThelengthfieldindicatesthenumberofEMACclientdatabytes

containedinthesubsequentdatafieldoftheframe.Thisfieldcanalsobeusedtoidentify

thetypeofdatatheframeiscarrying.

Data

46to

Datafield.Thisfieldcarriesthedatagramcontainingtheupperlayerprotocolframe,thatis,

(RXMAXLEN-18)

IPlayerdatagram.Themaximumtransferunit(MTU)ofEthernetis(RXMAXLEN-18)

bytes.Thismeansthatiftheupperlayerprotocoldatagramexceeds(RXMAXLEN-18)

bytes,thenthehosthastofragmentthedatagramandsenditinmultipleEthernetpackets.

Theminimumsizeofthedatafieldis46bytes.Thismeansthatiftheupperlayerdatagram

islessthen46bytes,thedatafieldhastobeextendedto46bytesbyappendingextrabits

afterthedatafield,butpriortocalculatingandappendingtheFCS.

FCS

4

FrameCheckSequence.Acyclicredundancycheck(CRC)isusedbythetransmitand

receivealgorithmstogenerateaCRCvaluefortheFCSfield.Theframechecksequence

coversthe60to1514bytesofthepacketdata.Notethatthis4-bytefieldmayormaynot

beincludedaspartofthepacketdata,dependingonhowtheEMACisconfigured.

1530

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.5.2Ethernet’sMultipleAccessProtocol

NodesinanEthernetLocalAreaNetworkareinterconnectedbyabroadcastchannel--whenanEMAC

porttransmitsaframe,alltheadaptersonthelocalnetworkreceivetheframe.CarrierSenseMultiple

AccesswithCollisionDetection(CSMA/CD)algorithmsareusedwhentheEMACoperatesinhalf-duplex

mode.Whenoperatinginfull-duplexmode,thereisnocontentionforuseofasharedmediumbecause

thereareexactlytwoportsonthelocalnetwork.

EachportrunstheCSMA/CDprotocolwithoutexplicitcoordinationwiththeotherportsontheEthernet

network.Withinaspecificport,theCSMA/CDprotocolworksasfollows:

1.Theportobtainsdatafromupperlayerprotocolsatitsnode,preparesanEthernetframe,andputsthe

frameinabuffer.

2.Iftheportsensesthatthemediumisidle,itstartstotransmittheframe.Iftheportsensesthatthe

transmissionmediumisbusy,itwaitsuntilitnolongersensesenergy(plusanInter-PacketGaptime)

andthenstartstotransmittheframe.

3.Whiletransmitting,theportmonitorsforthepresenceofsignalenergycomingfromotherports.Ifthe

porttransmitstheentireframewithoutdetectingsignalenergyfromotherEthernetdevices,theportis

donewiththeframe.

4.Iftheportdetectssignalenergyfromotherportswhiletransmitting,itstopstransmittingitsframeand

insteadtransmitsa48-bitjamsignal.

5.Aftertransmittingthejamsignal,theportentersanexponentialbackoffphase.Ifadataframe

encountersback-to-backcollisions,theportchoosesarandomvaluethatisdependentonthenumber

ofcollisions.Theportthenwaitsanamountoftimethatisamultipleofthisrandomvalueandreturns

tostep2.

29.2.6ProgrammingInterface

29.2.6.1PacketBufferDescriptors

ThebufferdescriptorisacentralpartoftheEMACmoduleandishowtheapplicationsoftwaredescribes

Ethernetpacketstobesentandemptybufferstobefilledwithincomingpacketdata.Thebasicdescriptor

formatisshowninFigure29-5anddescribedinTable29-6.

Forexample,considerthreepacketstobetransmitted:PacketAisasinglefragment(60bytes),PacketB

isfragmentedoverthreebuffers(1514bytestotal),andPacketCisasinglefragment(1514bytes).The

linkedlistofdescriptorstodescribethesethreepacketsisshowninFigure29-6.

Figure29-5.BasicDescriptorFormat

BitFields

Word

Offset

31

16

15

0

0

NextDescriptorPointer

1

BufferPointer

2

BufferOffset

BufferLength

3

Flags

PacketLength

1531

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SOP| EOP

60060

pBufferpNext

PacketA60 bytes

0SOP

Fragment 1Packet B

5121514

pBufferpNext

512 bytesEOP

0

0−−−

Packet BFragment 3500 bytes

502

pBuffer

−−−500pNext−−−

pBufferpNext

Packet BFragment 2502 bytesSOP| EOP

0

1514 bytesPacket C

1514

pBufferpNext (NULL)1514



Architecturewww.ti.com

Table29-6.BasicDescriptorDescription

WordOffset

Field

FieldDescription

0

NextDescriptor

Thenextdescriptorpointerisusedtocreateasinglelinkedlistofdescriptors.Eachdescriptor

Pointer

describesapacketorapacketfragment.Whenadescriptorpointstoasinglebufferpacket

orthefirstfragmentofapacket,thestartofpacket(SOP)flagissetintheflagsfield.Whena

descriptorpointstoasinglebufferpacketorthelastfragmentofapacket,theendofpacket

(EOP)flagisset.Whenapacketisfragmented,eachfragmentmusthaveitsowndescriptor

andappearsequentiallyinthedescriptorlinkedlist.

1

BufferPointer

Thebufferpointerreferstotheactualmemorybufferthatcontainspacketdataduring

transmitoperations,orisanemptybufferreadytoreceivepacketdataduringreceive

operations.

2

BufferOffset

Thebufferoffsetistheoffsetfromthestartofthepacketbuffertothefirstbyteofvaliddata.

Thisfieldonlyhasmeaningwhenthebufferdescriptorpointstoabufferthatactuallycontains

data.

BufferLength

Thebufferlengthistheactualnumberofvalidpacketdatabytesstoredinthebuffer.Ifthe

bufferisemptyandwaitingtoreceivedata,thisfieldrepresentsthesizeoftheemptybuffer.

3

Flags

Theflagsfieldcontainsmoreinformationaboutthebuffer,suchas,isitthefirstfragmentina

packet(SOP),thelastfragmentinapacket(EOP),orcontainsanentirecontiguousEthernet

packet(bothSOPandEOP).TheflagsaredescribedinSection29.2.6.4and

Section29.2.6.5.

PacketLength

Thepacketlengthonlyhasmeaningforbuffersthatbothcontaindataandarethestartofa

newpacket(SOP).InthecaseofSOPdescriptors,thepacketlengthfieldcontainsthelength

oftheentireEthernetpacket,regardlessifitiscontainedinasinglebufferorfragmentedover

severalbuffers.

Figure29-6.TypicalDescriptorLinkedList

1532

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.6.2TransmitandReceiveDescriptorQueues

TheEMACmoduleprocessesdescriptorsinlinkedlistsasdiscussedinSection29.2.6.1.Thelistsused

bytheEMACaremaintainedbytheapplicationsoftwarethroughtheuseoftheheaddescriptorpointer

registers(HDP).TheEMACsupportseightchannelsfortransmitandeightchannelsforreceive.The

correspondingheaddescriptorpointersare:

•TXnHDP-TransmitChannelnDMAHeadDescriptorPointerRegister

•RXnHDP-ReceiveChannelnDMAHeadDescriptorPointerRegister

AfteranEMACresetandbeforeenablingtheEMACforsendandreceive,all16headdescriptorpointer

registersmustbeinitializedto0.

TheEMACusesasimplesystemtodetermineifadescriptoriscurrentlyownedbytheEMACorbythe

applicationsoftware.ThereisaflaginthebufferdescriptorflagscalledOWNER.Whenthisflagisset,the

packetthatisreferencedbythedescriptorisconsideredtobeownedbytheEMAC.Notethatownership

isdoneonapacketbasedgranularity,notondescriptorgranularity,soonlySOPdescriptorsmakeuseof

theOWNERflag.Aspacketsareprocessed,theEMACpatchestheSOPdescriptorofthecorresponding

packetandclearstheOWNERflag.ThisisanindicationthattheEMAChasfinishedprocessingall

descriptorsuptoandincludingthefirstwiththeEOPflagset,indicatingtheendofthepacket(notethis

mayonlybeonedescriptorwithboththeSOPandEOPflagsset).

ToaddadescriptororalinkedlistofdescriptorstoanEMACdescriptorqueueforthefirsttime,the

softwareapplicationsimplywritesthepointertothedescriptororfirstdescriptorofalisttothe

correspondingHDPregister.Notethatthelastdescriptorinthelistmusthaveits“next”pointerclearedto

0.ThisistheonlywaytheEMAChasofdetectingtheendofthelist.Therefore,inthecasewhereonlya

singledescriptorisadded,its“nextdescriptor”pointermustbeinitializedto0.

TheHDPmustneverbewrittentowhilealistisactive.Toaddadditionaldescriptorstoadescriptorlist

alreadyownedbytheEMAC,theNULL“next”pointerofthelastdescriptorofthepreviouslistispatched

withapointertothefirstdescriptorofthenewlist.Thelistofnewdescriptorstobeappendedtothe

existinglistmustitselfbeNULLterminatedbeforethepointerpatchisperformed.

ThereisapotentialraceconditionwheretheEMACmayreadthe“next”pointerofadescriptorasNULLin

theinstantbeforeanapplicationappendsadditionaldescriptorstothelistbypatchingthepointer.This

caseishandledbythesoftwareapplicationalwaysexaminingthebufferdescriptorflagsofallEOP

packets,lookingforaspecialflagcalledendofqueue(EOQ).TheEOQflagissetbytheEMAConthe

lastdescriptorofapacketwhenthedescriptor’s“next”pointerisNULL.ThisisthewaytheEMAC

indicatestothesoftwareapplicationthatitbelievesithasreachedtheendofthelist.Whenthesoftware

applicationseestheEOQflagset,theapplicationmayatthattimesubmitthenewlist,ortheportionof

theappendedlistthatwasmissedbywritingthenewlistpointertothesameHDPthatstartedthe

process.

Thisprocessapplieswhenaddingpacketstoatransmitlist,andemptybufferstoareceivelist.

1533

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.6.3TransmitandReceiveEMACInterrupts

TheEMACprocessesdescriptorsinlinkedlistchainsasdiscussedinSection29.2.6.1,usingthelinked

listqueuemechanismdiscussedinSection29.2.6.2.

TheEMACsynchronizesdescriptorlistprocessingthroughtheuseofinterruptstothesoftware

application.Theinterruptsarecontrolledbytheapplicationusingtheinterruptmasks,globalinterrupt

enable,andthecompletionpointerregister(CP).TheCPisalsocalledtheinterruptacknowledgeregister.

TheEMACsupportseightchannelsfortransmitandeightchannelsforreceive.Thecorresponding

completionpointerregistersare:

•TXnCP-TransmitChannelnCompletionPointer(InterruptAcknowledge)Register

•RXnCP-ReceiveChannelnCompletionPointer(InterruptAcknowledge)Register

Theseregistersservetwopurposes.Whenread,theyreturnthepointertothelastdescriptorthatthe

EMAChasprocessed.Whenwrittenbythesoftwareapplication,thevaluerepresentsthelastdescriptor

processedbythesoftwareapplication.Whenthesetwovaluesdonotmatch,theinterruptisactive.

InterruptsintheEMACcontrolmoduleareroutedtotheVectoredInterruptManager(VIM)asfour

separateinterruptrequests.Theinterruptconfigurationdetermineswhetherornotanactiveinterrupt

requestactuallyinterruptstheCPU.IngeneralthefollowingsettingsarerequiredforbasicEMACtransmit

andreceiveinterrupts:

1.EMACtransmitandreceiveinterruptsareenabledbysettingthemaskregistersRXINTMASKSETand

TXINTMASKSET

2.GlobalinterruptsaresetintheEMACcontrolmodule:C0RXENandC0TXEN

3.TheVIMisconfiguredtoacceptC0_RX_PULSEandC0_TX_PULSEinterruptsfromtheEMACcontrol

module

4.Thenormalmode(IRQ)interruptsareenabledintheCortex-R4FCPU

Whetherornottheinterruptisenabled,thecurrentstateofthereceiveortransmitchannelinterruptcan

beexamineddirectlybythesoftwareapplicationreadingtheEMACreceiveinterruptstatus(unmasked)

register(RXINTSTATRAW)andtransmitinterruptstatus(unmasked)register(TXINTSTATRAW).

Afterservicingtransmitorreceiveinterrupts,theapplicationsoftwaremustacknowledgeboththeEMAC

andEMACcontrolmoduleinterrupts.

EMACinterruptsareacknowledgedwhentheapplicationsoftwareupdatesthevalueofTXnCPorRXnCP

withavaluethatmatchestheinternalvaluekeptbytheEMAC.Thismechanismensuresthatthe

applicationsoftwarenevermissesanEMACinterruptbecausetheinterruptacknowledgmentistied

directlytothebufferdescriptorprocessing.

EMACcontrolmoduleinterruptsareacknowledgedwhentheapplicationsoftwarewritestheappropriate

C0TXorC0RXkeytotheEMACEnd-Of-InterruptVectorregister(MACEOIVECTOR).The

MACEOIVECTORbehavesasaninterruptpulseinterlock--oncetheEMACcontrolmodulehasissuedan

interruptpulsetotheCPU,itwillnotgeneratefurtherpulsesofthesametypeuntiltheoriginalpulsehas

beenacknowledged.

29.2.6.4TransmitBufferDescriptorFormat

Atransmit(TX)bufferdescriptor(Figure29-7)isacontiguousblockoffour32-bitdatawordsalignedona

32-bitboundarythatdescribesapacketorapacketfragment.Example29-1showsthetransmitbuffer

descriptordescribedbyaCstructure.

1534

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

Figure29-7.TransmitBufferDescriptorFormat

Word0

31

0

NextDescriptorPointer

Word1

31

0

BufferPointer

Word2

31

16

15

0

BufferOffset

BufferLength

Word3

31

30

29

28

27

26

25

16

SOP

EOP

OWNER

EOQ

TDOWNCMPLT

PASSCRC

Reserved

15

0

PacketLength

Example29-1.TransmitBufferDescriptorinCStructureFormat

/*

//EMACDescriptor

//

//Thefollowingistheformatofasinglebufferdescriptor

//ontheEMAC.

*/

typedefstruct_EMAC_Desc{

struct_EMAC_Desc*pNext;/*Pointertonextdescriptorinchain*/

Uint8*pBuffer;/*Pointertodatabuffer*/

Uint32BufOffLen;/*BufferOffset(MSW)andLength(LSW)*/

Uint32PktFlgLen;/*PacketFlags(MSW)andLength(LSW)*/

}EMAC_Desc;

/*PacketFlags*/

#defineEMAC_DSC_FLAG_SOP0x80000000u

#defineEMAC_DSC_FLAG_EOP0x40000000u

#defineEMAC_DSC_FLAG_OWNER0x20000000u

#defineEMAC_DSC_FLAG_EOQ0x10000000u

#defineEMAC_DSC_FLAG_TDOWNCMPLT0x08000000u

#defineEMAC_DSC_FLAG_PASSCRC0x04000000u

1535

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.6.4.1NextDescriptorPointer

Thenextdescriptorpointerpointstothe32-bitwordalignedmemoryaddressofthenextbufferdescriptor

inthetransmitqueue.Thispointerisusedtocreatealinkedlistofbufferdescriptors.Ifthevalueofthis

pointeriszero,thenthecurrentbufferisthelastbufferinthequeue.Thesoftwareapplicationmustset

thisvaluepriortoaddingthedescriptortotheactivetransmitlist.ThispointerisnotalteredbytheEMAC.

ThevalueofpNextshouldneverbealteredoncethedescriptorisinanactivetransmitqueue,unlessits

currentvalueisNULL.IfthepNextpointerisinitiallyNULL,andmorepacketsneedtobequeuedfor

transmit,thesoftwareapplicationmayalterthispointertopointtoanewlyappendeddescriptor.The

EMACwillusethenewpointervalueandproceedtothenextdescriptorunlessthepNextvaluehas

alreadybeenread.Inthislattercase,thetransmitterwillhaltonthetransmitchannelinquestion,andthe

softwareapplicationmayrestartitatthattime.Thesoftwarecandetectthiscasebycheckingforanend

ofqueue(EOQ)conditionflagontheupdatedpacketdescriptorwhenitisreturnedbytheEMAC.

29.2.6.4.2BufferPointer

Thebufferpointeristhebyte-alignedmemoryaddressofthememorybufferassociatedwiththebuffer

descriptor.Thesoftwareapplicationmustsetthisvaluepriortoaddingthedescriptortotheactivetransmit

list.ThispointerisnotalteredbytheEMAC.

29.2.6.4.3BufferOffset

This16-bitfieldindicateshowmanyunusedbytesareatthestartofthebuffer.Forexample,avalueof

0000hindicatesthatnounusedbytesareatthestartofthebufferandthatvaliddatabeginsonthefirst

byteofthebuffer,whileavalueof000Fhindicatesthatthefirst15bytesofthebufferaretobeignoredby

theEMACandthatvalidbufferdatastartsonbyte16ofthebuffer.Thesoftwareapplicationmustsetthis

valuepriortoaddingthedescriptortotheactivetransmitlist.ThisfieldisnotalteredbytheEMAC.

Notethatthisvalueisonlycheckedonthefirstdescriptorofagivenpacket(wherethestartofpacket

(SOP)flagisset).Itcannotbeusedtospecifytheoffsetofsubsequentpacketfragments.Also,sincethe

bufferpointermaypointtoanybyte–alignedaddress,thisfieldmaybeentirelysuperfluous,dependingon

thedevicedriverarchitecture.

Therangeoflegalvaluesforthisfieldis0to(BufferLength–1).

29.2.6.4.4BufferLength

This16-bitfieldindicateshowmanyvaliddatabytesareinthebuffer.Onsinglefragmentpackets,this

valueisalsothetotallengthofthepacketdatatobetransmitted.Ifthebufferoffsetfieldisused,theoffset

bytesarenotcountedaspartofthislength.Thislengthcountsonlyvaliddatabytes.Thesoftware

applicationmustsetthisvaluepriortoaddingthedescriptortotheactivetransmitlist.Thisfieldisnot

alteredbytheEMAC.

29.2.6.4.5PacketLength

This16-bitfieldspecifiesthenumberofdatabytesintheentirepacket.Anyleadingbufferoffsetbytesare

notincluded.Thesumofthebufferlengthfieldsofeachofthepacket’sfragments(ifmorethanone)must

beequaltothepacketlength.Thesoftwareapplicationmustsetthisvaluepriortoaddingthedescriptorto

theactivetransmitlist.ThisfieldisnotalteredbytheEMAC.Thisvalueisonlycheckedonthefirst

descriptorofagivenpacket(wherethestartofpacket(SOP)flagisset).

29.2.6.4.6StartofPacket(SOP)Flag

Whenset,thisflagindicatesthatthedescriptorpointstoapacketbufferthatisthestartofanewpacket.

Inthecaseofasinglefragmentpacket,boththeSOPandendofpacket(EOP)flagsareset.Otherwise,

thedescriptorpointingtothelastpacketbufferforthepacketsetstheEOPflag.Thisbitissetbythe

softwareapplicationandisnotalteredbytheEMAC.

1536

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.6.4.7EndofPacket(EOP)Flag

Whenset,thisflagindicatesthatthedescriptorpointstoapacketbufferthatislastforagivenpacket.In

thecaseofasinglefragmentpacket,boththestartofpacket(SOP)andEOPflagsareset.Otherwise,the

descriptorpointingtothelastpacketbufferforthepacketsetstheEOPflag.Thisbitissetbythesoftware

applicationandisnotalteredbytheEMAC.

29.2.6.4.8Ownership(OWNER)Flag

Whenset,thisflagindicatesthatallthedescriptorsforthegivenpacket(fromSOPtoEOP)arecurrently

ownedbytheEMAC.ThisflagissetbythesoftwareapplicationontheSOPpacketdescriptorbefore

addingthedescriptortothetransmitdescriptorqueue.Forasinglefragmentpacket,theSOP,EOP,and

OWNERflagsareallset.TheOWNERflagisclearedbytheEMAConceitisfinishedwithallthe

descriptorsforthegivenpacket.NotethatthisflagisvalidonSOPdescriptorsonly.

29.2.6.4.9EndofQueue(EOQ)Flag

Whenset,thisflagindicatesthatthedescriptorinquestionwasthelastdescriptorinthetransmitqueue

foragiventransmitchannel,andthatthetransmitterhashalted.Thisflagisinitiallyclearedbythe

softwareapplicationpriortoaddingthedescriptortothetransmitqueue.ThisbitissetbytheEMACwhen

theEMACidentifiesthatadescriptoristhelastforagivenpacket(theEOPflagisset),andthereareno

moredescriptorsinthetransmitlist(nextdescriptorpointerisNULL).

ThesoftwareapplicationcanusethisbittodetectwhentheEMACtransmitterforthecorresponding

channelhashalted.Thisisusefulwhentheapplicationappendsadditionalpacketdescriptorstoatransmit

queuelistthatisalreadyownedbytheEMAC.NotethatthisflagisvalidonEOPdescriptorsonly.

29.2.6.4.10TeardownComplete(TDOWNCMPLT)Flag

Thisflagisusedwhenatransmitqueueisbeingtorndown,oraborted,insteadofallowingittobe

transmitted.Thiswouldhappenunderdevicedriverresetorshutdownconditions.TheEMACsetsthisbit

intheSOPdescriptorofeachpacketasitisabortedfromtransmission.

NotethatthisflagisvalidonSOPdescriptorsonly.Alsonotethatonlythefirstpacketinanunsentlisthas

theTDOWNCMPLTflagset.SubsequentdescriptorsarenotprocessedbytheEMAC.

29.2.6.4.11PassCRC(PASSCRC)Flag

ThisflagissetbythesoftwareapplicationintheSOPpacketdescriptorbeforeitaddsthedescriptortothe

transmitqueue.SettingthisbitindicatestotheEMACthatthe4byteEthernetCRCisalreadypresentin

thepacketdata,andthattheEMACshouldnotgenerateitsownversionoftheCRC.

WhentheCRCflagiscleared,theEMACgeneratesandappendsthe4-byteCRC.Thebufferlengthand

packetlengthfieldsdonotincludetheCRCbytes.WhentheCRCflagisset,the4-byteCRCissupplied

bythesoftwareapplicationandisalreadyappendedtotheendofthepacketdata.Thebufferlengthand

packetlengthfieldsincludetheCRCbytes,astheyarepartofthevalidpacketdata.Notethatthisflagis

validonSOPdescriptorsonly.

1537

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.6.5ReceiveBufferDescriptorFormat

Areceive(RX)bufferdescriptor(Figure29-8)isacontiguousblockoffour32-bitdatawordsalignedona

32-bitboundarythatdescribesapacketorapacketfragment.Example29-2showsthereceivebuffer

descriptordescribedbyaCstructure.

29.2.6.5.1NextDescriptorPointer

Thispointerpointstothe32–bitwordalignedmemoryaddressofthenextbufferdescriptorinthereceive

queue.Thispointerisusedtocreatealinkedlistofbufferdescriptors.Ifthevalueofthispointeriszero,

thenthecurrentbufferisthelastbufferinthequeue.Thesoftwareapplicationmustsetthisvaluepriorto

addingthedescriptortotheactivereceivelist.ThispointerisnotalteredbytheEMAC.

ThevalueofpNextshouldneverbealteredoncethedescriptorisinanactivereceivequeue,unlessits

currentvalueisNULL.IfthepNextpointerisinitiallyNULL,andmoreemptybufferscanbeaddedtothe

pool,thesoftwareapplicationmayalterthispointertopointtoanewlyappendeddescriptor.TheEMAC

willusethenewpointervalueandproceedtothenextdescriptorunlessthepNextvaluehasalreadybeen

read.Inthislattercase,thereceiverwillhaltthereceivechannelinquestion,andthesoftwareapplication

mayrestartitatthattime.Thesoftwarecandetectthiscasebycheckingforanendofqueue(EOQ)

conditionflagontheupdatedpacketdescriptorwhenitisreturnedbytheEMAC.

29.2.6.5.2BufferPointer

Thebufferpointeristhebyte-alignedmemoryaddressofthememorybufferassociatedwiththebuffer

descriptor.Thesoftwareapplicationmustsetthisvaluepriortoaddingthedescriptortotheactivereceive

list.ThispointerisnotalteredbytheEMAC.

Figure29-8.ReceiveBufferDescriptorFormat

Word0

31

0

NextDescriptorPointer

Word1

31

0

BufferPointer

Word2

31

16

15

0

BufferOffset

BufferLength

Word3

31

30

29

28

27

26

25

24

SOP

EOP

OWNER

EOQ

TDOWNCMPLT

PASSCRC

JABBER

OVERSIZE

23

22

21

20

19

18

17

16

FRAGMENT

UNDERSIZED

CONTROL

OVERRUN

CODEERROR

ALIGNERROR

CRCERROR

NOMATCH

15

0

PacketLength

1538

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

Example29-2.ReceiveBufferDescriptorinCStructureFormat

/*

//EMACDescriptor

//

//Thefollowingistheformatofasinglebufferdescriptor

//ontheEMAC.

*/

typedefstruct_EMAC_Desc{

struct_EMAC_Desc*pNext;/*Pointertonextdescriptorinchain*/

Uint8*pBuffer;/*Pointertodatabuffer*/

Uint32BufOffLen;/*BufferOffset(MSW)andLength(LSW)*/

Uint32PktFlgLen;/*PacketFlags(MSW)andLength(LSW)*/

}EMAC_Desc;

/*PacketFlags*/

#defineEMAC_DSC_FLAG_SOP0x80000000u

#defineEMAC_DSC_FLAG_EOP0x40000000u

#defineEMAC_DSC_FLAG_OWNER0x20000000u

#defineEMAC_DSC_FLAG_EOQ0x10000000u

#defineEMAC_DSC_FLAG_TDOWNCMPLT0x08000000u

#defineEMAC_DSC_FLAG_PASSCRC0x04000000u

#defineEMAC_DSC_FLAG_JABBER0x02000000u

#defineEMAC_DSC_FLAG_OVERSIZE0x01000000u

#defineEMAC_DSC_FLAG_FRAGMENT0x00800000u

#defineEMAC_DSC_FLAG_UNDERSIZED0x00400000u

#defineEMAC_DSC_FLAG_CONTROL0x00200000u

#defineEMAC_DSC_FLAG_OVERRUN0x00100000u

#defineEMAC_DSC_FLAG_CODEERROR0x00080000u

#defineEMAC_DSC_FLAG_ALIGNERROR0x00040000u

#defineEMAC_DSC_FLAG_CRCERROR0x00020000u

#defineEMAC_DSC_FLAG_NOMATCH0x00010000u

29.2.6.5.3BufferOffset

This16-bitfieldmustbeinitializedtozerobythesoftwareapplicationbeforeaddingthedescriptortoa

receivequeue.

WhetherornotthisfieldisupdateddependsonthesettingoftheRXBUFFEROFFSETregister.Whenthe

offsetregisterissettoanon-zerovalue,thereceivedpacketiswrittentothepacketbufferatanoffset

givenbythevalueoftheregister,andthisvalueisalsowrittentothebufferoffsetfieldofthedescriptor.

Whenapacketisfragmentedovermultiplebuffersbecauseitdoesnotfitinthefirstbuffersupplied,the

bufferoffsetonlyappliestothefirstbufferinthelist,whichiswherethestartofpacket(SOP)flagissetin

thecorrespondingbufferdescriptor.Inotherwords,thebufferoffsetfieldisonlyupdatedbytheEMACon

SOPdescriptors.

TherangeoflegalvaluesfortheBUFFEROFFSETregisteris0to(BufferLength–1)forthesmallest

valueofbufferlengthforalldescriptorsinthelist.

1539

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.6.5.4BufferLength

This16-bitfieldisusedfortwopurposes:

•Beforethedescriptorisfirstplacedonthereceivequeuebytheapplicationsoftware,thebufferlength

fieldisfirstinitializedbythesoftwaretohavethephysicalsizeoftheemptydatabufferpointedtoby

thebufferpointerfield.

•AftertheemptybufferhasbeenprocessedbytheEMACandfilledwithreceiveddatabytes,thebuffer

lengthfieldisupdatedbytheEMACtoreflecttheactualnumberofvaliddatabyteswrittentothe

buffer.

29.2.6.5.5PacketLength

This16-bitfieldspecifiesthenumberofdatabytesintheentirepacket.Thisvalueisinitializedtozeroby

thesoftwareapplicationforemptypacketbuffers.ThevalueisfilledinbytheEMAConthefirstbuffer

usedforagivenpacket.ThisissignifiedbytheEMACsettingastartofpacket(SOP)flag.Thepacket

lengthissetbytheEMAConallSOPbufferdescriptors.

29.2.6.5.6StartofPacket(SOP)Flag

Whenset,thisflagindicatesthatthedescriptorpointstoapacketbufferthatisthestartofanewpacket.

Inthecaseofasinglefragmentpacket,boththeSOPandendofpacket(EOP)flagsareset.Otherwise,

thedescriptorpointingtothelastpacketbufferforthepackethastheEOPflagset.Thisflagisinitially

clearedbythesoftwareapplicationbeforeaddingthedescriptortothereceivequeue.Thisbitissetbythe

EMAConSOPdescriptors.

29.2.6.5.7EndofPacket(EOP)Flag

Whenset,thisflagindicatesthatthedescriptorpointstoapacketbufferthatislastforagivenpacket.In

thecaseofasinglefragmentpacket,boththestartofpacket(SOP)andEOPflagsareset.Otherwise,the

descriptorpointingtothelastpacketbufferforthepackethastheEOPflagset.Thisflagisinitiallycleared

bythesoftwareapplicationbeforeaddingthedescriptortothereceivequeue.ThisbitissetbytheEMAC

onEOPdescriptors.

29.2.6.5.8Ownership(OWNER)Flag

Whenset,thisflagindicatesthatthedescriptoriscurrentlyownedbytheEMAC.Thisflagissetbythe

softwareapplicationbeforeaddingthedescriptortothereceivedescriptorqueue.Thisflagisclearedby

theEMAConceitisfinishedwithagivensetofdescriptors,associatedwithareceivedpacket.Theflagis

updatedbytheEMAConSOPdescriptoronly.SowhentheapplicationidentifiesthattheOWNERflagis

clearedonanSOPdescriptor,itmayassumethatalldescriptorsuptoandincludingthefirstwiththeEOP

flagsethavebeenreleasedbytheEMAC.(Notethatinthecaseofsinglebufferpackets,thesame

descriptorwillhaveboththeSOPandEOPflagsset.)

29.2.6.5.9EndofQueue(EOQ)Flag

Whenset,thisflagindicatesthatthedescriptorinquestionwasthelastdescriptorinthereceivequeuefor

agivenreceivechannel,andthatthecorrespondingreceiverchannelhashalted.Thisflagisinitially

clearedbythesoftwareapplicationpriortoaddingthedescriptortothereceivequeue.Thisbitissetby

theEMACwhentheEMACidentifiesthatadescriptoristhelastforagivenpacketreceived(alsosetsthe

EOPflag),andtherearenomoredescriptorsinthereceivelist(nextdescriptorpointerisNULL).

ThesoftwareapplicationcanusethisbittodetectwhentheEMACreceiverforthecorrespondingchannel

hashalted.Thisisusefulwhentheapplicationappendsadditionalfreebufferdescriptorstoanactive

receivequeue.NotethatthisflagisvalidonEOPdescriptorsonly.

29.2.6.5.10TeardownComplete(TDOWNCMPLT)Flag

Thisflagisusedwhenareceivequeueisbeingtorndown,oraborted,insteadofbeingfilledwithreceived

data.Thiswouldhappenunderdevicedriverresetorshutdownconditions.TheEMACsetsthisbitinthe

descriptorofthefirstfreebufferwhentheteardownoccurs.Noadditionalqueueprocessingisperformed.

1540

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.6.5.11PassCRC(PASSCRC)Flag

ThisflagissetbytheEMACintheSOPbufferdescriptorifthereceivedpacketincludesthe4-byteCRC.

Thisflagshouldbeclearedbythesoftwareapplicationbeforesubmittingthedescriptortothereceive

queue.

29.2.6.5.12JabberFlag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketisajabberframeandwas

notdiscardedbecausetheRXCEFENbitwassetintheRXMBPENABLE.Jabberframesareframesthat

exceedtheRXMAXLENinlength,andhaveCRC,code,oralignmenterrors.

29.2.6.5.13OversizeFlag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketisanoversizedframeand

wasnotdiscardedbecausetheRXCEFENbitwassetintheRXMBPENABLE.

29.2.6.5.14FragmentFlag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketisonlyapacketfragment

andwasnotdiscardedbecausetheRXCEFENbitwassetintheRXMBPENABLE.

29.2.6.5.15UndersizedFlag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketisundersizedandwas

notdiscardedbecausetheRXCSFENbitwassetintheRXMBPENABLE.

29.2.6.5.16ControlFlag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketisanEMACcontrolframe

andwasnotdiscardedbecausetheRXCMFENbitwassetintheRXMBPENABLE.

29.2.6.5.17OverrunFlag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketwasabortedduetoa

receiveoverrun.

29.2.6.5.18CodeError(CODEERROR)Flag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketcontainedacodeerror

andwasnotdiscardedbecausetheRXCEFENbitwassetintheRXMBPENABLE.

29.2.6.5.19AlignmentError(ALIGNERROR)Flag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketcontainedanalignment

errorandwasnotdiscardedbecausetheRXCEFENbitwassetintheRXMBPENABLE.

29.2.6.5.20CRCError(CRCERROR)Flag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketcontainedaCRCerror

andwasnotdiscardedbecausetheRXCEFENbitwassetintheRXMBPENABLE.

29.2.6.5.21NoMatch(NOMATCH)Flag

ThisflagissetbytheEMACintheSOPbufferdescriptor,ifthereceivedpacketdidnotpassanyofthe

EMAC’saddressmatchcriteriaandwasnotdiscardedbecausetheRXCAFENbitwassetinthe

RXMBPENABLE.AlthoughthepacketisavalidEthernetdatapacket,itwasonlyreceivedbecausethe

EMACisinpromiscuousmode.

1541

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Arbiter andbus switches

CPUDMA Controllers8K bytedescriptormemory

Configurationregisters

Interruptlogic

Interruptsto CPU

EMAC interruptsMDIO interrupts

Configuration busTransmit and Receive



Architecturewww.ti.com

29.2.7EMACControlModule

TheEMACcontrolmodule(Figure29-9)interfacestheEMACandMDIOmodulestotherestofthe

system,andalsoprovidesalocalmemoryspacetoholdEMACpacketbufferdescriptors.Localmemory

isusedtohelpavoidcontentionwithdevicememoryspaces.Otherfunctionsincludethebusarbiter,and

interruptlogiccontrol.

Figure29-9.EMACControlModuleBlockDiagram

29.2.7.1InternalMemory

TheEMACcontrolmoduleincludes8Kbytesofinternalmemory(CPPIbufferdescriptormemory).The

internalmemoryblockisessentialforallowingtheEMACtooperatemoreindependentlyoftheCPU.It

alsopreventsmemoryunderflowconditionswhentheEMACissuesreadorwriterequeststodescriptor

memory.(MemoryaccessestoreadorwritetheactualEthernetpacketdataareprotectedbytheEMAC's

internalFIFOs).

Adescriptorisa16-bytememorystructurethatholdsinformationaboutasingleEthernetpacketbuffer,

whichmaycontainafullorpartialEthernetpacket.Thuswiththe8Kmemoryblockprovidedfordescriptor

storage,theEMACmodulecansendandreceiveduptoacombined512packetsbeforeitneedstobe

servicedbyapplicationordriversoftware.

29.2.7.2BusArbiter

TheEMACcontrolmodulebusarbiteroperatestransparentlytotherestofthesystem.Itisused:

•ToarbitratebetweentheCPUandEMACbusesforaccesstointernaldescriptormemory.

•ToarbitratebetweeninternalEMACbusesforaccesstosystemmemory.

1542

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.7.3InterruptControl

InterruptconditionsgeneratedbytheEMACandMDIOmodulesarecombinedintofourinterruptsignals

thatareroutedtotheVectoredInterruptManager(VIM);theVIMthenrelaystheinterruptsignalstothe

CPU.TheEMACcontrolmoduleusestwosetsofregisterstocontroltheinterruptsignalstotheCPU:

•C0RXTHRESHEN,C0RXEN,C0TXEN,andC0MISCENregistersenablethepulsesignalsthatare

mappedtotheVIM

•INTCONTROL,C0RXIMAX,andC0TXIMAXregistersenableinterruptpacingtolimitthenumberof

interruptpulsesgeneratedpermillisecond

InterruptsmustbeacknowledgedbywritingtheappropriatevaluetotheEMACEnd-Of-InterruptVector

(MACEOIVECTOR).TheMACEOIVECTORbehavesasaninterruptpulseinterlock--oncetheEMAC

controlmodulehasissuedaninterruptpulsetotheCPU,itwillnotgeneratefurtherpulsesofthesame

typeuntiltheoriginalpulsehasbeenacknowledged.

29.2.8MDIOModule

TheMDIOmoduleisusedtomanageupto32physicallayer(PHY)devicesconnectedtotheEthernet

MediaAccessController(EMAC).ThedevicesupportsasinglePHYbeingconnectedtotheEMACatany

giventime.TheMDIOmoduleisdesignedtoallowalmosttransparentoperationoftheMDIOinterface

withlittlemaintenancefromtheCPU.

TheMDIOmodulecontinuouslypolls32MDIOaddressesinordertoenumerateallPHYdevicesinthe

system.OnceaPHYdevicehasbeendetected,theMDIOmodulereadstheMDIOPHYlinkstatus

register(LINK)tomonitorthePHYlinkstate.LinkchangeeventsarestoredintheMDIOmodule,which

caninterrupttheCPU.ThisstoringoftheeventsallowstheCPUtopollthelinkstatusofthePHYdevice

withoutcontinuouslyperformingMDIOmoduleaccesses.However,whentheCPUmustaccesstheMDIO

moduleforconfigurationandnegotiation,theMDIOmoduleperformstheMDIOreadorwriteoperation

independentoftheCPU.Thisindependentoperationallowstheprocessortopollforcompletionor

interrupttheCPUoncetheoperationhascompleted.

TheMDIOmoduledoesnotsupportthe"Clause45"interface.

29.2.8.1MDIOModuleComponents

TheMDIOmodule(Figure29-10)interfacestothePHYcomponentsthroughtwoMDIOpins(MDIO_CLK

andMDIO),andtotheCPUthroughtheEMACcontrolmoduleandtheconfigurationbus.TheMDIO

moduleconsistsofthefollowinglogicalcomponents:

•MDIOclockgenerator

•GlobalPHYdetectionandlinkstatemonitoring

•ActivePHYmonitoring

•PHYregisteruseraccess

1543

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




EMACcontrolmoduleControlregistersand logicPHYmonitoring

Peripheralclock

MDIOclockgenerator

USERINTMDIOinterface

pollingPHY

MDCLKMDIOLINKINT

Configuration bus



Architecturewww.ti.com

Figure29-10.MDIOModuleBlockDiagram

29.2.8.1.1MDIOClockGenerator

TheMDIOclockgeneratorcontrolstheMDIOclockbasedonadivide-downoftheVCLK3peripheralclock

intheEMACcontrolmodule.TheMDIOclockisspecifiedtorunupto2.5MHz,althoughtypicaloperation

wouldbe1.0MHz.SincetheVCLK3peripheralclockfrequencyisconfigurable,theapplicationsoftware

ordrivercontrolsthedivide-downamount.Seethedevicedatasheetforperipheralclockspeed

specifications.

29.2.8.1.2GlobalPHYDetectionandLinkStateMonitoring

TheMDIOmodulecontinuouslypollsall32MDIOaddressesinordertoenumeratethePHYdevicesinthe

system.ThemoduletrackswhetherornotaPHYonaparticularaddresshasresponded,andwhetheror

notthePHYcurrentlyhasalink.Usingthisinformationallowsthesoftwareapplicationtoquickly

determinewhichMDIOaddressthePHYisusing.

29.2.8.1.3ActivePHYMonitoring

OnceaPHYcandidatehasbeenselectedforuse,theMDIOmoduletransparentlymonitorsitslinkstate

byreadingtheMDIOPHYlinkstatusregister(LINK).LinkchangeeventsarestoredontheMDIOdevice

andcanoptionallyinterrupttheCPU.ThisallowsthesystemtopollthelinkstatusofthePHYdevice

withoutcontinuouslyperformingcostlyMDIOaccesses.

29.2.8.1.4PHYRegisterUserAccess

WhentheCPUmustaccessMDIOforconfigurationandnegotiation,thePHYaccessmoduleperforms

theactualMDIOreadorwriteoperationindependentoftheCPU.ThisallowstheCPUtopollfor

completionorreceiveaninterruptwhenthereadorwriteoperationhasbeenperformed.Theuseraccess

registersUSERACCESSnallowsthesoftwaretosubmittheaccessrequestsforthePHYconnectedtothe

device.

1544

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.8.2MDIOModuleOperationalOverview

TheMDIOmoduleimplementsthe802.3serialmanagementinterfacetointerrogateandcontrolan

EthernetPHY,usingasharedtwo-wiredbus.Itseparatelyperformsautodetectionandrecordsthecurrent

linkstatusofupto32PHYs,pollingall32MDIOaddresses.

ApplicationsoftwareusestheMDIOmoduletoconfiguretheautonegotiationparametersofthePHY

attachedtotheEMAC,retrievethenegotiationresults,andconfigurerequiredparametersintheEMAC.

Inthisdevice,theEthernetPHYattachedtothesystemcanbedirectlycontrolledandqueried.TheMedia

IndependentInterface(MII)addressofthisPHYdeviceisspecifiedinoneofthePHYADRMONbitsinthe

MDIOuserPHYselectregister(USERPHYSELn).TheMDIOmodulecanbeprogrammedtotriggera

CPUinterruptonaPHYlinkchangeevent,bysettingtheLINKINTENBbitinUSERPHYSELn.Readsand

writestoregistersinthisPHYdeviceareperformedusingtheMDIOuseraccessregister

(USERACCESSn).

TheMDIOmodulepowers-upinanidlestateuntilspecificallyenabledbysettingtheENABLEbitinthe

MDIOcontrolregister(CONTROL).Atthistime,theMDIOclockdividerandpreamblemodeselectionare

alsoconfigured.TheMDIOpreambleisenabledbydefault,butcanbedisabledwhentheconnectedPHY

doesnotrequireit.OncetheMDIOmoduleisenabled,theMDIOinterfacestatemachinecontinuously

pollsthePHYlinkstatus(byreadingthegenericstatusregister)ofallpossible32PHYaddressesand

recordstheresultsintheMDIOPHYalivestatusregister(ALIVE)andMDIOPHYlinkstatusregister

(LINK).ThecorrespondingbitfortheconnectedPHY(0-31)issetinALIVE,ifthePHYrespondedtothe

readrequest.ThecorrespondingbitissetinLINK,ifthePHYrespondedandalsoiscurrentlylinked.In

addition,anyPHYregisterreadtransactionsinitiatedbytheapplicationsoftwareusingUSERACCESSn

causesALIVEtobeupdated.

TheUSERPHYSELnisusedtotrackthelinkstatusoftheconnectedPHYaddress.Achangeinthelink

statusofthePHYbeingmonitoredsetstheappropriatebitintheMDIOlinkstatuschangeinterrupt

registers(LINKINTRAWandLINKINTMASKED),ifenabledbytheLINKINTENBbitinUSERPHYSELn.

WhiletheMDIOmoduleisenabled,thehostissuesareadorwritetransactionovertheMIImanagement

interfaceusingtheDATA,PHYADR,REGADR,andWRITEbitsinUSERACCESSn.Whentheapplication

setstheGObitinUSERACCESSn,theMDIOmodulebeginsthetransactionwithoutanyfurther

interventionfromtheCPU.Uponcompletion,theMDIOmoduleclearstheGObitandsetsthe

correspondingUSERINTRAWbit(0or1)intheMDIOusercommandcompleteinterruptregister

(USERINTRAW)correspondingtoUSERACCESSnused.ThecorrespondingUSERINTMASKEDbit(0or

1)intheMDIOusercommandcompleteinterruptregister(USERINTMASKED)mayalsobeset,

dependingonthemasksettingconfiguredintheMDIOusercommandcompleteinterruptmaskset

register(USERINTMASKSET)andtheMDIOuserinterruptmaskclearregister(USERINTMASKCLEAR).

Around-robinarbitrationschemeisusedtoscheduletransactionsthatmaybequeuedusingboth

USERACCESS0andUSERACCESS1.TheapplicationsoftwaremustcheckthestatusoftheGObitin

USERACCESSnbeforeinitiatinganewtransaction,toensurethattheprevioustransactionhas

completed.TheapplicationsoftwarecanusetheACKbitinUSERACCESSntodeterminethestatusofa

readtransaction.

1545

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.8.2.1InitializingtheMDIOModule

ThefollowingstepsareperformedbytheapplicationsoftwareordevicedrivertoinitializetheMDIO

device:

1.ConfigurethePREAMBLEandCLKDIVbitsintheMDIOcontrolregister(CONTROL).

2.EnabletheMDIOmodulebysettingtheENABLEbitinCONTROL.

3.TheMDIOPHYalivestatusregister(ALIVE)canbereadinpollingfashionuntilaPHYconnectedto

thesystemresponded,andtheMDIOPHYlinkstatusregister(LINK)candeterminewhetherthisPHY

alreadyhasalink.

4.SetuptheappropriatePHYaddressesintheMDIOuserPHYselectregister(USERPHYSELn),andset

theLINKINTENBbittoenablealinkchangeeventinterruptifdesirable.

5.IfaninterruptongeneralMDIOregisteraccessisdesired,setthecorrespondingbitintheMDIOuser

commandcompleteinterruptmasksetregister(USERINTMASKSET)tousetheMDIOuseraccess

register(USERACCESSn).SinceonlyonePHYisusedinthisdevice,theapplicationsoftwarecanuse

oneUSERACCESSntotriggeracompletioninterrupt;theotherUSERACCESSnisnotsetup.

29.2.8.2.2WritingDataToaPHYRegister

TheMDIOmoduleincludesauseraccessregister(USERACCESSn)todirectlyaccessaspecifiedPHY

device.TowriteaPHYregister,performthefollowing:

1.ChecktoensurethattheGObitintheMDIOuseraccessregister(USERACCESSn)iscleared.

2.WritetotheGO,WRITE,REGADR,PHYADR,andDATAbitsinUSERACCESSncorrespondingtothe

PHYandPHYregisteryouwanttowrite.

3.ThewriteoperationtothePHYisscheduledandcompletedbytheMDIOmodule.Completionofthe

writeoperationcanbedeterminedbypollingtheGObitinUSERACCESSnfora0.

4.CompletionoftheoperationsetsthecorrespondingUSERINTRAWbit(0or1)intheMDIOuser

commandcompleteinterruptregister(USERINTRAW)correspondingtoUSERACCESSnused.If

interruptshavebeenenabledonthisbitusingtheMDIOusercommandcompleteinterruptmaskset

register(USERINTMASKSET),thenthebitisalsosetintheMDIOusercommandcompleteinterrupt

register(USERINTMASKED)andaninterruptistriggeredontheCPU.

29.2.8.2.3ReadingDataFromaPHYRegister

TheMDIOmoduleincludesauseraccessregister(USERACCESSn)todirectlyaccessaspecifiedPHY

device.ToreadaPHYregister,performthefollowing:

1.ChecktoensurethattheGObitintheMDIOuseraccessregister(USERACCESSn)iscleared.

2.WritetotheGO,REGADR,andPHYADRbitsinUSERACCESSncorrespondingtothePHYandPHY

registeryouwanttoread.

3.ThereaddatavalueisavailableintheDATAbitsinUSERACCESSnafterthemodulecompletesthe

readoperationontheserialbus.Completionofthereadoperationcanbedeterminedbypollingthe

GOandACKbitsinUSERACCESSn.OncetheGObithascleared,theACKbitissetonasuccessful

read.

4.CompletionoftheoperationsetsthecorrespondingUSERINTRAWbit(0or1)intheMDIOuser

commandcompleteinterruptregister(USERINTRAW)correspondingtoUSERACCESSnused.If

interruptshavebeenenabledonthisbitusingtheMDIOusercommandcompleteinterruptmaskset

register(USERINTMASKSET),thenthebitisalsosetintheMDIOusercommandcompleteinterrupt

register(USERINTMASKED)andaninterruptistriggeredontheCPU.

1546

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.8.2.4ExampleofMDIORegisterAccessCode

TheMDIOmoduleusestheMDIOuseraccessregister(USERACCESSn)toaccessthePHYcontrol

registers.Softwarefunctionsthatimplementtheaccessprocessmaysimplybethefollowingfourmacros:

•PHYREG_read(regadr,phyadr)

StarttheprocessofreadingaPHYregister

•PHYREG_write(regadr,phyadr,data)

StarttheprocessofwritingaPHYregister

•PHYREG_wait()

Synchronizeoperation(makesureread/writeisidle)

•PHYREG_waitResults(results)

Waitforreadtocompleteandreturndataread

Notethatitisnotnecessarytowaitafterawriteoperation,aslongasthestatusischeckedbeforeevery

operationtomakesuretheMDIOhardwareisidle.AnalternativeapproachistocallPHYREG_wait()after

everywrite,andPHYREG_waitResults()aftereveryread,thenthehardwarecanbeassumedtobeidle

whenstartinganewoperation.

Theimplementationofthesemacrosusingthechipsupportlibrary(CSL)isshowninExample29-3

(USERACCESS0isassumed).

NotethatthisimplementationdoesnotchecktheACKbitinUSERACCESSnonPHYregisterreads(does

notfollowtheprocedureoutlinedinSection29.2.8.2.3).SincetheMDIOPHYalivestatusregister(ALIVE)

isusedtoinitiallyselectaPHY,itisassumedthatthePHYisacknowledgingreadoperations.Itis

possiblethataPHYcouldbecomeinactiveatafuturepointintime.AnexampleofthiswouldbeaPHY

thatcanhaveitsMDIOaddresseschangedwhilethesystemisrunning.Itisnotverylikely,butthis

conditioncanbetestedbyperiodicallycheckingthePHYstateinALIVE.

Example29-3.MDIORegisterAccessMacros

#definePHYREG_read(regadr,phyadr)

MDIO_REGS->USERACCESS0=

CSL_FMK(MDIO_USERACCESS0_GO,1u)|/

CSL_FMK(MDIO_USERACCESS0_REGADR,regadr)|/

CSL_FMK(MDIO_USERACCESS0_PHYADR,phyadr)

#definePHYREG_write(regadr,phyadr,data)

MDIO_REGS->USERACCESS0=

CSL_FMK(MDIO_USERACCESS0_GO,1u)|/

CSL_FMK(MDIO_USERACCESS0_WRITE,1)|/

CSL_FMK(MDIO_USERACCESS0_REGADR,regadr)|/

CSL_FMK(MDIO_USERACCESS0_PHYADR,phyadr)|/

CSL_FMK(MDIO_USERACCESS0_DATA,data)

#definePHYREG_wait()

while(CSL_FEXT(MDIO_REGS->USERACCESS0,MDIO_USERACCESS0_GO))

#definePHYREG_waitResults(results){

while(CSL_FEXT(MDIO_REGS->USERACCESS0,MDIO_USERACCESS0_GO));

results=CSL_FEXT(MDIO_REGS->USERACCESS0,MDIO_USERACCESS0_DATA);}

1547

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Clock andreset logic

ReceiveDMA engineInterruptcontrollerTransmitDMA engineControlregisters

Configuration busEMACcontrolmodule

Configuration bus

RAMStateFIFOReceive

FIFOTransmit

MAC

transmitterStatistics

receiverMAC

SYNC

MIIaddressReceive

RMII



Architecturewww.ti.com

29.2.9EMACModule

ThissectiondiscussesthearchitectureandbasicfunctionoftheEMACmodule.

29.2.9.1EMACModuleComponents

TheEMACmodule(Figure29-11)interfacestotheoutsideworldthroughtheMediaIndependentInterface

(MII)orReducedMediaIndependentInterface(RMII).TheinterfacebetweentheEMACmoduleandthe

systemcoreisprovidedthroughtheEMACcontrolmodule.TheEMACconsistsofthefollowinglogical

components:

•Thereceivepathincludes:receiveDMAengine,receiveFIFO,andMACreceiver

•Thetransmitpathincludes:transmitDMAengine,transmitFIFO,andMACtransmitter

•Statisticslogic

•StateRAM

•Interruptcontroller

•Controlregistersandlogic

•Clockandresetlogic

Figure29-11.EMACModuleBlockDiagram

29.2.9.1.1ReceiveDMAEngine

ThereceiveDMAengineistheinterfacebetweenthereceiveFIFOandthesystemcore.Itinterfacesto

theCPUthroughthebusarbiterintheEMACcontrolmodule.ThisDMAengineistotallyindependentof

thedeviceDMA.

29.2.9.1.2ReceiveFIFO

ThereceiveFIFOconsistsofthreecellsof64-byteseachandassociatedcontrollogic.TheFIFObuffers

receivedatainpreparationforwritingintopacketbuffersindevicememory.

1548

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.9.1.3MACReceiver

TheMACreceiverdetectsandprocessesincomingnetworkframes,de-framesthem,andputstheminto

thereceiveFIFO.TheMACreceiveralsodetectserrorsandpassesstatisticstothestatisticsRAM.

29.2.9.1.4TransmitDMAEngine

ThetransmitDMAengineistheinterfacebetweenthetransmitFIFOandtheCPU.Itinterfacestothe

CPUthroughthebusarbiterintheEMACcontrolmodule.

29.2.9.1.5TransmitFIFO

ThetransmitFIFOconsistsofthreecellsof64-byteseachandassociatedcontrollogic.TheFIFObuffers

datainpreparationfortransmission.

29.2.9.1.6MACTransmitter

TheMACtransmitterformatsframedatafromthetransmitFIFOandtransmitsthedatausingthe

CSMA/CDaccessprotocol.TheframeCRCcanbeautomaticallyappended,ifrequired.TheMAC

transmitteralsodetectstransmissionerrorsandpassesstatisticstothestatisticsregisters.

29.2.9.1.7StatisticsLogic

TheEthernetstatisticsarecountedandstoredinthestatisticslogicRAM.ThisstatisticsRAMkeepstrack

of36differentEthernetpacketstatistics.

29.2.9.1.8StateRAM

StateRAMcontainstheheaddescriptorpointersandcompletionpointersregistersforbothtransmitand

receivechannels.

29.2.9.1.9EMACInterruptController

Theinterruptcontrollercontainstheinterruptrelatedregistersandlogic.The26rawEMACinterruptsare

inputtothissubmoduleandmaskedmoduleinterruptsareoutput.

29.2.9.1.10ControlRegistersandLogic

TheEMACiscontrolledbyasetofmemory-mappedregisters.Thecontrollogicalsosignalstransmit,

receive,andstatusrelatedinterruptstotheCPUthroughtheEMACcontrolmodule.

29.2.9.1.11ClockandResetLogic

TheclockandresetsubmodulegeneratesalltheEMACclocksandresets.Formoredetailsonreset

capabilities,seeSection29.2.15.1.

29.2.9.2EMACModuleOperationalOverview

Afterreset,initialization,andconfiguration,thehostmayinitiatetransmitoperations.Transmitoperations

areinitiatedbyhostwritestotheappropriatetransmitchannelheaddescriptorpointercontainedinthe

stateRAMblock.ThetransmitDMAcontrollerthenfetchesthefirstpacketinthepacketchainfrom

memory.TheDMAcontrollerwritesthepacketintothetransmitFIFOinburstsof64-bytecells.Whenthe

thresholdnumberofcells,configurableusingtheTXCELLTHRESHbitintheFIFOcontrolregister

(FIFOCONTROL),havebeenwrittentothetransmitFIFO,oracompletepacket,whicheverissmaller,the

MACtransmittertheninitiatesthepackettransmission.TheSYNCblocktransmitsthepacketovertheMII

orRMIIinterfacesinaccordancewiththe802.3protocol.Transmitstatisticsarecountedbythestatistics

block.

1549

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

Receiveoperationsareinitiatedbyhostwritestotheappropriatereceivechannelheaddescriptorpointer

afterhostinitializationandconfiguration.TheSYNCsubmodulereceivespacketsandstripsoffthe

Ethernetrelatedprotocol.ThepacketdataisinputtotheMACreceiver,whichchecksforaddressmatch

andprocesseserrors.AcceptedpacketsarethenwrittentothereceiveFIFOinburstsof64-bytecells.

ThereceiveDMAcontrollerthenwritesthepacketdatatomemory.Receivestatisticsarecountedbythe

statisticsblock.

TheEMACmoduleoperatesindependentlyoftheCPU.Itisconfiguredandcontrolledbyitsregisterset

mappedintodevicememory.Informationaboutdatapacketsiscommunicatedbyuseof16-byte

descriptorsthatareplacedinan8K-byteblockofRAMintheEMACcontrolmodule(CPPIbuffer

descriptormemory).

Fortransmitoperations,each16-bytedescriptordescribesapacketorpacketfragmentinthesystem's

internalorexternalmemory.Forreceiveoperations,each16-bytedescriptorrepresentsafreepacket

bufferorbufferfragment.Onbothtransmitandreceive,anEthernetpacketisallowedtospanoneor

morememoryfragments,representedbyone16-bytedescriptorperfragment.Intypicaloperation,thereis

onlyonedescriptorperreceivebuffer,buttransmitpacketsmaybefragmented,dependingonthe

softwarearchitecture.

AninterruptisissuedtotheCPUwheneveratransmitorreceiveoperationhascompleted.However,itis

notnecessaryfortheCPUtoservicetheinterruptwhilethereareadditionalresourcesavailable.Inother

words,theEMACcontinuestoreceiveEthernetpacketsuntilitsreceivedescriptorlisthasbeen

exhausted.Ontransmitoperations,thetransmitdescriptorsneedonlybeservicedtorecovertheir

associatedmemorybuffer.Thus,itispossibletodelayservicingoftheEMACinterruptiftherearereal-

timetaskstoperform.

Eightchannelsaresuppliedforbothtransmitandreceiveoperations.Ontransmit,theeightchannels

representeightindependenttransmitqueues.TheEMACcanbeconfiguredtotreatthesechannelsasan

equalpriority"round-robin"queueorasasetofeightfixed-priorityqueues.Onreceive,theeightchannels

representeightindependentreceivequeueswithpacketclassification.Packetsareclassifiedbasedonthe

destinationMACaddress.EachoftheeightchannelsisassigneditsownMACaddress,enablingthe

EMACmoduletoactlikeeightvirtualMACadapters.Also,specifictypesofframescanbesenttospecific

channels.Forexample,multicast,broadcast,orother(promiscuous,error,etc.),caneachbereceivedon

aspecificreceivechannelqueue.

TheEMACkeepstrackof36differentstatistics,pluskeepsthestatusofeachindividualpacketinits

correspondingpacketdescriptor.

29.2.10MACInterface

ThefollowingsectionsdiscusstheoperationoftheMediaIndependentInterface(MII)andReducedMedia

IndependentInterface(RMII)in10Mbpsand100Mbpsmode.AnIEEE802.3compliantEthernetMAC

controlstheinterface.

29.2.10.1DataReception

29.2.10.1.1ReceiveControl

DatareceivedfromthePHYisinterpretedandoutputtotheEMACreceiveFIFO.Interpretationinvolves

detectionandremovalofthepreambleandstart-of-framedelimiter,extractionoftheaddressandframe

length,datahandling,errorcheckingandreporting,cyclicredundancychecking(CRC),andstatistics

controlsignalgeneration.AddressdetectionandframefilteringisperformedoutsidetheMACinterface.

29.2.10.1.2ReceiveInter-FrameInterval

The802.3standardrequiresaninterpacketgap(IPG),whichis96bittimes.However,theEMACcan

tolerateareducedIPGof8bittimeswithacorrectpreambleandstartframedelimiter.Thisinterval

betweenframesmustcomprise(inthefollowingorder):

1.AnInterpacketGap(IPG).

2.A7-bytepreamble(allbytes55h).

3.A1-bytestartofframedelimiter(5Dh).

1550

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.10.1.3ReceiveFlowControl

Whenenabledandtriggered,receiveflowcontrolisinitiatedtolimittheEMACfromfurtherframe

reception.Twoformsofreceivebufferflowcontrolareavailable:

•Collision-basedflowcontrolforhalf-duplexmode

•IEEE802.3xpauseframesflowcontrolforfull-duplexmode

Ineithercase,receiveflowcontrolpreventsframereceptionbyissuingtheflowcontrolappropriateforthe

currentmodeofoperation.ReceiveflowcontrolpreventsreceptionofframesontheEMACuntilallofthe

triggeringconditionsclear,atwhichtimeframesmayagainbereceivedbytheEMAC.

ReceiveflowcontrolisenabledbytheRXBUFFERFLOWENbitintheMACcontrolregister

(MACCONTROL).TheEMACisconfiguredforcollisionorIEEE802.3Xflowcontrolusingthe

FULLDUPLEXbitinMACCONTROL.Receiveflowcontrolistriggeredwhenthenumberoffreebuffersin

anyenabledreceivechannelfreebuffercountregister(RXnFREEBUFFER)islessthanorequaltothe

receivechannelflowcontrolthresholdregister(RXnFLOWTHRESH)value.Receiveflowcontrolis

independentofreceiveQOS,exceptthatbothusethefreebuffervalues.

29.2.10.1.3.1Collision-BasedReceiveBufferFlowControl

Collision-basedreceivebufferflowcontrolprovidesameansofpreventingframereceptionwhenthe

EMACisoperatinginhalf-duplexmode(theFULLDUPLEXbitisclearedinMACCONTROL).When

receiveflowcontrolisenabledandtriggered,theEMACgeneratescollisionsforreceivedframes.Thejam

sequencetransmittedisthe12-bytesequenceC3.C3.C3.C3.C3.C3.C3.C3.C3.C3.C3.C3h.Thejam

sequencebeginsnolaterthanapproximatelyasthesourceaddressstartstobereceived.Notethatthese

forcedcollisionsarenotlimitedtoamaximumof16consecutivecollisions,andareindependentofthe

normalback-offalgorithm.

Receiveflowcontroldoesnotdependonthevalueoftheincomingframedestinationaddress.Acollision

isgeneratedforanyincomingpacket,regardlessofthedestinationaddress,ifanyEMACenabled

channel’sfreebufferregistervalueislessthanorequaltothechannel’sflowthresholdvalue.

29.2.10.1.3.2IEEE802.3x-BasedReceiveBufferFlowControl

IEEE802.3x-basedreceivebufferflowcontrolprovidesameansofpreventingframereceptionwhenthe

EMACisoperatinginfull-duplexmode(theFULLDUPLEXbitissetinMACCONTROL).Whenreceive

flowcontrolisenabledandtriggered,theEMACtransmitsapauseframetorequestthatthesending

stationstoptransmittingfortheperiodindicatedwithinthetransmittedpauseframe.

TheEMACtransmitsapauseframetothereservedmulticastaddressatthefirstavailableopportunity

(immediatelyifcurrentlyidleorfollowingthecompletionoftheframecurrentlybeingtransmitted).The

pauseframecontainsthemaximumpossiblevalueforthepausetime(FFFFh).TheEMACcountsthe

receivepauseframetime(decrementsFF00hto0)andretransmitsanoutgoingpauseframe,ifthecount

reaches0.Whentheflowcontrolrequestisremoved,theEMACtransmitsapauseframewithazero

pausetimetocancelthepauserequest.

Notethattransmittedpauseframesareonlyarequesttotheotherendstationtostoptransmitting.

Framesthatarereceivedduringthepauseintervalarereceivednormally(providedthereceiveFIFOisnot

full).

Pauseframesaretransmittedifenabledandtriggered,regardlessofwhetherornottheEMACis

observingthepausetimeperiodfromanincomingpauseframe.

TheEMACtransmitspauseframesasdescribedbelow:

•The48-bitreservedmulticastdestinationaddress01.80.C2.00.00.01h.

•The48-bitsourceaddress(setusingtheMACSRCADDRLOandMACSRCADDRHIregisters).

•The16-bitlength/typefieldcontainingthevalue88.08h.

•The16-bitpauseopcodeequalto00.01h.

•The16-bitpausetimevalueofFF.FFh.Apause-quantumis512bit-times.Pauseframessentto

cancelapauserequesthaveapausetimevalueof00.00h.

•Zeropaddingto64-bytedatalength(EMACtransmitsonly64-bytepauseframes).

1551

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

•The32-bitframe-checksequence(CRCword).

Allquantitiesarehexadecimalandaretransmittedmost-significantbytefirst.Theleast-significantbit(LSB)

istransferredfirstineachbyte.

IftheRXBUFFERFLOWENbitinMACCONTROLisclearedto0whilethepausetimeisnonzero,thenthe

pausetimeisclearedto0andazerocountpauseframeissent.

29.2.10.2DataTransmission

TheEMACpassesdatatothePHYfromthetransmitFIFO(whenenabled).Dataissynchronizedtothe

transmitclockrate.TransmissionbeginswhenthereareTXCELLTHRESHcellsof64byteseach,ora

completepacket,intheFIFO.

29.2.10.2.1TransmitControl

Ajamsequenceisoutputifacollisionisdetectedonatransmitpacket.Ifthecollisionwaslate(afterthe

first64byteshavebeentransmitted),thecollisionisignored.Ifthecollisionisnotlate,thecontrollerwill

backoffbeforeretryingtheframetransmission.Whenoperatinginfull-duplexmode,thecarriersense

(MII_CRS)andcollision-sensing(MII_COL)modesaredisabled.

29.2.10.2.2CRCInsertion

IftheSOPbufferdescriptorPASSCRCflagiscleared,theEMACgeneratesandappendsa32-bit

EthernetCRContothetransmitteddata.FortheEMAC-generatedCRCcase,aCRC(orplaceholder)at

theendofthedataisallowedbutnotrequired.ThebufferbytecountvalueshouldnotincludetheCRC

bytes,iftheyarepresent.

IftheSOPbufferdescriptorPASSCRCflagisset,thenthelastfourbytesofthetransmitdataare

transmittedastheframeCRC.ThefourCRCdatabytesshouldbethelastfourbytesoftheframeand

shouldbeincludedinthebufferbytecountvalue.TheMACperformsnoerrorcheckingontheoutgoing

CRC.

29.2.10.2.3AdaptivePerformanceOptimization(APO)

TheEMACincorporatesadaptiveperformanceoptimization(APO)logicthatmaybeenabledbysetting

theTXPACEbitintheMACcontrolregister(MACCONTROL).Transmissionpacingtoenhance

performanceisenabledwhentheTXPACEbitisset.Adaptiveperformancepacingintroducesdelaysinto

thenormaltransmissionofframes,delayingtransmissionattemptsbetweenstations,reducingthe

probabilityofcollisionsoccurringduringheavytraffic(asindicatedbyframedeferralsandcollisions),

thereby,increasingthechanceofsuccessfultransmission.

Whenaframeisdeferred,suffersasinglecollision,multiplecollisions,orexcessivecollisions,thepacing

counterisloadedwithaninitialvalueof31.Whenaframeistransmittedsuccessfully(without

experiencingadeferral,singlecollision,multiplecollision,orexcessivecollision),thepacingcounteris

decrementedby1,downto0.

Withpacingenabled,anewframeispermittedtoimmediately(afteroneinterpacketgap)attempt

transmissiononlyifthepacingcounteris0.Ifthepacingcounterisnonzero,theframeisdelayedbythe

pacingdelayofapproximatelyfourinterpacketgap(IPG)delays.APOonlyaffectstheIPGprecedingthe

firstattemptattransmittingaframe;APOdoesnotaffecttheback-offalgorithmforretransmittedframes.

29.2.10.2.4Interpacket-Gap(IPG)Enforcement

ThemeasurementreferencefortheIPGof96bittimesischangeddependingonframetrafficconditions.

IfaframeissuccessfullytransmittedwithoutcollisionandMII_CRSisdeassertedwithinapproximately48

bittimesofMII_TXENbeingdeasserted,then96bittimesismeasuredfromMII_TXEN.Iftheframe

sufferedacollisionorMII_CRSisnotdeasserteduntilmorethanapproximately48bittimesafter

MII_TXENisdeasserted,then96bittimes(approximately,butnotless)ismeasuredfromMII_CRS.

29.2.10.2.5BackOff

TheEMACimplementsthe802.3binaryexponentialback-offalgorithm.

1552

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.10.2.6TransmitFlowControl

Incomingpauseframesareactedupon,whenenabled,topreventtheEMACfromtransmittinganyfurther

frames.IncomingpauseframesareonlyacteduponwhentheFULLDUPLEXandTXFLOWENbitsinthe

MACcontrolregister(MACCONTROL)areset.Pauseframesarenotacteduponinhalf-duplexmode.

Pauseframeactionistakenifenabled,butnormallytheframeisfilteredandnottransferredtomemory.

MACcontrolframesaretransferredtomemory,iftheRXCMFENbitinthereceive

multicast/broadcast/promiscuouschannelenableregister(RXMBPENABLE)isset.TheTXFLOWENand

FULLDUPLEXbitsaffectwhetherornotMACcontrolframesareactedupon,buttheyhavenoaffectupon

whetherornotMACcontrolframesaretransferredtomemoryorfiltered.

PauseframesareasubsetofMACcontrolframeswithanopcodefieldof0001h.Incomingpauseframes

areonlyacteduponbytheEMACif:

•TXFLOWENbitissetinMACCONTROL

•Theframe’slengthis64toRXMAXLENbytesinclusive

•TheframecontainsnoCRCerrororalign/codeerrors

Thepausetimevaluefromvalidframesisextractedfromthetwobytesfollowingtheopcode.Thepause

timeisloadedintotheEMACtransmitpausetimerandthetransmitpausetimeperiodbegins.Ifavalid

pauseframeisreceivedduringthetransmitpausetimeperiodofaprevioustransmitpauseframethen:

•Ifthedestinationaddressisnotequaltothereservedmulticastaddressoranyenabledordisabled

unicastaddress,thenthetransmitpausetimerimmediatelyexpires,or

•Ifthenewpausetimevalueis0,thenthetransmitpausetimerimmediatelyexpires,else

•TheEMACtransmitpausetimerimmediatelyissettothenewpauseframepausetimevalue.(Any

remainingpausetimefromthepreviouspauseframeisdiscarded).

IftheTXFLOWENbitinMACCONTROLiscleared,thenthepausetimerimmediatelyexpires.

TheEMACdoesnotstartthetransmissionofanewdataframeanysoonerthan512bit-timesaftera

pauseframewithanonzeropausetimehasfinishedbeingreceived(MII_RXDVgoinginactive).No

transmissionbeginsuntilthepausetimerhasexpired(theEMACmaytransmitpauseframesinorderto

initiateoutgoingflowcontrol).Anyframealreadyintransmissionwhenapauseframeisreceivedis

completedandunaffected.

Incomingpauseframesconsistof:

•A48-bitdestinationaddressequaltooneofthefollowing:

–Thereservedmulticastdestinationaddress01.80.C2.00.00.01h

–AnyEMAC48-bitunicastaddress.Pauseframesareaccepted,regardlessofwhetherthechannel

isenabledornot.

•The16-bitlength/typefieldcontainingthevalue88.08h.

•The48-bitsourceaddressofthetransmittingdevice.

•The16-bitpauseopcodeequalto00.01h.

•The16-bitpausetime.Apause-quantumis512bit-times.

•Paddingto64-bytedatalength.

•The32-bitframe-checksequence(CRCword).

Allquantitiesarehexadecimalandaretransmittedmost-significantbytefirst.Theleast-significantbit(LSB)

istransferredfirstineachbyte.

Thepaddingisrequiredtomakeuptheframetoaminimumof64bytes.Thestandardallowspause

frameslongerthan64bytestobediscardedorinterpretedasvalidpauseframes.TheEMACrecognizes

anypauseframebetween64bytesandRXMAXLENbytesinlength.

29.2.10.2.7Speed,Duplex,andPauseFrameSupport

TheMACoperatesat10Mbpsor100Mbps,inhalf-duplexorfull-duplexmode,andwithorwithoutpause

framesupportasconfiguredbythehost.

1553

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.11PacketReceiveOperation

29.2.11.1ReceiveDMAHostConfiguration

ToconfigurethereceiveDMAforoperationthehostmust:

•Initializethereceiveaddresses.

•InitializethereceivechannelnDMAheaddescriptorpointerregisters(RXnHDP)to0.

•WritetheMACaddresshashnregisters(MACHASH1andMACHASH2),ifmulticastaddressingis

desired.

•Ifflowcontrolistobeenabled,initialize:

–thereceivechannelnfreebuffercountregisters(RXnFREEBUFFER)

–thereceivechannelnflowcontrolthresholdregister(RXnFLOWTHRESH)

–thereceivefilterlowpriorityframethresholdregister(RXFILTERLOWTHRESH)

•Enablethedesiredreceiveinterruptsusingthereceiveinterruptmasksetregister(RXINTMASKSET)

andthereceiveinterruptmaskclearregister(RXINTMASKCLEAR).

•SettheappropriateconfigurationbitsintheMACcontrolregister(MACCONTROL).

•Writethereceivebufferoffsetregister(RXBUFFEROFFSET)value(typicallyzero).

•Setupthereceivechannel(s)bufferdescriptorsandinitializeRXnHDP.

•EnablethereceiveDMAcontrollerbysettingtheRXENbitinthereceivecontrolregister

(RXCONTROL).

•Configureandenablethereceiveoperation,asdesired,inthereceive

multicast/broadcast/promiscuouschannelenableregister(RXMBPENABLE)andbyusingthereceive

unicastsetregister(RXUNICASTSET)andthereceiveunicastclearregister(RXUNICASTCLEAR).

29.2.11.2ReceiveChannelEnabling

Eachoftheeightreceivechannelshasanenablebit(RXCHnEN)inthereceiveunicastsetregister

(RXUNICASTSET)thatiscontrolledusingRXUNICASTSETandthereceiveunicastclearregister

(RXUNICASTCLEAR).TheRXCHnENbitsdeterminewhetherthegivenchannelisenabled(whensetto

1)toreceiveframeswithamatchingunicastormulticastdestinationaddress.

TheRXBROADENbitinthereceivemulticast/broadcast/promiscuouschannelenableregister

(RXMBPENABLE)determinesifbroadcastframesareenabledorfiltered.Ifbroadcastframesareenabled

(whensetto1),thentheyarecopiedtoonlyasinglechannelselectedbytheRXBROADCHbitin

RXMBPENABLE.

TheRXMULTENbitinRXMBPENABLEdeterminesifhashmatchingmulticastframesareenabledor

filtered.Incomingmulticastaddresses(groupaddresses)arehashedintoanindexinthehashtable.Ifthe

indexedbitissetthentheframehashmatchesandwillbetransferredtothechannelselectedbythe

RXMULTCHbitinRXMBPENABLEwhenmulticastframesareenabled.Themulticasthashbitsaresetin

theMACaddresshashnregisters(MACHASH1andMACHASH2).

TheRXPROMCHbitinRXMBPENABLEselectsthepromiscuouschanneltoreceiveframesselectedby

theRXCMFEN,RXCSFEN,RXCEFEN,andRXCAFENbits.ThesefourbitsallowreceptionofMAC

controlframes,shortframes,errorframes,andallframes(promiscuous),respectively.

29.2.11.3ReceiveAddressMatching

AlleightMACaddressescorrespondingtotheeightreceivechannelssharetheupper40bits.Onlythe

lowerbyteisuniqueforeachaddress.Alleightreceiveaddressesshouldbeinitialized,becausepause

framesareacteduponregardlessofwhetherachannelisenabledornot.

AMACaddressiswrittenbyfirstwritingtheaddressnumber(channel)tobewrittenintotheMACindex

register(MACINDEX).Theupper32bitsofaddressarethenwrittentotheMACaddresshighbytes

register(MACADDRHI),whichisfollowedbywritingthelower16bitsofaddresstotheMACaddresslow

bytesregister(MACADDRLO).SincealleightMACaddressessharetheupper40bitsofaddress,

MACADDRHIneedstobewrittenonlythefirsttime(forthefirstchannelconfigured).

1554

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.11.4HardwareReceiveQOSSupport

Hardwarereceivequalityofservice(QOS)issupported,whenenabled,bytheTagProtocolIdentifier

formatandtheassociatedTagControlInformation(TCI)formatpriorityfield.Whentheincomingframe

length/typevalueisequalto81.00h,theEMACrecognizestheframeasanEthernetEncodedTag

ProtocolType.Thetwooctetsimmediatelyfollowingtheprotocoltypecontainthe16-bitTCIfield.Bits15-

13oftheTCIfieldcontainthereceivedframespriority(0to7).Thereceivedframeisalow-priorityframe,

ifthepriorityvalueis0to3;thereceivedframeisahigh-priorityframe,ifthepriorityvalueis4to7.All

framesthathavealength/typefieldvaluenotequalto81.00harelow-priorityframes.Receivedframes

thatcontainpriorityinformationaredeterminedbytheEMACas:

•A48-bit(6bytes)destinationaddressequalto:

–Thedestinationstation'sindividualunicastaddress.

–Thedestinationstation'smulticastaddress(MACHASH1andMACHASH2).

–Thebroadcastaddressofallones.

•A48-byte(6bytes)sourceaddress.

•The16-bit(2bytes)length/typefieldcontainingthevalue81.00h.

•The16-bit(2bytes)TCIfieldwiththepriorityfieldintheupper3bits.

•Databytes

•The4bytesCRC.

Thereceivefilterlowpriorityframethresholdregister(RXFILTERLOWTHRESH)andthereceivechannel

nfreebuffercountregisters(RXnFREEBUFFER)areusedinconjunctionwiththepriorityinformationto

implementreceivehardwareQOS.Low-priorityframesarefilteredifthenumberoffreebuffers

(RXnFREEBUFFER)fortheframechannelislessthanorequaltothefilterlowthreshold

(RXFILTERLOWTHRESH)value.HardwareQOSisenabledbytheRXQOSENbitinthereceive

multicast/broadcast/promiscuouschannelenableregister(RXMBPENABLE).

29.2.11.5HostFreeBufferTracking

Thehostmusttrackfreebuffersforeachenabledchannel(includingunicast,multicast,broadcast,and

promiscuous),ifreceiveQOSorreceiveflowcontrolisused.Disabledchannelfreebuffervaluesaredo

notcares.Duringinitialization,thehostshouldwritethenumberoffreebuffersforeachenabledchannel

totheappropriatereceivechannelnfreebuffercountregisters(RXnFREEBUFFER).TheEMAC

decrementstheappropriatechannel’sfreebuffervalueforeachbufferused.Whenthehostreclaimsthe

framebuffers,thehostshouldwritethechannelfreebufferregisterwiththenumberofreclaimedbuffers

(writetoincrement).Thereareamaximumof65,535freebuffersavailable.RXnFREEBUFFERonly

needstobeupdatedbythehostifreceiveQOSorflowcontrolisused.

29.2.11.6ReceiveChannelTeardown

Thehostcommandsareceivechannelteardownbywritingthechannelnumbertothereceiveteardown

register(RXTEARDOWN).Whenateardowncommandisissuedtoanenabledreceivechannel,the

followingoccurs:

•Anycurrentframeinreceptioncompletesnormally.

•TheTDOWNCMPLTflagissetinthenextbufferdescriptorinthechain,ifthereisone.

•Thechannelheaddescriptorpointerisclearedto0.

•Areceiveinterruptforthechannelisissuedtothehost.

•Thecorrespondingreceivechannelncompletionpointerregister(RXnCP)containsthevalueFFFF

FFCh.

Channelteardownmaybecommandedonanychannelatanytime.Thehostisinformedoftheteardown

completionbythesetteardowncomplete(TDOWNCMPLT)bufferdescriptorbit.TheEMACdoesnot

clearanychannelenablesduetoateardowncommand.Ateardowncommandtoaninactivechannel

issuesaninterruptthatsoftwareshouldacknowledgewithanFFFFFFFChacknowledgevaluetoRXnCP

(notethatthereisnobufferdescriptorinthiscase).SoftwaremayreadRXnCPtodetermineifthe

interruptwasduetoacommandedteardown.ThereadvalueisFFFFFFFCh,iftheinterruptwasduetoa

teardowncommand.

1555

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.11.7ReceiveFrameClassification

Receivedframesareproper(good)frames,iftheyarebetween64bytesandthevalueinthereceive

maximumlengthregister(RXMAXLEN)bytesinlength(inclusive)andcontainnocode,align,orCRC

errors.

Receivedframesarelongframes,iftheirframecountexceedsthevalueinRXMAXLEN.TheRXMAXLEN

reset(default)valueis5EEh(1518indecimal).Longreceivedframesareeitheroversizedorjabber

frames.Longframeswithnoerrorsareoversizedframes;longframeswithCRC,code,oralignment

errorsarejabberframes.

Receivedframesareshortframes,iftheirframecountislessthan64bytes.Shortframesthataddress

matchandcontainnoerrorsareundersizedframes;shortframeswithCRC,code,oralignmenterrorsare

fragmentframes.Iftheframelengthislessthanorequalto20,thentheframeCRCispassed,regardless

ofwhethertheRXPASSCRCbitissetorclearedinthereceivemulticast/broadcast/promiscuouschannel

enableregister(RXMBPENABLE).

AreceivedlongpacketalwayscontainsRXMAXLENnumberofbytestransferredtomemory(ifthe

RXCEFENbitissetinRXMBPENABLE),regardlessofthevalueoftheRXPASSCRCbit.Followingisan

examplewithRXMAXLENsetto1518:

•Iftheframelengthis1518,thenthepacketisnotalongpacketandthereare1514or1518bytes

transferredtomemorydependingonthevalueoftheRXPASSCRCbit.

•Iftheframelengthis1519,thereare1518bytestransferredtomemoryregardlessofthe

RXPASSCRCbitvalue.ThelastthreebytesarethefirstthreeCRCbytes.

•Iftheframelengthis1520,thereare1518bytestransferredtomemoryregardlessofthe

RXPASSCRCbitvalue.ThelasttwobytesarethefirsttwoCRCbytes.

•Iftheframelengthis1521,thereare1518bytestransferredtomemoryregardlessofthe

RXPASSCRCbitvalue.ThelastbyteisthefirstCRCbyte.

•Iftheframelengthis1522,thereare1518bytestransferredtomemory.Thelastbyteisthelastdata

byte.

29.2.11.8PromiscuousReceiveMode

WhenthepromiscuousreceivemodeisenabledbysettingtheRXCAFENbitinthereceive

multicast/broadcast/promiscuouschannelenableregister(RXMBPENABLE),nonaddressmatchingframes

thatwouldnormallybefilteredaretransferredtothepromiscuouschannel.Addressmatchingframesthat

wouldnormallybefilteredduetoerrorsaretransferredtotheaddressmatchchannelwhentheRXCAFEN

andRXCEFENbitsinRXMBPENABLEareset.Aframeisconsideredtobeanaddressmatchingframe

onlyifitisenabledtobereceivedonaunicast,multicast,orbroadcastchannel.Framesreceivedto

disabledunicast,multicast,orbroadcastchannelsareconsiderednonaddressmatching.

MACcontrolframesaddressmatchonlyiftheRXCMFENbitinRXMBPENABLEisset.TheRXCEFEN

andRXCSFENbitsinRXMBPENABLEdeterminewhethererrorframesaretransferredtomemoryornot,

buttheydonotdeterminewhethererrorframesareaddressmatchingornot.Shortframesareaspecial

typeoferrorframes.

AsinglechannelisselectedasthepromiscuouschannelbytheRXPROMCHbitinRXMBPENABLE.The

promiscuousreceivemodeisenabledbytheRXCMFEN,RXCEFEN,RXCSFEN,andRXCAFENbitsin

RXMBPENABLE.Table29-7showstheeffectsofthepromiscuousenablebits.Properframesareframes

thatarebetween64bytesandthevalueinthereceivemaximumlengthregister(RXMAXLEN)bytesin

lengthinclusiveandcontainnocode,align,orCRCerrors.

1556

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

Table29-7.ReceiveFrameTreatmentSummary

AddressMatch

RXCAFEN

RXCEFEN

RXCMFEN

RXCSFEN

ReceiveFrameTreatment

0

0

X

X

X

Noframestransferred.

0

1

0

0

0

Properframestransferredtopromiscuouschannel.

0

1

0

0

1

Proper/undersizeddataframestransferredto

promiscuouschannel.

0

1

0

1

0

Properdataandcontrolframestransferredto

promiscuouschannel.

0

1

0

1

1

Proper/undersizeddataandcontrolframes

transferredtopromiscuouschannel.

0

1

1

0

0

Proper/oversize/jabber/code/align/CRCdataframes

transferredtopromiscuouschannel.Nocontrolor

undersized/fragmentframesaretransferred.

0

1

1

0

1

Proper/undersized/fragment/oversize/jabber/code/

align/CRCdataframestransferredtopromiscuous

channel.Nocontrolframesaretransferred.

0

1

1

1

0

Proper/oversize/jabber/code/align/CRCdataand

controlframestransferredtopromiscuouschannel.

Noundersizedframesaretransferred.

0

1

1

1

1

Allnonaddressmatchingframeswithandwithout

errorstransferredtopromiscuouschannel.

1

X

0

0

0

Properdataframestransferredtoaddressmatch

channel.

1

X

0

0

1

Proper/undersizeddataframestransferred

toaddressmatchchannel.

1

X

0

1

0

Properdataandcontrolframestransferredto

addressmatchchannel.

1

X

0

1

1

Proper/undersizeddataandcontrolframes

transferredtoaddressmatchchannel.

1

X

1

0

0

Proper/oversize/jabber/code/align/CRCdataframes

transferredtoaddressmatchchannel.Nocontrol

orundersizedframesaretransferred.

1

X

1

0

1

Proper/oversize/jabber/fragment/undersized/code/

align/CRCdataframestransferredtoaddress

matchchannel.Nocontrolframesaretransferred.

1

X

1

1

0

Proper/oversize/jabber/code/align/CRCdataand

controlframestransferredtoaddressmatch

channel.Noundersized/fragmentframesare

transferred.

1

X

1

1

1

Alladdressmatchingframeswithandwithout

errorstransferredtotheaddressmatchchannel

1557

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.11.9ReceiveOverrun

Thetypesofreceiveoverrunare:

•FIFOstartofframeoverrun(FIFO_SOF)

•FIFOmiddleofframeoverrun(FIFO_MOF)

•DMAstartofframeoverrun(DMA_SOF)

•DMAmiddleofframeoverrun(DMA_MOF)

Thestatisticscountersusedtotrackthesetypesofreceiveoverrunare:

•Receivestartofframeoverrunsregister(RXSOFOVERRUNS)

•Receivemiddleofframeoverrunsregister(RXMOFOVERRUNS)

•ReceiveDMAoverrunsregister(RXDMAOVERRUNS)

Startofframeoverrunshappenwhentherearenoresourcesavailablewhenframereceptionbegins.Start

offrameoverrunsincrementtheappropriateoverrunstatistic(s)andtheframeisfiltered.

Middleofframeoverrunshappenwhentherearesomeresourcestostarttheframereception,butthe

resourcesrunoutduringframereception.Innormaloperation,aframethatoverrunsafterstartingthe

framereceptionisfilteredandtheappropriatestatistic(s)areincremented;however,theRXCEFENbitin

thereceivemulticast/broadcast/promiscuouschannelenableregister(RXMBPENABLE)affectsoverrun

frametreatment.Table29-8showshowtheoverrunconditionishandledforthemiddleofframeoverrun.

Table29-8.MiddleofFrameOverrunTreatment

AddressMatch

RXCAFEN

RXCEFEN

MiddleofFrameOverrunTreatment

0

0

X

Overrunframefiltered.

0

1

0

Overrunframefiltered.

0

1

1

Asmuchframedataaspossibleistransferredtothepromiscuouschannel

untiloverrun.Theappropriateoverrunstatistic(s)isincrementedandthe

OVERRUNandNOMATCHflagsaresetintheSOPbufferdescriptor.Note

thattheRXMAXLENnumberofbytescannotbereachedforanoverrunto

occur(itwouldbetruncatedandbeajabberoroversize).

1

X

0

Overrunframefilteredwiththeappropriateoverrunstatistic(s)incremented.

1

X

1

Asmuchframedataaspossibleistransferredtotheaddressmatch

channeluntiloverrun.Theappropriateoverrunstatistic(s)isincremented

andtheOVERRUNflagissetintheSOPbufferdescriptor.Notethatthe

RXMAXLENnumberofbytescannotbereachedforanoverruntooccur(it

wouldbetruncated).

1558

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.12PacketTransmitOperation

ThetransmitDMAisaneightchannelinterface.Prioritybetweentheeightqueuesmaybeeitherfixedor

round-robinasselectedbytheTXPTYPEbitintheMACcontrolregister(MACCONTROL).Ifthepriority

typeisfixed,thenchannel7hasthehighestpriorityandchannel0hasthelowestpriority.Round-robin

priorityproceedsfromchannel0tochannel7.

29.2.12.1TransmitDMAHostConfiguration

ToconfigurethetransmitDMAforoperationthehostmustperform:

•WritetheMACsourceaddresslowbytesregister(MACSRCADDRLO)andtheMACsourceaddress

highbytesregister(MACSRCADDRHI)(usedforpauseframesontransmit).

•InitializethetransmitchannelnDMAheaddescriptorpointerregisters(TXnHDP)to0.

•Enablethedesiredtransmitinterruptsusingthetransmitinterruptmasksetregister(TXINTMASKSET)

andthetransmitinterruptmaskclearregister(TXINTMASKCLEAR).

•SettheappropriateconfigurationbitsintheMACcontrolregister(MACCONTROL).

•Setupthetransmitchannel(s)bufferdescriptorsinhostmemory.

•EnablethetransmitDMAcontrollerbysettingtheTXENbitinthetransmitcontrolregister

(TXCONTROL).

•WritetheappropriateTXnHDPwiththepointertothefirstdescriptortostarttransmitoperations.

29.2.12.2TransmitChannelTeardown

Thehostcommandsatransmitchannelteardownbywritingthechannelnumbertothetransmitteardown

register(TXTEARDOWN).Whenateardowncommandisissuedtoanenabledtransmitchannel,the

followingoccurs:

•Anyframecurrentlyintransmissioncompletesnormally.

•TheTDOWNCMPLTflagissetinthenextSOPbufferdescriptorinthechain,ifthereisone.

•Thechannelheaddescriptorpointerisclearedto0.

•Atransmitinterruptisissuedtoinformthehostofthechannelteardown.

•Thecorrespondingtransmitchannelncompletionpointerregister(TXnCP)containsthevalue

FFFFFFFCh.

•ThehostshouldacknowledgeateardowninterruptwithanFFFFFFFChacknowledgevalue.

Channelteardownmaybecommandedonanychannelatanytime.Thehostisinformedoftheteardown

completionbythesetteardowncomplete(TDOWNCMPLT)bufferdescriptorbit.TheEMACdoesnot

clearanychannelenablesduetoateardowncommand.Ateardowncommandtoaninactivechannel

issuesaninterruptthatsoftwareshouldacknowledgewithanFFFFFFFChacknowledgevaluetoTXnCP

(notethatthereisnobufferdescriptorinthiscase).Softwaremayreadtheinterruptacknowledgelocation

(TXnCP)todetermineiftheinterruptwasduetoacommandedteardown.ThereadvalueisFFFFFFFCh,

iftheinterruptwasduetoateardowncommand.

1559

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.13ReceiveandTransmitLatency

ThetransmitandreceiveFIFOseachcontainthree64-bytecells.TheEMACbeginstransmissionofa

packetonthewireafterTXCELLTHRESH(configurablethroughtheFIFOcontrolregister)cells,ora

completepacket,areavailableintheFIFO.

TransmitunderruncannotoccurforpacketsizesofTXCELLTHRESHtimes64bytes(orless).Forlarger

packetsizes,transmitunderrunoccursifthememorylatencyisgreaterthanthetimerequiredtotransmit

a64-bytecellonthewire;thisis5.12μsin100Mbpsmodeand51.2μsin10Mbpsmode.Thememory

latencytimeincludesallbufferdescriptorreadsfortheentirecelldata.

Receiveoverrunispreventedifthereceivememorycelllatencyislessthanthetimerequiredtotransmita

64-bytecellonthewire:5.12μsin100Mbpsmode,or51.2μsin10Mbpsmode.Thelatencytime

includesanyrequiredbufferdescriptorreadsforthecelldata.

Latencytosystem’sinternalandexternalRAMcanbecontrolledthroughtheuseofthetransfernode

priorityallocationregisteravailableatthedevicelevel.LatencytodescriptorRAMislowbecauseRAMis

localtotheEMAC,asitispartoftheEMACcontrolmodule.

29.2.14TransferNodePriority

Thedevicecontainsachip-levelmasterpriorityregisterthatisusedtosetthepriorityofthetransfernode

usedinissuingmemorytransferrequeststosystemmemory.

AlthoughtheEMAChasinternalFIFOstohelpalleviatememorytransferarbitrationproblems,theaverage

transferrateofdatareadandwrittenbytheEMACtointernalorexternalprocessormemorymustbeat

leastthatoftheEthernetwirerate.Inaddition,theinternalFIFOsystemcannotwithstandasingle

memorylatencyeventgreaterthanthetimeittakestofilloremptyaTXCELLTHRESHnumberofinternal

64byteFIFOcells.

For100Mbpsoperation,theserestrictionstranslateintothefollowingrules:

•Theshort-termaverage,each64-bytememoryread/writerequestfromtheEMACmustbeservicedin

nomorethan5.12μs.

•Anysinglelatencyeventinrequestservicingcanbenolongerthan(5.12×TXCELLTHRESH)μs.

1560

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.15ResetConsiderations

29.2.15.1SoftwareResetConsiderations

TheperipheralclockiscontrolledbytheGlobalClockModule(GCM),whiletheresettotheEMAC,MDIO

andEMACcontrolmoduleiscontrolledbythesystemmodule.Seethe"Architecture"chapterofthe

TechnicalReferenceManualformoreonhowtoenableordisabletheperipheralclocktotheEMAC,

MDIOandEMACcontrolmodule.FormoreonhowtheEMAC,MDIO,andEMACcontrolmoduleare

disabledorplacedinresetatruntime,seeSection29.2.18.

Withintheperipheralitself,theEMACcomponentoftheEthernetMACperipheralcanbeplacedinareset

statebywritingtothesoftresetregister(SOFTRESET).Writinga1totheSOFTRESETbitcausesthe

EMAClogictoberesetandtheregistervaluestobesettotheirdefaultvalues.Softwareresetoccurs

whenthereceiveandtransmitDMAcontrollersareinanidlestatetoavoidlockinguptheconfiguration

bus;itistheresponsibilityofthesoftwaretoverifythattherearenopendingframestobetransferred.

Afterwritinga1totheSOFTRESETbit,itmaybepolledtodetermineiftheresethasoccurred.Ifa1is

read,theresethasnotyetoccurred;ifa0isread,thenaresethasoccurred.

Afterasoftwareresetoperation,alltheEMACregistersneedtobereinitializedforproperdata

transmission,includingtheFULLDUPLEXbitsettingintheMACcontrolregister(MACCONTROL).

UnliketheEMACmodule,theMDIOandEMACcontrolmodulescannotbeplacedinresetfromaregister

insidetheirmemorymap.

29.2.15.2HardwareResetConsiderations

Whenahardwareresetoccurs,theEMACperipheralhasitsregistervaluesresetandallthecomponents

returntotheirdefaultstate.Afterthehardwarereset,theEMACneedstobeinitializedbeforebeingable

toresumeitsdatatransmission,asdescribedinSection29.2.16.

Ahardwareresetistheonlymeansofrecoveringfromtheerrorinterrupts(HOSTPEND),whichare

triggeredbyerrorsinpacketbufferdescriptors.Beforedoingahardwarereset,youshouldinspectthe

errorcodesintheMACstatusregister(MACSTATUS)thatgivesinformationaboutthetypeofsoftware

errorthatneedstobecorrected.Fordetailedinformationonerrorinterrupts,seeSection29.2.17.1.4.

1561

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.16Initialization

29.2.16.1EnablingtheEMAC/MDIOPeripheral

Whenthedeviceispoweredon,theEMACperipheralbecomesenabledassoonasthesystemresetis

released,andtheEMACperipheralregistersaresettotheirdefaultvalues.Theapplicationsoftwarecan

configuretheEMACperipheralregistersasrequired.

29.2.16.2EMACControlModuleInitialization

TheEMACcontrolmoduleisusedforglobalinterruptenablesandtopaceinterruptsusing1mstime

windows.Thereisalsoan8KblockofCPPIRAMlocaltotheEMACthatisusedtoholdpacketbuffer

descriptors.

NotethatalthoughtheEMACcontrolmoduleandtheEMACmodulehaveslightlydifferentfunctions,in

practice,thetypeofmaintenanceperformedontheEMACcontrolmoduleismorecommonlyconducted

fromtheEMACmodulesoftware(asopposedtotheMDIOmodule).

TheinitializationoftheEMACcontrolmoduleconsistsoftwoparts:

1.ConfigurationoftheinterrupttotheCPU.

2.InitializationoftheEMACcontrolmodule:

•SettingtheinterruptpacecountsusingtheEMACcontrolmoduleregistersINTCONTROL,

C0RXIMAX,andC0TXIMAX

•InitializingtheEMACandMDIOmodules

•EnablinginterruptsintheEMACcontrolmoduleusingtheEMACcontrolmoduleinterruptcontrol

registersC0RXTHRESHEN,C0RXEN,C0TXEN,andC0MISCEN.

TheprocessofmappingtheEMACinterruptstotheCPUisdonethroughtheVectoredInterruptManager

(VIM).OncetheinterruptismappedtoaCPUinterrupt,generalmaskingandunmaskingofinterrupts(to

controlreentrancy)shouldbedoneatthechiplevelbymanipulatingtheinterruptcoreenablemask

registers.

29.2.16.3MDIOModuleInitialization

TheMDIOmoduleisusedtoinitiallyconfigureandmonitoroneormoreexternalPHYdevices.Otherthan

initializingthesoftwarestatemachine(detailsonthisstatemachinecanbefoundintheIEEE802.3

standard),allthatneedstobedonefortheMDIOmoduleistoenabletheMDIOengineandtoconfigure

theclockdivider.Tosettheclockdivider,supplyanMDIOclockof1MHz.Forexample,iftheperipheral

clockis50MHz,thedividercanbesetto50.

BoththestatemachineenableandtheMDIOclockdividerarecontrolledthroughtheMDIOcontrol

register(CONTROL).IfnoneofthepotentiallyconnectedPHYsrequiretheaccesspreamble,the

PREAMBLEbitinCONTROLcanalsobesettospeedupPHYregisteraccess.

IftheMDIOmoduleistooperateonaninterruptbasis,theinterruptscanbeenabledatthistimeusingthe

MDIOusercommandcompleteinterruptmasksetregister(USERINTMASKSET)forregisteraccessand

theMDIOuserPHYselectregister(USERPHYSELn)ifatargetPHYisalreadyknown.

OncetheMDIOstatemachinehasbeeninitializedandenabled,itstartspollingall32PHYaddresseson

theMDIObus,lookingforanactivePHY.Sinceitcantakeupto50μstoreadoneregister,itcanbe

sometimebeforetheMDIOmoduleprovidesanaccuraterepresentationofwhetheraPHYisavailable.

Also,aPHYcantakeupto3secondstonegotiatealink.Thus,itisadvisabletoruntheMDIOsoftware

offatime-basedeventratherthanpolling.

FormoreinformationonPHYcontrolregisters,seeyourPHYdevicedocumentation.

1562

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.16.4EMACModuleInitialization

TheEMACmoduleisusedtosendandreceivedatapacketsoverthenetwork.Thisisdoneby

maintaininguptoeighttransmitandreceivedescriptorqueues.TheEMACmoduleconfigurationmust

alsobekeptup-to-datebasedonPHYnegotiationresultsreturnedfromtheMDIOmodule.Mostofthe

workindevelopinganapplicationordevicedriverforEthernetisprogrammingthismodule.

ThefollowingistheinitializationprocedureadevicedriverwouldfollowtogettheEMACtothestate

whereitisreadytoreceiveandsendEthernetpackets.Someofthesestepsarenotnecessarywhen

performedimmediatelyafterdevicereset.

1.Ifenabled,clearthedeviceinterruptenablebitsintheEMACcontrolmoduleinterruptcontrolregisters

C0RXTHRESHEN,C0RXEN,C0TXEN,andC0MISCEN.

2.CleartheMACcontrolregister(MACCONTROL),receivecontrolregister(RXCONTROL),andtransmit

controlregister(TXCONTROL)(notnecessaryimmediatelyafterreset).

3.Initializeall16headerdescriptorpointerregisters(RXnHDPandTXnHDP)to0.

4.Clearall36statisticsregistersbywriting0(notnecessaryimmediatelyafterreset).

5.SetupthelocalEthernetMACaddressbyprogrammingtheMACindexregister(MACINDEX),MAC

addresshighbytesregister(MACADDRHI),andMACaddresslowbytesregister(MACADDRLO).Be

suretoprogramalleightMACaddressregisters-whetherthereceivechannelistobeenabledornot.

DuplicatethesameMACaddressacrossallunusedchannels.Whenusingmorethanonereceive

channel,startwithchannel0andprogressupwards.

6.Ifbufferflowcontrolistobeenabled,initializethereceivechannelnfreebuffercountregisters

(RXnFREEBUFFER),receivechannelnflowcontrolthresholdregister(RXnFLOWTHRESH),and

receivefilterlowpriorityframethresholdregister(RXFILTERLOWTHRESH).

7.Mostdevicedriversopenwithnomulticastaddresses,socleartheMACaddresshashregisters

(MACHASH1andMACHASH2)to0.

8.Writethereceivebufferoffsetregister(RXBUFFEROFFSET)value(typicallyzero).

9.InitiallyclearallunicastchannelsbywritingFFhtothereceiveunicastclearregister

(RXUNICASTCLEAR).Ifunicastisdesired,itcanbeenablednowbywritingthereceiveunicastset

register(RXUNICASTSET).Somedriverswilldefaulttounicastondeviceopenwhileotherswillnot.

10.Setupthereceivemulticast/broadcast/promiscuouschannelenableregister(RXMBPENABLE)withan

initialconfiguration.Theconfigurationisbasedonthecurrentreceivefiltersettingsofthedevicedriver.

Somedriversmayenablethingslikebroadcastandmulticastpacketsimmediately,whileothersmay

not.

11.SettheappropriateconfigurationbitsinMACCONTROL(donotsettheGMIIENbityet).

12.Clearallunusedchannelinterruptbitsbywritingthereceiveinterruptmaskclearregister

(RXINTMASKCLEAR)andthetransmitinterruptmaskclearregister(TXINTMASKCLEAR).

13.Enablethereceiveandtransmitchannelinterruptbitsinthereceiveinterruptmasksetregister

(RXINTMASKSET)andthetransmitinterruptmasksetregister(TXINTMASKSET)forthechannelsto

beused,andenabletheHOSTMASKandSTATMASKbitsusingtheMACinterruptmasksetregister

(MACINTMASKSET).

14.Initializethereceiveandtransmitdescriptorlistqueues.

15.PreparereceivebywritingapointertotheheadofthereceivebufferdescriptorlisttoRXnHDP.

16.EnablethereceiveandtransmitDMAcontrollersbysettingtheRXENbitinRXCONTROLandthe

TXENbitinTXCONTROL.ThensettheGMIIENbitinMACCONTROL.

17.EnablethedeviceinterruptinEMACcontrolmoduleregistersC0RXTHRESHEN,C0RXEN,C0TXEN,

andC0MISCEN.

1563

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.17InterruptSupport

29.2.17.1EMACModuleInterruptEventsandRequests

TheEMACmodulegenerates26interruptevents:

•TXPENDn:Transmitpacketcompletioninterruptfortransmitchannels0through7

•RXPENDn:Receivepacketcompletioninterruptforreceivechannels0through7

•RXTHRESHPENDn:Receivepacketcompletioninterruptforreceivechannels0through7whenflow

controlisenabledandthenumberoffreebuffersisbelowthethreshold

•STATPEND:Statisticsinterrupt

•HOSTPEND:Hosterrorinterrupt

29.2.17.1.1TransmitPacketCompletionInterrupts

ThetransmitDMAenginehaseightchannels,witheachchannelhavingacorrespondinginterrupt

(TXPENDn).ThetransmitinterruptsarelevelinterruptsthatremainasserteduntilclearedbytheCPU.

Eachoftheeighttransmitchannelinterruptsmaybeindividuallyenabledbysettingtheappropriatebitin

thetransmitinterruptmasksetregister(TXINTMASKSET)to1.Eachoftheeighttransmitchannel

interruptsmaybeindividuallydisabledbyclearingtheappropriatebitbywritinga1tothetransmit

interruptmaskclearregister(TXINTMASKCLEAR).Therawandmaskedtransmitinterruptstatusmaybe

readbyreadingthetransmitinterruptstatus(unmasked)register(TXINTSTATRAW)andthetransmit

interruptstatus(masked)register(TXINTSTATMASKED),respectively.

WhentheEMACcompletesthetransmissionofapacket,theEMACissuesaninterrupttotheCPU(via

theEMACcontrolmodule)whenitwritesthepacket’slastbufferdescriptoraddresstotheappropriate

channelqueue’stransmitcompletionpointerlocatedinthestateRAMblock.Theinterruptisgeneratedby

thewritewhenenabledbytheinterruptmask,regardlessofthevaluewritten.

Uponinterruptreception,theCPUprocessesoneormorepacketsfromthebufferchainandthen

acknowledgesaninterruptbywritingtheaddressofthelastbufferdescriptorprocessedtothequeue’s

associatedtransmitcompletionpointerinthetransmitDMAstateRAM.

Thedatawrittenbythehost(bufferdescriptoraddressofthelastprocessedbuffer)iscomparedtothe

dataintheregisterwrittenbytheEMACport(addressoflastbufferdescriptorusedbytheEMAC).Ifthe

twovaluesarenotequal(whichmeansthattheEMAChastransmittedmorepacketsthantheCPUhas

processedinterruptsfor),thetransmitpacketcompletioninterruptsignalremainsasserted.Ifthetwo

valuesareequal(whichmeansthatthehosthasprocessedallpacketsthattheEMAChastransferred),

thependinginterruptiscleared.ThevaluethattheEMACisexpectingisfoundbyreadingthetransmit

channelncompletionpointerregister(TXnCP).

TheEMACwritetothecompletionpointeractuallystoresthevalueinthestateRAM.TheCPUwritten

valuedoesnotactuallychangetheregistervalue.Thehostwrittenvalueiscomparedtotheregister

content(whichwaswrittenbytheEMAC)andifthetwovaluesareequalthentheinterruptisremoved;

otherwise,theinterruptremainsasserted.Thehostmayprocessmultiplepacketspriortoacknowledging

aninterrupt,orthehostmayacknowledgeinterruptsforeverypacket.

TheapplicationsoftwaremustacknowledgetheEMACcontrolmoduleafterprocessingpacketsbywriting

theappropriateC0RXkeytotheEMACEnd-Of-InterruptVectorregister(MACEOIVECTOR).See

Section29.5.12fortheacknowledgekeyvalues.

29.2.17.1.2ReceivePacketCompletionInterrupts

ThereceiveDMAenginehaseightchannels,whicheachchannelhavingacorrespondinginterrupt

(RXPENDn).ThereceiveinterruptsarelevelinterruptsthatremainasserteduntilclearedbytheCPU.

Eachoftheeightreceivechannelinterruptsmaybeindividuallyenabledbysettingtheappropriatebitin

thereceiveinterruptmasksetregister(RXINTMASKSET)to1.Eachoftheeightreceivechannel

interruptsmaybeindividuallydisabledbyclearingtheappropriatebitbywritinga1inthereceiveinterrupt

maskclearregister(RXINTMASKCLEAR).Therawandmaskedreceiveinterruptstatusmaybereadby

readingthereceiveinterruptstatus(unmasked)register(RXINTSTATRAW)andthereceiveinterrupt

status(masked)register(RXINTSTATMASKED),respectively.

1564

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

WhentheEMACcompletesapacketreception,theEMACissuesaninterrupttotheCPUbywritingthe

packet'slastbufferdescriptoraddresstotheappropriatechannelqueue'sreceivecompletionpointer

locatedinthestateRAMblock.Theinterruptisgeneratedbythewritewhenenabledbytheinterrupt

mask,regardlessofthevaluewritten.

Uponinterruptreception,theCPUprocessesoneormorepacketsfromthebufferchainandthen

acknowledgesoneormoreinterrupt(s)bywritingtheaddressofthelastbufferdescriptorprocessedtothe

queue'sassociatedreceivecompletionpointerinthereceiveDMAstateRAM.

Thedatawrittenbythehost(bufferdescriptoraddressofthelastprocessedbuffer)iscomparedtothe

dataintheregisterwrittenbytheEMAC(addressoflastbufferdescriptorusedbytheEMAC).Ifthetwo

valuesarenotequal(whichmeansthattheEMAChasreceivedmorepacketsthantheCPUhas

processedinterruptsfor),thereceivepacketcompletioninterruptsignalremainsasserted.Ifthetwo

valuesareequal(whichmeansthatthehosthasprocessedallpacketsthattheEMAChasreceived),the

pendinginterruptisde-asserted.ThevaluethattheEMACisexpectingisfoundbyreadingthereceive

channelncompletionpointerregister(RXnCP).

TheEMACwritetothecompletionpointeractuallystoresthevalueinthestateRAM.TheCPUwritten

valuedoesnotactuallychangetheregistervalue.Thehostwrittenvalueiscomparedtotheregister

content(whichwaswrittenbytheEMAC)andifthetwovaluesareequalthentheinterruptisremoved;

otherwise,theinterruptremainsasserted.Thehostmayprocessmultiplepacketspriortoacknowledging

aninterrupt,orthehostmayacknowledgeinterruptsforeverypacket.

TheapplicationsoftwaremustacknowledgetheEMACcontrolmoduleafterprocessingpacketsbywriting

theappropriateC0TXkeytotheEMACEnd-Of-InterruptVectorregister(MACEOIVECTOR).See

Section29.5.12fortheacknowledgekeyvalues.

29.2.17.1.3StatisticsInterrupt

Thestatisticslevelinterrupt(STATPEND)isissuedwhenanystatisticsvalueisgreaterthanorequalto

80000000h,ifenabledbysettingtheSTATMASKbitintheMACinterruptmasksetregister

(MACINTMASKSET)to1.Thestatisticsinterruptisremovedbywritingtodecrementanystatisticsvalue

greaterthan80000000h.Aslongasthemost-significantbitofanystatisticsvalueisset,theinterrupt

remainsasserted.

TheapplicationsoftwaremustakcnowledgetheEMACcontrolmoduleafterreceivingstatisticsinterrupts

bywritingtheappropriateC0MISCkeytotheEMACEnd-Of-InterruptVectorregister(MACEOIVECTOR).

SeeSection29.5.12fortheacknowledgekeyvalues.

29.2.17.1.4HostErrorInterrupt

Thehosterrorinterrupt(HOSTPEND)isissued,ifenabled,undererrorconditionsdealingwiththe

handlingofbufferdescriptors,detectedduringtransmitorreceiveDMAtransactions.Thefailureofthe

softwareapplicationtosupplyproperlyformattedbufferdescriptorsresultsinthiserror.Theerrorbitcan

onlybeclearedbyresettingtheEMACmoduleinhardware.

ThehosterrorinterruptisenabledbysettingtheHOSTMASKbitintheMACinterruptmasksetregister

(MACINTMASKSET)to1.Thehosterrorinterruptisdisabledbyclearingtheappropriatebitbywritinga1

intheMACinterruptmaskclearregister(MACINTMASKCLEAR).Therawandmaskedhosterrorinterrupt

statusmaybereadbyreadingtheMACinterruptstatus(unmasked)register(MACINTSTATRAW)andthe

MACinterruptstatus(masked)register(MACINTSTATMASKED),respectively.

Thetransmithosterrorconditionsare:

•SOPerror

•OwnershipbitnotsetinSOPbuffer

•ZeronextbufferdescriptorpointerwithEOP

•Zerobufferpointer

•Zerobufferlength

•Packetlengtherror

1565

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

Thereceivehosterrorconditionsare:

•Ownershipbitnotsetininputbuffer

•Zerobufferpointer

TheapplicationsoftwaremustacknowledgetheEMACcontrolmoduleafterreceivinghosterrorinterrupts

bywritingtheappropriateC0MISCkeytotheEMACEnd-Of-InterruptVector(MACEOIVECTOR).See

Section29.5.12fortheacknowledgekeyvalues.

29.2.17.1.5ReceiveThresholdInterrupts

Eachoftheeightreceivechannelshaveacorrespondingreceivethresholdinterrupt(RXnTHRESHPEND).

Thereceivethresholdinterruptsarelevelinterruptsthatremainasserteduntilthetriggeringconditionis

clearedbythehost.Eachoftheeightthresholdinterruptsmaybeindividuallyenabledbysettingto1the

appropriatebitintheRXINTMASKSETregister.Eachoftheeightchannelinterruptsmaybeindividually

disabledbyclearingtozerotheappropriatebitbywritinga1inthereceiveinterruptmaskclearregister

(RXINTMASKCLEAR).Therawandmaskedinterruptreceiveinterruptstatusmaybereadbyreadingthe

receiveinterruptstatus(unmasked)register(RXINTSTATRAW)andthereceiveinterruptstatus(masked)

register(RXINTSTATMASKED),respectively.

AnRXnTHRESHPENDinterruptbitisassertedwhenenabledandwhenthechannel’sassociatedfree

buffercount(RXnFREEBUFFER)islessthanorequaltothechannel’sassociatedflowcontrolthreshold

register(RXnFLOWTHRESH).Thereceivethresholdinterruptsusethesamefreebuffercountand

thresholdlogicasdoesflowcontrol,buttheinterruptsareindependentlyenabledfromflowcontrol.The

thresholdinterruptsareintendedtogivethehostanindicationthatresourcesarerunninglowfora

particularchannel(s).

TheapplicationssoftwaremustacknowledgetheEMACcontrolmoduleafterreceivingthresholdinterrupts

bywritingtheappropriateC0RXTHRESHkeytotheEMACEnd-Of-InterruptVector(MACEOIVECTOR).

SeeSection29.5.12fortheacknowledgekeyvalues.

29.2.17.2MDIOModuleInterruptEventsandRequests

TheMDIOmodulegeneratestwointerruptevents:

•LINKINT0:Serialinterfacelinkchangeinterrupt.IndicatesachangeinthestateofthePHYlink

selectedbytheUSERPHYSEL0register

•USERINT0:SerialinterfaceusercommandeventcompleteinterruptselectedbytheUSERACCESS0

register

29.2.17.2.1LinkChangeInterrupt

TheMDIOmoduleassertsalinkchangeinterrupt(LINKINT0)ifthereisachangeinthelinkstateofthe

PHYcorrespondingtotheaddressinthePHYADRMONbitintheMDIOregisterUSERPHYSEL0,andif

theLINKINTENBbitisalsosetinUSERPHYSEL0.Thisinterrupteventisalsocapturedinthe

LINKINTRAWbitintheMDIOlinkstatuschangeinterruptregister(LINKINTRAW).LINKINTRAWbits0

and1correspondtoUSERPHYSEL0andUSERPHYSEL1,respectively.

Whentheinterruptisenabledandgenerated,thecorrespondingLINKINTMASKEDbitisalsosetinthe

MDIOlinkstatuschangeinterruptregister(LINKINTMASKED).Theinterruptisclearedbywritingbackthe

samebittoLINKINTMASKED(writetoclear).

TheapplicationsoftwaremustacknowledgetheEMACcontrolmoduleafterreceivingMDIOinterruptsby

writingtheappropriateC0MISCkeytotheEMACEnd-Of-InterruptVector(MACEOIVECTOR).See

Section29.5.12fortheacknowledgekeyvalues.

1566

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comArchitecture

29.2.17.2.2UserAccessCompletionInterrupt

WhentheGObitinoneoftheMDIOregisterUSERACCESS0transitionsfrom1to0(indicating

completionofauseraccess)andthecorrespondingUSERINTMASKSETbitintheMDIOusercommand

completeinterruptmasksetregister(USERINTMASKSET)correspondingtoUSERACCESS0isset,a

useraccesscompletioninterrupt(USERINT)isasserted.Thisinterrupteventisalsocapturedinthe

USERINTRAWbitintheMDIOusercommandcompleteinterruptregister(USERINTRAW).

USERINTRAWbits0andbit1correspondtoUSERACCESS0andUSERACCESS1,respectively.

Whentheinterruptisenabledandgenerated,thecorrespondingUSERINTMASKEDbitisalsosetinthe

MDIOusercommandcompleteinterruptregister(USERINTMASKED).Theinterruptisclearedbywriting

backthesamebittoUSERINTMASKED(writetoclear).

TheapplicationsoftwaremustacknowledgetheEMACcontrolmoduleafterreceivingMDIOinterruptsby

writingtheappropriateC0MISCkeytotheEMACEnd-Of-InterruptVector(MACEOIVECTOR).See

Section29.5.12fortheacknowledgekeyvalues.

29.2.17.3ProperInterruptProcessing

AlltheinterruptssignaledfromtheEMACandMDIOmodulesareleveldriven,soiftheyremainactive,

theirlevelremainsconstant;theCPUcoremayrequireedge-orpulse-triggeredinterrupts.Inorderto

properlyconvertthelevel-driveninterruptsignaltoanedge-orpulse-triggeredsignal,theapplication

softwaremustmakeuseoftheinterruptcontrollogiccontainedintheEMACcontrolmodule.

Section29.2.7.3discussestheinterruptcontrolcontainedintheEMACcontrolmodule.Forsafeinterrupt

processing,uponentrytotheISR,thesoftwareapplicationshoulddisableinterruptsusingtheEMAC

controlmoduleregistersC0RXTHRESHEN,C0RXEN,C0TXEN,C0MISCEN,andthenreenablethem

uponleavingtheISR.Ifanyinterruptsignalsareactiveatthattime,thiscreatesanotherrisingedgeon

theinterruptsignalgoingtotheCPUinterruptcontroller,thustriggeringanotherinterrupt.TheEMAC

controlmodulealsousestheEMACcontrolmoduleregistersINTCONTROL,C0TXIMAX,andC0RXIMAX

toimplementinterruptpacing.TheapplicationsoftwaremustacknowledgetheEMACcontrolmoduleby

writingtheappropriatekeytotheEMACEnd-Of-InterruptVector(MACEOIVECTOR).SeeSection29.5.12

fortheacknowledgekeyvalues.

29.2.17.4InterruptMultiplexing

TheEMACcontrolmodulecombinesdifferentinterruptsignalsfromboththeEMACandMDIOmodules

intofourinterruptsignals(C0RXTHRESHPULSE,C0RXPULSE,C0TXPULSE,C0MISCPULSE)thatare

routedtotheVectoredInterruptManager(VIM).TheVIMiscapableofrelayingallfourinterruptsignalsto

theCPU.

Whenaninterruptisgenerated,thereasonfortheinterruptcanbereadfromtheMACinputvector

register(MACINVECTOR)locatedintheEMACmemorymap.MACINVECTORcombinesthestatusofthe

following28interruptsignals:TXPENDn,RXPENDn,RXTHRESHPENDn,STATPEND,HOSTPEND,

LINKINT0,andUSERINT0.

Formoredetailsontheinterruptmapping,seeyourdevice-specificdatasheetandVIMchapterofthe

TechnicalReferenceManual.

1567

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Architecturewww.ti.com

29.2.18PowerManagement

EachofthethreemaincomponentsoftheEMACperipheralcanbeplacedinareduced-powermodeto

conservepowerduringperiodsoflowactivity.TheperipheralclocktotheEMACperipheraliscontrolled

bytheprocessorGlobalClockModule(GCM).TheGCMallowstheapplicationtoenableordisablethe

peripheralclocktotheEMACperipheral.

ThepowerconservationmodesavailableforeachofthethreecomponentsoftheEMAC/MDIOperipheral

are:

•Idle/Disabledstate.Thismodestopstheclocksgoingtotheperipheral,andpreventsalltheregister

accesses.Afterreenablingtheperipheralfromthisidlestate,alltheregistersvaluespriortosetting

intothedisabledstatearerestored,anddatatransmissioncanproceed.Noreinitializationisrequired.

•Systemreset.TheEMACperipheralisresetbythesystemresetsignaloutputfromtheSystem

module.Refertothe"Architecture"chapteroftheTechnicalReferenceManualtoidentifythecausesof

asystemreset.Uponasystemreset,theregistersareresettotheirdefaultvalue.Whenpowering-up

afterasystemreset,alltheEMACsubmodulesneedtobereinitializedbeforeanydatatransmission

canhappen.

FormoreinformationontheuseoftheGCM,seeyourdevice-specificTechnicalReferenceManual.

29.2.19EmulationConsiderations

EMACemulationcontrolisimplementedforcompatibilitywithotherperipherals.TheSOFTandFREEbits

intheemulationcontrolregister(EMCONTROL)allowEMACoperationtobesuspended.

Whentheemulationsuspendstateisentered,theEMACstopsprocessingreceiveandtransmitframesat

thenextframeboundary.Anyframecurrentlyinreceptionortransmissioniscompletednormallywithout

suspension.Fortransmission,anycompleteorpartialframeinthetransmitcellFIFOistransmitted.For

receive,framesthataredetectedbytheEMACafterthesuspendstateisenteredareignored.No

statisticsarekeptforignoredframes.

Table29-9showshowtheSOFTandFREEbitsaffecttheoperationoftheemulationsuspend.

NOTE:Emulationsuspendhasnotbeentested.

Table29-9.EmulationControl

SOFT

FREE

Description

0

0

Normaloperation

1

0

Emulationsuspend

X

1

Normaloperation

1568

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3EMACControlModuleRegisters

Table29-10liststhememory-mappedregistersfortheEMACcontrolmodule.Thebaseaddressforthese

registersis0xFCF78800.

Table29-10.EMACControlModuleRegisters

Offset

Acronym

RegisterDescription

Section

0h

REVID

EMACControlModuleRevisionIDRegister

Section29.3.1

4h

SOFTRESET

EMACControlModuleSoftwareResetRegister

Section29.3.2

Ch

INTCONTROL

EMACControlModuleInterruptControlRegister

Section29.3.3

10h

C0RXTHRESHEN

EMACControlModuleReceiveThresholdInterruptEnableRegister

Section29.3.4

14h

C0RXEN

EMACControlModuleReceiveInterruptEnableRegister

Section29.3.5

18h

C0TXEN

EMACControlModuleTransmitInterruptEnableRegister

Section29.3.6

1Ch

C0MISCEN

EMACControlModuleMiscellaneousInterruptEnableRegister

Section29.3.7

20h-3Ch

Reserved

Reserved

40h

C0RXTHRESHSTAT

EMACControlModuleReceiveThresholdInterruptStatusRegister

Section29.3.8

44h

C0RXSTAT

EMACControlModuleReceiveInterruptStatusRegister

Section29.3.9

48h

C0TXSTAT

EMACControlModuleTransmitInterruptStatusRegister

Section29.3.10

4Ch

C0MISCSTAT

EMACControlModuleMiscellaneousInterruptStatusRegister

Section29.3.11

50h-6Ch

Reserved

Reserved

70h

C0RXIMAX

EMACControlModuleReceiveInterruptsPerMillisecondRegister

Section29.3.12

74h

C0TXIMAX

EMACControlModuleTransmitInterruptsPerMillisecondRegister

Section29.3.13

78h-84h

Reserved

Reserved

1569

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACControlModuleRegisterswww.ti.com

29.3.1EMACControlModuleRevisionIDRegister(REVID)

TheEMACcontrolmodulerevisionIDregister(REVID)isshowninFigure29-12anddescribedin

Table29-11.

Figure29-12.EMACControlModuleRevisionIDRegister(REVID)

31

0

REV

R-4EC80100h

LEGEND:R=Readonly;-n=valueafterreset

Table29-11.EMACControlModuleRevisionIDRegister(REVID)FieldDescriptions

Bit

Field

Value

Description

31-0

REV

IdentifiestheEMACControlModulerevision.

4EC80100h

CurrentrevisionoftheEMACControlModule.

29.3.2EMACControlModuleSoftwareResetRegister(SOFTRESET)

TheEMACControlModuleSoftwareResetRegister(SOFTRESET)isshowninFigure29-13and

describedinTable29-12.

Figure29-13.EMACControlModuleSoftwareResetRegister(SOFTRESET)

31

16

Reserved

R-0

15

1

0

Reserved

RESET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-12.EMACControlModuleSoftwareResetRegister(SOFTRESET)

Bit

Field

Value

Description

31-1

Reserved

0

Reserved

0

RESET

SoftwareresetbitfortheEMACControlModule.Clearstheinterruptstatus,controlregisters,andCPPI

Ramontheclockcyclefollowingawriteof1.

0

Nosoftwarereset.

1

Performasoftwarereset.

1570

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3.3EMACControlModuleInterruptControlRegister(INTCONTROL)

TheEMACcontrolmoduleinterruptcontrolregister(INTCONTROL)isshowninFigure29-14and

describedinTable29-13.ThesettingsintheINTCONTROLregisterareusedinconjunctionwiththe

CnRXIMAXandCnTXIMAXregisters.

Figure29-14.EMACControlModuleInterruptControlRegister(INTCONTROL)

31

24

Reserved

R-0

23

18

17

16

Reserved

C0TXPACEEN

C0RXPACEEN

R-0

R/W-0

R/W-0

15

12

11

0

Reserved

INTPRESCALE

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-13.EMACControlModuleInterruptControlRegister(INTCONTROL)

Bit

Field

Value

Description

31-18

Reserved

0

Reserved

17

C0TXPACEEN

EnablepacingforTXinterruptpulsegeneration

0

PacingforTXinterruptsdisabled.

1

PacingforTXinterruptsenabled.

16

C0RXPACEEN

EnablepacingforRXinterruptpulsegeneration

0

PacingforRXinterruptsdisabled.

1

PacingforRXinterruptsenabled.

15-12

Reserved

0

Reserved

11-0

INTPRESCALE

0-7FFh

NumberofinternalEMACmodulereferenceclockperiodswithina4μstimewindow(see

yourdevice-specificdatamanualforinformation).

1571

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACControlModuleRegisterswww.ti.com

29.3.4EMACControlModuleReceiveThresholdInterruptEnableRegisters(C0RXTHRESHEN)

TheEMACcontrolmodulereceivethresholdinterruptenableregister(C0RXTHRESHEN)isshownin

Figure29-15anddescribedinTable29-14.

Figure29-15.EMACControlModuleReceiveThresholdInterruptEnableRegister

(C0RXTHRESHEN)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

RXCH7

RXCH6

RXCH5

RXCH4

RXCH3

RXCH2

RXCH1

RXCH0

THRESHEN

THRESHEN

THRESHEN

THRESHEN

THRESHEN

THRESHEN

THRESHEN

THRESHEN

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-14.EMACControlModuleReceiveThresholdInterruptEnableRegister(C0RXTHRESHEN)

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

RXCH7THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel7

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel7.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel7.

6

RXCH6THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel6

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel6.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel6.

5

RXCH5THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel5

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel5.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel5.

4

RXCH4THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel4

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel4.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel4.

3

RXCH3THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel3

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel3.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel3.

2

RXCH2THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel2

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel2.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel2.

1

RXCH1THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel1

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel1.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel1.

0

RXCH0THRESHEN

EnableC0RXTHRESHPULSEinterruptgenerationforRXChannel0

0

C0RXTHRESHPULSEgenerationisdisabledforRXChannel0.

1

C0RXTHRESHPULSEgenerationisenabledforRXChannel0.

1572

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3.5EMACControlModuleReceiveInterruptEnableRegisters(C0RXEN)

TheEMACcontrolmodulereceiveinterruptenableregister(C0RXEN)isshowninFigure29-16and

describedinTable29-15

Figure29-16.EMACControlModuleReceiveInterruptEnableRegister(C0RXEN)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

RXCH7EN

RXCH6EN

RXCH5EN

RXCH4EN

RXCH3EN

RXCH2EN

RXCH1EN

RXCH0EN

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-15.EMACControlModuleReceiveInterruptEnableRegister(C0RXEN)

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

RXCH7EN

EnableC0RXPULSEinterruptgenerationforRXChannel7

0

C0RXPULSEgenerationisdisabledforRXChannel7.

1

C0RXPULSEgenerationisenabledforRXChannel7.

6

RXCH6EN

EnableC0RXPULSEinterruptgenerationforRXChannel6

0

C0RXPULSEgenerationisdisabledforRXChannel6.

1

C0RXPULSEgenerationisenabledforRXChannel6.

5

RXCH5EN

EnableC0RXPULSEinterruptgenerationforRXChannel5

0

C0RXPULSEgenerationisdisabledforRXChannel5.

1

C0RXPULSEgenerationisenabledforRXChannel5.

4

RXCH4EN

EnableC0RXPULSEinterruptgenerationforRXChannel4

0

C0RXPULSEgenerationisdisabledforRXChannel4.

1

C0RXPULSEgenerationisenabledforRXChannel4.

3

RXCH3EN

EnableC0RXPULSEinterruptgenerationforRXChannel3

0

C0RXPULSEgenerationisdisabledforRXChannel3.

1

C0RXPULSEgenerationisenabledforRXChannel3.

2

RXCH2EN

EnableC0RXPULSEinterruptgenerationforRXChannel2

0

C0RXPULSEgenerationisdisabledforRXChannel2.

1

C0RXPULSEgenerationisenabledforRXChannel2.

1

RXCH1EN

EnableC0RXPULSEinterruptgenerationforRXChannel1

0

C0RXPULSEgenerationisdisabledforRXChannel1.

1

C0RXPULSEgenerationisenabledforRXChannel1.

0

RXCH0EN

EnableC0RXPULSEinterruptgenerationforRXChannel0

0

C0RXPULSEgenerationisdisabledforRXChannel0.

1

C0RXPULSEgenerationisenabledforRXChannel0.

1573

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACControlModuleRegisterswww.ti.com

29.3.6EMACControlModuleTransmitInterruptEnableRegisters(C0TXEN)

TheEMACcontrolmoduletransmitinterruptenableregister(C0TXEN)isshowninFigure29-17and

describedinTable29-16

Figure29-17.EMACControlModuleTransmitInterruptEnableRegister(C0TXEN)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

TXCH7EN

TXCH6EN

TXCH5EN

TXCH4EN

TXCH3EN

TXCH2EN

TXCH1EN

TXCH0EN

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-16.EMACControlModuleTransmitInterruptEnableRegister(C0TXEN)

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

TXCH7EN

EnableC0TXPULSEinterruptgenerationforTXChannel7

0

C0TXPULSEgenerationisdisabledforTXChannel7.

1

C0TXPULSEgenerationisenabledforTXChannel7.

6

TXCH6EN

EnableC0TXPULSEinterruptgenerationforTXChannel6

0

C0TXPULSEgenerationisdisabledforTXChannel6.

1

C0TXPULSEgenerationisenabledforTXChannel6.

5

TXCH5EN

EnableC0TXPULSEinterruptgenerationforTXChannel5

0

C0TXPULSEgenerationisdisabledforTXChannel5.

1

C0TXPULSEgenerationisenabledforTXChannel5.

4

TXCH4EN

EnableC0TXPULSEinterruptgenerationforTXChannel4

0

C0TXPULSEgenerationisdisabledforTXChannel4.

1

C0TXPULSEgenerationisenabledforTXChannel4.

3

TXCH3EN

EnableC0TXPULSEinterruptgenerationforTXChannel3

0

C0TXPULSEgenerationisdisabledforTXChannel3.

1

C0TXPULSEgenerationisenabledforTXChannel3.

2

TXCH2EN

EnableC0TXPULSEinterruptgenerationforTXChannel2

0

C0TXPULSEgenerationisdisabledforTXChannel2.

1

C0TXPULSEgenerationisenabledforTXChannel2.

1

TXCH1EN

EnableC0TXPULSEinterruptgenerationforTXChannel1

0

C0TXPULSEgenerationisdisabledforTXChannel1.

1

C0TXPULSEgenerationisenabledforTXChannel1.

0

TXCH0EN

EnableC0TXPULSEinterruptgenerationforTXChannel0

0

C0TXPULSEgenerationisdisabledforTXChannel0.

1

C0TXPULSEgenerationisenabledforTXChannel0.

1574

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3.7EMACControlModuleMiscellaneousInterruptEnableRegisters(C0MISCEN)

TheEMACcontrolmodulemiscellaneousinterruptenableregister(C0MISCEN)isshowninFigure29-18

anddescribedinTable29-17

Figure29-18.EMACControlModuleMiscellaneousInterruptEnableRegister(C0MISCEN)

31

16

Reserved

R-0

15

4

3

2

1

0

Reserved

STATPENDEN

HOSTPENDEN

LINKINT0EN

USERINT0EN

R-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-17.EMACControlModuleMiscellaneousInterruptEnableRegister(C0MISCEN)

Bit

Field

Value

Description

31-4

Reserved

0

Reserved

3

STATPENDEN

EnableC0MISCPULSEinterruptgenerationwhenEMACstatisticsinterruptsaregenerated

0

C0MISCPULSEgenerationisdisabledforEMACSTATPENDinterrupts.

1

C0MISCPULSEgenerationisenabledforEMACSTATPENDinterrupts.

2

HOSTPENDEN

EnableC0MISCPULSEinterruptgenerationwhenEMAChostinterruptsaregenerated

0

C0MISCPULSEgenerationisdisabledforEMACHOSTPENDinterrupts.

1

C0MISCPULSEgenerationisenabledforEMACHOSTPENDinterrupts.

1

LINKINT0EN

EnableC0MISCPULSEinterruptgenerationwhenMDIOLINKINT0interrupts(correspondingto

USERPHYSEL0)aregenerated

0

C0MISCPULSEgenerationisdisabledforMDIOLINKINT0interrupts.

1

C0MISCPULSEgenerationisenabledforMDIOLINKINT0interrupts.

0

USERINT0EN

EnableC0MISCPULSEinterruptgenerationwhenMDIOUSERINT0interrupts(corresponding

toUSERACCESS0)aregenerated

0

C0MISCPULSEgenerationisdisabledforMDIOUSERINT0.

1

C0MISCPULSEgenerationisenabledforMDIOUSERINT0.

1575

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACControlModuleRegisterswww.ti.com

29.3.8EMACControlModuleReceiveThresholdInterruptStatusRegisters

(C0RXTHRESHSTAT)

TheEMACcontrolmodulereceivethresholdinterruptstatusregister(C0RXTHRESHSTAT)isshownin

Figure29-19anddescribedinTable29-18

Figure29-19.EMACControlModuleReceiveThresholdInterruptStatusRegister

(C0RXTHRESHSTAT)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

RXCH7THRESH

RXCH6THRESH

RXCH5THRESH

RXCH4THRESH

RXCH3THRESH

RXCH2THRESH

RXCH1THRESH

RXCH0THRESH

STAT

STAT

STAT

STAT

STAT

STAT

STAT

STAT

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-18.EMACControlModuleReceiveThresholdInterruptStatusRegister

(C0RXTHRESHSTAT)

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

RXCH7THRESHSTAT

InterruptstatusforRXChannel7maskedbytheC0RXTHRESHENregister

0

RXChannel7doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel7satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

6

RXCH6THRESHSTAT

InterruptstatusforRXChannel6maskedbytheC0RXTHRESHENregister

0

RXChannel6doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel6satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

5

RXCH5THRESHSTAT

InterruptstatusforRXChannel5maskedbytheC0RXTHRESHENregister

0

RXChannel5doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel5satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

4

RXCH4THRESHSTAT

InterruptstatusforRXChannel4maskedbytheC0RXTHRESHENregister

0

RXChannel4doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel4satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

3

RXCH3THRESHSTAT

InterruptstatusforRXChannel3maskedbytheC0RXTHRESHENregister

0

RXChannel3doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel3satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

2

RXCH2THRESHSTAT

InterruptstatusforRXChannel2maskedbytheC0RXTHRESHENregister

0

RXChannel2doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel2satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXCH1THRESHSTAT

InterruptstatusforRXChannel1maskedbytheC0RXTHRESHENregister

0

RXChannel1doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel1satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

0

RXCH0THRESHSTAT

InterruptstatusforRXChannel0maskedbytheC0RXTHRESHENregister

0

RXChannel0doesnotsatisfyconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1

RXChannel0satisfiesconditionstogenerateaC0RXTHRESHPULSEinterrupt.

1576

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3.9EMACControlModuleReceiveInterruptStatusRegisters(C0RXSTAT)

TheEMACcontrolmodulereceiveinterruptstatusregister(C0RXSTAT)isshowninFigure29-20and

describedinTable29-19

Figure29-20.EMACControlModuleReceiveInterruptStatusRegister(C0RXSTAT)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

RXCH7STAT

RXCH6STAT

RXCH5STAT

RXCH4STAT

RXCH3STAT

RXCH2STAT

RXCH1STAT

RXCH0STAT

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-19.EMACControlModuleReceiveInterruptStatusRegister(C0RXSTAT)

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

RXCH7STAT

InterruptstatusforRXChannel7maskedbytheC0RXENregister

0

RXChannel7doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel7satisfiesconditionstogenerateaC0RXPULSEinterrupt.

6

RXCH6STAT

InterruptstatusforRXChannel6maskedbytheC0RXENregister

0

RXChannel6doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel6satisfiesconditionstogenerateaC0RXPULSEinterrupt.

5

RXCH5STAT

InterruptstatusforRXChannel5maskedbytheC0RXENregister

0

RXChannel5doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel5satisfiesconditionstogenerateaC0RXPULSEinterrupt.

4

RXCH4STAT

InterruptstatusforRXChannel4maskedbytheC0RXENregister

0

RXChannel4doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel4satisfiesconditionstogenerateaC0RXPULSEinterrupt.

3

RXCH3STAT

InterruptstatusforRXChannel3maskedbytheC0RXENregister

0

RXChannel3doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel3satisfiesconditionstogenerateaC0RXPULSEinterrupt.

2

RXCH2STAT

InterruptstatusforRXChannel2maskedbytheC0RXENregister

0

RXChannel2doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel2satisfiesconditionstogenerateaC0RXPULSEinterrupt.

1

RXCH1STAT

InterruptstatusforRXChannel1maskedbytheC0RXENregister

0

RXChannel1doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel1satisfiesconditionstogenerateaC0RXPULSEinterrupt.

0

RXCH0STAT

InterruptstatusforRXChannel0maskedbytheC0RXENregister

0

RXChannel0doesnotsatisfyconditionstogenerateaC0RXPULSEinterrupt.

1

RXChannel0satisfiesconditionstogenerateaC0RXPULSEinterrupt.

1577

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACControlModuleRegisterswww.ti.com

29.3.10EMACControlModuleTransmitInterruptStatusRegisters(C0TXSTAT)

TheEMACcontrolmoduletransmitinterruptstatusregister(C0TXSTAT)isshowninFigure29-21and

describedinTable29-20

Figure29-21.EMACControlModuleTransmitInterruptStatusRegister(C0TXSTAT)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

TXCH7STAT

TXCH6STAT

TXCH5STAT

TXCH4STAT

TXCH3STAT

TXCH2STAT

TXCH1STAT

TXCH0STAT

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-20.EMACControlModuleTransmitInterruptStatusRegister(C0TXSTAT)

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

TXCH7STAT

InterruptstatusforTXChannel7maskedbytheC0TXENregister

0

TXChannel7doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel7satisfiesconditionstogenerateaC0TXPULSEinterrupt.

6

TXCH6STAT

InterruptstatusforTXChannel6maskedbytheC0TXENregister

0

TXChannel6doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel6satisfiesconditionstogenerateaC0TXPULSEinterrupt.

5

TXCH5STAT

InterruptstatusforTXChannel5maskedbytheC0TXENregister

0

TXChannel5doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel5satisfiesconditionstogenerateaC0TXPULSEinterrupt.

4

TXCH4STAT

InterruptstatusforTXChannel4maskedbytheC0TXENregister

0

TXChannel4doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel4satisfiesconditionstogenerateaC0TXPULSEinterrupt.

3

TXCH3STAT

InterruptstatusforTXChannel3maskedbytheC0TXENregister

0

TXChannel3doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel3satisfiesconditionstogenerateaC0TXPULSEinterrupt.

2

TXCH2STAT

InterruptstatusforTXChannel2maskedbytheC0TXENregister

0

TXChannel2doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel2satisfiesconditionstogenerateaC0TXPULSEinterrupt.

1

TXCH1STAT

InterruptstatusforTXChannel1maskedbytheC0TXENregister

0

TXChannel1doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel1satisfiesconditionstogenerateaC0TXPULSEinterrupt.

0

TXCH0STAT

InterruptstatusforTXChannel0maskedbytheC0TXENregister

0

TXChannel0doesnotsatisfyconditionstogenerateaC0TXPULSEinterrupt.

1

TXChannel0satisfiesconditionstogenerateaC0TXPULSEinterrupt.

1578

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3.11EMACControlModuleMiscellaneousInterruptStatusRegisters(C0MISCSTAT)

TheEMACcontrolmodulemiscellaneousinterruptstatusregister(C0MISCSTAT)isshowninFigure29-

22anddescribedinTable29-21

Figure29-22.EMACControlModuleMiscellaneousInterruptStatusRegister(C0MISCSTAT)

31

16

Reserved

R-0

15

4

3

2

1

0

Reserved

STATPENDSTAT

HOSTPENDSTAT

LINKINT0STAT

USERINT0STAT

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-21.EMACControlModuleMiscellaneousInterruptStatusRegister(C0MISCSTAT)

Bit

Field

Value

Description

31-4

Reserved

0

Reserved

3

STATPENDSTAT

InterruptstatusforEMACSTATPENDmaskedbytheC0MISCENregister

0

EMACSTATPENDdoesnotsatisfyconditionstogenerateaC0MISCPULSEinterrupt.

1

EMACSTATPENDsatisfiesconditionstogenerateaC0MISCPULSEinterrupt.

2

HOSTPENDSTAT

InterruptstatusforEMACHOSTPENDmaskedbytheC0MISCENregister

0

EMACHOSTPENDdoesnotsatisfyconditionstogenerateaC0MISCPULSEinterrupt.

1

EMACHOSTPENDsatisfiesconditionstogenerateaC0MISCPULSEinterrupt.

1

LINKINT0STAT

InterruptstatusforMDIOLINKINT0maskedbytheC0MISCENregister

0

MDIOLINKINT0doesnotsatisfyconditionstogenerateaC0MISCPULSEinterrupt.

1

MDIOLINKINT0satisfiesconditionstogenerateaC0MISCPULSEinterrupt.

0

USERINT0STAT

InterruptstatusforMDIOUSERINT0maskedbytheC0MISCENregister

0

MDIOUSERINT0doesnotsatisfyconditionstogenerateaC0MISCPULSEinterrupt.

1

MDIOUSERINT0satisfiesconditionstogenerateaC0MISCPULSEinterrupt.

1579

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACControlModuleRegisterswww.ti.com

29.3.12EMACControlModuleReceiveInterruptsPerMillisecondRegisters(C0RXIMAX)

TheEMACcontrolmodulereceiveinterruptspermillisecondregister(C0RXIMAX)isshowninFigure29-

23anddescribedinTable29-22

Figure29-23.EMACControlModuleReceiveInterruptsPerMillisecondRegister(C0RXIMAX)

31

16

Reserved

R-0

15

6

5

0

Reserved

RXIMAX

R-0

R/W-0

LEGEND:R=Readonly;R/W=Read/Write;-n=valueafterreset

Table29-22.EMACControlModuleReceiveInterruptsPerMillisecondRegister(C0RXIMAX)

Bit

Field

Value

Description

31-6

Reserved

0

Reserved

5-0

RXIMAX

2-3Fh

RXIMAXisthedesirednumberofC0RXPULSEinterruptsgeneratedpermillisecondwhen

C0RXPACEENisenabledinINTCONTROL.

Thepacingmechanismcanbedescribedbythefollowingpseudo-code:

while(1){

interrupt_count=0;

/*Countinterruptsovera1mswindow*/

for(i=0;i<INTCONTROL[INTPRESCALE]*250;i++){

interrupt_count+=NEW_INTERRUPT_EVENTS();

if(i<INTCONTROL[INTPRESCALE]*pace_counter)

BLOCK_EMAC_INTERRUPTS();

else

ALLOW_EMAC_INTERRUPTS();

}

ALLOW_EMAC_INTERRUPTS();

if(interrupt_count>2*RXIMAX)

pace_counter=255;

elseif(interrupt_count>1.5*RXIMAX)

pace_counter=previous_pace_counter*2+1;

elseif(interrupt_count>1.0*RXIMAX)

pace_counter=previous_pace_counter+1;

elseif(interrupt_count>0.5*RXIMAX)

pace_counter=previous_pace_counter-1;

elseif(interrupt_count!=0)

pace_counter=previous_pace_counter/2;

else

pace_counter=0;

previous_pace_counter=pace_counter;

}

1580

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACControlModuleRegisters

29.3.13EMACControlModuleTransmitInterruptsPerMillisecondRegisters(C0TXIMAX)

TheEMACcontrolmoduletransmitinterruptspermillisecondregister(C0TXIMAX)isshowninFigure29-

24anddescribedinTable29-23

Figure29-24.EMACControlModuleTransmitInterruptsPerMillisecondRegister(C0TXIMAX)

31

16

Reserved

R-0

15

6

5

0

Reserved

TXIMAX

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-23.EMACControlModuleTransmitInterruptsPerMillisecondRegister(C0TXIMAX)

Bit

Field

Value

Description

31-6

Reserved

0

Reserved

5-0

TXIMAX

2-3Fh

TXIMAXisthedesirednumberofC0TXPULSEinterruptsgeneratedpermillisecondwhen

C0TXPACEENisenabledinINTCONTROL.

Thepacingmechanismcanbedescribedbythefollowingpseudo-code:

while(1){

interrupt_count=0;

/*Countinterruptsovera1mswindow*/

for(i=0;i<INTCONTROL[INTPRESCALE]*250;i++){

interrupt_count+=NEW_INTERRUPT_EVENTS();

if(i<INTCONTROL[INTPRESCALE]*pace_counter)

BLOCK_EMAC_INTERRUPTS();

else

ALLOW_EMAC_INTERRUPTS();

}

ALLOW_EMAC_INTERRUPTS();

if(interrupt_count>2*TXIMAX)

pace_counter=255;

elseif(interrupt_count>1.5*TXIMAX)

pace_counter=previous_pace_counter*2+1;

elseif(interrupt_count>1.0*TXIMAX)

pace_counter=previous_pace_counter+1;

elseif(interrupt_count>0.5*TXIMAX)

pace_counter=previous_pace_counter-1;

elseif(interrupt_count!=0)

pace_counter=previous_pace_counter/2;

else

pace_counter=0;

previous_pace_counter=pace_counter;

}

1581

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4MDIORegisters

Table29-24liststhememory-mappedregistersfortheMDIOmodule.Thebaseaddressforthese

registersisFCF78900h.

Table29-24.ManagementDataInput/Output(MDIO)Registers

Offset

Acronym

RegisterDescription

Section

0h

REVID

MDIORevisionIDRegister

Section29.4.1

4h

CONTROL

MDIOControlRegister

Section29.4.2

8h

ALIVE

PHYAliveStatusregister

Section29.4.3

Ch

LINK

PHYLinkStatusRegister

Section29.4.4

10h

LINKINTRAW

MDIOLinkStatusChangeInterrupt(Unmasked)Register

Section29.4.5

14h

LINKINTMASKED

MDIOLinkStatusChangeInterrupt(Masked)Register

Section29.4.6

20h

USERINTRAW

MDIOUserCommandCompleteInterrupt(Unmasked)Register

Section29.4.7

24h

USERINTMASKED

MDIOUserCommandCompleteInterrupt(Masked)Register

Section29.4.8

28h

USERINTMASKSET

MDIOUserCommandCompleteInterruptMaskSetRegister

Section29.4.9

2Ch

USERINTMASKCLEAR

MDIOUserCommandCompleteInterruptMaskClearRegister

Section29.4.10

80h

USERACCESS0

MDIOUserAccessRegister0

Section29.4.11

84h

USERPHYSEL0

MDIOUserPHYSelectRegister0

Section29.4.12

88h

USERACCESS1

MDIOUserAccessRegister1

Section29.4.13

8Ch

USERPHYSEL1

MDIOUserPHYSelectRegister1

Section29.4.14

29.4.1MDIORevisionIDRegister(REVID)

TheMDIOrevisionIDregister(REVID)isshowninFigure29-25anddescribedinTable29-25.

Figure29-25.MDIORevisionIDRegister(REVID)

31

0

REV

R-00070104h

LEGEND:R=Readonly;-n=valueafterreset

Table29-25.MDIORevisionIDRegister(REVID)FieldDescriptions

Bit

Field

Value

Description

31-0

REV

IdentifiestheMDIOModulerevision.

00070104h

CurrentrevisionoftheMDIOModule.

1582

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMDIORegisters

29.4.2MDIOControlRegister(CONTROL)

TheMDIOcontrolregister(CONTROL)isshowninFigure29-26anddescribedinTable29-26.

Figure29-26.MDIOControlRegister(CONTROL)

31

30

29

28

24

23

21

20

19

18

17

16

IDLE

ENABLE

Rsvd

HIGHEST_USER_CHANNEL

Reserved

PREAMBLE

FAULT

FAULTENB

Reserved

R-1

R/W-0

R-0

R-1

R-0

R/W-0

R/W1C-0

R/W-0

R-0

15

0

CLKDIV

R/W-FFh

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-26.MDIOControlRegister(CONTROL)FieldDescriptions

Bit

Field

Value

Description

31

IDLE

StatemachineIDLEstatusbit.

0

Statemachineisnotinidlestate.

1

Statemachineisinidlestate.

30

ENABLE

Statemachineenablecontrolbit.IftheMDIOstatemachineisactiveatthetimeitis

disabled,itwillcompletethecurrentoperationbeforehaltingandsettingtheidlebit.

0

DisablestheMDIOstatemachine.

1

EnabletheMDIOstatemachine.

29

Reserved

0

Reserved

28-24

HIGHEST_USER_CHANNEL

0-1Fh

Highestuserchannelthatisavailableinthemodule.Itiscurrentlysetto1.This

impliesthatMDIOUserAccess1isthehighestavailableuseraccesschannel.

23-21

Reserved

0

Reserved

20

PREAMBLE

Preambledisable

0

StandardMDIOpreambleisused.

1

DisablesthisdevicefromsendingMDIOframepreambles.

19

FAULT

Faultindicator.Thisbitissetto1iftheMDIOpinsfailtoreadbackwhatthedevice

isdrivingontothem.Thisindicatesaphysicallayerfaultandthemodulestate

machineisreset.Writinga1tothisbitclearsthisbit,writinga0hasnoeffect.

0

Nofailure

1

Physicallayerfault;theMDIOstatemachineisreset.

18

FAULTENB

Faultdetectenable.Thisbithastobesetto1toenablethephysicallayerfault

detection.

0

Disablesthephysicallayerfaultdetection.

1

Enablesthephysicallayerfaultdetection.

17-16

Reserved

0

Reserved

15-0

CLKDIV

0-FFFFh

ClockDividerbits.Thisfieldspecifiesthedivisionratiobetweentheperipheralclock

andthefrequencyofMDIO_CLK.MDIO_CLKisdisabledwhenCLKDIVisclearedto

0.MDIO_CLKfrequency=peripheralclockfrequency/(CLKDIV+1).

1583

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4.3PHYAcknowledgeStatusRegister(ALIVE)

ThePHYacknowledgestatusregister(ALIVE)isshowninFigure29-27anddescribedinTable29-27.

Figure29-27.PHYAcknowledgeStatusRegister(ALIVE)

31

0

ALIVE

R/W1C-0

LEGEND:R/W=Read/Write;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-27.PHYAcknowledgeStatusRegister(ALIVE)FieldDescriptions

Bit

Field

Value

Description

31-0

ALIVE

MDIOAlivebits.Eachofthe32bitsofthisregisterissetifthemostrecentaccesstothePHYwith

addresscorrespondingtotheregisterbitnumberwasacknowledgedbythePHY;thebitisresetifthe

PHYfailstoacknowledgetheaccess.BoththeuserandpollingaccessestoaPHYwillcausethe

correspondingalivebittobeupdated.Thealivebitsareonlymeanttobeusedtogiveanindicationofthe

presenceornotofaPHYwiththecorrespondingaddress.Writinga1toanybitwillclearit,writinga0

hasnoeffect.

0

ThePHYfailstoacknowledgetheaccess.

1

ThemostrecentaccesstothePHYwithanaddresscorrespondingtotheregisterbitnumberwas

acknowledgedbythePHY.

29.4.4PHYLinkStatusRegister(LINK)

ThePHYlinkstatusregister(LINK)isshowninFigure29-28anddescribedinTable29-28.

Figure29-28.PHYLinkStatusRegister(LINK)

31

0

LINK

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-28.PHYLinkStatusRegister(LINK)FieldDescriptions

Bit

Field

Value

Description

31-0

LINK

MDIOLinkstatebits.ThisregisterisupdatedafterareadofthegenericstatusregisterofaPHY.Thebit

issetifthePHYwiththecorrespondingaddresshaslinkandthePHYacknowledgestheread

transaction.ThebitisresetifthePHYindicatesitdoesnothavelinkorfailstoacknowledgetheread

transaction.Writestotheregisterhavenoeffect.

0

ThePHYindicatesitdoesnothavealinkorfailstoacknowledgethereadtransaction

1

ThePHYwiththecorrespondingaddresshasalinkandthePHYacknowledgesthereadtransaction.

1584

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMDIORegisters

29.4.5MDIOLinkStatusChangeInterrupt(Unmasked)Register(LINKINTRAW)

TheMDIOlinkstatuschangeinterrupt(unmasked)register(LINKINTRAW)isshowninFigure29-29and

describedinTable29-29.

Figure29-29.MDIOLinkStatusChangeInterrupt(Unmasked)Register(LINKINTRAW)

31

16

Reserved

R-0

15

2

1

0

Reserved

USERPHY1

USERPHY0

R-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-29.MDIOLinkStatusChangeInterrupt(Unmasked)Register(LINKINTRAW)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

USERPHY1

MDIOLinkchangeevent,rawvalue.Whenasserted,thebitindicatesthattherewasanMDIOlink

changeevent(thatis,changeintheLINKregister)correspondingtothePHYaddressin

USERPHYSEL1.Writinga1willcleartheevent,writinga0hasnoeffect.

0

NoMDIOlinkchangeevent.

1

AnMDIOlinkchangeevent(changeintheLINKregister)correspondingtothePHYaddressin

MDIOuserPHYselectregisterUSERPHYSEL1

0

USERPHY0

MDIOLinkchangeevent,rawvalue.Whenasserted,thebitindicatesthattherewasanMDIOlink

changeevent(thatis,changeintheLINKregister)correspondingtothePHYaddressin

USERPHYSEL0.Writinga1willcleartheevent,writinga0hasnoeffect.

0

NoMDIOlinkchangeevent.

1

AnMDIOlinkchangeevent(changeintheLINKregister)correspondingtothePHYaddressin

MDIOuserPHYselectregisterUSERPHYSEL0

1585

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4.6MDIOLinkStatusChangeInterrupt(Masked)Register(LINKINTMASKED)

TheMDIOlinkstatuschangeinterrupt(masked)register(LINKINTMASKED)isshowninFigure29-30and

describedinTable29-30.

Figure29-30.MDIOLinkStatusChangeInterrupt(Masked)Register(LINKINTMASKED)

31

16

Reserved

R-0

15

2

1

0

Reserved

USERPHY1

USERPHY0

R-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-30.MDIOLinkStatusChangeInterrupt(Masked)Register(LINKINTMASKED)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

USERPHY1

MDIOLinkchangeinterrupt,maskedvalue.Whenasserted,thebitindicatesthattherewasan

MDIOlinkchangeevent(thatis,changeintheLINKregister)correspondingtothePHYaddressin

USERPHYSEL1andthecorrespondingLINKINTENBbitwasset.Writinga1willcleartheevent,

writinga0hasnoeffect.

0

NoMDIOlinkchangeevent.

1

AnMDIOlinkchangeevent(changeintheLINKregister)correspondingtothePHYaddressin

MDIOuserPHYselectregisterUSERPHYSEL1andtheLINKINTENBbitinUSERPHYSEL1isset

to1.

0

USERPHY0

MDIOLinkchangeinterrupt,maskedvalue.Whenasserted,thebitindicatesthattherewasan

MDIOlinkchangeevent(thatis,changeintheLINKregister)correspondingtothePHYaddressin

USERPHYSEL0andthecorrespondingLINKINTENBbitwasset.Writinga1willcleartheevent,

writinga0hasnoeffect.

0

NoMDIOlinkchangeevent.

1

AnMDIOlinkchangeevent(changeintheLINKregister)correspondingtothePHYaddressin

MDIOuserPHYselectregisterUSERPHYSEL0andtheLINKINTENBbitinUSERPHYSEL0isset

to1.

1586

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMDIORegisters

29.4.7MDIOUserCommandCompleteInterrupt(Unmasked)Register(USERINTRAW)

TheMDIOusercommandcompleteinterrupt(unmasked)register(USERINTRAW)isshowninFigure29-

31anddescribedinTable29-31.

Figure29-31.MDIOUserCommandCompleteInterrupt(Unmasked)Register(USERINTRAW)

31

16

Reserved

R-0

15

2

1

0

Reserved

USERACCESS1

USERACCESS0

R-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-31.MDIOUserCommandCompleteInterrupt(Unmasked)Register(USERINTRAW)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

USERACCESS1

MDIOUsercommandcompleteeventbit.Whenasserted,thebitindicatesthatthepreviously

scheduledPHYreadorwritecommandusingtheUSERACCESS1registerhascompleted.

Writinga1willcleartheevent,writinga0hasnoeffect.

0

NoMDIOusercommandcompleteevent.

1

ThepreviouslyscheduledPHYreadorwritecommandusingMDIOuseraccessregister

USERACCESS1hascompleted.

0

USERACCESS0

MDIOUsercommandcompleteeventbit.Whenasserted,thebitindicatesthatthepreviously

scheduledPHYreadorwritecommandusingtheUSERACCESS0registerhascompleted.

Writinga1willcleartheevent,writinga0hasnoeffect.

0

NoMDIOusercommandcompleteevent.

1

ThepreviouslyscheduledPHYreadorwritecommandusingMDIOuseraccessregister

USERACCESS0hascompleted.

1587

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4.8MDIOUserCommandCompleteInterrupt(Masked)Register(USERINTMASKED)

TheMDIOusercommandcompleteinterrupt(masked)register(USERINTMASKED)isshownin

Figure29-32anddescribedinTable29-32.

Figure29-32.MDIOUserCommandCompleteInterrupt(Masked)Register(USERINTMASKED)

31

16

Reserved

R-0

15

2

1

0

Reserved

USERACCESS1

USERACCESS0

R-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-32.MDIOUserCommandCompleteInterrupt(Masked)Register(USERINTMASKED)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

USERACCESS1

MaskedvalueofMDIOUsercommandcompleteinterrupt.Whenasserted,Thebitindicates

thatthepreviouslyscheduledPHYreadorwritecommandusingthatparticular

USERACCESS1registerhascompleted.Writinga1willcleartheinterrupt,writinga0hasno

effect.

0

NoMDIOusercommandcompleteevent.

1

ThepreviouslyscheduledPHYreadorwritecommandusingMDIOuseraccessregister

USERACCESS1hascompletedandthecorrespondingbitinUSERINTMASKSETissetto1.

0

USERACCESS0

MaskedvalueofMDIOUsercommandcompleteinterrupt.Whenasserted,Thebitindicates

thatthepreviouslyscheduledPHYreadorwritecommandusingthatparticular

USERACCESS0registerhascompleted.Writinga1willcleartheinterrupt,writinga0hasno

effect.

0

NoMDIOusercommandcompleteevent.

1

ThepreviouslyscheduledPHYreadorwritecommandusingMDIOuseraccessregister

USERACCESS0hascompletedandthecorrespondingbitinUSERINTMASKSETissetto1.

1588

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMDIORegisters

29.4.9MDIOUserCommandCompleteInterruptMaskSetRegister(USERINTMASKSET)

TheMDIOusercommandcompleteinterruptmasksetregister(USERINTMASKSET)isshownin

Figure29-33anddescribedinTable29-33.

Figure29-33.MDIOUserCommandCompleteInterruptMaskSetRegister(USERINTMASKSET)

31

16

Reserved

R-0

15

2

1

0

Reserved

USERACCESS1

USERACCESS0

R-0

R/W1S-0

R/W1S-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-33.MDIOUserCommandCompleteInterruptMaskSetRegister(USERINTMASKSET)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

USERACCESS1

MDIOuserinterruptmasksetforUSERINTMASKED[1].Settingabitto1willenableMDIOuser

commandcompleteinterruptsfortheUSERACCESS1register.MDIOuserinterruptfor

USERACCESS1isdisabledifthecorrespondingbitis0.Writinga0tothisbithasnoeffect.

0

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS0is

disabled.

1

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS0is

enabled.

0

USERACCESS0

MDIOuserinterruptmasksetforUSERINTMASKED[0].Settingabitto1willenableMDIOuser

commandcompleteinterruptsfortheUSERACCESS0register.MDIOuserinterruptfor

USERACCESS0isdisabledifthecorrespondingbitis0.Writinga0tothisbithasnoeffect.

0

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS0is

disabled.

1

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS0is

enabled.

1589

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4.10MDIOUserCommandCompleteInterruptMaskClearRegister(USERINTMASKCLEAR)

TheMDIOusercommandcompleteinterruptmaskclearregister(USERINTMASKCLEAR)isshownin

Figure29-34anddescribedinTable29-34.

Figure29-34.MDIOUserCommandCompleteInterruptMaskClearRegister

(USERINTMASKCLEAR)

31

16

Reserved

R-0

15

2

1

0

Reserved

USERACCESS1

USERACCESS0

R-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-34.MDIOUserCommandCompleteInterruptMaskClearRegister(USERINTMASKCLEAR)

FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

USERACCESS1

MDIOusercommandcompleteinterruptmaskclearforUSERINTMASKED[1].Settingthebitto

1willdisablefurtherusercommandcompleteinterruptsforUSERACCESS1.Writinga0tothis

bithasnoeffect.

0

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS1is

enabled.

1

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS1is

disabled.

0

USERACCESS0

MDIOusercommandcompleteinterruptmaskclearforUSERINTMASKED[0].Settingthebitto

1willdisablefurtherusercommandcompleteinterruptsforUSERACCESS0.Writinga0tothis

bithasnoeffect.

0

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS0is

enabled.

1

MDIOusercommandcompleteinterruptsfortheMDIOuseraccessregisterUSERACCESS0is

disabled.

1590

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMDIORegisters

29.4.11MDIOUserAccessRegister0(USERACCESS0)

TheMDIOuseraccessregister0(USERACCESS0)isshowninFigure29-35anddescribedinTable29-

35.

Figure29-35.MDIOUserAccessRegister0(USERACCESS0)

31

30

29

28

26

25

21

20

16

GO

WRITE

ACK

Reserved

REGADR

PHYADR

R/W1S-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

15

0

DATA

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-35.MDIOUserAccessRegister0(USERACCESS0)FieldDescriptions

Bit

Field

Value

Description

31

GO

0-1

Gobit.Writinga1tothisbitcausestheMDIOstatemachinetoperformanMDIOaccesswhenit

isconvenientforittodoso;thisisnotaninstantaneousprocess.Writinga0tothisbithasno

effect.ThisbitiswriteableonlyiftheMDIOstatemachineisenabled.Thisbitwillselfclearwhen

therequestedaccesshasbeencompleted.AnywritestoUSERACCESS0areblockedwhenthe

GObitis1.

30

WRITE

Writeenablebit.Settingthisbitto1causestheMDIOtransactiontobearegisterwrite;otherwise,

itisaregisterread.

0

Theusercommandisareadoperation.

1

Theusercommandisawriteoperation.

29

ACK

0-1

Acknowledgebit.ThisbitissetifthePHYacknowledgedthereadtransaction.

28-26

Reserved

0

Reserved

25-21

REGADR

0-1Fh

Registeraddressbits.ThisfieldspecifiesthePHYregistertobeaccessedforthistransaction

20-16

PHYADR

0-1Fh

PHYaddressbits.ThisfieldspecifiesthePHYtobeaccessedforthistransaction.

15-0

DATA

0-FFFFh

Userdatabits.ThesebitsspecifythedatavaluereadfromortobewrittentothespecifiedPHY

register.

1591

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4.12MDIOUserPHYSelectRegister0(USERPHYSEL0)

TheMDIOuserPHYselectregister0(USERPHYSEL0)isshowninFigure29-36anddescribedin

Table29-36.

Figure29-36.MDIOUserPHYSelectRegister0(USERPHYSEL0)

31

16

Reserved

R-0

15

8

7

6

5

4

0

Reserved

LINKSEL

LINKINTENB

Rsvd

PHYADRMON

R-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-36.MDIOUserPHYSelectRegister0(USERPHYSEL0)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

LINKSEL

Linkstatusdeterminationselectbit.Defaultvalueis0,whichimpliesthatthelinkstatusis

determinedbytheMDIOstatemachine.Thisistheonlyoptionsupportedonthisdevice.

0

ThelinkstatusisdeterminedbytheMDIOstatemachine.

1

Notsupported.

6

LINKINTENB

Linkchangeinterruptenable.Setto1toenablelinkchangestatusinterruptsforPHYaddress

specifiedinPHYADRMON.Linkchangeinterruptsaredisabledifthisbitisclearedto0.

0

Linkchangeinterruptsaredisabled.

1

LinkchangestatusinterruptsforPHYaddressspecifiedinPHYADDRMONbitsareenabled.

5

Reserved

0

Reserved

4-0

PHYADRMON

0-1Fh

PHYaddresswhoselinkstatusistobemonitored.

1592

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comMDIORegisters

29.4.13MDIOUserAccessRegister1(USERACCESS1)

TheMDIOuseraccessregister1(USERACCESS1)isshowninFigure29-37anddescribedinTable29-

37.

Figure29-37.MDIOUserAccessRegister1(USERACCESS1)

31

30

29

28

26

25

21

20

16

GO

WRITE

ACK

Reserved

REGADR

PHYADR

R/W1S-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

15

0

DATA

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-37.MDIOUserAccessRegister1(USERACCESS1)FieldDescriptions

Bit

Field

Value

Description

31

GO

0-1

Gobit.Writing1tothisbitcausestheMDIOstatemachinetoperformanMDIOaccesswhenitis

convenientforittodoso;thisisnotaninstantaneousprocess.Writing0tothisbithasnoeffect.

ThisbitiswriteableonlyiftheMDIOstatemachineisenabled.Thisbitwillselfclearwhenthe

requestedaccesshasbeencompleted.AnywritestoUSERACCESS0areblockedwhentheGO

bitis1.

30

WRITE

Writeenablebit.Settingthisbitto1causestheMDIOtransactiontobearegisterwrite;otherwise,

itisaregisterread.

0

Theusercommandisareadoperation.

1

Theusercommandisawriteoperation.

29

ACK

0-1

Acknowledgebit.ThisbitissetifthePHYacknowledgedthereadtransaction.

28-26

Reserved

0

Reserved

25-21

REGADR

0-1Fh

Registeraddressbits.ThisfieldspecifiesthePHYregistertobeaccessedforthistransaction

20-16

PHYADR

0-1Fh

PHYaddressbits.ThisfieldspecifiesthePHYtobeaccessedforthistransaction.

15-0

DATA

0-FFFFh

Userdatabits.ThesebitsspecifythedatavaluereadfromortobewrittentothespecifiedPHY

register.

1593

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






MDIORegisterswww.ti.com

29.4.14MDIOUserPHYSelectRegister1(USERPHYSEL1)

TheMDIOuserPHYselectregister1(USERPHYSEL1)isshowninFigure29-38anddescribedin

Table29-38.

Figure29-38.MDIOUserPHYSelectRegister1(USERPHYSEL1)

31

16

Reserved

R-0

15

8

7

6

5

4

0

Reserved

LINKSEL

LINKINTENB

Rsvd

PHYADRMON

R-0

R/W-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-38.MDIOUserPHYSelectRegister1(USERPHYSEL1)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

LINKSEL

Linkstatusdeterminationselectbit.Defaultvalueis0,whichimpliesthatthelinkstatusis

determinedbytheMDIOstatemachine.Thisistheonlyoptionsupportedonthisdevice.

0

ThelinkstatusisdeterminedbytheMDIOstatemachine.

1

Notsupported.

6

LINKINTENB

Linkchangeinterruptenable.Setto1toenablelinkchangestatusinterruptsforthePHYaddress

specifiedinPHYADRMON.Linkchangeinterruptsaredisabledifthisbitisclearedto0.

0

Linkchangeinterruptsaredisabled.

1

LinkchangestatusinterruptsforPHYaddressspecifiedinPHYADDRMONbitsareenabled.

5

Reserved

0

PHYaddresswhoselinkstatusistobemonitored.

4-0

PHYADRMON

0-1Fh

PHYaddresswhoselinkstatusistobemonitored.

1594

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5EMACModuleRegisters

Table29-39liststhememory-mappedregistersfortheEMAC.Thebaseaddressfortheseregistersis

0xFCF78000.

Table29-39.EthernetMediaAccessController(EMAC)Registers

Offset

Acronym

RegisterDescription

Section

0h

TXREVID

TransmitRevisionIDRegister

Section29.5.1

4h

TXCONTROL

TransmitControlRegister

Section29.5.2

8h

TXTEARDOWN

TransmitTeardownRegister

Section29.5.3

10h

RXREVID

ReceiveRevisionIDRegister

Section29.5.4

14h

RXCONTROL

ReceiveControlRegister

Section29.5.5

18h

RXTEARDOWN

ReceiveTeardownRegister

Section29.5.6

80h

TXINTSTATRAW

TransmitInterruptStatus(Unmasked)Register

Section29.5.7

84h

TXINTSTATMASKED

TransmitInterruptStatus(Masked)Register

Section29.5.8

88h

TXINTMASKSET

TransmitInterruptMaskSetRegister

Section29.5.9

8Ch

TXINTMASKCLEAR

TransmitInterruptClearRegister

Section29.5.10

90h

MACINVECTOR

MACInputVectorRegister

Section29.5.11

94h

MACEOIVECTOR

MACEndOfInterruptVectorRegister

Section29.5.12

A0h

RXINTSTATRAW

ReceiveInterruptStatus(Unmasked)Register

Section29.5.13

A4h

RXINTSTATMASKED

ReceiveInterruptStatus(Masked)Register

Section29.5.14

A8h

RXINTMASKSET

ReceiveInterruptMaskSetRegister

Section29.5.15

ACh

RXINTMASKCLEAR

ReceiveInterruptMaskClearRegister

Section29.5.16

B0h

MACINTSTATRAW

MACInterruptStatus(Unmasked)Register

Section29.5.17

B4h

MACINTSTATMASKED

MACInterruptStatus(Masked)Register

Section29.5.18

B8h

MACINTMASKSET

MACInterruptMaskSetRegister

Section29.5.19

BCh

MACINTMASKCLEAR

MACInterruptMaskClearRegister

Section29.5.20

100h

RXMBPENABLE

ReceiveMulticast/Broadcast/PromiscuousChannelEnable

Section29.5.21

Register

104h

RXUNICASTSET

ReceiveUnicastEnableSetRegister

Section29.5.22

108h

RXUNICASTCLEAR

ReceiveUnicastClearRegister

Section29.5.23

10Ch

RXMAXLEN

ReceiveMaximumLengthRegister

Section29.5.24

110h

RXBUFFEROFFSET

ReceiveBufferOffsetRegister

Section29.5.25

114h

RXFILTERLOWTHRESH

ReceiveFilterLowPriorityFrameThresholdRegister

Section29.5.26

120h

RX0FLOWTHRESH

ReceiveChannel0FlowControlThresholdRegister

Section29.5.27

124h

RX1FLOWTHRESH

ReceiveChannel1FlowControlThresholdRegister

Section29.5.27

128h

RX2FLOWTHRESH

ReceiveChannel2FlowControlThresholdRegister

Section29.5.27

12Ch

RX3FLOWTHRESH

ReceiveChannel3FlowControlThresholdRegister

Section29.5.27

130h

RX4FLOWTHRESH

ReceiveChannel4FlowControlThresholdRegister

Section29.5.27

134h

RX5FLOWTHRESH

ReceiveChannel5FlowControlThresholdRegister

Section29.5.27

138h

RX6FLOWTHRESH

ReceiveChannel6FlowControlThresholdRegister

Section29.5.27

13Ch

RX7FLOWTHRESH

ReceiveChannel7FlowControlThresholdRegister

Section29.5.27

140h

RX0FREEBUFFER

ReceiveChannel0FreeBufferCountRegister

Section29.5.28

144h

RX1FREEBUFFER

ReceiveChannel1FreeBufferCountRegister

Section29.5.28

148h

RX2FREEBUFFER

ReceiveChannel2FreeBufferCountRegister

Section29.5.28

14Ch

RX3FREEBUFFER

ReceiveChannel3FreeBufferCountRegister

Section29.5.28

150h

RX4FREEBUFFER

ReceiveChannel4FreeBufferCountRegister

Section29.5.28

154h

RX5FREEBUFFER

ReceiveChannel5FreeBufferCountRegister

Section29.5.28

158h

RX6FREEBUFFER

ReceiveChannel6FreeBufferCountRegister

Section29.5.28

15Ch

RX7FREEBUFFER

ReceiveChannel7FreeBufferCountRegister

Section29.5.28

160h

MACCONTROL

MACControlRegister

Section29.5.29

1595

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

Table29-39.EthernetMediaAccessController(EMAC)Registers(continued)

Offset

Acronym

RegisterDescription

Section

164h

MACSTATUS

MACStatusRegister

Section29.5.30

168h

EMCONTROL

EmulationControlRegister

Section29.5.31

16Ch

FIFOCONTROL

FIFOControlRegister

Section29.5.32

170h

MACCONFIG

MACConfigurationRegister

Section29.5.33

174h

SOFTRESET

SoftResetRegister

Section29.5.34

1D0h

MACSRCADDRLO

MACSourceAddressLowBytesRegister

Section29.5.35

1D4h

MACSRCADDRHI

MACSourceAddressHighBytesRegister

Section29.5.36

1D8h

MACHASH1

MACHashAddressRegister1

Section29.5.37

1DCh

MACHASH2

MACHashAddressRegister2

Section29.5.38

1E0h

BOFFTEST

BackOffTestRegister

Section29.5.39

1E4h

TPACETEST

TransmitPacingAlgorithmTestRegister

Section29.5.40

1E8h

RXPAUSE

ReceivePauseTimerRegister

Section29.5.41

1ECh

TXPAUSE

TransmitPauseTimerRegister

Section29.5.42

500h

MACADDRLO

MACAddressLowBytesRegister

Section29.5.43

504h

MACADDRHI

MACAddressHighBytesRegister

Section29.5.44

508h

MACINDEX

MACIndexRegister

Section29.5.45

600h

TX0HDP

TransmitChannel0DMAHeadDescriptorPointerRegister

Section29.5.46

604h

TX1HDP

TransmitChannel1DMAHeadDescriptorPointerRegister

Section29.5.46

608h

TX2HDP

TransmitChannel2DMAHeadDescriptorPointerRegister

Section29.5.46

60Ch

TX3HDP

TransmitChannel3DMAHeadDescriptorPointerRegister

Section29.5.46

610h

TX4HDP

TransmitChannel4DMAHeadDescriptorPointerRegister

Section29.5.46

614h

TX5HDP

TransmitChannel5DMAHeadDescriptorPointerRegister

Section29.5.46

618h

TX6HDP

TransmitChannel6DMAHeadDescriptorPointerRegister

Section29.5.46

61Ch

TX7HDP

TransmitChannel7DMAHeadDescriptorPointerRegister

Section29.5.46

620h

RX0HDP

ReceiveChannel0DMAHeadDescriptorPointerRegister

Section29.5.47

624h

RX1HDP

ReceiveChannel1DMAHeadDescriptorPointerRegister

Section29.5.47

628h

RX2HDP

ReceiveChannel2DMAHeadDescriptorPointerRegister

Section29.5.47

62Ch

RX3HDP

ReceiveChannel3DMAHeadDescriptorPointerRegister

Section29.5.47

630h

RX4HDP

ReceiveChannel4DMAHeadDescriptorPointerRegister

Section29.5.47

634h

RX5HDP

ReceiveChannel5DMAHeadDescriptorPointerRegister

Section29.5.47

638h

RX6HDP

ReceiveChannel6DMAHeadDescriptorPointerRegister

Section29.5.47

63Ch

RX7HDP

ReceiveChannel7DMAHeadDescriptorPointerRegister

Section29.5.47

640h

TX0CP

TransmitChannel0CompletionPointerRegister

Section29.5.48

644h

TX1CP

TransmitChannel1CompletionPointerRegister

Section29.5.48

648h

TX2CP

TransmitChannel2CompletionPointerRegister

Section29.5.48

64Ch

TX3CP

TransmitChannel3CompletionPointerRegister

Section29.5.48

650h

TX4CP

TransmitChannel4CompletionPointerRegister

Section29.5.48

654h

TX5CP

TransmitChannel5CompletionPointerRegister

Section29.5.48

658h

TX6CP

TransmitChannel6CompletionPointerRegister

Section29.5.48

65Ch

TX7CP

TransmitChannel7CompletionPointerRegister

Section29.5.48

660h

RX0CP

ReceiveChannel0CompletionPointerRegister

Section29.5.49

664h

RX1CP

ReceiveChannel1CompletionPointerRegister

Section29.5.49

668h

RX2CP

ReceiveChannel2CompletionPointerRegister

Section29.5.49

66Ch

RX3CP

ReceiveChannel3CompletionPointerRegister

Section29.5.49

670h

RX4CP

ReceiveChannel4CompletionPointerRegister

Section29.5.49

674h

RX5CP

ReceiveChannel5CompletionPointerRegister

Section29.5.49

678h

RX6CP

ReceiveChannel6CompletionPointerRegister

Section29.5.49

1596

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

Table29-39.EthernetMediaAccessController(EMAC)Registers(continued)

Offset

Acronym

RegisterDescription

Section

67Ch

RX7CP

ReceiveChannel7CompletionPointerRegister

Section29.5.49

NetworkStatisticsRegisters

200h

RXGOODFRAMES

GoodReceiveFramesRegister

Section29.5.50.1

204h

RXBCASTFRAMES

BroadcastReceiveFramesRegister

Section29.5.50.2

208h

RXMCASTFRAMES

MulticastReceiveFramesRegister

Section29.5.50.3

20Ch

RXPAUSEFRAMES

PauseReceiveFramesRegister

Section29.5.50.4

210h

RXCRCERRORS

ReceiveCRCErrorsRegister

Section29.5.50.5

214h

RXALIGNCODEERRORS

ReceiveAlignment/CodeErrorsRegister

Section29.5.50.6

218h

RXOVERSIZED

ReceiveOversizedFramesRegister

Section29.5.50.7

21Ch

RXJABBER

ReceiveJabberFramesRegister

Section29.5.50.8

220h

RXUNDERSIZED

ReceiveUndersizedFramesRegister

Section29.5.50.9

224h

RXFRAGMENTS

ReceiveFrameFragmentsRegister

Section29.5.50.10

228h

RXFILTERED

FilteredReceiveFramesRegister

Section29.5.50.11

22Ch

RXQOSFILTERED

ReceiveQOSFilteredFramesRegister

Section29.5.50.12

230h

RXOCTETS

ReceiveOctetFramesRegister

Section29.5.50.13

234h

TXGOODFRAMES

GoodTransmitFramesRegister

Section29.5.50.14

238h

TXBCASTFRAMES

BroadcastTransmitFramesRegister

Section29.5.50.15

23Ch

TXMCASTFRAMES

MulticastTransmitFramesRegister

Section29.5.50.16

240h

TXPAUSEFRAMES

PauseTransmitFramesRegister

Section29.5.50.17

244h

TXDEFERRED

DeferredTransmitFramesRegister

Section29.5.50.18

248h

TXCOLLISION

TransmitCollisionFramesRegister

Section29.5.50.19

24Ch

TXSINGLECOLL

TransmitSingleCollisionFramesRegister

Section29.5.50.20

250h

TXMULTICOLL

TransmitMultipleCollisionFramesRegister

Section29.5.50.21

254h

TXEXCESSIVECOLL

TransmitExcessiveCollisionFramesRegister

Section29.5.50.22

258h

TXLATECOLL

TransmitLateCollisionFramesRegister

Section29.5.50.23

25Ch

TXUNDERRUN

TransmitUnderrunErrorRegister

Section29.5.50.24

260h

TXCARRIERSENSE

TransmitCarrierSenseErrorsRegister

Section29.5.50.25

264h

TXOCTETS

TransmitOctetFramesRegister

Section29.5.50.26

268h

FRAME64

TransmitandReceive64OctetFramesRegister

Section29.5.50.27

26Ch

FRAME65T127

TransmitandReceive65to127OctetFramesRegister

Section29.5.50.28

270h

FRAME128T255

TransmitandReceive128to255OctetFramesRegister

Section29.5.50.29

274h

FRAME256T511

TransmitandReceive256to511OctetFramesRegister

Section29.5.50.30

278h

FRAME512T1023

TransmitandReceive512to1023OctetFramesRegister

Section29.5.50.31

27Ch

FRAME1024TUP

TransmitandReceive1024toRXMAXLENOctetFramesRegister

Section29.5.50.32

280h

NETOCTETS

NetworkOctetFramesRegister

Section29.5.50.33

284h

RXSOFOVERRUNS

ReceiveFIFOorDMAStartofFrameOverrunsRegister

Section29.5.50.34

288h

RXMOFOVERRUNS

ReceiveFIFOorDMAMiddleofFrameOverrunsRegister

Section29.5.50.35

28Ch

RXDMAOVERRUNS

ReceiveDMAOverrunsRegister

Section29.5.50.36

1597

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.1TransmitRevisionIDRegister(TXREVID)

ThetransmitrevisionIDregister(TXREVID)isshowninFigure29-39anddescribedinTable29-40.

Figure29-39.TransmitRevisionIDRegister(TXREVID)

31

0

TXREV

R-4EC0020Dh

LEGEND:R=Readonly;-n=valueafterreset

Table29-40.TransmitRevisionIDRegister(TXREVID)FieldDescriptions

Bit

Field

Value

Description

31-0

TXREV

Transmitmodulerevision

4EC0020Dh

Currenttransmitrevisionvalue

29.5.2TransmitControlRegister(TXCONTROL)

Thetransmitcontrolregister(TXCONTROL)isshowninFigure29-40anddescribedinTable29-41.

Figure29-40.TransmitControlRegister(TXCONTROL)

31

16

Reserved

R-0

15

1

0

Reserved

TXEN

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-41.TransmitControlRegister(TXCONTROL)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Reserved

0

TXEN

Transmitenable

0

Transmitisdisabled.

1

Transmitisenabled.

1598

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.3TransmitTeardownRegister(TXTEARDOWN)

Thetransmitteardownregister(TXTEARDOWN)isshowninFigure29-41anddescribedinTable29-42.

Figure29-41.TransmitTeardownRegister(TXTEARDOWN)

31

16

Reserved

R-0

15

3

2

0

Reserved

TXTDNCH

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-42.TransmitTeardownRegister(TXTEARDOWN)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved

2-0

TXTDNCH

0-7h

Transmitteardownchannel.Thetransmitchannelteardowniscommandedbywritingtheencoded

valueofthetransmitchanneltobetorndown.Theteardownregisterisreadas0.

0

Teardowntransmitchannel0

1h

Teardowntransmitchannel1

2h

Teardowntransmitchannel2

3h

Teardowntransmitchannel3

4h

Teardowntransmitchannel4

5h

Teardowntransmitchannel5

6h

Teardowntransmitchannel6

7h

Teardowntransmitchannel7

29.5.4ReceiveRevisionIDRegister(RXREVID)

ThereceiverevisionIDregister(RXREVID)isshowninFigure29-42anddescribedinTable29-43.

Figure29-42.ReceiveRevisionIDRegister(RXREVID)

31

0

RXREV

R-4EC0020Dh

LEGEND:R=Readonly;-n=valueafterreset

Table29-43.ReceiveRevisionIDRegister(RXREVID)FieldDescriptions

Bit

Field

Value

Description

31-0

RXREV

Receivemodulerevision

4EC0020Dh

Currentreceiverevisionvalue

1599

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.5ReceiveControlRegister(RXCONTROL)

Thereceivecontrolregister(RXCONTROL)isshowninFigure29-43anddescribedinTable29-44.

Figure29-43.ReceiveControlRegister(RXCONTROL)

31

16

Reserved

R-0

15

1

0

Reserved

RXEN

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-44.ReceiveControlRegister(RXCONTROL)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Reserved

0

RXEN

Receiveenable

0

Receiveisdisabled.

1

Receiveisenabled.

29.5.6ReceiveTeardownRegister(RXTEARDOWN)

Thereceiveteardownregister(RXTEARDOWN)isshowninFigure29-44anddescribedinTable29-45.

Figure29-44.ReceiveTeardownRegister(RXTEARDOWN)

31

16

Reserved

R-0

15

3

2

0

Reserved

RXTDNCH

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-45.ReceiveTeardownRegister(RXTEARDOWN)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved

2-0

RXTDNCH

0-7h

Receiveteardownchannel.Thereceivechannelteardowniscommandedbywritingtheencodedvalue

ofthereceivechanneltobetorndown.Theteardownregisterisreadas0.

0

Teardownreceivechannel0

1h

Teardownreceivechannel1

2h

Teardownreceivechannel2

3h

Teardownreceivechannel3

4h

Teardownreceivechannel4

5h

Teardownreceivechannel5

6h

Teardownreceivechannel6

7h

Teardownreceivechannel7

1600

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.7TransmitInterruptStatus(Unmasked)Register(TXINTSTATRAW)

Thetransmitinterruptstatus(unmasked)register(TXINTSTATRAW)isshowninFigure29-45and

describedinTable29-46.

Figure29-45.TransmitInterruptStatus(Unmasked)Register(TXINTSTATRAW)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

TX7PEND

TX6PEND

TX5PEND

TX4PEND

TX3PEND

TX2PEND

TX1PEND

TX0PEND

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-46.TransmitInterruptStatus(Unmasked)Register(TXINTSTATRAW)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

TX7PEND

0-1

TX7PENDrawinterruptread(beforemask)

6

TX6PEND

0-1

TX6PENDrawinterruptread(beforemask)

5

TX5PEND

0-1

TX5PENDrawinterruptread(beforemask)

4

TX4PEND

0-1

TX4PENDrawinterruptread(beforemask)

3

TX3PEND

0-1

TX3PENDrawinterruptread(beforemask)

2

TX2PEND

0-1

TX2PENDrawinterruptread(beforemask)

1

TX1PEND

0-1

TX1PENDrawinterruptread(beforemask)

0

TX0PEND

0-1

TX0PENDrawinterruptread(beforemask)

1601

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.8TransmitInterruptStatus(Masked)Register(TXINTSTATMASKED)

Thetransmitinterruptstatus(masked)register(TXINTSTATMASKED)isshowninFigure29-46and

describedinTable29-47.

Figure29-46.TransmitInterruptStatus(Masked)Register(TXINTSTATMASKED)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

TX7PEND

TX6PEND

TX5PEND

TX4PEND

TX3PEND

TX2PEND

TX1PEND

TX0PEND

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-47.TransmitInterruptStatus(Masked)Register(TXINTSTATMASKED)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

TX7PEND

0-1

TX7PENDmaskedinterruptread

6

TX6PEND

0-1

TX6PENDmaskedinterruptread

5

TX5PEND

0-1

TX5PENDmaskedinterruptread

4

TX4PEND

0-1

TX4PENDmaskedinterruptread

3

TX3PEND

0-1

TX3PENDmaskedinterruptread

2

TX2PEND

0-1

TX2PENDmaskedinterruptread

1

TX1PEND

0-1

TX1PENDmaskedinterruptread

0

TX0PEND

0-1

TX0PENDmaskedinterruptread

1602

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.9TransmitInterruptMaskSetRegister(TXINTMASKSET)

Thetransmitinterruptmasksetregister(TXINTMASKSET)isshowninFigure29-47anddescribedin

Table29-48.

Figure29-47.TransmitInterruptMaskSetRegister(TXINTMASKSET)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

TX7MASK

TX6MASK

TX5MASK

TX4MASK

TX3MASK

TX2MASK

TX1MASK

TX0MASK

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-48.TransmitInterruptMaskSetRegister(TXINTMASKSET)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

TX7MASK

0-1

Transmitchannel7interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

6

TX6MASK

0-1

Transmitchannel6interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

5

TX5MASK

0-1

Transmitchannel5interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

4

TX4MASK

0-1

Transmitchannel4interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

3

TX3MASK

0-1

Transmitchannel3interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

2

TX2MASK

0-1

Transmitchannel2interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

1

TX1MASK

0-1

Transmitchannel1interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

0

TX0MASK

0-1

Transmitchannel0interruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

1603

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.10TransmitInterruptMaskClearRegister(TXINTMASKCLEAR)

Thetransmitinterruptmaskclearregister(TXINTMASKCLEAR)isshowninFigure29-48anddescribedin

Table29-49.

Figure29-48.TransmitInterruptMaskClearRegister(TXINTMASKCLEAR)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

TX7MASK

TX6MASK

TX5MASK

TX4MASK

TX3MASK

TX2MASK

TX1MASK

TX0MASK

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-49.TransmitInterruptMaskClearRegister(TXINTMASKCLEAR)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

TX7MASK

0-1

Transmitchannel7interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

6

TX6MASK

0-1

Transmitchannel6interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

5

TX5MASK

0-1

Transmitchannel5interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

4

TX4MASK

0-1

Transmitchannel4interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

3

TX3MASK

0-1

Transmitchannel3interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

2

TX2MASK

0-1

Transmitchannel2interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

1

TX1MASK

0-1

Transmitchannel1interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

0

TX0MASK

0-1

Transmitchannel0interruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

1604

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.11MACInputVectorRegister(MACINVECTOR)

TheMACinputvectorregister(MACINVECTOR)isshowninFigure29-49anddescribedinTable29-50.

Figure29-49.MACInputVectorRegister(MACINVECTOR)

31

28

27

26

25

24

23

16

Reserved

STATPEND

HOSTPEND

LINKINT0

USERINT0

TXPEND

R-0

R-0

R-0

R-0

R-0

R-0

15

8

7

0

RXTHRESHPEND

RXPEND

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-50.MACInputVectorRegister(MACINVECTOR)FieldDescriptions

Bit

Field

Value

Description

31-28

Reserved

0

Reserved

27

STATPEND

0-1

EMACmodulestatisticsinterrupt(STATPEND)pendingstatusbit

26

HOSTPEND

0-1

EMACmodulehosterrorinterrupt(HOSTPEND)pendingstatusbit

25

LINKINT0

0-1

MDIOmoduleUSERPHYSEL0(LINKINT0)statusbit

24

USERINT0

0-1

MDIOmoduleUSERACCESS0(USERINT0)statusbit

23-16

TXPEND

0-FFh

Transmitchannels0-7interrupt(TXnPEND)pendingstatus.Bit16isTX0PEND.

15-8

RXTHRESHPEND

0-FFh

Receivechannels0-7interrupt(RXnTHRESHPEND)pendingstatus.Bit8is

RX0THRESHPEND.

7-0

RXPEND

0-FFh

Receivechannels0-7interrupt(RXnPEND)pendingstatusbit.Bit0isRX0PEND.

1605

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.12MACEndOfInterruptVectorRegister(MACEOIVECTOR)

TheMACendofinterruptvectorregister(MACEOIVECTOR)isshowninFigure29-50anddescribedin

Table29-51.

Figure29-50.MACEndOfInterruptVectorRegister(MACEOIVECTOR)

31

16

Reserved

R-0

15

5

4

0

Reserved

INTVECT

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-51.MACEndOfInterruptVectorRegister(MACEOIVECTOR)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Reserved

4-0

INTVECT

0-1Fh

AcknowledgeEMACControlModuleInterrupts

0h

AcknowledgeC0RXTHRESHInterrupt

1h

AcknowledgeC0RXInterrupt

2h

AcknowledgeC0TXInterrupt

3h

AcknowledgeC0MISCInterrupt(STATPEND,HOSTPEND,MDIOLINKINT0,MDIOUSERINT0)

4h

AcknowledgeC1RXTHRESHInterrupt

5h

AcknowledgeC1RXInterrupt

6h

AcknowledgeC1TXInterrupt

7h

AcknowledgeC1MISCInterrupt(STATPEND,HOSTPEND,MDIOLINKINT0,MDIOUSERINT0)

8h

AcknowledgeC2RXTHRESHInterrupt

9h

AcknowledgeC2RXInterrupt

Ah

AcknowledgeC2TXInterrupt

Bh

AcknowledgeC2MISCInterrupt(STATPEND,HOSTPEND,MDIOLINKINT0,MDIOUSERINT0)

Ch-1Fh

Reserved

1606

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.13ReceiveInterruptStatus(Unmasked)Register(RXINTSTATRAW)

Thereceiveinterruptstatus(unmasked)register(RXINTSTATRAW)isshowninFigure29-51and

describedinTable29-52.

Figure29-51.ReceiveInterruptStatus(Unmasked)Register(RXINTSTATRAW)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

RX7THRESHPEND

RX6THRESHPEND

RX5THRESHPEND

RX4THRESHPEND

RX3THRESHPEND

RX2THRESHPEND

RX1THRESHPEND

RX0THRESHPEND

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

7

6

5

4

3

2

1

0

RX7PEND

RX6PEND

RX5PEND

RX4PEND

RX3PEND

RX2PEND

RX1PEND

RX0PEND

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-52.ReceiveInterruptStatus(Unmasked)Register(RXINTSTATRAW)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15

RX7THRESHPEND

0-1

RX7THRESHPENDrawinterruptread(beforemask)

14

RX6THRESHPEND

0-1

RX6THRESHPENDrawinterruptread(beforemask)

13

RX5THRESHPEND

0-1

RX5THRESHPENDrawinterruptread(beforemask)

12

RX4THRESHPEND

0-1

RX4THRESHPENDrawinterruptread(beforemask)

11

RX3THRESHPEND

0-1

RX3THRESHPENDrawinterruptread(beforemask)

10

RX2THRESHPEND

0-1

RX2THRESHPENDrawinterruptread(beforemask)

9

RX1THRESHPEND

0-1

RX1THRESHPENDrawinterruptread(beforemask)

8

RX0THRESHPEND

0-1

RX0THRESHPENDrawinterruptread(beforemask)

7

RX7PEND

0-1

RX7PENDrawinterruptread(beforemask)

6

RX6PEND

0-1

RX6PENDrawinterruptread(beforemask)

5

RX5PEND

0-1

RX5PENDrawinterruptread(beforemask)

4

RX4PEND

0-1

RX4PENDrawinterruptread(beforemask)

3

RX3PEND

0-1

RX3PENDrawinterruptread(beforemask)

2

RX2PEND

0-1

RX2PENDrawinterruptread(beforemask)

1

RX1PEND

0-1

RX1PENDrawinterruptread(beforemask)

0

RX0PEND

0-1

RX0PENDrawinterruptread(beforemask)

1607

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.14ReceiveInterruptStatus(Masked)Register(RXINTSTATMASKED)

Thereceiveinterruptstatus(masked)register(RXINTSTATMASKED)isshowninFigure29-52and

describedinTable29-53.

Figure29-52.ReceiveInterruptStatus(Masked)Register(RXINTSTATMASKED)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

RX7THRESHPEND

RX6THRESHPEND

RX5THRESHPEND

RX4THRESHPEND

RX3THRESHPEND

RX2THRESHPEND

RX1THRESHPEND

RX0THRESHPEND

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

7

6

5

4

3

2

1

0

RX7PEND

RX6PEND

RX5PEND

RX4PEND

RX3PEND

RX2PEND

RX1PEND

RX0PEND

R-0

R-0

R-0

R-0

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-53.ReceiveInterruptStatus(Masked)Register(RXINTSTATMASKED)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15

RX7THRESHPEND

0-1

RX7THRESHPENDmaskedinterruptread

14

RX6THRESHPEND

0-1

RX6THRESHPENDmaskedinterruptread

13

RX5THRESHPEND

0-1

RX5THRESHPENDmaskedinterruptread

12

RX4THRESHPEND

0-1

RX4THRESHPENDmaskedinterruptread

11

RX3THRESHPEND

0-1

RX3THRESHPENDmaskedinterruptread

10

RX2THRESHPEND

0-1

RX2THRESHPENDmaskedinterruptread

9

RX1THRESHPEND

0-1

RX1THRESHPENDmaskedinterruptread

8

RX0THRESHPEND

0-1

RX0THRESHPENDmaskedinterruptread

7

RX7PEND

0-1

RX7PENDmaskedinterruptread

6

RX6PEND

0-1

RX6PENDmaskedinterruptread

5

RX5PEND

0-1

RX5PENDmaskedinterruptread

4

RX4PEND

0-1

RX4PENDmaskedinterruptread

3

RX3PEND

0-1

RX3PENDmaskedinterruptread

2

RX2PEND

0-1

RX2PENDmaskedinterruptread

1

RX1PEND

0-1

RX1PENDmaskedinterruptread

0

RX0PEND

0-1

RX0PENDmaskedinterruptread

1608

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.15ReceiveInterruptMaskSetRegister(RXINTMASKSET)

Thereceiveinterruptmasksetregister(RXINTMASKSET)isshowninFigure29-53anddescribedin

Table29-54.

Figure29-53.ReceiveInterruptMaskSetRegister(RXINTMASKSET)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

RX7THRESHMASK

RX6THRESHMASK

RX5THRESHMASK

RX4THRESHMASK

RX3THRESHMASK

RX2THRESHMASK

RX1THRESHMASK

RX0THRESHMASK

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

7

6

5

4

3

2

1

0

RX7MASK

RX6MASK

RX5MASK

RX4MASK

RX3MASK

RX2MASK

RX1MASK

RX0MASK

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-54.ReceiveInterruptMaskSetRegister(RXINTMASKSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15

RX7THRESHMASK

0-1

Receivechannel7thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

14

RX6THRESHMASK

0-1

Receivechannel6thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

13

RX5THRESHMASK

0-1

Receivechannel5thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

12

RX4THRESHMASK

0-1

Receivechannel4thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

11

RX3THRESHMASK

0-1

Receivechannel3thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

10

RX2THRESHMASK

0-1

Receivechannel2thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

9

RX1THRESHMASK

0-1

Receivechannel1thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

8

RX0THRESHMASK

0-1

Receivechannel0thresholdmasksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

7

RX7MASK

0-1

Receivechannel7masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

6

RX6MASK

0-1

Receivechannel6masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

5

RX5MASK

0-1

Receivechannel5masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

4

RX4MASK

0-1

Receivechannel4masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

3

RX3MASK

0-1

Receivechannel3masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

2

RX2MASK

0-1

Receivechannel2masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

1

RX1MASK

0-1

Receivechannel1masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

0

RX0MASK

0-1

Receivechannel0masksetbit.Write1toenableinterrupt;awriteof0hasnoeffect.

1609

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.16ReceiveInterruptMaskClearRegister(RXINTMASKCLEAR)

Thereceiveinterruptmaskclearregister(RXINTMASKCLEAR)isshowninFigure29-54anddescribedin

Table29-55.

Figure29-54.ReceiveInterruptMaskClearRegister(RXINTMASKCLEAR)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

RX7THRESHMASK

RX6THRESHMASK

RX5THRESHMASK

RX4THRESHMASK

RX3THRESHMASK

RX2THRESHMASK

RX1THRESHMASK

RX0THRESHMASK

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

7

6

5

4

3

2

1

0

RX7MASK

RX6MASK

RX5MASK

RX4MASK

RX3MASK

RX2MASK

RX1MASK

RX0MASK

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-55.ReceiveInterruptMaskClearRegister(RXINTMASKCLEAR)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15

RX7THRESHMASK

0-1

Receivechannel7thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

14

RX6THRESHMASK

0-1

Receivechannel6thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

13

RX5THRESHMASK

0-1

Receivechannel5thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

12

RX4THRESHMASK

0-1

Receivechannel4thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

11

RX3THRESHMASK

0-1

Receivechannel3thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

10

RX2THRESHMASK

0-1

Receivechannel2thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

9

RX1THRESHMASK

0-1

Receivechannel1thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

8

RX0THRESHMASK

0-1

Receivechannel0thresholdmaskclearbit.Write1todisableinterrupt;awriteof0hasno

effect.

7

RX7MASK

0-1

Receivechannel7maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

6

RX6MASK

0-1

Receivechannel6maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

5

RX5MASK

0-1

Receivechannel5maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

4

RX4MASK

0-1

Receivechannel4maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

3

RX3MASK

0-1

Receivechannel3maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

2

RX2MASK

0-1

Receivechannel2maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

1

RX1MASK

0-1

Receivechannel1maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

0

RX0MASK

0-1

Receivechannel0maskclearbit.Write1todisableinterrupt;awriteof0hasnoeffect.

1610

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.17MACInterruptStatus(Unmasked)Register(MACINTSTATRAW)

TheMACinterruptstatus(unmasked)register(MACINTSTATRAW)isshowninFigure29-55and

describedinTable29-56.

Figure29-55.MACInterruptStatus(Unmasked)Register(MACINTSTATRAW)

31

16

Reserved

R-0

15

2

1

0

Reserved

HOSTPEND

STATPEND

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-56.MACInterruptStatus(Unmasked)Register(MACINTSTATRAW)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

HOSTPEND

0-1

Hostpendinginterrupt(HOSTPEND);rawinterruptread(beforemask).

0

STATPEND

0-1

Statisticspendinginterrupt(STATPEND);rawinterruptread(beforemask).

29.5.18MACInterruptStatus(Masked)Register(MACINTSTATMASKED)

TheMACinterruptstatus(masked)register(MACINTSTATMASKED)isshowninFigure29-56and

describedinTable29-57.

Figure29-56.MACInterruptStatus(Masked)Register(MACINTSTATMASKED)

31

16

Reserved

R-0

15

2

1

0

Reserved

HOSTPEND

STATPEND

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-57.MACInterruptStatus(Masked)Register(MACINTSTATMASKED)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

HOSTPEND

0-1

Hostpendinginterrupt(HOSTPEND);maskedinterruptread.

0

STATPEND

0-1

Statisticspendinginterrupt(STATPEND);maskedinterruptread.

1611

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.19MACInterruptMaskSetRegister(MACINTMASKSET)

TheMACinterruptmasksetregister(MACINTMASKSET)isshowninFigure29-57anddescribedin

Table29-58.

Figure29-57.MACInterruptMaskSetRegister(MACINTMASKSET)

31

16

Reserved

R-0

15

2

1

0

Reserved

HOSTMASK

STATMASK

R-0

R/W1S-0

R/W1S-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-58.MACInterruptMaskSetRegister(MACINTMASKSET)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

HOSTMASK

0-1

Hosterrorinterruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

0

STATMASK

0-1

Statisticsinterruptmasksetbit.Write1toenableinterrupt,awriteof0hasnoeffect.

29.5.20MACInterruptMaskClearRegister(MACINTMASKCLEAR)

TheMACinterruptmaskclearregister(MACINTMASKCLEAR)isshowninFigure29-58anddescribedin

Table29-59.

Figure29-58.MACInterruptMaskClearRegister(MACINTMASKCLEAR)

31

16

Reserved

R-0

15

2

1

0

Reserved

HOSTMASK

STATMASK

R-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-59.MACInterruptMaskClearRegister(MACINTMASKCLEAR)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

HOSTMASK

0-1

Hosterrorinterruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

0

STATMASK

0-1

Statisticsinterruptmaskclearbit.Write1todisableinterrupt,awriteof0hasnoeffect.

1612

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.21ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)

Thereceivemulticast/broadcast/promiscuouschannelenableregister(RXMBPENABLE)isshownin

Figure29-59anddescribedinTable29-60.

Figure29-59.ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister

(RXMBPENABLE)

31

30

29

28

27

25

24

Reserved

RXPASSCRC

RXQOSEN

RXNOCHAIN

Reserved

RXCMFEN

R-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

23

22

21

20

19

18

16

RXCSFEN

RXCEFEN

RXCAFEN

Reserved

RXPROMCH

R/W-0

R/W-0

R/W-0

R-0

R/W-0

15

14

13

12

11

10

8

Reserved

RXBROADEN

Reserved

RXBROADCH

R-0

R/W-0

R-0

R/W-0

7

6

5

4

3

2

0

Reserved

RXMULTEN

Reserved

RXMULTCH

R-0

R/W-0

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-60.ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)

FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Reserved

30

RXPASSCRC

PassreceiveCRCenablebit

0

ReceivedCRCisdiscardedforallchannelsandisnotincludedinthebufferdescriptorpacket

lengthfield.

1

ReceivedCRCistransferredtomemoryforallchannelsandisincludedinthebufferdescriptor

packetlength.

29

RXQOSEN

Receivequalityofserviceenablebit

0

ReceiveQOSisdisabled.

1

ReceiveQOSisenabled.

28

RXNOCHAIN

Receivenobufferchainingbit

0

Receivedframescanspanmultiplebuffers.

1

TheReceiveDMAcontrollertransferseachframeintoasinglebuffer,regardlessoftheframeor

buffersize.Allremainingframedataafterthefirstbufferisdiscarded.Thebufferdescriptorbuffer

lengthfieldwillcontaintheentireframebytecount(upto65535bytes).

27-25

Reserved

0

Reserved

24

RXCMFEN

ReceivecopyMACcontrolframesenablebit.EnablesMACcontrolframestobetransferredto

memory.MACcontrolframesarenormallyactedupon(ifenabled),butnotcopiedtomemory.MAC

controlframesthatarepauseframeswillbeacteduponifenabledinMACCONTROL,regardlessof

thevalueofRXCMFEN.FramestransferredtomemoryduetoRXCMFENwillhavetheCONTROL

bitsetintheirEOPbufferdescriptor.

0

MACcontrolframesarefiltered(butacteduponifenabled).

1

MACcontrolframesaretransferredtomemory.

23

RXCSFEN

Receivecopyshortframesenablebit.Enablesframesorfragmentsshorterthan64bytestobe

copiedtomemory.FramestransferredtomemoryduetoRXCSFENwillhavetheFRAGMENTor

UNDERSIZEbitsetintheirEOPbufferdescriptor.FragmentsareshortframesthatcontainCRC/

align/codeerrorsandundersizedareshortframeswithouterrors.

0

Shortframesarefiltered.

1

Shortframesaretransferredtomemory.

1613

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

Table29-60.ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)

FieldDescriptions(continued)

Bit

Field

Value

Description

22

RXCEFEN

Receivecopyerrorframesenablebit.Enablesframescontainingerrorstobetransferredto

memory.TheappropriateerrorbitwillbesetintheframeEOPbufferdescriptor.

0

Framescontainingerrorsarefiltered.

1

Framescontainingerrorsaretransferredtomemory.

21

RXCAFEN

Receivecopyallframesenablebit.Enablesframesthatdonotaddressmatch(includesmulticast

framesthatdonothashmatch)tobetransferredtothepromiscuouschannelselectedby

RXPROMCHbits.SuchframeswillbemarkedwiththeNOMATCHbitintheirEOPbuffer

descriptor.

0

Framesthatdonotaddressmatcharefiltered.

1

Framesthatdonotaddressmatcharetransferredtothepromiscuouschannelselectedby

RXPROMCHbits.

20-19

Reserved

0

Reserved

18-16

RXPROMCH

0-7h

Receivepromiscuouschannelselect

0

Selectchannel0toreceivepromiscuousframes

1h

Selectchannel1toreceivepromiscuousframes

2h

Selectchannel2toreceivepromiscuousframes

3h

Selectchannel3toreceivepromiscuousframes

4h

Selectchannel4toreceivepromiscuousframes

5h

Selectchannel5toreceivepromiscuousframes

6h

Selectchannel6toreceivepromiscuousframes

7h

Selectchannel7toreceivepromiscuousframes

15-14

Reserved

0

Reserved

13

RXBROADEN

Receivebroadcastenable.Enablereceivedbroadcastframestobecopiedtothechannelselected

byRXBROADCHbits.

0

Broadcastframesarefiltered.

1

BroadcastframesarecopiedtothechannelselectedbyRXBROADCHbits.

12-11

Reserved

0

Reserved

10-8

RXBROADCH

0-7h

Receivebroadcastchannelselect

0

Selectchannel0toreceivebroadcastframes

1h

Selectchannel1toreceivebroadcastframes

2h

Selectchannel2toreceivebroadcastframes

3h

Selectchannel3toreceivebroadcastframes

4h

Selectchannel4toreceivebroadcastframes

5h

Selectchannel5toreceivebroadcastframes

6h

Selectchannel6toreceivebroadcastframes

7h

Selectchannel7toreceivebroadcastframes

7-6

Reserved

0

Reserved

5

RXMULTEN

RXmulticastenable.Enablereceivedhashmatchingmulticastframestobecopiedtothechannel

selectedbyRXMULTCHbits.

0

Multicastframesarefiltered.

1

MulticastframesarecopiedtothechannelselectedbyRXMULTCHbits.

4-3

Reserved

0

Reserved

1614

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

Table29-60.ReceiveMulticast/Broadcast/PromiscuousChannelEnableRegister(RXMBPENABLE)

FieldDescriptions(continued)

Bit

Field

Value

Description

2-0

RXMULTCH

0-7h

Receivemulticastchannelselect

0

Selectchannel0toreceivemulticastframes

1h

Selectchannel1toreceivemulticastframes

2h

Selectchannel2toreceivemulticastframes

3h

Selectchannel3toreceivemulticastframes

4h

Selectchannel4toreceivemulticastframes

5h

Selectchannel5toreceivemulticastframes

6h

Selectchannel6toreceivemulticastframes

7h

Selectchannel7toreceivemulticastframes

29.5.22ReceiveUnicastEnableSetRegister(RXUNICASTSET)

Thereceiveunicastenablesetregister(RXUNICASTSET)isshowninFigure29-60anddescribedin

Table29-61.

Figure29-60.ReceiveUnicastEnableSetRegister(RXUNICASTSET)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

RXCH7EN

RXCH6EN

RXCH5EN

RXCH4EN

RXCH3EN

RXCH2EN

RXCH1EN

RXCH0EN

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

R/W1S-0

LEGEND:R/W=Read/Write;R=Readonly;W1S=Write1toset(writinga0hasnoeffect);-n=valueafterreset

Table29-61.ReceiveUnicastEnableSetRegister(RXUNICASTSET)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

RXCH7EN

0-1

Receivechannel7unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

6

RXCH6EN

0-1

Receivechannel6unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

5

RXCH5EN

0-1

Receivechannel5unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

4

RXCH4EN

0-1

Receivechannel4unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

3

RXCH3EN

0-1

Receivechannel3unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

2

RXCH2EN

0-1

Receivechannel2unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

1

RXCH1EN

0-1

Receivechannel1unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

0

RXCH0EN

0-1

Receivechannel0unicastenablesetbit.Write1tosettheenable,awriteof0hasnoeffect.

Mayberead.

1615

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.23ReceiveUnicastClearRegister(RXUNICASTCLEAR)

Thereceiveunicastclearregister(RXUNICASTCLEAR)isshowninFigure29-61anddescribedin

Table29-62.

Figure29-61.ReceiveUnicastClearRegister(RXUNICASTCLEAR)

31

16

Reserved

R-0

15

8

Reserved

R-0

7

6

5

4

3

2

1

0

RXCH7EN

RXCH6EN

RXCH5EN

RXCH4EN

RXCH3EN

RXCH2EN

RXCH1EN

RXCH0EN

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

R/W1C-0

LEGEND:R/W=Read/Write;R=Readonly;W1C=Write1toclear(writinga0hasnoeffect);-n=valueafterreset

Table29-62.ReceiveUnicastClearRegister(RXUNICASTCLEAR)FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7

RXCH7EN

0-1

Receivechannel7unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

6

RXCH6EN

0-1

Receivechannel6unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

5

RXCH5EN

0-1

Receivechannel5unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

4

RXCH4EN

0-1

Receivechannel4unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

3

RXCH3EN

0-1

Receivechannel3unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

2

RXCH2EN

0-1

Receivechannel2unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

1

RXCH1EN

0-1

Receivechannel1unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

0

RXCH0EN

0-1

Receivechannel0unicastenableclearbit.Write1tocleartheenable,awriteof0hasnoeffect.

29.5.24ReceiveMaximumLengthRegister(RXMAXLEN)

Thereceivemaximumlengthregister(RXMAXLEN)isshowninFigure29-62anddescribedinTable29-

63.

Figure29-62.ReceiveMaximumLengthRegister(RXMAXLEN)

31

16

Reserved

R-0

15

0

RXMAXLEN

R/W-5EEh

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-63.ReceiveMaximumLengthRegister(RXMAXLEN)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15-0

RXMAXLEN

0-FFFFh

Receivemaximumframelength.Thesebitsdeterminethemaximumlengthofareceivedframe.

Theresetvalueis5EEh(1518).FrameswithbytecountsgreaterthanRXMAXLENarelong

frames.Longframeswithnoerrorsareoversizedframes.LongframeswithCRC,code,or

alignmenterrorarejabberframes.

1616

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.25ReceiveBufferOffsetRegister(RXBUFFEROFFSET)

Thereceivebufferoffsetregister(RXBUFFEROFFSET)isshowninFigure29-63anddescribedin

Table29-64.

Figure29-63.ReceiveBufferOffsetRegister(RXBUFFEROFFSET)

31

16

Reserved

R-0

15

0

RXBUFFEROFFSET

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-64.ReceiveBufferOffsetRegister(RXBUFFEROFFSET)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15-0

RXBUFFEROFFSET

0-FFFFh

Receivebufferoffsetvalue.ThesebitsarewrittenbytheEMACintoeachframeSOP

bufferdescriptorBufferOffsetfield.TheframedatabeginsaftertheRXBUFFEROFFSET

valueofbytes.Avalueof0indicatesthattherearenounusedbytesatthebeginningof

thedata,andthatvaliddatabeginsonthefirstbyteofthebuffer.AvalueofFh(15)

indicatesthatthefirst15bytesofthebufferaretobeignoredbytheEMACandthatvalid

bufferdatastartsonbyte16ofthebuffer.Thisvalueisusedforallchannels.

29.5.26ReceiveFilterLowPriorityFrameThresholdRegister(RXFILTERLOWTHRESH)

Thereceivefilterlowpriorityframethresholdregister(RXFILTERLOWTHRESH)isshowninFigure29-64

anddescribedinTable29-65.

Figure29-64.ReceiveFilterLowPriorityFrameThresholdRegister(RXFILTERLOWTHRESH)

31

16

Reserved

R-0

15

8

7

0

Reserved

RXFILTERTHRESH

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-65.ReceiveFilterLowPriorityFrameThresholdRegister(RXFILTERLOWTHRESH)

FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7-0

RXFILTERTHRESH

0-FFh

Receivefilterlowthreshold.Thesebitscontainthefreebuffercountthresholdvalueforfiltering

lowpriorityincomingframes.Thisfieldshouldremain0,ifnofilteringisdesired.

1617

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.27ReceiveChannelFlowControlThresholdRegisters(RX0FLOWTHRESH-

RX7FLOWTHRESH)

Thereceivechannel0-7flowcontrolthresholdregister(RXnFLOWTHRESH)isshowninFigure29-65and

describedinTable29-66.

Figure29-65.ReceiveChannelnFlowControlThresholdRegister(RXnFLOWTHRESH)

31

16

Reserved

R-0

15

8

7

0

Reserved

RXnFLOWTHRESH

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-66.ReceiveChannelnFlowControlThresholdRegister(RXnFLOWTHRESH)

FieldDescriptions

Bit

Field

Value

Description

31-8

Reserved

0

Reserved

7-0

RXnFLOWTHRESH

0-FFh

Receiveflowthreshold.Thesebitscontainthethresholdvalueforissuingflowcontrolon

incomingframesforchanneln(whenenabled).

29.5.28ReceiveChannelFreeBufferCountRegisters(RX0FREEBUFFER-RX7FREEBUFFER)

Thereceivechannel0-7freebuffercountregister(RXnFREEBUFFER)isshowninFigure29-66and

describedinTable29-67.

Figure29-66.ReceiveChannelnFreeBufferCountRegister(RXnFREEBUFFER)

31

16

Reserved

R-0

15

0

RXnFREEBUF

WI-0

LEGEND:R=Readonly;WI=Writetoincrement;-n=valueafterreset

Table29-67.ReceiveChannelnFreeBufferCountRegister(RXnFREEBUFFER)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15-0

RXnFREEBUF

0-FFh

Receivefreebuffercount.Thesebitscontainthecountoffreebuffersavailable.The

RXFILTERTHRESHvalueiscomparedwiththisfieldtodetermineiflowpriorityframesshouldbe

filtered.TheRXnFLOWTHRESHvalueiscomparedwiththisfieldtodetermineifreceiveflow

controlshouldbeissuedagainstincomingpackets(ifenabled).Thisisawrite-to-incrementfield.

Thisfieldrollsoverto0onoverflow.

IfhardwareflowcontrolorQOSisused,thehostmustinitializethisfieldtothenumberofavailable

buffers(oneregisterperchannel).TheEMACdecrementstheassociatedchannelregisterforeach

receivedframebythenumberofbuffersinthereceivedframe.Thehostmustwritethisfieldwith

thenumberofbuffersthathavebeenfreedduetohostprocessing.

1618

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.29MACControlRegister(MACCONTROL)

TheMACcontrolregister(MACCONTROL)isshowninFigure29-67anddescribedinTable29-68.

Figure29-67.MACControlRegister(MACCONTROL)

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

RMIISPEED

RXOFFLENBLOCK

RXOWNERSHIP

Rsvd

CMDIDLE

TXSHORTGAPEN

TXPTYPE

Reserved

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

R/W-0

R-0

7

6

5

4

3

2

1

0

Reserved

TXPACE

GMIIEN

TXFLOWEN

RXBUFFERFLOWEN

Reserved

LOOPBACK

FULLDUPLEX

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-68.MACControlRegister(MACCONTROL)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15

RMIISPEED

RMIIinterfacetransmitandreceivespeedselect.

0

OperateRMIIinterfacein10Mbpsspeedmode.

1

OperateRMIIinterfacein100Mbpsspeedmode.

14

RXOFFLENBLOCK

Receiveoffset/lengthwordwriteblock.

0

DonotblocktheDMAwritestothereceivebufferdescriptoroffset/bufferlengthword.

1

BlockallEMACDMAcontrollerwritestothereceivebufferdescriptoroffset/bufferlength

wordsduringpacketprocessing.Whenthisbitisset,theEMACwillneverwritethethirdword

toanyreceivebufferdescriptor.

13

RXOWNERSHIP

Receiveownershipwritebitvalue.

0

TheEMACwritestheReceiveownershipbitto0attheendofpacketprocessing.

1

TheEMACwritestheReceiveownershipbitto1attheendofpacketprocessing.Ifyoudonot

usetheownershipmechanism,youcansetthismodetoprecludethenecessityofsoftware

havingtosetthisbiteachtimethebufferdescriptorisused.

12

Reserved

0

Reserved

11

CMDIDLE

CommandIdlebit

0

Idleisnotcommanded.

1

Idleiscommanded(readIDLEintheMACSTATUSregister).

10

TXSHORTGAPEN

TransmitShortGapEnable

0

TransmitwithashortIPGisdisabled.Normal96-bittimeIPGisinsertedbetweenpackets.

1

TransmitwithashortIPGisenabled.Shorter88-bittimeIPGisinsertedbetweenpackets.

9

TXPTYPE

Transmitqueueprioritytype

0

Thequeueusesaround-robinschemetoselectthenextchannelfortransmission.

1

Thequeueusesafixed-priority(channel7highestpriority)schemetoselectthenextchannel

fortransmission.

8-7

Reserved

0

Reserved

6

TXPACE

Transmitpacingenablebit

0

Transmitpacingisdisabled.

1

Transmitpacingisenabled.

5

GMIIEN

GMIIenablebit

0

GMIIRXandTXareheldinreset.

1

GMIIRXandTXareenabledforreceiveandtransmit.

1619

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

Table29-68.MACControlRegister(MACCONTROL)FieldDescriptions(continued)

Bit

Field

Value

Description

4

TXFLOWEN

Transmitflowcontrolenablebit.Thisbitdeterminesifincomingpauseframesareactedupon

infull-duplexmode.Incomingpauseframesarenotacteduponinhalf-duplexmode,

regardlessofthisbitsetting.TheRXMBPENABLEbitsdeterminewhetherornotreceived

pauseframesaretransferredtomemory.

0

Transmitflowcontrolisdisabled.Full-duplexmode:incomingpauseframesarenotacted

upon.

1

Transmitflowcontrolisenabled.Full-duplexmode:incomingpauseframesareactedupon.

3

RXBUFFERFLOWEN

Receivebufferflowcontrolenablebit

0

Receiveflowcontrolisdisabled.Half-duplexmode:noflowcontrolgeneratedcollisionsare

sent.Full-duplexmode:nooutgoingpauseframesaresent.

1

Receiveflowcontrolisenabled.Half-duplexmode:collisionsareinitiatedwhenreceivebuffer

flowcontrolistriggered.Full-duplexmode:outgoingpauseframesaresentwhenreceiveflow

controlistriggered.

2

Reserved

0

Reserved

1

LOOPBACK

Loopbackmode.Theloopbackmodeforcesinternalfull-duplexmoderegardlessofthe

FULLDUPLEXbit.TheloopbackbitshouldbechangedonlywhenGMIIENbitisdeasserted.

0

Loopbackmodeisdisabled.

1

Loopbackmodeisenabled.

0

FULLDUPLEX

Fullduplexmode.

0

Half-duplexmodeisenabled.

1

Full-duplexmodeisenabled.

1620

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.30MACStatusRegister(MACSTATUS)

TheMACstatusregister(MACSTATUS)isshowninFigure29-68anddescribedinTable29-69.

Figure29-68.MACStatusRegister(MACSTATUS)

31

30

24

23

20

19

18

16

IDLE

Reserved

TXERRCODE

Rsvd

TXERRCH

R-0

R-0

R-0

R-0

R-0

15

12

11

10

8

RXERRCODE

Reserved

RXERRCH

R-0

R-0

R-0

7

3

2

1

0

Reserved

RXQOSACT

RXFLOWACT

TXFLOWACT

R-0

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-69.MACStatusRegister(MACSTATUS)FieldDescriptions

Bit

Field

Value

Description

31

IDLE

EMACidlebit.Thisbitisclearedto0atreset;oneclockafterreset,itgoesto1.

0

TheEMACisnotidle.

1

TheEMACisintheidlestate.

30-24

Reserved

0

Reserved

23-20

TXERRCODE

0-Fh

Transmithosterrorcode.ThesebitsindicatethatEMACdetectedtransmitDMArelatedhosterrors.

Thehostshouldreadthisfieldafterahosterrorinterrupt(HOSTPEND)todeterminetheerror.Host

errorinterruptsrequirehardwareresetinordertorecover.A0packetlengthisanerror,butitisnot

detected.

0

Noerror

1h

SOPerror;thebufferisthefirstbufferinapacket,buttheSOPbitisnotsetinsoftware.

2h

OwnershipbitnotsetinSOPbuffer

3h

ZeronextbufferdescriptorpointerwithoutEOP

4h

Zerobufferpointer

5h

Zerobufferlength

6h

Packetlengtherror(sumofbuffersislessthanpacketlength)

7h-Fh

Reserved

19

Reserved

0

Reserved

18-16

TXERRCH

0-7h

Transmithosterrorchannel.Thesebitsindicatewhichtransmitchannelthehosterroroccurredon.

Thisfieldisclearedto0onahostread.

0

Thehosterroroccurredontransmitchannel0

1h

Thehosterroroccurredontransmitchannel1

2h

Thehosterroroccurredontransmitchannel2

3h

Thehosterroroccurredontransmitchannel3

4h

Thehosterroroccurredontransmitchannel4

5h

Thehosterroroccurredontransmitchannel5

6h

Thehosterroroccurredontransmitchannel6

7h

Thehosterroroccurredontransmitchannel7

1621

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

Table29-69.MACStatusRegister(MACSTATUS)FieldDescriptions(continued)

Bit

Field

Value

Description

15-12

RXERRCODE

0-Fh

Receivehosterrorcode.ThesebitsindicatethatEMACdetectedreceiveDMArelatedhosterrors.

Thehostshouldreadthisfieldafterahosterrorinterrupt(HOSTPEND)todeterminetheerror.Host

errorinterruptsrequirehardwareresetinordertorecover.

0

Noerror

1h

Reserved

2h

OwnershipbitnotsetinSOPbuffer

3h

Reserved

4h

Zerobufferpointer

5h-Fh

Reserved

11

Reserved

0

Reserved

10-8

RXERRCH

0-7h

Receivehosterrorchannel.Thesebitsindicatewhichreceivechannelthehosterroroccurredon.

Thisfieldisclearedto0onahostread.

0

Thehosterroroccurredonreceivechannel0

1h

Thehosterroroccurredonreceivechannel1

2h

Thehosterroroccurredonreceivechannel2

3h

Thehosterroroccurredonreceivechannel3

4h

Thehosterroroccurredonreceivechannel4

5h

Thehosterroroccurredonreceivechannel5

6h

Thehosterroroccurredonreceivechannel6

7h

Thehosterroroccurredonreceivechannel7

7-3

Reserved

0

Reserved

2

RXQOSACT

ReceiveQualityofService(QOS)activebit.Whenasserted,indicatesthatreceivequalityofservice

isenabledandthatatleastonechannelfreebuffercount(RXnFREEBUFFER)islessthanorequal

totheRXFILTERLOWTHRESHvalue.

0

Receivequalityofserviceisdisabled.

1

Receivequalityofserviceisenabled.

1

RXFLOWACT

Receiveflowcontrolactivebit.Whenasserted,atleastonechannelfreebuffercount

(RXnFREEBUFFER)islessthanorequaltothechannel'scorrespondingRXnFILTERTHRESH

value.

0

Receiveflowcontrolisinactive.

1

Receiveflowcontrolisactive.

0

TXFLOWACT

Transmitflowcontrolactivebit.Whenasserted,thisbitindicatesthatthepausetimeperiodisbeing

observedforareceivedpauseframe.Nonewtransmissionswillbeginwhilethisbitisasserted,

exceptforthetransmissionofpauseframes.Anytransmissioninprogresswhenthisbitisasserted

willcomplete.

0

Transmitflowcontrolisinactive.

1

Transmitflowcontrolisactive.

1622

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.31EmulationControlRegister(EMCONTROL)

Theemulationcontrolregister(EMCONTROL)isshowninFigure29-69anddescribedinTable29-70.

Figure29-69.EmulationControlRegister(EMCONTROL)

31

16

Reserved

R-0

15

2

1

0

Reserved

SOFT

FREE

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-70.EmulationControlRegister(EMCONTROL)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1

SOFT

Emulationsoftbit.ThisbitisusedinconjunctionwithFREEbittodeterminetheemulationsuspend

mode.ThisbithasnoeffectifFREE=1.

0

Softmodeisdisabled.EMACstopsimmediatelyduringemulationhalt.

1

Softmodeisenabled.Duringemulationhalt,EMACstopsaftercompletionofcurrentoperation.

0

FREE

Emulationfreebit.ThisbitisusedinconjunctionwithSOFTbittodeterminetheemulationsuspend

mode.

0

Free-runningmodeisdisabled.Duringemulationhalt,SOFTbitdeterminesoperationofEMAC.

1

Free-runningmodeisenabled.Duringemulationhalt,EMACcontinuestooperate.

29.5.32FIFOControlRegister(FIFOCONTROL)

TheFIFOcontrolregister(FIFOCONTROL)isshowninFigure29-70anddescribedinTable29-71.

Figure29-70.FIFOControlRegister(FIFOCONTROL)

31

16

Reserved

R-0

15

2

1

0

Reserved

TXCELLTHRESH

R-0

R/W-2h

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-71.FIFOControlRegister(FIFOCONTROL)FieldDescriptions

Bit

Field

Value

Description

31-2

Reserved

0

Reserved

1-0

TXCELLTHRESH

0-3h

TransmitFIFOcellthreshold.Indicatesthenumberof64-bytepacketcellsrequiredtobeinthe

transmitFIFObeforethepackettransferisinitiated.Packetswithfewercellswillbeinitiatedwhen

thecompletepacketiscontainedintheFIFO.Thedefaultvalueis2,but3isalsovalid.0and1are

notvalidvalues.

0-1h

Notavalidvalue.

2h

Two64-bytepacketcellsrequiredtobeinthetransmitFIFO.

3h

Three64-bytepacketcellsrequiredtobeinthetransmitFIFO.

1623

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.33MACConfigurationRegister(MACCONFIG)

TheMACconfigurationregister(MACCONFIG)isshowninFigure29-71anddescribedinTable29-72.

Figure29-71.MACConfigurationRegister(MACCONFIG)

31

24

23

16

TXCELLDEPTH

RXCELLDEPTH

R-3h

R-3h

15

8

7

0

ADDRESSTYPE

MACCFIG

R-2h

R-2h

LEGEND:R=Readonly;-n=valueafterreset

Table29-72.MACConfigurationRegister(MACCONFIG)FieldDescriptions

Bit

Field

Value

Description

31-24

TXCELLDEPTH

3h

Transmitcelldepth.ThesebitsindicatethenumberofcellsinthetransmitFIFO.

23-16

RXCELLDEPTH

3h

Receivecelldepth.ThesebitsindicatethenumberofcellsinthereceiveFIFO.

15-8

ADDRESSTYPE

2h

Addresstype

7-0

MACCFIG

2h

MACconfigurationvalue

29.5.34SoftResetRegister(SOFTRESET)

Thesoftresetregister(SOFTRESET)isshowninFigure29-72anddescribedinTable29-73.

Figure29-72.SoftResetRegister(SOFTRESET)

31

16

Reserved

R-0

15

1

0

Reserved

SOFTRESET

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-73.SoftResetRegister(SOFTRESET)FieldDescriptions

Bit

Field

Value

Description

31-1

Reserved

0

Reserved

0

SOFTRESET

Softwarereset.Writinga1tothisbitcausestheEMAClogictobereset.Softwareresetoccurs

whenthereceiveandtransmitDMAcontrollersareinanidlestatetoavoidlockingupthe

Configurationbus.Afterwritinga1tothisbit,itmaybepolledtodetermineiftheresethas

occurred.Ifa1isread,theresethasnotyetoccurred.Ifa0isread,thenaresethasoccurred.

0

Asoftwareresethasnotoccurred.

1

Asoftwareresethasoccurred.

1624

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.35MACSourceAddressLowBytesRegister(MACSRCADDRLO)

TheMACsourceaddresslowbytesregister(MACSRCADDRLO)isshowninFigure29-73anddescribed

inTable29-74.

Figure29-73.MACSourceAddressLowBytesRegister(MACSRCADDRLO)

31

16

Reserved

R-0

15

8

7

0

MACSRCADDR0

MACSRCADDR1

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-74.MACSourceAddressLowBytesRegister(MACSRCADDRLO)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15-8

MACSRCADDR0

0-FFh

MACsourceaddresslower8-0bits(byte0)

7-0

MACSRCADDR1

0-FFh

MACsourceaddressbits15-8(byte1)

29.5.36MACSourceAddressHighBytesRegister(MACSRCADDRHI)

TheMACsourceaddresshighbytesregister(MACSRCADDRHI)isshowninFigure29-74anddescribed

inTable29-75.

Figure29-74.MACSourceAddressHighBytesRegister(MACSRCADDRHI)

31

24

23

16

MACSRCADDR2

MACSRCADDR3

R/W-0

R/W-0

15

8

7

0

MACSRCADDR4

MACSRCADDR5

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-75.MACSourceAddressHighBytesRegister(MACSRCADDRHI)FieldDescriptions

Bit

Field

Value

Description

31-24

MACSRCADDR2

0-FFh

MACsourceaddressbits23-16(byte2)

23-16

MACSRCADDR3

0-FFh

MACsourceaddressbits31-24(byte3)

15-8

MACSRCADDR4

0-FFh

MACsourceaddressbits39-32(byte4)

7-0

MACSRCADDR5

0-FFh

MACsourceaddressbits47-40(byte5)

1625

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.37MACHashAddressRegister1(MACHASH1)

TheMAChashregistersallowgroupaddressedframestobeacceptedonthebasisofahashfunctionof

theaddress.Thehashfunctioncreatesa6-bitdatavalue(Hash_fun)fromthe48-bitdestinationaddress

(DA)asfollows:

Hash_fun(0)=DA(0)XORDA(6)XORDA(12)XORDA(18)XORDA(24)XORDA(30)XORDA(36)XORDA(42);

Hash_fun(1)=DA(1)XORDA(7)XORDA(13)XORDA(19)XORDA(25)XORDA(31)XORDA(37)XORDA(43);

Hash_fun(2)=DA(2)XORDA(8)XORDA(14)XORDA(20)XORDA(26)XORDA(32)XORDA(38)XORDA(44);

Hash_fun(3)=DA(3)XORDA(9)XORDA(15)XORDA(21)XORDA(27)XORDA(33)XORDA(39)XORDA(45);

Hash_fun(4)=DA(4)XORDA(10)XORDA(16)XORDA(22)XORDA(28)XORDA(34)XORDA(40)XORDA(46);

Hash_fun(5)=DA(5)XORDA(11)XORDA(17)XORDA(23)XORDA(29)XORDA(35)XORDA(41)XORDA(47);

Thisfunctionisusedasanoffsetintoa64-bithashtablestoredinMACHASH1andMACHASH2that

indicateswhetheraparticularaddressshouldbeacceptedornot.

TheMAChashaddressregister1(MACHASH1)isshowninFigure29-75anddescribedinTable29-76.

Figure29-75.MACHashAddressRegister1(MACHASH1)

31

0

MACHASH1

R/W-0

LEGEND:R/W=Read/Write;-n=valueafterreset

Table29-76.MACHashAddressRegister1(MACHASH1)FieldDescriptions

Bit

Field

Value

Description

31-0

MACHASH1

0-FFFFFFFFh

Least-significant32bitsofthehashtablecorrespondingtohashvalues0to31.Ifahash

tablebitisset,thenagroupaddressthathashestothatbitindexisaccepted.

29.5.38MACHashAddressRegister2(MACHASH2)

TheMAChashaddressregister2(MACHASH2)isshowninFigure29-76anddescribedinTable29-77.

Figure29-76.MACHashAddressRegister2(MACHASH2)

31

0

MACHASH2

R/W-0

LEGEND:R/W=Read/Write;-n=valueafterreset

Table29-77.MACHashAddressRegister2(MACHASH2)FieldDescriptions

Bit

Field

Value

Description

31-0

MACHASH2

0-FFFFFFFFh

Most-significant32bitsofthehashtablecorrespondingtohashvalues32to63.Ifahash

tablebitisset,thenagroupaddressthathashestothatbitindexisaccepted.

1626

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.39BackOffTestRegister(BOFFTEST)

Thebackofftestregister(BOFFTEST)isshowninFigure29-77anddescribedinTable29-78.

Figure29-77.BackOffRandomNumberGeneratorTestRegister(BOFFTEST)

31

26

25

16

Reserved

RNDNUM

R-0

R-0

15

12

11

10

9

0

COLLCOUNT

Reserved

TXBACKOFF

R-0

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-78.BackOffTestRegister(BOFFTEST)FieldDescriptions

Bit

Field

Value

Description

31-26

Reserved

0

Reserved

25-16

RNDNUM

0-3FFh

Backoffrandomnumbergenerator.ThisfieldallowstheBackoffRandomNumberGeneratortobe

read.Readingthisfieldreturnsthegenerator'scurrentvalue.Thevalueisresetto0andbegins

countingontheclockafterthedeassertionofreset.

15-12

COLLCOUNT

0-Fh

Collisioncount.Thesebitsindicatethenumberofcollisionsthecurrentframehasexperienced.

11-10

Reserved

0

Reserved

9-0

TXBACKOFF

0-3FFh

Backoffcount.Thisfieldallowsthecurrentvalueofthebackoffcountertobeobservedfortest

purposes.Thisfieldisloadedautomaticallyaccordingtothebackoffalgorithm,andisdecremented

byoneforeachslottimeafterthecollision.

29.5.40TransmitPacingAlgorithmTestRegister(TPACETEST)

Thetransmitpacingalgorithmtestregister(TPACETEST)isshowninFigure29-78anddescribedin

Table29-79.

Figure29-78.TransmitPacingAlgorithmTestRegister(TPACETEST)

31

16

Reserved

R-0

15

5

4

0

Reserved

PACEVAL

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-79.TransmitPacingAlgorithmTestRegister(TPACETEST)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Reserved

4-0

PACEVAL

0-1Fh

Pacingregistercurrentvalue.Anonzerovalueinthisfieldindicatesthattransmitpacingisactive.A

transmitframecollisionordeferralcausesPACEVALtobeloadedwith1Fh(31);goodframe

transmissions(withnocollisionsordeferrals)causePACEVALtobedecrementeddownto0.When

PACEVALisnonzero,thetransmitterdelaysfourInterPacketGapsbetweennewframetransmissions

aftereachsuccessfullytransmittedframethathadnodeferralsorcollisions.Ifatransmitframeis

deferredorsuffersacollision,theIPGtimeisnotstretchedtofourtimesthenormalvalue.Transmit

pacinghelpsreducecaptureeffects,whichimprovesoverallnetworkbandwidth.

1627

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.41ReceivePauseTimerRegister(RXPAUSE)

Thereceivepausetimerregister(RXPAUSE)isshowninFigure29-79anddescribedinTable29-80.

Figure29-79.ReceivePauseTimerRegister(RXPAUSE)

31

16

Reserved

R-0

15

0

PAUSETIMER

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-80.ReceivePauseTimerRegister(RXPAUSE)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15-0

PAUSETIMER

0-FFh

Receivepausetimervalue.Thesebitsallowthecontentsofthereceivepausetimertobe

observed.ThereceivepausetimerisloadedwithFF00hwhentheEMACsendsanoutgoingpause

frame(withpausetimeofFFFFh).Thereceivepausetimerisdecrementedatslottimeintervals.If

thereceivepausetimerdecrementsto0,thenanotheroutgoingpauseframeissentandthe

load/decrementprocessisrepeated.

29.5.42TransmitPauseTimerRegister(TXPAUSE)

Thetransmitpausetimerregister(TXPAUSE)isshowninFigure29-80anddescribedinTable29-81.

Figure29-80.TransmitPauseTimerRegister(TXPAUSE)

31

16

Reserved

R-0

15

0

PAUSETIMER

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table29-81.TransmitPauseTimerRegister(TXPAUSE)FieldDescriptions

Bit

Field

Value

Description

31-16

Reserved

0

Reserved

15-0

PAUSETIMER

0-FFh

Transmitpausetimervalue.Thesebitsallowthecontentsofthetransmitpausetimertobe

observed.Thetransmitpausetimerisloadedbyareceived(incoming)pauseframe,andthen

decrementedatslottimeintervalsdownto0,atwhichtimeEMACtransmitframesareagain

enabled.

1628

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.43MACAddressLowBytesRegister(MACADDRLO)

TheMACaddresslowbytesregisterusedinreceiveaddressmatching(MACADDRLO),isshownin

Figure29-81anddescribedinTable29-82.

Figure29-81.MACAddressLowBytesRegister(MACADDRLO)

31

21

20

19

18

16

Reserved

VALID

MATCHFILT

CHANNEL

R-0

R/W-x

R/W-x

R/W-x

15

8

7

0

MACADDR0

MACADDR1

R/W-x

R/W-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset;-x=valueisindeterminateafterreset

Table29-82.MACAddressLowBytesRegister(MACADDRLO)FieldDescriptions

Bit

Field

Value

Description

31-21

Reserved

0

Reserved

20

VALID

Addressvalidbit.Thisbitshouldbeclearedtozeroforunusedaddresschannels

0

Addressisnotvalidandwillnotbeusedformatchingorfilteringincomingpackets

1

Addressisvalidandwillbeusedformatchingorfilteringincomingpackets

19

MATCHFILT

Matchorfilterbit

0

Theaddresswillbeused(iftheVALIDbitisset)tofilterincomingpacketaddresses

1

Theaddresswillbeused(iftheVALIDbitisset)tomatchincomingpacketaddresses

18-16

CHANNEL

0-7h

Channelselect.Determineswhichreceivechannelavalidaddressmatchwillbetransferredto.The

channelisadon'tcareifMATCHFILTisclearedto0.

15-8

MACADDR0

0-FFh

MACaddresslower8-0bits(byte0)

7-0

MACADDR1

0-FFh

MACaddressbits15-8(byte1)

1629

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.44MACAddressHighBytesRegister(MACADDRHI)

TheMACaddresshighbytesregisterusedinreceiveaddressmatching(MACADDRHI)isshownin

Figure29-82anddescribedinTable29-83.

Figure29-82.MACAddressHighBytesRegister(MACADDRHI)

31

24

23

16

MACADDR2

MACADDR3

R/W-x

R/W-x

15

8

7

0

MACADDR4

MACADDR5

R/W-x

R/W-x

LEGEND:R/W=Read/Write;-x=valueisindeterminateafterreset

Table29-83.MACAddressHighBytesRegister(MACADDRHI)FieldDescriptions

Bit

Field

Value

Description

31-24

MACADDR2

0-FFh

MACsourceaddressbits23-16(byte2)

23-16

MACADDR3

0-FFh

MACsourceaddressbits31-24(byte3)

15-8

MACADDR4

0-FFh

MACsourceaddressbits39-32(byte4)

7-0

MACADDR5

0-FFh

MACsourceaddressbits47-40(byte5).Bit40isthegroupbit.Itisforcedto0andreadas0.

Therefore,onlyunicastaddressesarerepresentedintheaddresstable.

29.5.45MACIndexRegister(MACINDEX)

TheMACindexregister(MACINDEX)isshowninFigure29-83anddescribedinTable29-84.

Figure29-83.MACIndexRegister(MACINDEX)

31

16

Reserved

R-0

15

3

2

0

Reserved

MACINDEX

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table29-84.MACIndexRegister(MACINDEX)FieldDescriptions

Bit

Field

Value

Description

31-3

Reserved

0

Reserved

2-0

MACINDEX

0-7h

MACaddressindex.Alleightaddressessharetheupper40bits.Onlythelowerbyteisuniqueforeach

address.Anaddressiswrittenbyfirstwritingtheaddressnumber(channel)intotheMACINDEX

register.Theupper32bitsoftheaddressarethenwrittentotheMACADDRHIregister,whichis

followedbywritingthelower16bitsoftheaddresstotheMACADDRLOregister.Sincealleight

addressessharetheupper40bitsoftheaddress,theMACADDRHIregisteronlyneedstobewritten

thefirsttime.

1630

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.46TransmitChannelDMAHeadDescriptorPointerRegisters(TX0HDP-TX7HDP)

Thetransmitchannel0-7DMAheaddescriptorpointerregister(TXnHDP)isshowninFigure29-84and

describedinTable29-85.

Figure29-84.TransmitChannelnDMAHeadDescriptorPointerRegister(TXnHDP)

31

0

TXnHDP

R/W-x

LEGEND:R/W=Read/Write;-n=valueafterreset;-x=valueisindeterminateafterreset

Table29-85.TransmitChannelnDMAHeadDescriptorPointerRegister(TXnHDP)

FieldDescriptions

Bit

Field

Value

Description

31-0

TXnHDP

0-FFFFFFFFh

TransmitchannelnDMAHeadDescriptorpointer.WritingatransmitDMAbufferdescriptor

addresstoaheadpointerlocationinitiatestransmitDMAoperationsinthequeueforthe

selectedchannel.Writingtotheselocationswhentheyarenonzeroisanerror(exceptatreset).

Hostsoftwaremustinitializetheselocationsto0onreset.

29.5.47ReceiveChannelDMAHeadDescriptorPointerRegisters(RX0HDP-RX7HDP)

Thereceivechannel0-7DMAheaddescriptorpointerregister(RXnHDP)isshowninFigure29-85and

describedinTable29-86.

Figure29-85.ReceiveChannelnDMAHeadDescriptorPointerRegister(RXnHDP)

31

0

RXnHDP

R/W-x

LEGEND:R/W=Read/Write;-n=valueafterreset;-x=valueisindeterminateafterreset

Table29-86.ReceiveChannelnDMAHeadDescriptorPointerRegister(RXnHDP)

FieldDescriptions

Bit

Field

Value

Description

31-0

RXnHDP

0-FFFFFFFFh

ReceivechannelnDMAHeadDescriptorpointer.WritingareceiveDMAbufferdescriptor

addresstothislocationallowsreceiveDMAoperationsintheselectedchannelwhenachannel

frameisreceived.Writingtotheselocationswhentheyarenonzeroisanerror(exceptatreset).

Hostsoftwaremustinitializetheselocationsto0onreset.

1631

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.48TransmitChannelCompletionPointerRegisters(TX0CP-TX7CP)

Thetransmitchannel0-7completionpointerregister(TXnCP)isshowninFigure29-86anddescribedin

Table29-87.

Figure29-86.TransmitChannelnCompletionPointerRegister(TXnCP)

31

0

TXnCP

R/W-x

LEGEND:R/W=Read/Write;-n=valueafterreset;-x=valueisindeterminateafterreset

Table29-87.TransmitChannelnCompletionPointerRegister(TXnCP)FieldDescriptions

Bit

Field

Value

Description

31-0

TXnCP

0-FFFFFFFFh

Transmitchannelncompletionpointerregisteriswrittenbythehostwiththebufferdescriptor

addressforthelastbufferprocessedbythehostduringinterruptprocessing.TheEMACusesthe

valuewrittentodetermineiftheinterruptshouldbedeasserted.

29.5.49ReceiveChannelCompletionPointerRegisters(RX0CP-RX7CP)

Thereceivechannel0-7completionpointerregister(RXnCP)isshowninFigure29-87anddescribedin

Table29-88.

Figure29-87.ReceiveChannelnCompletionPointerRegister(RXnCP)

31

0

RXnCP

R/W-x

LEGEND:R/W=Read/Write;-n=valueafterreset;-x=valueisindeterminateafterreset

Table29-88.ReceiveChannelnCompletionPointerRegister(RXnCP)FieldDescriptions

Bit

Field

Value

Description

31-0

RXnCP

0-FFFFFFFFh

Receivechannelncompletionpointerregisteriswrittenbythehostwiththebufferdescriptor

addressforthelastbufferprocessedbythehostduringinterruptprocessing.TheEMACusesthe

valuewrittentodetermineiftheinterruptshouldbedeasserted.

1632

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.50NetworkStatisticsRegisters

TheEMAChasasetofstatisticsthatrecordeventsassociatedwithframetraffic.Thestatisticsvaluesare

clearedtozero38clocksaftertherisingedgeofreset.WhentheGMIIENbitintheMACCONTROL

registerisset,allstatisticsregisters(seeFigure29-88)arewrite-to-decrement.Thevaluewrittenis

subtractedfromtheregistervaluewiththeresultstoredintheregister.Ifavaluegreaterthanthestatistics

valueiswritten,thenzeroiswrittentotheregister(writingFFFFFFFFhclearsastatisticslocation).When

theGMIIENbitiscleared,allstatisticsregistersareread/write(normalwritedirect,sowriting00000000h

clearsastatisticslocation).Allwriteaccessesmustbe32-bitaccesses.

Thestatisticsinterrupt(STATPEND)isissued,ifenabled,whenanystatisticsvalueisgreaterthanor

equalto80000000h.Thestatisticsinterruptisremovedbywritingtodecrementanystatisticsvalue

greaterthan80000000h.Thestatisticsaremappedintointernalmemoryspaceandare32-bitswide.All

statisticsrolloverfromFFFFFFFFhto00000000h.

Figure29-88.StatisticsRegister

31

0

COUNT

R/WD-0

LEGEND:R/W=Read/Write;WD=Writetodecrement;-n=valueafterreset

29.5.50.1GoodReceiveFramesRegister(RXGOODFRAMES)

ThetotalnumberofgoodframesreceivedontheEMAC.Agoodframeisdefinedashavingallofthe

following:

•AnydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,ormatched

duetopromiscuousmode

•Wasoflength64toRXMAXLENbytesinclusive

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.2BroadcastReceiveFramesRegister(RXBCASTFRAMES)

ThetotalnumberofgoodbroadcastframesreceivedontheEMAC.Agoodbroadcastframeisdefinedas

havingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforaddressFF-FF-FF-FF-FF-FFhonly

•Wasoflength64toRXMAXLENbytesinclusive

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.3MulticastReceiveFramesRegister(RXMCASTFRAMES)

ThetotalnumberofgoodmulticastframesreceivedontheEMAC.Agoodmulticastframeisdefinedas

havingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanymulticastaddressotherthanFF-FF-FF-FF-

FF-FFh

•Wasoflength64toRXMAXLENbytesinclusive

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

1633

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.50.4PauseReceiveFramesRegister(RXPAUSEFRAMES)

ThetotalnumberofIEEE802.3XpauseframesreceivedbytheEMAC(whetheracteduponornot).A

pauseframeisdefinedashavingallofthefollowing:

•Containedanyunicast,broadcast,ormulticastaddress

•Containedthelength/typefieldvalue88.08handtheopcode0001h

•Wasoflength64toRXMAXLENbytesinclusive

•HadnoCRCerror,alignmenterror,orcodeerror

•Pause-frameshadbeenenabledontheEMAC(TXFLOWENbitissetinMACCONTROL).

TheEMACcouldhavebeenineitherhalf-duplexorfull-duplexmode.SeeSection29.2.6.5fordefinitions

ofalignment,code,andCRCerrors.Overrunshavenoeffectonthisstatistic.

29.5.50.5ReceiveCRCErrorsRegister(RXCRCERRORS)

ThetotalnumberofframesreceivedontheEMACthatexperiencedaCRCerror.AframewithCRC

errorsisdefinedashavingallofthefollowing:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•Wasoflength64toRXMAXLENbytesinclusive

•Hadnoalignmentorcodeerror

•HadaCRCerror.ACRCerrorisdefinedashavingallofthefollowing:

–Aframecontaininganevennumberofnibbles

–Failstheframechecksequencetest

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.6ReceiveAlignment/CodeErrorsRegister(RXALIGNCODEERRORS)

ThetotalnumberofframesreceivedontheEMACthatexperiencedanalignmenterrororcodeerror.

Suchaframeisdefinedashavingallofthefollowing:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•Wasoflength64toRXMAXLENbytesinclusive

•Hadeitheranalignmenterrororacodeerror

–Analignmenterrorisdefinedashavingallofthefollowing:

•Aframecontaininganoddnumberofnibbles

•Failstheframechecksequencetest,ifthefinalnibbleisignored

–AcodeerrorisdefinedasaframethathasbeendiscardedbecausetheEMACsMII_RXERpinis

drivenwithaoneforatleastonebit-time'sdurationatanypointduringtheframe'sreception.

Overrunshavenoeffectonthisstatistic.

CRCalignmentorcodeerrorscanbecalculatedbysummingreceivealignmenterrors,receivecode

errors,andreceiveCRCerrors.

1634

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.50.7ReceiveOversizedFramesRegister(RXOVERSIZED)

ThetotalnumberofoversizedframesreceivedontheEMAC.Anoversizedframeisdefinedashavingall

ofthefollowing:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•WasgreaterthanRXMAXLENinbytes

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.8ReceiveJabberFramesRegister(RXJABBER)

ThetotalnumberofjabberframesreceivedontheEMAC.Ajabberframeisdefinedashavingallofthe

following:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•WasgreaterthanRXMAXLENbyteslong

•HadaCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.9ReceiveUndersizedFramesRegister(RXUNDERSIZED)

ThetotalnumberofundersizedframesreceivedontheEMAC.Anundersizedframeisdefinedashaving

allofthefollowing:

•Wasanydataframethatmatchedaunicast,broadcast,ormulticastaddress,ormatcheddueto

promiscuousmode

•Waslessthan64byteslong

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.10ReceiveFrameFragmentsRegister(RXFRAGMENTS)

ThetotalnumberofframefragmentsreceivedontheEMAC.Aframefragmentisdefinedashavingallof

thefollowing:

•Anydataframe(addressmatchingdoesnotmatter)

•Waslessthan64byteslong

•HadaCRCerror,alignmenterror,orcodeerror

•Wasnottheresultofacollisioncausedbyhalfduplex,collisionbasedflowcontrol

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.11FilteredReceiveFramesRegister(RXFILTERED)

ThetotalnumberofframesreceivedontheEMACthattheEMACaddressmatchingprocessindicated

shouldbediscarded.Suchaframeisdefinedashavingallofthefollowing:

•Wasanydataframe(notMACcontrolframe)destinedforanyunicast,broadcast,ormulticastaddress

•DidnotexperienceanyCRCerror,alignmenterror,codeerror

•Theaddressmatchingprocessdecidedthattheframeshouldbediscarded(filtered)becauseitdidnot

matchtheunicast,broadcast,ormulticastaddress,anditdidnotmatchduetopromiscuousmode.

1635

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

TodeterminethenumberofreceiveframesdiscardedbytheEMACforanyreason,sumthefollowing

statistics(promiscuousmodedisabled):

•Receivefragments

•Receiveundersizedframes

•ReceiveCRCerrors

•Receivealignment/codeerrors

•Receivejabbers

•Receiveoverruns

•Receivefilteredframes

Thismaynotbeanexactcountbecausethereceiveoverrunsstatisticisindependentoftheother

statistics,soifanoverrunoccursatthesametimeasoneoftheotherdiscardreasons,thentheabove

sumdouble-countsthatframe.

29.5.50.12ReceiveQOSFilteredFramesRegister(RXQOSFILTERED)

ThetotalnumberofframesreceivedontheEMACthatwerefilteredduetoreceivequalityofservice

(QOS)filtering.Suchaframeisdefinedashavingallofthefollowing:

•AnydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,ormatched

duetopromiscuousmode

•Theframedestinationchannelflowcontrolthresholdregister(RXnFLOWTHRESH)valuewasgreater

thanorequaltothechannel'scorrespondingfreebufferregister(RXnFREEBUFFER)value

•Wasoflength64toRXMAXLEN

•RXQOSENbitissetinRXMBPENABLE

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.13ReceiveOctetFramesRegister(RXOCTETS)

ThetotalnumberofbytesinallgoodframesreceivedontheEMAC.Agoodframeisdefinedashavingall

ofthefollowing:

•AnydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,ormatched

duetopromiscuousmode

•Wasoflength64toRXMAXLENbytesinclusive

•HadnoCRCerror,alignmenterror,orcodeerror

SeeSection29.2.6.5fordefinitionsofalignment,code,andCRCerrors.Overrunshavenoeffectonthis

statistic.

29.5.50.14GoodTransmitFramesRegister(TXGOODFRAMES)

ThetotalnumberofgoodframestransmittedontheEMAC.Agoodframeisdefinedashavingallofthe

following:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Wasanylength

•Hadnolateorexcessivecollisions,nocarrierloss,andnounderrun

1636

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.50.15BroadcastTransmitFramesRegister(TXBCASTFRAMES)

ThetotalnumberofgoodbroadcastframestransmittedontheEMAC.Agoodbroadcastframeisdefined

ashavingallofthefollowing:

•AnydataorMACcontrolframedestinedforaddressFF-FF-FF-FF-FF-FFhonly

•Wasofanylength

•Hadnolateorexcessivecollisions,nocarrierloss,andnounderrun

29.5.50.16MulticastTransmitFramesRegister(TXMCASTFRAMES)

ThetotalnumberofgoodmulticastframestransmittedontheEMAC.Agoodmulticastframeisdefinedas

havingallofthefollowing:

•AnydataorMACcontrolframedestinedforanymulticastaddressotherthanFF-FF-FF-FF-FF-FFh

•Wasofanylength

•Hadnolateorexcessivecollisions,nocarrierloss,andnounderrun

29.5.50.17PauseTransmitFramesRegister(TXPAUSEFRAMES)

ThetotalnumberofIEEE802.3XpauseframestransmittedbytheEMAC.Pauseframescannotunderrun

orcontainaCRCerrorbecausetheyarecreatedinthetransmittingMAC,sotheseerrorconditionshave

noeffectonthisstatistic.Pauseframessentbysoftwarearenotincludedinthiscount.Sincepause

framesareonlytransmittedinfull-duplexmode,carrierlossandcollisionshavenoeffectonthisstatistic.

Transmittedpauseframesarealways64-bytemulticastframessoappearinthemulticasttransmitframes

registerand64octectframesregisterstatistics.

29.5.50.18DeferredTransmitFramesRegister(TXDEFERRED)

ThetotalnumberofframestransmittedontheEMACthatfirstexperienceddeferment.Suchaframeis

definedashavingallofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress

•Wasanysize

•Hadnocarrierlossandnounderrun

•Experiencednocollisionsbeforebeingsuccessfullytransmitted

•Foundthemediumbusywhentransmissionwasfirstattempted,sohadtowait.

CRCerrorshavenoeffectonthisstatistic.

29.5.50.19TransmitCollisionFramesRegister(TXCOLLISION)

ThetotalnumberoftimesthattheEMACexperiencedacollision.Collisionsoccurundertwo

circumstances:

•WhenatransmitdataorMACcontrolframehasallofthefollowing:

–Wasdestinedforanyunicast,broadcast,ormulticastaddress

–Wasanysize

–Hadnocarrierlossandnounderrun

–Experiencedacollision.Ajamsequenceissentforeverynon-latecollision,sothisstatistic

incrementsoneachoccasionifaframeexperiencesmultiplecollisions(andincrementsonlate

collisions).

•WhentheEMACisinhalf-duplexmode,flowcontrolisactive,andaframereceptionbegins.

CRCerrorshavenoeffectonthisstatistic.

1637

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.50.20TransmitSingleCollisionFramesRegister(TXSINGLECOLL)

ThetotalnumberofframestransmittedontheEMACthatexperiencedexactlyonecollision.Suchaframe

isdefinedashavingallofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress

•Wasanysize

•Hadnocarrierlossandnounderrun

•Experiencedonecollisionbeforesuccessfultransmission.Thecollisionwasnotlate.

CRCerrorshavenoeffectonthisstatistic.

29.5.50.21TransmitMultipleCollisionFramesRegister(TXMULTICOLL)

ThetotalnumberofframestransmittedontheEMACthatexperiencedmultiplecollisions.Suchaframeis

definedashavingallofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress

•Wasanysize

•Hadnocarrierlossandnounderrun

•Experienced2to15collisionsbeforebeingsuccessfullytransmitted.Noneofthecollisionswerelate.

CRCerrorshavenoeffectonthisstatistic.

29.5.50.22TransmitExcessiveCollisionFramesRegister(TXEXCESSIVECOLL)

Thetotalnumberofframeswhentransmissionwasabandonedduetoexcessivecollisions.Suchaframe

isdefinedashavingallofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress

•Wasanysize

•Hadnocarrierlossandnounderrun

•Experienced16collisionsbeforeabandoningallattemptsattransmittingtheframe.Noneofthe

collisionswerelate.

CRCerrorshavenoeffectonthisstatistic.

29.5.50.23TransmitLateCollisionFramesRegister(TXLATECOLL)

Thetotalnumberofframeswhentransmissionwasabandonedduetoalatecollision.Suchaframeis

definedashavingallofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress

•Wasanysize

•Hadnocarrierlossandnounderrun

•Experiencedacollisionlaterthan512bit-timesintothetransmission.Theremayhavebeenupto15

previous(non-late)collisionsthathadpreviouslyrequiredthetransmissiontobereattempted.Thelate

collisionsstatisticdominatesoverthesingle,multiple,andexcessivecollisionsstatistics.Ifalate

collisionoccurs,theframeisnotcountedinanyoftheseotherthreestatistics.

CRCerrors,carrierloss,andunderrunhavenoeffectonthisstatistic.

29.5.50.24TransmitUnderrunErrorRegister(TXUNDERRUN)

ThenumberofframessentbytheEMACthatexperiencedFIFOunderrun.Latecollisions,CRCerrors,

carrierloss,andunderrunhavenoeffectonthisstatistic.

1638

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.50.25TransmitCarrierSenseErrorsRegister(TXCARRIERSENSE)

ThetotalnumberofframesontheEMACthatexperiencedcarrierloss.Suchaframeisdefinedashaving

allofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress

•Wasanysize

•Thecarriersenseconditionwaslostorneverassertedwhentransmittingtheframe(theframeisnot

retransmitted)

CRCerrorsandunderrunhavenoeffectonthisstatistic.

29.5.50.26TransmitOctetFramesRegister(TXOCTETS)

ThetotalnumberofbytesinallgoodframestransmittedontheEMAC.Agoodframeisdefinedashaving

allofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Wasanylength

•Hadnolateorexcessivecollisions,nocarrierloss,andnounderrun

29.5.50.27TransmitandReceive64OctetFramesRegister(FRAME64)

Thetotalnumberof64-byteframesreceivedandtransmittedontheEMAC.Suchaframeisdefinedas

havingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Didnotexperiencelatecollisions,excessivecollisions,underrun,orcarriersenseerror

•Wasexactly64-byteslong.(Iftheframewasbeingtransmittedandexperiencedcarrierlossthat

resultedinaframeofthissizebeingtransmitted,thentheframeisrecordedinthisstatistic).

CRCerrors,alignment/codeerrors,andoverrunsdonotaffecttherecordingofframesinthisstatistic.

29.5.50.28TransmitandReceive65to127OctetFramesRegister(FRAME65T127)

Thetotalnumberof65-byteto127-byteframesreceivedandtransmittedontheEMAC.Suchaframeis

definedashavingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Didnotexperiencelatecollisions,excessivecollisions,underrun,orcarriersenseerror

•Was65-bytesto127-byteslong

CRCerrors,alignment/codeerrors,underruns,andoverrunsdonotaffecttherecordingofframesinthis

statistic.

29.5.50.29TransmitandReceive128to255OctetFramesRegister(FRAME128T255)

Thetotalnumberof128-byteto255-byteframesreceivedandtransmittedontheEMAC.Suchaframeis

definedashavingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Didnotexperiencelatecollisions,excessivecollisions,underrun,orcarriersenseerror

•Was128-bytesto255-byteslong

CRCerrors,alignment/codeerrors,underruns,andoverrunsdonotaffecttherecordingofframesinthis

statistic.

1639

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






EMACModuleRegisterswww.ti.com

29.5.50.30TransmitandReceive256to511OctetFramesRegister(FRAME256T511)

Thetotalnumberof256-byteto511-byteframesreceivedandtransmittedontheEMAC.Suchaframeis

definedashavingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Didnotexperiencelatecollisions,excessivecollisions,underrun,orcarriersenseerror

•Was256-bytesto511-byteslong

CRCerrors,alignment/codeerrors,underruns,andoverrunsdonotaffecttherecordingofframesinthis

statistic.

29.5.50.31TransmitandReceive512to1023OctetFramesRegister(FRAME512T1023)

Thetotalnumberof512-byteto1023-byteframesreceivedandtransmittedontheEMAC.Suchaframeis

definedashavingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Didnotexperiencelatecollisions,excessivecollisions,underrun,orcarriersenseerror

•Was512-bytesto1023-byteslong

CRCerrors,alignment/codeerrors,andoverrunsdonotaffecttherecordingofframesinthisstatistic.

29.5.50.32TransmitandReceive1024toRXMAXLENOctetFramesRegister(FRAME1024TUP)

Thetotalnumberof1024-bytetoRXMAXLEN-byteframesreceivedandtransmittedontheEMAC.Sucha

frameisdefinedashavingallofthefollowing:

•AnydataorMACcontrolframethatwasdestinedforanyunicast,broadcast,ormulticastaddress

•Didnotexperiencelatecollisions,excessivecollisions,underrun,orcarriersenseerror

•Was1024-bytestoRXMAXLEN-byteslong

CRC/alignment/codeerrors,underruns,andoverrunsdonotaffectframerecordinginthisstatistic.

29.5.50.33NetworkOctetFramesRegister(NETOCTETS)

ThetotalnumberofbytesofframedatareceivedandtransmittedontheEMAC.Eachframecountedhas

allofthefollowing:

•WasanydataorMACcontrolframedestinedforanyunicast,broadcast,ormulticastaddress(address

matchdoesnotmatter)

•Wasofanysize(includinglessthan64-byteandgreaterthanRXMAXLEN-byteframes)

Alsocountedinthisstatisticis:

•Everybytetransmittedbeforeacarrier-losswasexperienced

•Everybytetransmittedbeforeeachcollisionwasexperienced(multipleretriesarecountedeachtime)

•EverybytereceivediftheEMACisinhalf-duplexmodeuntilajamsequencewastransmittedtoinitiate

flowcontrol.(Thejamsequenceisnotcountedtopreventdouble-counting).

Errorconditionssuchasalignmenterrors,CRCerrors,codeerrors,overruns,andunderrunsdonotaffect

therecordingofbytesinthisstatistic.Theobjectiveofthisstatisticistogiveareasonableindicationof

Ethernetutilization.

1640

EMAC/MDIOModule

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comEMACModuleRegisters

29.5.50.34ReceiveFIFOorDMAStartofFrameOverrunsRegister(RXSOFOVERRUNS)

ThetotalnumberofframesreceivedontheEMACthathadeitheraFIFOorDMAstartofframe(SOF)

overrun.AnSOFoverrunframeisdefinedashavingallofthefollowing:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•Wasofanysize(includinglessthan64-byteandgreaterthanRXMAXLEN-byteframes)

•TheEMACwasunabletoreceiveitbecauseitdidnothavetheresourcestoreceiveit(cellFIFOfullor

noDMAbufferavailableatthestartoftheframe).

CRCerrors,alignmenterrors,andcodeerrorshavenoeffectonthisstatistic.

29.5.50.35ReceiveFIFOorDMAMiddleofFrameOverrunsRegister(RXMOFOVERRUNS)

ThetotalnumberofframesreceivedontheEMACthathadeitheraFIFOorDMAmiddleofframe(MOF)

overrun.AnMOFoverrunframeisdefinedashavingallofthefollowing:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•Wasofanysize(includinglessthan64-byteandgreaterthanRXMAXLEN-byteframes)

•TheEMACwasunabletoreceiveitbecauseitdidnothavetheresourcestoreceiveit(cellFIFOfullor

noDMAbufferavailableaftertheframewassuccessfullystarted-noSOFoverrun).

CRCerrors,alignmenterrors,andcodeerrorshavenoeffectonthisstatistic.

29.5.50.36ReceiveDMAOverrunsRegister(RXDMAOVERRUNS)

ThetotalnumberofframesreceivedontheEMACthathadeitheraDMAstartofframe(SOF)overrunor

aDMAmiddleofframe(MOF)overrun.AreceiveDMAoverrunframeisdefinedashavingallofthe

following:

•WasanydataorMACcontrolframethatmatchedaunicast,broadcast,ormulticastaddress,or

matchedduetopromiscuousmode

•Wasofanysize(includinglessthan64-byteandgreaterthanRXMAXLEN-byteframes)

•TheEMACwasunabletoreceiveitbecauseitdidnothavetheDMAbufferresourcestoreceiveit

(zeroheaddescriptorpointeratthestartorduringthemiddleoftheframereception).

CRCerrors,alignmenterrors,andcodeerrorshavenoeffectonthisstatistic.

1641

SPNU499B–November2012–RevisedAugust2013

EMAC/MDIOModule

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter30

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

ThischapterdescribesthefunctionalityoftheDataModificationModule(DMM),whichprovidesthe

capabilitytomodifydataintheentire4GBaddressspaceofthedevicefromanexternalperipheral,with

minimalinterruptionoftheapplication.

Topic...........................................................................................................................Page

30.1Overview.......................................................................................................1643

30.2ModuleOperation..........................................................................................1644

30.3ControlRegisters...........................................................................................1649

1642

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




SIZEADDRESSATADATADATAADDRESSBASEADDRSIZE

To Main SCR

ControlSIZESTATDESTADDRATADATA310630870Buffer2Buffer1Memory protection(destination registers)Deserializer

…



www.ti.comOverview

30.1Overview

30.1.1Features

TheDMMmodulehasthefollowingfeatures:

•Actsasabusmaster,thusenablingdirectwritestothe4GBaddressspacewithoutCPUintervention

•Writestomemorylocationsspecifiedinthereceivedpacket(leveragespacketsdefinedbytracemode

oftheRAMtraceport(RTP)module

•Writesreceiveddatatoconsecutiveaddresses,whicharespecifiedbytheDMMmodule(leverages

packetsdefinedbydirectdatamodeofRTPmodule)

•Configurableportwidth(1,2,4,8,16pins)

•Upto100Mbit/spindatarate

•UnusedpinsconfigurableasGIOpins

30.1.2BlockDiagram

Figure30-1showstheblockdiagramfortheDMM.

Figure30-1.DMMBlockDiagram

1643

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

30.2ModuleOperation

TheDMMreceivesdataovertheDMMpinsfromexternalsystemsandwritesthereceiveddatadirectlyto

thebaseaddressprogrammedinthemoduleplusoffsetaddressgiveninthepacketorintoabuffer

specifiedbystartaddressandlength.ItleveragestheprotocoldefinedbytheRAMTracePort(RTP)

moduletohaveacommoninterfacedefinitionforexternalsystems.ItcanalsobeusedtoconnectanRTP

andDMMmoduletogetherforfastprocessorintercommunication.

TheDMMmoduleprovidestwomodesofoperation:

•TraceMode:Inthismode,theDMMwritesthereceiveddatadirectlytoanaddresswhichiscalculated

fromthebaseaddressprogrammedintothedestinationregister(Section30.3.12;Section30.3.14)

plustheoffsetaddresscontainedinthereceivedpacket.Aninterruptcanbegeneratedwhendatais

writtenthelowestaddressofaprogrammedregion.Thiscapabilityenablesthesendertoraisean

interruptatthereceiverwhilesendingspecificinformation.

•DirectDataMode:Inthismode,theDMMwritesthereceiveddataintoanaddressrangeofthe4GB

addressspace.Thebufferstartaddress(Section30.3.8)andblocksize(Section30.3.9)is

programmableintheDMMmodule.Whenthebufferreachesitsendaddress,thebufferpointerwraps

aroundandpointstothebeginningofthebufferagain.TheEO_BUFFflag(Section30.3.5)willbeset

andifenabled,aninterruptwillbegeneratedtoindicateabuffer-fullcondition.Anotherinterrupt,can

beconfiguredtoindicatedifferentbufferfilllevels.Thiscanbeaccomplishedbyprogrammingacertain

filllevelintotheDMMINTPTregister(Section30.3.11).ThePROG_BUFFflag(Section30.3.5)

indicatesthatthislevelhasbeenreached.

Datawillbecapturedbytheinputbufferandmovedtotheappropriatebitfieldinthedeseralizer.When

thedeseralizeriscompletelyfull,thedatawillbemovedtotheoutputbufferregister.Atwo-levelbufferis

implementedtoavoidoverflowconditionsiftheinternalbusisoccupiedbyothertransactions.Inaddition

theDMMENAsignalcanbeusedtosignaltheexternalhardwarethatanoverflowmightoccurifmore

dataissent.TheautomaticgenerationoftheDMMENAsignalcanbeconfiguredbysettingtheENAFUNC

bit(Section30.3.16).WhiletheDMMENAsignalisactive,theDMMmodulewillnotreceiveanynewdata.

TheDMMisabusmasterandforwardsthereceiveddatatothebussystem.Thewriteoperationwillbe

minimallyintrusivetotheprogramflow,becausetheCPU/DMAaccesswillonlybeblockedifthe

CPU/DMAaccessesthesameresourceastheDMM.

TopreventanexternalsystemfromoverwritingcriticaldatainthememorywhileconfiguredinTrace

Mode,amemoryprotectionmechanismisimplementedviaaprogrammablestartaddressandblocksize

ofaregion.Amaximumoffourdestinationswithtworegionseacharesupported.

Forproperoperation,atleastDMMCLK,DMMSYNCandDMMDATA[0]needtobeprogrammedin

functionalmode(Section30.3.16).Ifalargeamountofdatashouldbetransmittedinashorttime,more

datapinsshouldbeusedinfunctionalmode.Themodulesupports1,2,4,8,or16-pinconfigurations.

ThemodulecanbeconfiguredtohandleafreerunningclockprovidedonDMMCLK(Section30.3.1).

ClockpulsesbetweentwoDMMSYNCpulseswhichexceedthenumberofvalidclockpulsesforapacket

willbeignored.

30.2.1DataFormat

Belowisadescriptionofthepacketandframeformat.

30.2.1.1ClockingScheme

TheDMMsupportsbothcontinuousandnoncontinuousclocking.TheclockreceivedonDMMCLKinthe

continuousclockingschemeisafree-runningclock.Innoncontinuousclockingscheme,theclockwillstop

aftereachpacketandwillstartwiththereceptionofaDMMSYNCsignal.

30.2.1.2TraceModePacket

Figure30-2illustratesthetracemodepacketformat.Onepacketconsistsof2bits(DEST)denotingthe

destinationinwhichthedataisstored,2statusbits(STAT),the2-bitSIZEofthedata,the18-bitaddress

ofwherethedatashouldbewrittento,andavariabledatafield.

1644

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




8, 16, or 32 bitHWDATA(xx–0)

2+2+2+18+2     x8 bitSIZEDEST(1–0)STAT(1–0)SIZE(1–0)ADDR(17–0)DATA(xx–0)



www.ti.comModuleOperation

TheDESTbits(Table30-1)willbeusedtodeterminewhichdestinationregisterappliestothetransmitted

dataandthereceivedaddressdeterminesifthepacketfallsintoavalidregionofthedestinationarea.If

theaddressisvalid,thebaseaddress,programmedinoneofthedestinationregisters

(Section30.3.12;Section30.3.14)ofthisparticularregionwillbeappliedtocreatethecomplete32-bit

addressforthedestination.TheDMMmoduleonlytakesactionona"11"settingoftheSTATbits

(Table30-2).Thissignalsthatanoverflowinthetransmittinghardwaremodulehasoccured.Ifthisisthe

casetheSRC_OVFflag(Section30.3.5)willbesetandthereceiveddatawillbewrittentotheaddress

specifiedinthepacket.ThesizeinformationofthedatatransmittedinthepacketisdenotedintheSIZE

bits(Table30-3)ofthepacket.DependingontheSIZEinformation,themoduleexpectstoreceiveonly

thisamountofdata.

Figure30-2.TraceModePacketFormat

Table30-1throughTable30-3illustratetheencodingofpacketformatintracemode.

Table30-1.EncodingofDestinationBitsinTraceModePacketFormat

DEST[1:0]

Destination

00

Dest0

01

Dest1

10

Dest2

11

Dest3

Table30-2.EncodingofStatusBitsinTraceModePacketFormat

STAT[1:0]

Status

00

don'tcare

01

don'tcare

10

don'tcare

11

overflow

Table30-3.EncodingofWriteSizeinPacketFormat

SIZE[1:0]

WriteSize

00

8bit

01

16bit

10

32bit

11

64bit

30.2.1.3DirectDataModePacket

Figure30-3illustratesthedirectdatamodepacketformat.

Figure30-3.DirectDataModePacketFormat

1645

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ModuleOperationwww.ti.com

Thepacketconsistsonlyofdatabitsandnoheaderinformation.Itcanbe8-,16-or32-bitwide.Avariable

packetwidthisnotsupportedbecausetheDMMmodulewillcheckthenumberofincomingbits(DMMCLK

cycles)forerrordetection.TheDMMwillwritethereceiveddatatothedestinationoncetheprogrammed

numberofbitshasbeenreceived.

Iftheprogrammedwordwidthdoesnotcorrespondtothereceiveddata,thefollowingactionswillbe

taken:

•Ifthereceiveddataisgreaterthantheprogrammedwidth,onlytheconfigurednumberofbitsare

transferredintotheRAMbuffer,theadditionalbitsarediscarded.

•Ifthereceivednumberofbitsissmallerthantheprogrammedwidth,nodatawillbewrittentothe

buffer,becauseanewDMMSYNCsignalhasbeenreceivedbeforetheexpectednumberofbits.

30.2.2DataPort

Thepacketwillbereceivedinseveralsubpackets,dependingonthewidthoftheexternaldatabus

(DMMDATA[y:0])andtheamountofdatatobetransmitted.Table30-4illustratesthenumberofclock

cyclesrequiredforacompletepacket.

Table30-4.NumberofClockCyclesperPacket

WriteSizeinBits

PortWidth/Pins

8

16

32

64

1

32

40

56

88

2

16

20

28

44

4

8

10

14

22

8

4

5

7

11

16

2

3

4

6

TheusercanprogramtheportwidthintheDMMPC0register(Section30.3.16).Thisfeatureallowspins

thatarenotusedforDMMfunctionalitytobeusedasGIOpins.OnlythepinsshowninTable30-5canbe

usedforadesiredportwidth.

Table30-5.PinsUsedforDataCommunication

PortWidth

PinsUsed

1

DMMDATA[0]

2

DMMDATA[1:0]

4

DMMDATA[3:0]

8

DMMDATA[7:0]

16

DMMDATA[15:0]

NOTE:IfpinsotherthantheonesspecifiedinTable30-5areprogrammedasfunctionalpinsfora

desiredportwidth,thereceiveddatawillbecorruptedandwillnotbetransferredtothe

deserializer.

NOTE:IfDMMCLKorDMMSYNCareprogrammedasnonfunctionalpins,functionaloperationwill

notoccur.

1646

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DEST[1]SIZE[1]ADDR[15]ADDR[11]ADDR[7]ADDR[3]DATA[7]DATA[3]DEST[0]ADDR[13]ADDR[6]ADDR[2]DATA[2]DATA[6]DATA[5]DATA[4]ADDR[9]ADDR[5]ADDR[1]DATA[1]ADDR[4]ADDR[0]DATA[0]SIZE[0]ADDR[14]ADDR[10]ADDR[12]ADDR[8]STAT[1]STAT[0]ADDR[17]ADDR[16]DMMCLKDMMSYNCDMMDATA[0]DMMDATA[1]DMMDATA[2]DMMDATA[3]

Packet1Packet2Packet3Packet4Packet1Packet2Packet3DMMCLKDMMSYNCDMMDATA



www.ti.comModuleOperation

30.2.2.1SignalDescription

DMMSYNC

Thissignalhastobeprovidedbyexternalhardware.Itsignalsthestartofanew

packet.Ithastobeactive(high)foronefullDMMCLKcycle,startingwiththerising

edgeofDMMCLK.IftheDMMSYNCpulseislongerthanasingleDMMCLKcycleand

twofallingedgesofDMMCLKseeahighpulseonDMMSYNC,themodulewilltreat

thesecondDMMSYNCpulseasthestartofapacketandwillflaga

PACKET_ERR_INT(Section30.3.5).

DMMCLK

Theclockisexternallygeneratedandcanbesuspendedbetweentwopackets.For

thisfeature,CONTCLKmustbesetto0(Section30.3.1).Iftheclockisnotstopped

betweentwopackets,CONTCLKmustbesetto1.Datawillbelatchedonthefalling

edgeoftheDMMCLKsignal.

DMMENA

Thissignalispulledhighifnonewdatashouldbereceivedviathedatapins,because

ofapotentialoverflowsituation.

DMMDATA[15:0

Thesepinsreceivethepacketinformationtransmittedbytheexternalhardware.Data

]

islatchedonthefallingedgeofDMMCLK.

Figure30-4showsanexampleofmultiplepacketsreceivedduringtracemode,innoncontinuousclock

configuration.

Figure30-4.PacketSyncSignalExample

Figure30-5showsanexampleofa4-bitdataportwith8-bitreceivedata(A5h)tobewrittenintoDEST1

(address00012345h)onatracemodepacket.

Figure30-5.ExampleSinglePacketTransmission

30.2.3ErrorHandling

Themodulewillgeneratetwodifferentkindoferrors.Onceanerrorconditionisrecognized,aninterrupt

willbegeneratedifenabled.

1647

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




Level0InterrupttoVIMLevel1InterrupttoVIMModuleInterruptFlagInterruptEnable

InterruptLevel



ModuleOperationwww.ti.com

30.2.3.1OverflowError

Thiserrorissignaledwhenthemodulehasreceivednewdatabeforethepreviousdatawaswrittentothe

destinationaddress.Iftheinternalbuffersarefull,theDMMENAsignalwillgohigh.Ifthesendingmodule

doesnotevaluatetheDMMENAsignalandkeepsonsendingnewframes,thedatathatwaspreviously

receivedmightbeoverwritten,thusresultinginsettingtheBUFF_OVFflag(Section30.3.5).

30.2.3.2PacketError

NoncontinuousClockMode

ThesizeoftheincomingpacketisdefinedbytheSIZEinformationofatracemodepacketorthe

programmedsizeofadirectdatamodepacket.Iftoomanyorlessthanthenumberofbitsarereceived

beforethenextsyncsignal,thePACKET_ERR_INTflagwillbeset(Section30.3.5).Incaseofreceivinga

DMMCLKsignalwithoutacorrespondingDMMSYNCsignal,apacketerrorwillalsobegenerated.

ContinuousClockMode

Iflessthantheexpectednumberofbitsarereceived,thePACKET_ERR_INTflagwillbeset

(Section30.3.5)whenthenextDMMSYNCsignalisreceived.Packetswithmorethantheexpected

numberofbitscannotbedetected.

ThecheckforpacketerrorisdoneonlyafterthedetectionofthefirstDMMSYNCsignalaftertheDMMis

turnedonorcomesoutofsuspendmode(withCOS=0;Section30.3.1),i.e.beforethereceptionoffirst

DMMSYNC,thetogglingofDMMCLKwouldbeignored.

30.2.3.3BusError

IfanerroroccursonthemicrocontrollerinternalbussystemwhiletransferringthedatafromtheDMMto

thedestination,theBUSERRORflagwillbeset.

30.2.4Interrupts

Themoduleprovidesdifferentinterrupts.Thesecanbeprogrammedtodifferentinterruptlevels

independentlyusingDMMINTLVL(Section30.3.4).

Figure30-6.InterruptStructure

Interruptscanbedividedintoerrorinterruptsandfunctionalinterrupts.Theerrorhandlingisdescribedin

Section30.2.3.Functionalinterruptsdependonthemode(TraceMode,DirectDataMode)theDMM

moduleisusedin.

TraceMode:Aninterruptcanbeenabledwheneveranaccesstothelowestaddressofadefinedregion

isperformed.ThisaddressisthestartingaddressprogrammedintheDMMDESTxREGyregister.An

interruptforeachoftheregioncanbegeneratedbysettingtheindividualinterruptenablebits.

DirectDataMode:Therearetwointerruptswhichcanbeindividuallycontrolled.Oneisgeneratedwhen

thebufferpointerreachestheendofthedefinedbufferandwrapsaround(EO_BUFF;Section30.3.2).

Theotheroneisgeneratedwhenthebufferpointermatchestheprogrammedinterruptthreshold

(PROG_BUFF;Section30.3.2).Thebufferpointerpointstothenextaddresstobewritten,thereforthere

are(interruptthreshold-1)valuesstoredinthebuffer.Theinterruptthresholdcanbeprogrammedinthe

DMMINTPTregister(Section30.3.11).

1648

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3ControlRegisters

ThissectiondescribestheDMMregisters.Theregisterssupport8,16,and32-bitwrites.Theoffsetis

relativetotheassociatedperipheralselect.Table30-6providesasummaryoftheregistersandtheirbits.

ThebaseaddressoftheDMMmoduleisFFFFF700h.

Table30-6.DMMRegistersSummary

Offset

Acronym

RegisterDescription

Section

0

DMMGLBCTRL

DMMGlobalControlRegister

Section30.3.1

4h

DMMINTSET

DMMInterruptSetRegister

Section30.3.2

8h

DMMINTCLR

DMMInterruptClearRegister

Section30.3.3

0Ch

DMMINTLVL

DMMInterruptLevelRegister

Section30.3.4

10h

DMMINTFLG

DMMInterruptFlagRegister

Section30.3.5

14h

DMMOFF1

DMMInterruptOffset1Register

Section30.3.6

18h

DMMOFF2

DMMInterruptOffset2Register

Section30.3.7

1Ch

DMMDDMDEST

DMMDirectDataModeDestinationRegister

Section30.3.8

20h

DMMDDMBL

DMMDirectDataModeBlocksizeRegister

Section30.3.9

24h

DMMDDMPT

DMMDirectDataModePointerRegister

Section30.3.10

28h

DMMINTPT

DMMDirectDataModeInterruptPointerRegister

Section30.3.11

2Ch,3Ch,4Ch,5Ch

DMMDESTxREG1

DMMDestinationxRegion1

Section30.3.12

30h,40h,50h,60h

DMMDESTxBL1

DMMDestinationxBlocksize1

Section30.3.13

34h,44h,54h,64h

DMMDESTxREG2

DMMDestinationxRegion2

Section30.3.14

38h,48h,58h,68h

DMMDESTxBL2

DMMDestinationxBlocksize2

Section30.3.15

6Ch

DMMPC0

DMMPinControl0

Section30.3.16

70h

DMMPC1

DMMPinControl1

Section30.3.17

74h

DMMPC2

DMMPinControl2

Section30.3.18

78h

DMMPC3

DMMPinControl3

Section30.3.19

7Ch

DMMPC4

DMMPinControl4

Section30.3.20

80h

DMMPC5

DMMPinControl5

Section30.3.21

84h

DMMPC6

DMMPinControl6

Section30.3.22

88h

DMMPC7

DMMPinControl7

Section30.3.23

8Ch

DMMPC8

DMMPinControl8

Section30.3.24

1649

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.1DMMGlobalControlRegister(DMMGLBCTRL)

Withthisregisterthebasicoperationofthemoduleisselected.

Figure30-7.DMMGlobalControlRegister(DMMGLBCTRL)[offset=00h]

31

25

24

Reserved

BUSY

R-0

R-0

23

19

18

17

16

Reserved

CONTCLK

COS

RESET

R-0

R/WP-0

R/WP-0

R/WP-0

15

11

10

9

8

Reserved

DDM_WIDTH

TM_DDM

R-0

R/WP-0

R/WP-0

7

4

3

0

Reserved

ON/OFF

R-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table30-7.DMMGlobalControlRegister(DMMGLBCTRL)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readsreturns0.Writeshavenoeffect.

24

BUSY

Busyindicator.

0

TheDMMdoesnotcurrentlyreceivedataandhasnodatainitsinternalbuffers,which

needstobetransferred.

1

Themoduleiscurrentlyreceivingdata,orhasdatainitsinternalbuffers

23-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

CONTCLK

ContinuousDMMCLKinput.

Userandprivilegemoderead,privilegemodewrite:

0

DMMCLKisexpectedtobesuspendedbetweentwopackets.

1

DMMCLKisexpectedtobefreerunningbetweenpackets.

17

COS

Continueonsuspend.Influencesbehaviorofmodulewhileindebugmode.Inallcases

thecorrespondinginterruptwillbeset.

Userandprivilegemode(read):

0

Packetswillnotbereceivedduringdebugmode.Beforeenteringdebugmode,the

ongoingreceptionofapacketwillbefinishedandthevaluewillbewrittentothe

destination.

1

Continuereceivingpacketsandupdatedestination,whileindebugmode

Privilegemode(write):

0

Disabledatareceptionwhileindebugmode

1

Enabledatareceptionwhileindebugmode

16

RESET

Reset.Thisbitresetsthestatemachineandtheregisterstoitsresetvalue,exceptthe

RESETbititself.Itmustbeclearedbywritingtoit.

Userandprivilegemode(read):

0

NoresetofDMMmodule

1

ResetofDMMmodule

Privilegemode(write):

0

NoresetofDMMmodule

1

ResetDMMmoduletoitsresetstate

15-11

Reserved

0

Readsreturns0.Writeshavenoeffect.

1650

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-7.DMMGlobalControlRegister(DMMGLBCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

10-9

DDM_WIDTH

PacketWidthindirectdatamode.

Userandprivilegemodereadandprivilegemodewriteoperation:

BitEncoding

TransferSize

0

8bit

1h

16bit

2h

32bit

3h

Reserved

8

TM_DMM

PacketFormat.

Userandprivilegemode(read):

0

TheDMMmoduleassumespacketsintracemodedefinition

1

TheDMMmoduleassumespacketsindirectdatamodedefinition

Privilegemode(write):

0

Enabletracemode

1

Enabledirectdatamode

7-4

Reserved

0

Readsreturns0.Writeshavenoeffect.

3-0

ON/OFF

Switchmoduleonoroff

Userandprivilegemode(read):

Allother

TheDMMmoduledoesnotreceivedata

Ah

TheDMMmodulereceivesdataandwritesittothebuffer

Privilegemode(write):

Allother

Disablereceive/writeoperations.Packetsinreception,willstillbefinished

Ah

Enablereceive/writeoperations.Packetswillbereceived1HCLKcycleafterenablingthe

module

NOTE:Itisrecommendedtowrite5htoON/OFFtoavoidhavingasofterrorinadvertentlyenabling

themodulewhenasinglebitflips.

NOTE:Registerswhichaffecttheoperationofthemodule,shouldbeonlyprogrammedwhenthe

BUSYbitis0andtheON/OFFbitsarenotAh.

NOTE:Ifthemodulewasinoperation,turnedoff(ON/OFF=allotherthanAh)andthenturnedon

(ON/OFF=Ah)again,itisrecommendedtoperformareset(RESET=1)ofthemodule

beforeswitchingiton.Thisavoidsthatthestatemachineisheldinanunrecoverablestate.

NOTE:Awritetotheseregisterbitswhilereceivingapacketwillnothaveanyeffectonthereceived

packet.Themodechangewillbeperformedafterthepacketisreceived

1651

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.2DMMInterruptSetRegister(DMMINTSET)

Thisregistercontainstheinterruptsetbitsforerrorinterruptsandfunctionalinterrupts.Onlythebitswhich

arerelevantfortheparticularmode(tracemodeordirectdatamode)willbetakenintoaccountforthe

interruptgeneration.

Figure30-8.DMMInterruptSetRegister(DMMINTSET)[offset=04h]

31

24

Reserved

R-0

23

18

17

16

Reserved

PROG_BUFF

EO_BUFF

R-0

R/WP-0

R/WP-0

15

14

13

12

11

10

9

8

DEST3REG2

DEST3REG1

DEST2REG2

DEST2REG1

DEST1REG2

DEST1REG1

DEST0REG2

DEST0REG1

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

BUSERROR

BUFF_OVF

SRC_OVF

DEST3_ERR

DEST2_ERR

DEST1_ERR

DEST0_ERR

PACKET_ERR_INT

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table30-8.DMMInterruptSetRegister(DMMINTSET)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readsreturns0.Writeshavenoeffect.

17

PROG_BUFF

ProgrammableBufferInterruptSet.Thisenablestheinterruptgenerationincasethe

bufferpointerequalstheprogrammedvalueintheDMMINTPTregister(Section30.3.11).

ThisbitisonlyrelevantinDirectDataMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonpointermatch.

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

16

EO_BUFF

EndofBufferInterruptSet.Thisenablestheinterruptgenerationincasedatawaswritten

tothelastentryinthebufferandthepointerwrappedaroundtothebeginningofthebuffer.

ThisbitisonlyrelevantinDirectDataMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonwritingtothelastentry.

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

15

DEST3REG2

Destination3Region2InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination3Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

1652

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-8.DMMInterruptSetRegister(DMMINTSET)FieldDescriptions(continued)

Bit

Field

Value

Description

14

DEST3REG1

Destination3Region1InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination3Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

13

DEST2REG2

Destination2Region2InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination2Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

12

DEST2REG1

Destination2Region1InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination2Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

11

DEST1REG2

Destination1Region2InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination1Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

10

DEST1REG1

Destination1Region1InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination1Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

1653

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-8.DMMInterruptSetRegister(DMMINTSET)FieldDescriptions(continued)

Bit

Field

Value

Description

9

DEST0REG2

Destination0Region2InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination0Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

8

DEST0REG1

Destination0Region1InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination0Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

7

BUSERROR

BusErrorResponseforerrorsgeneratedwhendoinginternalbustransfers.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

6

BUFF_OVF

BufferOverflow.Thisenablestheinterruptgenerationincasenewdataisreceived,while

thepreviousdatastillhasnotbeentransmitted.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

5

SRC_OVF

SourceOverflow.Thisenablesaninterruptiftheexternalsystemexperiencedand

overflowwhichwassignalledintheTraceModepacket.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

1654

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-8.DMMInterruptSetRegister(DMMINTSET)FieldDescriptions(continued)

Bit

Field

Value

Description

4

DEST3_ERR

Destination3Error.Thisenablestheinterruptgenerationincasedatashouldbewritten

intoaaddressnotspecifiedbyDMMDEST3REG1/DMMDEST3BL1or

DMMDEST3REG2/DMMDEST3BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

3

DEST2_ERR

Destination2ErrorInterruptSet.Thisenablestheinterruptgenerationincasedata

shouldbewrittenintoaaddressnotspecifiedbyDMMDEST2REG1/DMMDEST2BL1or

DMMDEST2REG2/DMMDEST2BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

2

DEST1_ERR

Destination1ErrorInterruptSet.Thisenablestheinterruptgenerationincasedata

shouldbewrittenintoaaddressnotspecifiedbyDMMDEST1REG1/DMMDEST1BL1or

DMMDEST1REG2/DMMDEST1BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

1

DEST0_ERR

Destination0ErrorInterruptSet.Thisenablestheinterruptgenerationincasedata

shouldbewrittenintoaaddressnotspecifiedbyDMMDEST0REG1/DMMDEST0BL1or

DMMDEST0REG2/DMMDEST0BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

0

PACKET_ERR_INT

PacketError.Thisenablestheinterruptgenerationincaseofanerrorconditioninthe

packetreception.PleaserefertoSection30.2.3fortheerrorconditions.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Enableinterrupt(setscorrespondingbitinDMMINTCLR;DMMINTLVL)

1655

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.3DMMInterruptClearRegister(DMMINTCLR)

Thisregistercontainstheinterruptclearbitsforerrorinterruptsandfunctionalinterrupts.Onlythebits

whicharerelevantfortheparticularmode(tracemodeordirectdatamode)willbetakenintoaccountfor

theinterruptgeneration

Figure30-9.DMMInterruptClearRegister(DMMINTCLR)[offset=08h]

31

24

Reserved

R-0

23

18

17

16

Reserved

PROG_BUFF

EO_BUFF

R-0

R/WP-0

R/WP-0

15

14

13

12

11

10

9

8

DEST3REG2

DEST3REG1

DEST2REG2

DEST2REG1

DEST1REG2

DEST1REG1

DEST0REG2

DEST0REG1

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

BUSERROR

BUFF_OVF

SRC_OVF

DEST3_ERR

DEST2_ERR

DEST1_ERR

DEST0_ERR

PACKET_ERR_INT

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table30-9.DMMInterruptClearRegister(DMMINTCLR)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readsreturns0.Writeshavenoeffect.

17

PROG_BUFF

ProgrammableBufferInterruptSet.Thisdisablestheinterruptgenerationincasethe

bufferpointerequalstheprogrammedvalueintheDMMINTPTregister(Section30.3.11).

ThisbitisonlyrelevantinDirectDataMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonpointermatch.

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

16

EO_BUFF

EndofBufferInterruptSet.Thisdisablestheinterruptgenerationincasedatawaswritten

tothelastentryinthebufferandthepointerwrappedaroundtothebeginningofthebuffer.

ThisbitisonlyrelevantinDirectDataMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonwritingtothelastentry.

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

15

DEST3REG2

Destination3Region2InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination3Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

1656

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-9.DMMInterruptClearRegister(DMMINTCLR)FieldDescriptions(continued)

Bit

Field

Value

Description

14

DEST3REG1

Destination3Region1InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination3Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

13

DEST2REG2

Destination2Region2InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination2Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

12

DEST2REG1

Destination2Region1InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination2Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

11

DEST1REG2

Destination1Region2InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination1Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

10

DEST1REG1

Destination1Region1InterruptSet.Thisenablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination1Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

1657

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-9.DMMInterruptClearRegister(DMMINTCLR)FieldDescriptions(continued)

Bit

Field

Value

Description

9

DEST0REG2

Destination0Region2InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination0Region2.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

8

DEST0REG1

Destination0Region1InterruptSet.Thisdisablestheinterruptgenerationincasedata

wasaccessedatthestartaddressofDestination0Region1.Thisbitisonlyrelevantin

TraceMode.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegeneratedonawritetothestartaddressofthisregion

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

7

BUSERROR

BusErrorResponseforerrorsgeneratedwhendoinginternalbustransfers.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

6

BUFF_OVF

BufferOverflow.Thisdisablestheinterruptgenerationincasenewdataisreceived,while

thepreviousdatastillhasnotbeentransmitted.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

5

SRC_OVF

SourceOverflow.Thisdisablesaninterruptiftheexternalsystemexperiencedand

overflowwhichwassignalledintheTraceModepacket.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

1658

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-9.DMMInterruptClearRegister(DMMINTCLR)FieldDescriptions(continued)

Bit

Field

Value

Description

4

DEST3_ERR

Destination3Error.Thisdisablestheinterruptgenerationincasedatashouldbewritten

intoaaddressnotspecifiedbyDMMDEST3REG1/DMMDEST3BL1or

DMMDEST3REG2/DMMDEST3BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

3

DEST2_ERR

Destination2ErrorInterruptSet.Thisdisablestheinterruptgenerationincasedata

shouldbewrittenintoaaddressnotspecifiedbyDMMDEST2REG1/DMMDEST2BL1or

DMMDEST2REG2/DMMDEST2BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

2

DEST1_ERR

Destination1ErrorInterruptSet.Thisdisablestheinterruptgenerationincasedata

shouldbewrittenintoaaddressnotspecifiedbyDMMDEST1REG1/DMMDEST1BL1or

DMMDEST1REG2/DMMDEST1BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

1

DEST0_ERR

Destination0ErrorInterruptSet.Thisdisablestheinterruptgenerationincasedata

shouldbewrittenintoaaddressnotspecifiedbyDMMDEST0REG1/DMMDEST0BL1or

DMMDEST0REG2/DMMDEST0BL2.Ifbothblocksizesareprogrammedto0orareserved

value,theinterruptwillstillbegenerated,thewritetotheinternalRAMhoweverwillnottake

place.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

1659

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-9.DMMInterruptClearRegister(DMMINTCLR)FieldDescriptions(continued)

Bit

Field

Value

Description

0

PACKET_ERR_INT

PacketError.Thisdisablestheinterruptgenerationincaseofanerrorconditioninthe

packetreception.PleaserefertoSection30.2.3fortheerrorconditions.

Userandprivilegemode(read):

0

Nointerruptwillbegenerated

1

Aninterruptwillbegenerated

Privilegemode(write):

0

Noinfluenceonbit

1

Disableinterrupt(clearscorrespondingbitinDMMINTCLR;DMMInterruptLevelRegister

(DMMINTLVL))

1660

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.4DMMInterruptLevelRegister(DMMINTLVL)

Thisregistercontainstheinterruptlevelbitsforerrorinterruptsandnormalinterrupts.

Figure30-10.DMMInterruptLevelRegister(DMMINTLVL)[offset=0Ch]

31

24

Reserved

R-0

23

18

17

16

Reserved

PROG_BUFF

EO_BUFF

R-0

R/WP-0

R/WP-0

15

14

13

12

11

10

9

8

DEST3REG2

DEST3REG1

DEST2REG2

DEST2REG1

DEST1REG2

DEST1REG1

DEST0REG2

DEST0REG1

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

2

1

0

BUSERROR

BUFF_OVF

SRC_OVF

DEST3_ERR

DEST2_ERR

DEST1_ERR

DEST0_ERR

PACKET_ERR_INT

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-10.DMMInterruptLevelRegister(DMMINTLVL)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readsreturns0.Writeshavenoeffect.

17

PROG_BUFF

ProgrammableBufferInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

16

EO_BUFF

EndofBufferInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

15

DEST3REG2

Destination3Region2InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

14

DEST3REG1

Destination3Region1InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

13

DEST2REG2

Destination2Region2InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

12

DEST2REG1

Destination2Region1InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

11

DEST1REG2

Destination1Region2InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

1661

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-10.DMMInterruptLevelRegister(DMMINTLVL)FieldDescriptions(continued)

Bit

Field

Value

Description

10

DEST1REG1

Destination1Region1InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

9

DEST0REG2

Destination0Region2InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

8

DEST0REG1

Destination0Region1InterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

7

BUSERROR

BMMBusErrorResponse

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

6

BUFF_OVF

WriteBufferOverflowInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

5

SRC_OVF

SourceOverflowInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

4

DEST3_ERR

Destination3ErrorInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

3

DEST2_ERR

Destination2ErrorInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

2

DEST1_ERR

Destination1ErrorInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

1

DEST0_ERR

Destination0ErrorInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

0

PACKET_ERR_INT

PacketErrorInterruptLevel

Userandprivilegemoderead,privilegemodewrite:

0

Interruptmappedtolevel0

1

Interruptmappedtolevel1

1662

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.5DMMInterruptFlagRegister(DMMINTFLG)

Thisregistercontainstheinterruptlevelbitsforerrorinterruptsandnormalinterrupts.

Figure30-11.DMMInterruptFlagRegister(DMMINTFLG)[offset=10h]

31

24

Reserved

R-0

23

18

17

16

Reserved

PROG_BUFF

EO_BUFF

R-0

R/WPC-0

R/WPC-0

15

14

13

12

11

10

9

8

DEST3REG2

DEST3REG1

DEST2REG2

DEST2REG1

DEST1REG2

DEST1REG1

DEST0REG2

DEST0REG1

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

7

6

5

4

3

2

1

0

BUSERROR

BUFF_OVF

SRC_OVF

DEST3_ERR

DEST2_ERR

DEST1_ERR

DEST0_ERR

PACKET_ERR_INT

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;C=Clear;-n=valueafterreset

Table30-11.DMMInterruptFlagRegister(DMMINTFLG)FieldDescriptions

Bit

Field

Value

Description

31-18

Reserved

0

Readsreturns0.Writeshavenoeffect.

17

PROG_BUFF

ProgrammableBufferInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

16

EO_BUFF

EndofBufferInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

15

DEST3REG2

Destination3Region2InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

14

DEST3REG1

Destination3Region1InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

1663

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-11.DMMInterruptFlagRegister(DMMINTFLG)FieldDescriptions(continued)

Bit

Field

Value

Description

13

DEST2REG2

Destination2Region2InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

12

DEST2REG1

Destination2Region1InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

11

DEST1REG2

Destination1Region2InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

10

DEST1REG1

Destination1Region1InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

9

DEST0REG2

Destination0Region2InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

8

DEST0REG1

Destination0Region1InterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

1664

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-11.DMMInterruptFlagRegister(DMMINTFLG)FieldDescriptions(continued)

Bit

Field

Value

Description

7

BUSERROR

BMMBusErrorResponse.

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

6

BUFF_OVF

WriteBufferOverflowInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

5

SRC_OVF

SourceOverflowInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

4

DEST3_ERR

Destination3ErrorInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

3

DEST2_ERR

Destination2ErrorInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

2

DEST1_ERR

Destination1ErrorInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

1665

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-11.DMMInterruptFlagRegister(DMMINTFLG)FieldDescriptions(continued)

Bit

Field

Value

Description

1

DEST0_ERR

Destination0ErrorInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

0

PACKET_ERR_INT

PacketErrorInterruptFlag

Userandprivilegemode(read):

0

Nointerruptoccurred

1

Interruptoccurred

Privilegemode(write):

0

Noinfluenceonbit

1

Bitwillbecleared

1666

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.6DMMInterruptOffset1Register(DMMOFF1)

Thisregisterholdstheoffsetindicatingwhichinterruptoccurredoninterruptlevel0.TheCPUcanread

thisregistertodeterminethesourceoftheinterruptwithouthavingtotestindividualinterruptflags.

Figure30-12.DMMInterruptOffset1Register(DMMOFF1)[offset=14h]

31

16

Reserved

R-0

15

5

4

0

Reserved

OFFSET

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table30-12.DMMInterruptOffset1Register(DMMOFF1)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

OFFSET

Userandprivilegemode(read):

BitEncoding

Interrupt

0

Phantom.Allinterruptflagshavebeenclearedbeforetheoffsetregisterhasbeenread.

1h

PacketError

2h

Destination0Error

3h

Destination1Error

4h

Destination2Error

5h

Destination3Error

6h

SourceOverflow

7h

BufferOverflow

8h

BusError

9h

Destination0Region1

Ah

Destination0Region2

Bh

Destination1Region1

Ch

Destination1Region2

Dh

Destination2Region1

Eh

Destination2Region2

Fh

Destination3Region1

10h

Destination3Region2

11h

EndofBuffer

12h

ProgrammableBuffer

13h-1Fh

Reserved

ReadingtheoffsetwillclearthecorrespondingflaginDMMINTFLG(Section30.3.5).

Privilegeandusermodewriteshavenoeffect

1667

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.7DMMInterruptOffset2Register(DMMOFF2)

Thisregisterholdstheoffsetindicatingwhichinterruptoccurredoninterruptlevel1.TheCPUcanread

thisregistertodeterminethesourceoftheinterruptwithouthavingtotestindividualinterruptflags.

Figure30-13.DMMInterruptOffset2Register(DMMOFF2)[offset=18h]

31

16

Reserved

R-0

15

5

4

0

Reserved

OFFSET

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table30-13.DMMInterruptOffset2Register(DMMOFF1)FieldDescriptions

Bit

Field

Value

Description

31-5

Reserved

0

Readreturns0.Writeshavenoeffect.

4-0

OFFSET

Userandprivilegemode(read):

BitEncoding

Interrupt

0

Phantom.Allinterruptflagshavebeenclearedbeforetheoffsetregisterhasbeenread.

1h

PacketError

2h

Destination0Error

3h

Destination1Error

4h

Destination2Error

5h

Destination3Error

6h

SourceOverflow

7h

BufferOverflow

8h

BusError

9h

Destination0Region1

Ah

Destination0Region2

Bh

Destination1Region1

Ch

Destination1Region2

Dh

Destination2Region1

Eh

Destination2Region2

Fh

Destination3Region1

10h

Destination3Region2

11h

EndofBuffer

12h

ProgrammableBuffer

13h-1Fh

Reserved

ReadingtheoffsetwillclearthecorrespondingflaginDMMINTFLG(Section30.3.5).

Privilegeandusermodewriteshavenoeffect

1668

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.8DMMDirectDataModeDestinationRegister(DMMDDMDEST)

ThisregisterdefinesthestartingaddressofthebufferusedtostorethereceiveddatainDirectData

Mode.Bywritingtothisregister,theDMMDDMPTregister(Section30.3.10)willbesetto0x0000.

Figure30-14.DMMDirectDataModeDestinationRegister(DMMDDMDEST)[offset=1Ch]

31

0

STARTADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-14.DMMDirectDataModeDestinationRegister(DMMDDMDEST)FieldDescriptions

Bit

Field

Description

31-0

STARTADDR

Thesebitsdefinethestartingaddressofthebuffer.Thestartingaddresshastobeamultipleofthe

blocksizechoseninDMMDDMBL(Section30.3.9).

Userandprivilegemode(read):currentstartaddress

Privilegemode(write):setsstartaddresstovaluewritten

30.3.9DMMDirectDataModeBlocksizeRegister(DMMDDMBL)

ThisregisterdefinestheblocksizeofthebufferusedtostorethereceiveddatainDirectDataMode.

Figure30-15.DMMDirectDataModeBlocksizeRegister(DMMDDMBL)[offset=20h]

31

16

Reserved

R-0

15

4

3

0

Reserved

BLOCKSIZE

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-15.DMMDirectDataModeBlocksizeRegister(DMMDDMBL)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

BLOCKSIZE

Thesebitsdefinethesizeofthebufferregion

Userandprivilegemode(read):currentblocksize

Privilegemode(write):

0

Bufferdisabled.Nodatawillbestored.

1h

32Byte

2h

64Byte

3h

128Byte

4h

256Byte

5h

512Byte

6h

1KByte

7h

2KByte

8h

4KByte

9h

8KByte

Ah

16KByte

Bh

32KByte

Ch-Fh

Reserved

1669

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.10DMMDirectDataModePointerRegister(DMMDDMPT)

ThisregistershowsthepointerintothebufferprogrammedbyDMMDDMDEST(Section30.3.8)and

DMMDDMBL(Section30.3.9).

Figure30-16.DMMDirectDataModePointerRegister(DMMDDMPT)[offset=24h]

31

16

Reserved

R-0

15

14

0

Rsvd

POINTER

R-0

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table30-16.DMMDirectDataModePointerRegister(DMMDDMPT)FieldDescriptions

Bit

Field

Value

Description

31-15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-0

POINTER

Thesebitsholdthepointertothenextentrytobewritteninthebuffer.Thepointerpointstothe

bytealignedaddress.Ifin16-bitDDMmode,bit0willbe0.Ifin32-bitDDMmode,bit0and1

willbe0.

Userandprivilegemode(read):nextdataentry

Privilegemode(write):writeshavenoeffect

30.3.11DMMDirectDataModeInterruptPointerRegister(DMMINTPT)

ThisregistercanbeprogrammedtoholdathresholdtowhichtheDMMDDMPTregister(Section30.3.10)

iscompared.Aninterruptcanbegeneratedwhenbothmatch.

Figure30-17.DMMDirectDataModeInterruptPointerRegister(DMMINTPT)[offset=28h]

31

16

Reserved

R-0

15

14

0

Rsvd

INTPT

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-17.DMMDirectDataModeInterruptPointerRegister(DMMINTPT)FieldDescriptions

Bit

Field

Value

Description

31-15

Reserved

0

Readreturns0.Writeshavenoeffect.

14-0

INTPT

InterruptPointer.Whenthebufferpointer(Section30.3.10)matchestheprogrammedvaluein

DMMINTPTandthePROG_BUFinterrupt(Section30.3.2)isset,aninterruptisgenerated.

Userandprivilegemode(read):currentinterruptthreshold

Privilegemode(write):newinterruptthreshold

1670

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.12DMMDestinationxRegion1(DMMDESTxREG1)

ThisregisterdefinesthestartingaddressofthebufferusedtostorethereceiveddatainTraceMode.If

thereceiveddatadoesnotfallintotheaddressrangedefinedbyDMMDESTxREG1andDMMDESTxBL1,

aninterrupt(DESTx_ERR)canbegenerated.Thedescriptionbelowisvalidforfollowingregisters:

DMMDEST0REG1,DMMDEST1REG1,DMMDEST2REG1,DMMDEST3REG1.

Figure30-18.DMMDestinationxRegion1(DMMDESTxREG1)[offset=2Ch,3Ch,4Ch,5Ch]

31

18

17

16

BASEADDR

BLOCKADDR

R/WP-0

R/WP-0

15

0

BLOCKADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-18.DMMDestinationxRegion1(DMMDESTxREG1)FieldDescriptions

Bit

Field

Description

31-18

BASEADDR

Thesebitsdefinethebaseaddressofthe256kBregionwherethebufferislocated.

Userandprivilegemode(read):currentstartaddress

Privilegemode(write):setsbaseaddresstovaluewritten

17-0

BLOCKADDR

Thesebitsdefinethestartingaddressofthebufferinthe256kBpage.Thestartingaddresshastobea

multipleoftheblocksizechoseninDMMDESTxBL1(Section30.3.13).

Userandprivilegemode(read):currentstartaddress

Privilegemode(write):setsstartaddresstovaluewritten

1671

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.13DMMDestinationxBlocksize1(DMMDESTxBL1)

ThisregisterdefinestheblocksizeofthebufferusedtostorethereceiveddatainTraceMode.Ifthe

receiveddatadoesnotfallintotheaddressrangedefinedbyDMMDESTxREG1andDMMDESTxBL1,an

interrupt(DESTx_ERR)canbegenerated.Thedescriptionbelowisvalidforfollowingregisters:

DMMDEST0BL1,DMMDEST1BL1,DMMDEST2BL1,DMMDEST3BL1.

Figure30-19.DMMDestinationxBlocksize1(DMMDESTxBL1)[offset=30h,40h,50h,60h]

31

16

Reserved

R-0

15

4

3

0

Reserved

BLOCKSIZE

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-19.DMMDestinationxBlocksize1(DMMDESTxBL1)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

BLOCKSIZE

Thesebitsdefinethelengthofthebufferregion.Ifallbitsare0,theregionisdisabledand

nodatawillbestored.

Userandprivilegemode(read):currentblocksize

Privilegemode(write):

0

Regiondisabled

1h

1KByte

2h

2KByte

3h

4KByte

4h

8KByte

5h

16KByte

6h

32KByte

7h

64KByte

8h

128KByte

9h

256KByte

Ah-Fh

Reserved

1672

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.14DMMDestinationxRegion2(DMMDESTxREG2)

ThisregisterdefinesthestartingaddressofthebufferusedtostorethereceiveddatainTraceMode.If

thereceiveddatadoesnotfallintotheaddressrangedefinedbyDMMDESTxREG2andDMMDESTxBL2,

aninterrupt(DESTx_ERR)canbegenerated.Thedescriptionbelowisvalidforfollowingregisters:

DMMDEST0REG2,DMMDEST1REG2,DMMDEST2REG2,DMMDEST3REG2.

Figure30-20.DMMDestinationxRegion2(DMMDESTxREG2)[offset=34h,44h,54h,64h]

31

18

17

16

BASEADDR

BLOCKADDR

R/WP-0

R/WP-0

15

0

BLOCKADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-20.DMMDestinationxRegion2(DMMDESTxREG2)FieldDescriptions

Bit

Field

Description

31-18

BASEADDR

Thesebitsdefinethebaseaddressofthe256kBregionwherethebufferislocated.

Userandprivilegemode(read):currentstartaddress

Privilegemode(write):setsbaseaddresstovaluewritten

17-0

BLOCKADDR

Thesebitsdefinethestartingaddressofthebufferinthe256kBpage.Thestartingaddresshastobea

multipleoftheblocksizechoseninDMMDESTxBL1(Section30.3.15).

Userandprivilegemode(read):currentstartaddress

Privilegemode(write):setsstartaddresstovaluewritten

1673

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.15DMMDestinationxBlocksize2(DMMDESTxBL2)

ThisregisterdefinestheblocksizeofthebufferusedtostorethereceiveddatainTraceMode.Ifthe

receiveddatadoesnotfallintotheaddressrangedefinedbyDMMDESTxREG2andDMMDESTxBL2,an

interrupt(DESTx_ERR)canbegenerated.Thedescriptionbelowisvalidforfollowingregisters:

DMMDEST0BL2,DMMDEST1BL2,DMMDEST2BL2,DMMDEST3BL2.

Figure30-21.DMMDestinationxBlocksize2(DMMDESTxBL2)[offset=38h,48h,58h,68h]

31

16

Reserved

R-0

15

4

3

0

Reserved

BLOCKSIZE

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegemodeonly;-n=valueafterreset

Table30-21.DMMDestinationxBlocksize2(DMMDESTxBL2)FieldDescriptions

Bit

Field

Value

Description

31-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

BLOCKSIZE

Thesebitsdefinethelengthofthebufferregion.Ifallbitsare0,theregionisdisabledand

nodatawillbestored.

Userandprivilegemode(read):currentblocksize

Privilegemode(write):

0

Regiondisabled

1h

1KByte

2h

2KByte

3h

4KByte

4h

8KByte

5h

16KByte

6h

32KByte

7h

64KByte

8h

128KByte

9h

256KByte

Ah-Fh

Reserved

1674

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.16DMMPinControl0(DMMPC0)

ThisregisterdefinesiftheDMMpinsareusedinfunctionalorGIOmode.Itshouldonlybewrittenwhen

ON/OFF=0101andtheBUSYbit=0(Section30.3.1).IfpinsotherthanthepinsspecifiedinTable30-5

areconfigured,orDMMCLKandDMMSYNCareprogrammedasnon-functionalpins,nooperationin

tracemodeordirectdatamodeispossible.

Figure30-22.DMMPinControl0(DMMPC0)[offset=6Ch]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENAFUNC

DATA15FUNC

DATA14FUNC

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13FUNC

DATA12FUNC

DATA11FUNC

DATA10FUNC

DATA9FUNC

DATA8FUNC

DATA7FUNC

DATA6FUNC

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5FUNC

DATA4FUNC

DATA3FUNC

DATA2FUNC

DATA1FUNC

DATA0FUNC

CLKFUNC

SYNCFUNC

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-22.DMMPinControl0(DMMPC0)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENAFUNC

FunctionalmodeofDMMENApin.Thisbitdefineswhetherthepinisusedinfunctionalmodeor

inGIOmode.

Userandprivilegemode(read):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

Userandprivilegemode(write):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

17-2

DATAxFUNC

FunctionalmodeofDMMDATA[x]pin.Thisbitdefineswhetherthepinisusedinfunctional

modeorinGIOmode.Ifpinsareconfiguredinfunctionalmode,onlypinsdefinedinTable30-5

havetobeusedforproperoperation.

Userandprivilegemode(read):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

Userandprivilegemode(write):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

1

CLKFUNC

FunctionalmodeofDMMCLKpin.Thisbitdefineswhetherthepinisusedinfunctionalmodeor

inGIOmode.

Userandprivilegemode(read):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

Userandprivilegemode(write):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

1675

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-22.DMMPinControl0(DMMPC0)FieldDescriptions(continued)

Bit

Field

Value

Description

0

SYNCFUNC

FunctionalmodeofDMMSYNCpin.Thisbitdefineswhetherthepinisusedinfunctionalmode

orinGIOmode.

Userandprivilegemode(read):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

Userandprivilegemode(write):

0

PinisusedinGIOmode

1

PinisusedinFunctionalmode

30.3.17DMMPinControl1(DMMPC1)

ThebitsinthisregisterdefinethedirectionoftheindividualmodulepinswheninGIOmode.

Figure30-23.DMMPinControl1(DMMPC1)[offset=70h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENADIR

DATA15DIR

DATA14DIR

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13DIR

DATA12DIR

DATA11DIR

DATA10DIR

DATA9DIR

DATA8DIR

DATA7DIR

DATA6DIR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5DIR

DATA4DIR

DATA3DIR

DATA2DIR

DATA1DIR

DATA0DIR

CLKDIR

SYNCDIR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-23.DMMPinControl1(DMMPC1)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENADIR

DirectionofDMMENApin.

Userandprivilegemode(read):

0

Pinisusedasinput

1

Pinisusedasoutput

Userandprivilegemode(write):

0

Pinissettoinput

1

Pinissettooutput

17-2

DATAxDIR

DirectionofDMMDATA[x]pin.ThisbitdefineswhetherthepinisusedasinputoroutputinGIO

mode.

Userandprivilegemode(read):

0

Pinisusedasinput

1

Pinisusedasoutput

Userandprivilegemode(write):

0

Pinissettoinput

1

Pinissettooutput

1676

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-23.DMMPinControl1(DMMPC1)FieldDescriptions(continued)

Bit

Field

Value

Description

1

CLKDIR

DirectionofDMMCLKpin.ThisbitdefineswhetherthepinisusedasinputoroutputinGIO

mode.

Userandprivilegemode(read):

0

Pinisusedasinput

1

Pinisusedasoutput

Userandprivilegemode(write):

0

Pinissettoinput

1

Pinissettooutput

0

SYNCDIR

DirectionofDMMSYNCpin.ThisbitdefineswhetherthepinisusedasinputoroutputinGIO

mode.

Userandprivilegemode(read):

0

Pinisusedasinput

1

Pinisusedasoutput

Userandprivilegemode(write):

0

Pinissettoinput

1

Pinissettooutput

1677

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.18DMMPinControl2(DMMPC2)

Thebitsinthisregisterreflectthedigitalrepresentationofthevoltagelevelatthemodulepins.Evenifa

pinisconfiguredtobeanoutputpin,thelevelcanbereadbackviathisregister.

Figure30-24.DMMPinControl2(DMMPC2)[offset=74h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENAIN

DATA15IN

DATA14IN

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13IN

DATA12IN

DATA11IN

DATA10IN

DATA9IN

DATA8IN

DATA7IN

DATA6IN

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5IN

DATA4IN

DATA3IN

DATA2IN

DATA1IN

DATA0IN

CLKIN

SYNCIN

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-24.DMMPinControl2(DMMPC2)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENAIN

DMMENAinput.Thisbitreflectsthestateofthepininallmodes.

Userandprivilegemode(read):

0

Logiclow(inputvoltageisVILorlower)

1

Logichigh(inputvoltageisVIHorhigher)

Privilegemode(write):writestothisbithavenoeffect.

17-2

DATAxIN

DMMDATA[x]input.Thisbitreflectsthestateofthepininallmodes.

Userandprivilegemode(read):

0

Logiclow(inputvoltageisVILorlower)

1

Logichigh(inputvoltageisVIHorhigher)

Privilegemode(write):writestothisbithavenoeffect.

1

CLKIN

DMMCLKinput.Thisbitreflectsthestateofthepininallmodes.

Userandprivilegemode(read):

0

Logiclow(inputvoltageisVILorlower)

1

Logichigh(inputvoltageisVIHorhigher)

Privilegemode(write):writestothisbithavenoeffect.

0

SYNCIN

DMMSYNCinput.Thisbitreflectsthestateofthepininallmodes

Userandprivilegemode(read):

0

Logiclow(inputvoltageisVILorlower)

1

Logichigh(inputvoltageisVIHorhigher)

Privilegemode(write):writestothisbithavenoeffect.

1678

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.19DMMPinControl3(DMMPC3)

Thebitsinthisregistersetthepintologicloworhighlevelifthepinisconfiguredasoutput

(Section30.3.17).

Figure30-25.DMMPinControl3(DMMPC3)[offset=78h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENAOUT

DATA15OUT

DATA14OUT

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13OUT

DATA12OUT

DATA11OUT

DATA10OUT

DATA9OUT

DATA8OUT

DATA7OUT

DATA6OUT

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5OUT

DATA4OUT

DATA3OUT

DATA2OUT

DATA1OUT

DATA0OUT

CLKOUT

SYNCOUT

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-25.DMMPinControl3(DMMPC3)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENAOUT

OutputstateofDMMENApin.Thisbitsetsthepintologicloworhighlevel

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Logiclow(outputvoltageissettoVOLorlower)

1

Logichigh(outputvoltageissettoVOHorhigher)

17-2

DATAxOUT

OutputstateofDMMDATA[x]pin.Thisbitsetsthepintologicloworhighlevel.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Logiclow(outputvoltageissettoVOLorlower)

1

Logichigh(outputvoltageissettoVOHorhigher)

1

CLKOUT

OutputstateofDMMCLKpin.Thisbitsetsthepintologicloworhighlevel

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Logiclow(outputvoltageissettoVOLorlower)

1

Logichigh(outputvoltageissettoVOHorhigher)

1679

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-25.DMMPinControl3(DMMPC3)FieldDescriptions(continued)

Bit

Field

Value

Description

0

SYNCOUT

OutputstateofDMMSYNCpin.Thisbitsetsthepintologicloworhighlevel.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Logiclow(outputvoltageissettoVOLorlower)

1

Logichigh(outputvoltageissettoVOHorhigher)

30.3.20DMMPinControl4(DMMPC4)

Thisregisterallowstosetindividualpinstoalogichighlevelwithouthavingtodoaread-modify-write

operationaswouldbethecasewiththeDMMPC3register(Section30.3.19).Writingazerotoabitwill

notchangethestateofthepin.

Figure30-26.DMMPinControl4(DMMPC4)[offset=7Ch]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENASET

DATA15SET

DATA14SET

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13SET

DATA12SET

DATA11SET

DATA10SET

DATA9SET

DATA8SET

DATA7SET

DATA6SET

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5SET

DATA4SET

DATA3SET

DATA2SET

DATA1SET

DATA0SET

CLKSET

SYNCSET

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-26.DMMPinControl4(DMMPC4)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENASET

SetsoutputstateofDMMENApintologichigh.ValueintheENASETbitsetsthedataoutput

controlregisterbitto1regardlessofthecurrentvalueintheENAOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Logichigh(outputvoltageissettoVOHorhigher)

17-2

DATAxSET

SetsoutputstateofDMMDATA[x]pintologichigh.ValueintheDATAxSETbitsetsthedata

outputcontrolregisterbitto1regardlessofthecurrentvalueintheDATAxOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Logichigh(outputvoltageissettoVOHorhigher)

1680

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-26.DMMPinControl4(DMMPC4)FieldDescriptions(continued)

Bit

Field

Value

Description

1

CLKSET

SetsoutputstateofDMMCLKpintologichigh.ValueintheCLKSETbitsetsthedataoutput

controlregisterbitto1regardlessofthecurrentvalueintheCLKOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Logichigh(outputvoltageissettoVOHorhigher)

0

SYNCSET

SetsoutputstateofDMMSYNCpinlogichigh.ValueintheSYNCSETbitsetsthedataoutput

controlregisterbitto1regardlessofthecurrentvalueintheSYNCOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Logichigh(outputvoltageissettoVOHorhigher)

1681

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

30.3.21DMMPinControl5(DMMPC5)

Thisregisterallowstosetindividualpinstoalogiclowlevelwithouthavingtodoaread-modify-write

operationaswouldbethecasewiththeDMMPC3register(Section30.3.19).Writingaonetoabitwill

changetheoutputtoalogiclowlevel,writingazerowillnotchangethestateofthepin.

Figure30-27.DMMPinControl5(DMMPC5)[offset=80h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENACLR

DATA15CLR

DATA14CLR

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13CLR

DATA12CLR

DATA11CLR

DATA10CLR

DATA9CLR

DATA8CLR

DATA7CLR

DATA6CLR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5CLR

DATA4CLR

DATA3CLR

DATA2CLR

DATA1CLR

DATA0CLR

CLKCLR

SYNCCLR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-27.DMMPinControl5(DMMPC5)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENACLR

SetsoutputstateofDMMENApintologiclow.ValueintheENACLRbitclearsthedataoutput

controlregisterbitto0regardlessofthecurrentvalueintheENAOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Clearsthepintologiclow(outputvoltageissettoVOLorlower)

17-2

DATAxCLR

SetsoutputstateofDMMDATA[x]pintologiclow.ValueintheDATAxCLRbitclearsthedata

outputcontrolregisterbitto0regardlessofthecurrentvalueintheDATAxOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Clearsthepintologiclow(outputvoltageissettoVOLorlower)

1

CLKCLR

SetsoutputstateofDMMCLKpintologiclow.ValueintheCLKCLRbitclearsthedataoutput

controlregisterbitto0regardlessofthecurrentvalueintheDATAxOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Clearsthepintologiclow(outputvoltageissettoVOLorlower)

1682

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-27.DMMPinControl5(DMMPC5)FieldDescriptions(continued)

Bit

Field

Value

Description

0

SYNCCLR

SetsoutputstateofDMMSYNCpintologiclow.ValueintheSYNCCLRbitclearsthedata

outputcontrolregisterbitto0regardlessofthecurrentvalueintheDATAxOUTbit.

Userandprivilegemode(read):

0

Logiclow(outputvoltageisVOLorlower)

1

Logichigh(outputvoltageisVOHorhigher)

Userandprivilegemode(write):

0

Stateofthepinisunchanged

1

Clearsthepintologiclow(outputvoltageissettoVOLorlower)

30.3.22DMMPinControl6(DMMPC6)

Thesebitsconfigurethepinsinpush-pulloropen-drainfunctionality.Ifconfiguredtobeopen-drain,the

moduleonlydrivesalogiclowlevelonthepin.Anexternalpull-upresistorneedstobeconnectedtothe

pintopullithighwhenthepinisinhigh-impedancemode.

Figure30-28.DMMPinControl6(DMMPC6)[offset=84h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENAPDR

DATA15PDR

DATA14PDR

R-0

R/W-0

R/W-0

R/W-0

15

14

13

12

11

10

9

8

DATA13PDR

DATA12PDR

DATA11PDR

DATA10PDR

DATA9PDR

DATA8PDR

DATA7PDR

DATA6PDR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

7

6

5

4

3

2

1

0

DATA5PDR

DATA4PDR

DATA3PDR

DATA2PDR

DATA1PDR

DATA0PDR

CLKPDR

SYNCPDR

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-28.DMMPinControl6(DMMPC6)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENAPDR

OpenDrainenable.EnablesopendrainfunctionalityifthepinisconfiguredasGIOoutput

(DMMPC0[18]=0;DMMPC1[18]=1).Ifthepinisconfiguredasfunctionalpin(DMMPC0[18]=1),the

opendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configurespinaspush/pull

1

Configurespinasopendrain

1683

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-28.DMMPinControl6(DMMPC6)FieldDescriptions(continued)

Bit

Field

Value

Description

17-2

DATAxPDR

OpenDrainenable.EnablesopendrainfunctionalityonpinifpinisconfiguredasGIOoutput

(DMMPC0[x]=0;DMMPC1[x]=1).Ifthepinisconfiguredasfunctionalpin(DMMPC0[x]=1),the

opendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

1

CLKPDR

OpenDrainenable.EnablesopendrainfunctionalityonpinifpinisconfiguredasGIOoutput

(DMMPC0[1]=0;DMMPC1[1]=1).Ifthepinisconfiguredasfunctionalpin(DMMPC0[1]=1),the

opendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

0

SYNCPDR

OpenDrainenable.EnablesopendrainfunctionalityonpinifpinisconfiguredasGIOoutput

(DMMPC0[0]=0;DMMPC1[0]=1).Ifthepinisconfiguredasfunctionalpin(DMMPC0[0]=1),the

opendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

1684

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

30.3.23DMMPinControl7(DMMPC7)

Thebitsinregistercontrolthepullup/downfunctionalityofapin.Theinternalpullup/downcanbeenabled

ordisabledbythisregister.Theresetconfigurationofthesebitsisdeviceimplementationdependent.

Pleaseconsultthedevicedatasheetthisinformation.

Figure30-29.DMMPinControl7(DMMPC7)[offset=88h]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENAPDIS

DATA15PDIS

DATA14PDIS

R-0

R/W-x

R/W-x

R/W-x

15

14

13

12

11

10

9

8

DATA13PDIS

DATA12PDIS

DATA11PDIS

DATA10PDIS

DATA9PDIS

DATA8PDIS

DATA7PDIS

DATA6PDIS

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

7

6

5

4

3

2

1

0

DATA5PDIS

DATA4PDIS

DATA3PDIS

DATA2PDIS

DATA1PDIS

DATA0PDIS

CLKPDIS

SYNCPDIS

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

R/W-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-29.DMMPinControl7(DMMPC7)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENAPDIS

Pulldisable.Removesinternalpullup/pulldownfunctionalityfrompinwhenconfiguredasinputpin

(DMMPC1[18]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

17-2

DATAxPDIS

Pulldisable.Removesinternalpullup/pulldownfunctionalityfrompinwhenconfiguredasinputpin

(DMMPC1[x]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

1

CLKPDIS

Pulldisable.Removesinternalpullup/pulldownfunctionalityfrompinwhenconfiguredasinputpin

(DMMPC1[1]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

1685

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table30-29.DMMPinControl7(DMMPC7)FieldDescriptions(continued)

Bit

Field

Value

Description

0

SYNCPDIS

Pulldisable.Removesinternalpullup/pulldownfunctionalityfrompinwhenconfiguredasinputpin

(DMMPC1[0]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

30.3.24DMMPinControl8(DMMPC8)

Thesebitscontroliftheinternalpulluporpulldownisconfiguredontheinputpin.

Figure30-30.DMMPinControl8(DMMPC8)[offset=8Ch]

31

24

Reserved

R-0

23

19

18

17

16

Reserved

ENAPSEL

DATA15PSEL

DATA14PSEL

R-0

R/W-1

R/W-1

R/W-1

15

14

13

12

11

10

9

8

DATA13PSEL

DATA12PSEL

DATA11PSEL

DATA10PSEL

DATA9PSEL

DATA8PSEL

DATA7PSEL

DATA6PSEL

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

7

6

5

4

3

2

1

0

DATA5PSEL

DATA4PSEL

DATA3PSEL

DATA2PSEL

DATA1PSEL

DATA0PSEL

CLKPSEL

SYNCPSEL

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table30-30.DMMPinControl8(DMMPC8)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readsreturns0.Writeshavenoeffect.

18

ENAPSEL

Pullselect.ConfigurespulluporpulldownfunctionalityifDMMPC7[18]=0).

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

17-2

DATAxPSEL

Pullselect.ConfigurespulluporpulldownfunctionalityifDMMPC7[x]=0).

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

1686

DataModificationModule(DMM)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table30-30.DMMPinControl8(DMMPC8)FieldDescriptions(continued)

Bit

Field

Value

Description

1

CLKPSEL

Pullselect.ConfigurespulluporpulldownfunctionalityifDMMPC7[1]=0).

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

0

SYNCPSEL

Pullselect.ConfigurespulluporpulldownfunctionalityifDMMPC7[0]=0).

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

1687

SPNU499B–November2012–RevisedAugust2013

DataModificationModule(DMM)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter31

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

ThischapterdescribesthefunctionalityoftheRAMtraceport(RTP)module.Itallowsthecapabilityto

performdatatraceofaCPUorothermasteraccessestotheinternalRAMandperipherals.

Topic...........................................................................................................................Page

31.1Overview.......................................................................................................1689

31.2ModuleOperation..........................................................................................1690

31.3GIOFunction.................................................................................................1696

31.4ControlRegisters...........................................................................................1696

1688

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CPUBus Matrix

BridgePCRPerxPer2Per1VBUSRAM0RAM1SERIALIZERFIFO4FIFO2FIFO1RAMTrace Port…RTPDATA[0]RTPDATA[x]RTPCLKRTPSYNCRTPENA

…



www.ti.comOverview

31.1Overview

ThisdocumentdescribesthefunctionalityoftheRAMtraceport(RTP)module,whichprovidesthe

featurestodatalogtheRAMcontentsofthedevicesoraccessestoperipheralswithoutprogramintrusion.

ItcantracealldatawriteorreadaccessestointernalRAM.Inaddition,itprovidesthecapabilitytodirectly

transferdatatoaFIFOtosupportaCPU-controlledtransmissionofthedata.Thetracedataistransmitted

overadedicatedexternalinterface.

31.1.1Features

TheRTPoffersthefollowingfeatures:

•Twomodesofoperation-TraceModeandDirectDataMode

–TraceMode(Section31.2.1)

•Non-intrusivedatatraceonwriteorreadoperation

•VisibilityofRAMcontentatanytimeonexternalcapturehardware

•Traceofperipheralaccesses

•2configurabletraceregionsforeachRAMmoduletolimitamountofdatatobetraced

•FIFOtostoredataandaddressofdataofmultipleread/writeoperations

•TraceofCPUand/orDMAaccesseswithindicationofthemasterinthetransmitteddatapacket

–DirectDataMode(Section31.2.2)

•DirectlywritedatawiththeCPUortracereadoperationstoaFIFO,withouttransmittingheader

andaddressinformation

•Dedicatedsynchronousinterfacetotransmitdatatoexternaldevices

•Free-runningclockgenerationorclockstopmodebetweentransmissions

•upto100Mbitpersec/pintransferratefortransmittingdata(upto133MB/s;seedevicedatasheetfor

maximumtransmissionclockfrequency)

•PinsnotusedinfunctionalmodecanbeusedasGIOs

31.1.2BlockDiagram

Figure31-1.BlockDiagramRAMTracePortModule

1689

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




2+2+2+1+17+2     x8 bitSIZERAM[1:0]STAT[1:0]SIZE[1:0]WR_DATA[xx:0]

ADDR[16:0]REG

2+2+2+18+2     x8 bitSIZERAM[1:0]STAT[1:0]SIZE[1:0]ADDR[17:0]WR_DATA[xx:0]



ModuleOperationwww.ti.com

31.2ModuleOperation

TheRTPmodulehastwomodesofoperation:TraceModeandDirectDataMode.

31.2.1TraceMode

ThismodetracesallwriteorreadaccessesofCPUand/oradifferentmastertotheinternalRAMsandthe

peripheralbus,iftheaccessfallsintooneoftheprogrammedtraceregions.Thetraceregionsallowto

restricttheamountofdatawhichistraced.Thisisdonebyspecifyingthestartaddressandthesizeofthe

regiontobetraced.Itisnotpossibletotracewriteandreadoperationsinthesameregionatthesame

time.

Wheneverawriteorreadaccessoccurs,theaddress,data,sizeoftheaccess(8,16,32,64bit),and

whichmoduleinitiatedthewriteorreadoperationiscapturedintotheFIFOofthecorrespondingRAM

frame.OncenewdataisintheFIFOandtheserializerisempty,theRTPtransmitsthedataintothe

serializerandstartstransmittingit.

TheFIFOsareshiftingdataintotheserializerinaround-robinscheme.Thismeansifdataisavailablein

multipleFIFOs,thesequenceforshiftingdataintotheserializerisFIFO1,FIFO2andthenFIFO4.Only

oneentryintherespectiveFIFOisprovidedtotheserializerbeforeswitchingtothenextFIFO.IfaFIFO

doesnotholdnewdata,itwillbeskipped.ThisschemeensuresthattheFIFOsaredraineduniformly.

31.2.1.1PacketFormatinTraceMode

Figure31-2andFigure31-3illustratethisformat.

Figure31-2.PacketFormatTraceModeforRAMLocations

Figure31-3.PacketFormatTraceModeforPeripheralLocations

WhenRAMlocationsaretraced,onepacketconsistsoftwobitsdenotingtheRAMblockinwhichthedata

isstoredoriftheaccesshasbeentoaperipherallocation(Table31-1),twostatusbitsshowingthe

accessinitiatororiftherewasaFIFOoverflow(Table31-2),twobitsize(8,16,32,or64bit)information

ofthedata(Table31-3),the18-bitaddressforRAMaccessesand2SIZEx8bitsofdata.Ifaperipheral

locationistraced,thentheeffectiveaddressreducesto17bits(ADDR[16:0])andaseparatebit(REG)

betweentheSIZEinformationandtheaddressdenoteswhichprogrammableregionhastracedthis

peripheralaccess(Table31-4).Withtheregionidentifier,theexternalhardwarecandeterminewhich

peripheralwastraced.

Table31-1.EncodingofRAMBitsinTraceModePacketFormat

RAM[1:0]

RAM

0

Cortex-R4B0TCM

1h

Cortex-R4B1TCM

2h

Reserved

3h

Peripherals

1690

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comModuleOperation

Table31-2.EncodingofStatusBitsinTraceModePacketFormat

STAT[1:0]

Status

0

normalentryCPU

1h

normalentryotherMaster

2h

reserved

3h

overflowofthededicatedFIFO

IntheeventofaFIFOoverflow,anoverflowwillbesignaledinthestatusbitsofthenexttransmitted

packetofthatparticularFIFO.ThelastentryintheFIFOwillnotbeoverwrittenbythenewdata.

Table31-3.EncodingofSIZEbitsinTraceModePacketFormat

SIZE[1:0]

Write/ReadSize

0

8bit

1h

16bit

2h

32bit

3h

64bit

Table31-4.EncodingofREGinTraceModePacketFormat

REG

Region

0

1

1

2

ThepacketwillbesplitupintoseveralsubpacketswhentransmittedovertheRTPportpinsdependingon

theportwidthconfigured.TheportwidthisconfiguredwithbitsPW[1:0]intheRTPGLBCTRLregister

(Section31.4.1).Forcertainportwidthconfigurationsandwrite/readsizes,thenumberofbitsinapacket

doesnotexactlymatchtheportwidthforthelastsubpacket.Theremainingbitswillbefilledwithzeros.

Table31-5.NumberofTransfers/Packet

Write/ReadSizeinbits

PortWidth

8

16

32

64

2

16-->16

20-->20

28-->28

44-->44

4

8-->8

10-->10

14-->14

22-->22

8

4-->4

5-->5

7-->7

11-->11

16

2-->2

2.5-->3

3.5-->4

5.5-->6

Example:Fora16-bitportandwithdataof16-bit,thelasttransferhastobepaddedwitheight0s.This

effectivelyresultsinatransferof48bitsinsteadof40.Howeverthewholetransferiscompletedin3

RTPCLKcycles.

ForadetaileddescriptionoftherepresentationofthepacketontheRTPportpins,pleasereferto

Section31.2.5.

31.2.2DirectDataMode(DDM)

Inthismode,dataiswrittendirectlybytheCPUorothermastertoadedicatedcaptureregister,(

RTPDDMW).ThedataisthentransferredfromthecaptureregistertotheFIFO.Inadifferentconfiguration

themoduletracesthedataonreadoperationsontheRAMdirectlyintotheFIFOs.InDirectDataMode,

noinformationotherthantheactualdataistransmitted.Theaddressofthewrittendatacanonlybe

determinedbytheorderofwritesorreadsbytheCPUorothermaster.Thismodeisespeciallyusefulifa

blockofdataonconsecutiveaddresseshastobetransmitted.

1691

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




8, 16, or 32 bitWR_DATA[xx:0]



ModuleOperationwww.ti.com

Thetransfersize(8,16,or32bit)isprogrammable,butcannotbedynamicallychanged.Datanot

written/readinthecorrecttransfersizewillbetruncated/extended.Forexample,ifthetransfersizeis

programmedto16bitsanda32-bitwriteoperationisperformed,thedatawrittentotheFIFOwillbe32-bit

wide,howeveronlytheupper16bitsoftheFIFOwillbetransmitted.Ifan8-bitoperationisperformed,bits

8-15oftheFIFOwillbeindeterminate,sotheupper8bitsofthedatatransmittedaredependentonthe

previouscontentsoftheFIFORAM.

WhenthemoduleisconfiguredinDirectDataMode(TM_DDM=1)totracewriteoperations(DDM_RW=

1)totheRTPDDMWregister,theprogrammingofthetraceregionsforallFIFOswillbeignoredanddata

tracing,whenaccessingtheaddressesdefinedbytheregions,willnotoccur.Ifthemoduleisconfiguredin

readmode(DDM_RW=0),andifthereadaccesstoaRAMblockfallsintoavalidtraceregion,thedata

willbetracedintothecorrespondingFIFOforthisRAMblock.Sincenoaddressinformationistransmitted

inDirectDataMode,theexecutingprogramhastomakesurethatoneFIFOiscompletelyempty(

RTPGSR),beforenewdataistracedintothenextFIFO.

NOTE:DirectDataModereadoperationisnotsupportedondeviceswithaCortex-R4CPU,dueto

thebusprotocoloftheTCMinterfaceandcertainperformanceenhancements(e.g.data

packing)implementedinthecore.

31.2.2.1PacketFormatinDirectDataMode

Figure31-4illustratesthisformat.

Figure31-4.PacketFormatinDirectDataMode

InDirectDataModewriteorreadoperations,onlythedatawrittentotheRTPDDMWregisterorthedata

readfromRAM,andthereforecapturedintotheFIFO,willbetransmitted.Thepacketlengthis

programmable(8,16,or32bits).

31.2.3TraceRegions

Tolimittheamountofdatatobetrace,twotraceregionsperRAMorperipheralareimplemented.These

canbeprogrammedtospecificstartaddressesandblocksizes.Dependingonthedeviceconfiguration

(numberofRAMblocks),notallregionsmightbeimplemented.TraceregionsareusedinTraceModefor

readorwritetraceandinDirectDataModeforreadtrace.InDirectDataModewriteconfiguration,the

datahastobewrittendirectlytoRTPDDMW.

TheRAMandperipheralsstartatfixedaddressesinthedevicesmemorymap.Withthisthestartaddress

ofaregiondoesnotneedtobespecifiedwithitsfull32-bitaddress.ForRAMregions,onlythelower18-

bitneedtobeprogrammed.Theperipheraladdressframecoversawiderrangeandthestartaddress

needstobeprogrammedwiththelower24-bit.

Thetraceregionsdonotsupportaprogrammableendaddress;however,ablocksizeneedstobe

specifiedforeachregion.Theblocksizecanbechosenfromaslowas256Bytesupto256kBytes(128

kBytesforperipherals).

31.2.3.1InverseTraceRegions

TheRTPcanbeconfiguredtotraceaccesseswhichfallinto,oraremadeoutsideofthespecifiedregions.

ThiscanbeaccomplishedbytheINV_RGNbit.Ifthisbitis0,allaccesswhicharemadeinsidearegion

aretraced.Ifthebitis1,allaccessesoutsidetheregionaretraced.TheINV_RGNbitaffectsallregions

oftheRTP(seeRTPGLBCTRL).

1692

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




0x080000000x080010000x080013FF0x080038000x08003FFFRTPRAM1REG1=0x33001000RTPRAM1REG2=0x74003800

4GBAddressSpace2kBRegion 21kBRegion 12Trace Regions•Region 1–starts at 0x08001000 with size of 1kB–CPU write access are traced•Region 2–starts at 0x08003800 with size of 2kB–CPU and other master write accesses are traced



www.ti.comModuleOperation

TherearecertainrestrictionswhenusingINV_RGN=1:

•Inthismodeupto2regionscanbeexcludedfromtracingaccessestoaparticularRAM.

•InversetraceregionswithoneorbothregionsofaRAMprogrammedwithblocksize=0isnot

supported.Ifonlyoneaddressrangeshouldbeexcludedfromthetrace,eithertheaddressrangehas

tobecoveredbybothregions(forexample,excluding1kBrangewithtwo512Bregions),orboth

regionshavetobeprogrammedwiththesamestartaddressandregionsize.IfthewholeRAMshould

betraced,inverseregionmodeshouldnotbeused,insteadthe2regionscouldbeprogrammedto

covertheentireaddressrangewithINV_RGN=0.

•Bothregionshavetodefinethesameaccessrights(bitsCPU_DMAandRW;seeSection31.4.4)for

accessesoutsideoftheregionofeachRAMblock,otherwisetheresultisundefined.

•Peripheraltraceininverseregionmodeisnotsupported.The16MByteperipheraladdressrange

cannotbecoveredentirelybythe17bitaddressdefinitionoftheRTPprotocol.

31.2.3.2OverlappingTraceRegions

WheninINV_RGN=0modewithbothregionsoverlappingandanaccessisdoneintotheoverlapping

addressrange,bothregionswillbecheckedfortheiraccessrightsandifoneorbothissatisfied,the

accesswillbetraced.Inthecasethatbothregionswouldallowthedatatobetraced,therewillstillbe

onlyoneentryintotheFIFO.

Ifaccessestoperipheralsaredonewithinoverlappingregions,theREGbitintheprotocolwillbe0,

denotingRegion1(seeSection31.2.1.1).

Figure31-5.ExampleforTraceRegionSetup

31.2.3.3Cortex-R4Specifics

DuetothebussystemusedonCortex-R4,specialconsiderationshavetobetakenintoaccount.

Figure31-1showstheblockdiagramoftheRTPconnectedtotheCortex-R4RAMinterface.

BothinterfacestoRAM0andRAM1are64-bitwide.RAM0andRAM1arebuildingaconsecutiveaddress

range,wherethe64-bitaddresses00,10h,20h,...resideinRAM0and08h,18h,28h,...resideinRAM1.

Considerations/Restrictions

•Totraceacertainaddressrange,theregionsofbothRAM0(Section31.4.4)andRAM1

(Section31.4.5)needtobesetupforthesamestartaddressandregionsize.Otherwiseonlyevery

other64-bitaccesswillbetraced.

•DirectDataModereadoperationisnotsupportedonCortex-R4.ThisisbecausetheCPUuses64-bit

accessesforreadoperationseventhoughtheintendedaccessesissub-64-bitwide.SinceDirectData

Modeonlysupports32-bitdatatransfersandtheCortex-R4RAMinterfacedoesnotprovide

informationaboutwhichbyteoutofthe64-bitisaccessedwiththereadoperation,theRTPcannot

determinethecorrectdatavalue.

1693

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




CTRL

11

00

00

CTRLCTRLoverflow



ModuleOperationwww.ti.com

•IftheRAMisprotectedbyECC,only64-bitwriteaccessescanbetraced.Every64-bitwordinthe

RAMisprotectedbyacorresponding8-bitECCchecksum.Whenasub-64-bitwriteaccessis

performed,theCortex-R4hastodoaread-modify-writeoperationofthe64-bitwordtobemodifiedin

ordertocalculatethecorrespondingchecksumandthenwriteitbacktomemory.Externalhardware

canstilldeterminewhichportionofthe64-bitwordhasbeenmodified,sincetheotherbytesinthis

worddidnotchange.

31.2.4Overflow/EmptyHandling

IncasetheapplicationdoesRAMaccessesfasterthantheFIFOcanbeemptiedviatheexternalpin

interface,theFIFOcanoverflow.Theusercanchoosewhethertheprogramexecution/datatransfer

shouldbesuspended,oranoverflowshouldbesignaledinthestatusbitsofthenext,tobetransmitted,

messageofthisparticularFIFO.Ifprogramexecutionisresumed,thedatawillbelost.Theoverflowwill

notbesignaledinthemessagethatisalreadyintheserializerandbeingtransmittedwhentheoverflow

occurs.

NOTE:ThestatusinformationwillonlybetransmittedinTraceMode,sincetheDirectDataMode

packetdoesnotcontainanystatusinformation.

WhenanoverflowinaFIFOoccurs,thecorrespondingbitinRTPGSRwillbeset.

Figure31-6.FIFOOverflowHandling

31.2.5SignalDescription

Thisclocksignalisusedtoclockoutthedataoftheserializer.DependingontheCONTCLKbit,

RTPCLK

theclockcanbesuspendedbetweenpacketsoritcanbefreerunning.TheRTPCLKfrequency

canbeadjustedbythePRESCALERbits(seeSection31.4.1).

Themoduleprovidesapacket-syncsignal.ThissignalwillgohighontherisingedgeofRTPCLK

RTPSYNC

andwillbevalidforoneRTPCLKcycletosynchronizeexternalhardwaretothedatastream.The

RTPSYNCpulsewillbegeneratedforeachnewpacket.

Thissignalisaninputandcanbeusedbyexternalhardwaretostopthedatatransmission

betweenpackets.WhentheRTPENAsignalgoeshigh,theRTPwillfinishthecurrentpacket

transmissionandthenstop.Oncethesignalispulledlowagain,theRTPwillresumethetransfer

RTPENA

ifdataisstillpresentintheserializerorFIFOs.TheRTPENAsignaldoesnothavetobeusedfor

propermoduleoperation.ItcanbeusedinGIOmodeiftheexternalhardwarecannotgenerate

thissignal.Overflowsoftheexternalsystemcannotbehandledinthiscase.

Thesepinsareusedtodotheactualdatatransfer.DatachangeswiththerisingedgeofRTPCLK.

RTPDATA[15:0]

Theportcanbeconfiguredfordifferentwidths(PW[1:0]).Theminimumportwidthsupportedis2

pins.SeeTable31-9whichpinsareusedfortheport.

1694

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




DEST[1]SIZE[1]ADDR[15]ADDR[11]ADDR[7]ADDR[3]DATA[7]DATA[3]DEST[0]ADDR[13]ADDR[6]ADDR[2]DATA[2]DATA[6]DATA[5]DATA[4]ADDR[9]ADDR[5]ADDR[1]DATA[1]ADDR[4]ADDR[0]DATA[0]SIZE[0]ADDR[14]ADDR[10]ADDR[12]ADDR[8]STAT[1]STAT[0]ADDR[17]ADDR[16]RTPCLKRTPSYNCRTPDATA[0]RTPDATA[1]RTPDATA[2]RTPDATA[3]

RTPSYNCRTPDATA

RTPCLK

RTPENA

Packet1Packet2Packet3Packet4Packet1Packet2



www.ti.comModuleOperation

Figure31-7showsanexampleofmultiplepackettransmissionsinTraceModewithaninterruption

betweenpacketsbecauseofRTPENApulledhigh.

Figure31-7.RTPPacketTransferwithSyncSignal

Figure31-8showsanexampleofa4-bitdataportwith8-bitwritedata(A5h)writtenintoRAM1(address

12345h)withnooverflowintracemode.

Figure31-8.PacketFormatinTraceMode

31.2.6DataRate

ThemoduleisconfigurabletosupportdifferentRTPCLKfrequencies.Pleaseseethedevicedatasheetfor

themaximumsupportedfrequency.HCLKwillbeprescaledtoachievethedesiredRTPCLKfrequency.

Theprescalersupportsprescalevaluesfrom1to8(Section31.4.1).

Theeffectivebandwidthdependsontheconfigurationofthemoduleandtheaveragedatawidth

transmittedinthepackets.

1695

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






GIOFunctionwww.ti.com

31.3GIOFunction

PinswhicharenotusedforRTPfunctionalitycanbeusedasnormalGIOpins.Ifpinsshouldbeusedin

functionalmodeorGIOmode,theycanbeprogrammedinRTPPC0.Thedirectionofthepinscanbe

choseninRTPPC1.

Modulepinscanhaveeitheraninternalpulluporactivepulldownthatmakesitpossibletoleavethepins

unconnectedexternallywhenconfiguredasinputs.Thepinscanbeprogrammedtohavetheactivepull

capabilitybywritinga0tothecorrespondingbitintheRTPPC7register.Writinga1tothecorresponding

bitdisablestheactivepullfunctionalityofthepin.Apullupcanbeconfiguredbywriting1tothe

correspondingbitintheRTPPC8register.Writing0willactivatethepulldowncapability.The

pullup/pulldownisdeactivatedwhenabidirectionalpinisconfiguredasanoutput.

TheGIOpincanbeconfiguredtoincludeanopendrainfunctionalitywhentheyareconfiguredasoutput

pins.Thisisdonebywritinga1intothecorrespondingbitoftheRTPPC6register.Whentheopendrain

functionalityisenabled,azerowrittentothedataoutputregister(RTPPC3)forcesthepintoalowoutput

voltage(VOLorlower),whereaswritinga1tothedataoutputregister(RTPPC3)forcesthepintoahigh

impedancestate.Theopendrainfunctionalityisdisabledwhenthepinisconfiguredasaninputpin.

31.4ControlRegisters

ThissectiondescribestheRTPmoduleregisters.Theregisterssupport8-bit,16-bit,and32-bitwrites.The

baseaddressoftheRTPmoduleisFFFFFA00h.

Table31-6.ModuleRegisters

Offset

Acronym

RegisterDescription

Section

00

RTPGLBCTRL

RTPGlobalControlRegister

Section31.4.1

04h

RTPTRENA

RTPTraceEnableRegister

Section31.4.2

08h

RTPGSR

RTPGlobalStatusRegister

Section31.4.3

0Ch,10h

RTPRAM1REG

RTPRAM1TraceRegionRegister

Section31.4.4

14h,18h

RTPRAM2REG

RTPRAM2TraceRegionRegister

Section31.4.5

24h,28h

RTPPERREG

RTPPeripheralTraceRegionRegister

Section31.4.6

2Ch

RTPDDMW

RTPDirectDataModeWriteRegister

Section31.4.7

34h

RTPPC0

RTPPinControl0Register

Section31.4.8

38h

RTPPC1

RTPPinControl1Register

Section31.4.9

3Ch

RTPPC2

RTPPinControl2Register

Section31.4.10

40h

RTPPC3

RTPPinControl3Register

Section31.4.11

44h

RTPPC4

RTPPinControl4Register

Section31.4.12

48h

RTPPC5

RTPPinControl5Register

Section31.4.13

4Ch

RTPPC6

RTPPinControl6Register

Section31.4.14

50h

RTPPC7

RTPPinControl7Register

Section31.4.15

54h

RTPPC8

RTPPinControl8Register

Section31.4.16

1696

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.1RTPGlobalControlRegister(RTPGLBCTRL)

Theconfigurationofthemodulecanbechangedwiththisregister.Figure31-9andTable31-7illustrate

thisregister.

Figure31-9.RTPGlobalControlRegister(RTPGLBCTRL)[offset=00h]

31

25

24

23

19

18

16

Reserved

TEST

Reserved

PRESCALER

R-0

R/WP-0

R-0

R/WP-7h

15

14

13

12

11

10

9

8

Reserved

DDM_WIDTH

DDM_RW

TM_DDM

PW

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

7

6

5

4

3

0

RESET

CONTCLK

HOVF

INV_RGN

ON/OFF

R/WP-0

R/WP-0

R/WP-0

R/WP-0

R/WP-5h

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table31-7.RTPGlobalControlRegister(RTPGLBCTRL)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

TEST

Bysettingthebit,theFIFORAMwillbemappedintotheSYSTEMPeripheralframestartingat

address0xFFF83000.EachFIFOwillstartata1kboundary.EachFIFOentrywillbealignedto

a128bitboundary.SeeTable31-8foralistingoftheFIFOsandtheircorresponding

addresses.

Userandprivilegemode(read):

0

TheFIFORAMisnotaccessibleinthememorymap.

1

TheFIFORAMismappedtoaddressFFF83000h

Privilegemode(write):

0

DisablesmappingoftheFIFORAM

1

EnablesmappingoftheFIFORAMintoaddressFFF83000h

18-16

PRESCALER

TheprescalerdividesHCLKdowntothedesiredRTPCLKfrequency.ThemaximumRTPCLK

frequencyspecifiedinthedevicedatasheetmustnotbeexceeded.Nodynamicchangeof

RTPCLKissupported.ThemoduleshouldbeswitchedoffbytheON/OFFbitsinthisregister

beforechangingtheprescaler.

Userandprivilegemoderead,privilegemodewrite:

0

TheprescalerisHCLK/1.

1h

TheprescalerisHCLK/2.

2h

TheprescalerisHCLK/3.

3h

TheprescalerisHCLK/4.

4h

TheprescalerisHCLK/5.

5h

TheprescalerisHCLK/6.

6h

TheprescalerisHCLK/7.

7h

TheprescalerisHCLK/8.

15-14

Reserved

0

Readreturns0.Writeshavenoeffect.

13-12

DDM_WIDTH

Directdatamodewordsizewidth.Thisbitfieldconfiguresthenumberofbitsthatwillbe

transmittedinDirectDataMode.

Userandprivilegemoderead,privilegemodewrite:

0

Thewordsizewidthis8bits.

1h

Thewordsizewidthis16bits.

2h

Thewordsizewidthis32bits.

3h

Reserved

1697

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table31-7.RTPGlobalControlRegister(RTPGLBCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

11

DDM_RW

DirectDataMode

Userandprivilegemode(read):

0

ReadtracinginDirectDataModeisenabled.

1

WritetracinginDirectDataModetoDDMWregisterisenabled.

Privilegemode(write):

0

EnablereadtracinginDirectDataMode.TheRWbitsintheRTPRAMxREGyregisterstobe

ignored.

1

WritetracinginDirectDataModetoDDMWregisterisenabled.TheRWbitsinthe

RTPRAMxREGyregisterstobeignored(Section31.4.4).

10

TM_DDM

TraceModeorDirectDataMode

Userandprivilegemode(read):

0

ModuleisconfiguredinTraceMode.

1

ModuleisconfiguredinDirectDataMode.

Privilegemode(write):

0

ConfiguremoduletoTraceMode.

1

ConfiguremoduletoDirectDataMode.

9-8

PW

Portwidth.ThisbitfieldconfigurestheRTPtothedesiredportwidth.Pinsthatarenotusedfor

functionalmodecanbeusedasGIOpins.SeeTable31-9forwhichpinsareusedfortheport.

0

TheRTPis2pinswide.

1h

TheRTPis4pinswide.

2h

TheRTPis8pinswide.

3h

TheRTPis16pinswide.

7

RESET

Thisbitresetsthestatemachineandtheregisterstotheirresetvalue.Thisresetensuresthat

nodataleftintheFIFOsisshiftedoutafterswitchingonthemodulewiththeON/OFFbit.

Userandprivilegemode(read):

0

TheRTPmoduleisoutofreset.

1

TheRTPmoduleisinreset.

Privilegemode(write):

0

Donotresetthemodule.

1

Resetthemodule.

6

CONTCLK

ContinuousRTPCLKenable.

Userandprivilegemode(read):

0

TheRTPCLKisstoppedbetweentransmissions.

1

TheRTPCLKisfreerunning.

Privilegemode(write):

0

StopRTPCLKbetweentransmissions.

1

ConfigureRTPCLKasfreerunning.

5

HOVF

Haltonoverflow.ThisbitindicateswhethertheCPUorDMAishaltedwhileonlyonelocationin

theFIFOisemptyinTraceModeorDirectDataMode(read).

Userandprivilegemode(read):

0

ThecurrentdatatransfertotheFIFOwillnotbesuspendedincaseofafullFIFO.

1

ThecurrentdatatransfertotheFIFOwillbesuspendedincaseofafullFIFO.

Privilegemode(write):

0

ThehaltonFIFOoverflowwillbedisabled.Thedatatransferwillnotbesuspendedandwillbe

discarded.DatawrittentotheRTPDDMWregisterwilloverwritetheRTPDDMWregister.

1

ThehaltonFIFOoverflowwillbeenabled.DatawrittentothealreadyfullFIFOwillbewritten

oncetheFIFOisemptiedagain.ThedatatransfertotheFIFOwillbesuspendedandsignaled

totheCPUorothermasterwhilethereisstilldatatobeshiftedout.Whenthereisanempty

FIFOlocationagain,thetransferofthedatatotheFIFOwillbefinished.

1698

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

Table31-7.RTPGlobalControlRegister(RTPGLBCTRL)FieldDescriptions(continued)

Bit

Field

Value

Description

4

INV_RGN

Traceinsideoroutsideofdefinedtraceregions.

Userandprivilegemode(read):

0

Accessesinsidethetraceregionsaretraced.

1

Accessesoutsidethetraceregionsaretraced.

Privilegemode(write):

0

AllowtracingofaccessesinsidetheregionssetinRTPRAMxREGy

1

AllowtracingofaccessesoutsidetheregionssetinRTPRAMxREGy(Section31.4.4)

3-0

ON/OFF

ON/Offswitch.

Userandprivilegemode(read):

Ah

Tracingofdataisenabled.

AllOthers

Tracingofdataisdisabled.

Privilegemode(write):

Ah

EnableTracingofdata.Ifthereisanypreviouscaptureddataremaining,itwillbeshiftedout.

AllOthers

Disabletracingofdata.Ifthereisstilldataleftintheshiftregister,itwillbeshiftedoutbefore

disablingtheshiftoperations.ThedatacapturedintheFIFOremainsthereuntiltheON/OFF

bitsaresettoAh.

NOTE:Itisrecommendedtowrite5htodisablethemoduletopreventasofterrorfrom

enablingthemoduleinadvertentlybyasinglebitflip.

Table31-8.FIFOCorrespondingAddresses

FIFO

Address

1

FFF83000h

2

FFF83400h

4

FFF83C00h

Table31-9.PinsUsedforDataCommunication

PortWidth(PW)

PinsUsed

00

RTPDATA[1:0]

01

RTPDATA[3:0]

10

RTPDATA[7:0]

11

RTPDATA[15:0]

1699

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.2RTPTraceEnableRegister(RTPTRENA)

Thisregisterenables/disablestracingofthedifferentRAMblocksortheperipheralsindividually.

Figure31-10andTable31-10illustratethisregister.

Figure31-10.RTPTraceEnableRegister(RTPTRENA)[offset=04h]

31

25

24

23

16

Reserved

ENA4

Reserved

R-0

R/WP-0

R-0

15

9

8

7

1

0

Reserved

ENA2

Reserved

ENA1

R-0

R/WP-0

R-0

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table31-10.RTPTraceEnableRegister(RTPTRENA)FieldDescriptions

Bit

Field

Value

Description

31-25

Reserved

0

Readreturns0.Writeshavenoeffect.

24

ENA4

Enabletracingforperipherals.ThisbitenablestracingintoFIFO4intracemode(read/write)or

directdatamode(read)operations.InDirectDataModewriteoperations,thisbitwillbeignored

andtracingintoFIFO4willbedisabled.

Userandprivilegemode(read):

0

Tracingisdisabled.

1

Tracingisenabled.

Privilegemode(write):

0

Disabletracing.IfRTPGLBCTRL.ON/OFF=Ah,dataalreadycapturedinFIFO4willstillbe

transmitted(Section31.4.1).

1

Enabletracing.

23-9

Reserved

0

Readreturns0.Writeshavenoeffect.

8

ENA2

EnabletracingforRAMblock2.ThisbitenablestracingintoFIFO2inTraceMode(read/write)or

DirectDataMode(read)operations.InDirectDataModewriteoperations,thisbitwillbeignored

andtracingintoFIFO2willbedisabled.

Userandprivilegemode(read):

0

Tracingisdisabled.

1

Tracingisenabled.

Privilegemode(write):

0

Disabletracing.IfRTPGLBCTRL.ON/OFF=Ah,dataalreadycapturedinFIFO2willstillbe

transmitted.

1

Enabletracing.

7-1

Reserved

0

Readreturns0.Writeshavenoeffect.

0

ENA1

EnabletracingforRAMblock1.ThisbitenablestracingintoFIFO1inTraceMode(read/write)or

DirectDataMode(read)operations.InDirectDataModewriteoperations,thisbitwillbeignored

andtracingintoFIFO1willbedisabled.

Userandprivilegemode(read):

0

Tracingisdisabled.

1

Tracingisenabled.

Privilegemode(write):

0

Disabletracing.IfRTPGLBCTRL.ON/OFF=Ah,dataalreadycapturedinFIFO1willstillbe

transmitted.

1

Enabletracing.

1700

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.3RTPGlobalStatusRegister(RTPGSR)

Thisregisterprovidesstatusinformationofthemodule.Figure31-11andTable31-11illustratethis

register.

Figure31-11.RTPGlobalStatusRegister(RTPGSR)[offset=08h]

31

16

Reserved

R-0

15

13

12

11

10

9

8

Reserved

EMPTYSER

EMPTYPER

Reserved

EMPTY2

EMPTY1

R-0

R-1

R-1

R-0

R-1

R-1

7

4

3

2

1

0

Reserved

OVFPER

Reserved

OVF2

OVF1

R-0

R/WPC-0

R-0

R/WPC-0

R/WPC-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table31-11.RTPGlobalStatusRegister(RTPGSR)[offset=08h]FieldDescriptions

Bit

Field

Value

Description

31-13

Reserved

0

Readreturns0.Writeshavenoeffect.

12

EMPTYSER

Serializerempty.Thisbitdeterminesifthereisdataleftintheserializer.

0

Serializerholdsdatawhichisshiftedout

1

Serializerisempty.

11

EMPTYPER

PeripheralFIFOempty.ThisbitdeterminesifthereareentriesleftintheFIFO.

0

FIFO4containsentries

1

FIFO4isempty.

10

Reserved

0

Readreturns0.Writeshavenoeffect.

9

EMPTY2

RAMblock2FIFOempty.ThisbitdeterminesifthereareentriesleftintheFIFO.

0

FIFO2containsentries

1

FIFO2isempty.

8

EMPTY1

RAMblock1FIFOempty.ThisbitdeterminesifthereareentriesleftintheFIFO.

0

FIFO1containsentries

1

FIFO1isempty.

7-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3

OVFPER

OverflowperipheralFIFO.ThisflagindicatesthatFIFO4hadalllocationsfullandanother

attempttowritedatatoitoccurred.ThebitwillnotbeclearedautomaticallyiftheFIFOisemptied

again.ThebitwillstaysetuntiltheCPUclearsit.

Userandprivilegemode(read):

0

Nooverflowoccurred.

1

Anoverflowoccurred.

Privilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Thebitiscleared.

2

Reserved

0

Readreturns0.Writeshavenoeffect.

1701

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table31-11.RTPGlobalStatusRegister(RTPGSR)[offset=08h]FieldDescriptions(continued)

Bit

Field

Value

Description

1

OVF2

OverflowRAMblock2FIFO.ThisflagindicatesthatFIFO2hadalllocationsfullandanother

attempttowritedatatoitoccurred.ThebitwillnotbeclearedautomaticallyiftheFIFOisemptied

again.ThebitwillstaysetuntiltheCPUclearsit.

Userandprivilegemode(read):

0

Nooverflowoccurred.

1

Anoverflowoccurred.

Privilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Thebitiscleared.

0

OVF1

OverflowRAMblock1FIFO.ThisflagindicatesthatFIFO1hadalllocationsfullandanother

attempttowritedatatoitoccurred.ThebitwillnotbeclearedautomaticallyiftheFIFOisemptied

again.ThebitwillstaysetuntiltheCPUclearsit.

Userandprivilegemode(read):

0

Nooverflowoccurred.

1

Anoverflowoccurred.

Privilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Thebitiscleared.

1702

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.4RTPRAM1TraceRegion[1:2]Register(RTPRAM1REG[1:2])

Figure31-12andTable31-12illustratetheseregisters.

Figure31-12.RTPRAM1TraceRegion[1:2]Register(RTPRAM1REG[1:2])[offset=0Ch,10h]

31

30

29

28

27

24

23

18

17

16

Rsvd.

CPU_DMA

RW

BLOCKSIZE

Reserved

STARTADDR

R-0

R/WP-0

R/WP-0

R/WP-0

R-0

R/WP-0

15

0

STARTADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table31-12.RTPRAM1TraceRegion[1:2]Register(RTPRAM1REG[1:2])FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-29

CPU_DMA

CPUand/orothermasteraccess.Thisbitfieldindicatesifreadorwriteoperationsaretraced

eithercomingfromtheCPUand/orfromtheothermaster.

Userandprivilegemoderead,privilegemodewrite:

0

ReadorwriteoperationsaretracedwhencomingfromtheCPUandtheothermaster.

1h

ReadorwriteoperationsaretracedonlywhencomingfromtheCPU.

2h

Readorwriteoperationsaretracedonlywhencomingfromtheothermaster.

3h

Reserved

28

RW

Read/Write.ThisbitindicatesifreadorwriteoperationsaretracedinTraceModeorDirect

DataMode(readoperation).IfconfiguredforwriteinDirectDataMode(RTPGLBCTRL),the

datacapturedwillbediscarded.AwriteoperationinDirectDataModehastobedirectlytothe

RTPDDMWregisterinsteadoftoRAM.DependingontheINV_RGNbitsetting,accessesinto

oroutsidetheregionwillbetraced.

Userandprivilegemode(read):

0

Readoperationswillbecaptured.

1

Writeoperationswillbecaptured.

Privilegemode(write):

0

Tracereadaccesses.

1

Tracewriteaccesses.

27-24

BLOCKSIZE

Thesebitsdefinethelengthofthetraceregion.DependingonthesettingofINV_RGN

(Section31.4.1),accessesinsideoroutsidetheregiondefinedbythestartaddressand

blocksizewillbetraced.IfallbitsofBLOCKSIZEare0,theregionisdisabledandnodatawill

becaptured.

Regionsize(inbytes):

0

0

1h

256

2h

512

3h

1K

4h

2K

Ah

128K

Bh

256K

Ch-Fh

Reserved

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17-0

STARTADDR

0-3FFFFh

Thesebitsdefinethestartingaddressoftheaddressregionthatshouldbetraced.Thestart

addresshastobeamultipleoftheblocksizechosen.Ifthestartaddressisnotamultipleof

theblocksize,thestartoftheregionwillbeginatthenextlowerblocksizeboundary.

1703

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.5RTPRAM2TraceRegion[1:2]Register(RTPRAM2REG[1:2])

Figure31-13andTable31-13illustratetheseregisters.

Figure31-13.RTPRAM2TraceRegion[1:2]Register(RTPRAM2REG[1:2])[offset=14h,18h]

31

30

29

28

27

24

23

18

17

16

Rsvd.

CPU_DMA

RW

BLOCKSIZE

Reserved

STARTADDR

R-0

R/WP-0

R/WP-0

R/WP-0

R-0

R/WP-0

15

0

STARTADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table31-13.RTPRAM2TraceRegion[1:2]Register(RTPRAM2REG[1:2])FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-29

CPU_DMA

CPUand/orothermasteraccess.Thisbitfieldindicatesifreadorwriteoperationsaretraced

eithercomingfromtheCPUand/orfromtheothermaster.

Userandprivilegemoderead,privilegemodewrite:

0

ReadorwriteoperationsaretracedwhencomingfromtheCPUandtheothermaster.

1h

ReadorwriteoperationsaretracedonlywhencomingfromtheCPU.

2h

Readorwriteoperationsaretracedonlywhencomingfromtheothermaster.

3h

Reserved

28

RW

Read/Write.ThisbitindicatesifreadorwriteoperationsaretracedinTraceModeorDirect

DataMode(readoperation).IfconfiguredforwriteinDirectDataMode(RTPGLBCTRL),the

datacapturedwillbediscarded.AwriteoperationinDirectDataModehastobedirectlytothe

RTPDDMWregisterinsteadoftoRAM.DependingontheINV_RGNbitsetting,accessesinto

oroutsidetheregionwillbetraced.

Userandprivilegemode(read):

0

Readoperationswillbecaptured.

1

Writeoperationswillbecaptured.

Privilegemode(write):

0

Tracereadaccesses.

1

Tracewriteaccesses.

27-24

BLOCKSIZE

Thesebitsdefinethelengthofthetraceregion.DependingonthesettingofINV_RGN

(Section31.4.1),accessesinsideoroutsidetheregiondefinedbythestartaddressand

blocksizewillbetraced.IfallbitsofBLOCKSIZEare0,theregionisdisabledandnodatawill

becaptured.

Regionsize(inbytes):

0

0

1h

256

2h

512

3h

1K

4h

2K

Ah

128K

Bh

256K

Ch-Fh

Reserved

23-18

Reserved

0

Readreturns0.Writeshavenoeffect.

17-0

STARTADDR

0-3FFFFh

Thesebitsdefinethestartingaddressoftheaddressregionthatshouldbetraced.Thestart

addresshastobeamultipleoftheblocksizechosen.Ifthestartaddressisnotamultipleof

theblocksize,thestartoftheregionwillbeginatthenextlowerblocksizeboundary.

1704

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.6RTPPeripheralTraceRegion[1:2]Registers(RTPPERREG[1:2])

FIFO4isdedicatedfortracingtheperipheralaccesses.Sincetheperipheralframeis16Mbytes,thestart

addresshastobedefinedasa24-bitvalue.However,onlybits16to0willbetransmittedintheprotocol.

BitREG(Section31.2.1.1)intheprotocolwillbe0iftherewasanaccesstotherangedefinedby

RTPPERREG1.REGwillbe1iftheaccesswasintotherangedefinedbyRTPPERREG2.Figure31-14

andTable31-14illustratetheseregisters.

Figure31-14.RTPPeripheralTraceRegion[1:2]Register(RTPPERREG[1:2])[offset=24h,28h]

31

30

29

28

27

24

23

16

Rsvd.

CPU_DMA

RW

BLOCKSIZE

STARTADDR

R-0

R/WP-0

R/WP-0

R/WP-0

R/WP-0

15

0

STARTADDR

R/WP-0

LEGEND:R/W=Read/Write;R=Readonly;WP=Writeinprivilegedmodeonly;-n=valueafterreset

Table31-14.RTPPeripheralTraceRegion[1:2]Register(RTPPERREG[1:2])FieldDescriptions

Bit

Field

Value

Description

31

Reserved

0

Readreturns0.Writeshavenoeffect.

30-29

CPU_DMA

CPUand/orothermasteraccess.Thisbitfieldindicatesifreadorwriteoperationsaretraced

eithercomingfromtheCPUand/orfromtheothermaster.

Userandprivilegemoderead,privilegemodewrite:

0

ReadorwriteoperationsaretracedwhencomingfromtheCPUandtheothermaster.

1h

ReadorwriteoperationsaretracedonlywhencomingfromtheCPU.

2h

Readorwriteoperationsaretracedonlywhencomingfromtheothermaster.

3h

Reserved

28

RW

Read/Write.ThisbitindicatesifreadorwriteoperationsaretracedinTraceModeorDirect

DataMode(readoperation).IfconfiguredforwriteinDirectDataMode(RTPGLBCTRL),the

datacapturedwillbediscarded.AwriteoperationinDirectDataModehastobedirectlytothe

RTPDDMWregisterinsteadoftoRAM.DependingontheINV_RGNbitsetting,accessesinto

oroutsidetheregionwillbetraced.

Userandprivilegemode(read):

0

Readoperationswillbecaptured.

1

Writeoperationswillbecaptured.

Privilegemode(write):

0

Tracereadaccesses.

1

Tracewriteaccesses.

27-24

BLOCKSIZE

Thesebitsdefinethelengthofthetraceregion.DependingonthesettingofINV_RGN

(Section31.4.1),accessesinsideoroutsidetheregiondefinedbythestartaddressand

blocksizewillbetraced.IfallbitsofBLOCKSIZEare0,theregionisdisabledandnodatawill

becaptured.

Regionsize(inbytes):

0

0

1h

256

2h

512

3h

1K

4h

2K

Ah

128K

Bh

256K

Ch-Fh

Reserved

23-0

STARTADDR

0-FFFFFFh

Thesebitsdefinethestartingaddressoftheaddressregionthatshouldbetraced.Thestart

addresshastobeamultipleoftheblocksizechosen.Ifthestartaddressisnotamultipleof

theblocksize,thestartoftheregionwillbeginatthenextlowerblocksizeboundary.

1705

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.7RTPDirectDataModeWriteRegister(RTPDDMW)

TheCPUhastowritedatatothisregisterifthemoduleisusedinDirectDataModewriteconfiguration.

Figure31-15andTable31-15illustratethisregister.

Figure31-15.RTPDirectDataModeWriteRegister(RTPDDMW)[offset=2Ch]

31

16

DATA

R/W-0

15

0

DATA

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-15.RTPDirectDataModeWriteRegister(RTPDDMW)[offset=2Ch]FieldDescriptions

Bit

Field

Value

Description

31-0

DATA

0-FFFFFFFFh

ThisregistermustbewrittentoinaDirectDataModewriteoperationtostorethedatainto

FIFO1.Datawrittenmustberight-aligned.IftheFIFOisfull,thereactiondependsonthe

settingoftheHOVFbit(Section31.4.1).Ifthebitisset,themasterwritingthedatawillbe

waitstated.Ifthebitiscleared,previousdatawrittentotheregisterwillbeoverwritten.

Readsofthisregisteralwaysreturn0.

1706

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.8RTPPinControl0Register(RTPPC0)

ThisregisterconfigurestheRTPpinsasfunctionalorGIOpins.Oncethepinisconfiguredinfunctional

mode,itoverridesthesettingsintheRTPPC1register.WritingtoRTPPC3,RTPPC4andRTPPC5will

havenoeffectforpinsconfiguredasfunctionalpins.Figure31-16andTable31-16illustratethisregister.

Figure31-16.RTPPinControl0Register(RTPPC0)[offset=34h]

31

19

18

17

16

Reserved

ENAFUNC

CLKFUNC

SYNCFUNC

R-0

R/W-0

R/W-0

R/W-0

15

0

DATAFUNC

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-16.RTPPinControl0Register(RTPPC0)[offset=34h]FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENAFUNC

FunctionalmodeofRTPENApin.

Userandprivilegemode(read):

0

PinisusedinGIOmode.

1

Pinisusedinfunctionalmode.

Userandprivilegemode(write):

0

ConfigurepintoGIOmode.

1

Configurepintofunctionalmode.

17

CLKFUNC

FunctionalmodeofRTPCLKpin.

Userandprivilegemode(read):

0

PinisusedinGIOmode.

1

Pinisusedinfunctionalmode.

Userandprivilegemode(write):

0

ConfigurepintoGIOmode.

1

Configurepintofunctionalmode.

16

SYNCFUNC

FunctionalmodeofRTPSYNCpin.

Userandprivilegemode(read):

0

PinisusedinGIOmode.

1

Pinisusedinfunctionalmode.

Userandprivilegemode(write):

0

ConfigurepintoGIOmode.

1

Configurepintofunctionalmode.

15-0

DATAFUNC

FunctionalmodeofRTPDATA[15:0]pins.Thesebitsdefinewhetherthepinsareusedin

functionalmodeorinGIOmode.Eachbitrepresentsasinglepin.

Userandprivilegemode(read):

0

PinisusedinGIOmode.

1

Pinisusedinfunctionalmode.

Userandprivilegemode(write):

0

ConfigurepintoGIOmode.

1

Configurepintofunctionalmode.

1707

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.9RTPPinControl1Register(RTPPC1)

Oncethepinisconfiguredinfunctionalmode(RTPPC0,Section31.4.8),configuringthecorrespondingbit

inRTPPC1to0willnotdisabletheoutputdriver.Figure31-17andTable31-17illustratethisregister.

Figure31-17.RTPPinControl1Register(RTPPC1)[offset=38h]

31

19

18

17

16

Reserved

ENADIR

CLKDIR

SYNCDIR

R-0

R/W-0

R/W-0

R/W-0

15

0

DATADIR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-17.RTPPinControl1Register(RTPPC1)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENADIR

DirectionofRTPENApin.ThisbitdefineswhetherthepinisusedasinputoroutputinGIO

mode.Thisbithasnoeffectwhenthepinisconfiguredinfunctionalmode.

Userandprivilegemode(read):

0

Pinisusedasinput.

1

Pinisusedasoutput.

Userandprivilegemode(write):

0

Configurepintoinputmode.

1

Configurepintooutputmode.

17

CLKDIR

DirectionofRTPCLKpin.ThisbitdefineswhetherthepinisusedasinputoroutputinGIO

mode.Thisbithasnoeffectwhenthepinisconfiguredinfunctionalmode.

Userandprivilegemode(read):

0

Pinisusedasinput.

1

Pinisusedasoutput.

Userandprivilegemode(write):

0

Configurepintoinputmode.

1

Configurepintooutputmode.

16

SYNCDIR

DirectionofRTPSYNCpin.ThisbitdefineswhetherthepinisusedasinputoroutputinGIO

mode.Thisbithasnoeffectwhenthepinisconfiguredinfunctionalmode.

Userandprivilegemode(read):

0

Pinisusedasinput.

1

Pinisusedasoutput.

Userandprivilegemode(write):

0

Configurepintoinputmode.

1

Configurepintooutputmode.

15-0

DATADIR

DirectionofRTPDATA[15:0]pins.Thesebitsdefinewhetherthepinsareusedasinputoroutput

inGIOmode.Thesebitshavenoeffectwhenthepinsareconfiguredinfunctionalmode.Eachbit

representsasinglepin.

Userandprivilegemode(read):

0

Pinisusedasinput.

1

Pinisusedasoutput.

Userandprivilegemode(write):

0

Configurepintoinputmode.

1

Configurepintooutputmode.

1708

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.10RTPPinControl2Register(RTPPC2)

ThisregisterrepresentstheinputvalueofthepinsifwheninGIOorfunctionalmode.Figure31-18and

Table31-18illustratethisregister.

Figure31-18.RTPPinControl2Register(RTPPC2)[offset=3Ch]

31

19

18

17

16

Reserved

ENAIN

CLKIN

SYNCIN

R-0

R-x

R-x

R-x

15

0

DATAIN

R-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-18.RTPPinControl2Register(RTPPC2)[offset=3Ch]FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENAIN

RTPENAinput.Thisbitreflectsthestateofthepininallmodes.Writestothisbithavenoeffect.

Userandprivilegemode(read):

0

Thepinisatlogiclow(0)(inputvoltageisVILorlower).

1

Thepinisatlogichigh(1)(inputvoltageisVIHorhigher).

17

CLKIN

RTPCLKinput.Thisbitreflectsthestateofthepininallmodes.Writestothisbithavenoeffect.

Userandprivilegemode(read):

0

Thepinisatlogiclow(0)(inputvoltageisVILorlower).

1

Thepinisatlogichigh(1)(inputvoltageisVIHorhigher).

16

SYNCIN

RTPSYNCinput.Thisbitreflectsthestateofthepininallmodes.Writestothisbithavenoeffect.

Userandprivilegemode(read):

0

Thepinisatlogiclow(0)(inputvoltageisVILorlower).

1

Thepinisatlogichigh(1)(inputvoltageisVIHorhigher).

15-0

DATAIN

RTPDATA[15:0]input.Thesebitsreflectthestateofthepinsinallmodes.Eachbitrepresentsa

singlepin.Writestothisbithavenoeffect.

Userandprivilegemode(read):

0

Thepinisatlogiclow(0)(inputvoltageisVILorlower).

1

Thepinisatlogichigh(1)(inputvoltageisVIHorhigher).

1709

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.11RTPPinControl3Register(RTPPC3)

ThebitsinthisregisterdefinethestateofthepinswhenconfiguredinGIOmodeasoutputpins.Oncea

pinisconfiguredinfunctionalmode(RTPPC0),changingthestateofthecorrespondingbitinRTPPC3

willnotaffectthepin'sstate.Figure31-19andTable31-19illustratethisregister.

Figure31-19.RTPPinControl3Register(RTPPC3)[offset=40h]

31

19

18

17

16

Reserved

ENAOUT

CLKOUT

SYNCOUT

R-0

R/W-0

R/W-0

R/W-0

15

0

DATAOUT

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-19.RTPPinControl3Register(RTPPC3)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENAOUT

RTPENAoutput.ThispinsetstheoutputstateoftheRTPENApin.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputlogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Setpintologiclow(0)(outputvoltageisVOLorlower).

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

17

CLKOUT

RTPCLKoutput.ThispinsetstheoutputstateoftheRTPCLKpin.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputlogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Setpintologiclow(0)(outputvoltageisVOLorlower).

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

16

SYNCOUT

RTPSYNCoutput.ThispinsetstheoutputstateoftheRTPSYNCpin.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputlogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Setpintologiclow(0)(outputvoltageisVOLorlower).

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

15-0

DATAOUT

RTPDATA[15:0]output.ThesebitssettheoutputstateoftheRTPDATA[15:0]pins.Eachbit

representsasinglepin.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputlogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Setpintologiclow(0)(outputvoltageisVOLorlower).

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

1710

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.12RTPPinControl4Register(RTPPC4)

Thisregisterprovidestheoptiontosetpinstoalogic1levelwithoutinfluencingthestateofotherpins.It

eliminatestheread-modify-writeoperationnecessarywithRTPPC3.Oncethepinisconfiguredin

functionalmode(RTPPC0),settingthecorrespondingbittooneinRTPPC4willnotaffectthepin'sstate.

Figure31-20andTable31-20illustratethisregister.

Figure31-20.RTPPinControl4Register(RTPPC4)[offset=44h]

31

19

18

17

16

Reserved

ENASET

CLKSET

SYNCSET

R-0

R/W-0

R/W-0

R/W-0

15

0

DATASET

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-20.RTPPinControl4Register(RTPPC4)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENASET

SetstheoutputstateofRTPENApintologichigh.ValueintheENASETbitsetsthedata

outputcontrolregisterbitto1regardlessofthecurrentvalueintheENAOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

17

CLKSET

SetstheoutputstateofRTPCLKpintologichigh.ValueintheCLKSETbitsetsthedata

outputcontrolregisterbitto1regardlessofthecurrentvalueintheCLKOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

16

SYNCSET

SetsoutputstateofRTPSYNCpinlogichigh.ValueintheSYNCSETbitsetsthedataoutput

controlregisterbitto1regardlessofthecurrentvalueintheSYNCOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

15-0

DATASET

SetsoutputstateofRTPDATA[15:0]pinstologichigh.ValueintheDATAxSETbitsetsthe

dataoutputcontrolregisterbitto1regardlessofthecurrentvalueintheDATAxOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologichigh(1)(outputvoltageisVOHorhigher).

1711

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.13RTPPinControl5Register(RTPPC5)

Thisregisterprovidestheoptiontosetpinstoalogic0levelwithoutinfluencingthestateofotherpins.It

eliminatestheread-modify-writeoperationnecessarywithRTPPC3.Oncethepinisconfiguredin

functionalmode(RTPPC0),settingthecorrespondingbittooneinRTPPC5willnotaffectthepinstate.

Figure31-21andTable31-21illustratethisregister.

Figure31-21.RTPPinControl5Register(RTPPC5)[offset=48h]

31

19

18

17

16

Reserved

ENACLR

CLKCLR

SYNCCLR

R-0

R/W-0

R/W-0

R/W-0

15

0

DATACLR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-21.RTPPinControl5Register(RTPPC5)[offset=48h]FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENACLR

SetstheoutputstateofRTPENApintologichigh.ValueintheENASETbitsetsthedata

outputcontrolregisterbitto1regardlessofthecurrentvalueintheENAOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologiclow(0)(outputvoltageisVOLorlower).

17

CLKCLR

SetsoutputstateofRTPCLKpintologiclow.ValueintheCLKCLRbitsetsthedataoutput

controlregisterbitto0regardlessofthecurrentvalueintheCLKOUTbit

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologiclow(0)(outputvoltageisVOLorlower).

16

SYNCCLR

SetsoutputstateofRTPSYNCpinlogiclow.ValueintheSYNCCLRbitclearsthedataoutput

controlregisterbitto0regardlessofthecurrentvalueintheSYNCOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologiclow(0)(outputvoltageisVOLorlower).

15-0

DATACLR

SetsoutputstateofRTPDATA[15:0]pinstologiclow.ValueintheDATAxCLRbitclearsthe

dataoutputcontrolregisterbitto0regardlessofthecurrentvalueintheDATAxOUTbit.

Userandprivilegemode(read):

0

Thepinisconfiguredtooutputalogiclow(0)(outputvoltageisVOLorlower).

1

Thepinisconfiguredtooutputlogichigh(1)(outputvoltageisVOHorhigher).

Userandprivilegemode(write):

0

Writingazerotothisbithasnoeffect.

1

Setpintologiclow(0)(outputvoltageisVOLorlower).

1712

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.14RTPPinControl6Register(RTPPC6)

Thesebitsconfigurethepinsinpush-pulloropen-drainfunctionality.Ifconfiguredtobeopen-drain,the

moduleonlydrivesalogiclowlevelonthepin.Anexternalpull-upresistorneedstobeconnectedtothe

pintopullithighwhenthepinisinhigh-impedancemode.Figure31-22andTable31-22illustratethis

register.

Figure31-22.RTPPinControl6Register(RTPPC6)[offset=4Ch]

31

19

18

17

16

Reserved

ENAPDR

CLKPDR

SYNCPDR

R-0

R/W-0

R/W-0

R/W-0

15

0

DATAPDR

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-22.RTPPinControl6Register(RTPPC6)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENAPDR

RTPENAOpendrainenable.Thisbitenablesopendrainfunctionalityonthepinifitisconfigured

asaGIOoutput(RTPPC0[18]=0;RTPPC1[18]=1).Ifthepinisconfiguredasafunctionalpin

(RTPPC0[18]=1),theopendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

17

CLKPDR

RTPCLKOpendrainenable.Thisbitenablesopendrainfunctionalityonthepinifitisconfigured

asGIOoutput(RTPPC0[17]=0;RTPPC1[17]=1).Ifthepinisconfiguredasfunctionalpin

(RTPPC0[17]=1),theopendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

16

SYNCPDR

RTPSYNCOpendrainenable.Thisbitenablesopendrainfunctionalityonthepinifitis

configuredasaGIOoutput(RTPPC0[16]=0;RTPPC1[16]=1).Ifpinisconfiguredasfunctionalpin

(RTPPC0[16]=1),theopendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

1713

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

Table31-22.RTPPinControl6Register(RTPPC6)FieldDescriptions(continued)

Bit

Field

Value

Description

15-0

DATAPDR

RTPDATA[15:0]Opendrainenable.Thesebitsenableopendrainfunctionalityonthepinsifthey

areconfiguredasaGIOoutput(RTPPC0[15:0]=0;RTPPC1[15:0]=1).Ifthepinsareconfiguredas

afunctionalpins(RTPPC0[15:0]=1),theopendrainfunctionalityisdisabled.

Userandprivilegemode(read):

0

Pinbehavesasnormalpush/pullpin

1

Pinoperatesinopendrainmode

Userandprivilegemode(write):

0

Configuresthepinaspush/pull

1

Configuresthepinasopendrain

1714

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comControlRegisters

31.4.15RTPPinControl7Register(RTPPC7)

Thebitsinregistercontrolthepullup/downfunctionalityofapin.Theinternalpullup/downcanbeenabled

ordisabledbythisregister.Theresetconfigurationofthesebitsisdeviceimplementationdependent.

Pleaseconsultthedevicedatasheetthisinformation.Figure31-23andTable31-23illustratethisregister.

Figure31-23.RTPPinControl7Register(RTPPC7)[offset=50h]

31

19

18

17

16

Reserved

ENADIS

CLKDIS

SYNCDIS

R-0

R/W-x

R/W-x

R/W-x

15

0

DATADIS

R/W-x

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-23.RTPPinControl7Register(RTPPC7)FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENADIS

RTPENAPulldisable.Thisbitremovesinternalpullup/pulldownfunctionalityfromthepinwhenit

isconfiguredasaninputpin(RTPPC1[18]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

17

CLKDIS

RTPCLKPulldisable.Thisbitremovestheinternalpullup/pulldownfunctionalityfromthepin

whenitisconfiguredasaninputpin(RTPPC1[17]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

16

SYNCDIS

RTPSYNCPulldisable.Removesinternalpullup/pulldownfunctionalityfromthepinwhen

configuredasaninputpin(RTPPC1[16]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

15-0

DATADIS

RTPDATA[15:0]Pulldisable.Removesinternalpullup/pulldownfunctionalityfromthepinswhen

configuredasinputpins(RTPPC1[15:0]=0).

Userandprivilegemode(read):

0

Pullup/pulldownfunctionalityenabled

1

Pullup/pulldownfunctionalitydisabled

Userandprivilegemode(write):

0

Enablespullup/pulldownfunctionality

1

Disablespullup/pulldownfunctionality

1715

SPNU499B–November2012–RevisedAugust2013

RAMTracePort(RTP)

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






ControlRegisterswww.ti.com

31.4.16RTPPinControl8Register(RTPPC8)

Thesebitscontroliftheinternalpulluporpulldownisconfiguredontheinputpin.Figure31-24and

Table31-24illustratethisregister.

Figure31-24.RTPPinControl8Register(RTPPC8)[offset=54h]

31

19

18

17

16

Reserved

ENAPSEL

CLKPSEL

SYNCPSEL

R-0

R/W-1

R/W-1

R/W-1

15

0

DATAPSEL

R/W-1

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table31-24.RTPPinControl8Register(RTPPC8)[offset=54h]FieldDescriptions

Bit

Field

Value

Description

31-19

Reserved

0

Readreturns0.Writeshavenoeffect.

18

ENAPSEL

RTPENAPullselect.ThisbitconfigurespulluporpulldownfunctionalityifRTPPC7[18]=0.

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

17

CLKPSEL

RTPCLKPullselect.ThisbitconfigurespulluporpulldownfunctionalityifRTPPC7[17]=0.

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

16

SYNCPSEL

RTPSYNCPullselect.ThisbitconfigurespulluporpulldownfunctionalityifRTPPC7[16]=0.

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

15-0

DATAPSEL

RTPDATA[15:0]Pullselect.Thesebitsconfigurepulluporpulldownfunctionalityif

RTPPC7[15:0]=0.

Userandprivilegemode(read):

0

Pulldownfunctionalityenabled

1

Pullupfunctionalityenabled

Userandprivilegemode(write):

0

Enablespulldownfunctionality

1

Enablespullupfunctionality

1716

RAMTracePort(RTP)

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Chapter32

SPNU499B–November2012–RevisedAugust2013

eFuseController

ThischapterdescribestheeFusecontroller.

Topic...........................................................................................................................Page

32.1Overview.......................................................................................................1718

32.2Introduction...................................................................................................1718

32.3eFuseControllerTesting.................................................................................1718

32.4eFuseControllerRegisters..............................................................................1721

1717

SPNU499B–November2012–RevisedAugust2013

eFuseController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






Overviewwww.ti.com

32.1Overview

Electricallyprogrammablefuses(eFuses)areusedtoconfigurethedeviceafterdeassertionofPORRST.

TheeFusevaluesarereadandloadedintointernalregistersaspartofthepower-on-resetsequence.The

eFusevaluesareprotectedwithsinglebiterrorcorrection,doublebiterrordetection(SECDED)codes.

Thesefusesareprogrammedduringtheinitialfactorytestofthedevice.TheeFusecontrollerisdesigned

sothatthestateoftheeFusescannotbechangedoncethedeviceispackaged.

32.2Introduction

TheeFusecontrollerautomaticallyreadsthevaluesoftheeFusesandshiftsthemintoregistersduringthe

power-onresetsequence.Noactionisrequiredfromtheapplicationcode.However,inasafetycritical

application,theusercodeshouldchecktoseeifacorrectableoranuncorrectableerrorwasdetected

duringtheresetsequenceandthenpreformaself-testontheeFusecontrollerECClogic.

32.3eFuseControllerTesting

32.3.1eFuseControllerConnectionstoESM

TherearethreeconnectionsfromtheeFusecontrollertotheErrorSignalingModule(ESM).Ifan

uncorrectableerroroccursduringtheloadingoftheeFusevaluesafterreset,agroupthree,channelone

errorandagrouponechannel40erroraresenttotheESM.ThegroupthreeerrorwillcausetheERROR

pintogolow.IfduringtheeFuseloadingacorrectableerroroccurs,onlyagrouponechannel40erroris

senttotheESM.IfanerroroccursduringtheeFusecontrollerselftest,thenagrouponechannel41error

andagrouponechannel40erroraresenttotheESM.Afterreset,bydefault,thegrouponeerrorsdonot

affecttheERRORpin.IfthesoftwareenablestheappropriatebitintheappropriateESMInfluenceError

PinSet/StatusRegister(ESMIEPSRn)whilethegrouponeerrorisset,theERRORpinwillgolow.

Table32-1.ESMSignalsSetbyeFuseController

SelfTest

UncorrectedLoad

CorrectableLoad

eFuseSelfTest

eFusestuckat0Test

ESMSignal

Failure

Error

Versiona:with

Versionb:without

Errorpin

Errorpin

Group3Channel1

X

X

Group1Channel40

X

X

X

Group1Channel41

X

X

X

32.3.2CheckingforeFuseErrorsAfterPowerUp

Forsafetycriticalsystems,itisrequiredthatyoucheckthestatusoftheeFusecontrollerafteradevice

reset.AsuggestedflowchartforcheckingtheeFusecontrollerafterdeviceresetisshowninFigure32-1.

FailuresduringtheeFuseselftestcanbegroupedintothreelevelsofseverity.Dependingonthesafety

criticalapplication,theerrorhandlingforeacherrortypemaybedifferent.

32.3.2.1Class1Error

Aclass1erroroftheeFusecontrollermeansthattherewasafailureduringtheautoloadsequence.The

valuesreadfromtheeFusescannotbereliedon.Alldeviceoperationissuspect.Aclass1erroris

indicatedbyasignaltogroup3channel1oftheESM.ThiswillcausetheERRORpintogoactivelow.

32.3.2.2Class2Errors

Aclass2errorisanindicationthatthesafetychecksoftheeFusecontrollerdidnotwork.Thesearealso

seriouserrorsbecauseyoucannolongerguaranteethatamoresevereerrordidnotoccur.

1718

eFuseController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comeFuseControllerTesting

32.3.2.3Class3Error

Aclass3errorindicatesthattherewasasinglebitfailurereadingtheeFusesthatwascorrectedbyECC

bits.Properoperationisstilllikely,butthesystemisnowatahigherriskforafuturenon-correctableerror.

Whenacorrectableerroroccurs,ESMgroup1,channel40willbeset.Inthesuggestedflowchartshown

inFigure32-1below,thesinglebiterrorisdeterminedbydirectlyreadingtheeFuseerrorstatusregister,

andnotdependingontheintegrityoftheconnectionsbetweentheeFusecontrollerandtheESM.

32.3.2.4StuckatZeroTest

ThepurposeofthestuckatzerotestistoverifythattheeFusecontrollercouldsignaltheESMifan

autoloaderrordidoccur.ItbasicallyverifiesthepaththroughtheeFusecontrollerandtotheESM.Thisis

donebywritingaspecialinstructiontotheeFusecontrollerboundaryregister,thenverifyingthatthe

properbitsaresetintheeFusecontrollerpinsregister.UponsuccessfulcompletionofthistestESM

group1channel41andESMgroup3channel1willbeset.ThiswillforcetheERRORpinlow.

•VersionA

–Writeboundaryregister(address0xFFF8C01C)with0x003FC000tosettheerrorsignals.

–Readpinsregister(address0xFFF8C02C)andverifythatbits14,12,11and10areset.

–Writeboundaryregister(address0xFFF8C01C)with0x003C0000,tocleartheerrorsignals.

–VerifythatESMgroup1channel41andgroup3channel1areset,thenclearthem.

IfthesystemcannotsupportatestwhichcausestheERRORpintogolow,thenthestuckatzerotestcan

bemodifiedasfollows:

•VersionB

–Writeboundaryregister(address0xFFF8C01C)with0x003BC000.

–Readpinsregister(address0xFFF8C02C)andverifythatbits14,12,and11areset.

–Writeboundaryregister(address0xFFF8C01C)with0x003C0000,tocleartheerrorsignals.

–VerifythatESMgroup1channel41isset,thenclearit.

Thisalternatemethodprovideslesstestcoveragebecausethepathfromtheuncorrectableerrorsignal

fromtheeFusecontrollertotheESMisnotspecificallytested.However,evenifthispathisbroken,

readingthefiveeFuseerrorstatusbitswillindicatethatanerroroccurred.

32.3.2.5eFuseECCLogicSelfTest

TheeFusecontrollerselftestperformsextensivevalidationoftheECClogicintheeFusecontroller.This

testshouldonlybeperformedonceforeverydevicePORRSTcycle.Performtheselftestbyfollowing

thesesteps:

•Write0x00000258totheselftestcyclesregister(EFCSTCY)ataddress0xFFF8C048.

•Write0x5362F97Ftotheselftestsignatureregister(EFCSTSIG)ataddress0xFFF8C04C.

•Write0x0000200Ftotheboundaryregisterataddress0xFFF8C01C.Thistriggerstheselftest.The

testtakes610VCLKcyclestocomplete.Theapplicationcanpollbit15ofthepinsregisterataddress

0xFFF8C02Ctowaitforthetesttocomplete.

•CheckESMgroup1channels40and41foranyerrors,neithershouldbeset.

•Verifythatbits4to0oftheeFuseErrorStatusregisterataddress0xFFF8C03Carezero.

1719

SPNU499B–November2012–RevisedAugust2013

eFuseController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated




eFuse ControllerTest

Is ESM group 3channel 1 set?

Stuck at zerotest pass?

Did self testpass?PASSYYYYNNNN

Class 1errorroutineYN

Run stuckat zero test

Run eFuseself test

Class 2errorroutineYN

Test bits 4-0 ofeFuse Errorstatus register

Are all 5 bitszero?

Are the 5 bits =0x15?

Class 3errorroutine

Run eFuseself test

Did self testpass?



eFuseControllerTestingwww.ti.com

Figure32-1.eFuseSelfTestFlowChart

1720

eFuseController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comeFuseControllerRegisters

32.4eFuseControllerRegisters

AllregistersintheeFuseControllermoduleare32-bit,word-aligned;8-bit,16-bitand32-bitaccessesare

allowed.Thefollowingtableprovidesaquickreferencetoeachoftheseregisters.Specificbitdescriptions

arediscussedinthefollowingsubsections.Thebaseaddressforthecontrolregistersis0xFFF8C000.

Table32-2.eFuseControllerRegisters

Offset

Acronym

RegisterDescription

Section

FFF8C01Ch

EFCBOUND

EFCBoundaryControlRegister

Section32.4.1

FFF8C02Ch

EFCPINS

EFCPinsRegister

Section32.4.2

FFF8C03Ch

EFC_ERR_STAT

EFCErrorStatusRegister

Section32.4.3

FFF8C048h

EFC_ST_CY

EFCSelfTestCyclesRegister

Section32.4.4

FFF8C04Ch

EFC_ST_SIG

EFCSelfTestSignatureRegister

Section32.4.5

32.4.1EFCBoundaryControlRegister(EFCBOUND)

Figure32-2andTable32-3describetheEFCBOUNDregister.TheeFuseBoundaryControlRegisteris

usedtotesttheconnectionsbetweentheeFusecontrollerandtheESMmodule.TheeFuseBoundary

ControlRegisterisalsousedtoinitiateaneFusecontrollerECCself-test.

Figure32-2.EFCBoundaryControlRegister(EFCBOUND)[offset=1Ch]

31

24

Reserved

R-0

23

22

21

20

19

18

17

16

Reserved

EFCSelfTest

EFCSingleBit

EFCInstruction

EFCAutoload

SelfTest

SingleBit

Error

Error

Error

Error

ErrorOE

ErrorOE

R-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

R/W-0

15

14

13

12

8

Instruction

Autoload

EFCECCSelftest

Reserved

ErrorOE

ErrorOE

Enable

R/W-0

R/W-0

R/W-0

R-0

7

4

3

0

Reserved

InputEnable[3:0]

R-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table32-3.EFCBoundaryRegister(EFCBOUND)FieldDescriptions

Bit

Field

Value

Description

31-22

Reserved

0

Readreturns0.Writeshavenoeffect.

21

EFCSelfTestError

Thisbitdrivestheselftesterrorsignalwhenbit17(SelfTestErrorOE)ishigh.Thissignal

isattachedtoESMerrorGroup1,Channel41.

0

DrivestheselftesterrorsignallowifSelfTestOEishigh

1

DrivestheselftesterrorsignalhighifSelfTestOEishigh

20

EFCSingleBitError

Thisbitdrivesthesinglebiterrorsignalwhenbit16(SinglebitErrorOE)ishigh.Thissignal

isattachedtoESMerrorGroup1,Channel40.

0

DrivestheselftesterrorsignallowifSingleBitErrorOEishigh

1

DrivestheselftesterrorsignalhighifSingleBitErrorOEishigh

19

EFCInstructionError

Thisbitdrivestheinstructionerrorsignalwhenbit15(InstructionErrorOE)ishigh.This

signalisusedtodenoteanerroroccurredduringe-fuseprogramming.Thissignalisnot

attachedtotheESM.

0

DrivestheInstructionErrorsignallowifInstructionErrorOEishigh

1

DrivestheInstructionErrorsignalhighifInstructionErrorOEishigh

1721

SPNU499B–November2012–RevisedAugust2013

eFuseController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






eFuseControllerRegisterswww.ti.com

Table32-3.EFCBoundaryRegister(EFCBOUND)FieldDescriptions(continued)

Bit

Field

Value

Description

18

EFCAutoloadError

ThisbitdrivestheAutoloadErrorsignalwhenbit14(AutoloadErrorOE)ishigh.Thissignal

isattachedtoESMerrorGroup3,Channel1.

0

DrivestheAutoloadErrorsignallowifAutoloadErrorOEishigh

1

DrivestheAutoloadErrorsignalhighifAutoloadErrorOEishigh

17

SelfTestErrorOE

TheSelfTestErrorOutputEnablebitdeterminesiftheEFCSelfTestsignalcomesfromthe

eFusecontrollerorfrombit21oftheboundaryregister.

0

EFCSelfTestErrorcomesfromeFusecontroller

1

EFCSelfTestErrorcomesfromtheboundaryregister

16

SingleBitErrorOE

ThesinglebiterroroutputenablesignaldeterminesiftheEFCSingleBitErrorsignalcomes

fromtheeFusecontrollerorfrombit20oftheboundaryregister.

0

EFCSingleBitErrorcomesfromeFusecontroller

1

EFCSingleBitErrorcomesfromtheboundaryregister

15

InstructionErrorOE

TheinstructionerroroutputenablesignaldeterminesiftheEFCInstructionErrorsignal

comesfromtheeFusecontrollerorfrombit19oftheboundaryregister.

0

EFCInstructionErrorcomesfromeFusecontroller

1

EFCInstructionErrorcomesfromtheboundaryregister

14

AutoloadErrorOE

TheautoloaderroroutputenablesignaldeterminesiftheEFCAutoloadErrorsignalcomes

fromtheeFusecontrollerorfrombit18oftheboundaryregister.

0

EFCAutoloadErrorcomesfromeFusecontroller

1

EFCAutoloadErrorcomesfromtheboundaryregister

13

EFCECCSelftest

TheeFuseControllerECCSelftestEnablebitstartstheselftestoftheECClogicifthefour

Enable

inputenablebits(EFCBOUND[3:0)areall1s.

0

Noaction

1

StartECCselftestifEFCBOUND[3:0]areFh.

12-4

Reserved

0

Readreturns0.Writeshavenoeffect.

3-0

InputEnable

TheeFuseControllerECCSelftestEnablebitstartstheselftestoftheECClogicifthefour

inputenablebits(EFCBOUND[3:0)areall1s.

Fh

ECCselftestcanbestartedif“EFCECCSelftestEnable”,bit13,isset

Allothers

ECCselftestcannotbestarted.

1722

eFuseController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comeFuseControllerRegisters

32.4.2EFCPinsRegister(EFCPINS)

Figure32-3andFigure32-3describetheEFCPINSregister.

Figure32-3.EFCPinsRegister(EFCPINS)[offset=2Ch]

31

16

Reserved

R-0

15

14

13

12

11

10

9

8

EFCSelftest

EFCSelftest

Reserved

EFCSingleBit

EFCInstruction

EFCAutoload

Reserved

Done

Error

Error

Error

Error

R-0

R-0

R-0

R-x

R-0

R-x

R-0

7

0

Reserved

R-0

LEGEND:R=Readonly;-n=valueafterreset

Table32-4.EFCPinsRegister(EFCPINS)FieldDescriptions

Bit

Name

Value

Description

31–16

Reserved

0

Readsreturnzeros,writeshavenoeffect.

15

EFCSelftestDone

ThisbitcanbepolledtodeterminewhentheEFCECCselftestiscomplete

0

EFCECCselftestisnotcomplete.

1

EFCECCselftestiscomplete.

14

EFCSelftestError

Thisbitindicatesthepass/failstatusoftheEFCECCSelftestoncetheEFCSelftestDone

bit(bit15)isset.

0

EFCECCSelftestpassed.

1

EFCECCSelftestfailed

13

Reserved

0

Readsreturnzeros.DoNOTwritea1tothisbit.

12

EFCSingleBitError

ThisbitindicatesifasinglebiterrorwascorrectedbytheECClogicduringtheautoload

afterreset.

0

Nosinglebiterrorwasdetected.

1

Asinclebiterrorwasdetectedandcorrected

11

EFCInstructionError

Thisbitindicatesanerroroccuredduringafactorytestorprogramoperation.Thisbit

shouldnotbesetfromnormaluse.

0

Noinstructionerrordetected.

1

Anerroroccurredduringafactorytestorprogramoperation.

10

EFCAutoloadError

Thisbitindicatesthatsomenon-correctableerroroccurredduringtheautoloadsequence

afterreset.ThisbitalsosetsESMgroup3,channel1.

0

Theautoloadfunctioncompletedsuccessfully.

1

Therewerenon-correctableerrorsduringtheautoloadsequence

9-0

Reserved

0

Readsreturnzeros.DoNOTwritea1tothisbit.

1723

SPNU499B–November2012–RevisedAugust2013

eFuseController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






eFuseControllerRegisterswww.ti.com

32.4.3EFCErrorStatusRegister(EFCERRSTAT)

Figure32-4andTable32-5describetheEFCERRSTATregister.

Figure32-4.EFCErrorStatusRegister(EFCERRSTAT)[offset=3Ch]

31

8

Reserved

R-0

7

6

5

4

0

Reserved

InstrucDone

ErrorCode

R-0

R/W-0

R/W-0

LEGEND:R/W=Read/Write;R=Readonly;-n=valueafterreset

Table32-5.EFCErrorStatusRegister(EFCERRSTAT)FieldDescriptions

Bit

Name

Value

Description

31–6

Reserved

0

Readsreturnzeros,writeshavenoeffect.

5

InstrucDone

Instructiondone.UsedtoindicatethattheeFuseselftesthascompleted

0

TheeFusecontrollerisstillexecuting

1

TheeFusecontrollerhascompletedexecuting

4-0

ErrorCode

TheerrorstatusofthelastinstructionexecutedbytheeFuseController

0

Noerror

5h

Anuncorrectable(multibit)errorwasdetectedduringthepower-onautoloadsequence

15h

Atleastonesinglebiterrorwasdetectedandcorrectedduringthepower-onautoload

sequence

18h

ThesignaturegeneratedbytheECCself-testlogicdidnotmatchthegoldensignature

writtenintheEFCSTSIGregister.TheEDACcircuitrymighthaveafault.

Allother

Allothervaluesarereservedfore-fusesystemtestsandarenotexpectedtooccurin

values

normalsystemuse.

32.4.4EFCSelfTestCyclesRegister(EFCSTCY)

Figure32-5andTable32-6describetheEFCSTCYregister.

Figure32-5.EFCSelfTestCyclesRegister(EFCSTCY)[offset=48h]

31

16

Cycles[31:16]

R/W-0

15

0

Cycles[15:0]

R/W-0

LEGEND:R/W=Read/Write;-n=valueafterreset

Table32-6.EFCSelfTestCyclesRegister(EFCSTCY)FieldDescriptions

Bit

Name

Description

31–0

Cycles

ThisregisterisusedtodeterminethenumberofcyclestoruntheeFusecontrollerECClogicselftest.Itis

recommendedtouseavalueof600(0x00000258).

1724

eFuseController

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comeFuseControllerRegisters

32.4.5EFCSelfTestSignatureRegister(EFCSTSIG)

Figure32-6andTable32-7describetheEFCSTSIGregister.

Figure32-6.EFCSelfTestCyclesRegister(EFCSTSIG)[offset=4Ch]

31

16

Signature[31:16]

R/W-0

15

0

Signature[15:0]

R/W-0

LEGEND:R/W=Read/Write;-n=valueafterreset

Table32-7.EFCSelfTestCyclesRegister(EFCSTSIG)FieldDescriptions

Bit

Name

Description

31–0

Signature

ThisregisterisusedtoholdtheexpectedsignaturefortheeFuseECClogicselftest.Itisrecommendedto

writeavalueof0x5362F97Ftothisregisterandavalueof600totheEFCSTCTregister.Ifafterrunning

theeFuseECClogicselftest,thecalculatedsignaturedoesnotmatchtheexpectedsignatureinthe

EFCSTSIGregister,thenavalueof11000bisstoredintheEFCERRSTATregister.

1725

SPNU499B–November2012–RevisedAugust2013

eFuseController

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






AppendixA

SPNU499B–November2012–RevisedAugust2013

RevisionHistory

Minorchangeshavebeenmadethroughoutthisdocument.TableA-1listsmajorchangesmadesincethe

previousversionofthisdocument.

TableA-1.RevisionHistory

Chapter

Location

Additions/Modifications/Deletions

Architecture

Section2.1

DeletedDeviceEndiannesssubsection.

MovedtheMemoryOrganizationandExceptionssectionsbeforetheClocks

Section2.2

section.

UpdatedSpecialConsiderationscolumntoincludelistofmodulesthatare

Table2-10

tiedtoeachdomain.

Table2-11

UpdatedWakeUpTimecolumn.

UpdatedDescriptionofCLRCLKSR[7-3]OFFbitforValue=0Readand

Value=1ReadandWrite.

Table2-30

UpdatedDescriptionofCLRCLKSR[1-0]OFFbitforValue=0Readand

Value=1ReadandWrite.

Table2-40

UpdatedMSTGENAandMINITGENAvaluesto5hforMSIENA=1.

Table2-43

UpdatedDescriptionofPLLMULbit.

Section2.5.1.26

DeletedNOTE.

Figure2-30

UpdatedMULMODbits20-16resetvalue.

Table2-44

UpdatedDescriptionofSPR_AMOUNTbit.

UpdatedbitrangeofReservedbitsto23-17andOSCFRQCONFIGCNTbitto

Figure2-34

16.

UpdatedDescriptionofOUTPUT_BUFFER_LOW_EMI_MODEbit[9]toTDI

Table2-52

andbit[10]toTDO.

UpdatedDescriptionofODPLL2,PLLDIV2,REFCLKDIV2,andPLLMUL2

Table2-73

bits.

UpdatedDescriptionofVCLKA4_DIV_CDDISandVCLKA3_DIV_CDDISbits;

Table2-76

0=Enable,1=Disable

F021Flash

Section5.4.2

AddedOTPMemorysubsection.Subsequentfigureandtablesrenumbered.

ModuleController

Table5-13

DeletedFlashLockRegister(FLOCK)subsection.

Figure5-8

Updatedfigure.AddedEOFENbit10.

Table5-15

UpdatedDescriptionofEDACMODEbits.

Section5.7.7

Updatedthirdparagraphtoremovebit25.

Table5-34

UpdatedDescriptionofILAbit.Removedreferencetoerase_otpcommand.

Table5-45

UpdatedDescriptionofWR_ENAbitforValue=5h.

Figure5-41

UpdatedresetvalueofReservedbits31-24to5h.

Table5-48

UpdatedValuecolumnofReservedbits31-20to050h.

UpdatedresetvalueofReservedbits19-16to1.

Figure5-48

UpdatedresetvalueofReservedbits3-0to2h.

UpdatedValuecolumnofReservedbits19-16to1.

Table5-55

UpdatedValuecolumnofReservedbits3-0to2h.

Tightly-Coupled

Section6.4

Updatedlastsentenceto0Ch.

RAM(TCRAM)

Table6-9

UpdatedTESTENABLEbit.Enable=Ah.

Module

1726

RevisionHistory

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comAppendixA

TableA-1.RevisionHistory(continued)

Chapter

Location

Additions/Modifications/Deletions

Programmable

Figure7-2

Changedfigure.DeletedFSRF1.

Built-InSelf-Test

Section7.3.1

Changedstep12.DeletedFSRF1.

(PBIST)Module

Table7-1

Changedtable.DeletedFSRF1.

Section7.5.6

Changedsubsectiontitle.DeletedFSRF1.

Changedparagraph.

DeletedFailStatusFailRegister1(FSRF1)figure.Subsequentfigures

renumbered.

DeletedFailStatusFailRegister1(FSRF1)FieldDescriptionstable.

Subsequenttablesrenumbered.

Section7.6.1

Changedstep12.DeletedFSRF1.

Section7.6.2

Changedstep11.DeletedFSRF1.

CPUSelf-Test

Controller(STC)

Figure8-5

Updatedresetvalue.

Module

1727

SPNU499B–November2012–RevisedAugust2013

RevisionHistory

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






AppendixAwww.ti.com

TableA-1.RevisionHistory(continued)

Chapter

Location

Additions/Modifications/Deletions

Oscillatorand

Section10.2

Updatedfourthparagraph.

PLL

Section10.3.2

Updatedsecondparagraph.

Section10.3.3

Updatedfirstparagraph.

Updatedrangeinfirstbulletofsecondparagraph.

Section10.4

Updatednominalfrequencyanddeletedrangeinsecondbulletofsecond

paragraph.

Updatedrangeinfirstparagraph.

Section10.4.1

Updatedequationsintable.

Section10.4.2

Updatedthirdparagraph.

Updatedfirstparagraph.

Section10.4.3

Updatedprocedure.

Section10.5.2

UpdateddescriptionsofRFSLIPandFBSLIP.

Updatedfirstparagraph.

Section10.5.2.1

Updatedbullet4.

Section10.5.2.2

Updatedbothparagraphs.

Section10.5.2.4

Updatedbothparagraphs.

Section10.5.3

Updatedthirdparagraph.

Updatedfirstparagraph.

Section10.5.4

Updatedbullets2,3,and4.

AddeddescriptionforrecoveringPLL2fromafailure

Section10.5.6

Updatedequation.

Section10.6

Updatedfirstfourparagraphs.

AddedClockSourceDisableRegister(CSDIS),ClockSourceDisableSet

Register(CSDISSET),ClockSourceDisableClearRegister(CSDISCLR),

andClockSourceValidStatusRegister(CSVSTAT).

ChangedSectionreferenceofPLLCTL1,PLLCTL2,andPLLCTL3registers.

ChangedSectionreferenceofGPREG1andCLKSLIPregisters.

AddedGlobalStatusRegister(GLBSTAT).

Table10-4

DeletedPLLControl1Register(PLLCTL1)subsection.

DeletedPLLControl2Register(PLLCTL2)subsection.

DeletedPLLControl3Register(PLLCTL3)subsection.

DeletedGeneralPurposeRegister1(GPREG1)subsection.

DeletedPLL1ClockSlipControlRegister(CLKSLIP)subsection.

ChangedSectionreferenceofLPOMONCTLandCLKTESTregisters.

Table10-5

DeletedLPO/ClockMonitorControlRegister(LPOMONCTL)subsection.

DeletedClockTestRegister(CLKTEST)subsection.

Dual-Clock

Table11-2

UpdatedDescriptionofDCCENA=5h.

Comparator

Figure11-17

UpdatedresetvalueofCNT0CLKSRCbit.

(DCC)Module

ErrorSignaling

AddedfourthsentencetofirstparagraphaboutESMStatusRegister1

Section12.1.2

Module(ESM)

(ESMSR1).

Figure12-1

AddedfootnoteaboutESMStatusRegister1(ESMSR1).

Section12.4.7

Addedsecondsentence.

1728

RevisionHistory

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






www.ti.comAppendixA

TableA-1.RevisionHistory(continued)

Chapter

Location

Additions/Modifications/Deletions

Real-Time

Equation24

AddednoteandcorrectedperiodwhenRTICPUCx=0

Interrupt(RTI)

AddedRTICompareInterruptClearEnableRegister,RTICompare0Clear

Module

Table13-1

Register,RTICompare1ClearRegister,RTICompare2ClearRegister,and

RTICompare3ClearRegister.

AddedRTICompareInterruptClearEnableRegister(RTIINTCLRENABLE)

Section13.3.35

subsection.

Section13.3.36

AddedRTICompare0ClearRegister(RTICMP0CLR)subsection.

Section13.3.37

AddedRTICompare1ClearRegister(RTICMP1CLR)subsection.

Section13.3.38

AddedRTICompare2ClearRegister(RTICMP2CLR)subsection.

Section13.3.39

AddedRTICompare3ClearRegister(RTICMP3CLR)subsection.

VectoredInterrupt

Section15.2.3

AddedparagraphaboutSoftware-BasedPriorityDecodingScheme.

Manager(VIM)

Figure15-17

UpdatedresetvalueofReservedbitsto3h.

Module

Table15-9

UpdatedValuecolumnofReservedbitto3h.

Figure15-23

UpdatedresetvalueofReservedbitsto3h.

Table15-11

UpdatedValuecolumnofReservedbitto3h.

Figure15-26

UpdatedresetvalueofReservedbitsto3h.

Table15-12

UpdatedValuecolumnofReservedbitto3h.

UpdatedValuecolumnofCAPEVTSRC1andCAPEVTSRC0bitsto5Fh.

Table15-17

UpdatedDescriptiontoInterruptrequest95.

ExternalMemory

Figure17-16

UpdatedresetvalueofReservedbits31-30to3h.

Interface(EMIF)

Table17-26

UpdatedValuecolumnofReservedbits31-30to3h.

Parameter

Figure18-3

UpdatedresetvalueofOTADDRbit.

OverlayModule

UpdatedValuecolumnofOTADDRbit.

(POM)

Table18-2

UpdatedValuecolumnofON/OFFbitwithcorrectenablevalue,Ah.

High-EndTimer

Table20-36

UpdatedValuecolumnofHETDCLRbit,0=unchanged.

(N2HET)Module

Section20.4.31

Addedfirstparagraph.

Section20.4.32

Addedfirstparagraph.

Figure20-66

ChangedIODFTENAbittoLBPTSTENAbit.

ChangedIODFTENAbittoLBPTSTENAbit.

Table20-47

UpdatedValueandDescriptioncolumnsofLBPTSTENAbit.

High-EndTimer

Table21-11

UpdatedDescriptionofHTURESbit.

TransferUnit

Table21-37

UpdatedNOTEinPARITY_ENAbitwithcorrectenablevalue,Ah.

(HTU)Module

ControllerArea

Network(DCAN)

Figure24-61

Updatedbitnames.

Module

Multi-Buffered

Section25.9.5

Deletedfirstsentenceofregisterdescription.

SerialPeripheral

Table25-12

UpdatedValuecolumnforRXINTFLGandRXOVRNINTFLGbits.

InterfaceModule

Figure25-31

UpdatedresetvalueofENAFUNandSCSFUNbits.

(MibSPI)

Figure25-32

UpdatedresetvalueofENADIRandSCSDIRbits.

Figure25-36

UpdatedresetvalueofENACLRandSCSCLRbits.

Figure25-38

Updatedresetvalueofbits.

Figure25-39

Updatedresetvalueofbits.

Figure25-43

UpdatedresetvalueofReservedbitsto8000h.

Table25-25

UpdatedValuecolumnofReservedbitsto8000h.

Section25.9.42

Changedsecondparagraph.

Figure25-72

UpdatedresetvalueofIOLPBKTSTENAbitto0.

Serial

Table27-5

UpdatedDescriptionofPOWERDOWNandCOMMMODEbits.

Communication

Figure27-28

CorrectedSCIPIO6registerbitnamesforbits2and1.

Interface(SCI)

Table27-29

CorrectedSCIPIO6registerbitnamesforbits2and1.

Module

1729

SPNU499B–November2012–RevisedAugust2013

RevisionHistory

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






AppendixAwww.ti.com

1730

RevisionHistory

SPNU499B–November2012–RevisedAugust2013

SubmitDocumentationFeedback

Copyright©2012–2013,TexasInstrumentsIncorporated






IMPORTANTNOTICE

TexasInstrumentsIncorporatedanditssubsidiaries(TI)reservetherighttomakecorrections,enhancements,improvementsandother

changestoitssemiconductorproductsandservicesperJESD46,latestissue,andtodiscontinueanyproductorserviceperJESD48,latest

issue.Buyersshouldobtainthelatestrelevantinformationbeforeplacingordersandshouldverifythatsuchinformationiscurrentand

complete.Allsemiconductorproducts(alsoreferredtohereinas“components”)aresoldsubjecttoTI’stermsandconditionsofsale

suppliedatthetimeoforderacknowledgment.

TIwarrantsperformanceofitscomponentstothespecificationsapplicableatthetimeofsale,inaccordancewiththewarrantyinTI’sterms

andconditionsofsaleofsemiconductorproducts.TestingandotherqualitycontroltechniquesareusedtotheextentTIdeemsnecessary

tosupportthiswarranty.Exceptwheremandatedbyapplicablelaw,testingofallparametersofeachcomponentisnotnecessarily

performed.

TIassumesnoliabilityforapplicationsassistanceorthedesignofBuyers’products.Buyersareresponsiblefortheirproductsand

applicationsusingTIcomponents.TominimizetherisksassociatedwithBuyers’productsandapplications,Buyersshouldprovide

adequatedesignandoperatingsafeguards.

TIdoesnotwarrantorrepresentthatanylicense,eitherexpressorimplied,isgrantedunderanypatentright,copyright,maskworkright,or

otherintellectualpropertyrightrelatingtoanycombination,machine,orprocessinwhichTIcomponentsorservicesareused.Information

publishedbyTIregardingthird-partyproductsorservicesdoesnotconstitutealicensetousesuchproductsorservicesorawarrantyor

endorsementthereof.Useofsuchinformationmayrequirealicensefromathirdpartyunderthepatentsorotherintellectualpropertyofthe

thirdparty,oralicensefromTIunderthepatentsorotherintellectualpropertyofTI.

ReproductionofsignificantportionsofTIinformationinTIdatabooksordatasheetsispermissibleonlyifreproductioniswithoutalteration

andisaccompaniedbyallassociatedwarranties,conditions,limitations,andnotices.TIisnotresponsibleorliableforsuchaltered

documentation.Informationofthirdpartiesmaybesubjecttoadditionalrestrictions.

ResaleofTIcomponentsorserviceswithstatementsdifferentfromorbeyondtheparametersstatedbyTIforthatcomponentorservice

voidsallexpressandanyimpliedwarrantiesfortheassociatedTIcomponentorserviceandisanunfairanddeceptivebusinesspractice.

TIisnotresponsibleorliableforanysuchstatements.

Buyeracknowledgesandagreesthatitissolelyresponsibleforcompliancewithalllegal,regulatoryandsafety-relatedrequirements

concerningitsproducts,andanyuseofTIcomponentsinitsapplications,notwithstandinganyapplications-relatedinformationorsupport

thatmaybeprovidedbyTI.Buyerrepresentsandagreesthatithasallthenecessaryexpertisetocreateandimplementsafeguardswhich

anticipatedangerousconsequencesoffailures,monitorfailuresandtheirconsequences,lessenthelikelihoodoffailuresthatmightcause

harmandtakeappropriateremedialactions.BuyerwillfullyindemnifyTIanditsrepresentativesagainstanydamagesarisingoutoftheuse

ofanyTIcomponentsinsafety-criticalapplications.

Insomecases,TIcomponentsmaybepromotedspecificallytofacilitatesafety-relatedapplications.Withsuchcomponents,TI’sgoalisto

helpenablecustomerstodesignandcreatetheirownend-productsolutionsthatmeetapplicablefunctionalsafetystandardsand

requirements.Nonetheless,suchcomponentsaresubjecttotheseterms.

NoTIcomponentsareauthorizedforuseinFDAClassIII(orsimilarlife-criticalmedicalequipment)unlessauthorizedofficersoftheparties

haveexecutedaspecialagreementspecificallygoverningsuchuse.

OnlythoseTIcomponentswhichTIhasspecificallydesignatedasmilitarygradeor“enhancedplastic”aredesignedandintendedforusein

military/aerospaceapplicationsorenvironments.BuyeracknowledgesandagreesthatanymilitaryoraerospaceuseofTIcomponents

whichhavenotbeensodesignatedissolelyattheBuyer'srisk,andthatBuyerissolelyresponsibleforcompliancewithalllegaland

regulatoryrequirementsinconnectionwithsuchuse.

TIhasspecificallydesignatedcertaincomponentsasmeetingISO/TS16949requirements,mainlyforautomotiveuse.Inanycaseofuseof

non-designatedproducts,TIwillnotberesponsibleforanyfailuretomeetISO/TS16949.

Products

Applications

Audio

www.ti.com/audio

AutomotiveandTransportation

www.ti.com/automotive

Amplifiers

amplifier.ti.com

CommunicationsandTelecom

www.ti.com/communications

DataConverters

dataconverter.ti.com

ComputersandPeripherals

www.ti.com/computers

DLP®Products

www.dlp.com

ConsumerElectronics

www.ti.com/consumer-apps

DSP

dsp.ti.com

EnergyandLighting

www.ti.com/energy

ClocksandTimers

www.ti.com/clocks

Industrial

www.ti.com/industrial

Interface

interface.ti.com

Medical

www.ti.com/medical

Logic

logic.ti.com

Security

www.ti.com/security

PowerMgmt

power.ti.com

Space,AvionicsandDefense

www.ti.com/space-avionics-defense

Microcontrollers

microcontroller.ti.com

VideoandImaging

www.ti.com/video

RFID

www.ti-rfid.com

OMAPApplicationsProcessors

www.ti.com/omap

TIE2ECommunity

e2e.ti.com

WirelessConnectivity

www.ti.com/wirelessconnectivity

MailingAddress:TexasInstruments,PostOfficeBox655303,Dallas,Texas75265

Copyright©2013,TexasInstrumentsIncorporated




